{
 "*": {
  "data": {
   "imports": [
    "skmultiflow.metrics"
   ]
  },
  "type": "star-import"
 },
 "__init__": {
  "data": {},
  "type": "module"
 },
 "skmultiflow": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.bayes": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.bayes.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "skmultiflow.bayes.naive_bayes": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.bayes.naive_bayes.NaiveBayes": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.bayes.naive_bayes.NaiveBayes.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.bayes.naive_bayes.NaiveBayes._partial_fit": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "len",
    "range",
    "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver",
    "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian"
   ]
  },
  "type": "function"
 },
 "skmultiflow.bayes.naive_bayes.NaiveBayes.fit": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "skmultiflow.bayes.naive_bayes.NaiveBayes.get_info": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.bayes.naive_bayes.NaiveBayes.partial_fit": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.ones",
    "range",
    "skmultiflow.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.bayes.naive_bayes.NaiveBayes.predict": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "collections.deque",
    "numpy.argmax",
    "numpy.array",
    "range",
    "skmultiflow.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.bayes.naive_bayes.NaiveBayes.predict_proba": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "collections.deque",
    "int",
    "max",
    "numpy.array",
    "numpy.zeros",
    "range",
    "skmultiflow.bayes.do_naive_bayes_prediction",
    "skmultiflow.utils.get_dimensions",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.bayes.naive_bayes.NaiveBayes.reset": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "skmultiflow.bayes.naive_bayes.NaiveBayes.score": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "sklearn.metrics.accuracy_score"
   ]
  },
  "type": "function"
 },
 "skmultiflow.bayes.naive_bayes.NominalAttributeClassObserver": {
  "data": {
   "shadows": "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver"
  },
  "type": "import"
 },
 "skmultiflow.bayes.naive_bayes.NumericAttributeClassObserverGaussian": {
  "data": {
   "shadows": "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian"
  },
  "type": "import"
 },
 "skmultiflow.bayes.naive_bayes.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.bayes.naive_bayes.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "skmultiflow.bayes.naive_bayes.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "skmultiflow.bayes.naive_bayes.do_naive_bayes_prediction": {
  "data": {
   "shadows": "skmultiflow.bayes.do_naive_bayes_prediction"
  },
  "type": "import"
 },
 "skmultiflow.bayes.naive_bayes.get_dimensions": {
  "data": {
   "shadows": "skmultiflow.utils.get_dimensions"
  },
  "type": "import"
 },
 "skmultiflow.bayes.naive_bayes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.bayes.utils": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.bayes.utils.do_naive_bayes_prediction": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "dict",
    "len",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.core.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "skmultiflow.core.base": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.core.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "skmultiflow.core.base.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.core.base.StreamModel": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.core.base.StreamModel.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.base.StreamModel.fit": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.base.StreamModel.get_class_type": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "skmultiflow.core.base.StreamModel.get_info": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.base.StreamModel.partial_fit": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.base.StreamModel.predict": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.base.StreamModel.predict_proba": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.base.StreamModel.reset": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.base.StreamModel.score": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "skmultiflow.core.base_object": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.core.base_object.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "skmultiflow.core.base_object.BaseObject": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "skmultiflow.core.base_object.BaseObject.get_class_type": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.base_object.BaseObject.get_info": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.base_object.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "skmultiflow.core.instance_header": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.core.instance_header.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.core.instance_header.InstanceHeader": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.core.instance_header.InstanceHeader.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.instance_header.InstanceHeader.get_class_type": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "skmultiflow.core.instance_header.InstanceHeader.get_header_label_at": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.instance_header.InstanceHeader.get_info": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.pipeline": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.core.pipeline.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.core.pipeline.Pipeline": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.core.pipeline.Pipeline.__configure": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "skmultiflow.core.pipeline.Pipeline.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sklearn.utils.tosequence",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.pipeline.Pipeline._final_estimator": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.pipeline.Pipeline._validate_steps": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.pipeline.Pipeline.fit": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.pipeline.Pipeline.get_class_type": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "skmultiflow.core.pipeline.Pipeline.get_info": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.pipeline.Pipeline.named_steps": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.pipeline.Pipeline.partial_fit": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.pipeline.Pipeline.partial_fit_predict": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.pipeline.Pipeline.partial_fit_transform": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.core.pipeline.Pipeline.predict": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "skmultiflow.core.pipeline.tosequence": {
  "data": {
   "shadows": "sklearn.utils.tosequence"
  },
  "type": "import"
 },
 "skmultiflow.data": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "skmultiflow.data.agrawal_generator": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.__configure": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.balance_classes": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.classification_function_eight": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.classification_function_five": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.classification_function_four": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.classification_function_idx": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.classification_function_nine": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.classification_function_one": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.classification_function_seven": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.classification_function_six": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.classification_function_three": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.classification_function_two": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.classification_function_zero": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.generate_drift": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.get_info": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.next_sample": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "eval",
    "numpy.round",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.perturb_value": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.perturbation": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.AGRAWALGenerator.prepare_for_use": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.agrawal_generator.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.agrawal_generator.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.agrawal_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.base_stream": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.base_stream.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "skmultiflow.data.base_stream.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.data.base_stream.Stream": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.base_stream.Stream.__init__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.feature_names": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.get_class_type": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.get_data_info": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.has_more_samples": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.is_restartable": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.last_sample": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.n_cat_features": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.n_features": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.n_num_features": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.n_remaining_samples": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.n_targets": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.next_sample": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.prepare_for_use": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.random_state": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.restart": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.target_names": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.Stream.target_values": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "skmultiflow.data.base_stream.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "skmultiflow.data.concept_drift_stream": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.concept_drift_stream.AGRAWALGenerator": {
  "data": {
   "shadows": "skmultiflow.data.AGRAWALGenerator"
  },
  "type": "import"
 },
 "skmultiflow.data.concept_drift_stream.ConceptDriftStream": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.concept_drift_stream.ConceptDriftStream.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.pi",
    "numpy.tan",
    "range",
    "skmultiflow.data.AGRAWALGenerator",
    "skmultiflow.data.concept_drift_stream.ConceptDriftStream",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.concept_drift_stream.ConceptDriftStream.get_info": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.concept_drift_stream.ConceptDriftStream.has_more_samples": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "skmultiflow.data.concept_drift_stream.ConceptDriftStream.is_restartable": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "skmultiflow.data.concept_drift_stream.ConceptDriftStream.n_remaining_samples": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "skmultiflow.data.concept_drift_stream.ConceptDriftStream.next_sample": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "float",
    "numpy.exp",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.concept_drift_stream.ConceptDriftStream.prepare_for_use": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.concept_drift_stream.ConceptDriftStream.restart": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.concept_drift_stream.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.concept_drift_stream.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.concept_drift_stream.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.data_stream": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.data_stream.DataStream": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.data_stream.DataStream.X": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray",
    "pandas.DataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.__configure": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream._get_target_values": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "float",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream._load_X_y": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "max",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.unique",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream._load_data": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "max",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.cat_features_idx": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.data": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.get_data_info": {
  "data": {
   "lineno": 391
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.get_info": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.has_more_samples": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.n_remaining_samples": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.n_targets": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.next_sample": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.prepare_for_use": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.print_df": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.restart": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.target_idx": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.DataStream.y": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.ndarray",
    "pandas.DataFrame",
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.data_stream.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.data_stream.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.data_stream.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "skmultiflow.data.file_stream": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.file_stream.FileStream": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.file_stream.FileStream.__configure": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "pandas.read_csv",
    "skmultiflow.data.file_stream.os"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.FileStream.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.FileStream._load_data": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "FileNotFoundError",
    "IndexError",
    "ValueError",
    "any",
    "len",
    "max",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.FileStream.cat_features_idx": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.FileStream.get_data_info": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.FileStream.get_info": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.FileStream.get_target_values": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "float",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.FileStream.has_more_samples": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.FileStream.n_remaining_samples": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.FileStream.n_targets": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.FileStream.next_sample": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.FileStream.prepare_for_use": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.FileStream.print_df": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.FileStream.restart": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.FileStream.target_idx": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "skmultiflow.data.file_stream.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.file_stream.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.file_stream.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "skmultiflow.data.file_stream.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "skmultiflow.data.hyper_plane_generator": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.hyper_plane_generator.HyperplaneGenerator": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.hyper_plane_generator.HyperplaneGenerator.__configure": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.hyper_plane_generator.HyperplaneGenerator.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.hyper_plane_generator.HyperplaneGenerator._generate_drift": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "float",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.hyper_plane_generator.HyperplaneGenerator.get_info": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.hyper_plane_generator.HyperplaneGenerator.mag_change": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.hyper_plane_generator.HyperplaneGenerator.n_drift_features": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "skmultiflow.data.hyper_plane_generator.HyperplaneGenerator.next_sample": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.zeros",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.hyper_plane_generator.HyperplaneGenerator.noise_percentage": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.hyper_plane_generator.HyperplaneGenerator.prepare_for_use": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "range",
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.hyper_plane_generator.HyperplaneGenerator.sigma_percentage": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.hyper_plane_generator.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.hyper_plane_generator.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.hyper_plane_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.led_generator": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.led_generator.LEDGenerator": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.array",
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.led_generator.LEDGenerator.__configure": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "range",
    "skmultiflow.utils.check_random_state",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.led_generator.LEDGenerator.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.led_generator.LEDGenerator.get_data_info": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "skmultiflow.data.led_generator.LEDGenerator.get_info": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.led_generator.LEDGenerator.has_noise": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.led_generator.LEDGenerator.next_sample": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "int",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.led_generator.LEDGenerator.noise_percentage": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.led_generator.LEDGenerator.prepare_for_use": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.led_generator.LEDGenerator.restart": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "skmultiflow.data.led_generator.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.led_generator.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.led_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.led_generator_drift": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.led_generator_drift.LEDGenerator": {
  "data": {
   "shadows": "skmultiflow.data.led_generator.LEDGenerator"
  },
  "type": "import"
 },
 "skmultiflow.data.led_generator_drift.LEDGeneratorDrift": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "int",
    "numpy.zeros",
    "skmultiflow.data.led_generator.LEDGenerator"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.led_generator_drift.LEDGeneratorDrift.__configure": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.led_generator_drift.LEDGeneratorDrift.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.led_generator_drift.LEDGeneratorDrift.get_data_info": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "skmultiflow.data.led_generator_drift.LEDGeneratorDrift.get_info": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.led_generator_drift.LEDGeneratorDrift.next_sample": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "int",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.led_generator_drift.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.mixed_generator": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.mixed_generator.MIXEDGenerator": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.mixed_generator.MIXEDGenerator.__configure": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.mixed_generator.MIXEDGenerator.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.mixed_generator.MIXEDGenerator.balance_classes": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.mixed_generator.MIXEDGenerator.classification_function_idx": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.mixed_generator.MIXEDGenerator.classification_function_one": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.mixed_generator.MIXEDGenerator.classification_function_zero": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.mixed_generator.MIXEDGenerator.generate_drift": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "skmultiflow.data.mixed_generator.MIXEDGenerator.get_info": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.mixed_generator.MIXEDGenerator.next_sample": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.mixed_generator.MIXEDGenerator.prepare_for_use": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.mixed_generator.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.mixed_generator.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.mixed_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.multilabel_generator": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.multilabel_generator.MultilabelGenerator": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.multilabel_generator.MultilabelGenerator.__configure": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "numpy.unique",
    "range",
    "sklearn.datasets.make_multilabel_classification",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.multilabel_generator.MultilabelGenerator.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.multilabel_generator.MultilabelGenerator.get_info": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.multilabel_generator.MultilabelGenerator.n_remaining_samples": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "skmultiflow.data.multilabel_generator.MultilabelGenerator.next_sample": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.multilabel_generator.MultilabelGenerator.prepare_for_use": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "skmultiflow.data.multilabel_generator.MultilabelGenerator.restart": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "skmultiflow.data.multilabel_generator.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.multilabel_generator.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.multilabel_generator.make_multilabel_classification": {
  "data": {
   "shadows": "sklearn.datasets.make_multilabel_classification"
  },
  "type": "import"
 },
 "skmultiflow.data.multilabel_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.pseudo_random_processes": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.pseudo_random_processes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.pseudo_random_processes.random_index_based_on_weights": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "len",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_rbf_generator": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.random_rbf_generator.Centroid": {
  "data": {
   "lineno": 187
  },
  "type": "class"
 },
 "skmultiflow.data.random_rbf_generator.Centroid.__init__": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "skmultiflow.data.random_rbf_generator.RandomRBFGenerator": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.random_rbf_generator.RandomRBFGenerator.__configure": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_rbf_generator.RandomRBFGenerator.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_rbf_generator.RandomRBFGenerator.generate_centroids": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "Centroid",
    "range",
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_rbf_generator.RandomRBFGenerator.get_info": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_rbf_generator.RandomRBFGenerator.next_sample": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.zeros",
    "range",
    "skmultiflow.data.pseudo_random_processes.random_index_based_on_weights"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_rbf_generator.RandomRBFGenerator.prepare_for_use": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_rbf_generator.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.random_rbf_generator.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.random_rbf_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.random_rbf_generator.prp": {
  "data": {
   "shadows": "skmultiflow.data.pseudo_random_processes"
  },
  "type": "import"
 },
 "skmultiflow.data.random_rbf_generator_drift": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.random_rbf_generator_drift.RandomRBFGenerator": {
  "data": {
   "shadows": "skmultiflow.data.random_rbf_generator.RandomRBFGenerator"
  },
  "type": "import"
 },
 "skmultiflow.data.random_rbf_generator_drift.RandomRBFGeneratorDrift": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.data.random_rbf_generator.RandomRBFGenerator"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.random_rbf_generator_drift.RandomRBFGeneratorDrift.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_rbf_generator_drift.RandomRBFGeneratorDrift.generate_centroids": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.sqrt",
    "range",
    "skmultiflow.utils.check_random_state",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_rbf_generator_drift.RandomRBFGeneratorDrift.get_info": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_rbf_generator_drift.RandomRBFGeneratorDrift.next_sample": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.append",
    "numpy.zeros",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_rbf_generator_drift.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.random_rbf_generator_drift.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.random_tree_generator": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.random_tree_generator.Node": {
  "data": {
   "lineno": 388
  },
  "type": "class"
 },
 "skmultiflow.data.random_tree_generator.Node.__init__": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "skmultiflow.data.random_tree_generator.RandomTreeGenerator": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.random_tree_generator.RandomTreeGenerator.__configure": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_tree_generator.RandomTreeGenerator.__get_integer_nominal_attribute_representation": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "int",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_tree_generator.RandomTreeGenerator.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_tree_generator.RandomTreeGenerator.classify_instance": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_tree_generator.RandomTreeGenerator.generate_random_tree": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "array.array",
    "range",
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_tree_generator.RandomTreeGenerator.generate_random_tree_node": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "Node",
    "array.array",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_tree_generator.RandomTreeGenerator.get_info": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_tree_generator.RandomTreeGenerator.has_more_samples": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "skmultiflow.data.random_tree_generator.RandomTreeGenerator.n_remaining_samples": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "skmultiflow.data.random_tree_generator.RandomTreeGenerator.next_sample": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.ravel",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_tree_generator.RandomTreeGenerator.prepare_for_use": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.random_tree_generator.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.random_tree_generator.array": {
  "data": {
   "shadows": "array.array"
  },
  "type": "import"
 },
 "skmultiflow.data.random_tree_generator.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.random_tree_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.regression_generator": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.regression_generator.RegressionGenerator": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.regression_generator.RegressionGenerator.__configure": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "float",
    "range",
    "sklearn.datasets.make_regression",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.regression_generator.RegressionGenerator.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.regression_generator.RegressionGenerator.get_data_info": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "skmultiflow.data.regression_generator.RegressionGenerator.get_info": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.regression_generator.RegressionGenerator.has_more_samples": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "skmultiflow.data.regression_generator.RegressionGenerator.n_remaining_samples": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "skmultiflow.data.regression_generator.RegressionGenerator.next_sample": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.regression_generator.RegressionGenerator.prepare_for_use": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "skmultiflow.data.regression_generator.RegressionGenerator.restart": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "skmultiflow.data.regression_generator.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.regression_generator.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.regression_generator.make_regression": {
  "data": {
   "shadows": "sklearn.datasets.make_regression"
  },
  "type": "import"
 },
 "skmultiflow.data.sea_generator": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.sea_generator.SEAGenerator": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.sea_generator.SEAGenerator.__configure": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sea_generator.SEAGenerator.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sea_generator.SEAGenerator.balance_classes": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sea_generator.SEAGenerator.classification_function_idx": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sea_generator.SEAGenerator.classification_function_one": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sea_generator.SEAGenerator.classification_function_three": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sea_generator.SEAGenerator.classification_function_two": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sea_generator.SEAGenerator.classification_function_zero": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sea_generator.SEAGenerator.generate_drift": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "skmultiflow.data.sea_generator.SEAGenerator.get_info": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sea_generator.SEAGenerator.next_sample": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sea_generator.SEAGenerator.noise_percentage": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sea_generator.SEAGenerator.prepare_for_use": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sea_generator.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.sea_generator.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.sea_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.sine_generator": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.sine_generator.SineGenerator": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.sine_generator.SineGenerator.__configure": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sine_generator.SineGenerator.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sine_generator.SineGenerator.balance_classes": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sine_generator.SineGenerator.classification_function_idx": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sine_generator.SineGenerator.classification_function_one": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "numpy.sin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sine_generator.SineGenerator.classification_function_three": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sine_generator.SineGenerator.classification_function_two": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "numpy.pi",
    "numpy.sin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sine_generator.SineGenerator.classification_function_zero": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "numpy.sin",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sine_generator.SineGenerator.generate_drift": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "skmultiflow.data.sine_generator.SineGenerator.get_info": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sine_generator.SineGenerator.has_noise": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sine_generator.SineGenerator.next_sample": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sine_generator.SineGenerator.prepare_for_use": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.sine_generator.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.sine_generator.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.sine_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.stagger_generator": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.stagger_generator.STAGGERGenerator": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.stagger_generator.STAGGERGenerator.__configure": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.stagger_generator.STAGGERGenerator.__init__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.stagger_generator.STAGGERGenerator.balance_classes": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.stagger_generator.STAGGERGenerator.classification_function_idx": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.stagger_generator.STAGGERGenerator.classification_function_one": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.stagger_generator.STAGGERGenerator.classification_function_two": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.stagger_generator.STAGGERGenerator.classification_function_zero": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.stagger_generator.STAGGERGenerator.generate_drift": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "skmultiflow.data.stagger_generator.STAGGERGenerator.get_info": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.stagger_generator.STAGGERGenerator.next_sample": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.stagger_generator.STAGGERGenerator.prepare_for_use": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.stagger_generator.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.stagger_generator.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.stagger_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.synth": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.synth.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.synth.make_logical": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.array",
    "numpy.tile",
    "numpy.zeros",
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.synth.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.data.waveform_generator": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.data.waveform_generator.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.data.waveform_generator.WaveformGenerator": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "numpy.array",
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "class"
 },
 "skmultiflow.data.waveform_generator.WaveformGenerator.__configure": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.waveform_generator.WaveformGenerator.__init__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.waveform_generator.WaveformGenerator.get_info": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.waveform_generator.WaveformGenerator.has_noise": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.waveform_generator.WaveformGenerator.next_sample": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.ravel",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.waveform_generator.WaveformGenerator.prepare_for_use": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.data.waveform_generator.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.data.waveform_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_adwin": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_adwin.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_adwin.ADWIN": {
  "data": {
   "shadows": "skmultiflow.drift_detection.ADWIN"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_adwin.demo": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.seed",
    "print",
    "range",
    "skmultiflow.drift_detection.ADWIN",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_adwin.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_comparison_holdout": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_comparison_holdout.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_comparison_holdout.EvaluateHoldout": {
  "data": {
   "shadows": "skmultiflow.evaluation.EvaluateHoldout"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_comparison_holdout.HoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.HoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_comparison_holdout.KNNAdwin": {
  "data": {
   "shadows": "skmultiflow.lazy.KNNAdwin"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_comparison_holdout.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_comparison_holdout.WaveformGenerator": {
  "data": {
   "shadows": "skmultiflow.data.WaveformGenerator"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_comparison_holdout.demo": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "skmultiflow.data.WaveformGenerator",
    "skmultiflow.evaluation.EvaluateHoldout",
    "skmultiflow.trees.HoeffdingTree"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_comparison_prequential": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_comparison_prequential.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_comparison_prequential.EvaluatePrequential": {
  "data": {
   "shadows": "skmultiflow.evaluation.EvaluatePrequential"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_comparison_prequential.FileStream": {
  "data": {
   "shadows": "skmultiflow.data.FileStream"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_comparison_prequential.KNNAdwin": {
  "data": {
   "shadows": "skmultiflow.lazy.KNNAdwin"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_comparison_prequential.OneHotToCategorical": {
  "data": {
   "shadows": "skmultiflow.transform.OneHotToCategorical"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_comparison_prequential.Pipeline": {
  "data": {
   "shadows": "skmultiflow.core.Pipeline"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_comparison_prequential.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_comparison_prequential.demo": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDClassifier",
    "skmultiflow.core.Pipeline",
    "skmultiflow.data.FileStream",
    "skmultiflow.evaluation.EvaluatePrequential",
    "skmultiflow.lazy.KNNAdwin",
    "skmultiflow.transform.OneHotToCategorical"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_file_cleaning": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_file_cleaning.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_file_cleaning._test_prequential": {
  "data": {
   "shadows": "skmultiflow.demos._test_prequential"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_file_cleaning.clean_header": {
  "data": {
   "shadows": "skmultiflow.utils.file_scripts.clean_header"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_file_cleaning.demo": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.demos._test_file_cleaning.logging",
    "skmultiflow.demos._test_prequential.demo",
    "skmultiflow.utils.file_scripts.clean_header"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_file_cleaning.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_file_stream": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_file_stream.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_file_stream.EvaluatePrequential": {
  "data": {
   "shadows": "skmultiflow.evaluation.EvaluatePrequential"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_file_stream.FileStream": {
  "data": {
   "shadows": "skmultiflow.data.FileStream"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_file_stream.HoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.HoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_file_stream.demo": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "skmultiflow.data.FileStream",
    "skmultiflow.evaluation.EvaluatePrequential",
    "skmultiflow.trees.HoeffdingTree"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_file_stream_multiple_cfier": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_file_stream_multiple_cfier.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_file_stream_multiple_cfier.EvaluatePrequential": {
  "data": {
   "shadows": "skmultiflow.evaluation.EvaluatePrequential"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_file_stream_multiple_cfier.FileStream": {
  "data": {
   "shadows": "skmultiflow.data.FileStream"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_file_stream_multiple_cfier.HoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.HoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_file_stream_multiple_cfier.LeverageBagging": {
  "data": {
   "shadows": "skmultiflow.meta.LeverageBagging"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_file_stream_multiple_cfier.SAMKNN": {
  "data": {
   "shadows": "skmultiflow.lazy.SAMKNN"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_file_stream_multiple_cfier.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_file_stream_multiple_cfier.demo": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDClassifier",
    "skmultiflow.demos._test_file_stream_multiple_cfier.demo_parameterized",
    "skmultiflow.lazy.SAMKNN",
    "skmultiflow.meta.LeverageBagging",
    "skmultiflow.trees.HoeffdingTree"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_file_stream_multiple_cfier.demo_parameterized": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "skmultiflow.data.FileStream",
    "skmultiflow.evaluation.EvaluatePrequential"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_filters": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_filters.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_filters.FileStream": {
  "data": {
   "shadows": "skmultiflow.data.file_stream.FileStream"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_filters.MissingValuesCleaner": {
  "data": {
   "shadows": "skmultiflow.transform.MissingValuesCleaner"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_filters.demo": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "filter",
    "filter.partial_fit_transform",
    "print",
    "range",
    "skmultiflow.data.file_stream.FileStream",
    "skmultiflow.transform.MissingValuesCleaner"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_generic": {
  "data": {
   "symbols_in_volume": [
    "print",
    "sklearn.naive_bayes.GaussianNB",
    "skmultiflow.bayes.NaiveBayes",
    "skmultiflow.data.FileStream",
    "skmultiflow.demos._test_generic.evaluator",
    "skmultiflow.demos._test_generic.metrics_0",
    "skmultiflow.demos._test_generic.nb",
    "skmultiflow.demos._test_generic.stream",
    "skmultiflow.evaluation.EvaluatePrequential",
    "skmultiflow.meta.LearnNSE",
    "skmultiflow.trees.HoeffdingTree"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_generic.EvaluatePrequential": {
  "data": {
   "shadows": "skmultiflow.evaluation.EvaluatePrequential"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_generic.FileStream": {
  "data": {
   "shadows": "skmultiflow.data.FileStream"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_generic.GaussianNB": {
  "data": {
   "shadows": "sklearn.naive_bayes.GaussianNB"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_generic.HoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.HoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_generic.LearnNSE": {
  "data": {
   "shadows": "skmultiflow.meta.LearnNSE"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_generic.NaiveBayes": {
  "data": {
   "shadows": "skmultiflow.bayes.NaiveBayes"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_generic.evaluator": {
  "data": {
   "lineno": 177
  },
  "type": "constant"
 },
 "skmultiflow.demos._test_generic.gnb": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "skmultiflow.demos._test_generic.ht": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "skmultiflow.demos._test_generic.lnse": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "skmultiflow.demos._test_generic.metrics_0": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "skmultiflow.demos._test_generic.metrics_1": {
  "data": {
   "lineno": 196
  },
  "type": "constant"
 },
 "skmultiflow.demos._test_generic.nb": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "skmultiflow.demos._test_generic.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_generic.stream": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "skmultiflow.demos._test_holdout": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_holdout.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_holdout.EvaluateHoldout": {
  "data": {
   "shadows": "skmultiflow.evaluation.EvaluateHoldout"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_holdout.Pipeline": {
  "data": {
   "shadows": "skmultiflow.core.Pipeline"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_holdout.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_holdout.WaveformGenerator": {
  "data": {
   "shadows": "skmultiflow.data.WaveformGenerator"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_holdout.demo": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDClassifier",
    "skmultiflow.core.Pipeline",
    "skmultiflow.data.WaveformGenerator",
    "skmultiflow.evaluation.EvaluateHoldout"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_kdtree_compare": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_kdtree_compare.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_kdtree_compare.FileStream": {
  "data": {
   "shadows": "skmultiflow.data.FileStream"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_kdtree_compare.KDTree": {
  "data": {
   "shadows": "skmultiflow.lazy.KDTree"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_kdtree_compare.OneHotToCategorical": {
  "data": {
   "shadows": "skmultiflow.transform.OneHotToCategorical"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_kdtree_compare.demo": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "filter",
    "filter.transform",
    "numpy.asarray",
    "print",
    "range",
    "scipy.spatial.KDTree",
    "sklearn.neighbors.KDTree",
    "skmultiflow.data.FileStream",
    "skmultiflow.demos._test_kdtree_compare.warnings",
    "skmultiflow.lazy.KDTree",
    "skmultiflow.transform.OneHotToCategorical",
    "str",
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_kdtree_compare.ng": {
  "data": {
   "shadows": "sklearn.neighbors"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_kdtree_compare.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_kdtree_compare.spatial": {
  "data": {
   "shadows": "scipy.spatial"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_kdtree_compare.timer": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_kdtree_compare.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_knn": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_knn.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_knn.FileStream": {
  "data": {
   "shadows": "skmultiflow.data.FileStream"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_knn.KNN": {
  "data": {
   "shadows": "skmultiflow.lazy.KNN"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_knn.demo": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "print",
    "skmultiflow.data.FileStream",
    "skmultiflow.lazy.KNN",
    "str",
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_knn.timer": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_knn_adwin": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_knn_adwin.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_knn_adwin.FileStream": {
  "data": {
   "shadows": "skmultiflow.data.FileStream"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_knn_adwin.KNNAdwin": {
  "data": {
   "shadows": "skmultiflow.lazy.KNNAdwin"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_knn_adwin.KNeighborsClassifier": {
  "data": {
   "shadows": "sklearn.neighbors.classification.KNeighborsClassifier"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_knn_adwin.OneHotToCategorical": {
  "data": {
   "shadows": "skmultiflow.transform.OneHotToCategorical"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_knn_adwin.demo": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "print",
    "sklearn.neighbors.classification.KNeighborsClassifier",
    "skmultiflow.data.FileStream",
    "skmultiflow.demos._test_knn_adwin.logging",
    "skmultiflow.lazy.KNNAdwin",
    "skmultiflow.transform.OneHotToCategorical",
    "str",
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_knn_adwin.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_knn_adwin.timer": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_leverage_bagging": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_leverage_bagging.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_leverage_bagging.KNN": {
  "data": {
   "shadows": "skmultiflow.lazy.KNN"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_leverage_bagging.LeverageBagging": {
  "data": {
   "shadows": "skmultiflow.meta.LeverageBagging"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_leverage_bagging.SEAGenerator": {
  "data": {
   "shadows": "skmultiflow.data.SEAGenerator"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_leverage_bagging.demo": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "print",
    "skmultiflow.data.SEAGenerator",
    "skmultiflow.demos._test_leverage_bagging.logging",
    "skmultiflow.demos._test_leverage_bagging.warnings",
    "skmultiflow.lazy.KNN",
    "skmultiflow.meta.LeverageBagging",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_leverage_bagging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_leverage_bagging.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_mol": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_mol.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_mol.FileStream": {
  "data": {
   "shadows": "skmultiflow.data.FileStream"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_mol.MultiOutputLearner": {
  "data": {
   "shadows": "skmultiflow.meta.MultiOutputLearner"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_mol.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.perceptron.Perceptron"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_mol.Pipeline": {
  "data": {
   "shadows": "skmultiflow.core.Pipeline"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_mol.demo": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "hamming_score",
    "list",
    "set",
    "sklearn.linear_model.perceptron.Perceptron",
    "skmultiflow.core.Pipeline",
    "skmultiflow.data.FileStream",
    "skmultiflow.demos._test_mol.logging",
    "skmultiflow.meta.MultiOutputLearner",
    "str",
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_mol.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_mol.timer": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_oza_bagging": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_oza_bagging.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_oza_bagging.KNNAdwin": {
  "data": {
   "shadows": "skmultiflow.lazy.KNNAdwin"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_oza_bagging.OzaBagging": {
  "data": {
   "shadows": "skmultiflow.meta.OzaBagging"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_oza_bagging.SEAGenerator": {
  "data": {
   "shadows": "skmultiflow.data.SEAGenerator"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_oza_bagging.demo": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "print",
    "skmultiflow.data.SEAGenerator",
    "skmultiflow.demos._test_oza_bagging.logging",
    "skmultiflow.demos._test_oza_bagging.warnings",
    "skmultiflow.lazy.KNNAdwin",
    "skmultiflow.meta.OzaBagging",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_oza_bagging.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_oza_bagging.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_oza_bagging_adwin": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_oza_bagging_adwin.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_oza_bagging_adwin.KNNAdwin": {
  "data": {
   "shadows": "skmultiflow.lazy.KNNAdwin"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_oza_bagging_adwin.OzaBaggingAdwin": {
  "data": {
   "shadows": "skmultiflow.meta.OzaBaggingAdwin"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_oza_bagging_adwin.SEAGenerator": {
  "data": {
   "shadows": "skmultiflow.data.SEAGenerator"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_oza_bagging_adwin.demo": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "print",
    "skmultiflow.data.SEAGenerator",
    "skmultiflow.demos._test_oza_bagging_adwin.logging",
    "skmultiflow.demos._test_oza_bagging_adwin.warnings",
    "skmultiflow.lazy.KNNAdwin",
    "skmultiflow.meta.OzaBaggingAdwin",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_oza_bagging_adwin.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_oza_bagging_adwin.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_pipeline": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_pipeline.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_pipeline.EvaluatePrequential": {
  "data": {
   "shadows": "skmultiflow.evaluation.EvaluatePrequential"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_pipeline.HoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.HoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_pipeline.Pipeline": {
  "data": {
   "shadows": "skmultiflow.core.Pipeline"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_pipeline.WaveformGenerator": {
  "data": {
   "shadows": "skmultiflow.data.WaveformGenerator"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_pipeline.demo": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "skmultiflow.core.Pipeline",
    "skmultiflow.data.WaveformGenerator",
    "skmultiflow.evaluation.EvaluatePrequential",
    "skmultiflow.trees.HoeffdingTree"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_prequential": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_prequential.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_prequential.EvaluatePrequential": {
  "data": {
   "shadows": "skmultiflow.evaluation.evaluate_prequential.EvaluatePrequential"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_prequential.FileStream": {
  "data": {
   "shadows": "skmultiflow.data.file_stream.FileStream"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_prequential.PassiveAggressiveClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_prequential.Pipeline": {
  "data": {
   "shadows": "skmultiflow.core.pipeline.Pipeline"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_prequential.demo": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier",
    "skmultiflow.core.pipeline.Pipeline",
    "skmultiflow.data.file_stream.FileStream",
    "skmultiflow.evaluation.evaluate_prequential.EvaluatePrequential"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_prequential_bagging": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_prequential_bagging.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_prequential_bagging.EvaluatePrequential": {
  "data": {
   "shadows": "skmultiflow.evaluation.EvaluatePrequential"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_prequential_bagging.HoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.HoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_prequential_bagging.LeverageBagging": {
  "data": {
   "shadows": "skmultiflow.meta.LeverageBagging"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_prequential_bagging.WaveformGenerator": {
  "data": {
   "shadows": "skmultiflow.data.WaveformGenerator"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_prequential_bagging.demo": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "skmultiflow.data.WaveformGenerator",
    "skmultiflow.evaluation.EvaluatePrequential",
    "skmultiflow.meta.LeverageBagging",
    "skmultiflow.trees.HoeffdingTree"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_prequential_mol": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_prequential_mol.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_prequential_mol.EvaluatePrequential": {
  "data": {
   "shadows": "skmultiflow.evaluation.evaluate_prequential.EvaluatePrequential"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_prequential_mol.MultiOutputLearner": {
  "data": {
   "shadows": "skmultiflow.meta.multi_output_learner.MultiOutputLearner"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_prequential_mol.MultilabelGenerator": {
  "data": {
   "shadows": "skmultiflow.data.multilabel_generator.MultilabelGenerator"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_prequential_mol.Pipeline": {
  "data": {
   "shadows": "skmultiflow.core.pipeline.Pipeline"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_prequential_mol.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.stochastic_gradient.SGDClassifier"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_prequential_mol.demo": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "sklearn.linear_model.stochastic_gradient.SGDClassifier",
    "skmultiflow.core.pipeline.Pipeline",
    "skmultiflow.data.multilabel_generator.MultilabelGenerator",
    "skmultiflow.evaluation.evaluate_prequential.EvaluatePrequential",
    "skmultiflow.meta.multi_output_learner.MultiOutputLearner"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_regression": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_regression.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_regression.EvaluatePrequential": {
  "data": {
   "shadows": "skmultiflow.evaluation.evaluate_prequential.EvaluatePrequential"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_regression.Pipeline": {
  "data": {
   "shadows": "skmultiflow.core.pipeline.Pipeline"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_regression.RegressionGenerator": {
  "data": {
   "shadows": "skmultiflow.data.regression_generator.RegressionGenerator"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_regression.RegressionHoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_regression.demo": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "skmultiflow.core.pipeline.Pipeline",
    "skmultiflow.data.regression_generator.RegressionGenerator",
    "skmultiflow.evaluation.evaluate_prequential.EvaluatePrequential",
    "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_sam_knn": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.data.FileStream",
    "skmultiflow.demos._test_sam_knn.hyperParams",
    "skmultiflow.demos._test_sam_knn.logging",
    "skmultiflow.demos._test_sam_knn.run",
    "skmultiflow.demos._test_sam_knn.stream"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_sam_knn.FileStream": {
  "data": {
   "shadows": "skmultiflow.data.FileStream"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_sam_knn.SAMKNN": {
  "data": {
   "shadows": "skmultiflow.lazy.SAMKNN"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_sam_knn.accuracy_score": {
  "data": {
   "shadows": "sklearn.metrics.accuracy_score"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_sam_knn.get_dimensions": {
  "data": {
   "shadows": "skmultiflow.utils.utils.get_dimensions"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_sam_knn.hyperParams": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "skmultiflow.demos._test_sam_knn.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_sam_knn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_sam_knn.run": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.asarray",
    "range",
    "sklearn.metrics.accuracy_score",
    "skmultiflow.demos._test_sam_knn.logging",
    "skmultiflow.lazy.SAMKNN",
    "skmultiflow.utils.utils.get_dimensions",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_sam_knn.stream": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "skmultiflow.demos._test_sam_knn_prequential": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_sam_knn_prequential.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_sam_knn_prequential.EvaluatePrequential": {
  "data": {
   "shadows": "skmultiflow.evaluation.EvaluatePrequential"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_sam_knn_prequential.FileStream": {
  "data": {
   "shadows": "skmultiflow.data.FileStream"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_sam_knn_prequential.SAMKNN": {
  "data": {
   "shadows": "skmultiflow.lazy.SAMKNN"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_sam_knn_prequential.demo": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.data.FileStream",
    "skmultiflow.evaluation.EvaluatePrequential",
    "skmultiflow.lazy.SAMKNN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_stream_speed": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_stream_speed.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_stream_speed.EvaluateStreamGenerationSpeed": {
  "data": {
   "shadows": "skmultiflow.evaluation.evaluate_stream_gen_speed.EvaluateStreamGenerationSpeed"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_stream_speed.RandomRBFGeneratorDrift": {
  "data": {
   "shadows": "skmultiflow.data.RandomRBFGeneratorDrift"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_stream_speed.demo": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "float",
    "skmultiflow.data.RandomRBFGeneratorDrift",
    "skmultiflow.evaluation.evaluate_stream_gen_speed.EvaluateStreamGenerationSpeed"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_streams": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_streams.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_streams.FileStream": {
  "data": {
   "shadows": "skmultiflow.data.FileStream"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_streams.RandomRBFGeneratorDrift": {
  "data": {
   "shadows": "skmultiflow.data.RandomRBFGeneratorDrift"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_streams.SEAGenerator": {
  "data": {
   "shadows": "skmultiflow.data.SEAGenerator"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_streams.demo": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "print",
    "skmultiflow.data.FileStream",
    "skmultiflow.data.RandomRBFGeneratorDrift",
    "skmultiflow.data.SEAGenerator"
   ]
  },
  "type": "function"
 },
 "skmultiflow.demos._test_trees": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.demos._test_trees.demo"
   ]
  },
  "type": "module"
 },
 "skmultiflow.demos._test_trees.AdaptiveRandomForest": {
  "data": {
   "shadows": "skmultiflow.meta.AdaptiveRandomForest"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_trees.EvaluatePrequential": {
  "data": {
   "shadows": "skmultiflow.evaluation.EvaluatePrequential"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_trees.FileStream": {
  "data": {
   "shadows": "skmultiflow.data.FileStream"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_trees.HAT": {
  "data": {
   "shadows": "skmultiflow.trees.HAT"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_trees.HoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.HoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_trees.LEDGenerator": {
  "data": {
   "shadows": "skmultiflow.data.LEDGenerator"
  },
  "type": "import"
 },
 "skmultiflow.demos._test_trees.demo": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "print",
    "range",
    "skmultiflow.data.FileStream",
    "skmultiflow.evaluation.EvaluatePrequential",
    "skmultiflow.meta.AdaptiveRandomForest",
    "skmultiflow.trees.HoeffdingTree"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.drift_detection.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "skmultiflow.drift_detection.adwin": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.drift_detection.adwin.ADWIN": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector"
   ]
  },
  "type": "class"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.__bln_cut_expression": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "numpy.absolute",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.__compress_buckets": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.__init__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.__init_buckets": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "List"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.__insert_element_bucket": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN._bucket_used_bucket": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.add_element": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.bucket_size": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "numpy.power",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.delete_element": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.detected_change": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.detected_warning_zone": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.estimation": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.get_change": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.get_info": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.n_detections": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.reset": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.reset_change": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.set_clock": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.total": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.variance": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.width": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.ADWIN.width_t": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.BaseDriftDetector": {
  "data": {
   "shadows": "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector"
  },
  "type": "import"
 },
 "skmultiflow.drift_detection.adwin.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.drift_detection.adwin.Item": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.drift_detection.adwin.Item.__clear_buckets": {
  "data": {
   "lineno": 488
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.__init__": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "float",
    "numpy.zeros",
    "skmultiflow.drift_detection.adwin.ADWIN",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.compress_bucket_row": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "range",
    "skmultiflow.drift_detection.adwin.ADWIN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.get_class_type": {
  "data": {
   "lineno": 541
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.get_info": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.get_next_item": {
  "data": {
   "lineno": 511
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.get_previous": {
  "data": {
   "lineno": 517
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.get_total": {
  "data": {
   "lineno": 523
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.get_variance": {
  "data": {
   "lineno": 526
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.insert_bucket": {
  "data": {
   "lineno": 492
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.remove_bucket": {
  "data": {
   "lineno": 498
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.reset": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "range",
    "skmultiflow.drift_detection.adwin.ADWIN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.set_next_item": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.set_previous": {
  "data": {
   "lineno": 520
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.set_total": {
  "data": {
   "lineno": 529
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.Item.set_variance": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.List": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.drift_detection.adwin.List.__init__": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.List.add_to_head": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "Item"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.List.add_to_tail": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "Item"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.List.first": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.List.get_class_type": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.List.get_info": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.List.last": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.List.remove_from_head": {
  "data": {
   "lineno": 403
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.List.remove_from_tail": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.List.reset": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.List.size": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.adwin.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.drift_detection.base_drift_detector": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.drift_detection.base_drift_detector.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector.add_element": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector.detected_change": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector.detected_warning_zone": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector.get_class_type": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector.get_info": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector.get_length_estimation": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector.reset": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.base_drift_detector.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.drift_detection.base_drift_detector.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "skmultiflow.drift_detection.ddm": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.drift_detection.ddm.BaseDriftDetector": {
  "data": {
   "shadows": "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector"
  },
  "type": "import"
 },
 "skmultiflow.drift_detection.ddm.DDM": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector"
   ]
  },
  "type": "class"
 },
 "skmultiflow.drift_detection.ddm.DDM.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.ddm.DDM.add_element": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "float",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.ddm.DDM.get_info": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.ddm.DDM.reset": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.ddm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.drift_detection.eddm": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.drift_detection.eddm.BaseDriftDetector": {
  "data": {
   "shadows": "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector"
  },
  "type": "import"
 },
 "skmultiflow.drift_detection.eddm.EDDM": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector"
   ]
  },
  "type": "class"
 },
 "skmultiflow.drift_detection.eddm.EDDM.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.eddm.EDDM.add_element": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "float",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.eddm.EDDM.get_info": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.eddm.EDDM.reset": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.eddm.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.drift_detection.page_hinkley": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.drift_detection.page_hinkley.BaseDriftDetector": {
  "data": {
   "shadows": "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector"
  },
  "type": "import"
 },
 "skmultiflow.drift_detection.page_hinkley.PageHinkley": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector"
   ]
  },
  "type": "class"
 },
 "skmultiflow.drift_detection.page_hinkley.PageHinkley.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.page_hinkley.PageHinkley.add_element": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "float",
    "max"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.page_hinkley.PageHinkley.get_info": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.drift_detection.page_hinkley.PageHinkley.reset": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.evaluation.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "skmultiflow.evaluation.base_evaluator": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.evaluation.base_evaluator.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.ClassificationMeasurements": {
  "data": {
   "shadows": "skmultiflow.metrics.ClassificationMeasurements"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.EvaluationVisualizer": {
  "data": {
   "shadows": "skmultiflow.visualization.evaluation_visualizer.EvaluationVisualizer"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.MultiTargetClassificationMeasurements": {
  "data": {
   "shadows": "skmultiflow.metrics.MultiTargetClassificationMeasurements"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.MultiTargetRegressionMeasurements": {
  "data": {
   "shadows": "skmultiflow.metrics.MultiTargetRegressionMeasurements"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.RegressionMeasurements": {
  "data": {
   "shadows": "skmultiflow.metrics.RegressionMeasurements"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.RunningTimeMeasurements": {
  "data": {
   "shadows": "skmultiflow.metrics.RunningTimeMeasurements"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.Stream": {
  "data": {
   "shadows": "skmultiflow.data.base_stream.Stream"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator._check_configuration": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "set",
    "skmultiflow.data.base_stream.Stream",
    "skmultiflow.utils.constants.CLASSIFICATION",
    "skmultiflow.utils.constants.CLASSIFICATION_METRICS",
    "skmultiflow.utils.constants.MULTI_OUTPUT",
    "skmultiflow.utils.constants.MULTI_TARGET_CLASSIFICATION",
    "skmultiflow.utils.constants.MULTI_TARGET_CLASSIFICATION_METRICS",
    "skmultiflow.utils.constants.MULTI_TARGET_REGRESSION",
    "skmultiflow.utils.constants.MULTI_TARGET_REGRESSION_METRICS",
    "skmultiflow.utils.constants.PLOT_TYPES",
    "skmultiflow.utils.constants.REGRESSION",
    "skmultiflow.utils.constants.REGRESSION_METRICS",
    "skmultiflow.utils.constants.SINGLE_OUTPUT",
    "skmultiflow.utils.constants.UNDEFINED"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator._check_progress": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "print",
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator._flush_file_buffer": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator._init_evaluation": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "range",
    "skmultiflow.data.base_stream.Stream"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator._init_file": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "hasattr",
    "open",
    "range",
    "skmultiflow.utils.constants.ACCURACY",
    "skmultiflow.utils.constants.AMAE",
    "skmultiflow.utils.constants.AMSE",
    "skmultiflow.utils.constants.ARMSE",
    "skmultiflow.utils.constants.MAE",
    "skmultiflow.utils.constants.MODEL_SIZE",
    "skmultiflow.utils.constants.MSE",
    "skmultiflow.utils.constants.RUNNING_TIME",
    "skmultiflow.utils.constants.TRUE_VS_PREDICTED"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator._init_metrics": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "EvaluationDataBuffer",
    "range",
    "skmultiflow.metrics.ClassificationMeasurements",
    "skmultiflow.metrics.MultiTargetClassificationMeasurements",
    "skmultiflow.metrics.MultiTargetRegressionMeasurements",
    "skmultiflow.metrics.RegressionMeasurements",
    "skmultiflow.metrics.RunningTimeMeasurements",
    "skmultiflow.metrics.WindowClassificationMeasurements",
    "skmultiflow.metrics.WindowMultiTargetClassificationMeasurements",
    "skmultiflow.metrics.WindowMultiTargetRegressionMeasurements",
    "skmultiflow.metrics.WindowRegressionMeasurements",
    "skmultiflow.utils.constants.CLASSIFICATION",
    "skmultiflow.utils.constants.CURRENT",
    "skmultiflow.utils.constants.DATA_POINTS",
    "skmultiflow.utils.constants.MEAN",
    "skmultiflow.utils.constants.MODEL_SIZE",
    "skmultiflow.utils.constants.MULTI_TARGET_CLASSIFICATION",
    "skmultiflow.utils.constants.MULTI_TARGET_REGRESSION",
    "skmultiflow.utils.constants.REGRESSION",
    "skmultiflow.utils.constants.RUNNING_TIME",
    "skmultiflow.utils.constants.TRUE_VS_PREDICTED",
    "skmultiflow.utils.constants.Y_PRED",
    "skmultiflow.utils.constants.Y_TRUE"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator._init_plot": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "skmultiflow.visualization.evaluation_visualizer.EvaluationVisualizer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator._reset_globals": {
  "data": {
   "lineno": 590
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator._update_file": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "range",
    "skmultiflow.evaluation.base_evaluator.io",
    "skmultiflow.evaluation.base_evaluator.sys",
    "skmultiflow.utils.constants.CURRENT",
    "skmultiflow.utils.constants.MEAN",
    "skmultiflow.utils.constants.MODEL_SIZE",
    "skmultiflow.utils.constants.RUNNING_TIME",
    "skmultiflow.utils.constants.TRUE_VS_PREDICTED",
    "skmultiflow.utils.constants.Y_PRED",
    "skmultiflow.utils.constants.Y_TRUE",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator._update_metrics": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "ValueError",
    "range",
    "skmultiflow.utils.constants.ACCURACY",
    "skmultiflow.utils.constants.AMAE",
    "skmultiflow.utils.constants.AMSE",
    "skmultiflow.utils.constants.ARMSE",
    "skmultiflow.utils.constants.CURRENT",
    "skmultiflow.utils.constants.DATA_POINTS",
    "skmultiflow.utils.constants.EXACT_MATCH",
    "skmultiflow.utils.constants.HAMMING_LOSS",
    "skmultiflow.utils.constants.HAMMING_SCORE",
    "skmultiflow.utils.constants.J_INDEX",
    "skmultiflow.utils.constants.KAPPA",
    "skmultiflow.utils.constants.KAPPA_M",
    "skmultiflow.utils.constants.KAPPA_T",
    "skmultiflow.utils.constants.MAE",
    "skmultiflow.utils.constants.MEAN",
    "skmultiflow.utils.constants.MODEL_SIZE",
    "skmultiflow.utils.constants.MSE",
    "skmultiflow.utils.constants.RUNNING_TIME",
    "skmultiflow.utils.constants.TRUE_VS_PREDICTED",
    "skmultiflow.utils.constants.Y_PRED",
    "skmultiflow.utils.constants.Y_TRUE",
    "skmultiflow.utils.utils.calculate_object_size"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator._update_outputs": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator.evaluate": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator.evaluation_summary": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "print",
    "range",
    "skmultiflow.utils.constants.ACCURACY",
    "skmultiflow.utils.constants.AMAE",
    "skmultiflow.utils.constants.AMSE",
    "skmultiflow.utils.constants.ARMSE",
    "skmultiflow.utils.constants.EXACT_MATCH",
    "skmultiflow.utils.constants.HAMMING_LOSS",
    "skmultiflow.utils.constants.HAMMING_SCORE",
    "skmultiflow.utils.constants.J_INDEX",
    "skmultiflow.utils.constants.KAPPA",
    "skmultiflow.utils.constants.KAPPA_M",
    "skmultiflow.utils.constants.KAPPA_T",
    "skmultiflow.utils.constants.MAE",
    "skmultiflow.utils.constants.MEAN",
    "skmultiflow.utils.constants.MODEL_SIZE",
    "skmultiflow.utils.constants.MSE",
    "skmultiflow.utils.constants.RUNNING_TIME"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator.get_class_type": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator.get_current_measurements": {
  "data": {
   "lineno": 722
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator.get_info": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator.get_mean_measurements": {
  "data": {
   "lineno": 699
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator.get_measurements": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "IndexError",
    "print"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator.partial_fit": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator.predict": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator.set_params": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.StreamEvaluator.update_progress_bar": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "print",
    "round",
    "skmultiflow.evaluation.base_evaluator.sys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.base_evaluator.WindowClassificationMeasurements": {
  "data": {
   "shadows": "skmultiflow.metrics.WindowClassificationMeasurements"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.WindowMultiTargetClassificationMeasurements": {
  "data": {
   "shadows": "skmultiflow.metrics.WindowMultiTargetClassificationMeasurements"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.WindowMultiTargetRegressionMeasurements": {
  "data": {
   "shadows": "skmultiflow.metrics.WindowMultiTargetRegressionMeasurements"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.WindowRegressionMeasurements": {
  "data": {
   "shadows": "skmultiflow.metrics.WindowRegressionMeasurements"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.calculate_object_size": {
  "data": {
   "shadows": "skmultiflow.utils.utils.calculate_object_size"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.constants": {
  "data": {
   "shadows": "skmultiflow.utils.constants"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.base_evaluator.timer": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_holdout": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.evaluation.evaluate_holdout.EvaluateHoldout": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "skmultiflow.evaluation.base_evaluator.StreamEvaluator"
   ]
  },
  "type": "class"
 },
 "skmultiflow.evaluation.evaluate_holdout.EvaluateHoldout.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "skmultiflow.evaluation.evaluate_holdout.warnings",
    "skmultiflow.utils.constants.ACCURACY",
    "skmultiflow.utils.constants.KAPPA",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_holdout.EvaluateHoldout._periodic_holdout": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "BaseException",
    "KeyboardInterrupt",
    "TypeError",
    "len",
    "numpy.unique",
    "print",
    "range",
    "skmultiflow.utils.constants.CLASSIFICATION",
    "skmultiflow.utils.constants.MULTI_TARGET_CLASSIFICATION",
    "skmultiflow.utils.get_dimensions",
    "timeit.default_timer",
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_holdout.EvaluateHoldout.evaluate": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_holdout.EvaluateHoldout.get_info": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "skmultiflow.evaluation.evaluate_holdout.os",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_holdout.EvaluateHoldout.partial_fit": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_holdout.EvaluateHoldout.predict": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_holdout.EvaluateHoldout.set_params": {
  "data": {
   "lineno": 383
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_holdout.StreamEvaluator": {
  "data": {
   "shadows": "skmultiflow.evaluation.base_evaluator.StreamEvaluator"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_holdout.constants": {
  "data": {
   "shadows": "skmultiflow.utils.constants"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_holdout.get_dimensions": {
  "data": {
   "shadows": "skmultiflow.utils.get_dimensions"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_holdout.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_holdout.timer": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_holdout.unique": {
  "data": {
   "shadows": "numpy.unique"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_holdout.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_prequential": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.evaluation.evaluate_prequential.EvaluatePrequential": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "skmultiflow.evaluation.base_evaluator.StreamEvaluator"
   ]
  },
  "type": "class"
 },
 "skmultiflow.evaluation.evaluate_prequential.EvaluatePrequential.__init__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "float",
    "skmultiflow.evaluation.evaluate_prequential.warnings",
    "skmultiflow.utils.constants.ACCURACY",
    "skmultiflow.utils.constants.DATA_POINTS",
    "skmultiflow.utils.constants.KAPPA",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_prequential.EvaluatePrequential._train_and_test": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "BaseException",
    "KeyboardInterrupt",
    "TypeError",
    "len",
    "numpy.unique",
    "print",
    "range",
    "skmultiflow.utils.constants.CLASSIFICATION",
    "skmultiflow.utils.constants.MULTI_TARGET_CLASSIFICATION",
    "skmultiflow.utils.constants.MULTI_TARGET_REGRESSION",
    "skmultiflow.utils.constants.REGRESSION",
    "timeit.default_timer",
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_prequential.EvaluatePrequential.evaluate": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_prequential.EvaluatePrequential.get_info": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "skmultiflow.evaluation.evaluate_prequential.os",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_prequential.EvaluatePrequential.partial_fit": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_prequential.EvaluatePrequential.predict": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_prequential.EvaluatePrequential.set_params": {
  "data": {
   "lineno": 415
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_prequential.StreamEvaluator": {
  "data": {
   "shadows": "skmultiflow.evaluation.base_evaluator.StreamEvaluator"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_prequential.constants": {
  "data": {
   "shadows": "skmultiflow.utils.constants"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_prequential.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_prequential.timer": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_prequential.unique": {
  "data": {
   "shadows": "numpy.unique"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_prequential.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_stream_gen_speed": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.evaluation.evaluate_stream_gen_speed.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_stream_gen_speed.EvaluateStreamGenerationSpeed": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.evaluation.evaluate_stream_gen_speed.EvaluateStreamGenerationSpeed.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_stream_gen_speed.EvaluateStreamGenerationSpeed._measure_stream_speed": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "float",
    "round",
    "skmultiflow.evaluation.evaluate_stream_gen_speed.logging",
    "str",
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_stream_gen_speed.EvaluateStreamGenerationSpeed.evaluate": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_stream_gen_speed.EvaluateStreamGenerationSpeed.get_class_type": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_stream_gen_speed.EvaluateStreamGenerationSpeed.get_info": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_stream_gen_speed.EvaluateStreamGenerationSpeed.set_params": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluate_stream_gen_speed.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluate_stream_gen_speed.timer": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "skmultiflow.evaluation.evaluation_data_buffer": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.evaluation.evaluation_data_buffer.EvaluationDataBuffer": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "skmultiflow.evaluation.evaluation_data_buffer.EvaluationDataBuffer.__init__": {
  "data": {
   "lineno": 5
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluation_data_buffer.EvaluationDataBuffer._clear_data": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluation_data_buffer.EvaluationDataBuffer._validate": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluation_data_buffer.EvaluationDataBuffer.get_data": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "skmultiflow.evaluation.evaluation_data_buffer.EvaluationDataBuffer.update_data": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "skmultiflow.lazy": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.lazy.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "skmultiflow.lazy.distances": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.lazy.distances.euclidean_distance": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.power",
    "numpy.sqrt",
    "numpy.subtract",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.distances.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "skmultiflow.lazy.distances.mixed_distance": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "len",
    "range",
    "skmultiflow.lazy.distances.math",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.distances.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.lazy.kdtree": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.lazy.kdtree.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.lazy.kdtree.KDTree": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.lazy.kdtree.KDTree.__build": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "KDTreeNode",
    "len"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.KDTree.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "callable",
    "max",
    "min",
    "range",
    "skmultiflow.lazy.distances.euclidean_distance",
    "skmultiflow.lazy.distances.mixed_distance",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.KDTree._root": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.KDTree.get_class_type": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.KDTree.get_info": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.KDTree.query": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "get_dimensions",
    "isinstance",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.KDTree.query_radius": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.KDTreeNode": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.lazy.kdtree.KDTreeNode.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.KDTreeNode.__start_node": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "len",
    "list",
    "set",
    "skmultiflow.lazy.kdtree.KDTreeNode",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.KDTreeNode._is_leaf": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.KDTreeNode._left": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.KDTreeNode._right": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.KDTreeNode.get_class_type": {
  "data": {
   "lineno": 553
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.KDTreeNode.get_info": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.KDTreeNode.query_node": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.kdtree.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "skmultiflow.lazy.kdtree.euclidean_distance": {
  "data": {
   "shadows": "skmultiflow.lazy.distances.euclidean_distance"
  },
  "type": "import"
 },
 "skmultiflow.lazy.kdtree.mixed_distance": {
  "data": {
   "shadows": "skmultiflow.lazy.distances.mixed_distance"
  },
  "type": "import"
 },
 "skmultiflow.lazy.knn": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.lazy.knn.InstanceWindow": {
  "data": {
   "shadows": "skmultiflow.utils.data_structures.InstanceWindow"
  },
  "type": "import"
 },
 "skmultiflow.lazy.knn.KNN": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.lazy.knn.KNN.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "float",
    "skmultiflow.utils.data_structures.InstanceWindow",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.knn.KNN.__predict_proba": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "sklearn.neighbors.KDTree"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.knn.KNN.fit": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "get_dimensions",
    "list",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.knn.KNN.get_info": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.knn.KNN.partial_fit": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "get_dimensions",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.knn.KNN.predict": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "get_dimensions",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.knn.KNN.predict_proba": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ValueError",
    "get_dimensions",
    "int",
    "len",
    "list",
    "max",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.knn.KNN.reset": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "skmultiflow.lazy.knn.KNN.score": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.knn.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.lazy.knn.sk": {
  "data": {
   "shadows": "sklearn.neighbors"
  },
  "type": "import"
 },
 "skmultiflow.lazy.knn_adwin": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.lazy.knn_adwin.ADWIN": {
  "data": {
   "shadows": "skmultiflow.drift_detection.ADWIN"
  },
  "type": "import"
 },
 "skmultiflow.lazy.knn_adwin.InstanceWindow": {
  "data": {
   "shadows": "skmultiflow.utils.data_structures.InstanceWindow"
  },
  "type": "import"
 },
 "skmultiflow.lazy.knn_adwin.KNN": {
  "data": {
   "shadows": "skmultiflow.lazy.KNN"
  },
  "type": "import"
 },
 "skmultiflow.lazy.knn_adwin.KNNAdwin": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "skmultiflow.lazy.KNN"
   ]
  },
  "type": "class"
 },
 "skmultiflow.lazy.knn_adwin.KNNAdwin.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "skmultiflow.drift_detection.ADWIN",
    "skmultiflow.lazy.knn_adwin.sys",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.knn_adwin.KNNAdwin.fit": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "skmultiflow.lazy.knn_adwin.KNNAdwin.get_info": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.knn_adwin.KNNAdwin.partial_fit": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "get_dimensions",
    "range",
    "skmultiflow.utils.data_structures.InstanceWindow"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.knn_adwin.KNNAdwin.reset": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "skmultiflow.drift_detection.ADWIN",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.knn_adwin.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "skmultiflow.lazy.sam_knn": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.lazy.sam_knn.KMeans": {
  "data": {
   "shadows": "sklearn.cluster.KMeans"
  },
  "type": "import"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.LTMLabels": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.LTMSamples": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.STMLabels": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.STMSamples": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "collections.deque",
    "numpy.empty",
    "numpy.int32",
    "numpy.zeros",
    "skmultiflow.lazy.sam_knn.SAMKNN",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN._partial_fit": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "numpy.delete",
    "numpy.vstack",
    "range",
    "skmultiflow.lazy.sam_knn.SAMKNN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN._partial_fit_by_all_memories": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "numpy.argmax",
    "numpy.sum",
    "skmultiflow.lazy.sam_knn.SAMKNN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN._partial_fit_by_stm": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN._predict_by_all_memories": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len",
    "numpy.append",
    "numpy.argmax",
    "numpy.sum",
    "skmultiflow.lazy.sam_knn.SAMKNN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN._predict_by_stm": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.clean_samples": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "len",
    "min",
    "numpy.delete",
    "numpy.max",
    "numpy.where",
    "range",
    "skmultiflow.lazy.sam_knn.SAMKNN",
    "skmultiflow.lazy.sam_knn.libNearestNeighbor"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.cluster_down": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "int",
    "max",
    "numpy.append",
    "numpy.empty",
    "numpy.int32",
    "numpy.ones",
    "numpy.unique",
    "numpy.vstack",
    "sklearn.cluster.KMeans",
    "skmultiflow.lazy.sam_knn.logging"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.fit": {
  "data": {
   "lineno": 354
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.get_complexity": {
  "data": {
   "lineno": 418
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.get_complexity_num_parameter_metric": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.get_distance_weighted_label": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.asarray",
    "numpy.int8",
    "numpy.sqrt",
    "skmultiflow.lazy.sam_knn.libNearestNeighbor",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.get_distances": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "skmultiflow.lazy.sam_knn.libNearestNeighbor",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.get_info": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.get_maj_label": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "numpy.asarray",
    "numpy.int8",
    "skmultiflow.lazy.sam_knn.libNearestNeighbor",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.partial_fit": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.empty",
    "range",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.predict": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.empty",
    "range",
    "skmultiflow.lazy.sam_knn.SAMKNN",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.predict_proba": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.reset": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.score": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.size_check_STMLTM": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.append",
    "numpy.delete",
    "numpy.vstack",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.SAMKNN.size_check_fade_out": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.delete"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.STMSizer": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "skmultiflow.lazy.sam_knn.STMSizer.accScore": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "float",
    "len",
    "numpy.sum",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.STMSizer.adaptHistories": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "len",
    "list",
    "numpy.sort",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.STMSizer.getInterleavedTestTrainAcc": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "getLabelsFct",
    "len",
    "range",
    "skmultiflow.lazy.sam_knn.STMSizer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.STMSizer.getInterleavedTestTrainAccPredHistory": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "float",
    "getLabelsFct",
    "len",
    "numpy.sum",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.STMSizer.getMaxAccApproxWindowSize": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "getLabelsFct",
    "int",
    "len",
    "list",
    "numpy.argmax",
    "numpy.round",
    "numpy.where",
    "skmultiflow.lazy.sam_knn.STMSizer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.STMSizer.getMaxAccWindowSize": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "getLabelsFct",
    "int",
    "len",
    "list",
    "numpy.argmax",
    "numpy.array",
    "numpy.round",
    "skmultiflow.lazy.sam_knn.STMSizer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.STMSizer.getNewSTMSize": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "Exception",
    "len",
    "skmultiflow.lazy.sam_knn.STMSizer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.lazy.sam_knn.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.lazy.sam_knn.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "skmultiflow.lazy.sam_knn.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "skmultiflow.lazy.sam_knn.get_dimensions": {
  "data": {
   "shadows": "skmultiflow.utils.utils.get_dimensions"
  },
  "type": "import"
 },
 "skmultiflow.lazy.sam_knn.libNearestNeighbor": {
  "data": {
   "shadows": "libNearestNeighbor"
  },
  "type": "import"
 },
 "skmultiflow.lazy.sam_knn.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skmultiflow.lazy.sam_knn.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.meta": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.meta.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.WeightedClassifier": {
  "data": {
   "lineno": 43
  },
  "type": "class"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.WeightedClassifier.__init__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.WeightedClassifier.__lt__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "skmultiflow.bayes.naive_bayes.NaiveBayes",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.compute_baseline": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.sum",
    "numpy.unique",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.compute_score": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.where",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.compute_score_crossvalidation": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "copy.deepcopy",
    "int",
    "sklearn.model_selection.KFold",
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.compute_weight": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "max"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.do_instance_pruning": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.fit": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.get_info": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.partial_fit": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "copy.deepcopy",
    "enumerate",
    "len",
    "min",
    "numpy.unique",
    "numpy.zeros",
    "operator.attrgetter"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.predict": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "abs",
    "dict",
    "enumerate",
    "len",
    "max",
    "numpy.sum",
    "numpy.zeros",
    "operator.itemgetter",
    "sorted"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.predict_proba": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.reset": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.score": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.AccuracyWeightedEnsemble.train_model": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.KFold": {
  "data": {
   "shadows": "sklearn.model_selection.KFold"
  },
  "type": "import"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.NaiveBayes": {
  "data": {
   "shadows": "skmultiflow.bayes.naive_bayes.NaiveBayes"
  },
  "type": "import"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.meta.accuracy_weighted_ensemble.op": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "skmultiflow.meta.adaptive_random_forests": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.meta.adaptive_random_forests.ADWIN": {
  "data": {
   "shadows": "skmultiflow.drift_detection.adwin.ADWIN"
  },
  "type": "import"
 },
 "skmultiflow.meta.adaptive_random_forests.ARFBaseLearner": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.meta.adaptive_random_forests.ARFBaseLearner.__init__": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "copy.deepcopy",
    "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector",
    "skmultiflow.metrics.measure_collection.ClassificationMeasurements",
    "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.ARFBaseLearner.get_class_type": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.ARFBaseLearner.get_info": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.ARFBaseLearner.get_votes_for_instance": {
  "data": {
   "lineno": 508
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.ARFBaseLearner.partial_fit": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "int",
    "skmultiflow.meta.adaptive_random_forests.ARFBaseLearner"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.ARFBaseLearner.predict": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.ARFBaseLearner.predict_proba": {
  "data": {
   "lineno": 505
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.ARFBaseLearner.reset": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.ARFHoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.meta.adaptive_random_forests.AdaptiveRandomForest": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.meta.adaptive_random_forests.AdaptiveRandomForest.__init__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "skmultiflow.drift_detection.adwin.ADWIN",
    "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector",
    "skmultiflow.utils.check_random_state",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.AdaptiveRandomForest._partial_fit": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.asarray",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.AdaptiveRandomForest._set_max_features": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "round",
    "skmultiflow.meta.adaptive_random_forests.math"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.AdaptiveRandomForest.fit": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.AdaptiveRandomForest.get_info": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.AdaptiveRandomForest.get_votes_for_instance": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "KeyError",
    "range",
    "skmultiflow.utils.utils.normalize_values_in_dict",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.AdaptiveRandomForest.init_ensemble": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "ARFBaseLearner",
    "range",
    "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.AdaptiveRandomForest.is_randomizable": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.AdaptiveRandomForest.partial_fit": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "range",
    "skmultiflow.utils.check_weights",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.AdaptiveRandomForest.predict": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "max",
    "numpy.asarray",
    "range",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.AdaptiveRandomForest.predict_proba": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "range",
    "sklearn.preprocessing.normalize"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.AdaptiveRandomForest.reset": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.AdaptiveRandomForest.score": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.adaptive_random_forests.BaseDriftDetector": {
  "data": {
   "shadows": "skmultiflow.drift_detection.base_drift_detector.BaseDriftDetector"
  },
  "type": "import"
 },
 "skmultiflow.meta.adaptive_random_forests.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.meta.adaptive_random_forests.ClassificationMeasurements": {
  "data": {
   "shadows": "skmultiflow.metrics.measure_collection.ClassificationMeasurements"
  },
  "type": "import"
 },
 "skmultiflow.meta.adaptive_random_forests.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.meta.adaptive_random_forests.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.meta.adaptive_random_forests.check_weights": {
  "data": {
   "shadows": "skmultiflow.utils.check_weights"
  },
  "type": "import"
 },
 "skmultiflow.meta.adaptive_random_forests.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "skmultiflow.meta.adaptive_random_forests.get_dimensions": {
  "data": {
   "shadows": "skmultiflow.utils.utils.get_dimensions"
  },
  "type": "import"
 },
 "skmultiflow.meta.adaptive_random_forests.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "skmultiflow.meta.adaptive_random_forests.normalize": {
  "data": {
   "shadows": "sklearn.preprocessing.normalize"
  },
  "type": "import"
 },
 "skmultiflow.meta.adaptive_random_forests.normalize_values_in_dict": {
  "data": {
   "shadows": "skmultiflow.utils.utils.normalize_values_in_dict"
  },
  "type": "import"
 },
 "skmultiflow.meta.adaptive_random_forests.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.meta.batch_incremental": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.meta.batch_incremental.BatchIncremental": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.meta.batch_incremental.BatchIncremental.__init__": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "sklearn.tree.DecisionTreeClassifier"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.batch_incremental.BatchIncremental.fit": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.batch_incremental.BatchIncremental.get_info": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.batch_incremental.BatchIncremental.partial_fit": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "copy.deepcopy",
    "int",
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.batch_incremental.BatchIncremental.predict": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "skmultiflow.meta.batch_incremental.BatchIncremental.predict_proba": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.batch_incremental.BatchIncremental.reset": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "skmultiflow.meta.batch_incremental.BatchIncremental.score": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.batch_incremental.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "skmultiflow.meta.batch_incremental.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.meta.batch_incremental.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "skmultiflow.meta.batch_incremental.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.meta.classifier_chains": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.meta.classifier_chains.ClassifierChain": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.meta.classifier_chains.ClassifierChain.__configure": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.ClassifierChain.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.ClassifierChain.fit": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.zeros",
    "range",
    "skmultiflow.meta.classifier_chains.copy"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.ClassifierChain.get_info": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.ClassifierChain.partial_fit": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.ClassifierChain.predict": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.column_stack",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.ClassifierChain.predict_proba": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.column_stack",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.ClassifierChain.reset": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.ClassifierChain.score": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.LogisticRegression": {
  "data": {
   "shadows": "sklearn.linear_model.LogisticRegression"
  },
  "type": "import"
 },
 "skmultiflow.meta.classifier_chains.MCC": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "skmultiflow.meta.classifier_chains.ProbabilisticClassifierChain"
   ]
  },
  "type": "class"
 },
 "skmultiflow.meta.classifier_chains.MCC.__init__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "skmultiflow.meta.classifier_chains.ClassifierChain"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.MCC.predict": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "int",
    "numpy.zeros",
    "range",
    "skmultiflow.meta.classifier_chains.ClassifierChain",
    "skmultiflow.meta.classifier_chains.P"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.MCC.sample": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.P": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "len",
    "numpy.prod",
    "numpy.zeros",
    "payoff",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.ProbabilisticClassifierChain": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "skmultiflow.meta.classifier_chains.ClassifierChain"
   ]
  },
  "type": "class"
 },
 "skmultiflow.meta.classifier_chains.ProbabilisticClassifierChain.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "sklearn.linear_model.LogisticRegression",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.ProbabilisticClassifierChain.get_info": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.ProbabilisticClassifierChain.predict": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "int",
    "list",
    "map",
    "numpy.array",
    "numpy.binary_repr",
    "numpy.zeros",
    "range",
    "skmultiflow.meta.classifier_chains.P"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.classifier_chains.SGDClassifier": {
  "data": {
   "shadows": "sklearn.linear_model.SGDClassifier"
  },
  "type": "import"
 },
 "skmultiflow.meta.classifier_chains.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.meta.classifier_chains.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.meta.classifier_chains.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "skmultiflow.meta.classifier_chains.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.meta.learn_nse": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.meta.learn_nse.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "skmultiflow.meta.learn_nse.LearnNSE": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.meta.learn_nse.LearnNSE.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "copy.deepcopy",
    "sklearn.tree.DecisionTreeClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_nse.LearnNSE.__vote_proba": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.linalg.norm",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_nse.LearnNSE._train_model": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_nse.LearnNSE.fit": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_nse.LearnNSE.get_info": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_nse.LearnNSE.partial_fit": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "RuntimeError",
    "copy.deepcopy",
    "len",
    "numpy.array",
    "numpy.exp",
    "numpy.inf",
    "numpy.log",
    "numpy.ones",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_nse.LearnNSE.predict": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_nse.LearnNSE.predict_proba": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_nse.LearnNSE.reset": {
  "data": {
   "lineno": 269
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_nse.LearnNSE.score": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_nse.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.meta.learn_nse.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "skmultiflow.meta.learn_nse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.meta.learn_pp": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.meta.learn_pp.DecisionTreeClassifier": {
  "data": {
   "shadows": "sklearn.tree.DecisionTreeClassifier"
  },
  "type": "import"
 },
 "skmultiflow.meta.learn_pp.LearnPP": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.meta.learn_pp.LearnPP.__compute_error": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.sum",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_pp.LearnPP.__fit_batch": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "int",
    "len",
    "numpy.array",
    "numpy.linspace",
    "numpy.ones",
    "numpy.sum",
    "range",
    "skmultiflow.meta.learn_pp.copy"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_pp.LearnPP.__init__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "sklearn.tree.DecisionTreeClassifier",
    "skmultiflow.utils.check_random_state",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_pp.LearnPP.__majority_vote": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_pp.LearnPP.__vote_proba": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.log",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_pp.LearnPP.fit": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_pp.LearnPP.get_info": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_pp.LearnPP.get_item": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_pp.LearnPP.partial_fit": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "RuntimeError",
    "len",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_pp.LearnPP.predict": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "numpy.argmax"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_pp.LearnPP.predict_proba": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_pp.LearnPP.reset": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_pp.LearnPP.score": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.learn_pp.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.meta.learn_pp.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.meta.learn_pp.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "skmultiflow.meta.learn_pp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.meta.leverage_bagging": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.meta.leverage_bagging.ADWIN": {
  "data": {
   "shadows": "skmultiflow.drift_detection.adwin.ADWIN"
  },
  "type": "import"
 },
 "skmultiflow.meta.leverage_bagging.KNN": {
  "data": {
   "shadows": "skmultiflow.lazy.knn.KNN"
  },
  "type": "import"
 },
 "skmultiflow.meta.leverage_bagging.LeverageBagging": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.meta.leverage_bagging.LeverageBagging.__adjust_ensemble_size": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len",
    "range",
    "skmultiflow.drift_detection.adwin.ADWIN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.leverage_bagging.LeverageBagging.__configure": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "copy.deepcopy",
    "range",
    "skmultiflow.drift_detection.adwin.ADWIN",
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.leverage_bagging.LeverageBagging.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "skmultiflow.lazy.knn.KNN",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.leverage_bagging.LeverageBagging.__partial_fit": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError",
    "copy.deepcopy",
    "int",
    "len",
    "range",
    "skmultiflow.drift_detection.adwin.ADWIN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.leverage_bagging.LeverageBagging.fit": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.leverage_bagging.LeverageBagging.get_info": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.leverage_bagging.LeverageBagging.partial_fit": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ValueError",
    "get_dimensions",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.leverage_bagging.LeverageBagging.predict": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "get_dimensions",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.leverage_bagging.LeverageBagging.predict_binary_proba": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "ValueError",
    "get_dimensions",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.leverage_bagging.LeverageBagging.predict_proba": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "ValueError",
    "get_dimensions",
    "len",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.leverage_bagging.LeverageBagging.reset": {
  "data": {
   "lineno": 447
  },
  "type": "function"
 },
 "skmultiflow.meta.leverage_bagging.LeverageBagging.score": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.leverage_bagging.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.meta.leverage_bagging.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.meta.leverage_bagging.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "skmultiflow.meta.multi_output_learner": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.meta.multi_output_learner.MultiOutputLearner": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.meta.multi_output_learner.MultiOutputLearner.__configure": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "copy.deepcopy",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.multi_output_learner.MultiOutputLearner.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDClassifier",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.multi_output_learner.MultiOutputLearner.fit": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "copy.deepcopy",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.multi_output_learner.MultiOutputLearner.get_info": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.multi_output_learner.MultiOutputLearner.partial_fit": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.multi_output_learner.MultiOutputLearner.predict": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.multi_output_learner.MultiOutputLearner.predict_proba": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.multi_output_learner.MultiOutputLearner.reset": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "skmultiflow.meta.multi_output_learner.MultiOutputLearner.score": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.multi_output_learner.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.meta.multi_output_learner.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "skmultiflow.meta.multi_output_learner.linear_model": {
  "data": {
   "shadows": "sklearn.linear_model"
  },
  "type": "import"
 },
 "skmultiflow.meta.multi_output_learner.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.meta.oza_bagging": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.meta.oza_bagging.KNNAdwin": {
  "data": {
   "shadows": "skmultiflow.lazy.KNNAdwin"
  },
  "type": "import"
 },
 "skmultiflow.meta.oza_bagging.OzaBagging": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.meta.oza_bagging.OzaBagging.__adjust_ensemble_size": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging.OzaBagging.__configure": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "copy.deepcopy",
    "range",
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging.OzaBagging.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "skmultiflow.lazy.KNNAdwin",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging.OzaBagging.fit": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging.OzaBagging.get_info": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging.OzaBagging.partial_fit": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging.OzaBagging.predict": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "get_dimensions",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging.OzaBagging.predict_proba": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "ValueError",
    "get_dimensions",
    "len",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging.OzaBagging.reset": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging.OzaBagging.score": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.meta.oza_bagging.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.meta.oza_bagging.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "skmultiflow.meta.oza_bagging_adwin": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.meta.oza_bagging_adwin.ADWIN": {
  "data": {
   "shadows": "skmultiflow.drift_detection.ADWIN"
  },
  "type": "import"
 },
 "skmultiflow.meta.oza_bagging_adwin.KNNAdwin": {
  "data": {
   "shadows": "skmultiflow.lazy.KNNAdwin"
  },
  "type": "import"
 },
 "skmultiflow.meta.oza_bagging_adwin.OzaBagging": {
  "data": {
   "shadows": "skmultiflow.meta.OzaBagging"
  },
  "type": "import"
 },
 "skmultiflow.meta.oza_bagging_adwin.OzaBaggingAdwin": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "skmultiflow.meta.OzaBagging"
   ]
  },
  "type": "class"
 },
 "skmultiflow.meta.oza_bagging_adwin.OzaBaggingAdwin.__adjust_ensemble_size": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "copy.deepcopy",
    "len",
    "range",
    "skmultiflow.drift_detection.ADWIN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging_adwin.OzaBaggingAdwin.__configure": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "copy.deepcopy",
    "range",
    "skmultiflow.drift_detection.ADWIN",
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging_adwin.OzaBaggingAdwin.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "skmultiflow.lazy.KNNAdwin",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging_adwin.OzaBaggingAdwin.get_info": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging_adwin.OzaBaggingAdwin.partial_fit": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "get_dimensions",
    "range",
    "set",
    "skmultiflow.drift_detection.ADWIN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging_adwin.OzaBaggingAdwin.reset": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "skmultiflow.meta.oza_bagging_adwin.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.meta.oza_bagging_adwin.cp": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "skmultiflow.meta.regressor_chains": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.meta.regressor_chains.RegressorChain": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.meta.regressor_chains.RegressorChain.__configure": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.regressor_chains.RegressorChain.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "sklearn.linear_model.SGDRegressor",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.regressor_chains.RegressorChain.fit": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.zeros",
    "range",
    "skmultiflow.meta.regressor_chains.copy"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.regressor_chains.RegressorChain.get_info": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "skmultiflow.meta.regressor_chains.RegressorChain.partial_fit": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.regressor_chains.RegressorChain.predict": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.column_stack",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.regressor_chains.RegressorChain.predict_proba": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.regressor_chains.RegressorChain.reset": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "skmultiflow.meta.regressor_chains.RegressorChain.score": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.meta.regressor_chains.SGDRegressor": {
  "data": {
   "shadows": "sklearn.linear_model.SGDRegressor"
  },
  "type": "import"
 },
 "skmultiflow.meta.regressor_chains.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.meta.regressor_chains.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.meta.regressor_chains.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "skmultiflow.meta.regressor_chains.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.metrics": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.metrics.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "skmultiflow.metrics.measure_collection": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.metrics.measure_collection.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "len",
    "numpy.int64",
    "skmultiflow.utils.data_structures.ConfusionMatrix",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements._get_target_index": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements._matrix": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements.add_result": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "skmultiflow.utils.check_weights"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements.get_accuracy": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements.get_class_type": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements.get_incorrectly_classified_ratio": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements.get_info": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements.get_kappa": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements.get_kappa_m": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements.get_kappa_t": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements.get_last": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements.get_majority_class": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.ClassificationMeasurements.reset": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.ConfusionMatrix": {
  "data": {
   "shadows": "skmultiflow.utils.data_structures.ConfusionMatrix"
  },
  "type": "import"
 },
 "skmultiflow.metrics.measure_collection.FastBuffer": {
  "data": {
   "shadows": "skmultiflow.utils.data_structures.FastBuffer"
  },
  "type": "import"
 },
 "skmultiflow.metrics.measure_collection.FastComplexBuffer": {
  "data": {
   "shadows": "skmultiflow.utils.data_structures.FastComplexBuffer"
  },
  "type": "import"
 },
 "skmultiflow.metrics.measure_collection.MOLConfusionMatrix": {
  "data": {
   "shadows": "skmultiflow.utils.data_structures.MOLConfusionMatrix"
  },
  "type": "import"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetClassificationMeasurements": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetClassificationMeasurements.__init__": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "len",
    "numpy.int64",
    "skmultiflow.utils.data_structures.MOLConfusionMatrix",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetClassificationMeasurements._matrix": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetClassificationMeasurements.add_result": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "numpy.ndarray",
    "numpy.sum",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetClassificationMeasurements.get_class_type": {
  "data": {
   "lineno": 716
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetClassificationMeasurements.get_exact_match": {
  "data": {
   "lineno": 673
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetClassificationMeasurements.get_hamming_loss": {
  "data": {
   "lineno": 646
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetClassificationMeasurements.get_hamming_score": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "ZeroDivisionError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetClassificationMeasurements.get_info": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetClassificationMeasurements.get_j_index": {
  "data": {
   "lineno": 688
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetClassificationMeasurements.get_last": {
  "data": {
   "lineno": 643
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetClassificationMeasurements.get_total_sum": {
  "data": {
   "lineno": 701
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetClassificationMeasurements.reset": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetRegressionMeasurements": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetRegressionMeasurements.__init__": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetRegressionMeasurements._sample_count": {
  "data": {
   "lineno": 1186,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetRegressionMeasurements.add_result": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.absolute"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetRegressionMeasurements.get_average_absolute_error": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetRegressionMeasurements.get_average_mean_square_error": {
  "data": {
   "lineno": 1141,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetRegressionMeasurements.get_average_root_mean_square_error": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetRegressionMeasurements.get_class_type": {
  "data": {
   "lineno": 1190
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetRegressionMeasurements.get_info": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetRegressionMeasurements.get_last": {
  "data": {
   "lineno": 1183
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.MultiTargetRegressionMeasurements.reset": {
  "data": {
   "lineno": 1103
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RegressionMeasurements": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.metrics.measure_collection.RegressionMeasurements.__init__": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RegressionMeasurements.add_result": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "numpy.absolute"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RegressionMeasurements.get_average_error": {
  "data": {
   "lineno": 957
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RegressionMeasurements.get_class_type": {
  "data": {
   "lineno": 974
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RegressionMeasurements.get_info": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RegressionMeasurements.get_last": {
  "data": {
   "lineno": 971
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RegressionMeasurements.get_mean_square_error": {
  "data": {
   "lineno": 943
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RegressionMeasurements.reset": {
  "data": {
   "lineno": 917
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RunningTimeMeasurements": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.metrics.measure_collection.RunningTimeMeasurements.__init__": {
  "data": {
   "lineno": 1352,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RunningTimeMeasurements.compute_testing_time_begin": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": [
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RunningTimeMeasurements.compute_testing_time_end": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RunningTimeMeasurements.compute_training_time_begin": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RunningTimeMeasurements.compute_training_time_end": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "timeit.default_timer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RunningTimeMeasurements.get_class_type": {
  "data": {
   "lineno": 1407
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RunningTimeMeasurements.get_current_testing_time": {
  "data": {
   "lineno": 1401
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RunningTimeMeasurements.get_current_total_running_time": {
  "data": {
   "lineno": 1404
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RunningTimeMeasurements.get_current_training_time": {
  "data": {
   "lineno": 1398
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RunningTimeMeasurements.get_info": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RunningTimeMeasurements.reset": {
  "data": {
   "lineno": 1359
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.RunningTimeMeasurements.update_time_measurements": {
  "data": {
   "lineno": 1387
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements.__init__": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "len",
    "numpy.int64",
    "skmultiflow.utils.data_structures.ConfusionMatrix",
    "skmultiflow.utils.data_structures.FastBuffer",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements._get_target_index": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements._matrix": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements.add_result": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "numpy.array",
    "skmultiflow.utils.check_weights"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements.get_accuracy": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements.get_class_type": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements.get_incorrectly_classified_ratio": {
  "data": {
   "lineno": 424
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements.get_info": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements.get_kappa": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements.get_kappa_m": {
  "data": {
   "lineno": 506
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements.get_kappa_t": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements.get_last": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements.get_majority_class": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements.reset": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "len",
    "skmultiflow.utils.data_structures.FastBuffer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowClassificationMeasurements.sample_count": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetClassificationMeasurements": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetClassificationMeasurements.__init__": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "len",
    "numpy.int64",
    "skmultiflow.utils.data_structures.FastComplexBuffer",
    "skmultiflow.utils.data_structures.MOLConfusionMatrix",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetClassificationMeasurements.add_result": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetClassificationMeasurements.get_class_type": {
  "data": {
   "lineno": 895
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetClassificationMeasurements.get_exact_match": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "exact_match"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetClassificationMeasurements.get_hamming_loss": {
  "data": {
   "lineno": 823
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetClassificationMeasurements.get_hamming_score": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "hamming_score"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetClassificationMeasurements.get_info": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetClassificationMeasurements.get_j_index": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "j_index"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetClassificationMeasurements.get_last": {
  "data": {
   "lineno": 820
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetClassificationMeasurements.get_total_sum": {
  "data": {
   "lineno": 876
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetClassificationMeasurements.matrix": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetClassificationMeasurements.reset": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "len",
    "skmultiflow.utils.data_structures.FastComplexBuffer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetClassificationMeasurements.sample_count": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetRegressionMeasurements": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetRegressionMeasurements.__init__": {
  "data": {
   "lineno": 1212,
   "symbols_in_volume": [
    "skmultiflow.utils.data_structures.FastBuffer",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetRegressionMeasurements._sample_count": {
  "data": {
   "lineno": 1317,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetRegressionMeasurements.add_result": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "numpy.absolute",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetRegressionMeasurements.get_average_absolute_error": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetRegressionMeasurements.get_average_mean_square_error": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetRegressionMeasurements.get_average_root_mean_square_error": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetRegressionMeasurements.get_class_type": {
  "data": {
   "lineno": 1321
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetRegressionMeasurements.get_info": {
  "data": {
   "lineno": 1324,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetRegressionMeasurements.get_last": {
  "data": {
   "lineno": 1314
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowMultiTargetRegressionMeasurements.reset": {
  "data": {
   "lineno": 1223,
   "symbols_in_volume": [
    "skmultiflow.utils.data_structures.FastBuffer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowRegressionMeasurements": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.metrics.measure_collection.WindowRegressionMeasurements.__init__": {
  "data": {
   "lineno": 995,
   "symbols_in_volume": [
    "skmultiflow.utils.data_structures.FastBuffer",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowRegressionMeasurements.add_result": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "numpy.absolute",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowRegressionMeasurements.get_average_error": {
  "data": {
   "lineno": 1053
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowRegressionMeasurements.get_class_type": {
  "data": {
   "lineno": 1074
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowRegressionMeasurements.get_info": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowRegressionMeasurements.get_last": {
  "data": {
   "lineno": 1067
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowRegressionMeasurements.get_mean_square_error": {
  "data": {
   "lineno": 1039
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowRegressionMeasurements.reset": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "skmultiflow.utils.data_structures.FastBuffer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.WindowRegressionMeasurements.sample_count": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.check_weights": {
  "data": {
   "shadows": "skmultiflow.utils.check_weights"
  },
  "type": "import"
 },
 "skmultiflow.metrics.measure_collection.exact_match": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": [
    "hasattr",
    "numpy.asarray",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.hamming_score": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "hasattr",
    "numpy.asarray",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.j_index": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "hasattr",
    "numpy.asarray",
    "numpy.sum",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.metrics.measure_collection.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.metrics.measure_collection.timer": {
  "data": {
   "shadows": "timeit.default_timer"
  },
  "type": "import"
 },
 "skmultiflow.neural_networks": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.neural_networks.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "skmultiflow.neural_networks.perceptron": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.neural_networks.perceptron.Perceptron": {
  "data": {
   "shadows": "sklearn.linear_model.perceptron.Perceptron"
  },
  "type": "import"
 },
 "skmultiflow.neural_networks.perceptron.PerceptronMask": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.neural_networks.perceptron.PerceptronMask.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "sklearn.linear_model.perceptron.Perceptron",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.neural_networks.perceptron.PerceptronMask.fit": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "skmultiflow.neural_networks.perceptron.PerceptronMask.get_info": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.neural_networks.perceptron.PerceptronMask.partial_fit": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "skmultiflow.neural_networks.perceptron.PerceptronMask.predict": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "skmultiflow.neural_networks.perceptron.PerceptronMask.predict_proba": {
  "data": {
   "lineno": 117
  },
  "type": "function"
 },
 "skmultiflow.neural_networks.perceptron.PerceptronMask.reset": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "skmultiflow.neural_networks.perceptron.PerceptronMask.score": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "skmultiflow.neural_networks.perceptron.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.neural_networks.perceptron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.options.base_option": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.options.base_option.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "skmultiflow.options.base_option.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.options.base_option.Option": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.options.base_option.Option.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.options.base_option.Option.get_class_type": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "skmultiflow.options.base_option.Option.get_cli_char": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.options.base_option.Option.get_info": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.options.base_option.Option.get_name": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.options.base_option.Option.get_option_type": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.options.base_option.Option.get_value": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.options.base_option.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "skmultiflow.options.file_option": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.options.file_option.FileOption": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "skmultiflow.options.base_option.Option"
   ]
  },
  "type": "class"
 },
 "skmultiflow.options.file_option.FileOption.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.options.file_option.FileOption.get_cli_char": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "skmultiflow.options.file_option.FileOption.get_file_name": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "skmultiflow.options.file_option.FileOption.get_info": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.options.file_option.FileOption.get_name": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "skmultiflow.options.file_option.FileOption.get_option_type": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "skmultiflow.options.file_option.FileOption.get_value": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "skmultiflow.options.file_option.FileOption.is_output": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "skmultiflow.options.file_option.Option": {
  "data": {
   "shadows": "skmultiflow.options.base_option.Option"
  },
  "type": "import"
 },
 "skmultiflow.transform": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.transform.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "skmultiflow.transform.base_transform": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.transform.base_transform.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "skmultiflow.transform.base_transform.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.transform.base_transform.StreamTransform": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.transform.base_transform.StreamTransform.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.base_transform.StreamTransform.get_class_type": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "skmultiflow.transform.base_transform.StreamTransform.get_info": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.base_transform.StreamTransform.partial_fit": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.base_transform.StreamTransform.partial_fit_transform": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.base_transform.StreamTransform.transform": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.base_transform.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "skmultiflow.transform.missing_values_cleaner": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.transform.missing_values_cleaner.FastBuffer": {
  "data": {
   "shadows": "skmultiflow.utils.data_structures.FastBuffer"
  },
  "type": "import"
 },
 "skmultiflow.transform.missing_values_cleaner.MissingValuesCleaner": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "skmultiflow.transform.base_transform.StreamTransform"
   ]
  },
  "type": "class"
 },
 "skmultiflow.transform.missing_values_cleaner.MissingValuesCleaner.__configure": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "skmultiflow.utils.data_structures.FastBuffer"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.missing_values_cleaner.MissingValuesCleaner.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "numpy.nan",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.missing_values_cleaner.MissingValuesCleaner._get_substitute": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nanmean",
    "numpy.nanmedian",
    "scipy.stats.mode"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.missing_values_cleaner.MissingValuesCleaner.get_info": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.missing_values_cleaner.MissingValuesCleaner.partial_fit": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.missing_values_cleaner.MissingValuesCleaner.partial_fit_transform": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "skmultiflow.transform.missing_values_cleaner.MissingValuesCleaner.transform": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.isnan",
    "range",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.missing_values_cleaner.StreamTransform": {
  "data": {
   "shadows": "skmultiflow.transform.base_transform.StreamTransform"
  },
  "type": "import"
 },
 "skmultiflow.transform.missing_values_cleaner.get_dimensions": {
  "data": {
   "shadows": "skmultiflow.utils.utils.get_dimensions"
  },
  "type": "import"
 },
 "skmultiflow.transform.missing_values_cleaner.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.transform.missing_values_cleaner.stats": {
  "data": {
   "shadows": "scipy.stats"
  },
  "type": "import"
 },
 "skmultiflow.transform.one_hot_to_categorical": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.transform.one_hot_to_categorical.OneHotToCategorical": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.transform.base_transform.StreamTransform"
   ]
  },
  "type": "class"
 },
 "skmultiflow.transform.one_hot_to_categorical.OneHotToCategorical.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.one_hot_to_categorical.OneHotToCategorical._transform": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.one_hot_to_categorical.OneHotToCategorical.fit": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "skmultiflow.transform.one_hot_to_categorical.OneHotToCategorical.get_info": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.one_hot_to_categorical.OneHotToCategorical.partial_fit": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "skmultiflow.transform.one_hot_to_categorical.OneHotToCategorical.partial_fit_transform": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "skmultiflow.transform.one_hot_to_categorical.OneHotToCategorical.transform": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "numpy.concatenate",
    "numpy.zeros",
    "range",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.transform.one_hot_to_categorical.StreamTransform": {
  "data": {
   "shadows": "skmultiflow.transform.base_transform.StreamTransform"
  },
  "type": "import"
 },
 "skmultiflow.transform.one_hot_to_categorical.get_dimensions": {
  "data": {
   "shadows": "skmultiflow.utils.utils.get_dimensions"
  },
  "type": "import"
 },
 "skmultiflow.transform.one_hot_to_categorical.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.trees": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "skmultiflow.trees.arf_hoeffding_tree": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree.LearningNodeNB": {
  "data": {
   "lineno": 140
  },
  "type": "class"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree.LearningNodeNB.__init__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree.LearningNodeNB.get_class_votes": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "skmultiflow.bayes.naive_bayes.do_naive_bayes_prediction",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree.LearningNodeNBAdaptive": {
  "data": {
   "lineno": 183
  },
  "type": "class"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree.LearningNodeNBAdaptive.__init__": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree.LearningNodeNBAdaptive.get_class_votes": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "skmultiflow.bayes.naive_bayes.do_naive_bayes_prediction"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree.LearningNodeNBAdaptive.learn_from_instance": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "max",
    "skmultiflow.bayes.naive_bayes.do_naive_bayes_prediction",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree.RandomLearningNode": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree.RandomLearningNode.__init__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "numpy.array",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree.RandomLearningNode._sample_features": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree.RandomLearningNode.learn_from_instance": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "int",
    "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver",
    "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian",
    "skmultiflow.utils.utils.get_dimensions",
    "sorted"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree.__init__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree._new_learning_node": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.MAJORITY_CLASS",
    "skmultiflow.trees.hoeffding_tree.NAIVE_BAYES"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree.is_randomizable": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree.new_instance": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "skmultiflow.trees.arf_hoeffding_tree.ARFHoeffdingTree"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.arf_hoeffding_tree.HoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.hoeffding_tree.HoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.trees.arf_hoeffding_tree.MAJORITY_CLASS": {
  "data": {
   "shadows": "skmultiflow.trees.hoeffding_tree.MAJORITY_CLASS"
  },
  "type": "import"
 },
 "skmultiflow.trees.arf_hoeffding_tree.NAIVE_BAYES": {
  "data": {
   "shadows": "skmultiflow.trees.hoeffding_tree.NAIVE_BAYES"
  },
  "type": "import"
 },
 "skmultiflow.trees.arf_hoeffding_tree.NominalAttributeClassObserver": {
  "data": {
   "shadows": "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver"
  },
  "type": "import"
 },
 "skmultiflow.trees.arf_hoeffding_tree.NumericAttributeClassObserverGaussian": {
  "data": {
   "shadows": "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian"
  },
  "type": "import"
 },
 "skmultiflow.trees.arf_hoeffding_tree.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.trees.arf_hoeffding_tree.do_naive_bayes_prediction": {
  "data": {
   "shadows": "skmultiflow.bayes.naive_bayes.do_naive_bayes_prediction"
  },
  "type": "import"
 },
 "skmultiflow.trees.arf_hoeffding_tree.get_dimensions": {
  "data": {
   "shadows": "skmultiflow.utils.utils.get_dimensions"
  },
  "type": "import"
 },
 "skmultiflow.trees.arf_hoeffding_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.trees.attribute_class_observer": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.attribute_class_observer.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "skmultiflow.trees.attribute_class_observer.AttributeClassObserver": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.attribute_class_observer.AttributeClassObserver.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.attribute_class_observer.AttributeClassObserver.get_best_evaluated_split_suggestion": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.attribute_class_observer.AttributeClassObserver.observe_attribute_class": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.attribute_class_observer.AttributeClassObserver.probability_of_attribute_value_given_class": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.attribute_class_observer.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "skmultiflow.trees.attribute_class_observer_null": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.attribute_class_observer_null.AttributeClassObserver": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_class_observer.AttributeClassObserver"
  },
  "type": "import"
 },
 "skmultiflow.trees.attribute_class_observer_null.AttributeClassObserverNull": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_class_observer.AttributeClassObserver"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.attribute_class_observer_null.AttributeClassObserverNull.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.attribute_class_observer_null.AttributeClassObserverNull.get_best_evaluated_split_suggestion": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "skmultiflow.trees.attribute_class_observer_null.AttributeClassObserverNull.observe_attribute_class": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "skmultiflow.trees.attribute_class_observer_null.AttributeClassObserverNull.probability_of_attribute_value_given_class": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "skmultiflow.trees.attribute_split_suggestion": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion.__init__": {
  "data": {
   "lineno": 2
  },
  "type": "function"
 },
 "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion.num_splits": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion.resulting_class_distribution_from_split": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "skmultiflow.trees.gaussian_estimator": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.gaussian_estimator.GaussianEstimator": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.gaussian_estimator.GaussianEstimator.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "skmultiflow.trees.gaussian_estimator.math"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.gaussian_estimator.GaussianEstimator.add_observation": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "skmultiflow.trees.gaussian_estimator.math"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.gaussian_estimator.GaussianEstimator.estimated_weight_lessthan_equalto_greaterthan_value": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "skmultiflow.utils.statistics.normal_probability"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.gaussian_estimator.GaussianEstimator.get_mean": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "skmultiflow.trees.gaussian_estimator.GaussianEstimator.get_std_dev": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "skmultiflow.trees.gaussian_estimator.math"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.gaussian_estimator.GaussianEstimator.get_total_weight_observed": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "skmultiflow.trees.gaussian_estimator.GaussianEstimator.get_variance": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "skmultiflow.trees.gaussian_estimator.GaussianEstimator.probability_density": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "skmultiflow.trees.gaussian_estimator.math"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.gaussian_estimator.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "skmultiflow.trees.gaussian_estimator.normal_probability": {
  "data": {
   "shadows": "skmultiflow.utils.statistics.normal_probability"
  },
  "type": "import"
 },
 "skmultiflow.trees.gini_split_criterion": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.gini_split_criterion.GiniSplitCriterion": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "skmultiflow.trees.split_criterion.SplitCriterion"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.gini_split_criterion.GiniSplitCriterion.compute_gini": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.gini_split_criterion.GiniSplitCriterion.get_merit_of_split": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "len",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.gini_split_criterion.GiniSplitCriterion.get_range_of_merit": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.gini_split_criterion.SplitCriterion": {
  "data": {
   "shadows": "skmultiflow.trees.split_criterion.SplitCriterion"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.trees.hoeffding_adaptive_tree.logging",
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.LearningNodeNBAdaptive",
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode"
   ]
  },
  "type": "module"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.ADWIN": {
  "data": {
   "shadows": "skmultiflow.drift_detection.adwin.ADWIN"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaLearningNode": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_adaptive_tree.LearningNodeNBAdaptive"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaLearningNode.__init__": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "skmultiflow.drift_detection.adwin.ADWIN",
    "skmultiflow.utils.check_random_state",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaLearningNode.filter_instance_to_leaves": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.FoundNode"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaLearningNode.get_class_votes": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "skmultiflow.bayes.do_naive_bayes_prediction",
    "skmultiflow.trees.hoeffding_adaptive_tree.MAJORITY_CLASS",
    "skmultiflow.trees.hoeffding_adaptive_tree.NAIVE_BAYES",
    "skmultiflow.utils.utils.normalize_values_in_dict",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaLearningNode.get_error_estimation": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaLearningNode.get_error_width": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaLearningNode.is_null_error": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaLearningNode.kill_tree_children": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaLearningNode.learn_from_instance": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "skmultiflow.drift_detection.adwin.ADWIN",
    "skmultiflow.utils.utils.get_max_value_key",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaLearningNode.number_leaves": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaSplitNode": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_adaptive_tree.SplitNode"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaSplitNode.__init__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "skmultiflow.drift_detection.adwin.ADWIN",
    "skmultiflow.utils.check_random_state",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaSplitNode.filter_instance_to_leaves": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "KeyError",
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.FoundNode"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaSplitNode.get_error_estimation": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaSplitNode.get_error_width": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaSplitNode.is_null_error": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaSplitNode.kill_tree_children": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "isinstance",
    "skmultiflow.trees.hoeffding_adaptive_tree.HAT"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaSplitNode.learn_from_instance": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "isinstance",
    "skmultiflow.drift_detection.adwin.ADWIN",
    "skmultiflow.trees.hoeffding_adaptive_tree.HAT",
    "skmultiflow.trees.hoeffding_adaptive_tree.error_width_threshold",
    "skmultiflow.trees.hoeffding_adaptive_tree.math",
    "skmultiflow.utils.utils.get_max_value_key"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.AdaSplitNode.number_leaves": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.NewNode": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.NewNode.filter_instance_to_leaves": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.NewNode.get_error_estimation": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.NewNode.get_error_width": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.NewNode.is_null_error": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.NewNode.kill_tree_children": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.NewNode.learn_from_instance": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.NewNode.number_leaves": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.__init__": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_adaptive_tree.HAT",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT._new_learning_node": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT._partial_fit": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.filter_instance_to_leaves": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.get_votes_for_instance": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "isinstance",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.new_split_node": {
  "data": {
   "lineno": 466
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.reset": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HAT.score": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.HoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.hoeffding_tree.HoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.LearningNodeNBAdaptive": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.MAJORITY_CLASS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.NAIVE_BAYES": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.NAIVE_BAYES_ADAPTIVE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.SplitNode": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.do_naive_bayes_prediction": {
  "data": {
   "shadows": "skmultiflow.bayes.do_naive_bayes_prediction"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.error_width_threshold": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.get_max_value_key": {
  "data": {
   "shadows": "skmultiflow.utils.utils.get_max_value_key"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.normalize_values_in_dict": {
  "data": {
   "shadows": "skmultiflow.utils.utils.normalize_values_in_dict"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_adaptive_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_anytime_tree": {
  "data": {
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode",
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.InactiveLearningNode",
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.Node",
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode"
   ]
  },
  "type": "module"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.ActiveLearningNode": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.AttributeSplitSuggestion": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.GINI_SPLIT": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.GiniSplitCriterion": {
  "data": {
   "shadows": "skmultiflow.trees.gini_split_criterion.GiniSplitCriterion"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeActiveLearningNode": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_anytime_tree.ActiveLearningNode"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeActiveLearningNode.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeActiveLearningNode.count_nodes": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "numpy.array",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeActiveLearningNode.get_best_split_suggestions": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeActiveLearningNode.get_null_split": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeInactiveLearningNode": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_anytime_tree.InactiveLearningNode"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeInactiveLearningNode.__init__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeInactiveLearningNode.count_nodes": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.array",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeInactiveLearningNode.get_best_split_suggestions": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeInactiveLearningNode.get_null_split": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeLearningNodeNB": {
  "data": {
   "lineno": 227
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeLearningNodeNB.__init__": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeLearningNodeNB.disable_attribute": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeLearningNodeNB.get_class_votes": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "skmultiflow.bayes.do_naive_bayes_prediction",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeLearningNodeNBAdaptive": {
  "data": {
   "lineno": 267
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeLearningNodeNBAdaptive.__init__": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeLearningNodeNBAdaptive.get_class_votes": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "skmultiflow.bayes.do_naive_bayes_prediction"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeLearningNodeNBAdaptive.learn_from_instance": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "max",
    "skmultiflow.bayes.do_naive_bayes_prediction",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeSplitNode": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_anytime_tree.SplitNode"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeSplitNode.__init__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeSplitNode.count_nodes": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeSplitNode.find_attribute": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeSplitNode.get_attribute_observers": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeSplitNode.get_best_split_suggestions": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeSplitNode.get_null_split": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeSplitNode.get_weight_seen": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeSplitNode.get_weight_seen_at_last_split_reevaluation": {
  "data": {
   "lineno": 467
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeSplitNode.learn_from_instance": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "len",
    "range",
    "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver",
    "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.AnyTimeSplitNode.update_weight_seen_at_last_split_reevaluation": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.__init__": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_anytime_tree.HATT",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT._activate_learning_node": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT._attempt_to_split": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "len",
    "numpy.inf",
    "operator.attrgetter",
    "range",
    "skmultiflow.trees.gini_split_criterion.GiniSplitCriterion",
    "skmultiflow.trees.hoeffding_anytime_tree.GINI_SPLIT",
    "skmultiflow.trees.hoeffding_anytime_tree.INFO_GAIN_SPLIT",
    "skmultiflow.trees.info_gain_split_criterion.InfoGainSplitCriterion"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT._deactivate_learning_node": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT._kill_subtree": {
  "data": {
   "lineno": 939
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT._new_learning_node": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_anytime_tree.MAJORITY_CLASS",
    "skmultiflow.trees.hoeffding_anytime_tree.NAIVE_BAYES"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT._partial_fit": {
  "data": {
   "lineno": 603
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT._process_nodes": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT._reevaluate_best_split": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "len",
    "numpy.inf",
    "operator.attrgetter",
    "range",
    "skmultiflow.trees.gini_split_criterion.GiniSplitCriterion",
    "skmultiflow.trees.hoeffding_anytime_tree.GINI_SPLIT",
    "skmultiflow.trees.hoeffding_anytime_tree.INFO_GAIN_SPLIT",
    "skmultiflow.trees.info_gain_split_criterion.InfoGainSplitCriterion"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT._sort_instance_into_leaf": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.deactivate_all_leaves": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.enforce_tracker_limit": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.estimate_model_byte_size": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "isinstance",
    "skmultiflow.utils.utils.calculate_object_size"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.get_info": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.get_model_description": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.measure_byte_size": {
  "data": {
   "lineno": 1073,
   "symbols_in_volume": [
    "skmultiflow.utils.utils.calculate_object_size"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.new_split_node": {
  "data": {
   "lineno": 514
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.partial_fit": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "numpy.array",
    "range",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HATT.reset": {
  "data": {
   "lineno": 1085
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.HoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.hoeffding_tree.HoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.INFO_GAIN_SPLIT": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.InactiveLearningNode": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.InfoGainSplitCriterion": {
  "data": {
   "shadows": "skmultiflow.trees.info_gain_split_criterion.InfoGainSplitCriterion"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.MAJORITY_CLASS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.NAIVE_BAYES": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.NAIVE_BAYES_ADAPTIVE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.Node": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.NominalAttributeClassObserver": {
  "data": {
   "shadows": "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.NumericAttributeClassObserverGaussian": {
  "data": {
   "shadows": "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.SplitNode": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.calculate_object_size": {
  "data": {
   "shadows": "skmultiflow.utils.utils.calculate_object_size"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.do_naive_bayes_prediction": {
  "data": {
   "shadows": "skmultiflow.bayes.do_naive_bayes_prediction"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.error_width_threshold": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.get_dimensions": {
  "data": {
   "shadows": "skmultiflow.utils.utils.get_dimensions"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_anytime_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.trees.hoeffding_tree.logging"
   ]
  },
  "type": "module"
 },
 "skmultiflow.trees.hoeffding_tree.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.AttributeClassObserverNull": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_class_observer_null.AttributeClassObserverNull"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.AttributeSplitSuggestion": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.GINI_SPLIT": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_tree.GiniSplitCriterion": {
  "data": {
   "shadows": "skmultiflow.trees.gini_split_criterion.GiniSplitCriterion"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "skmultiflow.core.base.StreamModel"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode": {
  "data": {
   "lineno": 486
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode.__init__": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode.disable_attribute": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_class_observer_null.AttributeClassObserverNull"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode.get_attribute_observers": {
  "data": {
   "lineno": 609
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode.get_best_split_suggestions": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode.get_weight_seen": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode.get_weight_seen_at_last_split_evaluation": {
  "data": {
   "lineno": 545
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode.learn_from_instance": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "int",
    "len",
    "range",
    "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver",
    "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian",
    "sorted"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode.set_attribute_observers": {
  "data": {
   "lineno": 620
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode.set_weight_seen_at_last_split_evaluation": {
  "data": {
   "lineno": 556
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.FoundNode": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.FoundNode.__init__": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.InactiveLearningNode": {
  "data": {
   "lineno": 452
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.InactiveLearningNode.__init__": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.InactiveLearningNode.learn_from_instance": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.LearningNode": {
  "data": {
   "lineno": 421
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.LearningNode.__init__": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.LearningNode.learn_from_instance": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.LearningNodeNB": {
  "data": {
   "lineno": 631
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.LearningNodeNB.__init__": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.LearningNodeNB.disable_attribute": {
  "data": {
   "lineno": 666
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.LearningNodeNB.get_class_votes": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "skmultiflow.bayes.do_naive_bayes_prediction",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.LearningNodeNBAdaptive": {
  "data": {
   "lineno": 679
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.LearningNodeNBAdaptive.__init__": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.LearningNodeNBAdaptive.get_class_votes": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "skmultiflow.bayes.do_naive_bayes_prediction"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.LearningNodeNBAdaptive.learn_from_instance": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "max",
    "skmultiflow.bayes.do_naive_bayes_prediction",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.Node": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.Node.__init__": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.Node.calculate_promise": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "max",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.Node.describe_subtree": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "max",
    "skmultiflow.trees.hoeffding_tree.textwrap"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.Node.filter_instance_to_leaf": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.Node.get_class_votes": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.Node.get_description": {
  "data": {
   "lineno": 260
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.Node.get_observed_class_distribution": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.Node.is_leaf": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.Node.observed_class_distribution_is_pure": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.Node.set_observed_class_distribution": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.Node.subtree_depth": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode": {
  "data": {
   "lineno": 263
  },
  "type": "class"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode.__init__": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode.describe_subtree": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "range",
    "skmultiflow.trees.hoeffding_tree.textwrap"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode.filter_instance_to_leaf": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode.get_child": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode.get_split_test": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode.instance_child_index": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode.is_leaf": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode.num_children": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode.set_child": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode.subtree_depth": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.__find_learning_nodes": {
  "data": {
   "lineno": 1401,
   "symbols_in_volume": [
    "isinstance",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.__init__": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree._activate_learning_node": {
  "data": {
   "lineno": 1368,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree._attempt_to_split": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "int",
    "len",
    "operator.attrgetter",
    "range",
    "set",
    "skmultiflow.trees.gini_split_criterion.GiniSplitCriterion",
    "skmultiflow.trees.hoeffding_tree.GINI_SPLIT",
    "skmultiflow.trees.hoeffding_tree.INFO_GAIN_SPLIT",
    "skmultiflow.trees.info_gain_split_criterion.InfoGainSplitCriterion"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree._deactivate_learning_node": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree._find_learning_nodes": {
  "data": {
   "lineno": 1389
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree._new_learning_node": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.MAJORITY_CLASS",
    "skmultiflow.trees.hoeffding_tree.NAIVE_BAYES"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree._partial_fit": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.binary_split": {
  "data": {
   "lineno": 843
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.classes": {
  "data": {
   "lineno": 907
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.compute_hoeffding_bound": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.deactivate_all_leaves": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.enforce_tracker_limit": {
  "data": {
   "lineno": 1285,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.estimate_model_byte_size": {
  "data": {
   "lineno": 1316,
   "symbols_in_volume": [
    "isinstance",
    "skmultiflow.utils.utils.calculate_object_size"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.fit": {
  "data": {
   "lineno": 936,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.get_info": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.get_model_description": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.get_model_measurements": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.get_votes_for_instance": {
  "data": {
   "lineno": 1020
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.grace_period": {
  "data": {
   "lineno": 807
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.leaf_prediction": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.MAJORITY_CLASS",
    "skmultiflow.trees.hoeffding_tree.NAIVE_BAYES",
    "skmultiflow.trees.hoeffding_tree.NAIVE_BAYES_ADAPTIVE",
    "skmultiflow.trees.hoeffding_tree.logger"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.max_byte_size": {
  "data": {
   "lineno": 791
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.measure_byte_size": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "skmultiflow.utils.utils.calculate_object_size"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.measure_tree_depth": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.memory_estimate_period": {
  "data": {
   "lineno": 799
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.nb_threshold": {
  "data": {
   "lineno": 888
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.new_split_node": {
  "data": {
   "lineno": 1197
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.no_preprune": {
  "data": {
   "lineno": 867
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.nominal_attributes": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.logger"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.partial_fit": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.ones",
    "range",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.predict": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.array",
    "range",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.predict_proba": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "int",
    "max",
    "numpy.array",
    "numpy.zeros",
    "range",
    "skmultiflow.utils.utils.get_dimensions",
    "skmultiflow.utils.utils.normalize_values_in_dict",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.remove_poor_atts": {
  "data": {
   "lineno": 859
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.reset": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.MAJORITY_CLASS"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.score": {
  "data": {
   "lineno": 1426,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.split_confidence": {
  "data": {
   "lineno": 827
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.split_criterion": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.GINI_SPLIT",
    "skmultiflow.trees.hoeffding_tree.INFO_GAIN_SPLIT",
    "skmultiflow.trees.hoeffding_tree.logger"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.stop_mem_management": {
  "data": {
   "lineno": 851
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.HoeffdingTree.tie_threshold": {
  "data": {
   "lineno": 835
  },
  "type": "function"
 },
 "skmultiflow.trees.hoeffding_tree.INFO_GAIN_SPLIT": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_tree.InfoGainSplitCriterion": {
  "data": {
   "shadows": "skmultiflow.trees.info_gain_split_criterion.InfoGainSplitCriterion"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.MAJORITY_CLASS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_tree.NAIVE_BAYES": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_tree.NAIVE_BAYES_ADAPTIVE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_tree.NominalAttributeClassObserver": {
  "data": {
   "shadows": "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.NumericAttributeClassObserverGaussian": {
  "data": {
   "shadows": "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.StreamModel": {
  "data": {
   "shadows": "skmultiflow.core.base.StreamModel"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.calculate_object_size": {
  "data": {
   "shadows": "skmultiflow.utils.utils.calculate_object_size"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.do_naive_bayes_prediction": {
  "data": {
   "shadows": "skmultiflow.bayes.do_naive_bayes_prediction"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.get_dimensions": {
  "data": {
   "shadows": "skmultiflow.utils.utils.get_dimensions"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.logger": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "skmultiflow.trees.hoeffding_tree.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.normalize_values_in_dict": {
  "data": {
   "shadows": "skmultiflow.utils.utils.normalize_values_in_dict"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.trees.hoeffding_tree.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "skmultiflow.trees.info_gain_split_criterion": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.info_gain_split_criterion.InfoGainSplitCriterion": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "skmultiflow.trees.split_criterion.SplitCriterion"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.info_gain_split_criterion.InfoGainSplitCriterion.__init__": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.info_gain_split_criterion.InfoGainSplitCriterion._compute_entropy_dict": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.log2",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.info_gain_split_criterion.InfoGainSplitCriterion._compute_entropy_list": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "len",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.info_gain_split_criterion.InfoGainSplitCriterion.compute_entropy": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.info_gain_split_criterion.InfoGainSplitCriterion.get_merit_of_split": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.info_gain_split_criterion.InfoGainSplitCriterion.get_range_of_merit": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "len",
    "numpy.log2",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.info_gain_split_criterion.InfoGainSplitCriterion.num_subsets_greater_than_frac": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "range",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.info_gain_split_criterion.SplitCriterion": {
  "data": {
   "shadows": "skmultiflow.trees.split_criterion.SplitCriterion"
  },
  "type": "import"
 },
 "skmultiflow.trees.info_gain_split_criterion.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.trees.instance_conditional_test": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.instance_conditional_test.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "skmultiflow.trees.instance_conditional_test.InstanceConditionalTest": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.instance_conditional_test.InstanceConditionalTest.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.instance_conditional_test.InstanceConditionalTest.branch_for_instance": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.instance_conditional_test.InstanceConditionalTest.describe_condition_for_branch": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.instance_conditional_test.InstanceConditionalTest.get_atts_test_depends_on": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.instance_conditional_test.InstanceConditionalTest.max_branches": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.instance_conditional_test.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "skmultiflow.trees.intra_cluster_variance_reduction_split_criterion": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.intra_cluster_variance_reduction_split_criterion.IntraClusterVarianceReductionSplitCriterion": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "skmultiflow.trees.variance_reduction_split_criterion.VarianceReductionSplitCriterion"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.intra_cluster_variance_reduction_split_criterion.IntraClusterVarianceReductionSplitCriterion.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.intra_cluster_variance_reduction_split_criterion.IntraClusterVarianceReductionSplitCriterion.compute_SD": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.sum",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.intra_cluster_variance_reduction_split_criterion.IntraClusterVarianceReductionSplitCriterion.get_merit_of_split": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.intra_cluster_variance_reduction_split_criterion.VarianceReductionSplitCriterion": {
  "data": {
   "shadows": "skmultiflow.trees.variance_reduction_split_criterion.VarianceReductionSplitCriterion"
  },
  "type": "import"
 },
 "skmultiflow.trees.intra_cluster_variance_reduction_split_criterion.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.trees.lc_hoeffding_tree": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.lc_hoeffding_tree.GINI_SPLIT": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "skmultiflow.trees.lc_hoeffding_tree.HoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.hoeffding_tree.HoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.trees.lc_hoeffding_tree.INFO_GAIN_SPLIT": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.LCActiveLearningNode": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.LCActiveLearningNode.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.LCActiveLearningNode.learn_from_instance": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "len",
    "range",
    "skmultiflow.trees.lc_hoeffding_tree.NAIVE_BAYES_ADAPTIVE",
    "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver",
    "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.LCInactiveLearningNode": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.InactiveLearningNode"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.LCInactiveLearningNode.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.LCInactiveLearningNode.learn_from_instance": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.LCLearningNodeNB": {
  "data": {
   "lineno": 151
  },
  "type": "class"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.LCLearningNodeNB.__init__": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.LCLearningNodeNB.disable_attribute": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.LCLearningNodeNB.get_class_votes": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "skmultiflow.bayes.do_naive_bayes_prediction",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.LCLearningNodeNBA": {
  "data": {
   "lineno": 191
  },
  "type": "class"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.LCLearningNodeNBA.__init__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.LCLearningNodeNBA.get_class_votes": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "skmultiflow.bayes.do_naive_bayes_prediction"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.LCLearningNodeNBA.learn_from_instance": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "int",
    "max",
    "skmultiflow.bayes.do_naive_bayes_prediction",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT._deactivate_learning_node": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "int",
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT._new_learning_node": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "skmultiflow.trees.lc_hoeffding_tree.MAJORITY_CLASS",
    "skmultiflow.trees.lc_hoeffding_tree.NAIVE_BAYES"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.n_labels": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.partial_fit": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.LCHT.predict": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "get_dimensions",
    "int",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.lc_hoeffding_tree.MAJORITY_CLASS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "skmultiflow.trees.lc_hoeffding_tree.NAIVE_BAYES": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "skmultiflow.trees.lc_hoeffding_tree.NAIVE_BAYES_ADAPTIVE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "skmultiflow.trees.lc_hoeffding_tree.NominalAttributeClassObserver": {
  "data": {
   "shadows": "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver"
  },
  "type": "import"
 },
 "skmultiflow.trees.lc_hoeffding_tree.NumericAttributeClassObserverGaussian": {
  "data": {
   "shadows": "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian"
  },
  "type": "import"
 },
 "skmultiflow.trees.lc_hoeffding_tree.do_naive_bayes_prediction": {
  "data": {
   "shadows": "skmultiflow.bayes.do_naive_bayes_prediction"
  },
  "type": "import"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree.logging"
   ]
  },
  "type": "module"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.IntraClusterVarianceReductionSplitCriterion": {
  "data": {
   "shadows": "skmultiflow.trees.intra_cluster_variance_reduction_split_criterion.IntraClusterVarianceReductionSplitCriterion"
  },
  "type": "import"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.ActiveLearningNodeForRegression": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.ActiveLearningNodeForRegression"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.ActiveLearningNodeForRegression.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.ActiveLearningNodeForRegression.learn_from_instance": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "KeyError",
    "enumerate",
    "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver",
    "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeRegressionObserverMultiTarget"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.InactiveLearningNodeAdaptive": {
  "data": {
   "lineno": 383
  },
  "type": "class"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.InactiveLearningNodeAdaptive.__init__": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.InactiveLearningNodeAdaptive.update_weights": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.InactiveLearningNodePerceptron": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.InactiveLearningNodePerceptron"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.InactiveLearningNodePerceptron.__init__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.InactiveLearningNodePerceptron.learn_from_instance": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "range",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.InactiveLearningNodePerceptron.normalize_perceptron_weights": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.InactiveLearningNodePerceptron.predict": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.InactiveLearningNodePerceptron.update_weights": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.LearningNodeAdaptive": {
  "data": {
   "lineno": 248
  },
  "type": "class"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.LearningNodeAdaptive.__init__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.LearningNodeAdaptive.update_weights": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.LearningNodePerceptron": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.LearningNodePerceptron"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.LearningNodePerceptron.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.LearningNodePerceptron.get_weight_seen": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.LearningNodePerceptron.learn_from_instance": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "KeyError",
    "enumerate",
    "int",
    "range",
    "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver",
    "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeRegressionObserverMultiTarget",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.LearningNodePerceptron.normalize_perceptron_weights": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.LearningNodePerceptron.predict": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.LearningNodePerceptron.update_weights": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.matmul"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.__init__": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree._attempt_to_split": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.float64",
    "numpy.zeros",
    "operator.attrgetter",
    "range",
    "set",
    "skmultiflow.trees.intra_cluster_variance_reduction_split_criterion.IntraClusterVarianceReductionSplitCriterion",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._ADAPTIVE",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._PERCEPTRON",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._TARGET_MEAN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree._deactivate_learning_node": {
  "data": {
   "lineno": 944,
   "symbols_in_volume": [
    "int",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._ADAPTIVE",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._PERCEPTRON",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._TARGET_MEAN",
    "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.ActiveLearningNode",
    "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.SplitNode"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree._get_predictors_faded_error": {
  "data": {
   "lineno": 602
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree._new_learning_node": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._ADAPTIVE",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._PERCEPTRON",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._TARGET_MEAN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree._partial_fit": {
  "data": {
   "lineno": 692,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.ActiveLearningNode"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.enforce_tracker_limit": {
  "data": {
   "lineno": 829
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.get_weights_for_instance": {
  "data": {
   "lineno": 625
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.leaf_prediction": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._ADAPTIVE",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._PERCEPTRON",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._TARGET_MEAN",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree.logger"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.normalize_sample": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "numpy.divide",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.zeros",
    "numpy.zeros_like",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.normalized_target_value": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "numpy.divide",
    "numpy.float64",
    "numpy.sqrt",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.partial_fit": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.ones",
    "range",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.predict": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.matmul",
    "numpy.sqrt",
    "numpy.zeros",
    "numpy.zeros_like",
    "range",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._ADAPTIVE",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._PERCEPTRON",
    "skmultiflow.trees.multi_target_regression_hoeffding_tree._TARGET_MEAN",
    "skmultiflow.utils.utils.get_dimensions"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.predict_proba": {
  "data": {
   "lineno": 826
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.MultiTargetRegressionHoeffdingTree.split_criterion": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "skmultiflow.trees.multi_target_regression_hoeffding_tree.logger"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.NominalAttributeRegressionObserver": {
  "data": {
   "shadows": "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver"
  },
  "type": "import"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.NumericAttributeRegressionObserverMultiTarget": {
  "data": {
   "shadows": "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeRegressionObserverMultiTarget"
  },
  "type": "import"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.RegressionHoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree._ADAPTIVE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree._PERCEPTRON": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree._TARGET_MEAN": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.get_dimensions": {
  "data": {
   "shadows": "skmultiflow.utils.utils.get_dimensions"
  },
  "type": "import"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skmultiflow.trees.multi_target_regression_hoeffding_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.trees.nominal_attribute_binary_test": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.nominal_attribute_binary_test.InstanceConditionalTest": {
  "data": {
   "shadows": "skmultiflow.trees.instance_conditional_test.InstanceConditionalTest"
  },
  "type": "import"
 },
 "skmultiflow.trees.nominal_attribute_binary_test.NominalAttributeBinaryTest": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "skmultiflow.trees.instance_conditional_test.InstanceConditionalTest"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.nominal_attribute_binary_test.NominalAttributeBinaryTest.__init__": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_binary_test.NominalAttributeBinaryTest.branch_for_instance": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_binary_test.NominalAttributeBinaryTest.describe_condition_for_branch": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_binary_test.NominalAttributeBinaryTest.get_atts_test_depends_on": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_binary_test.NominalAttributeBinaryTest.max_branches": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_class_observer": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.nominal_attribute_class_observer.AttributeClassObserver": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_class_observer.AttributeClassObserver"
  },
  "type": "import"
 },
 "skmultiflow.trees.nominal_attribute_class_observer.AttributeSplitSuggestion": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion"
  },
  "type": "import"
 },
 "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeBinaryTest": {
  "data": {
   "shadows": "skmultiflow.trees.nominal_attribute_binary_test.NominalAttributeBinaryTest"
  },
  "type": "import"
 },
 "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_class_observer.AttributeClassObserver"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver.__init__": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver.get_best_evaluated_split_suggestion": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "set",
    "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion",
    "skmultiflow.trees.nominal_attribute_binary_test.NominalAttributeBinaryTest",
    "skmultiflow.trees.nominal_attribute_multiway_test.NominalAttributeMultiwayTest"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver.get_class_dist_from_binary_split": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver.get_class_dist_from_multiway_split": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "dict",
    "sorted"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver.observe_attribute_class": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "sorted"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeClassObserver.probability_of_attribute_value_given_class": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_class_observer.NominalAttributeMultiwayTest": {
  "data": {
   "shadows": "skmultiflow.trees.nominal_attribute_multiway_test.NominalAttributeMultiwayTest"
  },
  "type": "import"
 },
 "skmultiflow.trees.nominal_attribute_multiway_test": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.nominal_attribute_multiway_test.InstanceConditionalTest": {
  "data": {
   "shadows": "skmultiflow.trees.instance_conditional_test.InstanceConditionalTest"
  },
  "type": "import"
 },
 "skmultiflow.trees.nominal_attribute_multiway_test.NominalAttributeMultiwayTest": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "skmultiflow.trees.instance_conditional_test.InstanceConditionalTest"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.nominal_attribute_multiway_test.NominalAttributeMultiwayTest.__init__": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_multiway_test.NominalAttributeMultiwayTest.branch_for_instance": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_multiway_test.NominalAttributeMultiwayTest.describe_condition_for_branch": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_multiway_test.NominalAttributeMultiwayTest.get_atts_test_depends_on": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_multiway_test.NominalAttributeMultiwayTest.max_branches": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.AttributeClassObserver": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_class_observer.AttributeClassObserver"
  },
  "type": "import"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.AttributeSplitSuggestion": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion"
  },
  "type": "import"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeBinaryTest": {
  "data": {
   "shadows": "skmultiflow.trees.nominal_attribute_binary_test.NominalAttributeBinaryTest"
  },
  "type": "import"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeMultiwayTest": {
  "data": {
   "shadows": "skmultiflow.trees.nominal_attribute_multiway_test.NominalAttributeMultiwayTest"
  },
  "type": "import"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_class_observer.AttributeClassObserver"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver.Node": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver.Node.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver.Node.insert_value": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver.get_best_evaluated_split_suggestion": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver.observe_attribute_class": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver.probability_of_attribute_value_given_class": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver.search_for_best_binary_split_option": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion",
    "skmultiflow.trees.nominal_attribute_binary_test.NominalAttributeBinaryTest"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver.search_for_best_multiway_split_option": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "numpy.zeros",
    "range",
    "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion",
    "skmultiflow.trees.nominal_attribute_multiway_test.NominalAttributeMultiwayTest"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.nominal_attribute_regression_observer.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_binary_test": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.numeric_attribute_binary_test.InstanceConditionalTest": {
  "data": {
   "shadows": "skmultiflow.trees.instance_conditional_test.InstanceConditionalTest"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "skmultiflow.trees.instance_conditional_test.InstanceConditionalTest"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest.__init__": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest.branch_for_instance": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest.describe_condition_for_branch": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest.get_atts_test_depends_on": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest.get_split_value": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest.max_branches": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_binary_tree": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.AttributeClassObserver": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_class_observer.AttributeClassObserver"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.AttributeSplitSuggestion": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.NumericAttributeBinaryTest": {
  "data": {
   "shadows": "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.NumericAttributeClassObserverBinaryTree": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_class_observer.AttributeClassObserver"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.NumericAttributeClassObserverBinaryTree.Node": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.NumericAttributeClassObserverBinaryTree.Node.__init__": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.NumericAttributeClassObserverBinaryTree.Node.insert_value": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.NumericAttributeClassObserverBinaryTree"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.NumericAttributeClassObserverBinaryTree.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.NumericAttributeClassObserverBinaryTree.get_best_evaluated_split_suggestion": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.NumericAttributeClassObserverBinaryTree.observe_attribute_class": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.NumericAttributeClassObserverBinaryTree"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.NumericAttributeClassObserverBinaryTree.probability_of_attribute_value_given_class": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.NumericAttributeClassObserverBinaryTree.search_for_best_split_option": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "collections.Counter",
    "dict",
    "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion",
    "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_gaussian": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_gaussian.AttributeClassObserver": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_class_observer.AttributeClassObserver"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_gaussian.AttributeSplitSuggestion": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_gaussian.GaussianEstimator": {
  "data": {
   "shadows": "skmultiflow.trees.gaussian_estimator.GaussianEstimator"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeBinaryTest": {
  "data": {
   "shadows": "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_class_observer.AttributeClassObserver"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian.get_best_evaluated_split_suggestion": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion",
    "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian.get_class_dists_from_binary_split": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian.get_split_point_suggestions": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "float",
    "numpy.inf",
    "range",
    "sortedcontainers.sortedlist.SortedList"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian.observe_attribute_class": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "skmultiflow.trees.gaussian_estimator.GaussianEstimator",
    "sorted"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_gaussian.NumericAttributeClassObserverGaussian.probability_of_attribute_value_given_class": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_gaussian.SortedList": {
  "data": {
   "shadows": "sortedcontainers.sortedlist.SortedList"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_class_observer_gaussian.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer.AttributeSplitSuggestion": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeBinaryTest": {
  "data": {
   "shadows": "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeClassObserverBinaryTree": {
  "data": {
   "shadows": "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.NumericAttributeClassObserverBinaryTree"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "skmultiflow.trees.numeric_attribute_class_observer_binary_tree.NumericAttributeClassObserverBinaryTree"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver.Node": {
  "data": {
   "lineno": 11
  },
  "type": "class"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver.Node.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver.Node.insert_value": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "KeyError",
    "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver.get_best_evaluated_split_suggestion": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver.observe_attribute_class": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver.probability_of_attribute_value_given_class": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver.remove_bad_split_nodes": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver.remove_bad_splits": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver.search_for_best_split_option": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion",
    "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer_multi_target": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.AttributeClassObserver": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_class_observer.AttributeClassObserver"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.AttributeSplitSuggestion": {
  "data": {
   "shadows": "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeBinaryTest": {
  "data": {
   "shadows": "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest"
  },
  "type": "import"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeRegressionObserverMultiTarget": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_class_observer.AttributeClassObserver"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeRegressionObserverMultiTarget.Node": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeRegressionObserverMultiTarget.Node.__init__": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeRegressionObserverMultiTarget.Node.insert_value": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeRegressionObserverMultiTarget"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeRegressionObserverMultiTarget.__init__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeRegressionObserverMultiTarget._find_best_split": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion",
    "skmultiflow.trees.numeric_attribute_binary_test.NumericAttributeBinaryTest"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeRegressionObserverMultiTarget.get_best_evaluated_split_suggestion": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "float",
    "numpy.zeros_like",
    "skmultiflow.trees.attribute_split_suggestion.AttributeSplitSuggestion"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeRegressionObserverMultiTarget.observe_attribute_class": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeRegressionObserverMultiTarget"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.NumericAttributeRegressionObserverMultiTarget.probability_of_attribute_value_given_class": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "skmultiflow.trees.numeric_attribute_regression_observer_multi_target.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.trees.regression_hoeffding_adaptive_tree.logging",
    "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.LearningNodePerceptron",
    "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.SplitNode"
   ]
  },
  "type": "module"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.ADWIN": {
  "data": {
   "shadows": "skmultiflow.drift_detection.adwin.ADWIN"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.HoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.regression_hoeffding_tree.HoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.LearningNodePerceptron": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaLearningNodeForRegression": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "skmultiflow.trees.regression_hoeffding_adaptive_tree.LearningNodePerceptron"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaLearningNodeForRegression.__init__": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "skmultiflow.drift_detection.adwin.ADWIN",
    "skmultiflow.utils.check_random_state",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaLearningNodeForRegression.filter_instance_to_leaves": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "skmultiflow.trees.regression_hoeffding_tree.HoeffdingTree.FoundNode"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaLearningNodeForRegression.get_error_estimation": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaLearningNodeForRegression.get_error_width": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaLearningNodeForRegression.is_null_error": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaLearningNodeForRegression.kill_tree_children": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaLearningNodeForRegression.learn_from_instance": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "skmultiflow.drift_detection.adwin.ADWIN",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaLearningNodeForRegression.number_leaves": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaSplitNodeForRegression": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "skmultiflow.trees.regression_hoeffding_adaptive_tree.SplitNode"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaSplitNodeForRegression.__init__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "skmultiflow.drift_detection.adwin.ADWIN",
    "skmultiflow.utils.check_random_state",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaSplitNodeForRegression.filter_instance_to_leaves": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "KeyError",
    "skmultiflow.trees.regression_hoeffding_tree.HoeffdingTree.FoundNode"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaSplitNodeForRegression.get_error_estimation": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaSplitNodeForRegression.get_error_width": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaSplitNodeForRegression.is_null_error": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaSplitNodeForRegression.kill_tree_children": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "isinstance",
    "skmultiflow.trees.regression_hoeffding_tree.HoeffdingTree.ActiveLearningNode",
    "skmultiflow.trees.regression_hoeffding_tree.HoeffdingTree.InactiveLearningNode"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaSplitNodeForRegression.learn_from_instance": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "isinstance",
    "print",
    "skmultiflow.drift_detection.adwin.ADWIN",
    "skmultiflow.trees.regression_hoeffding_adaptive_tree.error_width_threshold",
    "skmultiflow.trees.regression_hoeffding_tree.HoeffdingTree.ActiveLearningNode"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.AdaSplitNodeForRegression.number_leaves": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.NewNode": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.NewNode.filter_instance_to_leaves": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.NewNode.get_error_estimation": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.NewNode.get_error_width": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.NewNode.is_null_error": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.NewNode.kill_tree_children": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.NewNode.learn_from_instance": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.NewNode.number_leaves": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.__init__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT._new_learning_node": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT._partial_fit": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.filter_instance_to_leaves": {
  "data": {
   "lineno": 419
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.get_normalized_error": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.leaf_prediction": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "skmultiflow.trees.regression_hoeffding_adaptive_tree._PERCEPTRON",
    "skmultiflow.trees.regression_hoeffding_adaptive_tree._TARGET_MEAN",
    "skmultiflow.trees.regression_hoeffding_adaptive_tree.logger"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHAT.new_split_node": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.RegressionHoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.SplitNode": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree._PERCEPTRON": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree._TARGET_MEAN": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.error_width_threshold": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "skmultiflow.trees.regression_hoeffding_adaptive_tree.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_tree": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "skmultiflow.trees.regression_hoeffding_tree.logging"
   ]
  },
  "type": "module"
 },
 "skmultiflow.trees.regression_hoeffding_tree.HoeffdingTree": {
  "data": {
   "shadows": "skmultiflow.trees.hoeffding_tree.HoeffdingTree"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_tree.NominalAttributeRegressionObserver": {
  "data": {
   "shadows": "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_tree.NumericAttributeRegressionObserver": {
  "data": {
   "shadows": "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.ActiveLearningNodeForRegression": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.ActiveLearningNodeForRegression.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.ActiveLearningNodeForRegression.get_weight_seen": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.ActiveLearningNodeForRegression.learn_from_instance": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "KeyError",
    "len",
    "range",
    "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver",
    "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.InactiveLearningNodeForRegression": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.InactiveLearningNode"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.InactiveLearningNodeForRegression.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.InactiveLearningNodeForRegression.learn_from_instance": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.InactiveLearningNodePerceptron": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.InactiveLearningNode"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.InactiveLearningNodePerceptron.__init__": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.InactiveLearningNodePerceptron.learn_from_instance": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "len",
    "numpy.random.uniform",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.InactiveLearningNodePerceptron.predict": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.InactiveLearningNodePerceptron.update_weights": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.LearningNodePerceptron": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.LearningNodePerceptron.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.LearningNodePerceptron.get_weight_seen": {
  "data": {
   "lineno": 234
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.LearningNodePerceptron.learn_from_instance": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "len",
    "range",
    "skmultiflow.trees.nominal_attribute_regression_observer.NominalAttributeRegressionObserver",
    "skmultiflow.trees.numeric_attribute_regression_observer.NumericAttributeRegressionObserver"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.LearningNodePerceptron.predict": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "numpy.dot"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.LearningNodePerceptron.update_weights": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "numpy.multiply"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.__init__": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "skmultiflow.utils.check_random_state"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree._attempt_to_split": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "int",
    "len",
    "operator.attrgetter",
    "range",
    "set",
    "skmultiflow.trees.regression_hoeffding_tree._PERCEPTRON",
    "skmultiflow.trees.variance_reduction_split_criterion.VarianceReductionSplitCriterion"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree._deactivate_learning_node": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "int",
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode",
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.SplitNode",
    "skmultiflow.trees.regression_hoeffding_tree._TARGET_MEAN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree._new_learning_node": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "skmultiflow.trees.regression_hoeffding_tree._PERCEPTRON",
    "skmultiflow.trees.regression_hoeffding_tree._TARGET_MEAN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree._partial_fit": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.add",
    "numpy.multiply",
    "numpy.power",
    "skmultiflow.trees.hoeffding_tree.HoeffdingTree.ActiveLearningNode"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.enforce_tracker_limit": {
  "data": {
   "lineno": 591
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.get_weights_for_instance": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.leaf_prediction": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "skmultiflow.trees.regression_hoeffding_tree._PERCEPTRON",
    "skmultiflow.trees.regression_hoeffding_tree._TARGET_MEAN",
    "skmultiflow.trees.regression_hoeffding_tree.logger"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.normalize_sample": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "len",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.normalized_target_value": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.partial_fit": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "ValueError",
    "get_dimensions",
    "len",
    "numpy.ones",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.predict": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "get_dimensions",
    "numpy.asarray",
    "numpy.dot",
    "numpy.sqrt",
    "range",
    "skmultiflow.trees.regression_hoeffding_tree._PERCEPTRON",
    "skmultiflow.trees.regression_hoeffding_tree._TARGET_MEAN"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.predict_proba": {
  "data": {
   "lineno": 588
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.RegressionHoeffdingTree.split_criterion": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "skmultiflow.trees.regression_hoeffding_tree.logger"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.regression_hoeffding_tree.VarianceReductionSplitCriterion": {
  "data": {
   "shadows": "skmultiflow.trees.variance_reduction_split_criterion.VarianceReductionSplitCriterion"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_tree._PERCEPTRON": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "skmultiflow.trees.regression_hoeffding_tree._TARGET_MEAN": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "skmultiflow.trees.regression_hoeffding_tree.attrgetter": {
  "data": {
   "shadows": "operator.attrgetter"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_tree.check_random_state": {
  "data": {
   "shadows": "skmultiflow.utils.check_random_state"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_tree.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "skmultiflow.trees.regression_hoeffding_tree.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "skmultiflow.trees.regression_hoeffding_tree.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.trees.split_criterion": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.split_criterion.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "skmultiflow.trees.split_criterion.SplitCriterion": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "abc.ABCMeta"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.split_criterion.SplitCriterion.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.split_criterion.SplitCriterion.get_merit_of_split": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.split_criterion.SplitCriterion.get_range_of_merit": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.split_criterion.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "skmultiflow.trees.variance_reduction_split_criterion": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.trees.variance_reduction_split_criterion.SplitCriterion": {
  "data": {
   "shadows": "skmultiflow.trees.split_criterion.SplitCriterion"
  },
  "type": "import"
 },
 "skmultiflow.trees.variance_reduction_split_criterion.VarianceReductionSplitCriterion": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "skmultiflow.trees.split_criterion.SplitCriterion"
   ]
  },
  "type": "class"
 },
 "skmultiflow.trees.variance_reduction_split_criterion.VarianceReductionSplitCriterion.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.variance_reduction_split_criterion.VarianceReductionSplitCriterion.compute_SD": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "numpy.sqrt",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.variance_reduction_split_criterion.VarianceReductionSplitCriterion.get_merit_of_split": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.variance_reduction_split_criterion.VarianceReductionSplitCriterion.get_range_of_merit": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.trees.variance_reduction_split_criterion.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.utils": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.utils.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants": {
  "data": {
   "symbols_in_volume": [
    "skmultiflow.utils.constants.ACCURACY",
    "skmultiflow.utils.constants.AMAE",
    "skmultiflow.utils.constants.AMSE",
    "skmultiflow.utils.constants.ARMSE",
    "skmultiflow.utils.constants.CLASSIFICATION",
    "skmultiflow.utils.constants.DATA_POINTS",
    "skmultiflow.utils.constants.EXACT_MATCH",
    "skmultiflow.utils.constants.HAMMING_LOSS",
    "skmultiflow.utils.constants.HAMMING_SCORE",
    "skmultiflow.utils.constants.J_INDEX",
    "skmultiflow.utils.constants.KAPPA",
    "skmultiflow.utils.constants.KAPPA_M",
    "skmultiflow.utils.constants.KAPPA_T",
    "skmultiflow.utils.constants.MAE",
    "skmultiflow.utils.constants.MODEL_SIZE",
    "skmultiflow.utils.constants.MSE",
    "skmultiflow.utils.constants.MULTI_OUTPUT",
    "skmultiflow.utils.constants.MULTI_TARGET_CLASSIFICATION",
    "skmultiflow.utils.constants.MULTI_TARGET_REGRESSION",
    "skmultiflow.utils.constants.REGRESSION",
    "skmultiflow.utils.constants.RUNNING_TIME",
    "skmultiflow.utils.constants.SINGLE_OUTPUT",
    "skmultiflow.utils.constants.TRUE_VS_PREDICTED",
    "skmultiflow.utils.constants.UNDEFINED"
   ]
  },
  "type": "module"
 },
 "skmultiflow.utils.constants.ACCURACY": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.AMAE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.AMSE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.ARMSE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.CLASSIFICATION": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.CLASSIFICATION_METRICS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.CURRENT": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.DATA_POINTS": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.EXACT_MATCH": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.HAMMING_LOSS": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.HAMMING_SCORE": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.J_INDEX": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.KAPPA": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.KAPPA_M": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.KAPPA_T": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.MAE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.MEAN": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.MODEL_SIZE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.MSE": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.MULTI_OUTPUT": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.MULTI_TARGET_CLASSIFICATION": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.MULTI_TARGET_CLASSIFICATION_METRICS": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.MULTI_TARGET_REGRESSION": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.MULTI_TARGET_REGRESSION_METRICS": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.PLOT_TYPES": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.REGRESSION": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.REGRESSION_METRICS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.RUNNING_TIME": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.SINGLE_OUTPUT": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.TASK_TYPES": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.TRUE_VS_PREDICTED": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.UNDEFINED": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.Y_PRED": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "skmultiflow.utils.constants.Y_TRUE": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "skmultiflow.utils.data_structures": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.utils.data_structures.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix.__init__": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix._remove": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix._sample_count": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix._update": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix.column": {
  "data": {
   "lineno": 544
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix.get_class_type": {
  "data": {
   "lineno": 591
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix.get_info": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix.get_sum_main_diagonal": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix.matrix": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix.remove": {
  "data": {
   "lineno": 445
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix.reshape": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix.restart": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix.row": {
  "data": {
   "lineno": 528
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix.shape": {
  "data": {
   "lineno": 498
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix.update": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.ConfusionMatrix.value_at": {
  "data": {
   "lineno": 509
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastBuffer": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.utils.data_structures.FastBuffer.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastBuffer._clear_all": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastBuffer.add_element": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastBuffer.clear_queue": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastBuffer.configure": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastBuffer.get_class_type": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastBuffer.get_current_size": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastBuffer.get_info": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastBuffer.get_next_element": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastBuffer.get_queue": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastBuffer.is_empty": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastBuffer.is_full": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastBuffer.peek": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastBuffer.print_queue": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer.__init__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer._clear_all": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer.add_element": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer.clear_queue": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer.configure": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer.get_class_type": {
  "data": {
   "lineno": 205
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer.get_current_size": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer.get_info": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer.get_next_element": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer.get_queue": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer.is_empty": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer.is_full": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer.peek": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.FastComplexBuffer.print_queue": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.InstanceWindow": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.utils.data_structures.InstanceWindow.__init__": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "float",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.InstanceWindow.add_element": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.concatenate",
    "numpy.delete",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.InstanceWindow.at_index": {
  "data": {
   "lineno": 989
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.InstanceWindow.buffer": {
  "data": {
   "lineno": 1011,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.InstanceWindow.configure": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.InstanceWindow.delete_element": {
  "data": {
   "lineno": 974
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.InstanceWindow.get_attributes_matrix": {
  "data": {
   "lineno": 983
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.InstanceWindow.get_class_type": {
  "data": {
   "lineno": 1027
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.InstanceWindow.get_info": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.InstanceWindow.get_targets_matrix": {
  "data": {
   "lineno": 986
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.InstanceWindow.n_attributes": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.InstanceWindow.n_samples": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.InstanceWindow.n_targets": {
  "data": {
   "lineno": 1015,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.InstanceWindow.reset": {
  "data": {
   "lineno": 1008
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.__init__": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "numpy.int64",
    "numpy.zeros",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix._remove": {
  "data": {
   "lineno": 731
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix._update": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.column": {
  "data": {
   "lineno": 788
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.get_class_type": {
  "data": {
   "lineno": 877
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.get_info": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.get_sum_main_diagonal": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.get_total_discordance": {
  "data": {
   "lineno": 849
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.get_total_sum": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.matrix": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.remove": {
  "data": {
   "lineno": 699
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.reshape": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.restart": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.row": {
  "data": {
   "lineno": 772
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.shape": {
  "data": {
   "lineno": 747
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.target": {
  "data": {
   "lineno": 804
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.update": {
  "data": {
   "lineno": 654
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.MOLConfusionMatrix.value_at": {
  "data": {
   "lineno": 750
  },
  "type": "function"
 },
 "skmultiflow.utils.data_structures.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.utils.file_scripts": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.utils.file_scripts.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.utils.file_scripts.RemoveHeader": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.utils.file_scripts.RemoveHeader.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.file_scripts.RemoveHeader.clean_file": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.file_scripts.RemoveHeader.configure": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.file_scripts.RemoveHeader.get_class_type": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "skmultiflow.utils.file_scripts.RemoveHeader.get_info": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.file_scripts.clean_header": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "len",
    "open"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.statistics": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.utils.statistics.MAXLOG": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "skmultiflow.utils.statistics.SQRTH": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "skmultiflow.utils.statistics.error_function": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "error_function_complemented",
    "numpy.abs",
    "p1_evl",
    "pol_evl"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.statistics.error_function_complemented": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.exp",
    "p1_evl",
    "pol_evl",
    "skmultiflow.utils.statistics.MAXLOG",
    "skmultiflow.utils.statistics.error_function"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.statistics.normal_probability": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "error_function",
    "error_function_complemented",
    "numpy.abs",
    "skmultiflow.utils.statistics.SQRTH"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.statistics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.utils.statistics.p1_evl": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.statistics.pol_evl": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.utils": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.utils.utils.calculate_object_size": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "IndexError",
    "bytearray",
    "bytes",
    "collections.deque",
    "dict",
    "hasattr",
    "id",
    "isinstance",
    "set",
    "skmultiflow.utils.utils.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.utils.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "skmultiflow.utils.utils.get_dimensions": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.array",
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.utils.get_max_value_key": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "max"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.utils.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "skmultiflow.utils.utils.normalize_values_in_dict": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "skmultiflow.utils.utils.math",
    "sum"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.utils.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "skmultiflow.utils.validation": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.utils.validation.check_random_state": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.integer",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.random.mtrand._rand",
    "skmultiflow.utils.validation.numbers"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.validation.check_weights": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "float",
    "int",
    "isinstance",
    "list",
    "numpy.array",
    "numpy.float",
    "numpy.integer",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "skmultiflow.utils.validation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "skmultiflow.utils.validation.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "skmultiflow.visualization": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.visualization.base_listener": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.visualization.base_listener.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "skmultiflow.visualization.base_listener.BaseListener": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "skmultiflow.core.base_object.BaseObject"
   ]
  },
  "type": "class"
 },
 "skmultiflow.visualization.base_listener.BaseListener.__init__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.visualization.base_listener.BaseListener.get_class_type": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "skmultiflow.visualization.base_listener.BaseListener.get_info": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.visualization.base_listener.BaseListener.on_new_train_step": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.visualization.base_listener.BaseObject": {
  "data": {
   "shadows": "skmultiflow.core.base_object.BaseObject"
  },
  "type": "import"
 },
 "skmultiflow.visualization.base_listener.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "skmultiflow.visualization.evaluation_visualizer": {
  "data": {},
  "type": "module"
 },
 "skmultiflow.visualization.evaluation_visualizer.BaseListener": {
  "data": {
   "shadows": "skmultiflow.visualization.base_listener.BaseListener"
  },
  "type": "import"
 },
 "skmultiflow.visualization.evaluation_visualizer.EvaluationVisualizer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "skmultiflow.visualization.base_listener.BaseListener"
   ]
  },
  "type": "class"
 },
 "skmultiflow.visualization.evaluation_visualizer.EvaluationVisualizer.__configure": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "PlotDataTracker",
    "len",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.ion",
    "matplotlib.pyplot.rc",
    "matplotlib.pyplot.xlabel",
    "matplotlib.rcsetup.cycler",
    "range",
    "skmultiflow.utils.FastBuffer",
    "skmultiflow.utils.constants.ACCURACY",
    "skmultiflow.utils.constants.AMAE",
    "skmultiflow.utils.constants.AMSE",
    "skmultiflow.utils.constants.ARMSE",
    "skmultiflow.utils.constants.CLASSIFICATION",
    "skmultiflow.utils.constants.CURRENT",
    "skmultiflow.utils.constants.DATA_POINTS",
    "skmultiflow.utils.constants.EXACT_MATCH",
    "skmultiflow.utils.constants.HAMMING_LOSS",
    "skmultiflow.utils.constants.HAMMING_SCORE",
    "skmultiflow.utils.constants.J_INDEX",
    "skmultiflow.utils.constants.KAPPA",
    "skmultiflow.utils.constants.KAPPA_M",
    "skmultiflow.utils.constants.KAPPA_T",
    "skmultiflow.utils.constants.MAE",
    "skmultiflow.utils.constants.MODEL_SIZE",
    "skmultiflow.utils.constants.MSE",
    "skmultiflow.utils.constants.RUNNING_TIME",
    "skmultiflow.utils.constants.TRUE_VS_PREDICTED",
    "skmultiflow.utils.constants.Y_TRUE",
    "skmultiflow.visualization.evaluation_visualizer.warnings"
   ]
  },
  "type": "function"
 },
 "skmultiflow.visualization.evaluation_visualizer.EvaluationVisualizer.__init__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "range",
    "skmultiflow.utils.constants.CLASSIFICATION",
    "skmultiflow.utils.constants.DATA_POINTS",
    "skmultiflow.utils.constants.MULTI_TARGET_CLASSIFICATION",
    "skmultiflow.utils.constants.MULTI_TARGET_REGRESSION",
    "skmultiflow.utils.constants.REGRESSION",
    "skmultiflow.utils.constants.UNDEFINED",
    "super"
   ]
  },
  "type": "function"
 },
 "skmultiflow.visualization.evaluation_visualizer.EvaluationVisualizer._clear_annotations": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "skmultiflow.visualization.evaluation_visualizer.EvaluationVisualizer._set_fig_legend": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "skmultiflow.visualization.evaluation_visualizer.EvaluationVisualizer._update_annotations": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "skmultiflow.visualization.evaluation_visualizer.EvaluationVisualizer._update_plots": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "max",
    "min",
    "range",
    "skmultiflow.utils.FastBuffer",
    "skmultiflow.utils.constants.AMAE",
    "skmultiflow.utils.constants.AMSE",
    "skmultiflow.utils.constants.ARMSE",
    "skmultiflow.utils.constants.CURRENT",
    "skmultiflow.utils.constants.DATA_POINTS",
    "skmultiflow.utils.constants.KAPPA_M",
    "skmultiflow.utils.constants.KAPPA_T",
    "skmultiflow.utils.constants.MAE",
    "skmultiflow.utils.constants.MEAN",
    "skmultiflow.utils.constants.MODEL_SIZE",
    "skmultiflow.utils.constants.MSE",
    "skmultiflow.utils.constants.RUNNING_TIME",
    "skmultiflow.utils.constants.TRUE_VS_PREDICTED",
    "skmultiflow.utils.constants.Y_PRED",
    "skmultiflow.utils.constants.Y_TRUE",
    "zip"
   ]
  },
  "type": "function"
 },
 "skmultiflow.visualization.evaluation_visualizer.EvaluationVisualizer._update_time_and_memory_annotations": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "enumerate",
    "skmultiflow.utils.constants.MODEL_SIZE",
    "skmultiflow.utils.constants.RUNNING_TIME"
   ]
  },
  "type": "function"
 },
 "skmultiflow.visualization.evaluation_visualizer.EvaluationVisualizer.get_info": {
  "data": {
   "lineno": 492
  },
  "type": "function"
 },
 "skmultiflow.visualization.evaluation_visualizer.EvaluationVisualizer.hold": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "matplotlib.pyplot.show",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "skmultiflow.visualization.evaluation_visualizer.EvaluationVisualizer.on_new_train_step": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "BaseException",
    "ValueError",
    "matplotlib.get_backend",
    "matplotlib.pyplot.pause",
    "matplotlib.pyplot.subplots_adjust",
    "skmultiflow.visualization.evaluation_visualizer.time",
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.visualization.evaluation_visualizer.FastBuffer": {
  "data": {
   "shadows": "skmultiflow.utils.FastBuffer"
  },
  "type": "import"
 },
 "skmultiflow.visualization.evaluation_visualizer.PlotDataTracker": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "skmultiflow.visualization.evaluation_visualizer.PlotDataTracker.__init__": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "skmultiflow.visualization.evaluation_visualizer.PlotDataTracker._configure": {
  "data": {
   "lineno": 518
  },
  "type": "function"
 },
 "skmultiflow.visualization.evaluation_visualizer.PlotDataTracker._validate": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "len",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "skmultiflow.visualization.evaluation_visualizer.constants": {
  "data": {
   "shadows": "skmultiflow.utils.constants"
  },
  "type": "import"
 },
 "skmultiflow.visualization.evaluation_visualizer.cycler": {
  "data": {
   "shadows": "matplotlib.rcsetup.cycler"
  },
  "type": "import"
 },
 "skmultiflow.visualization.evaluation_visualizer.get_backend": {
  "data": {
   "shadows": "matplotlib.get_backend"
  },
  "type": "import"
 },
 "skmultiflow.visualization.evaluation_visualizer.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "skmultiflow.visualization.evaluation_visualizer.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "skmultiflow.visualization.evaluation_visualizer.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}