{
 "*": {
  "data": {
   "imports": [
    "datalad.tests.utils"
   ]
  },
  "type": "star-import"
 },
 "datalad": {
  "data": {
   "symbols_in_volume": [
    "ConfigManager",
    "ImportError",
    "SSHManager",
    "datalad._seed",
    "datalad.atexit",
    "datalad.cmd.GitRunner._GIT_PATH",
    "datalad.cmd.GitRunner._check_git_path",
    "datalad.colorama",
    "datalad.dochelpers.exc_str",
    "datalad.os",
    "datalad.random",
    "datalad.ssh_manager",
    "datalad.test",
    "datalad.utils.on_windows"
   ]
  },
  "type": "module"
 },
 "datalad.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.NoseTester": {
  "data": {
   "shadows": "datalad.support.third.nosetester.NoseTester"
  },
  "type": "import"
 },
 "datalad._TEMP_PATHS_GENERATED": {
  "data": {
   "shadows": "datalad.tests._TEMP_PATHS_GENERATED"
  },
  "type": "import"
 },
 "datalad.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "datalad.__main__.main"
   ]
  },
  "type": "module"
 },
 "datalad.__main__.getopt": {
  "data": {
   "shadows": "getopt"
  },
  "type": "import"
 },
 "datalad.__main__.main": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "AutomagicIO",
    "IOError",
    "SystemExit",
    "compile",
    "datalad.__main__.getopt",
    "datalad.__main__.os",
    "datalad.__main__.runctx",
    "datalad.__main__.sys",
    "datalad.__main__.usage",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.__main__.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.__main__.runctx": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "exec",
    "globals",
    "locals"
   ]
  },
  "type": "function"
 },
 "datalad.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.__main__.usage": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "datalad.__main__.sys"
   ]
  },
  "type": "function"
 },
 "datalad._seed": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datalad._test_states": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "datalad.api": {
  "data": {
   "symbols_in_volume": [
    "datalad.api._generate_func_api"
   ]
  },
  "type": "module"
 },
 "datalad.api._generate_func_api": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "get_api_name",
    "get_interface_groups",
    "getattr",
    "globals",
    "importlib.import_module"
   ]
  },
  "type": "function"
 },
 "datalad.api._generate_func_api._kwargs_to_namespace": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "collections.namedtuple",
    "get_allargs_as_kwargs"
   ]
  },
  "type": "function"
 },
 "datalad.api._generate_func_api.call_gen": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "datalad.api._generate_func_api.call_gen.call_": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "_kwargs_to_namespace",
    "call",
    "datalad.utils.saved_generator",
    "functools.wraps",
    "inspect.isgenerator",
    "renderer"
   ]
  },
  "type": "function"
 },
 "datalad.api.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "datalad.api.isgenerator": {
  "data": {
   "shadows": "inspect.isgenerator"
  },
  "type": "import"
 },
 "datalad.api.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "datalad.api.saved_generator": {
  "data": {
   "shadows": "datalad.utils.saved_generator"
  },
  "type": "import"
 },
 "datalad.api.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "datalad.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "datalad.auto": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "datalad.auto.lgr",
    "datalad.auto.logging",
    "exc_str",
    "six.PY2"
   ]
  },
  "type": "module"
 },
 "datalad.auto.AutomagicIO": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.auto.AutomagicIO.__del__": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO.__enter__": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO.__exit__": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "datalad.auto.h5py",
    "datalad.auto.io",
    "datalad.auto.lzma",
    "datalad.auto.os",
    "mock.patch",
    "six.moves.builtins.open"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._dataset_auto_get": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.auto.lgr",
    "get_repo_instance",
    "getpwd",
    "git.exc.InvalidGitRepositoryError",
    "isinstance",
    "os.path.dirname",
    "os.path.isabs",
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_exists": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "os.path.exists",
    "os.path.lexists",
    "os.path.realpath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_h5py_File": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_io_open": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_isfile": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_lzma_LZMAFile": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_open": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "datalad.auto.builtins_name"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_open_name_mode": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "Exception",
    "datalad.auto._EarlyExit",
    "datalad.auto.lgr",
    "exc_str",
    "int",
    "isinstance",
    "len",
    "origfunc",
    "six.PY2"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO.activate": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "datalad.auto.h5py",
    "datalad.auto.io",
    "datalad.auto.lgr",
    "datalad.auto.lzma",
    "datalad.auto.os",
    "datalad.auto.sys",
    "hasattr",
    "six.moves.builtins.open"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO.active": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO.autoget": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO.deactivate": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "datalad.auto.h5py",
    "datalad.auto.io",
    "datalad.auto.lgr",
    "datalad.auto.lzma",
    "datalad.auto.os",
    "six.moves.builtins.open"
   ]
  },
  "type": "function"
 },
 "datalad.auto.InvalidGitRepositoryError": {
  "data": {
   "shadows": "git.exc.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "datalad.auto.PY2": {
  "data": {
   "shadows": "six.PY2"
  },
  "type": "import"
 },
 "datalad.auto._EarlyExit": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.auto.__builtin__": {
  "data": {
   "shadows": "six.moves.builtins"
  },
  "type": "import"
 },
 "datalad.auto.builtins_name": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.auto.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.auto.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.auto.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "datalad.auto.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "datalad.auto.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.auto.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.auto.lgr": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.auto.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.auto.lzma": {
  "data": {
   "shadows": "lzma"
  },
  "type": "import"
 },
 "datalad.auto.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.auto.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.auto.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.auto.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.auto.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.cfg": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datalad.check_git_configured": {
  "data": {
   "shadows": "datalad.support.gitrepo.check_git_configured"
  },
  "type": "import"
 },
 "datalad.cmd": {
  "data": {
   "symbols_in_volume": [
    "datalad.cmd.logging",
    "datalad.cmd.os",
    "datalad.cmd.sys",
    "six.PY2"
   ]
  },
  "type": "module"
 },
 "datalad.cmd.GitRunner": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "datalad.cmd.Runner"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.GitRunner.__init__": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "borrowdoc",
    "datalad.cmd.GitRunner",
    "datalad.cmd.Runner",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.GitRunner._check_git_path": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "datalad.cmd.GitRunner",
    "datalad.cmd.lgr",
    "datalad.cmd.os",
    "distutils.spawn.find_executable",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.GitRunner.get_git_environ_adjusted": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "datalad.cmd.GitRunner",
    "datalad.cmd.lgr",
    "datalad.cmd.os",
    "os.path.abspath",
    "os.path.isabs",
    "os.path.pathsep.join",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.GitRunner.run": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "datalad.cmd.GitRunner",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.cmd.PY2": {
  "data": {
   "shadows": "six.PY2"
  },
  "type": "import"
 },
 "datalad.cmd.PY3": {
  "data": {
   "shadows": "six.PY3"
  },
  "type": "import"
 },
 "datalad.cmd.Runner": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.Runner.__call__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "isinstance",
    "list",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "datalad.cmd.atexit",
    "datalad.cmd.functools",
    "datalad.cmd.os",
    "id"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner._get_log_setting": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "adapter"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner._get_output_online": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "callable",
    "datalad.cmd._decide_to_log",
    "six.binary_type"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner._log_err": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "datalad.cmd.Runner._log_out": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "datalad.cmd.Runner._opt_env_adapter": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner._process_one_line": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "RuntimeError",
    "assure_unicode",
    "datalad.cmd.lgr",
    "log_",
    "six.PY3",
    "six.binary_type"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner._process_remaining_output": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "datalad.cmd._MAGICAL_OUTPUT_MARKER",
    "datalad.cmd.linesep_bytes",
    "io.IOBase",
    "isinstance",
    "open",
    "six.binary_type",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.call": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "Exception",
    "f",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.log": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "datalad.cmd.lgr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.log_cwd": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.log_env": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.log_outputs": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.log_stdin": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.run": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "CommandError",
    "Exception",
    "datalad.cmd._cleanup_output",
    "datalad.cmd._get_output_stream",
    "datalad.cmd.lgr",
    "datalad.cmd.shlex",
    "datalad.cmd.subprocess",
    "datalad.cmd.sys",
    "exc_str",
    "isinstance",
    "map",
    "six.PY3",
    "six.string_types",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.run.decode_if_not_None": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "six.binary_type.decode"
   ]
  },
  "type": "function"
 },
 "datalad.cmd._MAGICAL_OUTPUT_MARKER": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "datalad.cmd._TEMP_std": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "datalad.cmd._cleanup_output": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "datalad.cmd._MAGICAL_OUTPUT_MARKER",
    "datalad.cmd.os",
    "datalad.cmd.subprocess",
    "io.IOBase",
    "isinstance",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.cmd._decide_to_log": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "callable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.cmd._get_output_stream": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "datalad.cmd._MAGICAL_OUTPUT_MARKER",
    "datalad.cmd.subprocess",
    "datalad.cmd.tempfile",
    "get_tempfile_kwargs",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.cmd.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "datalad.cmd.binary_type": {
  "data": {
   "shadows": "six.binary_type"
  },
  "type": "import"
 },
 "datalad.cmd.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.cmd.file_class": {
  "data": {
   "shadows": "io.IOBase"
  },
  "type": "import"
 },
 "datalad.cmd.find_executable": {
  "data": {
   "shadows": "distutils.spawn.find_executable"
  },
  "type": "import"
 },
 "datalad.cmd.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "datalad.cmd.get_runner": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "DryRunProtocol",
    "datalad.cmd.Runner"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.cmd.lgr": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "datalad.cmd.linesep_bytes": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.cmd.link_file_load": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "AttributeError",
    "datalad.cmd.lgr",
    "datalad.cmd.os",
    "datalad.cmd.shutil",
    "locals"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.cmd.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.cmd.pathsep": {
  "data": {
   "shadows": "os.path.pathsep"
  },
  "type": "import"
 },
 "datalad.cmd.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "datalad.cmd.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.cmd.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "datalad.cmd.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "datalad.cmd.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.cmd.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.cmd.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "datalad.cmdline": {
  "data": {},
  "type": "module"
 },
 "datalad.cmdline.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.cmdline.common_args": {
  "data": {
   "symbols_in_volume": [
    "datalad.cmdline.common_args._log_level_names",
    "dict",
    "range",
    "str"
   ]
  },
  "type": "module"
 },
 "datalad.cmdline.common_args.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.cmdline.common_args._log_level_names": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datalad.cmdline.common_args.change_path": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datalad.cmdline.common_args.help": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.cmdline.common_args.log_level": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "datalad.cmdline.common_args.pbs_runner": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "datalad.cmdline.common_args.version": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datalad.cmdline.helpers": {
  "data": {
   "symbols_in_volume": [
    "appdirs.AppDirs",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.cmdline.helpers.AppDirs": {
  "data": {
   "shadows": "appdirs.AppDirs"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.HelpAction": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "datalad.cmdline.helpers.argparse"
   ]
  },
  "type": "class"
 },
 "datalad.cmdline.helpers.HelpAction.__call__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "IOError",
    "IndexError",
    "OSError",
    "ValueError",
    "datalad.cmdline.helpers.gzip",
    "datalad.cmdline.helpers.lgr",
    "datalad.cmdline.helpers.os",
    "datalad.cmdline.helpers.re",
    "datalad.cmdline.helpers.subprocess",
    "datalad.cmdline.helpers.sys",
    "exc_str",
    "is_interactive",
    "print"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.helpers.InvalidGitRepositoryError": {
  "data": {
   "shadows": "git.exc.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.LogLevelAction": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "datalad.cmdline.helpers.argparse"
   ]
  },
  "type": "class"
 },
 "datalad.cmdline.helpers.LogLevelAction.__call__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "LoggerHelper"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.helpers.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.RegexpType": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.cmdline.helpers.RegexpType.__call__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "datalad.cmdline.helpers.re"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.helpers.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.cmdline.helpers.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.curdir": {
  "data": {
   "shadows": "os.curdir"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.dirs": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "datalad.cmdline.helpers.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.get_repo_instance": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "AnnexRepo",
    "GitRepo",
    "RuntimeError",
    "class_",
    "expandpath",
    "git.exc.InvalidGitRepositoryError",
    "opj",
    "os.curdir",
    "os.path.exists",
    "os.path.isabs",
    "os.path.ismount",
    "os.path.normpath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.helpers.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.ismount": {
  "data": {
   "shadows": "os.path.ismount"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.lgr": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "datalad.cmdline.helpers.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.parser_add_common_opt": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.helpers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.run_via_pbs": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Runner",
    "datalad.cmdline.helpers.lgr",
    "datalad.cmdline.helpers.os",
    "getpwd",
    "len",
    "locals",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.helpers.strip_arg_from_argv": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "datalad.cmdline.helpers.sys",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.helpers.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.cmdline.main": {
  "data": {
   "symbols_in_volume": [
    "datalad.cmdline.main.lgr",
    "datalad.cmdline.main.logging"
   ]
  },
  "type": "module"
 },
 "datalad.cmdline.main.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.cmdline.main.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.cmdline.main.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.cmdline.main.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.cmdline.main.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.cmdline.main._license_info": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "datalad.cmdline.main.argcomplete": {
  "data": {
   "shadows": "argcomplete"
  },
  "type": "import"
 },
 "datalad.cmdline.main.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "datalad.cmdline.main.change_path_opt": {
  "data": {
   "shadows": "change_path"
  },
  "type": "import"
 },
 "datalad.cmdline.main.datalad": {
  "data": {
   "shadows": "datalad"
  },
  "type": "import"
 },
 "datalad.cmdline.main.helpers": {
  "data": {
   "shadows": "datalad.cmdline.helpers"
  },
  "type": "import"
 },
 "datalad.cmdline.main.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "datalad.cmdline.main.lgr": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datalad.cmdline.main.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.cmdline.main.main": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "chpwd",
    "datalad.cmdline.main.argcomplete",
    "datalad.cmdline.main.datalad",
    "datalad.cmdline.main.lgr",
    "datalad.cmdline.main.os",
    "datalad.cmdline.main.setup_parser",
    "datalad.cmdline.main.sys",
    "datalad.interface.base.Interface._interrupted_exit_code",
    "datalad.support.exceptions.CommandError",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "dict",
    "exc_str",
    "hasattr",
    "isinstance",
    "len",
    "run_via_pbs",
    "setup_exceptionhook",
    "six.text_type",
    "strip_arg_from_argv"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.main.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.cmdline.main.pbs_runner_opt": {
  "data": {
   "shadows": "pbs_runner"
  },
  "type": "import"
 },
 "datalad.cmdline.main.setup_parser": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "__debug__",
    "alter_interface_docs_for_cmdline",
    "datalad.cmdline.helpers.parser_add_common_opt",
    "datalad.cmdline.main._license_info",
    "datalad.cmdline.main.argparse",
    "datalad.cmdline.main.datalad",
    "datalad.cmdline.main.lgr",
    "datalad.cmdline.main.logging",
    "datalad.cmdline.main.shutil",
    "datalad.cmdline.main.textwrap",
    "dedent_docstring",
    "dict",
    "enumerate",
    "get_cmdline_command_name",
    "get_interface_groups",
    "getattr",
    "hasattr",
    "importlib.import_module",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.main.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.cmdline.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.cmdline.main.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "datalad.cmdline.main.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "datalad.cmdline.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.cmdline.tests.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.cmdline.tests.test_formatters": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "nose.SkipTest",
    "os.path.exists"
   ]
  },
  "type": "module"
 },
 "datalad.cmdline.tests.test_formatters.SIO": {
  "data": {
   "shadows": "six.moves.StringIO"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.demo_example": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datalad.cmdline.tests.test_formatters.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.fmt": {
  "data": {
   "shadows": "formatters"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.test_cmdline_example_to_rst": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datalad.cmdline.tests.test_formatters.demo_example",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.ok_startswith",
    "formatters.cmdline_example_to_rst",
    "six.moves.StringIO"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_formatters.test_manpage_formatter": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_in",
    "formatters.ManPageFormatter",
    "setup_parser"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_formatters.test_parser_access": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.ok_",
    "len",
    "setup_parser"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_formatters.test_rstmanpage_formatter": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_in",
    "formatters.RSTManPageFormatter",
    "len",
    "setup_parser"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_helpers": {
  "data": {},
  "type": "module"
 },
 "datalad.cmdline.tests.test_helpers.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.cmdline.tests.test_helpers.assert_is_instance": {
  "data": {
   "shadows": "nose.tools.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_helpers.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_helpers.mkdir": {
  "data": {
   "shadows": "os.mkdir"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_helpers.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_helpers.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_helpers.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_helpers.test_get_repo_instance_annex": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "chpwd",
    "eq_",
    "get_repo_instance",
    "getpwd",
    "nose.tools.assert_is_instance",
    "os.mkdir",
    "os.path.join",
    "os.path.realpath",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_helpers.test_get_repo_instance_git": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "chpwd",
    "eq_",
    "get_repo_instance",
    "getpwd",
    "nose.tools.assert_is_instance",
    "os.mkdir",
    "os.path.join",
    "os.path.realpath",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_helpers.test_strip_arg_from_argv": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "eq_",
    "strip_arg_from_argv"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main": {
  "data": {},
  "type": "module"
 },
 "datalad.cmdline.tests.test_main.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.StringIO": {
  "data": {
   "shadows": "six.moves.StringIO"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.__version__": {
  "data": {
   "shadows": "datalad.__version__"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.check_incorrect_option": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "datalad.cmdline.tests.test_main.run_main",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_re_in"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.datalad": {
  "data": {
   "shadows": "datalad"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.in_": {
  "data": {
   "shadows": "datalad.tests.utils.in_"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.run_main": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "SystemExit",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "main",
    "mock.patch",
    "six.moves.StringIO"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.test_cfg_override": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.cmd.Runner",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_help_np": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.cmdline.tests.test_main.re",
    "datalad.cmdline.tests.test_main.run_main",
    "datalad.cmdline.tests.test_main.shutil",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.ok_startswith",
    "filter",
    "hasattr",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_incorrect_options": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "datalad.cmdline.tests.test_main.check_incorrect_option",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_script_shims": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "datalad.__version__",
    "datalad.cmd.Runner",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_not_in",
    "get_numeric_portion",
    "open",
    "runner"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_subcmd_usage_on_unknown_args": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "datalad.cmdline.tests.test_main.run_main",
    "datalad.tests.utils.in_"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_usage_on_insufficient_args": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "datalad.cmdline.tests.test_main.run_main",
    "datalad.tests.utils.ok_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_version": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datalad.cmdline.tests.test_main.datalad",
    "datalad.cmdline.tests.test_main.run_main",
    "datalad.cmdline.tests.test_main.sys",
    "datalad.tests.utils.in_",
    "datalad.tests.utils.ok_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.colorama": {
  "data": {
   "shadows": "colorama"
  },
  "type": "import"
 },
 "datalad.config": {
  "data": {
   "symbols_in_volume": [
    "datalad.config.re"
   ]
  },
  "type": "module"
 },
 "datalad.config.ConfigManager": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.config.ConfigManager.__contains__": {
  "data": {
   "lineno": 417
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.__getitem__": {
  "data": {
   "lineno": 414
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "datalad.cmd.GitRunner",
    "datalad.config.datalad",
    "datalad.config.get_git_version",
    "dict",
    "distutils.version.LooseVersion",
    "hasattr",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.__len__": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager._get_location_args": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "ValueError",
    "datalad.config.os",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager._run": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "datalad.config._where_reload"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.add": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "datalad.config._where_reload"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.get": {
  "data": {
   "lineno": 424
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.get_value": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.getbool": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "datalad.config.anything2bool"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.getfloat": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.getint": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.has_option": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "datalad.config.cfg_sectionoption_regex"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.has_section": {
  "data": {
   "lineno": 444
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.items": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "datalad.config.cfg_section_regex"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.keys": {
  "data": {
   "lineno": 420
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.obtain": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "ValueError",
    "datalad.config._where_reload",
    "datalad.dochelpers.exc_str",
    "datalad.interface.common_cfg.definitions.get",
    "datalad.ui.ui",
    "datalad.ui.ui.is_interactive",
    "dialog",
    "getattr",
    "hasattr",
    "valtype"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.options": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "datalad.config.cfg_sectionoption_regex"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.reload": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "all",
    "datalad.config._parse_env",
    "datalad.config._parse_gitconfig_dump",
    "os.path.exists",
    "os.path.getmtime",
    "time.time"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.remove_section": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "datalad.config._where_reload"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.rename_section": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "datalad.config._where_reload"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.sections": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "datalad.config.cfg_section_regex",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.set": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "datalad.config._where_reload",
    "datalad.support.gitrepo.to_options"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.unset": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "datalad.config._where_reload"
   ]
  },
  "type": "function"
 },
 "datalad.config.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.config.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datalad.config._parse_env": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datalad.config.os"
   ]
  },
  "type": "function"
 },
 "datalad.config._parse_gitconfig_dump": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "datalad.config.cfg_kv_regex",
    "isinstance",
    "os.path.abspath",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.config._where_reload": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "datalad.config._where_reload_doc"
   ]
  },
  "type": "function"
 },
 "datalad.config._where_reload_doc": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datalad.config.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.config.anything2bool": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "hasattr",
    "int",
    "isinstance",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.config.cfg_defs": {
  "data": {
   "shadows": "datalad.interface.common_cfg.definitions"
  },
  "type": "import"
 },
 "datalad.config.cfg_kv_regex": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datalad.config.cfg_section_regex": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.config.cfg_sectionoption_regex": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.config.datalad": {
  "data": {
   "shadows": "datalad"
  },
  "type": "import"
 },
 "datalad.config.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.config.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.config.get_git_version": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "datalad.config.getmtime": {
  "data": {
   "shadows": "os.path.getmtime"
  },
  "type": "import"
 },
 "datalad.config.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.config.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.config.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "datalad.config.to_options": {
  "data": {
   "shadows": "datalad.support.gitrepo.to_options"
  },
  "type": "import"
 },
 "datalad.config.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.consts": {
  "data": {
   "shadows": "datalad.consts"
  },
  "type": "import"
 },
 "datalad.consts.ANNEX_TEMP_DIR": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "datalad.consts.ARCHIVES_SPECIAL_REMOTE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datalad.consts.ARCHIVES_TEMP_DIR": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.consts.CRAWLER_META_CONFIG_FILENAME": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "datalad.consts.CRAWLER_META_CONFIG_PATH": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datalad.consts.CRAWLER_META_DIR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "datalad.consts.CRAWLER_META_STATUSES_DIR": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "datalad.consts.CRAWLER_META_VERSIONS_DIR": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.consts.DATALAD_GIT_DIR": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datalad.consts.DATALAD_SPECIAL_REMOTE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datalad.consts.DATALAD_SPECIAL_REMOTES_UUIDS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datalad.consts.DATASETS_TOPURL": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "datalad.consts.GIT_SSH_COMMAND": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "datalad.consts.HANDLE_META_DIR": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.consts.LOCAL_CENTRAL_PATH": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "datalad.consts.METADATA_DIR": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.consts.METADATA_FILENAME": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datalad.consts.PRE_INIT_COMMIT_SHA": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "datalad.consts.TIMESTAMP_FMT": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "datalad.consts.WEB_HTML_DIR": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "datalad.consts.WEB_META_DIR": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datalad.consts.WEB_META_LOG": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.consts.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "datalad.consts.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.consts.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.crawler.base": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.base.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.crawler.dbs": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.dbs.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.crawler.dbs.base": {
  "data": {
   "symbols_in_volume": [
    "datalad.crawler.dbs.base.logging"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.dbs.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.base.FileStatusesBaseDB": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.dbs.base.FileStatusesBaseDB.__init__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.FileStatusesBaseDB._get": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.FileStatusesBaseDB._get_filepath": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "os.path.isabs",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.FileStatusesBaseDB._remove": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.FileStatusesBaseDB._set": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.FileStatusesBaseDB.get": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.FileStatusesBaseDB.get_obsolete": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "RuntimeError",
    "find_files",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.FileStatusesBaseDB.is_different": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "os.path.basename"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.FileStatusesBaseDB.queried_filepaths": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.FileStatusesBaseDB.remove": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.FileStatusesBaseDB.reset": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.FileStatusesBaseDB.set": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.FileStatusesBaseDB.track_queried": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.JsonBaseDB": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object",
    "six.add_metaclass"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.dbs.base.JsonBaseDB.__init__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.JsonBaseDB._assure_loaded": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "os.path.join",
    "os.path.lexists",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.JsonBaseDB._db": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.JsonBaseDB._get_db_to_save": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.JsonBaseDB._get_empty_db": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.JsonBaseDB._get_loaded_db": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.JsonBaseDB.db_version": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.JsonBaseDB.get_empty_db": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.JsonBaseDB.load": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datalad.crawler.dbs.base.json",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.JsonBaseDB.save": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "datalad.crawler.dbs.base.json",
    "datalad.crawler.dbs.base.lgr",
    "datalad.crawler.dbs.base.os",
    "open",
    "os.path.dirname",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.base.__docformat__": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datalad.crawler.dbs.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.base.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.base.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.base.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.base.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.base.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.base.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.base.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.base.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.base.lgr": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datalad.crawler.dbs.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.base.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.base.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.base.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.files": {
  "data": {
   "symbols_in_volume": [
    "datalad.crawler.dbs.files.logging"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.dbs.files.JsonFileStatusesDB": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "datalad.crawler.dbs.files.PhysicalFileStatusesDB"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.dbs.files.JsonFileStatusesDB.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "datalad.crawler.dbs.files.PhysicalFileStatusesDB"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.files.JsonFileStatusesDB._get": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "FileStatus"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.files.JsonFileStatusesDB._get_db_to_save": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "datalad.crawler.dbs.files.JsonFileStatusesDB._get_empty_db": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "datalad.crawler.dbs.files.JsonFileStatusesDB._get_fileattributes_status": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "datalad.crawler.dbs.files.PhysicalFileStatusesDB"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.files.JsonFileStatusesDB._get_fpath": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "len",
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.files.JsonFileStatusesDB._get_loaded_db": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.files.JsonFileStatusesDB._remove": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "datalad.crawler.dbs.files.JsonFileStatusesDB._set": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.files.PhysicalFileStatusesDB": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "datalad.crawler.dbs.files.PhysicalFileStatusesDB._get": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "FileStatus",
    "TypeError",
    "datalad.crawler.dbs.files.lgr",
    "datalad.crawler.dbs.files.os",
    "disable_logger",
    "exc_str",
    "min",
    "os.path.exists",
    "os.path.islink",
    "os.path.lexists",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.files.PhysicalFileStatusesDB._remove": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "datalad.crawler.dbs.files.PhysicalFileStatusesDB._set": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "datalad.crawler.dbs.files.PhysicalFileStatusesDB.save": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "datalad.crawler.dbs.files.__all__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datalad.crawler.dbs.files.__docformat__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datalad.crawler.dbs.files.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.files.islink": {
  "data": {
   "shadows": "os.path.islink"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.files.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.files.lgr": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.crawler.dbs.files.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.files.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.files.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.files.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.files.sep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.dbs.tests.test_files": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.dbs.tests.test_files._test_AnnexDB": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "AnnexRepo",
    "assert_equal",
    "assert_false",
    "cls",
    "datalad.crawler.dbs.tests.test_files.os",
    "open",
    "os.path.curdir",
    "os.path.join",
    "os.path.realpath",
    "os.path.sep",
    "set",
    "set_db_status_from_file",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.tests.test_files._test_AnnexDB.set_db_status_from_file": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "cls"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.tests.test_files.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.tests.test_files.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.tests.test_files.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.tests.test_files.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.tests.test_files.sep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.tests.test_files.test_AnnexDBs": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "cls",
    "datalad.crawler.dbs.tests.test_files._test_AnnexDB"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.versions": {
  "data": {
   "symbols_in_volume": [
    "datalad.crawler.dbs.versions.logging"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.dbs.versions.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.versions.SingleVersionDB": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "datalad.crawler.dbs.versions.SingleVersionDB._get_db_to_save": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.versions.SingleVersionDB._get_empty_db": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.versions.SingleVersionDB._get_loaded_db": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.versions.SingleVersionDB.update_versions": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "NotImplementedError",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.versions.SingleVersionDB.version": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "datalad.crawler.dbs.versions.SingleVersionDB.versions": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.dbs.versions.__docformat__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datalad.crawler.dbs.versions.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "datalad.crawler.dbs.versions.lgr": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.crawler.dbs.versions.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.crawler.nodes": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.nodes.annex": {
  "data": {
   "symbols_in_volume": [
    "datalad.crawler.nodes.annex._runner",
    "get_runner",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.nodes.annex.Annexificator": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.annex.Annexificator.__call__": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "ActivityStats",
    "Exception",
    "ValueError",
    "datalad.crawler.nodes.annex._call",
    "datalad.crawler.nodes.annex.lgr",
    "datalad.crawler.nodes.annex.os",
    "datalad.dochelpers.exc_str",
    "humanize.naturalsize",
    "isinstance",
    "locals",
    "os.path.isdir",
    "os.path.join",
    "os.path.lexists",
    "os.path.split",
    "os.unlink",
    "set",
    "six.string_types",
    "try_multiple",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.__init__": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "GitRepo",
    "RuntimeError",
    "ValueError",
    "assure_list",
    "datalad.crawler.nodes.annex.lgr",
    "datalad.customremotes.base.init_datalad_remote",
    "len",
    "os.listdir",
    "os.path.curdir",
    "os.path.exists",
    "os.path.join",
    "os.path.realpath",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator._check_no_staged_changes_under_dir": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "RuntimeError",
    "_normalize_path",
    "datalad.crawler.nodes.annex._call",
    "locals",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator._check_non_existing_filepath": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "RuntimeError",
    "_normalize_path",
    "datalad.crawler.nodes.annex._call",
    "datalad.crawler.nodes.annex.lgr",
    "datalad.crawler.nodes.annex.os",
    "locals",
    "os.path.isdir",
    "os.path.lexists",
    "os.path.split",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator._commit": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "GitRepo._get_prefixed_commit_msg",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator._get_filename_from_url": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "ValueError",
    "get_url_disposition_filename",
    "get_url_straight_filename",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator._get_fpath": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "ValueError",
    "os.path.isabs",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator._get_status": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "KeyError",
    "RuntimeError",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator._get_url_status": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator._precommit": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator._stage": {
  "data": {
   "lineno": 896
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator._unstage": {
  "data": {
   "lineno": 892
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.add_archive_content": {
  "data": {
   "lineno": 1262
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.add_archive_content._add_archive_content": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "ActivityStats",
    "add_archive_content",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.commit_versions": {
  "data": {
   "lineno": 945
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.commit_versions._commit_versions": {
  "data": {
   "lineno": 959,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "SingleVersionDB",
    "ValueError",
    "all",
    "datalad.crawler.nodes.annex._call",
    "datalad.crawler.nodes.annex.lgr",
    "datalad.crawler.nodes.annex.os",
    "distutils.version.LooseVersion",
    "enumerate",
    "get_versions",
    "iter",
    "len",
    "list",
    "next",
    "setattr",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.drop": {
  "data": {
   "lineno": 1431
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.drop._drop": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": [
    "NotImplementedError",
    "all",
    "datalad.crawler.nodes.annex.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.finalize": {
  "data": {
   "lineno": 1292
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.finalize._finalize": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "ValueError",
    "clean",
    "datalad.api.aggregate_metadata",
    "datalad.crawler.nodes.annex._call",
    "datalad.crawler.nodes.annex.lgr",
    "isinstance",
    "set",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.initiate_dataset": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "datalad.crawler.nodes.annex.initiate_dataset"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.merge_branch": {
  "data": {
   "lineno": 755
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.merge_branch.merge_branch": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "datalad.crawler.nodes.annex.lgr",
    "len",
    "list",
    "locals"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.register_url_in_db": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.remove": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "datalad.crawler.nodes.annex._call",
    "datalad.crawler.nodes.annex.lgr",
    "datalad.crawler.nodes.annex.os",
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.remove_obsolete": {
  "data": {
   "lineno": 1381,
   "symbols_in_volume": [
    "_remove_obsolete"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.remove_obsolete._remove_obsolete": {
  "data": {
   "lineno": 1389,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.annex.Annexificator.remove_obsolete._remove_obsolete.__call__": {
  "data": {
   "lineno": 1390,
   "symbols_in_volume": [
    "datalad.crawler.nodes.annex._call",
    "datalad.crawler.nodes.annex.lgr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.remove_obsolete._remove_obsolete.reset": {
  "data": {
   "lineno": 1404
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.remove_other_versions": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "hasattr",
    "int",
    "isinstance",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.remove_other_versions._remove_other_versions": {
  "data": {
   "lineno": 1159,
   "symbols_in_volume": [
    "SingleVersionDB",
    "ValueError",
    "datalad.crawler.nodes.annex.lgr",
    "datalad.crawler.nodes.annex.os",
    "datalad.crawler.nodes.annex.re",
    "distutils.version.LooseVersion",
    "find_files",
    "os.path.join",
    "os.path.relpath",
    "overlay_version_func",
    "set",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.reset": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.switch_branch": {
  "data": {
   "lineno": 695
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.Annexificator.switch_branch.switch_branch": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.crawler.nodes.annex.lgr",
    "list",
    "set",
    "sorted",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.Repo": {
  "data": {
   "shadows": "git.Repo"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex._call": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "datalad.crawler.nodes.annex._run": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "datalad.crawler.nodes.annex._runner": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "datalad.crawler.nodes.annex.aggregate_metadata": {
  "data": {
   "shadows": "datalad.api.aggregate_metadata"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.init_datalad_remote": {
  "data": {
   "shadows": "datalad.customremotes.base.init_datalad_remote"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.initiate_dataset": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.annex.initiate_dataset.__call__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "datalad.crawler.nodes.annex._call",
    "datalad.crawler.nodes.annex.lgr",
    "datalad.crawler.nodes.annex.os",
    "os.path.exists",
    "os.path.join",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.initiate_dataset.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.initiate_dataset._initiate_dataset": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "GitRepo",
    "NotImplementedError",
    "ValueError",
    "create",
    "datalad.crawler.nodes.annex.lgr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.initiate_dataset._save_crawl_config": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "initiate_pipeline_config"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.annex.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.islink": {
  "data": {
   "shadows": "os.path.islink"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.lgr": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "datalad.crawler.nodes.annex.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.naturalsize": {
  "data": {
   "shadows": "humanize.naturalsize"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.ops": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.annex.unlink": {
  "data": {
   "shadows": "os.unlink"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.crawl_url": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.nodes.crawl_url.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.crawl_url.crawl_url": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.crawl_url.crawl_url.__call__": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "datalad.crawler.nodes.crawl_url.crawl_url.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "input",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.crawl_url.crawl_url._visit_url": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "DownloadError",
    "datalad.crawler.nodes.crawl_url.lgr",
    "exc_str",
    "isinstance",
    "list",
    "matcher",
    "tuple",
    "updated",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.crawl_url.crawl_url.recurse": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "datalad.crawler.nodes.crawl_url.crawl_url.reset": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.crawl_url.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.crawl_url.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.crawl_url.lgr": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.crawler.nodes.crawl_url.parse_checksums": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "datalad.crawler.nodes.crawl_url.parse_checksums._parse_checksums": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "os.path.basename",
    "os.path.dirname",
    "os.path.splitext",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.crawl_url.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.matches": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datalad.crawler.nodes.matches.lgr",
    "logging.getLogger",
    "scrapy.http.Response"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.nodes.matches.AExtractorMatch": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "datalad.crawler.nodes.matches.ExtractorMatch"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.matches.AExtractorMatch._select_and_extract": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "datalad.crawler.nodes.matches.lgr",
    "datalad.crawler.nodes.matches.re",
    "dlurljoin"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.matches.ExtractorMatch": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.matches.ExtractorMatch.__call__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "MissingExternalDependency",
    "ValueError",
    "datalad.crawler.nodes.matches.lgr",
    "entry_method",
    "hasattr",
    "input",
    "input.url",
    "isinstance",
    "len",
    "repr",
    "scrapy.http.Response",
    "scrapy.selector.Selector",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.matches.ExtractorMatch.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.matches.ExtractorMatch._select_and_extract": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.matches.PY3": {
  "data": {
   "shadows": "six.PY3"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.matches.Response": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datalad.crawler.nodes.matches.ScrapyExtractorMatch": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "datalad.crawler.nodes.matches.ExtractorMatch"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.matches.ScrapyExtractorMatch._select_and_extract": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "datalad.crawler.nodes.matches.types",
    "isinstance",
    "six.PY3"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.matches.Selector": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.matches.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.crawler.nodes.matches.a_href_match": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "datalad.crawler.nodes.matches.AExtractorMatch"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.matches.a_text_match": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "datalad.crawler.nodes.matches.AExtractorMatch"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.matches.css_match": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "datalad.crawler.nodes.matches.ScrapyExtractorMatch",
    "scrapy.selector.Selector.css"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.matches.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.matches.lgr": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datalad.crawler.nodes.matches.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.matches.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.matches.xpath_match": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "datalad.crawler.nodes.matches.ScrapyExtractorMatch",
    "scrapy.selector.Selector.xpath"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.misc": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.nodes.misc.ST_MODE": {
  "data": {
   "shadows": "stat.ST_MODE"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.S_IEXEC": {
  "data": {
   "shadows": "stat.S_IEXEC"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.S_IXGRP": {
  "data": {
   "shadows": "stat.S_IXGRP"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.S_IXOTH": {
  "data": {
   "shadows": "stat.S_IXOTH"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.Sink": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.misc.Sink.__call__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "any",
    "datalad.utils.updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.Sink.__init__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.Sink.clean": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.Sink.get_values": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc._act_if": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.misc._act_if.__call__": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "comp",
    "datalad.crawler.nodes.misc.re",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc._act_if.__init__": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "datalad.crawler.nodes.misc.re"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc._act_if._act_match": {
  "data": {
   "lineno": 290
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc._act_if._act_mismatch": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc._find_files": {
  "data": {
   "shadows": "find_files"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc._string_as_list": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "isinstance",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.assign": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.misc.assign.__call__": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.assign.__init__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.continue_if": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "datalad.crawler.nodes.misc._act_if"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.misc.continue_if._act_match": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.debug": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.misc.debug.__call__": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "datalad.crawler.nodes.misc.lgr",
    "datalad.crawler.nodes.misc.pdb",
    "node"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.debug.__init__": {
  "data": {
   "lineno": 562
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.find_files": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.misc.find_files.__call__": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.crawler.nodes.misc.find_files",
    "datalad.crawler.nodes.misc.lgr",
    "datalad.utils.updated",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.find_files.__init__": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "os.path.curdir"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.fix_permissions": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.misc.fix_permissions.__call__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datalad.crawler.nodes.misc.lgr",
    "datalad.crawler.nodes.misc.os",
    "datalad.crawler.nodes.misc.re",
    "datalad.crawler.nodes.misc.stat",
    "enumerate",
    "oct",
    "os.path.exists",
    "os.path.isabs",
    "os.path.isdir",
    "os.path.join",
    "stat.ST_MODE",
    "stat.S_IEXEC",
    "stat.S_IXGRP",
    "stat.S_IXOTH"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.fix_permissions.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "input"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.func_to_node": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "datalad.crawler.nodes.misc._string_as_list",
    "func",
    "func.__name__",
    "hasattr",
    "id",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.func_to_node.func_node": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "datalad.crawler.nodes.misc._string_as_list",
    "datalad.crawler.nodes.misc.inspect",
    "func",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.get_disposition_filename": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "datalad.support.network.get_url_disposition_filename",
    "datalad.utils.updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.get_url_disposition_filename": {
  "data": {
   "shadows": "datalad.support.network.get_url_disposition_filename"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.get_url_filename": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "datalad.support.network.get_url_straight_filename",
    "datalad.utils.updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.get_url_straight_filename": {
  "data": {
   "shadows": "datalad.support.network.get_url_straight_filename"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.interrupt_if": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "datalad.crawler.nodes.misc._act_if"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.misc.interrupt_if._act_mismatch": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.lgr": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datalad.crawler.nodes.misc.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.ops": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.pdb": {
  "data": {
   "shadows": "pdb"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.range_node": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.misc.range_node.__call__": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "datalad.utils.updated",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.range_node.__init__": {
  "data": {
   "lineno": 327
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.rename": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.misc.rename.__call__": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.rename.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.skip_if": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "datalad.crawler.nodes.misc._act_if"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.misc.skip_if._act_mismatch": {
  "data": {
   "lineno": 306
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.misc.sub": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.misc.sub.__call__": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "datalad.crawler.nodes.misc.re"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.sub.__init__": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.switch": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.misc.switch.__call__": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "KeyError",
    "datalad.crawler.nodes.misc.re",
    "isinstance",
    "list",
    "pipeline",
    "xrun_pipeline"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.switch.__init__": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "datalad.crawler.nodes.misc.re"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.switch.missing": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "datalad.crawler.nodes.misc.updated": {
  "data": {
   "shadows": "datalad.utils.updated"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.nodes.s3.DeleteMarker": {
  "data": {
   "shadows": "boto.s3.deletemarker.DeleteMarker"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3.Key": {
  "data": {
   "shadows": "boto.s3.key.Key"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3.Prefix": {
  "data": {
   "shadows": "boto.s3.prefix.Prefix"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3._strip_prefix": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.s3.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3.crawl_s3": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.s3.crawl_s3.__call__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "SingleVersionDB",
    "ValueError",
    "boto.s3.deletemarker.DeleteMarker",
    "boto.s3.key.Key",
    "boto.s3.prefix.Prefix",
    "datalad.crawler.nodes.s3._strip_prefix",
    "datalad.crawler.nodes.s3.lgr",
    "datalad.crawler.nodes.s3.re",
    "enumerate",
    "exc_str",
    "get_key_url",
    "get_version_cmp",
    "isinstance",
    "kf",
    "set",
    "sorted",
    "update_versiondb",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.s3.crawl_s3.__call__.get_version_cmp": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "kf"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.s3.crawl_s3.__call__.kf": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.s3.crawl_s3.__call__.update_versiondb": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "dict",
    "get_version_cmp",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.s3.crawl_s3.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "datalad.crawler.nodes.s3.get_version_for_key",
    "datalad.crawler.nodes.s3.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.s3.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3.get_version_for_key": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "boto.s3.prefix.Prefix",
    "datalad.crawler.nodes.s3.time",
    "isinstance",
    "iso8601_to_epoch"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.s3.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3.lgr": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "datalad.crawler.nodes.s3.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.s3.unlink": {
  "data": {
   "shadows": "os.unlink"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.utils.skip_if_no_module"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.nodes.tests.skip_if_no_module": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_module"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_annex": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.nodes.tests.test_annex.DATALAD_SPECIAL_REMOTES_UUIDS": {
  "data": {
   "shadows": "datalad.consts.DATALAD_SPECIAL_REMOTES_UUIDS"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_annex.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_annex.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_annex._test_add_archive_content_tar": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ActivityStats",
    "Annexificator",
    "annex",
    "annex.add_archive_content",
    "annex.repo.commit",
    "annex.repo.dirty",
    "annex.repo.get_description",
    "annex.repo.path",
    "assert_cwd_unchanged",
    "assert_equal",
    "assert_false",
    "assert_true",
    "datalad.consts.DATALAD_SPECIAL_REMOTES_UUIDS",
    "datalad.tests.utils.eq_",
    "list",
    "ok_file_under_git",
    "os.path.join",
    "os.path.lexists",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex._test_annex_file": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ActivityStats",
    "Annexificator",
    "AssertionError",
    "annex",
    "annex.finalize",
    "annex.repo.WEB_UUID",
    "annex.repo._batched",
    "annex.repo.whereis",
    "annex.yield_non_updated",
    "assert_equal",
    "assert_in",
    "assert_raises",
    "datalad.tests.utils.with_tempfile",
    "dict",
    "input",
    "input.copy",
    "int",
    "len",
    "list",
    "ok_file_has_content",
    "ok_file_under_git",
    "open",
    "os.path.join",
    "os.path.lexists",
    "serve_path_via_http",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_annex.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_annex.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_annex.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_annex.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_annex.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_annex.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_annex.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_annex.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_annex.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_annex.test_add_archive_content_tar": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "datalad.crawler.nodes.tests.test_annex._test_add_archive_content_tar",
    "datalad.tests.utils.known_failure_v6"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.test_add_dir_file": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "Annexificator",
    "RuntimeError",
    "annex",
    "annex.finalize",
    "assert_cwd_unchanged",
    "assert_raises",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "list",
    "ok_file_under_git",
    "os.path.exists",
    "os.path.join",
    "serve_path_via_http",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.test_annex_file": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "datalad.crawler.nodes.tests.test_annex._test_annex_file",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.test_annexificator_no_git_if_dirty": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Annexificator",
    "RuntimeError",
    "assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.listdir",
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.test_commit_versions": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.test_initiate_dataset": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "assert_equal",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "initiate_dataset",
    "len",
    "list",
    "load_pipeline_from_config",
    "os.path.exists",
    "os.path.join",
    "put_file_under_git"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.test_remove_other_versions": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "ActivityStats",
    "Annexificator",
    "AssertionError",
    "ValueError",
    "annex",
    "annex.remove_other_versions",
    "assert_raises",
    "check",
    "datalad.tests.utils.with_tempfile",
    "dict",
    "next",
    "rov"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.test_remove_other_versions.Unlinker": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.tests.test_annex.test_remove_other_versions.Unlinker.Find_files": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.test_remove_other_versions.Unlinker.Find_files.find_files": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.test_remove_other_versions.Unlinker.__call__": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "os.path.basename"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.test_remove_other_versions.Unlinker.__init__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.test_remove_other_versions.Unlinker.remaining": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.test_remove_other_versions._check": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "ActivityStats",
    "annex.remove_other_versions",
    "assert_equal",
    "datalad.tests.utils.eq_",
    "len",
    "list",
    "mock.patch",
    "rov"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.test_remove_other_versions.check": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "_check"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_annex.test_remove_other_versions.version_db": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.nodes.tests.test_annex.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_crawl_url": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.utils.skip_if_scrapy_without_selector",
    "dict"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.nodes.tests.test_crawl_url.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_crawl_url.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_crawl_url.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_crawl_url.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_crawl_url.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_crawl_url.pages_loop": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "datalad.crawler.nodes.tests.test_crawl_url.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_crawl_url.skip_if_scrapy_without_selector": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_scrapy_without_selector"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_crawl_url.test_parse_checksums": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "assert_equal",
    "len",
    "list",
    "parse_checksums"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_crawl_url.test_recurse_loop_http": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "a_href_match",
    "crawl_url",
    "datalad.crawler.nodes.tests.test_crawl_url.pages_loop",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.with_tree",
    "run_pipeline",
    "sorted",
    "visit"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_crawl_url.test_recurse_loop_http.visit": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "crawl_url",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_crawl_url.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_matches": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datalad.tests.utils.skip_if_scrapy_without_selector",
    "nose.SkipTest"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.nodes.tests.test_matches.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_matches._test_match_basic": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "ValueError",
    "datalad.crawler.nodes.tests.test_matches.inspect",
    "datalad.crawler.nodes.tests.test_matches.sample1",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "dict",
    "len",
    "list",
    "m",
    "matcher",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_matches.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_matches.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_matches.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_matches.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_matches.sample1": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "datalad.crawler.nodes.tests.test_matches.scrapy": {
  "data": {
   "shadows": "scrapy"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_matches.skip_if_scrapy_without_selector": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_scrapy_without_selector"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_matches.test_a_href_match_basic": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "a_href_match",
    "datalad.crawler.nodes.tests.test_matches.inspect",
    "datalad.crawler.nodes.tests.test_matches.sample1",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "dict",
    "len",
    "list",
    "m"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_matches.test_a_href_match_pattern1": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "a_href_match",
    "datalad.crawler.nodes.tests.test_matches.sample1",
    "datalad.tests.utils.eq_",
    "dict",
    "len",
    "list",
    "m"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_matches.test_a_href_match_pattern2": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "a_href_match",
    "datalad.crawler.nodes.tests.test_matches.sample1",
    "datalad.tests.utils.eq_",
    "dict",
    "len",
    "list",
    "m"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_matches.test_a_href_match_pattern3": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "a_href_match",
    "datalad.crawler.nodes.tests.test_matches.sample1",
    "datalad.tests.utils.eq_",
    "dict",
    "len",
    "list",
    "m"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_matches.test_match_basic": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "datalad.crawler.nodes.tests.test_matches._test_match_basic"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.nodes.tests.test_misc.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc._test_debug": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "d1",
    "datalad.crawler.nodes.tests.test_misc.logging",
    "datalad.tests.utils.swallow_logs",
    "debug",
    "list",
    "mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc._test_debug.node": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.chmod": {
  "data": {
   "shadows": "os.chmod"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.next": {
  "data": {
   "shadows": "six.next"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.ok_generator": {
  "data": {
   "shadows": "datalad.tests.utils.ok_generator"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.test__act_if": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "_act_if",
    "gen",
    "genfal",
    "gent",
    "list",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_assign": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "assign",
    "gen",
    "genf",
    "list",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_continue_if": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "continue_if",
    "dict",
    "list",
    "n",
    "nose.tools.eq_",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_debug": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "datalad.crawler.nodes.tests.test_misc._test_debug"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_find_files": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.crawler.nodes.tests.test_misc.os",
    "datalad.tests.utils.assert_equal",
    "ff",
    "find_files",
    "list",
    "nose.tools.assert_raises",
    "os.path.join",
    "sorted",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_fix_permissions": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "datalad.crawler.nodes.tests.test_misc.os",
    "datalad.tests.utils.with_tempfile",
    "fix_permissions",
    "gen",
    "list",
    "nose.tools.eq_",
    "oct",
    "open",
    "os.chmod",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_func_to_node": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.ok_generator",
    "func_to_node",
    "gen",
    "int",
    "int_node",
    "list",
    "split_node",
    "xrange_node",
    "xrange_node.__doc__"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_func_to_node.split_": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_func_to_node.xrange_": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "n",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_get_disposition_filename": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "get_disposition_filename",
    "input",
    "len",
    "list",
    "mock.patch",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_get_url_filename": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "get_url_filename",
    "input",
    "len",
    "list",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_get_values": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "Sink",
    "gen",
    "gen.get_values",
    "list",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_interrupt_if": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "dict",
    "interrupt_if",
    "list",
    "n",
    "nose.tools.assert_raises",
    "nose.tools.eq_",
    "six.next"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_range_node": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "list",
    "nose.tools.eq_",
    "range_node"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_rename": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "gen",
    "genmulti",
    "list",
    "nose.tools.eq_",
    "rename"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_sink": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "Sink",
    "gen",
    "gen.data",
    "genempty",
    "genempty.data",
    "genkeys",
    "genkeys.data",
    "gentwo",
    "gentwo.data",
    "list",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_skip_if": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "dict",
    "list",
    "n",
    "nose.tools.eq_",
    "skip_if"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_skip_if_negate": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "dict",
    "list",
    "n",
    "nose.tools.eq_",
    "skip_if"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_sub": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_equal",
    "list",
    "s",
    "sub"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_switch": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "KeyError",
    "_out",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "list",
    "nose.tools.assert_raises",
    "str",
    "sub",
    "switch",
    "switch_node",
    "switch_node.default",
    "switch_node.mapping.insert",
    "switch_node.missing"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_switch.n2": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "len",
    "range",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_switch_re": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "KeyError",
    "_out",
    "collections.OrderedDict",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_re_in",
    "len",
    "list",
    "nose.tools.assert_raises",
    "range",
    "sub",
    "switch",
    "switch_node"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.test_switch_re.n2": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "len",
    "range",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_misc.use_cassette": {
  "data": {
   "shadows": "datalad.tests.utils.use_cassette"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_misc.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_s3": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.nodes.tests.test_s3._annex": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Annexificator",
    "get_test_providers"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_s3.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.crawler.nodes.tests.test_s3.target_version": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "datalad.crawler.nodes.tests.test_s3.test_crawl_s3": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ActivityStats",
    "crawl_s3",
    "datalad.crawler.nodes.tests.test_s3._annex",
    "datalad.crawler.nodes.tests.test_s3.target_version",
    "eq_",
    "externals_use_cassette",
    "run_pipeline",
    "set",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_s3.test_crawl_s3_commit_versions": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ActivityStats",
    "assert_in",
    "assert_not_in",
    "crawl_s3",
    "datalad.crawler.nodes.tests.test_s3._annex",
    "datalad.crawler.nodes.tests.test_s3.logging",
    "datalad.crawler.nodes.tests.test_s3.target_version",
    "eq_",
    "externals_use_cassette",
    "range",
    "run_pipeline",
    "set",
    "swallow_logs",
    "switch",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_s3.test_crawl_s3_commit_versions_one_at_a_time": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ActivityStats",
    "assert_in",
    "assert_not_equal",
    "assert_not_in",
    "crawl_s3",
    "datalad.crawler.nodes.tests.test_s3._annex",
    "datalad.crawler.nodes.tests.test_s3.logging",
    "datalad.crawler.nodes.tests.test_s3.target_version",
    "eq_",
    "externals_use_cassette",
    "range",
    "run_pipeline",
    "swallow_logs",
    "switch",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_s3.test_crawl_s3_file_to_directory": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "ActivityStats",
    "crawl_s3",
    "datalad.crawler.nodes.tests.test_s3._annex",
    "eq_",
    "externals_use_cassette",
    "list",
    "run_pipeline",
    "swallow_logs",
    "switch",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_s3.test_crawl_s3_prefix": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "assert_in",
    "crawl_s3",
    "datalad.crawler.nodes.tests.test_s3.logging",
    "eq_",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_s3.test_get_key_url": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "eq_",
    "get_key_url"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.nodes.tests.test_s3.test_get_key_url.e": {
  "data": {
   "lineno": 229
  },
  "type": "class"
 },
 "datalad.crawler.nodes.tests.test_s3.test_get_key_url.e.bucket": {
  "data": {
   "lineno": 232
  },
  "type": "class"
 },
 "datalad.crawler.nodes.tests.test_s3.test_strip_prefix": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "_strip_prefix",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.oldconfig": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.oldconfig.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.crawler.oldconfig.base": {
  "data": {
   "symbols_in_volume": [
    "datalad.crawler.oldconfig.base.logging"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.oldconfig.base.ConfigSection": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.oldconfig.base.ConfigSection.__getitem__": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "datalad.crawler.oldconfig.base.ConfigSection.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "datalad.crawler.oldconfig.base.lgr",
    "exec"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.oldconfig.base.ConfigSection.get": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "datalad.crawler.oldconfig.base.lgr",
    "eval",
    "len",
    "vars"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.oldconfig.base.DECOMPRESSORS": {
  "data": {
   "shadows": "datalad.support.archives.DECOMPRESSORS"
  },
  "type": "import"
 },
 "datalad.crawler.oldconfig.base.EnhancedConfigParser": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "datalad.support.configparserinc.SafeConfigParserWithIncludes"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.oldconfig.base.EnhancedConfigParser.get_default": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "datalad.crawler.oldconfig.base.EnhancedConfigParser",
    "datalad.support.archives.DECOMPRESSORS.keys",
    "dict",
    "six.iteritems",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.oldconfig.base.EnhancedConfigParser.get_section": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ConfigSection"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.oldconfig.base.SafeConfigParserWithIncludes": {
  "data": {
   "shadows": "datalad.support.configparserinc.SafeConfigParserWithIncludes"
  },
  "type": "import"
 },
 "datalad.crawler.oldconfig.base.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "datalad.crawler.oldconfig.base.lgr": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.crawler.oldconfig.base.load_config": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "datalad.crawler.oldconfig.base.EnhancedConfigParser",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.oldconfig.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.crawler.oldconfig.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.oldconfig.tests.test_config": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.oldconfig.tests.test_config.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "datalad.crawler.oldconfig.tests.test_config.test_eval_value": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "datalad.crawler.oldconfig.tests.test_config.math",
    "dict",
    "eq_",
    "load_config",
    "open",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "list",
    "logging.getLogger",
    "tuple"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipeline.CRAWLER_PIPELINE_SECTION": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "datalad.crawler.pipeline.CRAWLER_PIPELINE_SECTION_DEPRECATED": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "datalad.crawler.pipeline.FinishPipeline": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.pipeline.PIPELINE_OPTS": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "datalad.crawler.pipeline.PIPELINE_TYPES": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "datalad.crawler.pipeline.__dev_doc__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "datalad.crawler.pipeline._compare_dicts": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline._find_pipeline": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "candidates",
    "datalad.crawler.pipeline.lgr",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline._find_pipeline.candidates": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "get_dataset_root",
    "os.path.curdir",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline._get_pipeline_opts": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "datalad.crawler.pipeline.PIPELINE_OPTS",
    "dict",
    "isinstance",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.crawler.pipeline.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.crawler.pipeline.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.crawler.pipeline.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.crawler.pipeline.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipeline.get_repo_pipeline_config_path": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "get_dataset_root",
    "os.path.curdir",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline.get_repo_pipeline_script_path": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "get_dataset_root",
    "glob.glob",
    "len",
    "os.path.curdir",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.crawler.pipeline.initiate_pipeline_config": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "GitRepo",
    "SafeConfigParserWithIncludes",
    "datalad.crawler.pipeline.CRAWLER_PIPELINE_SECTION",
    "datalad.crawler.pipeline.lgr",
    "open",
    "os.makedirs",
    "os.path.curdir",
    "os.path.exists",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.crawler.pipeline.lgr": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "datalad.crawler.pipeline.load_pipeline_from_config": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "IOError",
    "PipelineNotSpecifiedError",
    "SafeConfigParserWithIncludes",
    "datalad.crawler.pipeline.CRAWLER_PIPELINE_SECTION",
    "datalad.crawler.pipeline.CRAWLER_PIPELINE_SECTION_DEPRECATED",
    "datalad.crawler.pipeline.lgr",
    "datalad.crawler.pipeline.load_pipeline_from_template",
    "parse_url_opts",
    "set",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline.load_pipeline_from_module": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "__import__",
    "datalad.crawler.pipeline.lgr",
    "datalad.crawler.pipeline.sys",
    "exc_str",
    "getattr",
    "os.path.basename",
    "os.path.dirname",
    "os.path.join",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline.load_pipeline_from_template": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "NotImplementedError",
    "PipelineNotSpecifiedError",
    "datalad.crawler.pipeline._find_pipeline",
    "datalad.crawler.pipeline.load_pipeline_from_module",
    "os.path.exists",
    "os.path.isabs"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "datalad.crawler.pipeline.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.pipeline.reset_pipeline": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "datalad.crawler.pipeline.PIPELINE_TYPES",
    "datalad.crawler.pipeline.lgr",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline.run_pipeline": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "datalad.crawler.pipeline.lgr",
    "list",
    "xrun_pipeline"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.crawler.pipeline.xrun_pipeline": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ActivityStats",
    "ValueError",
    "_compare_dicts",
    "_log",
    "datalad.crawler.pipeline.FinishPipeline",
    "datalad.crawler.pipeline.PIPELINE_OPTS",
    "datalad.crawler.pipeline._get_pipeline_opts",
    "datalad.crawler.pipeline.lgr",
    "datalad.crawler.pipeline.reset_pipeline",
    "enumerate",
    "id",
    "len",
    "set",
    "str",
    "updated",
    "xrun_pipeline_steps"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline.xrun_pipeline._log": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "datalad.crawler.pipeline.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipeline.xrun_pipeline_steps": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "AttributeError",
    "_compare_dicts",
    "datalad.crawler.pipeline.lgr",
    "datalad.crawler.pipeline.xrun_pipeline",
    "isinstance",
    "len",
    "list",
    "node",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.pipelines.abstractsonline": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.pipelines.abstractsonline.dump_csv": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.pipelines.abstractsonline.dump_csv.__call__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.abstractsonline.dump_csv.__init__": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.abstractsonline.parse_abstract": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.abstractsonline.pipeline": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Sink",
    "a_href_match",
    "crawl_url",
    "datalad.crawler.pipelines.abstractsonline.dump_csv",
    "datalad.crawler.pipelines.abstractsonline.parse_abstract",
    "xpath_match"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.balsa": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.balsa.BalsaSupport": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.pipelines.balsa.BalsaSupport.__init__": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.balsa.BalsaSupport.verify_files": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "datalad.crawler.pipelines.balsa.lgr",
    "os.curdir",
    "os.path.abspath",
    "os.path.join",
    "os.path.normpath",
    "set",
    "shutil.rmtree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.balsa.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.Providers": {
  "data": {
   "shadows": "datalad.downloaders.providers.Providers"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.TOPURL": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.balsa.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.curdir": {
  "data": {
   "shadows": "os.curdir"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.extract_meta": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "_path_",
    "collections.OrderedDict",
    "datalad.crawler.pipelines.balsa.json",
    "datalad.crawler.pipelines.balsa.lgr",
    "datalad.crawler.pipelines.balsa.re",
    "map",
    "open",
    "os.makedirs",
    "os.path.exists",
    "str",
    "xpath_match"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.balsa.f_f": {
  "data": {
   "shadows": "find_files"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.file_basename": {
  "data": {
   "shadows": "datalad.utils.file_basename"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.fix_the_filename": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "datalad.utils.file_basename"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.balsa.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.lgr": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.balsa.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.pipeline": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "Annexificator",
    "a_href_match",
    "assign",
    "crawl_url",
    "datalad.crawler.pipelines.balsa.BalsaSupport",
    "datalad.crawler.pipelines.balsa.TOPURL",
    "datalad.crawler.pipelines.balsa.extract_meta",
    "datalad.crawler.pipelines.balsa.fix_the_filename",
    "datalad.crawler.pipelines.balsa.lgr",
    "datalad.crawler.pipelines.balsa.os",
    "datalad.downloaders.providers.Providers.from_config_files",
    "find_files",
    "os.makedirs",
    "os.path.exists",
    "os.path.join",
    "skip_if",
    "sub"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.balsa.pipeline.get_disposition_filename": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.balsa.pipeline.splitpath": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "datalad.crawler.pipelines.balsa.os"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.balsa.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.rmdir": {
  "data": {
   "shadows": "os.rmdir"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.rmtree": {
  "data": {
   "shadows": "shutil.rmtree"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.balsa.superdataset_pipeline": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Annexificator",
    "a_href_match",
    "assign",
    "crawl_url",
    "datalad.crawler.pipelines.balsa.TOPURL",
    "datalad.crawler.pipelines.balsa.lgr",
    "os.path.join",
    "skip_if",
    "switch",
    "xpath_match"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.crcns": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.crcns.METADATA_DIR": {
  "data": {
   "shadows": "datalad.consts.METADATA_DIR"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.crcns._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.crcns.auto_repr": {
  "data": {
   "shadows": "datalad.utils.auto_repr"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.crcns.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.crcns.extract_readme": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "datalad.crawler.pipelines.crcns.lgr",
    "datalad.crawler.pipelines.crcns.os",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.crcns.fetch_datacite_metadata": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datalad.crawler.pipelines.crcns.json",
    "datalad.support.network.get_cached_url_content"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.crcns.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.crcns.get_and_save_metadata": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "datalad.utils.auto_repr",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.pipelines.crcns.get_and_save_metadata.__call__": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "datalad.crawler.pipelines.crcns.get_metadata",
    "datalad.crawler.pipelines.crcns.os",
    "datalad.utils._path_",
    "datalad.utils.updated",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.crcns.get_and_save_metadata.__init__": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.crcns.get_cached_url_content": {
  "data": {
   "shadows": "datalad.support.network.get_cached_url_content"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.crcns.get_metadata": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "datalad.crawler.pipelines.crcns.base64",
    "datalad.crawler.pipelines.crcns.fetch_datacite_metadata",
    "datalad.crawler.pipelines.crcns.lgr",
    "datalad.crawler.pipelines.crcns.process_datacite_xml",
    "datalad.crawler.pipelines.crcns.re",
    "enumerate",
    "isinstance",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.crcns.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.crcns.lgr": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.crcns.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.crcns.pipeline": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Annexificator",
    "ValueError",
    "a_href_match",
    "crawl_url",
    "datalad.crawler.pipelines.crcns.get_and_save_metadata",
    "datalad.crawler.pipelines.crcns.lgr",
    "find_files",
    "get_replacement_dict",
    "int",
    "isinstance",
    "locals",
    "parse_checksums",
    "skip_if",
    "sub"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.crcns.process_datacite_xml": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.crcns.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.crcns.superdataset_pipeline": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "Annexificator",
    "a_href_match",
    "assign",
    "crawl_url",
    "datalad.crawler.pipelines.crcns.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.crcns.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.crcns.updated": {
  "data": {
   "shadows": "datalad.utils.updated"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.fcptable": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.fcptable.TOPURL": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.fcptable.extract_readme": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "datalad.crawler.pipelines.fcptable.lgr",
    "datalad.crawler.pipelines.fcptable.os",
    "open",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.fcptable.find_dataset": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.pipelines.fcptable.find_dataset.__call__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.crawler.pipelines.fcptable.re",
    "len",
    "xpath_match",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.fcptable.find_dataset.__init__": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.fcptable.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.fcptable.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.fcptable.lgr": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.fcptable.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.fcptable.pipeline": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "Annexificator",
    "a_href_match",
    "assign",
    "crawl_url",
    "datalad.crawler.pipelines.fcptable.TOPURL",
    "datalad.crawler.pipelines.fcptable.extract_readme",
    "datalad.crawler.pipelines.fcptable.find_dataset",
    "datalad.crawler.pipelines.fcptable.lgr",
    "datalad.crawler.pipelines.fcptable.os",
    "find_files",
    "skip_if",
    "sub",
    "switch"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.fcptable.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.fcptable.superdataset_pipeline": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "Annexificator",
    "assign",
    "crawl_url",
    "datalad.crawler.pipelines.fcptable.TOPURL",
    "datalad.crawler.pipelines.fcptable.lgr",
    "skip_if",
    "xpath_match"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.nda": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.nda.DEFAULT_BUCKET": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.nda.auto_repr": {
  "data": {
   "shadows": "datalad.utils.auto_repr"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.nda.bucket_pipeline": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Annexificator",
    "crawl_s3",
    "datalad.crawler.pipelines.nda.DEFAULT_BUCKET",
    "datalad.crawler.pipelines.nda.lgr",
    "switch"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.nda.collection_pipeline": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Annexificator",
    "assign",
    "crawl_s3",
    "datalad.crawler.pipelines.nda.DEFAULT_BUCKET",
    "datalad.crawler.pipelines.nda.lgr",
    "switch"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.nda.crawl_mindar_images03": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "datalad.utils.auto_repr",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.pipelines.nda.crawl_mindar_images03.__call__": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "datalad.support.nda_.get_oracle_db",
    "datalad.support.nda_.image03_Record",
    "datalad.support.nda_.image03_fields",
    "datalad.support.nda_.image03_file_fields",
    "datalad.utils.updated",
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.nda.crawl_mindar_images03.__init__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.nda.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.nda.get_oracle_db": {
  "data": {
   "shadows": "datalad.support.nda_.get_oracle_db"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.nda.image03_Record": {
  "data": {
   "shadows": "datalad.support.nda_.image03_Record"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.nda.image03_fields": {
  "data": {
   "shadows": "datalad.support.nda_.image03_fields"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.nda.image03_file_fields": {
  "data": {
   "shadows": "datalad.support.nda_.image03_file_fields"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.nda.lgr": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.nda.pipeline": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "Annexificator",
    "assign",
    "continue_if",
    "datalad.crawler.pipelines.nda.crawl_mindar_images03",
    "datalad.crawler.pipelines.nda.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.nda.updated": {
  "data": {
   "shadows": "datalad.utils.updated"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.openfmri": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.openfmri.Providers": {
  "data": {
   "shadows": "datalad.downloaders.providers.Providers"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.openfmri.TOPURL": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.openfmri.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.openfmri.extract_readme": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.crawler.pipelines.openfmri.lgr",
    "datalad.crawler.pipelines.openfmri.os",
    "open",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.openfmri.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.openfmri.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.openfmri.lgr": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.openfmri.ls": {
  "data": {
   "shadows": "datalad.api.ls"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.openfmri.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.openfmri.pipeline": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Annexificator",
    "Exception",
    "a_href_match",
    "add_archive_content",
    "assign",
    "crawl_url",
    "datalad.api.ls",
    "datalad.crawler.pipelines.openfmri.TOPURL",
    "datalad.crawler.pipelines.openfmri.lgr",
    "datalad.dochelpers.exc_str",
    "find_files",
    "fix_permissions",
    "func_to_node",
    "int",
    "sub",
    "switch"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.openfmri.pipeline.add_archive_content": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "bool",
    "datalad.crawler.pipelines.openfmri.os"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.openfmri.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.openfmri.s3_pipeline": {
  "data": {
   "shadows": "pipeline"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.openfmri.superdataset_pipeline": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Annexificator",
    "a_href_match",
    "assign",
    "crawl_url",
    "datalad.crawler.pipelines.openfmri.TOPURL",
    "datalad.crawler.pipelines.openfmri.lgr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.openfmri_s3": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger",
    "sub"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.openfmri_s3.collection_pipeline": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Annexificator",
    "assign",
    "crawl_s3",
    "datalad.crawler.pipelines.openfmri_s3.lgr",
    "datalad.crawler.pipelines.openfmri_s3.sub_s3_to_http",
    "switch"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.openfmri_s3.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.openfmri_s3.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.openfmri_s3.lgr": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.openfmri_s3.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.openfmri_s3.pipeline": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "Annexificator",
    "crawl_s3",
    "datalad.crawler.pipelines.openfmri_s3.lgr",
    "datalad.crawler.pipelines.openfmri_s3.sub_s3_to_http",
    "switch"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.openfmri_s3.sub_s3_to_http": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.simple_s3": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger",
    "sub"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.simple_s3.assure_bool": {
  "data": {
   "shadows": "datalad.utils.assure_bool"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.simple_s3.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.simple_s3.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.simple_s3.lgr": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.simple_s3.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.simple_s3.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.simple_s3.pipeline": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Annexificator",
    "ValueError",
    "assign",
    "crawl_s3",
    "datalad.crawler.pipelines.simple_s3.lgr",
    "datalad.crawler.pipelines.simple_s3.sub_s3_to_http",
    "datalad.utils.assure_bool",
    "get_replacement_dict",
    "os.path.join",
    "sub",
    "switch"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.simple_s3.sub_s3_to_http": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.simple_s3.swa_pipeline": {
  "data": {
   "shadows": "pipeline"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.simple_with_archives": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.simple_with_archives.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.simple_with_archives.lgr": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.simple_with_archives.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.simple_with_archives.pipeline": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Annexificator",
    "NotImplementedError",
    "a_href_match",
    "bool",
    "crawl_url",
    "datalad.crawler.pipelines.simple_with_archives.lgr",
    "find_files",
    "get_replacement_dict",
    "int",
    "isinstance",
    "sub"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.template": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.template.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.template.lgr": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.template.pipeline": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "datalad.crawler.pipelines.template.lgr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.utils.skip_if_no_module",
    "datalad.tests.utils.skip_if_scrapy_without_selector"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.tests.skip_if_no_module": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_module"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.skip_if_scrapy_without_selector": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_scrapy_without_selector"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_balsa": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.tests.test_balsa.TEST_TREE1": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.tests.test_balsa._PLUG_HERE": {
  "data": {
   "lineno": 257
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.tests.test_balsa._test_smoke_pipelines": {
  "data": {
   "shadows": "datalad.crawler.pipelines.tests.utils._test_smoke_pipelines"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_balsa.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_balsa.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_balsa.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_balsa.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_balsa.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_balsa.lgr": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.tests.test_balsa.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_balsa.ofpipeline": {
  "data": {
   "shadows": "pipeline"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_balsa.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_balsa.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_balsa.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_balsa.test_balsa_extract_meta": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "assert_true",
    "chpwd",
    "datalad.crawler.pipelines.tests.test_balsa.TEST_TREE1",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "eq_",
    "initiate_dataset",
    "len",
    "list",
    "open",
    "os.path.exists",
    "run_pipeline",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_balsa.test_balsa_pipeline1": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "AnnexRepo",
    "assert_not_equal",
    "chpwd",
    "datalad.crawler.pipelines.tests.test_balsa._PLUG_HERE",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "eq_",
    "find_files",
    "glob.glob",
    "initiate_dataset",
    "len",
    "list",
    "ok_file_has_content",
    "ok_file_under_git",
    "os.path.join",
    "run_pipeline",
    "set",
    "sorted",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_balsa.test_balsa_pipeline2": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "assert_true",
    "chpwd",
    "datalad.crawler.pipelines.tests.test_balsa._PLUG_HERE",
    "datalad.crawler.pipelines.tests.test_balsa.logging",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "eq_",
    "find_files",
    "glob.glob",
    "initiate_dataset",
    "len",
    "list",
    "ok_file_has_content",
    "ok_file_under_git",
    "os.path.join",
    "run_pipeline",
    "set",
    "sorted",
    "swallow_logs",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_balsa.test_smoke_pipelines": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "datalad.crawler.pipelines.tests.utils._test_smoke_pipelines"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_crcns": {
  "data": {},
  "type": "module"
 },
 "datalad.crawler.pipelines.tests.test_crcns.AccessDeniedError": {
  "data": {
   "shadows": "datalad.support.exceptions.AccessDeniedError"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_crcns.AccessFailedError": {
  "data": {
   "shadows": "datalad.support.exceptions.AccessFailedError"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_crcns.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_crcns.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_crcns.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_crcns.test_get_metadata": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "all",
    "datalad.support.exceptions.AccessDeniedError",
    "datalad.support.exceptions.AccessFailedError",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.skip_if_no_network",
    "get_metadata",
    "len",
    "nose.SkipTest",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_crcns.test_smoke_pipelines": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_fcptable": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.tests.test_fcptable.InvalidURL": {
  "data": {
   "shadows": "requests.exceptions.InvalidURL"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_fcptable.TOPURL": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.tests.test_fcptable._test_dataset": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "RuntimeError",
    "SkipTest",
    "assert_false",
    "assert_raises",
    "assert_true",
    "assign",
    "chpwd",
    "crawl_url",
    "datalad.crawler.pipeline.run_pipeline",
    "datalad.crawler.pipelines.tests.test_fcptable.TOPURL",
    "exc_str",
    "find_dataset",
    "open",
    "os.path.exists",
    "requests.exceptions.InvalidURL",
    "skip_if",
    "sub",
    "use_cassette",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_fcptable._test_smoke_pipelines": {
  "data": {
   "shadows": "datalad.crawler.pipelines.tests.utils._test_smoke_pipelines"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_fcptable.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_fcptable.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_fcptable.lgr": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.tests.test_fcptable.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_fcptable.run_pipeline": {
  "data": {
   "shadows": "datalad.crawler.pipeline.run_pipeline"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_fcptable.test_dataset": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "RuntimeError",
    "SkipTest",
    "datalad.crawler.pipelines.tests.test_fcptable.TOPURL",
    "datalad.crawler.pipelines.tests.test_fcptable._test_dataset",
    "skip_if_url_is_not_available"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_fcptable.test_smoke_pipelines": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "datalad.crawler.pipelines.tests.utils._test_smoke_pipelines"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_nda": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.tests.test_nda.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_nda.lgr": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.tests.test_nda.test_smoke_pipelines": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "AnnexRepo",
    "bucket_pipeline",
    "chpwd",
    "collection_pipeline",
    "len",
    "ok_",
    "pipeline",
    "swallow_logs",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_openfmri": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.tests.test_openfmri._PLUG_HERE": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.__test_basic_openfmri_dataset_pipeline_with_annex": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "Annexificator",
    "a_href_match",
    "assign",
    "crawl_url",
    "css_match",
    "initiate_dataset",
    "list",
    "os.path.join",
    "run_pipeline",
    "skip_if_no_module",
    "use_cassette",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.__test_basic_openfmri_top_pipeline": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Sink",
    "a_href_match",
    "all",
    "crawl_url",
    "css_match",
    "eq_",
    "len",
    "ok_",
    "run_pipeline",
    "skip_if_no_module",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_openfmri._versioned_files": {
  "data": {
   "lineno": 182
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.add_to_index": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.check_dropall_get": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "clean",
    "ok_file_has_content",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.crawl": {
  "data": {
   "shadows": "datalad.api.crawl"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.lgr": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.ofpipeline": {
  "data": {
   "shadows": "pipeline"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.remove_from_index": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.test_openfmri_addperms": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "File",
    "chpwd",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "eq_",
    "initiate_dataset",
    "len",
    "list",
    "ok_clean_git",
    "ok_file_under_git",
    "os.path.join",
    "run_pipeline",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.test_openfmri_pipeline1": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ActivityStats",
    "AnnexRepo",
    "any",
    "assert_in",
    "assert_not_equal",
    "assert_not_in",
    "chpwd",
    "datalad.api.crawl",
    "datalad.crawler.pipelines.tests.test_openfmri._PLUG_HERE",
    "datalad.crawler.pipelines.tests.test_openfmri._versioned_files",
    "datalad.crawler.pipelines.tests.test_openfmri.add_to_index",
    "datalad.crawler.pipelines.tests.test_openfmri.check_dropall_get",
    "datalad.crawler.pipelines.tests.test_openfmri.logging",
    "datalad.crawler.pipelines.tests.test_openfmri.remove_from_index",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "eq_",
    "find_files",
    "glob.glob",
    "hexsha",
    "initiate_dataset",
    "len",
    "list",
    "mock.patch.object",
    "ok_",
    "ok_file_has_content",
    "ok_file_under_git",
    "os.path.exists",
    "os.path.join",
    "run_pipeline",
    "set",
    "sorted",
    "swallow_logs",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.test_openfmri_pipeline1._pipeline": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.test_openfmri_pipeline1.hexsha": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.test_openfmri_pipeline2": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "ActivityStats",
    "AnnexRepo",
    "assert_not_equal",
    "chpwd",
    "datalad.crawler.pipelines.tests.test_openfmri._PLUG_HERE",
    "datalad.crawler.pipelines.tests.test_openfmri.check_dropall_get",
    "datalad.crawler.pipelines.tests.test_openfmri.os",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "eq_",
    "initiate_dataset",
    "len",
    "list",
    "os.path.join",
    "run_pipeline",
    "set",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_openfmri.test_smoke_pipelines": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "AnnexRepo",
    "chpwd",
    "collection_pipeline",
    "len",
    "ok_",
    "pipeline",
    "swallow_logs",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_openfmri_collection": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.tests.test_openfmri_collection._PLUG_HERE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.tests.test_openfmri_collection.crawl": {
  "data": {
   "shadows": "datalad.api.crawl"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri_collection.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri_collection.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri_collection.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri_collection.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri_collection.lgr": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.tests.test_openfmri_collection.ofcpipeline": {
  "data": {
   "shadows": "superdataset_pipeline"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri_collection.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri_collection.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_openfmri_collection.test_openfmri_superdataset_pipeline1": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Dataset",
    "GitRepo",
    "chpwd",
    "datalad.api.crawl",
    "datalad.crawler.pipelines.tests.test_openfmri_collection._PLUG_HERE",
    "datalad.tests.utils.known_failure_direct_mode",
    "eq_",
    "initiate_dataset",
    "list",
    "os.path.exists",
    "os.path.join",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_simple_s3": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.tests.test_simple_s3.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_s3._tsp": {
  "data": {
   "shadows": "datalad.crawler.pipelines.tests.utils._test_smoke_pipelines"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_s3.crawl": {
  "data": {
   "shadows": "datalad.api.crawl"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_s3.crawl_init": {
  "data": {
   "shadows": "datalad.api.crawl_init"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_s3.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_s3.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_s3.get_test_providers": {
  "data": {
   "shadows": "datalad.downloaders.tests.utils.get_test_providers"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_s3.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_s3.lgr": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.tests.test_simple_s3.test_drop": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "_path_",
    "assert_false",
    "chpwd",
    "datalad.api.crawl",
    "datalad.api.crawl_init",
    "datalad.api.create",
    "datalad.downloaders.tests.utils.get_test_providers",
    "datalad.support.annexrepo.AnnexRepo",
    "dict",
    "eq_",
    "externals_use_cassette",
    "glob.glob",
    "len",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_simple_s3.test_obscure_names": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "chpwd",
    "datalad.api.crawl",
    "datalad.api.crawl_init",
    "datalad.api.create",
    "datalad.downloaders.tests.utils.get_test_providers",
    "dict",
    "externals_use_cassette",
    "ok_clean_git",
    "ok_file_under_git",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_simple_s3.test_smoke_pipelines": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "datalad.crawler.pipelines.tests.utils._test_smoke_pipelines",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_simple_with_archives": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.tests.test_simple_with_archives._test_smoke_pipelines": {
  "data": {
   "shadows": "datalad.crawler.pipelines.tests.utils._test_smoke_pipelines"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_with_archives.crawl": {
  "data": {
   "shadows": "datalad.api.crawl"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_with_archives.crawl_init": {
  "data": {
   "shadows": "datalad.api.crawl_init"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_with_archives.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_with_archives.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_with_archives.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_with_archives.lgr": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "datalad.crawler.pipelines.tests.test_simple_with_archives.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.test_simple_with_archives.test_crawl_autoaddtext": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "chpwd",
    "datalad.api.crawl",
    "datalad.api.crawl_init",
    "datalad.api.create",
    "datalad.tests.utils.known_failure_direct_mode",
    "ok_clean_git",
    "ok_file_under_git",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_simple_with_archives.test_simple1": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "_path_",
    "chpwd",
    "datalad.api.crawl",
    "datalad.tests.utils.known_failure_direct_mode",
    "eq_",
    "initiate_dataset",
    "len",
    "list",
    "ok_file_has_content",
    "ok_file_under_git",
    "os.path.join",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.test_simple_with_archives.test_smoke_pipelines": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datalad.crawler.pipelines.tests.utils._test_smoke_pipelines"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.utils": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.pipelines.tests.utils._test_smoke_pipelines": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AnnexRepo",
    "chpwd",
    "func",
    "len",
    "make_tempfile",
    "ok_",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.pipelines.tests.utils.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.pipelines.tests.utils.lgr": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "datalad.crawler.tests": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.utils.skip_if_no_module",
    "datalad.tests.utils.skip_if_scrapy_without_selector"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.tests.skip_if_no_module": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_module"
  },
  "type": "import"
 },
 "datalad.crawler.tests.skip_if_scrapy_without_selector": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_scrapy_without_selector"
  },
  "type": "import"
 },
 "datalad.crawler.tests.test_pipeline": {
  "data": {
   "symbols_in_volume": [
    "ActivityStats",
    "datalad.tests.utils.skip_if_scrapy_without_selector",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.crawler.tests.test_pipeline.AssertOrder": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.crawler.tests.test_pipeline.AssertOrder.__call__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.AssertOrder.__call__._assert_order": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "assert_in",
    "datalad.crawler.tests.test_pipeline.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.AssertOrder.__init__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.DEFAULT_OUTPUT": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "datalad.crawler.tests.test_pipeline._out": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.crawler.tests.test_pipeline.DEFAULT_OUTPUT"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.crawler.tests.test_pipeline.lgr": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.crawler.tests.test_pipeline.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.crawler.tests.test_pipeline.skip_if_scrapy_without_selector": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_scrapy_without_selector"
  },
  "type": "import"
 },
 "datalad.crawler.tests.test_pipeline.test_load_pipeline_from_script": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "RuntimeError",
    "assert_raises",
    "dict",
    "eq_",
    "load_pipeline_from_module",
    "os.path.join",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_dropped_stats": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ActivityStats",
    "eq_",
    "run_pipeline"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_dropped_stats.n1": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_dropped_stats.n2": {
  "data": {
   "lineno": 272
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_linear_nested": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "Sink",
    "assert_order",
    "datalad.crawler.tests.test_pipeline.AssertOrder",
    "datalad.crawler.tests.test_pipeline.DEFAULT_OUTPUT",
    "datalad.crawler.tests.test_pipeline._out",
    "eq_",
    "range_node",
    "run_pipeline"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_linear_nested_order": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "Sink",
    "assert_order",
    "datalad.crawler.tests.test_pipeline.AssertOrder",
    "range_node",
    "run_pipeline"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_linear_simple": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Sink",
    "datalad.crawler.tests.test_pipeline.DEFAULT_OUTPUT",
    "eq_",
    "interrupt_if",
    "range_node",
    "run_pipeline"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_linear_top_isnested_pipeline": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "eq_",
    "range_node",
    "run_pipeline"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_looping": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "datalad.crawler.tests.test_pipeline._out",
    "dict",
    "eq_",
    "run_pipeline"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_looping.add_count": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_looping.count_threetimes": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "dict",
    "range",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_looping.passthrough": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_recursive": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "datalad.crawler.tests.test_pipeline._out",
    "dict",
    "eq_",
    "run_pipeline"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_recursive.less3": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "dict",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_stats_persist": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ActivityStats",
    "assert_pipeline"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_stats_persist.assert_pipeline": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "eq_",
    "run_pipeline"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_stats_persist.n1": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_stats_persist.n2": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_stats_persist.p": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_unknown_opts": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "run_pipeline"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_updated_stats": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ActivityStats",
    "eq_",
    "run_pipeline"
   ]
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_updated_stats.n1": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "datalad.crawler.tests.test_pipeline.test_pipeline_updated_stats.n2": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ActivityStats"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes": {
  "data": {},
  "type": "module"
 },
 "datalad.customremotes.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.customremotes.archives": {
  "data": {
   "symbols_in_volume": [
    "datalad.customremotes.archives.lgr",
    "datalad.customremotes.archives.logging"
   ]
  },
  "type": "module"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.__init__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ArchivesCache",
    "datalad.customremotes.archives.ArchiveAnnexCustomRemote",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote._annex_get_archive_by_key": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "humanize.naturalsize"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote._annex_get_archive_by_key.progress_indicators": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "datalad.customremotes.archives.os"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote._gen_akey_afiles": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "len",
    "operator.itemgetter",
    "os.path.exists",
    "set",
    "sorted",
    "unique"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote._parse_url": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "URL",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote._transfer": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "datalad.customremotes.archives.lgr",
    "exc_str",
    "getpwd",
    "link_file_load",
    "locals",
    "lock_if_check_fails",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.cache": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.get_file_url": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "URL",
    "ValueError",
    "collections.OrderedDict",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.req_CHECKPRESENT": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "datalad.customremotes.archives.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.req_CHECKURL": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "datalad.customremotes.archives.lgr",
    "datalad.customremotes.archives.os",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.req_REMOVE": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.req_WHEREIS": {
  "data": {
   "lineno": 299
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.stop": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "datalad.customremotes.archives.ArchiveAnnexCustomRemote",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.customremotes.archives.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.lgr": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "datalad.customremotes.archives.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.main": {
  "data": {
   "lineno": 405
  },
  "type": "function"
 },
 "datalad.customremotes.archives.naturalsize": {
  "data": {
   "shadows": "humanize.naturalsize"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.super_main": {
  "data": {
   "shadows": "main"
  },
  "type": "import"
 },
 "datalad.customremotes.base": {
  "data": {
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr",
    "datalad.customremotes.base.logging"
   ]
  },
  "type": "module"
 },
 "datalad.customremotes.base.AnnexCustomRemote": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "datalad.customremotes.base.DEFAULT_AVAILABILITY",
    "datalad.customremotes.base.DEFAULT_COST",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.customremotes.base.AnnexCustomRemote.__init__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "AnnexRepo",
    "DictCache",
    "GitRunner",
    "datalad.customremotes.base.AnnexExchangeProtocol",
    "datalad.customremotes.base.os",
    "datalad.customremotes.base.sys",
    "get_repo_instance"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote._get_custom_scheme": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "classmethod",
    "datalad.customremotes.base.URI_PREFIX"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote._get_key_path": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "datalad.customremotes.base.os",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote._initremote": {
  "data": {
   "lineno": 587
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote._introspect_req_signatures": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "classmethod",
    "datalad.customremotes.base.get_function_nargs",
    "dir",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote._loop": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "Exception",
    "datalad.customremotes.base.SUPPORTED_PROTOCOL",
    "datalad.customremotes.base.lgr",
    "getattr",
    "len",
    "method",
    "traceback.format_exc"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote._prepare": {
  "data": {
   "lineno": 591
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote._transfer": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.debug": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.error": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.get_DIRHASH": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.get_URLS": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.get_contentlocation": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.heavydebug": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.info": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.main": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "datalad.customremotes.base.AnnexRemoteQuit",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.progress": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "bytes",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.read": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "datalad.customremotes.base.os"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_CHECKPRESENT": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_CHECKURL": {
  "data": {
   "lineno": 527
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_CLAIMURL": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_EXPORTSUPPORTED": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_GETAVAILABILITY": {
  "data": {
   "lineno": 497
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_GETCOST": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_INITREMOTE": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_PREPARE": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_REMOVE": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_TRANSFER": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "Exception",
    "datalad.customremotes.base.lgr",
    "exc_str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_WHEREIS": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.send": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "IOError",
    "datalad.customremotes.base.errno",
    "datalad.customremotes.base.lgr",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.send_unsupported": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.stop": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "datalad.customremotes.base.AnnexRemoteQuit",
    "datalad.customremotes.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol": {
  "data": {
   "lineno": 65
  },
  "type": "class"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.__iadd__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "datalad.customremotes.base.os",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "datalad.customremotes.base.AnnexExchangeProtocol",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.add_section": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.do_execute_callables": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.do_execute_ext_commands": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.end_section": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.initiate": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr",
    "datalad.customremotes.base.os",
    "len",
    "open",
    "os.path.exists",
    "os.path.join",
    "os.path.realpath",
    "six.moves.range"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.records_callables": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.records_ext_commands": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.start_section": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.write_entries": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "datalad.customremotes.base.os",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.write_section": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr",
    "datalad.customremotes.base.os",
    "open",
    "os.path.dirname",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexRemoteQuit": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.customremotes.base.DATALAD_SPECIAL_REMOTES_UUIDS": {
  "data": {
   "shadows": "datalad.consts.DATALAD_SPECIAL_REMOTES_UUIDS"
  },
  "type": "import"
 },
 "datalad.customremotes.base.DEFAULT_AVAILABILITY": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.customremotes.base.DEFAULT_COST": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "datalad.customremotes.base.ProgressBarBase": {
  "data": {
   "shadows": "datalad.ui.progressbars.ProgressBarBase"
  },
  "type": "import"
 },
 "datalad.customremotes.base.SUPPORTED_PROTOCOL": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "datalad.customremotes.base.URI_PREFIX": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "datalad.customremotes.base.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.customremotes.base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datalad.customremotes.base.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.customremotes.base.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "datalad.customremotes.base.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.customremotes.base.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.customremotes.base.format_exc": {
  "data": {
   "shadows": "traceback.format_exc"
  },
  "type": "import"
 },
 "datalad.customremotes.base.generate_uuids": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "datalad.customremotes.base.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.get_function_nargs": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "datalad.customremotes.base.inspect",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.init_datalad_remote": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "bool",
    "datalad.consts.DATALAD_SPECIAL_REMOTES_UUIDS",
    "datalad.customremotes.base.lgr",
    "datalad.support.external_versions.external_versions",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.customremotes.base.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.customremotes.base.lgr": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.customremotes.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.customremotes.base.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.customremotes.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.customremotes.base.range": {
  "data": {
   "shadows": "six.moves.range"
  },
  "type": "import"
 },
 "datalad.customremotes.base.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.customremotes.base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.customremotes.base.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlparse"
  },
  "type": "import"
 },
 "datalad.customremotes.base.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "datalad.customremotes.datalad": {
  "data": {
   "symbols_in_volume": [
    "datalad.customremotes.datalad.logging"
   ]
  },
  "type": "module"
 },
 "datalad.customremotes.datalad.DataladAnnexCustomRemote": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "datalad.customremotes.datalad.DataladAnnexCustomRemote.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datalad.customremotes.datalad.DataladAnnexCustomRemote",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.datalad.DataladAnnexCustomRemote._transfer": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "datalad.customremotes.datalad.lgr",
    "exc_str",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.datalad.DataladAnnexCustomRemote.req_CHECKPRESENT": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Exception",
    "datalad.customremotes.datalad.lgr",
    "disable_logger",
    "exc_str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.datalad.DataladAnnexCustomRemote.req_CHECKURL": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception",
    "disable_logger",
    "exc_str",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.datalad.DataladAnnexCustomRemote.req_REMOVE": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "datalad.customremotes.datalad.DataladAnnexCustomRemote.req_WHEREIS": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "datalad.customremotes.datalad.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.customremotes.datalad.lgr": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datalad.customremotes.datalad.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.customremotes.datalad.main": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "datalad.customremotes.datalad.super_main": {
  "data": {
   "shadows": "main"
  },
  "type": "import"
 },
 "datalad.customremotes.main": {
  "data": {},
  "type": "module"
 },
 "datalad.customremotes.main.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.customremotes.main._main": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ArchiveAnnexCustomRemote",
    "DataladAnnexCustomRemote",
    "ValueError",
    "datalad.customremotes.main.backends",
    "datalad.customremotes.main.os",
    "print",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.main.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "datalad.customremotes.main.backends": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.customremotes.main.m__doc__": {
  "data": {
   "shadows": "__doc__"
  },
  "type": "import"
 },
 "datalad.customremotes.main.m__version__": {
  "data": {
   "shadows": "__version__"
  },
  "type": "import"
 },
 "datalad.customremotes.main.main": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "Exception",
    "datalad.customremotes.main._main",
    "datalad.customremotes.main.setup_parser",
    "datalad.customremotes.main.sys",
    "setup_exceptionhook",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.main.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.customremotes.main.setup_parser": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "__debug__",
    "__doc__",
    "_license_info",
    "datalad.customremotes.main.argparse"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.customremotes.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.customremotes.tests._get_custom_runner": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "AnnexExchangeProtocol",
    "Runner",
    "datalad.customremotes.tests.os"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives": {
  "data": {
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_archives.fn_inarchive_obscure",
    "get_most_obscure_supported_name"
   ]
  },
  "type": "module"
 },
 "datalad.customremotes.tests.test_archives.add_archive_content": {
  "data": {
   "shadows": "datalad.api.add_archive_content"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.check_basic_scenario": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "AnnexRepo",
    "AnnexRepo.clone",
    "ArchiveAnnexCustomRemote",
    "_get_custom_runner",
    "_path_",
    "assert_false",
    "assert_is_instance",
    "assert_true",
    "datalad.customremotes.tests.test_archives.fn_archive_obscure",
    "datalad.customremotes.tests.test_archives.fn_extracted_obscure",
    "datalad.customremotes.tests.test_archives.fn_inarchive_obscure",
    "eq_",
    "in_",
    "isinstance",
    "ok_file_has_content",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.check_observe_tqdm": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "chpwd",
    "datalad.api.add_archive_content",
    "datalad.api.create",
    "datalad.tests.utils.serve_path_via_http",
    "opj",
    "print",
    "sleep",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.download_url": {
  "data": {
   "shadows": "datalad.api.download_url"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.fn_archive_obscure": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datalad.customremotes.tests.test_archives.fn_extracted_obscure": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datalad.customremotes.tests.test_archives.fn_inarchive_obscure": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "datalad.customremotes.tests.test_archives.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.test_annex_get_from_subdir": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "AnnexRepo",
    "Runner",
    "assert_false",
    "assert_true",
    "chpwd",
    "datalad.api.add_archive_content",
    "datalad.customremotes.tests.test_archives.fn_inarchive_obscure",
    "datalad.tests.utils.known_failure_direct_mode",
    "opj",
    "runner",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.test_basic_scenario": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_archives.check_basic_scenario",
    "datalad.customremotes.tests.test_archives.fn_archive_obscure",
    "datalad.customremotes.tests.test_archives.fn_extracted_obscure"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.test_get_git_environ_adjusted": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "GitRunner",
    "abspath",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.test_interactions": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "AnnexRepo",
    "ArchiveAnnexCustomRemote",
    "ArchiveAnnexCustomRemote.COST",
    "check_interaction_scenario",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.test_no_rdflib_loaded": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "Runner",
    "assert_not_in",
    "runner",
    "runner.run",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base": {
  "data": {
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_base.ERROR_ARGS",
    "datalad.customremotes.tests.test_base.re"
   ]
  },
  "type": "module"
 },
 "datalad.customremotes.tests.test_base.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_base.BASE_INTERACTION_SCENARIOS": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "datalad.customremotes.tests.test_base.ERROR_ARGS": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "datalad.customremotes.tests.test_base.FIFO": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.customremotes.tests.test_base.FIFO.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.FIFO._pop": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.FIFO.flush": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.FIFO.read": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.FIFO.readline": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.FIFO.write": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.check_interaction_scenario": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_base.FIFO",
    "datalad.tests.utils.eq_",
    "isinstance",
    "remote_class",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_base.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_base.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_base.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_base.test_get_contentlocation": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AnnexCustomRemote",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.with_tree",
    "os.path.isabs"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.test_interactions": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "AnnexCustomRemote",
    "datalad.customremotes.tests.test_base.BASE_INTERACTION_SCENARIOS",
    "datalad.customremotes.tests.test_base.check_interaction_scenario",
    "datalad.customremotes.tests.test_base.re",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_datalad": {
  "data": {},
  "type": "module"
 },
 "datalad.customremotes.tests.test_datalad.check_basic_scenario": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "AnnexRepo",
    "_get_custom_runner",
    "assert_equal",
    "assert_in",
    "assert_raises",
    "eq_",
    "get_test_providers",
    "len",
    "swallow_logs",
    "swallow_outputs",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_datalad.check_basic_scenario_local_url": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_datalad.check_basic_scenario",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_datalad.check_basic_scenario_s3": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_datalad.check_basic_scenario"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_datalad.test_basic_scenario": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_datalad.check_basic_scenario_local_url"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_datalad.test_interactions": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "AnnexRepo",
    "check_interaction_scenario",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.distribution": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.add": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.add.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.add.Add": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.annex_add_opts",
    "datalad.interface.common_opts.annex_opts",
    "datalad.interface.common_opts.git_opts",
    "datalad.interface.common_opts.jobs_opt",
    "datalad.interface.common_opts.nosave_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.common_opts.save_message_opt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.add.Add.__call__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.add._discover_subdatasets_recursively",
    "datalad.distribution.add.lgr",
    "datalad.distribution.utils._fixup_submodule_dotgit_setup",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.annotate_paths.annotated2content_by_ds",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.annexjson2result",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.results.results_from_annex_noinfo",
    "datalad.interface.results.success_status_map",
    "datalad.interface.save.Save.__call__",
    "datalad.interface.utils.discover_dataset_trace_to_targets",
    "datalad.interface.utils.eval_results",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.utils.get_dataset_root",
    "datalad.utils.unique",
    "datasetmethod",
    "dict",
    "isinstance",
    "len",
    "list",
    "os.path.join",
    "os.path.normpath",
    "os.path.pardir",
    "os.path.relpath",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.add.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.add.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.distribution.add.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.distribution.add.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.add.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.add.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.add.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.add.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.add.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.add.Save": {
  "data": {
   "shadows": "datalad.interface.save.Save"
  },
  "type": "import"
 },
 "datalad.distribution.add.__docformat__": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "datalad.distribution.add._discover_subdatasets_recursively": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "dict",
    "len",
    "os.listdir",
    "os.path.isdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.add._fixup_submodule_dotgit_setup": {
  "data": {
   "shadows": "datalad.distribution.utils._fixup_submodule_dotgit_setup"
  },
  "type": "import"
 },
 "datalad.distribution.add.annex_add_opts": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_add_opts"
  },
  "type": "import"
 },
 "datalad.distribution.add.annex_opts": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_opts"
  },
  "type": "import"
 },
 "datalad.distribution.add.annexjson2result": {
  "data": {
   "shadows": "datalad.interface.results.annexjson2result"
  },
  "type": "import"
 },
 "datalad.distribution.add.annotated2content_by_ds": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.annotated2content_by_ds"
  },
  "type": "import"
 },
 "datalad.distribution.add.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.add.discover_dataset_trace_to_targets": {
  "data": {
   "shadows": "datalad.interface.utils.discover_dataset_trace_to_targets"
  },
  "type": "import"
 },
 "datalad.distribution.add.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.add.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.distribution.add.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.add.git_opts": {
  "data": {
   "shadows": "datalad.interface.common_opts.git_opts"
  },
  "type": "import"
 },
 "datalad.distribution.add.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.distribution.add.jobs_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.jobs_opt"
  },
  "type": "import"
 },
 "datalad.distribution.add.lgr": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "datalad.distribution.add.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.distribution.add.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.add.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.distribution.add.nosave_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.nosave_opt"
  },
  "type": "import"
 },
 "datalad.distribution.add.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.add.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.distribution.add.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.add.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.add.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.add.results_from_annex_noinfo": {
  "data": {
   "shadows": "datalad.interface.results.results_from_annex_noinfo"
  },
  "type": "import"
 },
 "datalad.distribution.add.save_message_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.save_message_opt"
  },
  "type": "import"
 },
 "datalad.distribution.add.success_status_map": {
  "data": {
   "shadows": "datalad.interface.results.success_status_map"
  },
  "type": "import"
 },
 "datalad.distribution.add.unique": {
  "data": {
   "shadows": "datalad.utils.unique"
  },
  "type": "import"
 },
 "datalad.distribution.add_sibling": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.add_sibling.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.distribution.add_sibling._check_deps": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "datalad.utils.assure_list",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.add_sibling.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.clone": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.clone.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.clone.Clone": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.location_description",
    "datalad.interface.common_opts.reckless_opt",
    "datalad.support.constraints.EnsureKeyChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.clone.Clone.__call__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "Dataset",
    "ValueError",
    "_get_flexible_source_candidates",
    "_get_git_url_from_source",
    "_get_installationpath_from_url",
    "_get_tracking_source",
    "_handle_possible_annex_dataset",
    "datalad.distribution.clone.lgr",
    "datalad.distribution.clone.re",
    "datalad.dochelpers.exc_str",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.support.gitrepo.GitCommandError",
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.support.network.get_local_file_url",
    "datalad.utils.assure_list",
    "datalad.utils.rmtree",
    "datasetmethod",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "os.listdir",
    "os.path.exists",
    "os.path.pardir",
    "os.path.relpath",
    "require_dataset",
    "resolve_path",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.clone.EnsureKeyChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureKeyChoice"
  },
  "type": "import"
 },
 "datalad.distribution.clone.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.clone.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.clone.GitCommandError": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitCommandError"
  },
  "type": "import"
 },
 "datalad.distribution.clone.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.clone.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.clone.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.clone.__docformat__": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "datalad.distribution.clone.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.clone.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.clone.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.clone.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.clone.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.clone.get_local_file_url": {
  "data": {
   "shadows": "datalad.support.network.get_local_file_url"
  },
  "type": "import"
 },
 "datalad.distribution.clone.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.clone.lgr": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.distribution.clone.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.distribution.clone.location_description": {
  "data": {
   "shadows": "datalad.interface.common_opts.location_description"
  },
  "type": "import"
 },
 "datalad.distribution.clone.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.clone.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.distribution.clone.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.distribution.clone.reckless_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.reckless_opt"
  },
  "type": "import"
 },
 "datalad.distribution.clone.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.clone.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.distribution.create": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.create.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.create.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.create.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.distribution.create.Create": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.annex_init_opts",
    "datalad.interface.common_opts.annex_opts",
    "datalad.interface.common_opts.git_opts",
    "datalad.interface.common_opts.location_description",
    "datalad.interface.common_opts.nosave_opt",
    "datalad.interface.common_opts.shared_access_opt",
    "datalad.support.constraints.EnsureDType",
    "datalad.support.constraints.EnsureKeyChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict",
    "int"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.create.Create.__call__": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Dataset",
    "ValueError",
    "bool",
    "datalad._seed",
    "datalad.distribution.create.lgr",
    "datalad.distribution.create.random",
    "datalad.distribution.create.uuid",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.common_opts.annex_init_opts",
    "datalad.interface.common_opts.annex_opts",
    "datalad.interface.common_opts.git_opts",
    "datalad.interface.utils.eval_results",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.utils.get_dataset_root",
    "datalad.utils.getpwd",
    "datasetmethod",
    "isinstance",
    "len",
    "list",
    "open",
    "os.listdir",
    "os.path.isdir",
    "os.path.join",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create.Create.custom_result_renderer": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "datalad.ui.ui.message",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create.EnsureDType": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureDType"
  },
  "type": "import"
 },
 "datalad.distribution.create.EnsureKeyChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureKeyChoice"
  },
  "type": "import"
 },
 "datalad.distribution.create.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.create.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.create.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.create.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.create.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.create.__docformat__": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datalad.distribution.create._seed": {
  "data": {
   "shadows": "datalad._seed"
  },
  "type": "import"
 },
 "datalad.distribution.create.annex_init_opts": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_init_opts"
  },
  "type": "import"
 },
 "datalad.distribution.create.annex_opts": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_opts"
  },
  "type": "import"
 },
 "datalad.distribution.create.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.create.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.create.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.distribution.create.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.distribution.create.git_opts": {
  "data": {
   "shadows": "datalad.interface.common_opts.git_opts"
  },
  "type": "import"
 },
 "datalad.distribution.create.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.distribution.create.lgr": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datalad.distribution.create.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.distribution.create.location_description": {
  "data": {
   "shadows": "datalad.interface.common_opts.location_description"
  },
  "type": "import"
 },
 "datalad.distribution.create.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.create.nosave_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.nosave_opt"
  },
  "type": "import"
 },
 "datalad.distribution.create.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.create.path_startswith": {
  "data": {
   "shadows": "datalad.utils.path_startswith"
  },
  "type": "import"
 },
 "datalad.distribution.create.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "datalad.distribution.create.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.create.shared_access_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.shared_access_opt"
  },
  "type": "import"
 },
 "datalad.distribution.create.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.distribution.create.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.create_sibling.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.create_sibling.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.CommandError": {
  "data": {
   "shadows": "datalad.cmd.CommandError"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.CreateSibling": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.annex_group_opt",
    "datalad.interface.common_opts.annex_groupwanted_opt",
    "datalad.interface.common_opts.annex_wanted_opt",
    "datalad.interface.common_opts.as_common_datasrc",
    "datalad.interface.common_opts.inherit_opt",
    "datalad.interface.common_opts.publish_by_default",
    "datalad.interface.common_opts.publish_depends",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureBool",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.create_sibling.CreateSibling.__call__": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "datalad.cmd.CommandError",
    "datalad.distribution.create_sibling.CreateSibling",
    "datalad.distribution.create_sibling._create_dataset_sibling",
    "datalad.distribution.create_sibling.lgr",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.dochelpers.exc_str",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.common_opts.as_common_datasrc",
    "datalad.interface.common_opts.publish_by_default",
    "datalad.interface.common_opts.publish_depends",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.utils.eval_results",
    "datalad.ssh_manager.get_connection",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.exceptions.MissingExternalDependency",
    "datalad.support.network.RI",
    "datalad.support.network.is_ssh",
    "datalad.support.sshconnector.sh_quote",
    "datalad.utils._path_",
    "datalad.utils.assure_list",
    "datalad.utils.not_supported_on_windows",
    "datalad.utils.slash_join",
    "os.path.relpath",
    "set",
    "sorted",
    "ssh",
    "ssh.get_annex_version",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.CreateSibling._get_ds_remote_shared_setting": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "datalad.cmd.CommandError",
    "datalad.distribution.create_sibling.CreateSibling",
    "datalad.distribution.create_sibling.lgr",
    "datalad.dochelpers.exc_str",
    "datalad.support.network.RI",
    "datalad.support.sshconnector.sh_quote",
    "ssh",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.CreateSibling._get_remote_url": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "ValueError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.CreateSibling.create_postupdate_hook": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "datalad.consts.TIMESTAMP_FMT",
    "datalad.consts.WEB_META_LOG",
    "datalad.support.sshconnector.sh_quote",
    "datalad.utils.make_tempfile",
    "locals",
    "os.path.join",
    "ssh",
    "ssh.copy",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.CreateSibling.init_remote_repo": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "datalad.cmd.CommandError",
    "datalad.distribution.create_sibling.lgr",
    "datalad.dochelpers.exc_str",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.sshconnector.sh_quote",
    "isinstance",
    "ssh",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.CreateSibling.upload_web_interface": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "ImportError",
    "datalad.consts.WEB_HTML_DIR",
    "datalad.distribution.create_sibling.datalad",
    "datalad.distribution.create_sibling.lgr",
    "datalad.support.sshconnector.sh_quote",
    "datalad.utils.make_tempfile",
    "glob.glob",
    "isinstance",
    "jsmin.jsmin",
    "open",
    "os.path.dirname",
    "os.path.join",
    "ssh",
    "ssh.copy",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.MissingExternalDependency": {
  "data": {
   "shadows": "datalad.support.exceptions.MissingExternalDependency"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.Siblings": {
  "data": {
   "shadows": "datalad.distribution.siblings.Siblings"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.TIMESTAMP_FMT": {
  "data": {
   "shadows": "datalad.consts.TIMESTAMP_FMT"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.WEB_HTML_DIR": {
  "data": {
   "shadows": "datalad.consts.WEB_HTML_DIR"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.WEB_META_LOG": {
  "data": {
   "shadows": "datalad.consts.WEB_META_LOG"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling._DelayedSuper": {
  "data": {
   "shadows": "datalad.distribution.siblings._DelayedSuper"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.distribution.create_sibling._check_deps": {
  "data": {
   "shadows": "datalad.distribution.add_sibling._check_deps"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling._create_dataset_sibling": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "RuntimeError",
    "UnicodeDecodeError",
    "ValueError",
    "datalad.cmd.CommandError",
    "datalad.distribution.create_sibling.lgr",
    "datalad.distribution.siblings.Siblings.__call__",
    "datalad.distribution.siblings._DelayedSuper",
    "datalad.dochelpers.exc_str",
    "datalad.interface.common_opts.as_common_datasrc",
    "datalad.interface.common_opts.publish_by_default",
    "datalad.interface.common_opts.publish_depends",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.network.is_ssh",
    "datalad.support.sshconnector.sh_quote",
    "distutils.version.LooseVersion",
    "isinstance",
    "os.path.curdir",
    "os.path.join",
    "os.path.normpath",
    "os.path.relpath",
    "repr",
    "six.text_type",
    "ssh",
    "ssh.get_git_version"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.annex_group_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_group_opt"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.annex_groupwanted_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_groupwanted_opt"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.annex_wanted_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_wanted_opt"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.as_common_datasrc": {
  "data": {
   "shadows": "datalad.interface.common_opts.as_common_datasrc"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.datalad": {
  "data": {
   "shadows": "datalad"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.inherit_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.inherit_opt"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.is_ssh": {
  "data": {
   "shadows": "datalad.support.network.is_ssh"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.jsmin": {
  "data": {
   "shadows": "jsmin.jsmin"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.lgr": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "datalad.distribution.create_sibling.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.make_tempfile": {
  "data": {
   "shadows": "datalad.utils.make_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.not_supported_on_windows": {
  "data": {
   "shadows": "datalad.utils.not_supported_on_windows"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.publish_by_default": {
  "data": {
   "shadows": "datalad.interface.common_opts.publish_by_default"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.publish_depends": {
  "data": {
   "shadows": "datalad.interface.common_opts.publish_depends"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.sh_quote": {
  "data": {
   "shadows": "datalad.support.sshconnector.sh_quote"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.slash_join": {
  "data": {
   "shadows": "datalad.utils.slash_join"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.create_sibling_github.logging",
    "datalad.distribution.create_sibling_github.re"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.create_sibling_github.CreateSiblingGithub": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.publish_depends",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.create_sibling_github.CreateSiblingGithub.__call__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "datalad.distribution.create_sibling_github._make_github_repos",
    "datalad.distribution.create_sibling_github.lgr",
    "datalad.distribution.create_sibling_github.template_fx",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.siblings.Siblings",
    "datalad.interface.common_opts.publish_depends",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.exceptions.MissingExternalDependency",
    "github",
    "os.path.relpath",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling_github.CreateSiblingGithub.result_renderer_cmdline": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "datalad.ui.ui.message",
    "datalad.utils.assure_list",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling_github.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.MissingExternalDependency": {
  "data": {
   "shadows": "datalad.support.exceptions.MissingExternalDependency"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.Siblings": {
  "data": {
   "shadows": "datalad.distribution.siblings.Siblings"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.URL": {
  "data": {
   "shadows": "datalad.support.network.URL"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.UserPassword": {
  "data": {
   "shadows": "datalad.downloaders.credentials.UserPassword"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.distribution.create_sibling_github._get_github_entity": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "cred",
    "cred.delete",
    "cred.is_known",
    "datalad.cfg.get",
    "datalad.dochelpers.exc_str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling_github._make_github_repo": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "datalad.distribution.create_sibling_github.get_repo_url",
    "datalad.distribution.create_sibling_github.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling_github._make_github_repos": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "_make_github_repo",
    "cred",
    "cred.delete",
    "cred.is_known",
    "datalad.distribution.create_sibling_github._get_github_entity",
    "datalad.distribution.create_sibling_github.lgr",
    "datalad.downloaders.credentials.UserPassword"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling_github.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.get_repo_url": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "datalad.support.network.URL"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling_github.gh": {
  "data": {
   "shadows": "github"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.lgr": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "datalad.distribution.create_sibling_github.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.publish_depends": {
  "data": {
   "shadows": "datalad.interface.common_opts.publish_depends"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.template_fx": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "datalad.distribution.create_sibling_github.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.create_test_dataset.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.create_test_dataset.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.CreateTestDataset": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureInt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.create_test_dataset.CreateTestDataset.__call__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "datalad.distribution.create_test_dataset._makeds",
    "datalad.distribution.create_test_dataset._parse_spec",
    "datalad.distribution.create_test_dataset.os",
    "datalad.distribution.create_test_dataset.random",
    "datalad.distribution.create_test_dataset.tempfile",
    "datalad.utils.get_tempfile_kwargs",
    "list",
    "os.path.exists",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_test_dataset.CreateTestDataset.result_renderer_cmdline": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "datalad.ui.ui.message",
    "len",
    "map",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_test_dataset.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.EnsureInt": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureInt"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.create_test_dataset._makeds": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "RepoClass",
    "datalad.api.add",
    "datalad.distribution.create_test_dataset.lgr",
    "datalad.distribution.create_test_dataset.random",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "open",
    "os.path.abspath",
    "os.path.isabs",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_test_dataset._parse_spec": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_test_dataset.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.add": {
  "data": {
   "shadows": "datalad.api.add"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.get_tempfile_kwargs": {
  "data": {
   "shadows": "datalad.utils.get_tempfile_kwargs"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.lgr": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datalad.distribution.create_test_dataset.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.distribution.dataset": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.dataset.lgr",
    "datalad.distribution.dataset.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.dataset.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.ConfigManager": {
  "data": {
   "shadows": "datalad.config.ConfigManager"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.Constraint": {
  "data": {
   "shadows": "datalad.support.constraints.Constraint"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.Dataset": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "datalad.support.repo.Flyweight",
    "object",
    "six.add_metaclass",
    "weakref.WeakValueDictionary"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.dataset.Dataset.__eq__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "hasattr",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.__init__": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.__repr__": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset._flyweight_id_from_args": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "classmethod",
    "datalad.consts.LOCAL_CENTRAL_PATH",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.lgr",
    "datalad.support.network.RI",
    "datalad.utils.getpwd",
    "os.path.curdir",
    "os.path.isabs",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.close": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.config": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "datalad.config.ConfigManager",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.get_subdatasets": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "datalad.api.subdatasets",
    "datalad.distribution.dataset.inspect",
    "datalad.distribution.dataset.lgr",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.get_superdataset": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.utils.get_dataset_root",
    "os.path.join",
    "os.path.normpath",
    "os.path.pardir"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.id": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.is_installed": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.path": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.recall_state": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.repo": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "cls",
    "datalad.distribution.dataset.lgr",
    "datalad.dochelpers.exc_str",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.InvalidGitRepositoryError",
    "datalad.support.gitrepo.NoSuchPathError",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.EnsureDataset": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.dataset.EnsureDataset.__call__": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "isinstance",
    "six.string_types",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.EnsureDataset.long_description": {
  "data": {
   "lineno": 459
  },
  "type": "function"
 },
 "datalad.distribution.dataset.EnsureDataset.short_description": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Flyweight": {
  "data": {
   "shadows": "datalad.support.repo.Flyweight"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.InvalidGitRepositoryError": {
  "data": {
   "shadows": "datalad.support.gitrepo.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.LOCAL_CENTRAL_PATH": {
  "data": {
   "shadows": "datalad.consts.LOCAL_CENTRAL_PATH"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.NoDatasetArgumentFound": {
  "data": {
   "shadows": "datalad.support.exceptions.NoDatasetArgumentFound"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.NoSuchPathError": {
  "data": {
   "shadows": "datalad.support.gitrepo.NoSuchPathError"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.PY2": {
  "data": {
   "shadows": "six.PY2"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.WeakValueDictionary": {
  "data": {
   "shadows": "weakref.WeakValueDictionary"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.datasetmethod": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "apply_func",
    "datalad.distribution.dataset.Dataset",
    "datalad.utils.optional_args",
    "f",
    "setattr",
    "six.PY2"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.datasetmethod.apply_func": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "TypeError",
    "datalad.distribution.dataset.wrapt",
    "f",
    "inspect.getargspec",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.expandpath": {
  "data": {
   "shadows": "datalad.utils.expandpath"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.get_git_dir": {
  "data": {
   "shadows": "datalad.distribution.utils.get_git_dir"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.getargspec": {
  "data": {
   "shadows": "inspect.getargspec"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.is_explicit_path": {
  "data": {
   "shadows": "datalad.utils.is_explicit_path"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.lgr": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "datalad.distribution.dataset.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.optional_args": {
  "data": {
   "shadows": "datalad.utils.optional_args"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.require_dataset": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.lgr",
    "datalad.support.exceptions.NoDatasetArgumentFound",
    "datalad.utils.get_dataset_root",
    "datalad.utils.getpwd",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.resolve_path": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "datalad.utils.expandpath",
    "datalad.utils.getpwd",
    "datalad.utils.is_explicit_path",
    "isinstance",
    "os.path.abspath",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.subdatasets": {
  "data": {
   "shadows": "datalad.api.subdatasets"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.wrapt": {
  "data": {
   "shadows": "wrapt"
  },
  "type": "import"
 },
 "datalad.distribution.drop": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.distribution.drop.logging",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.param.Parameter"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.drop.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.distribution.drop.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.drop.Drop": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "datalad.distribution.drop.check_argument",
    "datalad.distribution.drop.dataset_argument",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.if_dirty_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.drop.Drop.__call__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.drop._drop_files",
    "datalad.distribution.drop.lgr",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.annotate_paths.annotated2content_by_ds",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.utils.eval_results",
    "datalad.interface.utils.handle_dirty_dataset",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "dict",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.drop.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.distribution.drop.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.drop.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.drop.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.drop.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.drop.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.drop.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.drop.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.drop._drop_files": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datalad.interface.results.annexjson2result",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.results.results_from_annex_noinfo",
    "datalad.interface.results.success_status_map",
    "datalad.utils.assure_list",
    "hasattr",
    "os.path.isabs",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.drop.annexjson2result": {
  "data": {
   "shadows": "datalad.interface.results.annexjson2result"
  },
  "type": "import"
 },
 "datalad.distribution.drop.annotated2content_by_ds": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.annotated2content_by_ds"
  },
  "type": "import"
 },
 "datalad.distribution.drop.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.drop.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.drop.check_argument": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.distribution.drop.dataset_argument": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "datalad.distribution.drop.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.distribution.drop.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.drop.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.drop.handle_dirty_dataset": {
  "data": {
   "shadows": "datalad.interface.utils.handle_dirty_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.drop.if_dirty_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.if_dirty_opt"
  },
  "type": "import"
 },
 "datalad.distribution.drop.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.distribution.drop.lgr": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "datalad.distribution.drop.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.drop.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.distribution.drop.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.drop.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.drop.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.drop.results_from_annex_noinfo": {
  "data": {
   "shadows": "datalad.interface.results.results_from_annex_noinfo"
  },
  "type": "import"
 },
 "datalad.distribution.drop.success_status_map": {
  "data": {
   "shadows": "datalad.interface.results.success_status_map"
  },
  "type": "import"
 },
 "datalad.distribution.get": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.get.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.get.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.get.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.distribution.get.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.distribution.get.EnsureInt": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureInt"
  },
  "type": "import"
 },
 "datalad.distribution.get.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.get.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.get.Get": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.jobs_opt",
    "datalad.interface.common_opts.location_description",
    "datalad.interface.common_opts.reckless_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.verbose",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureInt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.get.Get.__call__": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.get._install_necessary_subdatasets",
    "datalad.distribution.get._recursive_install_subds_underneath",
    "datalad.distribution.get.lgr",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.annotate_paths.annotated2content_by_ds",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.results.annexjson2result",
    "datalad.interface.results.results_from_annex_noinfo",
    "datalad.interface.results.results_from_paths",
    "datalad.interface.results.success_status_map",
    "datalad.interface.utils.eval_results",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.utils.get_dataset_root",
    "datasetmethod",
    "dict",
    "isinstance",
    "len",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.get.Get.custom_result_summary_renderer": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "datalad.dochelpers.single_or_plural",
    "datalad.interface.results.count_results",
    "datalad.ui.ui.message",
    "len",
    "os.linesep.join",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.get.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.get.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.distribution.get.InstallFailedError": {
  "data": {
   "shadows": "datalad.support.exceptions.InstallFailedError"
  },
  "type": "import"
 },
 "datalad.distribution.get.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.get.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.get.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.get.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.get.URL": {
  "data": {
   "shadows": "datalad.support.network.URL"
  },
  "type": "import"
 },
 "datalad.distribution.get.__docformat__": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "datalad.distribution.get._get_flexible_source_candidates_for_submodule": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "StopIteration",
    "_get_flexible_source_candidates",
    "datalad.support.network.RI",
    "datalad.support.network.URL",
    "datalad.utils.unique",
    "isinstance",
    "list",
    "next",
    "six.moves.urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.get._install_necessary_subdatasets": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "Dataset",
    "Exception",
    "datalad.distribution.get._install_subds_from_flexible_source",
    "datalad.distribution.get.lgr",
    "datalad.dochelpers.exc_str",
    "datalad.interface.results.get_status_dict",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.get._install_subds_from_flexible_source": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "Exception",
    "_fixup_submodule_dotgit_setup",
    "datalad.distribution.get._get_flexible_source_candidates_for_submodule",
    "datalad.distribution.get.lgr",
    "datalad.dochelpers.exc_str",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.support.exceptions.InstallFailedError",
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.get._recursive_install_subds_underneath": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "Dataset",
    "Exception",
    "datalad.distribution.get._install_subds_from_flexible_source",
    "datalad.distribution.get.lgr",
    "datalad.dochelpers.exc_str",
    "datalad.interface.results.get_status_dict",
    "datalad.utils.path_is_subpath",
    "int",
    "isinstance",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.get._with_sep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.distribution.get.annexjson2result": {
  "data": {
   "shadows": "datalad.interface.results.annexjson2result"
  },
  "type": "import"
 },
 "datalad.distribution.get.annotated2content_by_ds": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.annotated2content_by_ds"
  },
  "type": "import"
 },
 "datalad.distribution.get.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.get.count_results": {
  "data": {
   "shadows": "datalad.interface.results.count_results"
  },
  "type": "import"
 },
 "datalad.distribution.get.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.get.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.get.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.distribution.get.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.get.jobs_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.jobs_opt"
  },
  "type": "import"
 },
 "datalad.distribution.get.lgr": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "datalad.distribution.get.linesep": {
  "data": {
   "shadows": "os.linesep"
  },
  "type": "import"
 },
 "datalad.distribution.get.location_description": {
  "data": {
   "shadows": "datalad.interface.common_opts.location_description"
  },
  "type": "import"
 },
 "datalad.distribution.get.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.get.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.get.path_is_subpath": {
  "data": {
   "shadows": "datalad.utils.path_is_subpath"
  },
  "type": "import"
 },
 "datalad.distribution.get.path_startswith": {
  "data": {
   "shadows": "datalad.utils.path_startswith"
  },
  "type": "import"
 },
 "datalad.distribution.get.reckless_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.reckless_opt"
  },
  "type": "import"
 },
 "datalad.distribution.get.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.get.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.get.results_from_annex_noinfo": {
  "data": {
   "shadows": "datalad.interface.results.results_from_annex_noinfo"
  },
  "type": "import"
 },
 "datalad.distribution.get.results_from_paths": {
  "data": {
   "shadows": "datalad.interface.results.results_from_paths"
  },
  "type": "import"
 },
 "datalad.distribution.get.single_or_plural": {
  "data": {
   "shadows": "datalad.dochelpers.single_or_plural"
  },
  "type": "import"
 },
 "datalad.distribution.get.success_status_map": {
  "data": {
   "shadows": "datalad.interface.results.success_status_map"
  },
  "type": "import"
 },
 "datalad.distribution.get.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.distribution.get.unique": {
  "data": {
   "shadows": "datalad.utils.unique"
  },
  "type": "import"
 },
 "datalad.distribution.get.urlquote": {
  "data": {
   "shadows": "six.moves.urllib.parse.quote"
  },
  "type": "import"
 },
 "datalad.distribution.get.verbose": {
  "data": {
   "shadows": "datalad.interface.common_opts.verbose"
  },
  "type": "import"
 },
 "datalad.distribution.install": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.install.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.install.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.install.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.install.FileNotInRepositoryError": {
  "data": {
   "shadows": "datalad.support.exceptions.FileNotInRepositoryError"
  },
  "type": "import"
 },
 "datalad.distribution.install.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.distribution.install.Install": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.jobs_opt",
    "datalad.interface.common_opts.location_description",
    "datalad.interface.common_opts.nosave_opt",
    "datalad.interface.common_opts.reckless_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.is_result_matching_pathsource_argument",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.install.Install.__call__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "as_ds",
    "datalad.distribution.install.Install",
    "datalad.distribution.install.lgr",
    "datalad.dochelpers.exc_str",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.YieldDatasets",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.network.PathRI",
    "datalad.support.network.RI",
    "datalad.utils.assure_list",
    "datasetmethod",
    "dict",
    "isinstance",
    "len",
    "os.curdir",
    "require_dataset",
    "resolve_path",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.install.InstallFailedError": {
  "data": {
   "shadows": "datalad.support.exceptions.InstallFailedError"
  },
  "type": "import"
 },
 "datalad.distribution.install.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.install.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.install.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.install.PathRI": {
  "data": {
   "shadows": "datalad.support.network.PathRI"
  },
  "type": "import"
 },
 "datalad.distribution.install.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.install.YieldDatasets": {
  "data": {
   "shadows": "datalad.interface.results.YieldDatasets"
  },
  "type": "import"
 },
 "datalad.distribution.install.__docformat__": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "datalad.distribution.install.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.install.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.install.curdir": {
  "data": {
   "shadows": "os.curdir"
  },
  "type": "import"
 },
 "datalad.distribution.install.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.install.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.install.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.install.is_datalad_compat_ri": {
  "data": {
   "shadows": "datalad.support.network.is_datalad_compat_ri"
  },
  "type": "import"
 },
 "datalad.distribution.install.is_result_matching_pathsource_argument": {
  "data": {
   "shadows": "datalad.interface.results.is_result_matching_pathsource_argument"
  },
  "type": "import"
 },
 "datalad.distribution.install.jobs_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.jobs_opt"
  },
  "type": "import"
 },
 "datalad.distribution.install.lgr": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "datalad.distribution.install.location_description": {
  "data": {
   "shadows": "datalad.interface.common_opts.location_description"
  },
  "type": "import"
 },
 "datalad.distribution.install.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.install.nosave_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.nosave_opt"
  },
  "type": "import"
 },
 "datalad.distribution.install.reckless_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.reckless_opt"
  },
  "type": "import"
 },
 "datalad.distribution.install.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.install.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.install.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.install.single_or_plural": {
  "data": {
   "shadows": "datalad.dochelpers.single_or_plural"
  },
  "type": "import"
 },
 "datalad.distribution.publish": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.publish.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.publish.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.publish.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.distribution.publish.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.distribution.publish.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.publish.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.publish.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.publish.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.publish.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.distribution.publish.PI": {
  "data": {
   "shadows": "git.remote.PushInfo"
  },
  "type": "import"
 },
 "datalad.distribution.publish.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.publish.Publish": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.annex_copy_opts",
    "datalad.interface.common_opts.annex_opts",
    "datalad.interface.common_opts.git_opts",
    "datalad.interface.common_opts.jobs_opt",
    "datalad.interface.common_opts.missing_sibling_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.publish.Publish.__call__": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "Dataset",
    "collections.OrderedDict",
    "datalad.distribution.publish._get_remote_info",
    "datalad.distribution.publish._publish_dataset",
    "datalad.distribution.publish.lgr",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.annotate_paths.annotated2content_by_ds",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.common_opts.annex_copy_opts",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datasetmethod",
    "dict",
    "len",
    "require_dataset",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.publish.SSHRI": {
  "data": {
   "shadows": "datalad.support.network.SSHRI"
  },
  "type": "import"
 },
 "datalad.distribution.publish.URL": {
  "data": {
   "shadows": "datalad.support.network.URL"
  },
  "type": "import"
 },
 "datalad.distribution.publish.__docformat__": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datalad.distribution.publish._check_and_update_remote_server_info": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "datalad.distribution.publish.lgr",
    "datalad.ssh_manager.get_connection",
    "datalad.support.network.RI",
    "datalad.support.network.URL",
    "datalad.support.network.is_ssh",
    "datalad.support.sshconnector.sh_quote",
    "isinstance",
    "ssh"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish._get_remote_diff": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "datalad.distribution.publish.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish._get_remote_info": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.publish.lgr",
    "dict",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish._publish_data": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "_check_and_update_remote_server_info",
    "datalad.distribution.publish.lgr",
    "datalad.interface.results.get_status_dict",
    "datalad.support.annexrepo.AnnexRepo",
    "isinstance",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish._publish_dataset": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "StopIteration",
    "_get_remote_diff",
    "datalad.distribution.publish._publish_data",
    "datalad.distribution.publish._push",
    "datalad.distribution.publish.has_diff",
    "datalad.distribution.publish.lgr",
    "datalad.distribution.publish.re",
    "datalad.interface.results.get_status_dict",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.utils.assure_list",
    "isinstance",
    "next"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish._push": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datalad.distribution.publish.lgr",
    "git.remote.PushInfo.ERROR"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish.annex_copy_opts": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_copy_opts"
  },
  "type": "import"
 },
 "datalad.distribution.publish.annex_opts": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_opts"
  },
  "type": "import"
 },
 "datalad.distribution.publish.annotated2content_by_ds": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.annotated2content_by_ds"
  },
  "type": "import"
 },
 "datalad.distribution.publish.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.publish.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.publish.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.publish.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.publish.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.publish.git_opts": {
  "data": {
   "shadows": "datalad.interface.common_opts.git_opts"
  },
  "type": "import"
 },
 "datalad.distribution.publish.has_diff": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "any",
    "datalad.distribution.publish.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish.is_ssh": {
  "data": {
   "shadows": "datalad.support.network.is_ssh"
  },
  "type": "import"
 },
 "datalad.distribution.publish.jobs_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.jobs_opt"
  },
  "type": "import"
 },
 "datalad.distribution.publish.lgr": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datalad.distribution.publish.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.publish.missing_sibling_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.missing_sibling_opt"
  },
  "type": "import"
 },
 "datalad.distribution.publish.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.publish.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.distribution.publish.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.publish.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.publish.sh_quote": {
  "data": {
   "shadows": "datalad.support.sshconnector.sh_quote"
  },
  "type": "import"
 },
 "datalad.distribution.publish.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.distribution.remove": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.remove.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.remove.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.distribution.remove.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.remove.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.remove.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.remove.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.remove.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.remove.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.remove.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.remove.Remove": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "datalad.distribution.drop.check_argument",
    "datalad.distribution.drop.dataset_argument",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.if_dirty_opt",
    "datalad.interface.common_opts.nosave_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.save_message_opt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.remove.Remove.__call__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.drop._drop_files",
    "datalad.distribution.remove.lgr",
    "datalad.distribution.remove.os",
    "datalad.distribution.uninstall.Uninstall.__call__",
    "datalad.distribution.uninstall._uninstall_dataset",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.annotate_paths.annotated2content_by_ds",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.save.Save.__call__",
    "datalad.interface.utils.eval_results",
    "datalad.interface.utils.path_is_under",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "dict",
    "hasattr",
    "os.path.exists",
    "os.path.join",
    "os.path.pardir",
    "os.path.relpath",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.remove.Save": {
  "data": {
   "shadows": "datalad.interface.save.Save"
  },
  "type": "import"
 },
 "datalad.distribution.remove.Uninstall": {
  "data": {
   "shadows": "datalad.distribution.uninstall.Uninstall"
  },
  "type": "import"
 },
 "datalad.distribution.remove.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.remove._drop_files": {
  "data": {
   "shadows": "datalad.distribution.drop._drop_files"
  },
  "type": "import"
 },
 "datalad.distribution.remove._uninstall_dataset": {
  "data": {
   "shadows": "datalad.distribution.uninstall._uninstall_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.remove.annotated2content_by_ds": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.annotated2content_by_ds"
  },
  "type": "import"
 },
 "datalad.distribution.remove.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.remove.check_argument": {
  "data": {
   "shadows": "datalad.distribution.drop.check_argument"
  },
  "type": "import"
 },
 "datalad.distribution.remove.dataset_argument": {
  "data": {
   "shadows": "datalad.distribution.drop.dataset_argument"
  },
  "type": "import"
 },
 "datalad.distribution.remove.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.distribution.remove.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.remove.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.remove.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.remove.if_dirty_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.if_dirty_opt"
  },
  "type": "import"
 },
 "datalad.distribution.remove.lgr": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "datalad.distribution.remove.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.remove.nosave_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.nosave_opt"
  },
  "type": "import"
 },
 "datalad.distribution.remove.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.remove.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.remove.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.distribution.remove.path_is_under": {
  "data": {
   "shadows": "datalad.interface.utils.path_is_under"
  },
  "type": "import"
 },
 "datalad.distribution.remove.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.remove.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.remove.save_message_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.save_message_opt"
  },
  "type": "import"
 },
 "datalad.distribution.siblings": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.siblings.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.siblings.AccessDeniedError": {
  "data": {
   "shadows": "datalad.support.exceptions.AccessDeniedError"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.AccessFailedError": {
  "data": {
   "shadows": "datalad.support.exceptions.AccessFailedError"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.RemoteNotAvailableError": {
  "data": {
   "shadows": "datalad.support.exceptions.RemoteNotAvailableError"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.Siblings": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.annex_group_opt",
    "datalad.interface.common_opts.annex_groupwanted_opt",
    "datalad.interface.common_opts.annex_required_opt",
    "datalad.interface.common_opts.annex_wanted_opt",
    "datalad.interface.common_opts.as_common_datasrc",
    "datalad.interface.common_opts.inherit_opt",
    "datalad.interface.common_opts.location_description",
    "datalad.interface.common_opts.publish_by_default",
    "datalad.interface.common_opts.publish_depends",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.siblings.Siblings.__call__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.siblings._mangle_urls",
    "datalad.distribution.siblings.lgr",
    "datalad.interface.common_opts.as_common_datasrc",
    "datalad.interface.common_opts.publish_by_default",
    "datalad.interface.common_opts.publish_depends",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.utils.eval_results",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.utils.slash_join",
    "datasetmethod",
    "dict",
    "os.path.basename",
    "os.path.relpath",
    "staticmethod",
    "worker"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings.Siblings.custom_result_renderer": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "datalad.ui.ui.message",
    "dict",
    "os.path.relpath",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings.URL": {
  "data": {
   "shadows": "datalad.support.network.URL"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.Update": {
  "data": {
   "shadows": "datalad.distribution.update.Update"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.UserPassword": {
  "data": {
   "shadows": "datalad.downloaders.credentials.UserPassword"
  },
  "type": "import"
 },
 "datalad.distribution.siblings._DelayedSuper": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.siblings._DelayedSuper.__init__": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._DelayedSuper.__str__": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._DelayedSuper.config": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._DelayedSuper.repo": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._DelayedSuper.super": {
  "data": {
   "lineno": 817,
   "symbols_in_volume": [
    "RuntimeError",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.distribution.siblings._add_remote": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "_configure_remote",
    "datalad.distribution.siblings.lgr",
    "datalad.interface.common_opts.as_common_datasrc",
    "datalad.interface.common_opts.publish_by_default",
    "datalad.interface.common_opts.publish_depends",
    "datalad.interface.results.get_status_dict",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.network.RI"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._configure_remote": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "_DelayedSuper",
    "_inherit_annex_var",
    "_inherit_config_var",
    "_query_remotes",
    "datalad.distribution.siblings.lgr",
    "datalad.distribution.update.Update.__call__",
    "datalad.dochelpers.exc_str",
    "datalad.interface.common_opts.as_common_datasrc",
    "datalad.interface.common_opts.publish_by_default",
    "datalad.interface.common_opts.publish_depends",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.constraints.EnsureBool",
    "datalad.support.exceptions.CommandError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.network.RI",
    "datalad.support.network.URL",
    "datalad.utils.assure_list",
    "dict",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._enable_remote": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "cred",
    "cred.delete",
    "cred.is_known",
    "datalad.distribution.siblings.os",
    "datalad.downloaders.credentials.UserPassword",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.AccessDeniedError",
    "datalad.support.exceptions.AccessFailedError",
    "dict",
    "isinstance",
    "six.moves.urllib.parse.urlparse",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._inherit_annex_var": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "datalad.distribution.siblings.lgr",
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._inherit_config_var": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "datalad.distribution.siblings.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._mangle_urls": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "datalad.distribution.siblings._query_remotes": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "datalad.distribution.siblings.lgr",
    "datalad.interface.results.get_status_dict",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._remove_remote": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "datalad.interface.results.get_status_dict",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.exceptions.RemoteNotAvailableError",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings.annex_group_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_group_opt"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.annex_groupwanted_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_groupwanted_opt"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.annex_required_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_required_opt"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.annex_wanted_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_wanted_opt"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.as_common_datasrc": {
  "data": {
   "shadows": "datalad.interface.common_opts.as_common_datasrc"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.inherit_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.inherit_opt"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.lgr": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "datalad.distribution.siblings.location_description": {
  "data": {
   "shadows": "datalad.interface.common_opts.location_description"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.publish_by_default": {
  "data": {
   "shadows": "datalad.interface.common_opts.publish_by_default"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.publish_depends": {
  "data": {
   "shadows": "datalad.interface.common_opts.publish_depends"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.slash_join": {
  "data": {
   "shadows": "datalad.utils.slash_join"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlparse"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.subdatasets.logging",
    "datalad.distribution.subdatasets.re"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.subdatasets.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.GitConfigParser": {
  "data": {
   "shadows": "git.GitConfigParser"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.InvalidGitRepositoryError": {
  "data": {
   "shadows": "datalad.support.gitrepo.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.Subdatasets": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureBool",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.subdatasets.Subdatasets.__call__": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "ValueError",
    "_get_submodules",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.subdatasets._parse_git_submodules",
    "datalad.distribution.subdatasets._parse_gitmodules",
    "datalad.distribution.subdatasets.lgr",
    "datalad.distribution.subdatasets.valid_key",
    "datalad.dochelpers.exc_str",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.support.gitrepo.InvalidGitRepositoryError",
    "datalad.utils.path_startswith",
    "datasetmethod",
    "int",
    "isinstance",
    "resolve_path",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.subdatasets.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.distribution.subdatasets._get_submodules": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.subdatasets._parse_git_submodules",
    "datalad.distribution.subdatasets._parse_gitmodules",
    "datalad.distribution.subdatasets.lgr",
    "datalad.distribution.subdatasets.os",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.utils.assure_list",
    "datalad.utils.path_startswith",
    "dict",
    "git.GitConfigParser",
    "int",
    "isinstance",
    "os.path.join",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.subdatasets._parse_git_submodules": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "datalad.cmd.GitRunner",
    "datalad.distribution.subdatasets.status_map",
    "datalad.distribution.subdatasets.submodule_full_props",
    "datalad.distribution.subdatasets.submodule_nodescribe_props",
    "datalad.dochelpers.exc_str",
    "datalad.support.exceptions.CommandError",
    "datalad.support.gitrepo.InvalidGitRepositoryError",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.subdatasets._parse_gitmodules": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception",
    "datalad.distribution.subdatasets.lgr",
    "git.GitConfigParser",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.subdatasets._with_sep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.lgr": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "datalad.distribution.subdatasets.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.path_startswith": {
  "data": {
   "shadows": "datalad.utils.path_startswith"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets.status_map": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "datalad.distribution.subdatasets.submodule_full_props": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datalad.distribution.subdatasets.submodule_nodescribe_props": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.distribution.subdatasets.valid_key": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datalad.distribution.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.tests.test_add": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.tests.test_add.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.add": {
  "data": {
   "shadows": "datalad.api.add"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.ok_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_under_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.test_add_dirty_tree": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_add.tree_arg",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tree",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_add.test_add_files": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_add.tree_arg",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tree",
    "isinstance",
    "list",
    "os.path.join",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_add.test_add_insufficient_args": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.add",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_add.test_add_mimetypes": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_add.os",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_add.test_add_recursive": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_add.test_add_source": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "Dataset",
    "NotImplementedError",
    "all",
    "datalad.support.network.RI",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "len",
    "open",
    "os.listdir",
    "os.path.join",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_add.test_add_subdataset": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "datalad.api.add",
    "datalad.api.create",
    "datalad.api.install",
    "datalad.distribution.tests.test_add.tree_arg",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_add.test_relpath_add": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.add",
    "datalad.distribution.tests.test_add.tree_arg",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_add.tree_arg": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "datalad.distribution.tests.test_add.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_add.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_clone.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.assert_message": {
  "data": {
   "shadows": "datalad.tests.utils.assert_message"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.assert_result_values_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_values_equal"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.chmod": {
  "data": {
   "shadows": "os.chmod"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.clone": {
  "data": {
   "shadows": "datalad.api.clone"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.get_datasets_topdir": {
  "data": {
   "shadows": "datalad.tests.utils.get_datasets_topdir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.geteuid": {
  "data": {
   "shadows": "os.geteuid"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.mkdir": {
  "data": {
   "shadows": "os.mkdir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.skip_if": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.test_clone_crcns": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.api.create",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.use_cassette",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_clone.test_clone_dataladri": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.cmd.Runner",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "mock.patch",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_clone.test_clone_dataset_from_just_source": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_clone.test_clone_datasets_root": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.tests.utils.assert_message",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_datasets_topdir",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.use_cassette",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_clone.test_clone_into_dataset": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "isinstance",
    "os.path.exists",
    "os.path.isdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_clone.test_clone_isnot_recursive": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_clone.test_clone_isnt_a_smartass": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.api.create",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_clone.test_clone_report_permission_issue": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.get_datasets_topdir",
    "datalad.tests.utils.skip_if",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils._path_",
    "datalad.utils.chpwd",
    "os.chmod",
    "os.geteuid",
    "os.mkdir"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_clone.test_clone_simple_local": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.clone",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.is_valid_repo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.tests.utils.assert_message",
    "datalad.tests.utils.assert_result_values_equal",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_clone.test_failed_clone": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.assert_message",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_clone.test_install_source_relpath": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.api.create",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.basename",
    "os.path.dirname"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_clone.test_invalid_args": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.clone",
    "datalad.api.create",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_clone.test_notclone_known_subdataset": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.clone",
    "datalad.support.annexrepo.AnnexRepo.is_valid_repo",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_message",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_clone.test_reckless": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_clone.use_cassette": {
  "data": {
   "shadows": "datalad.tests.utils.use_cassette"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_clone.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.tests.test_create.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create._dataset_hierarchy_template": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "datalad.distribution.tests.test_create._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.ok_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_under_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.raw": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datalad.distribution.tests.test_create.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.test_create": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Dataset",
    "datalad.cmd.Runner",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create.test_create_curdir": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.create",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create.test_create_raises": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Dataset",
    "ValueError",
    "datalad.distribution.tests.test_create.raw",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils._path_",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create.test_create_sub": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "isinstance",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create.test_create_subdataset_hierarchy_from_top": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_create._dataset_hierarchy_template",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create.test_create_text_no_annex": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.distribution.tests.test_create.re",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils._path_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create.test_create_withplugin": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create.test_nested_create": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_create.os",
    "datalad.distribution.tests.test_create.raw",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create.test_saving_prior": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_github": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datalad.api.create_sibling_github",
    "datalad.support.exceptions.MissingExternalDependency",
    "nose.SkipTest",
    "nose.tools.assert_raises"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.tests.test_create_github.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_github.MissingExternalDependency": {
  "data": {
   "shadows": "datalad.support.exceptions.MissingExternalDependency"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_github.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_github.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_github.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_github.assert_in": {
  "data": {
   "shadows": "nose.tools.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_github.assert_not_in": {
  "data": {
   "shadows": "nose.tools.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_github.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_github.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_github.create_sibling_github": {
  "data": {
   "shadows": "datalad.api.create_sibling_github"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_github.gh": {
  "data": {
   "shadows": "github"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_github.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_github.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_github.test_dont_trip_over_missing_subds": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.Dataset",
    "datalad.tests.utils.with_tempfile",
    "github.BadCredentialsException",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_in",
    "nose.tools.assert_not_in",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_github.test_get_repo_url": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "FakeRepo",
    "collections.namedtuple",
    "get_repo_url",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_github.test_invalid_call": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.Dataset",
    "datalad.api.create_sibling_github",
    "datalad.tests.utils.with_tempfile",
    "github.BadCredentialsException",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_github.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling": {
  "data": {
   "symbols_in_volume": [
    "datalad.api.create_sibling",
    "datalad.distribution.tests.test_create_sibling.lgr",
    "datalad.distribution.tests.test_create_sibling.logging",
    "datalad.support.external_versions.external_versions",
    "datalad.tests.utils.assert_no_errors_logged"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.tests.test_create_sibling.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.WEB_META_LOG": {
  "data": {
   "shadows": "datalad.consts.WEB_META_LOG"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling._test_correct_publish": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_create_sibling.re",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.utils._path_",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling._test_target_ssh_inherit": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "nose.tools.eq_",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.assert_create_sshwebserver": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "datalad.distribution.tests.test_create_sibling.assert_dict_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_dict_equal"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_no_errors_logged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_no_errors_logged"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_set_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_set_equal"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.chmod": {
  "data": {
   "shadows": "os.chmod"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.create_sibling": {
  "data": {
   "shadows": "datalad.api.create_sibling"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.get_mtimes_and_digests": {
  "data": {
   "shadows": "datalad.tests.utils.get_mtimes_and_digests"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.lgr": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "datalad.distribution.tests.test_create_sibling.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.ok_endswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_endswith"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.ok_exists": {
  "data": {
   "shadows": "datalad.tests.utils.ok_exists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.ok_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_under_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.publish": {
  "data": {
   "shadows": "datalad.api.publish"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.test_failon_no_permissions": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_create_sibling.assert_create_sshwebserver",
    "datalad.distribution.tests.test_create_sibling.stat",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "os.chmod",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_invalid_call": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "Dataset",
    "ValueError",
    "datalad.api.create_sibling",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_replace_and_relative_sshpath": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "Dataset",
    "datalad.cmd.Runner",
    "datalad.consts.WEB_META_LOG",
    "datalad.distribution.tests.test_create_sibling.os",
    "datalad.ssh_manager.get_connection",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils._path_",
    "glob.glob",
    "len",
    "nose.tools.eq_",
    "os.path.join",
    "ssh"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_target_ssh_inherit": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_create_sibling._test_target_ssh_inherit",
    "datalad.tests.utils.known_failure_direct_mode"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_target_ssh_recursive": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.api.publish",
    "datalad.distribution.tests.test_create_sibling._test_correct_publish",
    "datalad.distribution.tests.test_create_sibling.assert_create_sshwebserver",
    "datalad.distribution.tests.test_create_sibling.os",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils._path_",
    "datalad.utils.chpwd",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_target_ssh_simple": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.api.create_sibling",
    "datalad.api.install",
    "datalad.api.publish",
    "datalad.distribution.tests.test_create_sibling._test_correct_publish",
    "datalad.distribution.tests.test_create_sibling.assert_create_sshwebserver",
    "datalad.distribution.tests.test_create_sibling.logging",
    "datalad.distribution.tests.test_create_sibling.time",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.is_valid_repo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.network.urlquote",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_equal",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_set_equal",
    "datalad.tests.utils.get_mtimes_and_digests",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_endswith",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils._path_",
    "datalad.utils.on_windows",
    "dict",
    "local_target_cfg",
    "nose.tools.eq_",
    "open",
    "os.path.exists",
    "os.path.join",
    "process_digests_mtimes",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_target_ssh_simple.process_digests_mtimes": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "bool",
    "datalad.utils._path_",
    "len",
    "list",
    "nose.tools.eq_",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_target_ssh_since": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.distribution.tests.test_create_sibling.assert_create_sshwebserver",
    "datalad.distribution.tests.test_create_sibling.os",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils._path_",
    "len",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.urlquote": {
  "data": {
   "shadows": "datalad.support.network.urlquote"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_create_test_dataset.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset._parse_spec": {
  "data": {
   "shadows": "datalad.distribution.create_test_dataset._parse_spec"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.create_test_dataset": {
  "data": {
   "shadows": "datalad.api.create_test_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.skip_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.skip_direct_mode"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.swallow_outputs": {
  "data": {
   "shadows": "datalad.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.test_create": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.create",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_test_dataset.test_create_1test_dataset": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "datalad.api.create_test_dataset",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.skip_direct_mode",
    "datalad.utils.swallow_outputs",
    "len",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_test_dataset.test_create_test_dataset": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "datalad.api.create_test_dataset",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.skip_direct_mode",
    "datalad.utils.swallow_logs",
    "datalad.utils.swallow_outputs",
    "glob.glob",
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_test_dataset.test_hierarchy": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "datalad.api.create_test_dataset",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.skip_direct_mode",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.swallow_logs",
    "datalad.utils.swallow_outputs",
    "enumerate",
    "int",
    "len",
    "list",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_test_dataset.test_new_relpath": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "datalad.api.create_test_dataset",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.skip_direct_mode",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "datalad.utils.swallow_logs",
    "datalad.utils.swallow_outputs",
    "len",
    "nose.tools.eq_",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_test_dataset.test_parse_spec": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datalad.distribution.create_test_dataset._parse_spec",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_test_dataset.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_dataset.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.LOCAL_CENTRAL_PATH": {
  "data": {
   "shadows": "datalad.consts.LOCAL_CENTRAL_PATH"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.PathOutsideRepositoryError": {
  "data": {
   "shadows": "datalad.support.exceptions.PathOutsideRepositoryError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_cwd_unchanged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_cwd_unchanged"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_is_instance": {
  "data": {
   "shadows": "nose.tools.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.get": {
  "data": {
   "shadows": "datalad.api.get"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.ok_": {
  "data": {
   "shadows": "nose.tools.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.test_Dataset_flyweight": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_dataset.os",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "nose.tools.assert_is_instance",
    "nose.tools.ok_",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_EnsureDataset": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "EnsureDataset",
    "ValueError",
    "c",
    "datalad.tests.utils.assert_raises",
    "isinstance",
    "nose.tools.ok_",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_dataset_contructor": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "AttributeError",
    "Dataset",
    "TypeError",
    "datalad.distribution.tests.test_dataset.os",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "nose.tools.eq_",
    "nose.tools.ok_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_dataset_id": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "Dataset",
    "Dataset._unique_instances.clear",
    "datalad.support.annexrepo.AnnexRepo._unique_instances.clear",
    "datalad.tests.utils.with_tempfile",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_is_installed": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.get",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "datalad.utils.rmtree",
    "nose.tools.assert_false",
    "nose.tools.ok_",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_repo_cache": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.with_tempfile",
    "isinstance",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_require_dataset": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.create",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "nose.tools.assert_equal",
    "os.path.abspath",
    "require_dataset"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_resolve_path": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_dataset.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.getpwd",
    "nose.tools.eq_",
    "os.path.abspath",
    "os.path.join",
    "os.path.normpath",
    "resolve_path"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_subdatasets": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Dataset",
    "datalad.consts.LOCAL_CENTRAL_PATH",
    "datalad.distribution.tests.test_dataset.os",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils._path_",
    "datalad.utils.chpwd",
    "len",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "nose.tools.eq_",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_binding": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_dataset_binding.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_binding.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_binding.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_binding.test_decorator": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Dataset",
    "TypeError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "func",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset_binding.test_decorator.another": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datasetmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset_binding.test_decorator.func": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset_config": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.tests.test_dataset_config._config_file_content"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.tests.test_dataset_config._config_file_content": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.distribution.tests.test_dataset_config._dataset_config_template": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.distribution.tests.test_dataset_config.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_config.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_config.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_config.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_config.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_config.ok_": {
  "data": {
   "shadows": "nose.tools.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_config.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_config.test_configuration_access": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_dataset_config._dataset_config_template",
    "datalad.tests.utils.with_tree",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset_config.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_get.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.RemoteNotAvailableError": {
  "data": {
   "shadows": "datalad.support.exceptions.RemoteNotAvailableError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get._get_flexible_source_candidates_for_submodule": {
  "data": {
   "shadows": "datalad.distribution.get._get_flexible_source_candidates_for_submodule"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get._make_dataset_hierarchy": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Dataset",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assert_message": {
  "data": {
   "shadows": "datalad.tests.utils.assert_message"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assert_not_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in_results"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.curdir": {
  "data": {
   "shadows": "os.curdir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.get": {
  "data": {
   "shadows": "datalad.api.get"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.only_matching_paths": {
  "data": {
   "shadows": "datalad.interface.results.only_matching_paths"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.test_autoresolve_multiple_datasets": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "datalad.api.get",
    "datalad.api.install",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "glob.glob",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_autoresolve_recurse_subdatasets": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.get",
    "datalad.api.install",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "f",
    "f.write",
    "len",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_flexible_source_candidates_for_submodule": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.install",
    "datalad.distribution.get._get_flexible_source_candidates_for_submodule",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "f"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_greedy_recurse_subdatasets": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_in_unavailable_subdataset": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.get",
    "datalad.api.install",
    "datalad.distribution.tests.test_get._make_dataset_hierarchy",
    "datalad.interface.results.only_matching_paths",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_install_missing_subdataset": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "all",
    "datalad.api.install",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.curdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_invalid_call": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.get",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.exceptions.RemoteNotAvailableError",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_message",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.with_tempfile",
    "f",
    "f.write",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_mixed_hierarchy": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "f",
    "f.write",
    "open",
    "os.curdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_multiple_files": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "Dataset",
    "all",
    "any",
    "datalad.api.install",
    "datalad.support.network.RI",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "f",
    "f.startswith",
    "os.curdir",
    "os.listdir",
    "os.path.basename",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_recurse_dirs": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "Dataset",
    "all",
    "any",
    "datalad.api.install",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.with_pathsep",
    "f",
    "f.startswith",
    "len",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_recurse_subdatasets": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "len",
    "os.path.basename",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_single_file": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_testrepos",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_recurse_existing": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.distribution.tests.test_get._make_dataset_hierarchy",
    "datalad.tests.utils.assert_not_in_results",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.rmtree",
    "len",
    "os.curdir",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.with_pathsep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_install.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.GitCommandError": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitCommandError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.InstallFailedError": {
  "data": {
   "shadows": "datalad.support.exceptions.InstallFailedError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.YieldDatasets": {
  "data": {
   "shadows": "datalad.interface.results.YieldDatasets"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.YieldRelativePaths": {
  "data": {
   "shadows": "datalad.interface.results.YieldRelativePaths"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install._test_guess_dot_git": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.cmd.Runner",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "os.path.exists",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_is_instance": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_not_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in_results"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.consts": {
  "data": {
   "shadows": "datalad.consts"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.get": {
  "data": {
   "shadows": "datalad.api.get"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.get_datasets_topdir": {
  "data": {
   "shadows": "datalad.tests.utils.get_datasets_topdir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.integration": {
  "data": {
   "shadows": "datalad.tests.utils.integration"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.put_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.put_file_under_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.test_failed_install": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_failed_install_multiple": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.use_cassette",
    "datalad.tests.utils.usecase",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils._path_",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_get_git_url_from_source": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "NotImplementedError",
    "_get_git_url_from_source",
    "datalad.consts.DATASETS_TOPURL",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_guess_dot_git": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_install._test_guess_dot_git"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_implicit_install": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.create",
    "datalad.api.get",
    "datalad.api.install",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "datalad.utils.rmtree",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_consistent_state": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "check_consistent_installation",
    "datalad.api.create",
    "datalad.api.install",
    "datalad.tests.utils.integration",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.put_file_under_git",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_consistent_state.check_consistent_installation": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "len",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_dataladri": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.cmd.Runner",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "mock.patch",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_dataset_from_instance": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_dataset_from_just_source": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_dataset_from_just_source_via_path": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_datasets_root": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.interface.results.YieldDatasets",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_datasets_topdir",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.use_cassette",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "open",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_from_tilda": {
  "data": {
   "lineno": 866,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.create",
    "datalad.api.install",
    "datalad.distribution.tests.test_install.os",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_into_dataset": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils._path_",
    "isinstance",
    "os.path.exists",
    "os.path.isdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_known_subdataset": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.get",
    "datalad.api.install",
    "datalad.distribution.tests.test_install.os",
    "datalad.support.annexrepo.AnnexRepo.is_valid_repo",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_list": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": [
    "Dataset",
    "ValueError",
    "datalad.api.install",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_noautoget_data": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "Dataset",
    "any",
    "datalad.api.install",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_recursive": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "Dataset",
    "any",
    "datalad.api.install",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "isinstance",
    "len",
    "os.path.join",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_recursive_repeat": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.get",
    "datalad.api.install",
    "datalad.distribution.tests.test_install.os",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_recursive_with_data": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "all",
    "datalad.api.install",
    "datalad.interface.results.YieldDatasets",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_simple_local": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.is_valid_repo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_skip_failed_recursive": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.distribution.tests.test_install.logging",
    "datalad.distribution.tests.test_install.os",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_skip_list_arguments": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "isinstance",
    "len",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_source_relpath": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.install",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.basename",
    "os.path.dirname"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_subds_from_another_remote": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.create",
    "datalad.api.install",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.usecase",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "datalad.utils.getpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_subds_with_space": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.create",
    "datalad.api.install",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_installationpath_from_url": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "_get_installationpath_from_url",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_insufficient_args": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_invalid_args": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.create",
    "datalad.api.install",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_reckless": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.use_cassette": {
  "data": {
   "shadows": "datalad.tests.utils.use_cassette"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.usecase": {
  "data": {
   "shadows": "datalad.tests.utils.usecase"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_publish.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_is_instance": {
  "data": {
   "shadows": "nose.tools.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.neq_": {
  "data": {
   "shadows": "datalad.tests.utils.neq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.nok_": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.ok_": {
  "data": {
   "shadows": "nose.tools.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.publish": {
  "data": {
   "shadows": "datalad.api.publish"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.test_gh1426": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_not_equal",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_gh1763": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_invalid_call": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.publish",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_depends": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "nose.tools.assert_false",
    "nose.tools.eq_",
    "nose.tools.ok_",
    "os.path.join",
    "os.path.lexists",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_gh1691": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "nose.tools.ok_",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_plain_git": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.api.publish",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "list",
    "nose.tools.eq_",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_recursive": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.api.publish",
    "datalad.distribution.tests.test_publish.logging",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "list",
    "nose.tools.assert_false",
    "nose.tools.eq_",
    "nose.tools.ok_",
    "open",
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_simple": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.api.publish",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "list",
    "nose.tools.eq_",
    "nose.tools.ok_",
    "open",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_target_url": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils._path_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_with_data": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.api.publish",
    "datalad.distribution.tests.test_publish.glob",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "list",
    "nose.tools.assert_false",
    "nose.tools.eq_",
    "nose.tools.ok_",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_smth_about_not_supported": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.publish",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_siblings.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.ok_": {
  "data": {
   "shadows": "nose.tools.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.siblings": {
  "data": {
   "shadows": "datalad.api.siblings"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.test_here": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_siblings.test_siblings": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.api.siblings",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "nose.tools.eq_",
    "nose.tools.ok_",
    "os.path.basename",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_siblings.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_subdataset": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_subdataset.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_subdataset.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_subdataset.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_subdataset.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_subdataset.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_subdataset.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_subdataset.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_subdataset.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_subdataset.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_subdataset.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_subdataset.subdatasets": {
  "data": {
   "shadows": "datalad.api.subdatasets"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_subdataset.test_get_subdatasets": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.subdatasets",
    "datalad.distribution.tests.test_subdataset.os",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_testrepos",
    "nose.tools.eq_",
    "os.path.join",
    "os.path.pardir",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_subdataset.test_get_subdatasets_types": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.with_tempfile",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_subdataset.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_subdataset.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_uninstall.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.assert_result_values_cond": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_values_cond"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.drop": {
  "data": {
   "shadows": "datalad.api.drop"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.ok_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_under_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.psplit": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.remove": {
  "data": {
   "shadows": "datalad.api.remove"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.test_careless_subdataset_uninstall": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_clean_subds_removal": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_drop_nocrash_absent_subds": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.drop",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_failon_nodrop": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_kill": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_result_values_cond",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.exists",
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_no_interaction_with_untracked_content": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_remove_dataset_hierarchy": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.remove",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_remove_file_handle_only": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.remove",
    "datalad.distribution.tests.test_uninstall.os",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "len",
    "os.path.exists",
    "os.path.join",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_remove_more_than_one": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_remove_nowhining": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.install",
    "datalad.api.remove",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils._path_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_remove_recreation": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_remove_recursive_2": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.api.remove",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.use_cassette",
    "datalad.tests.utils.usecase",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_safetynet": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.uninstall",
    "datalad.distribution.tests.test_uninstall.os",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_annex_file": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "AssertionError",
    "Dataset",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.with_testrepos",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_dataset": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_git_file": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "AssertionError",
    "Dataset",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.with_testrepos",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_invalid": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.drop",
    "datalad.api.remove",
    "datalad.api.uninstall",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_testrepos",
    "method"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_multiple_paths": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "Dataset",
    "all",
    "any",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tree",
    "glob.glob",
    "os.path.exists",
    "os.path.isdir",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_recursive": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_result_values_cond",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tree",
    "os.path.exists",
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_subdataset": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "all",
    "datalad.api.install",
    "datalad.distribution.tests.test_uninstall.os",
    "datalad.support.external_versions.external_versions",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_uninstalled": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_without_super": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.create",
    "datalad.api.uninstall",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.uninstall": {
  "data": {
   "shadows": "datalad.api.uninstall"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.use_cassette": {
  "data": {
   "shadows": "datalad.tests.utils.use_cassette"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.usecase": {
  "data": {
   "shadows": "datalad.tests.utils.usecase"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_update.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.assert_is_instance": {
  "data": {
   "shadows": "nose.tools.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.knows_annex": {
  "data": {
   "shadows": "datalad.utils.knows_annex"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.ok_": {
  "data": {
   "shadows": "nose.tools.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.test_newthings_coming_down": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.knows_annex",
    "datalad.utils.rmtree",
    "nose.tools.assert_false",
    "nose.tools.assert_is_instance",
    "nose.tools.eq_",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_reobtain_data": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.distribution.tests.test_update.os",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile",
    "nose.tools.assert_false",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_update_fetch_all": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_update.os",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "nose.tools.eq_",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_update_git_smoke": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_update_simple": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.api.update",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "nose.tools.eq_",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_update_volatile_subds": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile",
    "nose.tools.assert_false",
    "nose.tools.ok_",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.update": {
  "data": {
   "shadows": "datalad.api.update"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_utils._get_flexible_source_candidates": {
  "data": {
   "shadows": "datalad.distribution.utils._get_flexible_source_candidates"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.get_git_dir": {
  "data": {
   "shadows": "datalad.distribution.utils.get_git_dir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.test_get_flexible_source_candidates": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "datalad.distribution.utils._get_flexible_source_candidates",
    "datalad.tests.utils.eq_",
    "f"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_utils.test_get_git_dir": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.distribution.tests.test_utils.os",
    "datalad.distribution.utils.get_git_dir",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.on_windows",
    "f",
    "f.write",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_utils.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.uninstall.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.uninstall.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.Uninstall": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "datalad.distribution.drop.check_argument",
    "datalad.distribution.drop.dataset_argument",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.if_dirty_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.uninstall.Uninstall.__call__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.uninstall._uninstall_dataset",
    "datalad.distribution.uninstall.lgr",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.utils.eval_results",
    "datalad.interface.utils.handle_dirty_dataset",
    "datalad.interface.utils.path_is_under",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "dict",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.uninstall.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.uninstall._drop_files": {
  "data": {
   "shadows": "datalad.distribution.drop._drop_files"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall._uninstall_dataset": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "datalad.distribution.drop._drop_files",
    "datalad.distribution.uninstall.os",
    "datalad.interface.results.get_status_dict",
    "datalad.utils.rmtree",
    "os.path.curdir",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.uninstall.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.check_argument": {
  "data": {
   "shadows": "datalad.distribution.drop.check_argument"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.dataset_argument": {
  "data": {
   "shadows": "datalad.distribution.drop.dataset_argument"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.handle_dirty_dataset": {
  "data": {
   "shadows": "datalad.interface.utils.handle_dirty_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.if_dirty_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.if_dirty_opt"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.lgr": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "datalad.distribution.uninstall.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.path_is_under": {
  "data": {
   "shadows": "datalad.interface.utils.path_is_under"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.distribution.update": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.update.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.update.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.update.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.distribution.update.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.update.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.update.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.update.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.update.Update": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.update.Update.__call__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "Dataset",
    "NotImplementedError",
    "_update_repo",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.update.lgr",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.support.annexrepo.AnnexRepo",
    "datasetmethod",
    "isinstance",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.update.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.update._update_repo": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "datalad.distribution.update.lgr",
    "datalad.support.annexrepo.AnnexRepo",
    "isinstance",
    "len",
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.update.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.update.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.update.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.update.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.distribution.update.lgr": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "datalad.distribution.update.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.update.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.update.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.update.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.update.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.utils": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.utils.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.utils.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.utils.DataLadRI": {
  "data": {
   "shadows": "datalad.support.network.DataLadRI"
  },
  "type": "import"
 },
 "datalad.distribution.utils.PathRI": {
  "data": {
   "shadows": "datalad.support.network.PathRI"
  },
  "type": "import"
 },
 "datalad.distribution.utils.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.utils.URL": {
  "data": {
   "shadows": "datalad.support.network.URL"
  },
  "type": "import"
 },
 "datalad.distribution.utils._fixup_submodule_dotgit_setup": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "get_git_dir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.utils._get_flexible_source_candidates": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "datalad.distribution.utils.posixpath",
    "datalad.support.network.PathRI",
    "datalad.support.network.RI",
    "datalad.support.network.URL",
    "isinstance",
    "os.path.isabs",
    "os.path.join",
    "os.path.normpath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.utils._get_git_url_from_source": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datalad.support.network.DataLadRI",
    "datalad.support.network.RI",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.utils._get_installationpath_from_url": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "datalad.support.network.DataLadRI",
    "datalad.support.network.RI",
    "datalad.support.network.URL",
    "isinstance",
    "six.moves.urllib.parse.unquote"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.utils._get_tracking_source": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "datalad.distribution.utils._handle_possible_annex_dataset": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "datalad.distribution.utils.lgr",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.utils.knows_annex"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.utils.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.utils.get_git_dir": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "RuntimeError",
    "open",
    "os.path.exists",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.islink",
    "os.path.join",
    "os.readlink"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.utils.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.distribution.utils.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.distribution.utils.isfile": {
  "data": {
   "shadows": "os.path.isfile"
  },
  "type": "import"
 },
 "datalad.distribution.utils.islink": {
  "data": {
   "shadows": "os.path.islink"
  },
  "type": "import"
 },
 "datalad.distribution.utils.knows_annex": {
  "data": {
   "shadows": "datalad.utils.knows_annex"
  },
  "type": "import"
 },
 "datalad.distribution.utils.lgr": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.distribution.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.utils.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.distribution.utils.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.utils.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "datalad.distribution.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.distribution.utils.readlink": {
  "data": {
   "shadows": "os.readlink"
  },
  "type": "import"
 },
 "datalad.distribution.utils.urlunquote": {
  "data": {
   "shadows": "six.moves.urllib.parse.unquote"
  },
  "type": "import"
 },
 "datalad.dochelpers": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "datalad.dochelpers.__in_ipython",
    "datalad.dochelpers.__rst_conventions",
    "datalad.dochelpers.logging",
    "datalad.dochelpers.re"
   ]
  },
  "type": "module"
 },
 "datalad.dochelpers.__add_init2doc": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.dochelpers.__in_ipython": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.dochelpers.__parameters_str_re": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "datalad.dochelpers.__re_params": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "datalad.dochelpers.__re_spliter1": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "datalad.dochelpers.__re_spliter2": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "datalad.dochelpers.__rst_conventions": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "datalad.dochelpers.__rst_mode": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.dochelpers._indent": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "datalad.dochelpers._rst_indentstr"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers._parse_parameters": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "datalad.dochelpers.__re_spliter1",
    "datalad.dochelpers.__re_spliter2",
    "datalad.dochelpers.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers._rst": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "datalad.dochelpers.__rst_mode"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers._rst_indentstr": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datalad.dochelpers._rst_section": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers._rst_sep": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "datalad.dochelpers._rst_underline": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers._split_out_parameters": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "datalad.dochelpers.__parameters_str_re",
    "datalad.dochelpers.handle_docstring",
    "datalad.dochelpers.textwrap",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers.borrowdoc": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "datalad.dochelpers.borrowdoc._borrowdoc": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers.borrowkwargs": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "datalad.dochelpers.borrowkwargs._borrowkwargs": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "datalad.dochelpers._indent",
    "datalad.dochelpers._parse_parameters",
    "datalad.dochelpers._rst_section",
    "datalad.dochelpers._split_out_parameters",
    "datalad.dochelpers.handle_docstring",
    "getattr",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers.exc_str": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "datalad.dochelpers.os",
    "datalad.dochelpers.sys",
    "datalad.dochelpers.traceback",
    "int",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers.get_docstring_split": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "datalad.dochelpers._parse_parameters",
    "datalad.dochelpers._split_out_parameters",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers.handle_docstring": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "datalad.dochelpers.textwrap",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers.lgr": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "datalad.dochelpers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.dochelpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.dochelpers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.dochelpers.single_or_plural": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.dochelpers.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "datalad.dochelpers.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "datalad.downloaders": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.downloaders.base": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "datalad.downloaders.base.Authenticator": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.base.Authenticator.authenticate": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object",
    "six.add_metaclass"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.base.BaseDownloader.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "id",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._download": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "AccessDeniedError",
    "DownloadError",
    "Exception",
    "datalad.downloaders.base.lgr",
    "datalad.downloaders.base.os",
    "datalad.downloaders.base.time",
    "exc_str",
    "int",
    "locals",
    "min",
    "open",
    "os.path.exists",
    "os.path.isdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._fetch": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "AccessDeniedError",
    "DownloadError",
    "Exception",
    "datalad.downloaders.base.lgr",
    "datalad.downloaders.base.msgpack",
    "dict",
    "exc_str",
    "isinstance",
    "len",
    "locals",
    "min",
    "six.PY3",
    "six.binary_type"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._get_status": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._get_target_url": {
  "data": {
   "lineno": 546
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._get_temp_download_filename": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._verify_download": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "hasattr",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.access": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "AccessDeniedError",
    "DownloadError",
    "RuntimeError",
    "datalad.downloaders.base.lgr",
    "exc_str",
    "method"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.cache": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "anydbm.open",
    "datalad.downloaders.base.atexit",
    "datalad.downloaders.base.lgr",
    "datalad.downloaders.base.os",
    "os.path.exists",
    "os.path.join",
    "property",
    "six.PY2"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.download": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "datalad.downloaders.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.fetch": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "datalad.downloaders.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.get_downloader_session": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.get_status": {
  "data": {
   "lineno": 482
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.get_status_from_headers": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.get_target_url": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "datalad.downloaders.base.DownloaderSession": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.base.DownloaderSession.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "datalad.downloaders.base.DownloaderSession.download": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.NoneAuthenticator": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "datalad.downloaders.base.Authenticator"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.base.NotImplementedAuthenticator": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "datalad.downloaders.base.Authenticator"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.base.PY2": {
  "data": {
   "shadows": "six.PY2"
  },
  "type": "import"
 },
 "datalad.downloaders.base.PY3": {
  "data": {
   "shadows": "six.PY3"
  },
  "type": "import"
 },
 "datalad.downloaders.base.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.downloaders.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "datalad.downloaders.base.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "datalad.downloaders.base.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "datalad.downloaders.base.binary_type": {
  "data": {
   "shadows": "six.binary_type"
  },
  "type": "import"
 },
 "datalad.downloaders.base.dbm": {
  "data": {
   "shadows": "dbm"
  },
  "type": "import"
 },
 "datalad.downloaders.base.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.downloaders.base.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.downloaders.base.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.downloaders.base.lgr": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datalad.downloaders.base.msgpack": {
  "data": {
   "shadows": "msgpack"
  },
  "type": "import"
 },
 "datalad.downloaders.base.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.downloaders.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.downloaders.base.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.downloaders.credentials": {
  "data": {
   "symbols_in_volume": [
    "datalad.downloaders.credentials.AWS_S3",
    "datalad.downloaders.credentials.NDA_S3",
    "datalad.downloaders.credentials.UserPassword",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.credentials.AWS_S3": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.downloaders.credentials.Credential"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.credentials.AWS_S3.is_expired": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "datalad.downloaders.credentials.calendar",
    "datalad.downloaders.credentials.lgr",
    "datalad.downloaders.credentials.time",
    "iso8601_to_epoch",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.CREDENTIAL_TYPES": {
  "data": {
   "lineno": 297
  },
  "type": "constant"
 },
 "datalad.downloaders.credentials.CompositeCredential": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "datalad.downloaders.credentials.Credential"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.credentials.CompositeCredential.__call__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "adapter",
    "c",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.CompositeCredential._prepare": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "C",
    "datalad.downloaders.credentials.CompositeCredential",
    "datalad.downloaders.credentials.Credential",
    "enumerate",
    "issubclass",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.CompositeCredential.enter_new": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.credentials.Credential.__call__": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential._ask_and_set": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential._ask_field_value": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential._is_field_hidden": {
  "data": {
   "lineno": 84
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential._is_field_optional": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential._prepare": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential.delete": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential.enter_new": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential.get": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential.is_known": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "Exception",
    "all",
    "datalad.downloaders.credentials.lgr",
    "exc_str",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential.set": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.NDATokenGenerator": {
  "data": {
   "shadows": "datalad.support.third.nda_aws_token_generator.NDATokenGenerator"
  },
  "type": "import"
 },
 "datalad.downloaders.credentials.NDA_S3": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "datalad.downloaders.credentials.AWS_S3",
    "datalad.downloaders.credentials.CompositeCredential",
    "datalad.downloaders.credentials.UserPassword",
    "datalad.downloaders.credentials._nda_adapter"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.credentials.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.downloaders.credentials.UserPassword": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.downloaders.credentials.Credential"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.credentials.__dev_doc__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datalad.downloaders.credentials._nda_adapter": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.NDATokenGenerator",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "datalad.downloaders.credentials.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.downloaders.credentials.keyring_": {
  "data": {
   "shadows": "keyring"
  },
  "type": "import"
 },
 "datalad.downloaders.credentials.lgr": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datalad.downloaders.credentials.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.downloaders.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.downloaders.http": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "LoggerHelper",
    "datalad.downloaders.http.lgr",
    "datalad.downloaders.http.requests_ftp",
    "datalad.downloaders.http.requests_log",
    "exc_str",
    "logging.getLogger",
    "six.moves.http_client.HTTPConnection.debuglevel"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.http.BytesIO": {
  "data": {
   "shadows": "six.BytesIO"
  },
  "type": "import"
 },
 "datalad.downloaders.http.HTMLFormAuthenticator": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPBaseAuthenticator"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTMLFormAuthenticator.__init__": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "assure_dict_from_str",
    "datalad.downloaders.http.HTMLFormAuthenticator",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTMLFormAuthenticator._post_credential": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "datalad.downloaders.http.lgr",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPBaseAuthenticator": {
  "data": {
   "lineno": 101
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTTPBaseAuthenticator.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "assure_list_from_str",
    "datalad.downloaders.http.HTTPBaseAuthenticator",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPBaseAuthenticator._post_credential": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPBaseAuthenticator.authenticate": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "AccessDeniedError",
    "DownloadError",
    "credential",
    "datalad.downloaders.http.check_response_status",
    "datalad.downloaders.http.lgr",
    "datalad.downloaders.http.re",
    "datalad.downloaders.http.requests"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPBaseAuthenticator.check_for_auth_failure": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "AccessDeniedError",
    "datalad.downloaders.http.re"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPBasicAuthAuthenticator": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPRequestsAuthenticator",
    "datalad.downloaders.http.requests"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTTPDigestAuthAuthenticator": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPRequestsAuthenticator",
    "datalad.downloaders.http.requests"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTTPDigestAuthAuthenticator._post_credential": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPDownloader": {
  "data": {
   "lineno": 372
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTTPDownloader.__init__": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "borrowkwargs",
    "datalad.downloaders.http.HTTPDownloader",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPDownloader._establish_session": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "datalad.downloaders.http.lgr",
    "datalad.downloaders.http.requests",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPDownloader.get_downloader_session": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "AccessFailedError",
    "Exception",
    "datalad.downloaders.http.HTTPDownloaderSession",
    "datalad.downloaders.http.check_response_status",
    "datalad.downloaders.http.lgr",
    "exc_str",
    "get_url_filename",
    "int",
    "range",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPDownloader.get_status_from_headers": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "FileStatus",
    "KeyError",
    "classmethod",
    "get_response_disposition_filename",
    "int",
    "str",
    "t"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPDownloaderSession": {
  "data": {
   "lineno": 296
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTTPDownloaderSession.__init__": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPDownloaderSession",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPDownloaderSession.download": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "Exception",
    "_stream",
    "datalad.downloaders.http.lgr",
    "exc_str",
    "hasattr",
    "len",
    "min",
    "six.BytesIO"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPDownloaderSession.download._stream": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "datalad.downloaders.http.io"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPRequestsAuthenticator": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPBaseAuthenticator"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTTPRequestsAuthenticator.__init__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPRequestsAuthenticator",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPRequestsAuthenticator._post_credential": {
  "data": {
   "lineno": 259
  },
  "type": "function"
 },
 "datalad.downloaders.http.__docformat__": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "datalad.downloaders.http.check_response_status": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "AccessDeniedError",
    "AccessFailedError",
    "DownloadError",
    "UnhandledRedirectError",
    "datalad.downloaders.http.lgr",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.downloaders.http.http_client": {
  "data": {
   "shadows": "six.moves.http_client"
  },
  "type": "import"
 },
 "datalad.downloaders.http.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "datalad.downloaders.http.lgr": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.downloaders.http.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.downloaders.http.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "datalad.downloaders.http.requests.auth": {
  "data": {
   "shadows": "requests.auth"
  },
  "type": "import"
 },
 "datalad.downloaders.http.requests_ftp": {
  "data": {
   "shadows": "requests_ftp"
  },
  "type": "import"
 },
 "datalad.downloaders.http.requests_log": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "datalad.downloaders.http.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "datalad.downloaders.lgr": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datalad.downloaders.providers": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.providers.AUTHENTICATION_TYPES": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.downloaders.providers.Provider": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.providers.Provider.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "assure_list_from_str"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Provider._get_downloader_class": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "classmethod",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Provider.downloader": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Provider.get_downloader": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Downloader"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Provider.get_scheme_from_url": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlparse",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.providers.Providers.__getitem__": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.__init__": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.__iter__": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.__len__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.__repr__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers._process_credential": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers._process_provider": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "ValueError",
    "assure_list_from_str",
    "classmethod",
    "datalad.downloaders.providers.AUTHENTICATION_TYPES",
    "datalad.downloaders.providers.Provider",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.download": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.fetch": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.from_config_files": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "SafeConfigParserWithIncludes",
    "ValueError",
    "classmethod",
    "datalad.downloaders.providers.Providers",
    "datalad.downloaders.providers.lgr",
    "getattr",
    "glob.glob",
    "len",
    "list",
    "locals",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.get_provider": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "datalad.downloaders.providers.Provider",
    "datalad.downloaders.providers.lgr",
    "datalad.downloaders.providers.re",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.get_status": {
  "data": {
   "lineno": 323
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.needs_authentication": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.reset_default_providers": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.lgr": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datalad.downloaders.providers.pathjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.resolve_url_to_name": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "datalad.downloaders.providers.re",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlparse"
  },
  "type": "import"
 },
 "datalad.downloaders.s3": {
  "data": {
   "symbols_in_volume": [
    "datalad.downloaders.s3.logging",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.s3.S3Authenticator": {
  "data": {
   "lineno": 40
  },
  "type": "class"
 },
 "datalad.downloaders.s3.S3Authenticator.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "datalad.downloaders.s3.S3Authenticator",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Authenticator.authenticate": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "OrdinaryCallingFormat",
    "RuntimeError",
    "credential",
    "datalad.downloaders.s3.boto_lgr",
    "datalad.downloaders.s3.lgr",
    "datalad.downloaders.s3.logging",
    "get_bucket"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "datalad.downloaders.s3.S3Authenticator"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.s3.S3Downloader.__init__": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "borrowkwargs",
    "datalad.downloaders.s3.S3Downloader",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader._establish_session": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "datalad.downloaders.s3.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader._parse_url": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "assure_dict_from_str",
    "classmethod",
    "datalad.downloaders.s3.lgr",
    "datalad.downloaders.s3.re",
    "six.moves.urllib.parse.unquote",
    "six.moves.urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader.bucket": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader.get_downloader_session": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "NotImplementedError",
    "TargetFileAbsent",
    "datalad.downloaders.s3.S3DownloaderSession",
    "get_url_straight_filename",
    "rfc2822_to_epoch",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader.get_key_headers": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "classmethod",
    "rfc2822_to_epoch"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader.get_key_status": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader.get_status_from_headers": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "FileStatus",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader.reset": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3DownloaderSession": {
  "data": {
   "lineno": 90
  },
  "type": "class"
 },
 "datalad.downloaders.s3.S3DownloaderSession.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "datalad.downloaders.s3.S3DownloaderSession",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3DownloaderSession.download": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3DownloaderSession.download.pbar_callback": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "datalad.downloaders.s3.__docformat__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "datalad.downloaders.s3.boto_lgr": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datalad.downloaders.s3.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.downloaders.s3.lgr": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "datalad.downloaders.s3.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.downloaders.s3.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.downloaders.s3.urlsplit": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlsplit"
  },
  "type": "import"
 },
 "datalad.downloaders.s3.urlunquote": {
  "data": {
   "shadows": "six.moves.urllib.parse.unquote"
  },
  "type": "import"
 },
 "datalad.downloaders.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.downloaders.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "datalad.downloaders.tests.test_base.test_docstring": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_credentials": {
  "data": {},
  "type": "module"
 },
 "datalad.downloaders.tests.test_credentials.Keyring": {
  "data": {
   "shadows": "datalad.support.keyring_.Keyring"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.MemoryKeyring": {
  "data": {
   "shadows": "datalad.support.keyring_.MemoryKeyring"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials._CCred1": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "UserPassword",
    "datalad.downloaders.tests.test_credentials._cred1_adapter"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.tests.test_credentials._cred1_adapter": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_credentials.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.test_composite_credential1": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "cred",
    "cred.enter_new",
    "cred.get",
    "datalad.downloaders.tests.test_credentials._CCred1",
    "datalad.support.keyring_.MemoryKeyring",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_credentials.test_cred1_call": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "UserPassword",
    "cred",
    "datalad.support.keyring_.MemoryKeyring",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_credentials.test_cred1_enter_new": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "KeyError",
    "UserPassword",
    "datalad.support.keyring_.MemoryKeyring",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_credentials.test_credentials_from_env": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "AWS_S3",
    "cred",
    "cred.get",
    "cred.is_known",
    "datalad.support.keyring_.Keyring",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_true",
    "mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_credentials.test_keyring": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_credentials.with_testsui": {
  "data": {
   "shadows": "datalad.tests.utils.with_testsui"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_http": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datalad.downloaders.tests.test_http.NoHTTPPretty",
    "datalad.downloaders.tests.test_http.test_authenticate_external_portals",
    "six.PY3"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.tests.test_http.FakeCredential1": {
  "data": {
   "lineno": 283
  },
  "type": "class"
 },
 "datalad.downloaders.tests.test_http.FakeCredential1.__call__": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.FakeCredential1.enter_new": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.FakeCredential1.is_known": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.FakeCredential2": {
  "data": {
   "lineno": 418
  },
  "type": "class"
 },
 "datalad.downloaders.tests.test_http.FakeCredential2.__call__": {
  "data": {
   "lineno": 423
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.FakeCredential2.enter_new": {
  "data": {
   "lineno": 425
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.FakeCredential2.is_known": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.NoHTTPPretty": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.tests.test_http.PY3": {
  "data": {
   "shadows": "six.PY3"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_http.__builtin__": {
  "data": {
   "shadows": "six.moves.builtins"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_http._raise_IOError": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "IOError"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.check_download_external_url": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "assert_equal",
    "assert_false",
    "assert_in",
    "datalad.downloaders.tests.utils.get_test_providers",
    "get_url_straight_filename",
    "isinstance",
    "len",
    "open",
    "os.path.join",
    "swallow_outputs",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.fake_open": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.fake_open.myfile": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.tests.test_http.fake_open.myfile.close": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.fake_open.myfile.write": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "write_"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.fake_open.myopen": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.get_test_providers": {
  "data": {
   "shadows": "datalad.downloaders.tests.utils.get_test_providers"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_http.httpretty": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.downloaders.tests.test_http.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_http.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_http.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_http.requests_ftp": {
  "data": {
   "shadows": "requests_ftp"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_http.test_HTMLFormAuthenticator_httpretty": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "HTMLFormAuthenticator",
    "HTTPDownloader",
    "assert_equal",
    "credential",
    "datalad.downloaders.tests.test_http.FakeCredential1",
    "datalad.downloaders.tests.test_http.httpretty",
    "datalad.downloaders.tests.test_http.test_cookie",
    "datalad.downloaders.tests.test_http.url",
    "dict",
    "open",
    "os.path.join",
    "skip_if",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_HTMLFormAuthenticator_httpretty.request_get_callback": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "assert_equal",
    "assert_in",
    "datalad.downloaders.tests.test_http.test_cookie"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_HTMLFormAuthenticator_httpretty.request_post_callback": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "assert_equal",
    "assert_not_in"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_HTMLFormAuthenticator_httpretty_2": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "HTMLFormAuthenticator",
    "HTTPDownloader",
    "assert_equal",
    "credential",
    "datalad.downloaders.tests.test_http.FakeCredential2",
    "datalad.downloaders.tests.test_http.httpretty",
    "datalad.downloaders.tests.test_http.test_cookie",
    "datalad.downloaders.tests.test_http.url",
    "dict",
    "open",
    "os.path.join",
    "skip_if",
    "with_fake_cookies_db",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_HTMLFormAuthenticator_httpretty_2.request_get_callback": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "assert_equal",
    "assert_in",
    "datalad.downloaders.tests.test_http.test_cookie"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_HTMLFormAuthenticator_httpretty_2.request_get_with_expired_cookie_callback": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "assert_greater",
    "assert_in",
    "calendar.timegm",
    "datalad.downloaders.tests.test_http.time"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_HTMLFormAuthenticator_httpretty_2.request_post_callback": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "assert_equal",
    "assert_not_in"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_HTMLFormAuthenticator_httpretty_authfail404": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "HTMLFormAuthenticator",
    "HTTPDownloader",
    "assert_equal",
    "assert_raises",
    "credential",
    "datalad.downloaders.tests.test_http.FakeCredential1",
    "datalad.downloaders.tests.test_http.httpretty",
    "datalad.downloaders.tests.test_http.url",
    "dict",
    "skip_if",
    "with_tempfile",
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_HTMLFormAuthenticator_httpretty_authfail404.request_post_callback": {
  "data": {
   "lineno": 395
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_HTTPDownloader_basic": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "HTTPDownloader",
    "_fail_verify_download",
    "assert_equal",
    "assert_raises",
    "datalad.downloaders.tests.test_http._raise_IOError",
    "datalad.downloaders.tests.test_http.fake_open",
    "download",
    "mock.patch.object",
    "ok_file_has_content",
    "os.path.join",
    "six.moves.builtins",
    "swallow_logs",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_HTTPDownloader_basic._fail_verify_download": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_HTTPDownloader_basic._fail_verify_download._verify_download": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "IncompleteDownloadError",
    "_orig_verify_download"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_auth_but_no_cred": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "HTMLFormAuthenticator",
    "HTTPDownloader",
    "ValueError",
    "assert_equal",
    "assert_raises",
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_authenticate_external_portals": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "datalad.downloaders.tests.test_http.check_download_external_url",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_cookie": {
  "data": {
   "lineno": 299
  },
  "type": "constant"
 },
 "datalad.downloaders.tests.test_http.test_docstring": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "assert_in"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_download_ftp": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ImportError",
    "SkipTest",
    "datalad.downloaders.tests.test_http.check_download_external_url"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_get_status_from_headers": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "FileStatus",
    "HTTPDownloader.get_status_from_headers",
    "assert_equal",
    "get_url_disposition_filename"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.test_mtime": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "assert_equal",
    "datalad.downloaders.tests.test_http.os",
    "datalad.downloaders.tests.test_http.time",
    "datalad.downloaders.tests.utils.get_test_providers",
    "os.path.join",
    "swallow_outputs",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_http.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_http.timegm": {
  "data": {
   "shadows": "calendar.timegm"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_http.url": {
  "data": {
   "lineno": 298
  },
  "type": "constant"
 },
 "datalad.downloaders.tests.test_providers": {
  "data": {},
  "type": "module"
 },
 "datalad.downloaders.tests.test_providers.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_providers.test_Providers_OnStockConfiguration": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "assert_equal",
    "assert_greater",
    "assert_in",
    "len",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_Providers_default_ones": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Providers",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_Providers_process_credential": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "Providers._process_credential",
    "ValueError",
    "assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_get_downloader_class": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "RuntimeError",
    "assert_in",
    "assert_raises",
    "mock.patch.object",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "SkipTest",
    "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1",
    "exc_str",
    "skip_if_no_network"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.tests.test_s3.boto": {
  "data": {
   "shadows": "boto"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3.test_mtime": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "assert_equal",
    "assert_raises",
    "datalad.downloaders.tests.test_s3.os",
    "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1_ver2",
    "get_test_providers",
    "swallow_outputs",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.test_parse_url": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "assert_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.test_reuse_session": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "assert_equal",
    "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1_ver1",
    "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1_ver2",
    "get_test_providers",
    "mock.patch.object",
    "swallow_outputs",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.test_s3_download_basic": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1",
    "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1_ver1",
    "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1_ver2",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1_ver1": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1_ver2": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "datalad.downloaders.tests.utils": {
  "data": {
   "symbols_in_volume": [
    "datalad.downloaders.tests.utils.get_test_providers"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.tests.utils.Providers": {
  "data": {
   "shadows": "datalad.downloaders.providers.Providers"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.utils.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.utils.get_test_providers": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "datalad.downloaders.providers.Providers.from_config_files",
    "unittest.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.ev": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.interface": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface._group_dataset": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datalad.interface._group_metadata": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "datalad.interface._group_misc": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "datalad.interface._group_plumbing": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "datalad.interface.add_archive_content": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.add_archive_content._KEY_OPT"
   ]
  },
  "type": "module"
 },
 "datalad.interface.add_archive_content.AddArchiveContent": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "EnsureNone",
    "EnsureStr",
    "Parameter",
    "datalad.interface.add_archive_content._KEY_OPT",
    "datalad.interface.add_archive_content._KEY_OPT_NOTE",
    "datalad.interface.base.build_doc",
    "dict",
    "int"
   ]
  },
  "type": "class"
 },
 "datalad.interface.add_archive_content.AddArchiveContent.__call__": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ActivityStats",
    "NotImplementedError",
    "RuntimeError",
    "StopIteration",
    "ValueError",
    "apply_replacement_rules",
    "assure_tuple_or_list",
    "datalad.customremotes.archives.ArchiveAnnexCustomRemote",
    "datalad.customremotes.base.init_datalad_remote",
    "datalad.interface.add_archive_content.lgr",
    "datalad.interface.add_archive_content.os",
    "datalad.interface.add_archive_content.re",
    "datalad.interface.add_archive_content.shlex",
    "datalad.interface.add_archive_content.tempfile",
    "file_basename",
    "get_repo_instance",
    "getpwd",
    "isinstance",
    "len",
    "locals",
    "md5sum",
    "os.path.basename",
    "os.path.commonprefix",
    "os.path.curdir",
    "os.path.dirname",
    "os.path.exists",
    "os.path.isabs",
    "os.path.islink",
    "os.path.join",
    "os.path.lexists",
    "os.path.normpath",
    "os.path.realpath",
    "os.path.relpath",
    "os.path.sep",
    "rmtree",
    "six.string_types",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.add_archive_content.ArchiveAnnexCustomRemote": {
  "data": {
   "shadows": "datalad.customremotes.archives.ArchiveAnnexCustomRemote"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content._KEY_OPT": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datalad.interface.add_archive_content._KEY_OPT_NOTE": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "datalad.interface.add_archive_content.__docformat__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datalad.interface.add_archive_content.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.commonprefix": {
  "data": {
   "shadows": "os.path.commonprefix"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.init_datalad_remote": {
  "data": {
   "shadows": "datalad.customremotes.base.init_datalad_remote"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.islink": {
  "data": {
   "shadows": "os.path.islink"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.lgr": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datalad.interface.add_archive_content.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.opsep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.annotate_paths.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.annotate_paths.AnnotatePaths": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.annotate_paths.known_props",
    "datalad.interface.annotate_paths.textwrap",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureBool",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict",
    "sorted"
   ]
  },
  "type": "class"
 },
 "datalad.interface.annotate_paths.AnnotatePaths.__call__": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.resolve_path",
    "datalad.interface.annotate_paths.get_modified_subpaths",
    "datalad.interface.annotate_paths.lgr",
    "datalad.interface.annotate_paths.rawpath2ap",
    "datalad.interface.annotate_paths.yield_recursive",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.utils.assure_list",
    "datalad.utils.get_dataset_root",
    "datalad.utils.path_startswith",
    "datalad.utils.with_pathsep",
    "dict",
    "isinstance",
    "iter",
    "itertools.chain",
    "os.curdir",
    "os.path.dirname",
    "os.path.isdir",
    "os.path.join",
    "os.path.lexists",
    "os.path.normpath",
    "os.path.pardir",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.annotate_paths.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.PRE_INIT_COMMIT_SHA": {
  "data": {
   "shadows": "datalad.consts.PRE_INIT_COMMIT_SHA"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.interface.annotate_paths._with_sep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.annotated2content_by_ds": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "collections.defaultdict",
    "datalad.utils.path_startswith",
    "list",
    "os.curdir",
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "datalad.interface.annotate_paths.annotated2ds_props": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "datalad.interface.annotate_paths.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.curdir": {
  "data": {
   "shadows": "os.curdir"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.dirsep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.get_modified_subpaths": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "datalad.consts.PRE_INIT_COMMIT_SHA",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.utils.path_is_subpath",
    "datalad.utils.with_pathsep",
    "dict",
    "isinstance",
    "len",
    "rawpath2ap"
   ]
  },
  "type": "function"
 },
 "datalad.interface.annotate_paths.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.known_props": {
  "data": {
   "lineno": 306
  },
  "type": "constant"
 },
 "datalad.interface.annotate_paths.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.lgr": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.interface.annotate_paths.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.path_is_subpath": {
  "data": {
   "shadows": "datalad.utils.path_is_subpath"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.path_startswith": {
  "data": {
   "shadows": "datalad.utils.path_startswith"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.rawpath2ap": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "datalad.distribution.dataset.resolve_path",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.interface.annotate_paths.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.resolve_path": {
  "data": {
   "shadows": "datalad.distribution.dataset.resolve_path"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.yield_recursive": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "datalad.interface.common_opts.recursion_limit",
    "datalad.utils.path_is_subpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.base.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.base.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.base.EnsureKeyChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureKeyChoice"
  },
  "type": "import"
 },
 "datalad.interface.base.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.interface.base.Interface": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.interface.base.Interface.call_from_parser": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "classmethod",
    "datalad.interface.base.inspect",
    "datalad.interface.base.is_api_arg",
    "datalad.interface.base.sys",
    "datalad.support.constraints.EnsureKeyChoice",
    "dir",
    "exc_str",
    "getattr",
    "hasattr",
    "inspect.getargspec",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.Interface.get_refds_path": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "classmethod",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.resolve_path",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.Interface.setup_parser": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "classmethod",
    "datalad.interface.base.alter_interface_docs_for_cmdline",
    "datalad.interface.base.is_api_arg",
    "enumerate",
    "help",
    "inspect.getargspec",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.interface.base.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.base._interfaces": {
  "data": {
   "shadows": "interface"
  },
  "type": "import"
 },
 "datalad.interface.base._with_sep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.interface.base.alter_interface_docs_for_api": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "datalad.interface.base.dedent_docstring",
    "datalad.interface.base.re",
    "datalad.interface.base.textwrap"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.alter_interface_docs_for_cmdline": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "datalad.interface.base.dedent_docstring",
    "datalad.interface.base.re",
    "datalad.interface.base.textwrap"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.build_doc": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "datalad.interface.base.alter_interface_docs_for_api",
    "datalad.interface.base.lgr",
    "datalad.interface.base.update_docstring_with_parameters",
    "datalad.interface.common_opts.eval_defaults",
    "datalad.interface.common_opts.eval_params",
    "dict",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.dedent_docstring": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "datalad.interface.base.textwrap",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.default_logchannels": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "datalad.interface.base.eval_defaults": {
  "data": {
   "shadows": "datalad.interface.common_opts.eval_defaults"
  },
  "type": "import"
 },
 "datalad.interface.base.eval_params": {
  "data": {
   "shadows": "datalad.interface.common_opts.eval_params"
  },
  "type": "import"
 },
 "datalad.interface.base.get_allargs_as_kwargs": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "inspect.getargspec",
    "len",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.get_api_name": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.get_cmdline_command_name": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.get_interface_groups": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.getargspec": {
  "data": {
   "shadows": "inspect.getargspec"
  },
  "type": "import"
 },
 "datalad.interface.base.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.interface.base.is_api_arg": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "datalad.interface.base.lgr": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datalad.interface.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.base.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.interface.base.resolve_path": {
  "data": {
   "shadows": "datalad.distribution.dataset.resolve_path"
  },
  "type": "import"
 },
 "datalad.interface.base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.interface.base.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "datalad.interface.base.update_docstring_with_parameters": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "ValueError",
    "datalad.interface.base.alter_interface_docs_for_api",
    "datalad.interface.base.is_api_arg",
    "enumerate",
    "inspect.getargspec",
    "len",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.interface.clean": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.interface.clean.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.interface.clean.Clean": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Parameter",
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureNone",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.clean.Clean.__call__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.clean.lgr",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "dict",
    "glob.glob",
    "int",
    "len",
    "os.path.join",
    "rmtree",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.clean.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.clean.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.clean.__docformat__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "datalad.interface.clean.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.clean.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.clean.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.interface.clean.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.interface.clean.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.interface.clean.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.interface.clean.lgr": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datalad.interface.clean.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.clean.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.interface.clean.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.interface.clean.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg": {
  "data": {
   "symbols_in_volume": [
    "appdirs.AppDirs",
    "bool",
    "datalad.interface.common_cfg.dirs",
    "datalad.support.constraints.EnsureBool",
    "datalad.support.constraints.EnsureInt",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "datalad.interface.common_cfg.AppDirs": {
  "data": {
   "shadows": "appdirs.AppDirs"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.EnsureInt": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureInt"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.common_cfg.definitions": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.interface.common_cfg.dirs": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.interface.common_cfg.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.common_opts": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.results.known_result_xfms.keys",
    "datalad.support.constraints.EnsureCallable",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureInt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict",
    "list"
   ]
  },
  "type": "module"
 },
 "datalad.interface.common_opts.EnsureCallable": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureCallable"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.EnsureInt": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureInt"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.allow_dirty": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_add_opts": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_copy_opts": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_get_opts": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_group_opt": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_groupwanted_opt": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_init_opts": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_opts": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_required_opt": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_wanted_opt": {
  "data": {
   "lineno": 173
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.as_common_datasrc": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.eval_defaults": {
  "data": {
   "lineno": 297
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.eval_params": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.git_clone_opts": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.git_opts": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.if_dirty_opt": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.inherit_opt": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.jobs_opt": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.known_result_xfms": {
  "data": {
   "shadows": "datalad.interface.results.known_result_xfms"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.location_description": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.missing_sibling_opt": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.nosave_opt": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.publish_by_default": {
  "data": {
   "lineno": 165
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.publish_depends": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.reckless_opt": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.recursion_flag": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.recursion_limit": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.save_message_opt": {
  "data": {
   "lineno": 116
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.shared_access_opt": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.super_datasets_flag": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.verbose": {
  "data": {
   "lineno": 139
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.with_plugin_opt": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "datalad.interface.crawl": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.interface.crawl.ActivityStats": {
  "data": {
   "shadows": "datalad.support.stats.ActivityStats"
  },
  "type": "import"
 },
 "datalad.interface.crawl.Crawl": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.crawl.Crawl.__call__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "Dataset",
    "Exception",
    "RuntimeError",
    "ValueError",
    "crawl",
    "datalad.crawler.pipeline.get_repo_pipeline_config_path",
    "datalad.crawler.pipeline.get_repo_pipeline_script_path",
    "datalad.crawler.pipeline.initiate_pipeline_config",
    "datalad.crawler.pipeline.load_pipeline_from_config",
    "datalad.crawler.pipeline.load_pipeline_from_module",
    "datalad.crawler.pipeline.run_pipeline",
    "datalad.interface.crawl.lgr",
    "datalad.interface.crawl.os",
    "datalad.support.stats.ActivityStats",
    "datalad.utils.chpwd",
    "datalad.utils.get_logfilename",
    "exc_str",
    "len",
    "os.path.exists",
    "staticmethod",
    "str",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.interface.crawl.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.crawl.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.crawl.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.crawl.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.interface.crawl.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.crawl.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.interface.crawl.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.interface.crawl.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.interface.crawl.get_repo_pipeline_config_path": {
  "data": {
   "shadows": "datalad.crawler.pipeline.get_repo_pipeline_config_path"
  },
  "type": "import"
 },
 "datalad.interface.crawl.get_repo_pipeline_script_path": {
  "data": {
   "shadows": "datalad.crawler.pipeline.get_repo_pipeline_script_path"
  },
  "type": "import"
 },
 "datalad.interface.crawl.initiate_pipeline_config": {
  "data": {
   "shadows": "datalad.crawler.pipeline.initiate_pipeline_config"
  },
  "type": "import"
 },
 "datalad.interface.crawl.lgr": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.interface.crawl.load_pipeline_from_config": {
  "data": {
   "shadows": "datalad.crawler.pipeline.load_pipeline_from_config"
  },
  "type": "import"
 },
 "datalad.interface.crawl.load_pipeline_from_module": {
  "data": {
   "shadows": "datalad.crawler.pipeline.load_pipeline_from_module"
  },
  "type": "import"
 },
 "datalad.interface.crawl.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.interface.crawl.run_pipeline": {
  "data": {
   "shadows": "datalad.crawler.pipeline.run_pipeline"
  },
  "type": "import"
 },
 "datalad.interface.crawl.utils": {
  "data": {
   "shadows": "datalad.utils"
  },
  "type": "import"
 },
 "datalad.interface.crawl_init": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.interface.crawl_init.CRAWLER_PIPELINE_SECTION": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datalad.interface.crawl_init.CrawlInit": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "EnsureNone",
    "EnsureStr",
    "Parameter",
    "datalad.interface.base.build_doc",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.crawl_init.CrawlInit.__call__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "TypeError",
    "ValueError",
    "collections.OrderedDict",
    "datalad.distribution.dataset.Dataset",
    "dict",
    "exc_str",
    "get_func_kwargs_doc",
    "initiate_pipeline_config",
    "isinstance",
    "list",
    "load_pipeline_from_template",
    "map",
    "os.path.curdir",
    "pipeline_func",
    "staticmethod",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.interface.crawl_init.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.crawl_init.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.interface.crawl_init.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.interface.crawl_init.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.crawl_init.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.interface.crawl_init.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.interface.crawl_init.lgr": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.interface.crawl_init.save": {
  "data": {
   "shadows": "datalad.api.save"
  },
  "type": "import"
 },
 "datalad.interface.diff": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.diff.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.diff.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.interface.diff.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.interface.diff.Diff": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.diff.Diff.__call__": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "datalad.consts.PRE_INIT_COMMIT_SHA",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.annotate_paths.annotated2content_by_ds",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.diff._get_untracked_content",
    "datalad.interface.diff._parse_git_diff",
    "datalad.interface.diff.lgr",
    "datalad.interface.utils.eval_results",
    "dict",
    "os.path.curdir",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.diff.Diff.custom_result_renderer": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "datalad.ui.ui.message",
    "len",
    "max",
    "os.path.relpath",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.diff.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.interface.diff.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.diff.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.diff.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.diff.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.interface.diff.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.interface.diff.PRE_INIT_COMMIT_SHA": {
  "data": {
   "shadows": "datalad.consts.PRE_INIT_COMMIT_SHA"
  },
  "type": "import"
 },
 "datalad.interface.diff.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.diff.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.interface.diff._get_untracked_content": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "any",
    "datalad.cmd.GitRunner",
    "datalad.support.exceptions.CommandError",
    "datalad.utils.path_startswith",
    "dict",
    "len",
    "os.path.isdir",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.diff._parse_git_diff": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "datalad.cmd.GitRunner",
    "datalad.interface.diff._translate_status",
    "datalad.interface.diff._translate_type",
    "datalad.support.exceptions.CommandError",
    "dict",
    "int",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.diff._translate_status": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datalad.interface.diff.state_map",
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.diff._translate_type": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datalad.interface.diff.stat"
   ]
  },
  "type": "function"
 },
 "datalad.interface.diff._with_sep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.interface.diff.annotated2content_by_ds": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.annotated2content_by_ds"
  },
  "type": "import"
 },
 "datalad.interface.diff.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.diff.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.interface.diff.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.diff.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.interface.diff.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.interface.diff.lgr": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "datalad.interface.diff.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.diff.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.interface.diff.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.diff.path_startswith": {
  "data": {
   "shadows": "datalad.utils.path_startswith"
  },
  "type": "import"
 },
 "datalad.interface.diff.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.interface.diff.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.interface.diff.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.diff.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "datalad.interface.diff.state_map": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datalad.interface.diff.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.interface.download_url": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.interface.download_url.DownloadURL": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "EnsureNone",
    "EnsureStr",
    "Parameter",
    "datalad.interface.base.build_doc",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.download_url.DownloadURL.__call__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "ValueError",
    "assure_list_from_str",
    "exc_str",
    "len",
    "os.path.curdir",
    "os.path.isdir",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.download_url.__docformat__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.interface.download_url.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.download_url.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.interface.download_url.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.interface.download_url.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.interface.download_url.lgr": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datalad.interface.ls": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.interface.ls.AbsentRepoModel": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.interface.ls.AbsentRepoModel.__init__": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "datalad.interface.ls.AbsentRepoModel.type": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.AnnexModel": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "datalad.interface.ls.GitModel"
   ]
  },
  "type": "class"
 },
 "datalad.interface.ls.AnnexModel.__init__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "datalad.interface.ls.AnnexModel",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.AnnexModel.annex_local_size": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.AnnexModel.annex_worktree_size": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.AnnexModel.info": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.interface.ls.FsModel": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "datalad.interface.ls.AnnexModel"
   ]
  },
  "type": "class"
 },
 "datalad.interface.ls.FsModel.__init__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "datalad.interface.ls.FsModel",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.FsModel.date": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "os.lstat",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.FsModel.path": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.FsModel.size": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "isinstance",
    "os.lstat",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.FsModel.symlink": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "os.path.exists",
    "os.path.islink",
    "os.path.realpath",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.FsModel.type_": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "os.path.exists",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.islink",
    "os.path.join",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.interface.ls.GitModel.__init__": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.branch": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.clean": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.count_objects": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.date": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.describe": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.git_local_size": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.path": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.type": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.interface.ls.HTTPError": {
  "data": {
   "shadows": "six.moves.urllib.error.HTTPError"
  },
  "type": "import"
 },
 "datalad.interface.ls.Key": {
  "data": {
   "shadows": "boto.s3.key.Key"
  },
  "type": "import"
 },
 "datalad.interface.ls.Ls": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "EnsureNone",
    "EnsureStr",
    "Parameter",
    "datalad.interface.base.build_doc",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.ls.Ls.__call__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Dataset",
    "KeyError",
    "_ls_dataset",
    "_ls_s3",
    "datalad.interface.ls.Ls",
    "datalad.interface.ls_webui._ls_json",
    "dict",
    "isinstance",
    "len",
    "list",
    "os.path.isdir",
    "os.path.lexists",
    "os.path.relpath",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.LsFormatter": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "datalad.interface.ls.string",
    "datalad.utils.is_interactive"
   ]
  },
  "type": "class"
 },
 "datalad.interface.ls.LsFormatter.__init__": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "datalad.interface.ls.LsFormatter",
    "datalad.interface.ls.lgr",
    "datalad.interface.ls.sys",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.LsFormatter.convert_field": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "chr",
    "datalad.interface.ls.LsFormatter",
    "datalad.interface.ls.humanize",
    "datalad.interface.ls.time",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.LsFormatter.format_field": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "datalad.interface.ls.LsFormatter",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.Prefix": {
  "data": {
   "shadows": "boto.s3.prefix.Prefix"
  },
  "type": "import"
 },
 "datalad.interface.ls.Providers": {
  "data": {
   "shadows": "datalad.downloaders.providers.Providers"
  },
  "type": "import"
 },
 "datalad.interface.ls.Request": {
  "data": {
   "shadows": "six.moves.urllib.request.Request"
  },
  "type": "import"
 },
 "datalad.interface.ls.S3ResponseError": {
  "data": {
   "shadows": "boto.exception.S3ResponseError"
  },
  "type": "import"
 },
 "datalad.interface.ls.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.interface.ls._ls_dataset": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "Dataset",
    "RuntimeError",
    "datalad.interface.ls.AbsentRepoModel",
    "datalad.interface.ls.AnnexModel",
    "datalad.interface.ls.GitModel",
    "datalad.interface.ls.LsFormatter",
    "datalad.interface.ls.format_ds_model",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.GitRepo",
    "datalad.utils.is_interactive",
    "isinstance",
    "len",
    "max",
    "os.path.abspath",
    "os.path.curdir",
    "os.path.isabs",
    "os.path.join",
    "os.path.relpath",
    "safe_print",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls._ls_json": {
  "data": {
   "shadows": "datalad.interface.ls_webui._ls_json"
  },
  "type": "import"
 },
 "datalad.interface.ls._ls_s3": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "SafeConfigParser",
    "ValueError",
    "acc",
    "boto.exception.S3ResponseError",
    "boto.s3.key.Key",
    "boto.s3.prefix.Prefix",
    "datalad.downloaders.providers.Providers.from_config_files",
    "datalad.interface.ls.boto",
    "datalad.interface.ls.lgr",
    "dict",
    "exc_str",
    "get_key_url",
    "getattr",
    "hashlib.md5",
    "imeth",
    "isinstance",
    "len",
    "list",
    "locals",
    "max",
    "repr",
    "six.moves.urllib.error.HTTPError",
    "six.moves.urllib.request.Request",
    "six.moves.urllib.request.urlopen",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.interface.ls.boto": {
  "data": {
   "shadows": "boto"
  },
  "type": "import"
 },
 "datalad.interface.ls.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.ls.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.interface.ls.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.interface.ls.format_ds_model": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "Exception",
    "exc_str",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.interface.ls.humanize": {
  "data": {
   "shadows": "humanize"
  },
  "type": "import"
 },
 "datalad.interface.ls.is_interactive": {
  "data": {
   "shadows": "datalad.utils.is_interactive"
  },
  "type": "import"
 },
 "datalad.interface.ls.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.interface.ls.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.interface.ls.isfile": {
  "data": {
   "shadows": "os.path.isfile"
  },
  "type": "import"
 },
 "datalad.interface.ls.islink": {
  "data": {
   "shadows": "os.path.islink"
  },
  "type": "import"
 },
 "datalad.interface.ls.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.interface.ls.lgr": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "datalad.interface.ls.lstat": {
  "data": {
   "shadows": "os.lstat"
  },
  "type": "import"
 },
 "datalad.interface.ls.md5": {
  "data": {
   "shadows": "hashlib.md5"
  },
  "type": "import"
 },
 "datalad.interface.ls.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.ls.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.interface.ls.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.ls.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "datalad.interface.ls.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.interface.ls.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.interface.ls.urlopen": {
  "data": {
   "shadows": "six.moves.urllib.request.urlopen"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.ls_webui.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.FsModel": {
  "data": {
   "shadows": "datalad.interface.ls.FsModel"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.GitModel": {
  "data": {
   "shadows": "datalad.interface.ls.GitModel"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.METADATA_DIR": {
  "data": {
   "shadows": "datalad.consts.METADATA_DIR"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.METADATA_FILENAME": {
  "data": {
   "shadows": "datalad.consts.METADATA_FILENAME"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.interface.ls_webui._ls_json": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.ls_webui.ds_traverse"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui._traverse_handle_subds": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.ls.lgr.info",
    "datalad.interface.ls.lgr.warning",
    "datalad.interface.ls_webui.ds_traverse",
    "datalad.interface.ls_webui.metadata_locator",
    "genericpath.exists",
    "handle_not_installed",
    "json",
    "json.load",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui._traverse_handle_subds.handle_not_installed": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "datalad.interface.ls.lgr.warning",
    "datalad.interface.ls_webui.fs_extract"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.ds_traverse": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "datalad.interface.ls.GitModel",
    "datalad.interface.ls.lgr.info",
    "datalad.interface.ls_webui.fs_extract",
    "datalad.interface.ls_webui.fs_render",
    "datalad.interface.ls_webui.fs_traverse",
    "datalad.interface.ls_webui.time",
    "genericpath.exists",
    "genericpath.getmtime",
    "json",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.exists": {
  "data": {
   "shadows": "genericpath.exists"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.fs_extract": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "all",
    "datalad.consts.METADATA_DIR",
    "datalad.consts.METADATA_FILENAME",
    "datalad.interface.ls.FsModel",
    "datalad.interface.ls_webui.humanize",
    "datalad.interface.ls_webui.leaf_name",
    "datalad.interface.ls_webui.time",
    "genericpath.exists",
    "json.load",
    "open",
    "os.path.join",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.fs_render": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "datalad.interface.ls_webui.metadata_locator",
    "datalad.utils.safe_print",
    "genericpath.exists",
    "json",
    "json.dump",
    "json.dumps",
    "open",
    "os.makedirs",
    "os.path.dirname",
    "os.remove"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.fs_traverse": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "_traverse_handle_subds",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.ls.lgr.info",
    "datalad.interface.ls_webui.fs_extract",
    "datalad.interface.ls_webui.fs_render",
    "datalad.interface.ls_webui.humanize",
    "datalad.interface.ls_webui.ignored",
    "datalad.interface.ls_webui.machinesize",
    "datalad.interface.ls_webui.metadata_locator",
    "datalad.utils.with_pathsep",
    "genericpath.exists",
    "genericpath.isdir",
    "json",
    "json.load",
    "len",
    "open",
    "os.listdir",
    "os.path.join",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.getmtime": {
  "data": {
   "shadows": "genericpath.getmtime"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.humanize": {
  "data": {
   "shadows": "humanize"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.ignored": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "datalad.interface.ls_webui.leaf_name",
    "genericpath.isdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.isdir": {
  "data": {
   "shadows": "genericpath.isdir"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.js": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.leaf_name": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "os.path.abspath",
    "os.path.basename",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.lgr": {
  "data": {
   "shadows": "datalad.interface.ls.lgr"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.machinesize": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "AttributeError",
    "float"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.metadata_locator": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "datalad.interface.ls_webui.hashlib",
    "os.path.isabs",
    "os.path.join",
    "os.path.realpath",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.safe_print": {
  "data": {
   "shadows": "datalad.utils.safe_print"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.split": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.with_pathsep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.interface.rerun": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.rerun.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.rerun.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.rerun.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.rerun.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.rerun.GitCommandError": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitCommandError"
  },
  "type": "import"
 },
 "datalad.interface.rerun.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.interface.rerun.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.rerun.Rerun": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.rerun.Rerun.__call__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "collections.namedtuple",
    "commit_exists",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.dochelpers.exc_str",
    "datalad.interface.rerun.lgr",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.run.run_command",
    "datalad.interface.utils.eval_results",
    "datalad.support.gitrepo.GitCommandError",
    "datalad.tests.utils.ok_clean_git",
    "dict",
    "itertools.dropwhile",
    "list",
    "map",
    "new_or_modified",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun.Rerun.__call__.revision_with_info": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "Revision",
    "get_commit_runinfo"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.interface.rerun.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.rerun.commit_exists": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "datalad.interface.rerun.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.rerun.dropwhile": {
  "data": {
   "shadows": "itertools.dropwhile"
  },
  "type": "import"
 },
 "datalad.interface.rerun.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.interface.rerun.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.interface.rerun.get_commit_runinfo": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "datalad.dochelpers.exc_str",
    "datalad.interface.rerun.json",
    "datalad.interface.rerun.re"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.interface.rerun.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.interface.rerun.lgr": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datalad.interface.rerun.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.rerun.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "datalad.interface.rerun.new_or_modified": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "commit_exists"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.interface.rerun.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.interface.rerun.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.interface.rerun.run_command": {
  "data": {
   "shadows": "datalad.interface.run.run_command"
  },
  "type": "import"
 },
 "datalad.interface.results": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.results.YieldDatasets",
    "datalad.interface.results.YieldField",
    "datalad.interface.results.YieldRelativePaths",
    "datalad.interface.results.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.results.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.results.ResultXFM": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.interface.results.ResultXFM.__call__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.YieldDatasets": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "datalad.interface.results.ResultXFM"
   ]
  },
  "type": "class"
 },
 "datalad.interface.results.YieldDatasets.__call__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.results.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.YieldDatasets.__init__": {
  "data": {
   "lineno": 131
  },
  "type": "function"
 },
 "datalad.interface.results.YieldField": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "datalad.interface.results.ResultXFM"
   ]
  },
  "type": "class"
 },
 "datalad.interface.results.YieldField.__call__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "datalad.interface.results.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.YieldField.__init__": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "datalad.interface.results.YieldRelativePaths": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "datalad.interface.results.ResultXFM"
   ]
  },
  "type": "class"
 },
 "datalad.interface.results.YieldRelativePaths.__call__": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.results._with_sep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.interface.results.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.interface.results.annexjson2result": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "datalad.interface.results.get_status_dict",
    "datalad.interface.results.lgr",
    "datalad.interface.results.translate_annex_notes",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.interface.results.count_results": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "all",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.get_status_dict": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.is_ok_dataset": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "datalad.interface.results.is_result_matching_pathsource_argument": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "any",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.results.YieldRelativePaths",
    "datalad.utils.assure_list",
    "isinstance",
    "os.path.abspath",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.interface.results.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.interface.results.known_result_xfms": {
  "data": {
   "lineno": 176
  },
  "type": "constant"
 },
 "datalad.interface.results.lgr": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datalad.interface.results.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.results.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.interface.results.only_matching_paths": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "datalad.utils.assure_list"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.results.path_is_subpath": {
  "data": {
   "shadows": "datalad.utils.path_is_subpath"
  },
  "type": "import"
 },
 "datalad.interface.results.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.results.results_from_annex_noinfo": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "any",
    "datalad.interface.results.get_status_dict",
    "datalad.utils.path_is_subpath",
    "dict",
    "os.path.isabs",
    "os.path.isdir",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.results_from_paths": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "datalad.interface.results.get_status_dict",
    "datalad.utils.assure_list",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.success_status_map": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.interface.results.translate_annex_notes": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "datalad.interface.run": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.run.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.run.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.interface.run.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.run.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.run.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.interface.run.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.run.REMAINDER": {
  "data": {
   "shadows": "argparse.REMAINDER"
  },
  "type": "import"
 },
 "datalad.interface.run.Rerun": {
  "data": {
   "shadows": "datalad.interface.rerun.Rerun"
  },
  "type": "import"
 },
 "datalad.interface.run.Run": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "argparse.REMAINDER",
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.save_message_opt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.run.Run.__call__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "datalad.distribution.dataset.datasetmethod",
    "datalad.interface.rerun.Rerun.__call__",
    "datalad.interface.run.lgr",
    "datalad.interface.utils.eval_results",
    "run_command",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.run.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.interface.run.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.interface.run.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.run.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.interface.run.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.run.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.interface.run.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.interface.run.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.interface.run.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.interface.run.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.interface.run.lgr": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "datalad.interface.run.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.run.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.interface.run.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.interface.run.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.run.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.run.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.interface.run.run_command": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.cmd.Runner",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.run.json",
    "datalad.interface.run.lgr",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.ok_clean_git",
    "datalad.utils.get_dataset_root",
    "datalad.utils.getpwd",
    "isinstance",
    "len",
    "list",
    "os.path.curdir",
    "os.path.join",
    "os.path.normpath",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.run.save_message_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.save_message_opt"
  },
  "type": "import"
 },
 "datalad.interface.save": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.save.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.save.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.interface.save.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.interface.save.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.interface.save.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.save.DeprecatedError": {
  "data": {
   "shadows": "datalad.support.exceptions.DeprecatedError"
  },
  "type": "import"
 },
 "datalad.interface.save.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.save.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.save.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.save.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.save.Save": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.common_opts.save_message_opt",
    "datalad.interface.common_opts.super_datasets_flag",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.save.Save.__call__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.annotate_paths.annotated2content_by_ds",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.save.lgr",
    "datalad.interface.save.save_dataset",
    "datalad.interface.utils.discover_dataset_trace_to_targets",
    "datalad.interface.utils.eval_results",
    "datalad.interface.utils.get_tree_roots",
    "datalad.support.exceptions.CommandError",
    "datalad.support.exceptions.DeprecatedError",
    "datalad.utils.unique",
    "dict",
    "len",
    "list",
    "os.curdir",
    "os.path.abspath",
    "os.path.relpath",
    "set",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.save.Save.custom_result_renderer": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.ui.ui.message",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.save.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.save.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.interface.save.annotated2content_by_ds": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.annotated2content_by_ds"
  },
  "type": "import"
 },
 "datalad.interface.save.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.save.curdir": {
  "data": {
   "shadows": "os.curdir"
  },
  "type": "import"
 },
 "datalad.interface.save.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.save.discover_dataset_trace_to_targets": {
  "data": {
   "shadows": "datalad.interface.utils.discover_dataset_trace_to_targets"
  },
  "type": "import"
 },
 "datalad.interface.save.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.interface.save.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.interface.save.get_tree_roots": {
  "data": {
   "shadows": "datalad.interface.utils.get_tree_roots"
  },
  "type": "import"
 },
 "datalad.interface.save.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.interface.save.lgr": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "datalad.interface.save.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.save.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.interface.save.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.interface.save.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.save.save_dataset": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "isinstance",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.interface.save.save_message_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.save_message_opt"
  },
  "type": "import"
 },
 "datalad.interface.save.super_datasets_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.super_datasets_flag"
  },
  "type": "import"
 },
 "datalad.interface.save.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.interface.save.unique": {
  "data": {
   "shadows": "datalad.utils.unique"
  },
  "type": "import"
 },
 "datalad.interface.test": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.test.Test": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Parameter",
    "datalad.interface.base.build_doc",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.test.Test.__call__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "datalad.interface.test.datalad",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.test.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.interface.test.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.test.datalad": {
  "data": {
   "shadows": "datalad"
  },
  "type": "import"
 },
 "datalad.interface.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_add_archive_content": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "datalad.interface.tests.test_add_archive_content.ARCHIVES_SPECIAL_REMOTE": {
  "data": {
   "shadows": "datalad.consts.ARCHIVES_SPECIAL_REMOTE"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.DATALAD_SPECIAL_REMOTES_UUIDS": {
  "data": {
   "shadows": "datalad.consts.DATALAD_SPECIAL_REMOTES_UUIDS"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions": {
  "data": {
   "lineno": 366
  },
  "type": "class"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.assert_no_trash_left_behind": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "assert_equal",
    "find_files",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.setup": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "AnnexRepo",
    "getpwd",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.teardown": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "assert_equal",
    "getpwd",
    "rmtemp"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.test_add_archive_leading_dir": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "add_archive_content",
    "datalad.interface.tests.test_add_archive_content.os",
    "ok_file_under_git",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.test_add_delete": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "add_archive_content",
    "assert_false",
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.test_add_delete_after_and_drop": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "Exception",
    "add_archive_content",
    "assert_equal",
    "assert_raises",
    "find_files",
    "len",
    "list",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.test_add_delete_after_and_drop_subdir": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "add_archive_content",
    "assert_equal",
    "assert_true",
    "chpwd",
    "datalad.interface.tests.test_add_archive_content.os",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.ok_clean_git",
    "len",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.test_override_existing_under_git": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "add_archive_content",
    "datalad.tests.utils.create_tree",
    "ok_file_under_git"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_add_archive_content.assert_result_values_cond": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_values_cond"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.lgr": {
  "data": {
   "shadows": "datalad.log.lgr"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.test_add_archive_content": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "AnnexRepo",
    "RuntimeError",
    "ValueError",
    "add_archive_content",
    "all",
    "assert_cwd_unchanged",
    "assert_equal",
    "assert_false",
    "assert_in",
    "assert_raises",
    "chpwd",
    "clean",
    "d1_basic_checks",
    "d2_basic_checks",
    "datalad.interface.tests.test_add_archive_content.tree1args",
    "datalad.tests.utils.assert_result_values_cond",
    "datalad.tests.utils.known_failure_v6",
    "eq_",
    "getpwd",
    "glob.glob",
    "map",
    "ok_archives_caches",
    "ok_file_under_git",
    "os.path.basename",
    "os.path.exists",
    "os.path.join",
    "os.path.pardir",
    "os.unlink",
    "range",
    "serve_path_via_http",
    "sorted",
    "str",
    "swallow_outputs",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.test_add_archive_content.d1_basic_checks": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ok_",
    "ok_archives_caches",
    "ok_file_under_git",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.test_add_archive_content.d2_basic_checks": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ok_",
    "ok_archives_caches",
    "ok_file_under_git",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.test_add_archive_content_strip_leading": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "AnnexRepo",
    "add_archive_content",
    "assert_cwd_unchanged",
    "chpwd",
    "datalad.interface.tests.test_add_archive_content.tree1args",
    "getpwd",
    "ok_",
    "ok_archives_caches",
    "ok_file_under_git",
    "os.path.exists",
    "os.path.join",
    "serve_path_via_http",
    "swallow_outputs",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.test_add_archive_dirs": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AnnexRepo",
    "add_archive_content",
    "assert_cwd_unchanged",
    "assert_false",
    "chpwd",
    "datalad.consts.ARCHIVES_SPECIAL_REMOTE",
    "datalad.consts.DATALAD_SPECIAL_REMOTES_UUIDS",
    "datalad.interface.tests.test_add_archive_content.treeargs",
    "datalad.support.external_versions.external_versions",
    "eq_",
    "find_files",
    "os.path.exists",
    "os.path.join",
    "serve_path_via_http",
    "set",
    "sorted",
    "swallow_outputs",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.test_add_archive_use_archive_dir": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "AnnexRepo",
    "RuntimeError",
    "add_archive_content",
    "assert_cwd_unchanged",
    "assert_raises",
    "assert_re_in",
    "chpwd",
    "datalad.interface.tests.test_add_archive_content.tree4uargs",
    "ok_",
    "ok_archives_caches",
    "ok_file_under_git",
    "os.path.exists",
    "os.path.join",
    "str",
    "swallow_outputs",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.tree1args": {
  "data": {
   "lineno": 124
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_add_archive_content.tree4uargs": {
  "data": {
   "lineno": 153
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_add_archive_content.treeargs": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_add_archive_content.unlink": {
  "data": {
   "shadows": "os.unlink"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_annotate_paths.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.__docformat__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_annotate_paths.annotate_paths": {
  "data": {
   "shadows": "datalad.api.annotate_paths"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.demo_hierarchy": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_annotate_paths.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.get_modified_subpaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.get_modified_subpaths"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.make_demo_hierarchy_datasets": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "dict",
    "isinstance",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_annotate_paths.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.test_annotate_paths": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "copy.deepcopy",
    "datalad.api.annotate_paths",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.tests.test_annotate_paths.demo_hierarchy",
    "datalad.interface.tests.test_annotate_paths.make_demo_hierarchy_datasets",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "len",
    "os.path.basename",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_annotate_paths.test_get_modified_subpaths": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.annotate_paths.get_modified_subpaths",
    "datalad.interface.tests.test_annotate_paths.demo_hierarchy",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tree",
    "dict",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_annotate_paths.test_invalid_call": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.annotate_paths",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_annotate_paths.test_recurseinto": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.tests.test_annotate_paths.demo_hierarchy",
    "datalad.interface.tests.test_annotate_paths.make_demo_hierarchy_datasets",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_annotate_paths.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_clean": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_clean.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_clean.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_clean.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_clean.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_clean.test_clean": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "AnnexRepo",
    "Dataset",
    "assert_equal",
    "assert_status",
    "chpwd",
    "clean",
    "open",
    "os.makedirs",
    "os.path.join",
    "swallow_outputs",
    "tuple",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_crawl": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_crawl.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_crawl.call": {
  "data": {
   "shadows": "mock.call"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl.test_crawl_api_chdir": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ActivityStats",
    "assert_cwd_unchanged",
    "assert_equal",
    "crawl",
    "mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_crawl.test_crawl_api_recursive": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ActivityStats",
    "Exception",
    "_path_",
    "assert_cwd_unchanged",
    "assert_equal",
    "chpwd",
    "crawl",
    "datalad.support.external_versions.external_versions",
    "find_files",
    "getpwd",
    "list",
    "mock.call",
    "mock.patch",
    "nose.SkipTest",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_crawl_init": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_crawl_init.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl_init.CRAWLER_META_CONFIG_PATH": {
  "data": {
   "shadows": "datalad.consts.CRAWLER_META_CONFIG_PATH"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl_init.CRAWLER_META_DIR": {
  "data": {
   "shadows": "datalad.consts.CRAWLER_META_DIR"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl_init.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl_init.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl_init._test_crawl_init": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "crawl_init",
    "datalad.consts.CRAWLER_META_CONFIG_PATH",
    "datalad.consts.CRAWLER_META_DIR",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "isinstance",
    "nose.tools.eq_",
    "open",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_crawl_init._test_crawl_init_error": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "crawl_init",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.with_tempfile",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_crawl_init._test_crawl_init_error_patch": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "crawl_init",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.with_tempfile",
    "mock.patch",
    "nose.tools.assert_in",
    "nose.tools.assert_raises",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_crawl_init.assert_in": {
  "data": {
   "shadows": "nose.tools.assert_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl_init.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl_init.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl_init.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl_init.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl_init.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl_init.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl_init.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl_init.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_crawl_init.test_crawl_init": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "datalad.interface.tests.test_crawl_init._test_crawl_init",
    "datalad.tests.utils.known_failure_v6"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_crawl_init.test_crawl_init_error": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "datalad.interface.tests.test_crawl_init._test_crawl_init_error"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_crawl_init.test_crawl_init_error_patch": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "datalad.interface.tests.test_crawl_init._test_crawl_init_error_patch"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_crawl_init.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_diff.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.PRE_INIT_COMMIT_SHA": {
  "data": {
   "shadows": "datalad.consts.PRE_INIT_COMMIT_SHA"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_diff.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.diff": {
  "data": {
   "shadows": "datalad.api.diff"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.test_diff": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "datalad.api.diff",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_diff.test_diff_recursive": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_diff.test_magic_number": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "datalad.cmd.GitRunner",
    "datalad.consts.PRE_INIT_COMMIT_SHA",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.skip_if_on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_diff.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_docs.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_docs.alter_interface_docs_for_api": {
  "data": {
   "shadows": "datalad.interface.base.alter_interface_docs_for_api"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.alter_interface_docs_for_cmdline": {
  "data": {
   "shadows": "datalad.interface.base.alter_interface_docs_for_cmdline"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.dedent_docstring": {
  "data": {
   "shadows": "datalad.interface.base.dedent_docstring"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.demo_argdoc": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_docs.demo_doc": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_docs.demo_paramdoc": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_docs.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.test_alter_interface_docs_for_api": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "datalad.interface.base.alter_interface_docs_for_api",
    "datalad.interface.tests.test_docs.demo_doc",
    "datalad.interface.tests.test_docs.demo_paramdoc",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_docs.test_alter_interface_docs_for_cmdline": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "datalad.interface.base.alter_interface_docs_for_cmdline",
    "datalad.interface.tests.test_docs.demo_argdoc",
    "datalad.interface.tests.test_docs.demo_doc",
    "datalad.interface.tests.test_docs.demo_paramdoc",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_docs.test_dedent": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "datalad.interface.base.dedent_docstring",
    "datalad.tests.utils.assert_false"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_download_url": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_download_url.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_download_url.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_download_url.test_download_url_exceptions": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "assert_raises",
    "download_url",
    "eq_",
    "str",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_download_url.test_download_url_return": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "RuntimeError",
    "assert_raises",
    "download_url",
    "eq_",
    "os.path.join",
    "swallow_outputs",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.tests.test_ls.test_ls_s3"
   ]
  },
  "type": "module"
 },
 "datalad.interface.tests.test_ls.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_ls.get_test_providers": {
  "data": {
   "shadows": "datalad.downloaders.tests.utils.get_test_providers"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.mkdir": {
  "data": {
   "shadows": "os.mkdir"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.test_ls_formatter": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "LsFormatter",
    "assert_equal",
    "assert_in",
    "datalad.interface.tests.test_ls.sys",
    "fake_stdout",
    "mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls.test_ls_formatter.fake_stdout": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.interface.tests.test_ls.test_ls_formatter.fake_stdout.isatty": {
  "data": {
   "lineno": 121
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls.test_ls_formatter.fake_stdout.write": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls.test_ls_noarg": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "assert_equal",
    "chpwd",
    "datalad.support.annexrepo.AnnexRepo",
    "ls",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls.test_ls_repos": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "_test",
    "chpwd",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "glob.glob",
    "os.mkdir",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls.test_ls_repos._test": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "assert_equal",
    "assert_in",
    "len",
    "ls",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls.test_ls_s3": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "assert_equal",
    "assert_in",
    "collections.Counter",
    "datalad.downloaders.tests.utils.get_test_providers",
    "len",
    "ls",
    "map",
    "swallow_outputs",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls.test_ls_uninstalled": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "assert_in",
    "datalad.distribution.dataset.Dataset",
    "ls",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_ls_webui.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui._ls_json": {
  "data": {
   "shadows": "datalad.interface.ls_webui._ls_json"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.assert_in": {
  "data": {
   "shadows": "nose.tools.assert_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.assert_not_in": {
  "data": {
   "shadows": "nose.tools.assert_not_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.exists": {
  "data": {
   "shadows": "genericpath.exists"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.fs_traverse": {
  "data": {
   "shadows": "datalad.interface.ls_webui.fs_traverse"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.ignored": {
  "data": {
   "shadows": "datalad.interface.ls_webui.ignored"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.js": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.machinesize": {
  "data": {
   "shadows": "datalad.interface.ls_webui.machinesize"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.swallow_outputs": {
  "data": {
   "shadows": "datalad.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.test_fs_traverse": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "datalad.interface.ls_webui.fs_traverse",
    "datalad.interface.tests.test_ls_webui.logging",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.with_tree",
    "datalad.utils.swallow_logs",
    "datalad.utils.swallow_outputs",
    "dict",
    "isinstance",
    "nose.tools.assert_equal",
    "nose.tools.assert_in",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui.test_ignored": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "datalad.interface.ls_webui.ignored",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.with_tree",
    "nose.tools.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui.test_ls_json": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.ls_webui._ls_json",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.with_tree",
    "datalad.utils._path_",
    "genericpath.exists",
    "get_meta",
    "get_metapath",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_in",
    "nose.tools.assert_not_in",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui.test_ls_json.get_meta": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "get_metapath",
    "json.load",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui.test_ls_json.get_metahash": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "datalad.interface.tests.test_ls_webui.hashlib",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui.test_ls_json.get_metapath": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "datalad.utils._path_",
    "get_metahash"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui.test_machinesize": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "datalad.interface.ls_webui.machinesize",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_run.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.GitCommandError": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitCommandError"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.NoDatasetArgumentFound": {
  "data": {
   "shadows": "datalad.support.exceptions.NoDatasetArgumentFound"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_run.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.get_commit_runinfo": {
  "data": {
   "shadows": "datalad.interface.rerun.get_commit_runinfo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.ignore_nose_capturing_stdout": {
  "data": {
   "shadows": "datalad.tests.utils.ignore_nose_capturing_stdout"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.mkdir": {
  "data": {
   "shadows": "os.mkdir"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.neq_": {
  "data": {
   "shadows": "datalad.tests.utils.neq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.new_or_modified": {
  "data": {
   "shadows": "datalad.interface.rerun.new_or_modified"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.ok_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_under_git"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.run": {
  "data": {
   "shadows": "datalad.api.run"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.test_basics": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.tests.test_run.logging",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.test_invalid_call": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "datalad.api.run",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.NoDatasetArgumentFound",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.test_new_or_modified": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "apfiles",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.rerun.new_or_modified",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tree",
    "list",
    "open",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.test_new_or_modified.apfiles": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.test_rerun": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.test_rerun_ambiguous_revision_file": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.test_rerun_branch": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.test_rerun_chain": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.rerun.get_commit_runinfo",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.test_rerun_cherry_pick": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "any",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.test_rerun_commit_message_check": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.rerun.get_commit_runinfo",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.test_rerun_just_one_commit": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.test_rerun_old_flag_compatibility": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.tests.test_run.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.test_rerun_onto": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.test_rerun_outofdate_tree": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.test_rerun_subdir": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.api.run",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.rerun.get_commit_runinfo",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.mkdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_save.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.DeprecatedError": {
  "data": {
   "shadows": "datalad.support.exceptions.DeprecatedError"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_save.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.assert_result_values_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_values_equal"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.is_ok_dataset": {
  "data": {
   "shadows": "datalad.interface.results.is_ok_dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.save": {
  "data": {
   "shadows": "datalad.api.save"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.test_recursive_save": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "datalad.api.save",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.results.is_ok_dataset",
    "datalad.interface.tests.test_save.os",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_result_values_equal",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "next",
    "open",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_save.test_renamed_file": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "datalad.interface.tests.test_save.test_renamed_file.check_renamed_file": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_save.test_save": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "datalad.api.save",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.DeprecatedError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "isinstance",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_save.test_subdataset_save": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "datalad.api.save",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_save.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_save.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_unlock.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_unlock.assert_cwd_unchanged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_cwd_unchanged"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.geteuid": {
  "data": {
   "shadows": "os.geteuid"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.getpwd": {
  "data": {
   "shadows": "datalad.tests.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.skip_if": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.test_unlock": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "IOError",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.on_windows",
    "datalad.tests.utils.skip_if",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.geteuid",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_unlock.test_unlock_raises": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.unlock",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.getpwd",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_unlock.unlock": {
  "data": {
   "shadows": "datalad.api.unlock"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.tests.test_utils.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.tests.test_utils.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.EnsureKeyChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureKeyChoice"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.TestUtils": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.tests.test_utils.TestUtils.__call__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "datalad.distribution.dataset.datasetmethod",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.__docformat__": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_utils._check_all_clean": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "datalad.interface.tests.test_utils._dirty_modes",
    "handle_dirty_dataset",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils._check_auto_save": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.interface.tests.test_utils._check_all_clean",
    "datalad.tests.utils.assert_not_equal",
    "handle_dirty_dataset",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils._dirty_modes": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_utils.assert_dict_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_dict_equal"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.demo_hierarchy": {
  "data": {
   "lineno": 100
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_utils.getargspec": {
  "data": {
   "shadows": "inspect.getargspec"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.lgr": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.make_demo_hierarchy_datasets": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "dict",
    "isinstance",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.test_dirty": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.tests.test_utils._check_all_clean",
    "datalad.interface.tests.test_utils._check_auto_save",
    "datalad.interface.tests.test_utils._dirty_modes",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "handle_dirty_dataset",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_eval_results_plus_build_doc": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.Dataset.fake_command",
    "datalad.distribution.dataset.Dataset.fake_command.__doc__",
    "datalad.interface.tests.test_utils.TestUtils",
    "datalad.interface.tests.test_utils.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.utils.swallow_logs",
    "inspect.getargspec",
    "len",
    "list",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_result_filter": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "datalad.interface.tests.test_utils.TestUtils",
    "datalad.support.constraints.EnsureKeyChoice",
    "datalad.tests.utils.assert_dict_equal",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_result_filter.greatfilter": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_result_filter.sadfilter": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_save_hierarchy": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.tests.test_utils.demo_hierarchy",
    "datalad.interface.tests.test_utils.make_demo_hierarchy_datasets",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.interface.unlock": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.unlock.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.unlock.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.interface.unlock.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.interface.unlock.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.unlock.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.unlock.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.unlock.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.unlock.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.interface.unlock.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.unlock.Unlock": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.unlock.Unlock.__call__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.annotate_paths.annotated2content_by_ds",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.unlock.lgr",
    "datalad.interface.utils.eval_results",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "dict",
    "isinstance",
    "os.path.isdir",
    "sorted",
    "staticmethod",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.interface.unlock.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.unlock.annotated2content_by_ds": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.annotated2content_by_ds"
  },
  "type": "import"
 },
 "datalad.interface.unlock.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.unlock.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.unlock.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.interface.unlock.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.interface.unlock.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.interface.unlock.lgr": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datalad.interface.unlock.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.unlock.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.interface.unlock.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.interface.utils": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.utils.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.utils.Constraint": {
  "data": {
   "shadows": "datalad.support.constraints.Constraint"
  },
  "type": "import"
 },
 "datalad.interface.utils.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.interface.utils.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.interface.utils.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.interface.utils.PY2": {
  "data": {
   "shadows": "six.PY2"
  },
  "type": "import"
 },
 "datalad.interface.utils.Plugin": {
  "data": {
   "shadows": "datalad.plugin.Plugin"
  },
  "type": "import"
 },
 "datalad.interface.utils.Save": {
  "data": {
   "shadows": "datalad.interface.save.Save"
  },
  "type": "import"
 },
 "datalad.interface.utils.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.utils._process_results": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "datalad.dochelpers.exc_str",
    "datalad.interface.base.default_logchannels",
    "datalad.interface.utils.json",
    "datalad.interface.utils.lgr",
    "datalad.interface.utils.logging",
    "datalad.support.ansi_colors.BOLD",
    "datalad.support.ansi_colors.MAGENTA",
    "datalad.support.ansi_colors.color_status",
    "datalad.support.ansi_colors.color_word",
    "datalad.ui.ui.message",
    "getattr",
    "hasattr",
    "isinstance",
    "os.path.relpath",
    "res_lgr",
    "result_filter",
    "result_renderer",
    "result_xfm",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils._with_sep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.interface.utils.ac": {
  "data": {
   "shadows": "datalad.support.ansi_colors"
  },
  "type": "import"
 },
 "datalad.interface.utils.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "datalad.interface.utils.cls2cmdlinename": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "datalad.interface.utils.re"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.curdir": {
  "data": {
   "shadows": "os.curdir"
  },
  "type": "import"
 },
 "datalad.interface.utils.default_logchannels": {
  "data": {
   "shadows": "datalad.interface.base.default_logchannels"
  },
  "type": "import"
 },
 "datalad.interface.utils.discover_dataset_trace_to_targets": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "all",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.utils.path_startswith",
    "enumerate",
    "list",
    "os.listdir",
    "os.path.isdir",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.dlcfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.interface.utils.eval_defaults": {
  "data": {
   "shadows": "datalad.interface.common_opts.eval_defaults"
  },
  "type": "import"
 },
 "datalad.interface.utils.eval_params": {
  "data": {
   "shadows": "datalad.interface.common_opts.eval_params"
  },
  "type": "import"
 },
 "datalad.interface.utils.eval_results": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "eval_func"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.eval_results.eval_func": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "_get_plugin_specs",
    "datalad.cfg.get",
    "datalad.interface.base.Interface",
    "datalad.interface.base.get_allargs_as_kwargs",
    "datalad.interface.common_opts.eval_defaults",
    "datalad.interface.common_opts.eval_params",
    "datalad.interface.utils.cls2cmdlinename",
    "datalad.interface.utils.inspect",
    "datalad.interface.utils.lgr",
    "datalad.interface.utils.sys",
    "datalad.interface.utils.wrapt",
    "datalad.support.constraints.Constraint",
    "generator_func",
    "getattr",
    "isinstance",
    "issubclass",
    "len",
    "return_func",
    "six.PY2",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.eval_results.eval_func._get_plugin_specs": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "datalad.cfg.get",
    "datalad.interface.utils.shlex",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.eval_results.eval_func._result_filter": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "result_filter"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.eval_results.eval_func.generator_func": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "_process_results",
    "datalad.interface.utils.lgr",
    "datalad.plugin.Plugin.__call__",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.ui.ui.message",
    "result_filter",
    "sorted",
    "sum",
    "wrapped"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.eval_results.eval_func.return_func": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "datalad.interface.utils.inspect",
    "datalad.interface.utils.wrapt",
    "hasattr",
    "len",
    "list",
    "wrapped_"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.interface.utils.get_allargs_as_kwargs": {
  "data": {
   "shadows": "datalad.interface.base.get_allargs_as_kwargs"
  },
  "type": "import"
 },
 "datalad.interface.utils.get_tree_roots": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "any",
    "datalad.utils.with_pathsep",
    "os.path.sep",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.interface.utils.handle_dirty_dataset": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "datalad.interface.save.Save.__call__"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.interface.utils.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.interface.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.interface.utils.lgr": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "datalad.interface.utils.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.interface.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.utils.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.utils.pardir": {
  "data": {
   "shadows": "os.pardir"
  },
  "type": "import"
 },
 "datalad.interface.utils.path_is_subpath": {
  "data": {
   "shadows": "datalad.utils.path_is_subpath"
  },
  "type": "import"
 },
 "datalad.interface.utils.path_is_under": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "datalad.utils.getpwd",
    "dict",
    "isinstance",
    "itertools.chain",
    "os.curdir",
    "os.pardir",
    "os.path.relpath",
    "os.path.split",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.path_startswith": {
  "data": {
   "shadows": "datalad.utils.path_startswith"
  },
  "type": "import"
 },
 "datalad.interface.utils.psplit": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "datalad.interface.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.interface.utils.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.utils.sep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "datalad.interface.utils.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "datalad.interface.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.interface.utils.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.interface.utils.wrapt": {
  "data": {
   "shadows": "wrapt"
  },
  "type": "import"
 },
 "datalad.log": {
  "data": {
   "symbols_in_volume": [
    "datalad.log.LoggerHelper"
   ]
  },
  "type": "module"
 },
 "datalad.log.ColorFormatter": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "datalad.log.logging"
   ]
  },
  "type": "class"
 },
 "datalad.log.ColorFormatter.__init__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "datalad.log.TraceBack",
    "datalad.log.logging",
    "datalad.log.os",
    "datalad.log.platform",
    "int",
    "is_interactive"
   ]
  },
  "type": "function"
 },
 "datalad.log.ColorFormatter._get_format": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "datalad.cfg.get",
    "datalad.config.anything2bool"
   ]
  },
  "type": "function"
 },
 "datalad.log.ColorFormatter.format": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "datalad.log.logging"
   ]
  },
  "type": "function"
 },
 "datalad.log.LoggerHelper": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.log.LoggerHelper.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "datalad.log.logging"
   ]
  },
  "type": "function"
 },
 "datalad.log.LoggerHelper._get_config": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "datalad.cfg.get"
   ]
  },
  "type": "function"
 },
 "datalad.log.LoggerHelper.get_initialized_logger": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "LogFilter",
    "datalad.log.ColorFormatter",
    "datalad.log.logging",
    "datalad.log.sys",
    "getattr",
    "is_interactive"
   ]
  },
  "type": "function"
 },
 "datalad.log.LoggerHelper.get_initialized_logger.LogFilter": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.log.LoggerHelper.get_initialized_logger.LogFilter.__init__": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "datalad.log.re",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.log.LoggerHelper.get_initialized_logger.LogFilter.filter": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "datalad.log.LoggerHelper.set_level": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "datalad.log.logging",
    "getattr",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.log.TraceBack": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.log.TraceBack.__call__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "datalad.log.mbasename",
    "datalad.log.os",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.log.TraceBack.__init__": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "datalad.log.re",
    "datalad.log.traceback"
   ]
  },
  "type": "function"
 },
 "datalad.log.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.log.anything2bool": {
  "data": {
   "shadows": "datalad.config.anything2bool"
  },
  "type": "import"
 },
 "datalad.log.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.log.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.log.colors": {
  "data": {
   "shadows": "ansi_colors"
  },
  "type": "import"
 },
 "datalad.log.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.log.lgr": {
  "data": {
   "lineno": 274
  },
  "type": "constant"
 },
 "datalad.log.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.log.logging.handlers": {
  "data": {
   "shadows": "logging.handlers"
  },
  "type": "import"
 },
 "datalad.log.mbasename": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "os.path.basename",
    "os.path.dirname",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.log.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.log.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "datalad.log.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.log.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.log.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "datalad.make_tempfile": {
  "data": {
   "shadows": "datalad.utils.make_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata": {
  "data": {
   "symbols_in_volume": [
    "os.path.join",
    "six.PY2"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.AggregateParser": {
  "data": {
   "shadows": "datalad.metadata.parsers.aggregate.MetadataParser"
  },
  "type": "import"
 },
 "datalad.metadata.PY2": {
  "data": {
   "shadows": "six.PY2"
  },
  "type": "import"
 },
 "datalad.metadata._add_annex_metadata": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "datalad.metadata._sanitize_annex_description",
    "datalad.utils.swallow_logs",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.metadata._cached_load_document": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "datalad.support.network.get_cached_url_content",
    "pyld.jsonld.load_document"
   ]
  },
  "type": "function"
 },
 "datalad.metadata._get_base_dataset_metadata": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "datalad.metadata._get_implicit_metadata": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "_add_annex_metadata",
    "datalad.metadata._get_base_dataset_metadata"
   ]
  },
  "type": "function"
 },
 "datalad.metadata._sanitize_annex_description": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "datalad.metadata.re"
   ]
  },
  "type": "function"
 },
 "datalad.metadata._simplify_meta_data_structure": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "isinstance",
    "len",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.aggregate": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.aggregate.AggregateMetaData": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "EnsureNone",
    "Parameter",
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.if_dirty_opt",
    "datalad.interface.common_opts.nosave_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.aggregate.AggregateMetaData.__call__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "_dump_submeta",
    "_save_helper",
    "_within_metadata_store",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.utils.handle_dirty_dataset",
    "get_metadata",
    "len",
    "os.path.join",
    "os.path.relpath",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.aggregate.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.metadata.aggregate._dump_submeta": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "datalad.metadata.aggregate._save_helper",
    "datalad.metadata.aggregate._store_json",
    "datalad.support.exceptions.CommandError",
    "datalad.utils.path_startswith",
    "is_implicit_metadata",
    "list",
    "os.path.dirname",
    "os.path.join",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.aggregate._save_helper": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "datalad.metadata.aggregate._store_json": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datalad.metadata.aggregate.os",
    "datalad.support.json_py.dump",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.aggregate._with_sep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate._within_metadata_store": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "datalad.metadata.aggregate._store_json",
    "get_metadata",
    "is_implicit_metadata"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.aggregate.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.handle_dirty_dataset": {
  "data": {
   "shadows": "datalad.interface.utils.handle_dirty_dataset"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.if_dirty_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.if_dirty_opt"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.jsondump": {
  "data": {
   "shadows": "datalad.support.json_py.dump"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.nosave_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.nosave_opt"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.path_startswith": {
  "data": {
   "shadows": "datalad.utils.path_startswith"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.metadata.aggregate.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.metadata.assure_dir": {
  "data": {
   "shadows": "datalad.utils.assure_dir"
  },
  "type": "import"
 },
 "datalad.metadata.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.metadata.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.metadata.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.metadata.flatten_metadata_graph": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "datalad.metadata._cached_load_document",
    "pyld.jsonld.flatten",
    "pyld.jsonld.set_document_loader"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.get_cached_url_content": {
  "data": {
   "shadows": "datalad.support.network.get_cached_url_content"
  },
  "type": "import"
 },
 "datalad.metadata.get_metadata": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "datalad.metadata._get_implicit_metadata",
    "datalad.metadata.is_implicit_metadata",
    "datalad.metadata.metadata_basepath",
    "datalad.metadata.metadata_filename",
    "datalad.metadata.parsers.aggregate.MetadataParser",
    "datalad.support.json_py.load",
    "get_native_metadata",
    "isinstance",
    "list",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.get_metadata_type": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "datalad.log.lgr.debug",
    "importlib.import_module",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.get_native_metadata": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "Exception",
    "datalad.dochelpers.exc_str",
    "datalad.log.lgr.error",
    "datalad.metadata.get_metadata_type",
    "importlib.import_module",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "datalad.metadata.is_implicit_metadata": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "isinstance",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.jsonld": {
  "data": {
   "shadows": "pyld.jsonld"
  },
  "type": "import"
 },
 "datalad.metadata.jsonload": {
  "data": {
   "shadows": "datalad.support.json_py.load"
  },
  "type": "import"
 },
 "datalad.metadata.lgr": {
  "data": {
   "shadows": "datalad.log.lgr"
  },
  "type": "import"
 },
 "datalad.metadata.load_document": {
  "data": {
   "shadows": "pyld.jsonld.load_document"
  },
  "type": "import"
 },
 "datalad.metadata.metadata": {
  "data": {
   "symbols_in_volume": [
    "datalad.metadata.metadata.logging",
    "datalad.metadata.metadata.re"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.metadata.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.Metadata": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.metadata.Metadata.__call__": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.annotate_paths.annotated2content_by_ds",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.save.Save.__call__",
    "datalad.interface.utils.eval_results",
    "datalad.metadata.metadata._parse_argspec",
    "datalad.metadata.metadata.json",
    "datalad.metadata.metadata.lgr",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.utils.unique",
    "dict",
    "isinstance",
    "list",
    "open",
    "os.makedirs",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join",
    "set",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata.Metadata.custom_result_renderer": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "datalad.ui.ui.message",
    "len",
    "os.path.relpath",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.Save": {
  "data": {
   "shadows": "datalad.interface.save.Save"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.metadata.metadata._get_key": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "datalad.metadata.metadata.valid_key"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata._parse_argspec": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "_get_key",
    "dict",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata.annotated2content_by_ds": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.annotated2content_by_ds"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.lgr": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "datalad.metadata.metadata.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.unique": {
  "data": {
   "shadows": "datalad.utils.unique"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.valid_key": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "datalad.metadata.metadata_basepath": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datalad.metadata.metadata_filename": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "datalad.metadata.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.metadata.parsers": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.parsers.aggregate": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.parsers.aggregate.BaseMetadataParser": {
  "data": {
   "shadows": "datalad.metadata.parsers.base.BaseMetadataParser"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.aggregate.MetadataParser": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "datalad.metadata.parsers.base.BaseMetadataParser"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.parsers.aggregate.MetadataParser.get_core_metadata_filenames": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "datalad.utils.find_files",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.aggregate.MetadataParser.get_metadata": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "datalad.metadata._get_base_dataset_metadata",
    "datalad.metadata._simplify_meta_data_structure",
    "datalad.metadata.parsers.aggregate._adjust_subdataset_location",
    "datalad.support.json_py.load",
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.aggregate._adjust_subdataset_location": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "datalad.metadata.is_implicit_metadata",
    "isinstance",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.aggregate._get_base_dataset_metadata": {
  "data": {
   "shadows": "datalad.metadata._get_base_dataset_metadata"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.aggregate._simplify_meta_data_structure": {
  "data": {
   "shadows": "datalad.metadata._simplify_meta_data_structure"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.aggregate.find_files": {
  "data": {
   "shadows": "datalad.utils.find_files"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.aggregate.is_implicit_metadata": {
  "data": {
   "shadows": "datalad.metadata.is_implicit_metadata"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.aggregate.jsonload": {
  "data": {
   "shadows": "datalad.support.json_py.load"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.aggregate.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.base": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.parsers.base.BaseMetadataParser": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.parsers.base.BaseMetadataParser.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "datalad.metadata.parsers.base.BaseMetadataParser._get_metadata": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.base.BaseMetadataParser.get_core_metadata_filenames": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.base.BaseMetadataParser.get_metadata": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "datalad.metadata._get_base_dataset_metadata"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.base.BaseMetadataParser.get_metadata_filenames": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "datalad.metadata.parsers.base.BaseMetadataParser.has_metadata": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.base._get_base_dataset_metadata": {
  "data": {
   "shadows": "datalad.metadata._get_base_dataset_metadata"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.base.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.base.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.bids": {
  "data": {
   "symbols_in_volume": [
    "datalad.metadata.parsers.bids.logging"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.parsers.bids.BaseMetadataParser": {
  "data": {
   "shadows": "datalad.metadata.parsers.base.BaseMetadataParser"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.bids.MetadataParser": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "datalad.metadata.parsers.base.BaseMetadataParser"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.parsers.bids.MetadataParser._get_metadata": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "datalad.dochelpers.exc_str",
    "datalad.metadata.parsers.bids.lgr",
    "datalad.support.json_py.load",
    "io.open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.bids.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.bids.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.bids.jsonload": {
  "data": {
   "shadows": "datalad.support.json_py.load"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.bids.lgr": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "datalad.metadata.parsers.bids.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.bids.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.bids.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.datacite": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.parsers.datacite.BaseMetadataParser": {
  "data": {
   "shadows": "datalad.metadata.parsers.base.BaseMetadataParser"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.datacite.ET": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.datacite.MetadataParser": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "datalad.metadata.parsers.base.BaseMetadataParser",
    "os.path.join"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.parsers.datacite.MetadataParser._get_metadata": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "datalad.metadata.parsers.datacite._process_tree",
    "dict",
    "nstag",
    "open",
    "xml.etree.ElementTree.ElementTree",
    "xml.etree.ElementTree.iterparse"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.datacite.MetadataParser._get_metadata.nstag": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "datalad.metadata.parsers.datacite.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.datacite._beautify_multiline_field": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datalad.interface.base.dedent_docstring",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.datacite._merge": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "datalad.metadata.parsers.datacite._process_tree": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "AttributeError",
    "collections.OrderedDict",
    "datalad.metadata.parsers.datacite._merge",
    "datalad.metadata.parsers.datacite._unwrap",
    "list",
    "map",
    "nstag",
    "text",
    "trans1",
    "transall_"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.datacite._split_list_field": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "datalad.metadata.parsers.datacite._unwrap": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "datalad.metadata.parsers.datacite.re"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.datacite.dedent_docstring": {
  "data": {
   "shadows": "datalad.interface.base.dedent_docstring"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.datacite.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.datacite.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.datalad_rfc822": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.parsers.datalad_rfc822.BaseMetadataParser": {
  "data": {
   "shadows": "datalad.metadata.parsers.base.BaseMetadataParser"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.datalad_rfc822.MetadataParser": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "datalad.metadata.parsers.base.BaseMetadataParser",
    "os.path.join"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.parsers.datalad_rfc822.MetadataParser._get_metadata": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "datalad.metadata.parsers.datalad_rfc822._beautify_multiline_field",
    "datalad.metadata.parsers.datalad_rfc822._split_list_field",
    "datalad.metadata.parsers.datalad_rfc822.email",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.datalad_rfc822._beautify_multiline_field": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "datalad.interface.base.dedent_docstring",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.datalad_rfc822._split_list_field": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "datalad.metadata.parsers.datalad_rfc822.dedent_docstring": {
  "data": {
   "shadows": "datalad.interface.base.dedent_docstring"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.datalad_rfc822.email": {
  "data": {
   "shadows": "email"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.datalad_rfc822.email.parser": {
  "data": {
   "shadows": "email.parser"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.datalad_rfc822.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.frictionless_datapackage": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.parsers.frictionless_datapackage.BaseMetadataParser": {
  "data": {
   "shadows": "datalad.metadata.parsers.base.BaseMetadataParser"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.frictionless_datapackage.MetadataParser": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "datalad.metadata.parsers.base.BaseMetadataParser"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.parsers.frictionless_datapackage.MetadataParser._get_metadata": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "datalad.metadata.parsers.frictionless_datapackage._compact_author",
    "datalad.metadata.parsers.frictionless_datapackage._compact_license",
    "datalad.support.json_py.load"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.frictionless_datapackage._compact_author": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.frictionless_datapackage._compact_license": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.frictionless_datapackage.jsonload": {
  "data": {
   "shadows": "datalad.support.json_py.load"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.parsers.tests.test_aggregate": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.parsers.tests.test_aggregate.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_aggregate.MetadataParser": {
  "data": {
   "shadows": "datalad.metadata.parsers.aggregate.MetadataParser"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_aggregate.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_aggregate.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_aggregate.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_aggregate.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_aggregate.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_aggregate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_aggregate.test_basic": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.parsers.aggregate.MetadataParser",
    "datalad.metadata.parsers.tests.test_aggregate.os",
    "datalad.tests.utils.with_tempfile",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.tests.test_aggregate.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_bids": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.parsers.tests.test_bids.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_bids.MetadataParser": {
  "data": {
   "shadows": "datalad.metadata.parsers.bids.MetadataParser"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_bids.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_bids.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_bids.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_bids.dumps": {
  "data": {
   "shadows": "simplejson.dumps"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_bids.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_bids.test_get_metadata": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.parsers.bids.MetadataParser",
    "datalad.tests.utils.with_tree",
    "nose.tools.assert_equal",
    "simplejson.dumps"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.tests.test_bids.test_get_metadata_with_README": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.parsers.bids.MetadataParser",
    "datalad.tests.utils.with_tree",
    "nose.tools.assert_equal",
    "simplejson.dumps"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.tests.test_bids.test_get_metadata_with_description_and_README": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.parsers.bids.MetadataParser",
    "datalad.tests.utils.with_tree",
    "nose.tools.assert_equal",
    "simplejson.dumps"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.tests.test_bids.test_has_metadata": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.parsers.bids.MetadataParser",
    "datalad.tests.utils.with_tree",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.tests.test_bids.test_has_no_metadata": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.parsers.bids.MetadataParser",
    "datalad.tests.utils.with_tempfile",
    "nose.tools.assert_equal",
    "nose.tools.assert_false"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.tests.test_bids.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_bids.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_datacite_xml": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.parsers.tests.test_datacite_xml.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_datacite_xml.MetadataParser": {
  "data": {
   "shadows": "datalad.metadata.parsers.datacite.MetadataParser"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_datacite_xml.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_datacite_xml.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_datacite_xml.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_datacite_xml.dumps": {
  "data": {
   "shadows": "simplejson.dumps"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_datacite_xml.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_datacite_xml.test_get_metadata": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.parsers.datacite.MetadataParser",
    "datalad.tests.utils.with_tree",
    "nose.tools.assert_equal",
    "simplejson.dumps"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.tests.test_datacite_xml.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_datacite_xml.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_frictionless_datapackage": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.parsers.tests.test_frictionless_datapackage.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_frictionless_datapackage.MetadataParser": {
  "data": {
   "shadows": "datalad.metadata.parsers.frictionless_datapackage.MetadataParser"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_frictionless_datapackage.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_frictionless_datapackage.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_frictionless_datapackage.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_frictionless_datapackage.dumps": {
  "data": {
   "shadows": "simplejson.dumps"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_frictionless_datapackage.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_frictionless_datapackage.test_get_metadata": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.parsers.frictionless_datapackage.MetadataParser",
    "datalad.tests.utils.with_tree",
    "nose.tools.assert_equal",
    "simplejson.dumps"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.tests.test_frictionless_datapackage.test_has_metadata": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.parsers.frictionless_datapackage.MetadataParser",
    "datalad.tests.utils.with_tree",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.tests.test_frictionless_datapackage.test_has_no_metadata": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.parsers.frictionless_datapackage.MetadataParser",
    "datalad.tests.utils.with_tempfile",
    "nose.tools.assert_equal",
    "nose.tools.assert_false"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.tests.test_frictionless_datapackage.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_frictionless_datapackage.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_rfc822": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.parsers.tests.test_rfc822.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_rfc822.MetadataParser": {
  "data": {
   "shadows": "datalad.metadata.parsers.datalad_rfc822.MetadataParser"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_rfc822.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_rfc822.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_rfc822.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_rfc822.dumps": {
  "data": {
   "shadows": "simplejson.dumps"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_rfc822.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_rfc822.test_get_metadata": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.parsers.datalad_rfc822.MetadataParser",
    "datalad.tests.utils.with_tree",
    "nose.tools.assert_equal",
    "simplejson.dumps"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.tests.test_rfc822.test_has_metadata": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.parsers.datalad_rfc822.MetadataParser",
    "datalad.tests.utils.with_tree",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.tests.test_rfc822.test_has_no_metadata": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.parsers.datalad_rfc822.MetadataParser",
    "datalad.tests.utils.with_tempfile",
    "nose.tools.assert_equal",
    "nose.tools.assert_false"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.parsers.tests.test_rfc822.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.parsers.tests.test_rfc822.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.metadata.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "datalad.metadata.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.metadata.search": {
  "data": {
   "symbols_in_volume": [
    "datalad.metadata.search.re"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.search.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.search.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.metadata.search.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.metadata.search.LOCAL_CENTRAL_PATH": {
  "data": {
   "shadows": "datalad.consts.LOCAL_CENTRAL_PATH"
  },
  "type": "import"
 },
 "datalad.metadata.search.NoDatasetArgumentFound": {
  "data": {
   "shadows": "datalad.support.exceptions.NoDatasetArgumentFound"
  },
  "type": "import"
 },
 "datalad.metadata.search.PY3": {
  "data": {
   "shadows": "six.PY3"
  },
  "type": "import"
 },
 "datalad.metadata.search.Search": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "EnsureChoice",
    "EnsureNone",
    "Parameter",
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.utils.decode_input",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.search.Search.__call__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "NotImplementedError",
    "all",
    "datalad.api.install",
    "datalad.consts.LOCAL_CENTRAL_PATH",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.utils.get_git_dir",
    "datalad.metadata.search.difflib",
    "datalad.metadata.search.os",
    "datalad.metadata.search.re",
    "datalad.metadata.search.sys",
    "datalad.support.exceptions.NoDatasetArgumentFound",
    "datalad.ui.ui.is_interactive",
    "datalad.ui.ui.message",
    "datalad.ui.ui.yesno",
    "datalad.utils.assure_list",
    "datalad.utils.get_path_prefix",
    "dict",
    "enumerate",
    "flatten_metadata_graph",
    "format",
    "get_in_matcher",
    "get_metadata",
    "isinstance",
    "len",
    "list",
    "map",
    "matcher",
    "open",
    "os.path.exists",
    "os.path.join",
    "set",
    "six.iteritems",
    "six.reraise",
    "six.text_type",
    "sorted",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search.Search.__call__.get_in_matcher": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "datalad.metadata.search.Search.__call__.get_in_matcher.matcher": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "datalad.metadata.search.Search.result_renderer_cmdline": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "datalad.metadata.search.json",
    "datalad.metadata.search.yaml",
    "datalad.support.ansi_colors.DATASET",
    "datalad.support.ansi_colors.FIELD",
    "datalad.support.ansi_colors.color_word",
    "datalad.ui.ui.message",
    "format",
    "len",
    "list",
    "map",
    "operator.itemgetter",
    "pretty_bytes",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.metadata.search._lines_regex": {
  "data": {
   "lineno": 402
  },
  "type": "constant"
 },
 "datalad.metadata.search.ansi_colors": {
  "data": {
   "shadows": "datalad.support.ansi_colors"
  },
  "type": "import"
 },
 "datalad.metadata.search.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.metadata.search.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.metadata.search.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.metadata.search.decode_input": {
  "data": {
   "shadows": "datalad.utils.decode_input"
  },
  "type": "import"
 },
 "datalad.metadata.search.difflib": {
  "data": {
   "shadows": "difflib"
  },
  "type": "import"
 },
 "datalad.metadata.search.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.metadata.search.get_git_dir": {
  "data": {
   "shadows": "datalad.distribution.utils.get_git_dir"
  },
  "type": "import"
 },
 "datalad.metadata.search.get_path_prefix": {
  "data": {
   "shadows": "datalad.utils.get_path_prefix"
  },
  "type": "import"
 },
 "datalad.metadata.search.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.metadata.search.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "datalad.metadata.search.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "datalad.metadata.search.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.metadata.search.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.search.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.metadata.search.pretty_bytes": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "datalad.metadata.search._lines_regex",
    "datalad.metadata.search.os",
    "dict",
    "isinstance",
    "list",
    "map",
    "six.PY3",
    "six.string_types",
    "six.text_type",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.metadata.search.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.metadata.search.reraise": {
  "data": {
   "shadows": "six.reraise"
  },
  "type": "import"
 },
 "datalad.metadata.search.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "datalad.metadata.search.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.metadata.search.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "datalad.metadata.search.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.metadata.search.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "datalad.metadata.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "datalad.metadata.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.metadata.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.tests.test_base": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datalad.dochelpers.exc_str",
    "nose.SkipTest"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.tests.test_base.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base._cached_load_document": {
  "data": {
   "shadows": "datalad.metadata._cached_load_document"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base._dataset_hierarchy_template": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datalad.metadata.tests.test_base._sanitize_annex_description": {
  "data": {
   "shadows": "datalad.metadata._sanitize_annex_description"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.aggregate_metadata": {
  "data": {
   "shadows": "datalad.api.aggregate_metadata"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.get_metadata": {
  "data": {
   "shadows": "datalad.metadata.get_metadata"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.get_metadata_type": {
  "data": {
   "shadows": "datalad.metadata.get_metadata_type"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.pyld": {
  "data": {
   "shadows": "pyld"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.search": {
  "data": {
   "shadows": "datalad.api.search"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.test_aggregate_with_missing_or_duplicate_id": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.api.aggregate_metadata",
    "datalad.api.search",
    "datalad.metadata.get_metadata",
    "datalad.metadata.tests.test_base._dataset_hierarchy_template",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tree",
    "datalad.utils.assure_unicode",
    "list",
    "nose.tools.assert_true",
    "os.path.join",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_aggregation": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "all",
    "assert_names",
    "datalad.api.Dataset",
    "datalad.api.aggregate_metadata",
    "datalad.api.install",
    "datalad.metadata.get_metadata",
    "datalad.metadata.tests.test_base._dataset_hierarchy_template",
    "datalad.metadata.tests.test_base.os",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tree",
    "datalad.utils.assure_list",
    "datalad.utils.assure_unicode",
    "datalad.utils.chpwd",
    "len",
    "list",
    "map",
    "nose.SkipTest",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "operator.itemgetter",
    "os.path.join",
    "set",
    "sorted",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_aggregation.assert_names": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "list",
    "map",
    "nose.tools.assert_equal",
    "operator.itemgetter",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_basic_metadata": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.api.install",
    "datalad.metadata.get_metadata",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.with_tree",
    "nose.tools.assert_equal",
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_cached_load_document": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "datalad.metadata._cached_load_document",
    "datalad.metadata.tests.test_base.logging",
    "datalad.metadata.tests.test_base.pickle",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.swallow_logs",
    "mock.patch",
    "nose.tools.assert_equal",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_get_metadata_type": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.metadata.get_metadata_type",
    "datalad.metadata.tests.test_base.os",
    "datalad.tests.utils.with_tempfile",
    "nose.tools.assert_equal",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_get_multiple_metadata_types": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.metadata.get_metadata_type",
    "datalad.tests.utils.with_tree",
    "nose.tools.assert_equal",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_ignore_nondatasets": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "_kill_time",
    "cls",
    "datalad.api.Dataset",
    "datalad.metadata.get_metadata",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.with_tempfile",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_true",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_ignore_nondatasets._kill_time": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_sanitize_annex_description": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "datalad.metadata._sanitize_annex_description",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.tests.test_manipulation.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.assert_dict_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_dict_equal"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.metadata": {
  "data": {
   "shadows": "datalad.api.metadata"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_manipulation.test_basic_dsmeta": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "dict",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_manipulation.test_basic_filemeta": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.metadata",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "dict",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_manipulation.test_mod_hierarchy": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.tests.test_manipulation.os",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_manipulation.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.tests.test_search.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.NoDatasetArgumentFound": {
  "data": {
   "shadows": "datalad.support.exceptions.NoDatasetArgumentFound"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search._check_mocked_install": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "datalad.metadata.search",
    "datalad.metadata.tests.test_search._mocked_search_results",
    "datalad.tests.utils.assert_is_generator",
    "list",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search._mock_search": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.tests.test_search._mock_search.__call__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "datalad.metadata.tests.test_search._mocked_search_results"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search._mocked_search_results": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "datalad.metadata.tests.test_search.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.assert_is_generator": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_generator"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.run_main": {
  "data": {
   "shadows": "datalad.cmdline.tests.test_main.run_main"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.search": {
  "data": {
   "shadows": "datalad.api.search"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.search_mod": {
  "data": {
   "shadows": "datalad.metadata.search"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.test_our_metadataset_search": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.cmd.Runner",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.with_tempfile",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search.test_search_non_dataset": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "datalad.metadata.search",
    "datalad.support.exceptions.NoDatasetArgumentFound",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.with_tempfile",
    "list",
    "nose.tools.assert_raises",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search.test_search_outside1": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "datalad.metadata.search",
    "datalad.support.exceptions.NoDatasetArgumentFound",
    "datalad.tests.utils.assert_is_generator",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "mock.patch.object",
    "next",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search.test_search_outside1_install_central_ds": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "_check_mocked_install",
    "datalad.api.Dataset",
    "datalad.metadata.search",
    "datalad.support.exceptions.NoDatasetArgumentFound",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testsui",
    "datalad.ui.ui.add_responses",
    "datalad.utils.chpwd",
    "list",
    "mock.patch",
    "mock.patch.object",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search.test_search_outside1_noninteractive_ui": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datalad.metadata.search",
    "datalad.support.exceptions.NoDatasetArgumentFound",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testsui",
    "datalad.utils.chpwd",
    "list",
    "nose.tools.assert_raises",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.with_testsui": {
  "data": {
   "shadows": "datalad.tests.utils.with_testsui"
  },
  "type": "import"
 },
 "datalad.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.plugin": {
  "data": {
   "symbols_in_volume": [
    "datalad.plugin.logging",
    "datalad.plugin.re"
   ]
  },
  "type": "module"
 },
 "datalad.plugin.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.plugin.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.plugin.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.plugin.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.plugin.Plugin": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.plugin.Plugin.__call__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.dochelpers.exc_str",
    "datalad.interface.base.dedent_docstring",
    "datalad.interface.utils.eval_results",
    "datalad.plugin._get_plugins",
    "datalad.plugin._load_plugin",
    "datalad.plugin.argspec",
    "datalad.plugin.inspect",
    "datalad.plugin.lgr",
    "datalad.ui.ui.message",
    "getattr",
    "isinstance",
    "len",
    "list",
    "max",
    "open",
    "os.curdir",
    "plugin_call",
    "set",
    "sorted",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.plugin._get_plugins": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "datalad.cfg.obtain",
    "glob.glob",
    "os.path.basename",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin._load_plugin": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "compile",
    "datalad.dochelpers.exc_str",
    "exec",
    "globals",
    "len",
    "locals",
    "locals.keys",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.add_readme": {
  "data": {},
  "type": "module"
 },
 "datalad.plugin.add_readme.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.plugin.add_readme.dlplugin": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "dict",
    "open",
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.add_readme.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.plugin.argspec": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "datalad.plugin.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.plugin.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.plugin.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.plugin.curdir": {
  "data": {
   "shadows": "os.curdir"
  },
  "type": "import"
 },
 "datalad.plugin.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.plugin.dedent_docstring": {
  "data": {
   "shadows": "datalad.interface.base.dedent_docstring"
  },
  "type": "import"
 },
 "datalad.plugin.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.plugin.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.plugin.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.plugin.export_tarball": {
  "data": {},
  "type": "module"
 },
 "datalad.plugin.export_tarball.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.plugin.export_tarball.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.plugin.export_tarball.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.plugin.export_tarball.dlplugin": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "datalad.plugin.export_tarball.logging",
    "datalad.plugin.export_tarball.os",
    "datalad.plugin.export_tarball.tarfile",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.utils.file_basename",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "mock.patch",
    "os.path.dirname",
    "os.path.isabs",
    "os.path.join",
    "os.path.normpath",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.export_tarball.dlplugin._filter_tarinfo": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "datalad.plugin.export_tarball.file_basename": {
  "data": {
   "shadows": "datalad.utils.file_basename"
  },
  "type": "import"
 },
 "datalad.plugin.export_tarball.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.plugin.export_tarball.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.plugin.export_tarball.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.plugin.export_tarball.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.plugin.export_tarball.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.plugin.export_tarball.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.plugin.export_tarball.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "datalad.plugin.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.plugin.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.plugin.lgr": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "datalad.plugin.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex": {
  "data": {},
  "type": "module"
 },
 "datalad.plugin.no_annex.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.plugin.no_annex.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.dlplugin": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "any",
    "datalad.distribution.dataset.require_dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.constraints.EnsureBool",
    "datalad.utils.assure_list",
    "dict",
    "isinstance",
    "open",
    "os.makedirs",
    "os.path.exists",
    "os.path.isabs",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.no_annex.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.makedirsfx": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.plugin.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.plugin.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.plugin.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.plugin.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.plugin.tests.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.plugin.tests.test_plugins": {
  "data": {},
  "type": "module"
 },
 "datalad.plugin.tests.test_plugins.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.broken_plugin": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "datalad.plugin.tests.test_plugins.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.dummy_plugin": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "datalad.plugin.tests.test_plugins.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.nodocs_plugin": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "datalad.plugin.tests.test_plugins.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.plugin": {
  "data": {
   "shadows": "datalad.api.plugin"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.test_no_annex": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.plugin",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_plugins.test_plugin_call": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "datalad.api.create",
    "datalad.api.plugin",
    "datalad.plugin.tests.test_plugins.broken_plugin",
    "datalad.plugin.tests.test_plugins.dummy_plugin",
    "datalad.plugin.tests.test_plugins.logging",
    "datalad.plugin.tests.test_plugins.nodocs_plugin",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "list",
    "mock.patch",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_plugins.test_plugin_call.fake_is_installed": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_plugins.test_plugin_config": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.cfg",
    "datalad.cfg.add",
    "datalad.cfg.reload",
    "datalad.cfg.unset",
    "datalad.plugin.tests.test_plugins.os",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists",
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_plugins.test_wtf": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.plugin",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_plugins.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball": {
  "data": {},
  "type": "module"
 },
 "datalad.plugin.tests.test_tarball.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball._dataset_template": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datalad.plugin.tests.test_tarball.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.md5sum": {
  "data": {
   "shadows": "datalad.utils.md5sum"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.plugin": {
  "data": {
   "shadows": "datalad.api.plugin"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.test_failure": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.Dataset",
    "datalad.api.plugin",
    "datalad.plugin.tests.test_tarball._dataset_template",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_tarball.test_tarball": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "check_contents",
    "datalad.api.Dataset",
    "datalad.plugin.tests.test_tarball._dataset_template",
    "datalad.plugin.tests.test_tarball.os",
    "datalad.plugin.tests.test_tarball.time",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_not_equal",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "datalad.utils.md5sum",
    "list",
    "os.path.isabs",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_tarball.test_tarball.check_contents": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "datalad.plugin.tests.test_tarball.tarfile",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.ok_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_tarball.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_tarball.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.plugin.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.plugin.wtf": {
  "data": {},
  "type": "module"
 },
 "datalad.plugin.wtf.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.plugin.wtf.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.plugin.wtf.dlplugin": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "_t2s",
    "datalad.api.metadata",
    "datalad.cfg",
    "datalad.cfg.items",
    "datalad.plugin.wtf.os",
    "datalad.support.external_versions.external_versions.dumps",
    "datalad.ui.ui.message",
    "platform.dist",
    "platform.mac_ver",
    "platform.release",
    "platform.system",
    "platform.version",
    "platform.win32_ver",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.wtf.dlplugin._t2s": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "_t2s",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.wtf.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.plugin.wtf.metadata": {
  "data": {
   "shadows": "datalad.api.metadata"
  },
  "type": "import"
 },
 "datalad.plugin.wtf.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.plugin.wtf.pl": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "datalad.plugin.wtf.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "datalad.rmtemp": {
  "data": {
   "shadows": "datalad.tests.utils.rmtemp"
  },
  "type": "import"
 },
 "datalad.setup_package": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "datalad._test_states",
    "datalad.cfg",
    "datalad.consts.DATASETS_TOPURL",
    "datalad.os",
    "datalad.support.gitrepo.check_git_configured",
    "datalad.tests._TEMP_PATHS_GENERATED.append",
    "datalad.ui.ui.backend",
    "datalad.ui.ui.set_backend",
    "datalad.utils.make_tempfile",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.ssh_manager": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "datalad.support": {
  "data": {},
  "type": "module"
 },
 "datalad.support.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.support._lru_cache2": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "datalad.support._lru_cache2.RLock": {
  "data": {
   "shadows": "threading.RLock"
  },
  "type": "import"
 },
 "datalad.support._lru_cache2._CacheInfo": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.support._lru_cache2._HashedSeq": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "class"
 },
 "datalad.support._lru_cache2._HashedSeq.__hash__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "datalad.support._lru_cache2._HashedSeq.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "datalad.support._lru_cache2._make_key": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datalad.support._lru_cache2._HashedSeq",
    "frozenset",
    "int",
    "len",
    "object",
    "sorted",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.support._lru_cache2.lru_cache": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "datalad.support._lru_cache2.lru_cache.decorating_function": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "datalad.support._lru_cache2._make_key",
    "dict",
    "functools.update_wrapper",
    "len",
    "threading.RLock",
    "user_function"
   ]
  },
  "type": "function"
 },
 "datalad.support._lru_cache2.lru_cache.decorating_function.cache_clear": {
  "data": {
   "lineno": 170
  },
  "type": "function"
 },
 "datalad.support._lru_cache2.lru_cache.decorating_function.cache_info": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "datalad.support._lru_cache2._CacheInfo",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support._lru_cache2.lru_cache.decorating_function.wrapper": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "_len",
    "cache_get",
    "make_key",
    "user_function"
   ]
  },
  "type": "function"
 },
 "datalad.support._lru_cache2.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "datalad.support._lru_cache2.update_wrapper": {
  "data": {
   "shadows": "functools.update_wrapper"
  },
  "type": "import"
 },
 "datalad.support.annexrepo": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.annexrepo.logging",
    "max",
    "min",
    "multiprocessing.cpu_count"
   ]
  },
  "type": "module"
 },
 "datalad.support.annexrepo.AnnexRepo": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "weakref.WeakValueDictionary"
   ]
  },
  "type": "class"
 },
 "datalad.support.annexrepo.AnnexRepo.__del__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "TypeError",
    "datalad.dochelpers.exc_str",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.lgr",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.__init__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "BatchedAnnexes",
    "RuntimeError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.lgr",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.__repr__": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._annex_custom_command": {
  "data": {
   "lineno": 2856,
   "symbols_in_volume": [
    "datalad.support.annexrepo.shlex",
    "datalad.utils.on_windows",
    "isinstance",
    "normalize_paths",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._check_git_annex_version": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "MissingExternalDependency",
    "OutdatedExternalDependency",
    "classmethod",
    "datalad.utils.linux_distribution_name",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._get_expected_files": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "int",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._git_custom_command": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.lgr",
    "isinstance",
    "six.string_types",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._init": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._is_direct_mode_from_config": {
  "data": {
   "lineno": 1076
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._run_annex_command": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "CommandError",
    "CommandNotAvailableError",
    "datalad.support.annexrepo.lgr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._run_annex_command_json": {
  "data": {
   "lineno": 2254,
   "symbols_in_volume": [
    "CommandError",
    "OutOfSpaceError",
    "ProcessAnnexProgressIndicators",
    "RemoteNotAvailableError",
    "all",
    "datalad.support.annexrepo.N_AUTO_JOBS",
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.re",
    "datalad.support.json_py.loads",
    "datalad.utils.CMD_MAX_ARG",
    "datalad.utils.assure_list",
    "datalad.utils.generate_chunks",
    "dict",
    "len",
    "map",
    "max",
    "os.linesep",
    "os.linesep.join",
    "shorten"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._run_simple_annex_command": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "datalad.support.annexrepo.re",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._set_shared_connection": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "datalad.ssh_manager.get_connection",
    "datalad.support.network.is_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._submodules_dirty_direct_mode": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "GitRepo",
    "any",
    "bool",
    "datalad.support.annexrepo.AnnexRepo",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._whereis_json_to_dict": {
  "data": {
   "lineno": 2241
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.add": {
  "data": {
   "lineno": 1382,
   "symbols_in_volume": [
    "InsufficientArgumentsError",
    "ValueError",
    "_get_to_be_added_recs",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.time",
    "dict",
    "int",
    "isinstance",
    "list",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.add._get_to_be_added_recs": {
  "data": {
   "lineno": 1438,
   "symbols_in_volume": [
    "CommandError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.re",
    "os.linesep.join",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.add_remote": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.add_url_to_file": {
  "data": {
   "lineno": 1998,
   "symbols_in_volume": [
    "AnnexBatchCommandError",
    "Exception",
    "bcmd",
    "datalad.dochelpers.exc_str",
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.os",
    "dict",
    "os.path.join",
    "os.path.lexists",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.add_urls": {
  "data": {
   "lineno": 2089,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.adjust": {
  "data": {
   "lineno": 1720,
   "symbols_in_volume": [
    "CommandNotAvailableError",
    "to_options"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.commit": {
  "data": {
   "lineno": 2655,
   "symbols_in_volume": [
    "CommandError",
    "CommandNotAvailableError",
    "FileNotInRepositoryError",
    "GitRepo",
    "datalad.dochelpers.borrowdoc",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.lgr",
    "datalad.utils.assure_list",
    "len",
    "os.linesep.join",
    "os.path.isabs",
    "os.path.normpath",
    "os.path.relpath",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.copy_to": {
  "data": {
   "lineno": 2944,
   "symbols_in_volume": [
    "IncompleteResultsError",
    "ValueError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.shlex",
    "len",
    "list",
    "normalize_paths",
    "os.path.isdir"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.default_backends": {
  "data": {
   "lineno": 2928,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.drop": {
  "data": {
   "lineno": 2149,
   "symbols_in_volume": [
    "InsufficientArgumentsError",
    "any",
    "datalad.utils.assure_list",
    "len",
    "normalize_paths"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.drop_key": {
  "data": {
   "lineno": 2209,
   "symbols_in_volume": [
    "isinstance",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.enable_remote": {
  "data": {
   "lineno": 1896,
   "symbols_in_volume": [
    "AccessDeniedError",
    "AccessFailedError",
    "CommandError",
    "datalad.support.annexrepo.re"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.file_has_content": {
  "data": {
   "lineno": 1803,
   "symbols_in_volume": [
    "bool",
    "normalize_paths",
    "os.path.exists",
    "os.path.islink",
    "os.path.join",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.find": {
  "data": {
   "lineno": 1771,
   "symbols_in_volume": [
    "CommandError",
    "normalize_paths"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.fsck": {
  "data": {
   "lineno": 2937
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get": {
  "data": {
   "lineno": 1257,
   "symbols_in_volume": [
    "RemoteNotAvailableError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.lgr",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_annexed_files": {
  "data": {
   "lineno": 2554
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_contentlocation": {
  "data": {
   "lineno": 2765,
   "symbols_in_volume": [
    "CommandError",
    "os.linesep"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_corresponding_branch": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "NotImplementedError",
    "datalad.support.annexrepo.lgr",
    "os.linesep"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_description": {
  "data": {
   "lineno": 3048,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "itertools.chain.from_iterable",
    "len",
    "list",
    "match",
    "set",
    "six.iteritems",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_file_backend": {
  "data": {
   "lineno": 2911,
   "symbols_in_volume": [
    "normalize_paths"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_file_key": {
  "data": {
   "lineno": 1588,
   "symbols_in_volume": [
    "CommandError",
    "FileInGitError",
    "FileNotInAnnexError",
    "IOError",
    "datalad.support.annexrepo.lgr",
    "len",
    "list",
    "os.linesep",
    "os.path.exists",
    "os.path.join",
    "six.moves.filter",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_file_size": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "datalad.support.annexrepo.os",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_groupwanted": {
  "data": {
   "lineno": 2629
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_metadata": {
  "data": {
   "lineno": 3112,
   "symbols_in_volume": [
    "datalad.utils.assure_list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_preferred_content": {
  "data": {
   "lineno": 2563,
   "symbols_in_volume": [
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_remotes": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "GitRepo",
    "datalad.dochelpers.borrowkwargs",
    "datalad.support.annexrepo.AnnexRepo",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_size_from_key": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "IndexError",
    "int",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_special_remotes": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "CommandError",
    "datalad.support.annexrepo.re",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_status": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "CommandError",
    "_fake_exception_wrapper",
    "datalad.support.annexrepo.lgr",
    "datalad.utils.assure_list",
    "datalad.utils.with_pathsep",
    "list",
    "os.path.isdir",
    "os.path.join",
    "to_options"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_status._fake_exception_wrapper": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "CommandError",
    "datalad.support.annexrepo.logging",
    "datalad.utils.swallow_logs",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_toppath": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "CommandError",
    "GitRepo.get_toppath",
    "OSError",
    "classmethod",
    "datalad.cmd.GitRunner",
    "datalad.support.annexrepo.AnnexRepo",
    "os.pardir",
    "os.path.dirname",
    "os.path.join",
    "os.path.normpath",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_tracking_branch": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_urls": {
  "data": {
   "lineno": 2137,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.info": {
  "data": {
   "lineno": 2485,
   "symbols_in_volume": [
    "int",
    "normalize_paths",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.init_remote": {
  "data": {
   "lineno": 1883
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_available": {
  "data": {
   "lineno": 2801,
   "symbols_in_volume": [
    "CommandError",
    "KeyError",
    "ValueError",
    "list",
    "normalize_paths"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_crippled_fs": {
  "data": {
   "lineno": 1109
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_direct_mode": {
  "data": {
   "lineno": 1090
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_dirty": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "CommandNotAvailableError",
    "GitRepo",
    "any",
    "bool",
    "datalad.dochelpers.borrowdoc"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_managed_branch": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_remote_annex_ignored": {
  "data": {
   "lineno": 900
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_special_annex_remote": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "RemoteNotAvailableError"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_under_annex": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "bool",
    "normalize_paths",
    "os.path.islink",
    "os.path.join",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_valid_repo": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "GitRepo",
    "GitRepo.is_valid_repo",
    "classmethod",
    "git.InvalidGitRepositoryError",
    "git_file_has_annex",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_valid_repo.git_file_has_annex": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.os",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.lock": {
  "data": {
   "lineno": 1654
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.merge_annex": {
  "data": {
   "lineno": 1921
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.migrate_backend": {
  "data": {
   "lineno": 2885,
   "symbols_in_volume": [
    "CommandNotAvailableError",
    "normalize_paths"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.precommit": {
  "data": {
   "lineno": 2647,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.proxy": {
  "data": {
   "lineno": 1559,
   "symbols_in_volume": [
    "CommandNotAvailableError",
    "datalad.support.annexrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.remove": {
  "data": {
   "lineno": 2748,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "normalize_paths",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.repo_info": {
  "data": {
   "lineno": 2530,
   "symbols_in_volume": [
    "int",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.rm_url": {
  "data": {
   "lineno": 2124
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_default_backend": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.os",
    "datalad.utils._path_",
    "open",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_direct_mode": {
  "data": {
   "lineno": 1120,
   "symbols_in_volume": [
    "CommandNotAvailableError",
    "datalad.support.annexrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_groupwanted": {
  "data": {
   "lineno": 2641
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_metadata": {
  "data": {
   "lineno": 3146,
   "symbols_in_volume": [
    "_genspec",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_metadata._genspec": {
  "data": {
   "lineno": 3186,
   "symbols_in_volume": [
    "datalad.utils.assure_list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_preferred_content": {
  "data": {
   "lineno": 2595,
   "symbols_in_volume": [
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_remote_dead": {
  "data": {
   "lineno": 895
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_remote_url": {
  "data": {
   "lineno": 3087,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.sync": {
  "data": {
   "lineno": 1935,
   "symbols_in_volume": [
    "all",
    "datalad.utils.assure_list",
    "to_options"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.unannex": {
  "data": {
   "lineno": 1744
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.unlock": {
  "data": {
   "lineno": 1671,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.untracked_files": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.uuid": {
  "data": {
   "lineno": 3033,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.whereis": {
  "data": {
   "lineno": 2406,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.annexrepo.lgr",
    "datalad.utils.assure_list",
    "map",
    "normalize_paths",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnex": {
  "data": {
   "lineno": 3298,
   "symbols_in_volume": [
    "datalad.utils.auto_repr",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.annexrepo.BatchedAnnex.__call__": {
  "data": {
   "lineno": 3354,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "isinstance",
    "list",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnex.__del__": {
  "data": {
   "lineno": 3403
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnex.__init__": {
  "data": {
   "lineno": 3303,
   "symbols_in_volume": [
    "datalad.support.annexrepo.json",
    "datalad.support.annexrepo.readline_json",
    "datalad.support.annexrepo.readline_rstripped",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnex._check_process": {
  "data": {
   "lineno": 3342,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnex._initialize": {
  "data": {
   "lineno": 3320,
   "symbols_in_volume": [
    "datalad.cmd.GitRunner.get_git_environ_adjusted",
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.tempfile",
    "repr",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnex.close": {
  "data": {
   "lineno": 3406,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.os"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnexes": {
  "data": {
   "lineno": 3218,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.support.annexrepo.BatchedAnnexes.__del__": {
  "data": {
   "lineno": 3267
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnexes.__init__": {
  "data": {
   "lineno": 3222,
   "symbols_in_volume": [
    "datalad.support.annexrepo.BatchedAnnexes",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnexes.clear": {
  "data": {
   "lineno": 3253,
   "symbols_in_volume": [
    "datalad.support.annexrepo.BatchedAnnexes",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnexes.close": {
  "data": {
   "lineno": 3259
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnexes.get": {
  "data": {
   "lineno": 3226,
   "symbols_in_volume": [
    "BatchedAnnex"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.CMD_MAX_ARG": {
  "data": {
   "shadows": "datalad.utils.CMD_MAX_ARG"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.InvalidGitRepositoryError": {
  "data": {
   "shadows": "git.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.N_AUTO_JOBS": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "datalad.support.annexrepo.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators": {
  "data": {
   "lineno": 3426,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators.__call__": {
  "data": {
   "lineno": 3491,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.json",
    "datalad.support.annexrepo.lgr",
    "datalad.support.json_py.loads",
    "datalad.ui.ui.get_progressbar",
    "datalad.ui.utils.get_terminal_size",
    "get_size_from_perc_complete",
    "int",
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators.__call__.get_size_from_perc_complete": {
  "data": {
   "lineno": 3558,
   "symbols_in_volume": [
    "datalad.support.annexrepo.math",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators.__init__": {
  "data": {
   "lineno": 3433
  },
  "type": "function"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators._log_info": {
  "data": {
   "lineno": 3483,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators._update_pbar": {
  "data": {
   "lineno": 3457,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.warnings",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators.finish": {
  "data": {
   "lineno": 3602,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators.start": {
  "data": {
   "lineno": 3449,
   "symbols_in_volume": [
    "bool",
    "datalad.ui.ui.get_progressbar",
    "six.moves.filter",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.WeakValueDictionary": {
  "data": {
   "shadows": "weakref.WeakValueDictionary"
  },
  "type": "import"
 },
 "datalad.support.annexrepo._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.auto_repr": {
  "data": {
   "shadows": "datalad.utils.auto_repr"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.borrowdoc": {
  "data": {
   "shadows": "datalad.dochelpers.borrowdoc"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.borrowkwargs": {
  "data": {
   "shadows": "datalad.dochelpers.borrowkwargs"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.cpu_count": {
  "data": {
   "shadows": "multiprocessing.cpu_count"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.filter": {
  "data": {
   "shadows": "six.moves.filter"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.generate_chunks": {
  "data": {
   "shadows": "datalad.utils.generate_chunks"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.is_ssh": {
  "data": {
   "shadows": "datalad.support.network.is_ssh"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.islink": {
  "data": {
   "shadows": "os.path.islink"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.json_loads": {
  "data": {
   "shadows": "datalad.support.json_py.loads"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.lgr": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "datalad.support.annexrepo.linesep": {
  "data": {
   "shadows": "os.linesep"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.linux_distribution_name": {
  "data": {
   "shadows": "datalad.utils.linux_distribution_name"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.nothing_cm": {
  "data": {
   "shadows": "datalad.utils.nothing_cm"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.pardir": {
  "data": {
   "shadows": "os.pardir"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.readline_json": {
  "data": {
   "lineno": 3294,
   "symbols_in_volume": [
    "datalad.support.json_py.loads"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.readline_rstripped": {
  "data": {
   "lineno": 3271
  },
  "type": "function"
 },
 "datalad.support.annexrepo.readlines_until_ok_or_failed": {
  "data": {
   "lineno": 3276,
   "symbols_in_volume": [
    "IOError",
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.re"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.ui_utils": {
  "data": {
   "shadows": "datalad.ui.utils"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.unlink": {
  "data": {
   "shadows": "os.unlink"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.with_pathsep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.support.ansi_colors": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.ansi_colors.BOLD",
    "datalad.support.ansi_colors.UNDERLINE",
    "range"
   ]
  },
  "type": "module"
 },
 "datalad.support.ansi_colors.BOLD": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.BOLD_SEQ": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.COLOR_SEQ": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.DATASET": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.FIELD": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.LOG_LEVEL_COLORS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.RESET_SEQ": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.RESULT_STATUS_COLORS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.UNDERLINE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.color_status": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "datalad.support.ansi_colors.RESULT_STATUS_COLORS",
    "datalad.support.ansi_colors.color_word"
   ]
  },
  "type": "function"
 },
 "datalad.support.ansi_colors.color_word": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "datalad.support.ansi_colors.COLOR_SEQ",
    "datalad.support.ansi_colors.RESET_SEQ"
   ]
  },
  "type": "function"
 },
 "datalad.support.ansi_colors.format_msg": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "datalad.support.ansi_colors.BOLD_SEQ",
    "datalad.support.ansi_colors.RESET_SEQ"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives": {
  "data": {
   "symbols_in_volume": [
    "Runner",
    "datalad.support.archives._patool_run",
    "datalad.support.archives.logging",
    "datalad.support.archives.patoolib"
   ]
  },
  "type": "module"
 },
 "datalad.support.archives.ArchivesCache": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.archives.ArchivesCache.__del__": {
  "data": {
   "lineno": 343
  },
  "type": "function"
 },
 "datalad.support.archives.ArchivesCache.__delitem__": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "datalad.support.archives.ArchivesCache.__getitem__": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "datalad.support.archives.ArchivesCache.__init__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.archives._get_random_id",
    "datalad.support.archives.lgr",
    "datalad.support.archives.os",
    "datalad.support.archives.tempfile",
    "get_tempfile_kwargs",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ArchivesCache._get_normalized_archive_path": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "RuntimeError",
    "os.path.isabs",
    "os.path.isdir",
    "os.path.join",
    "os.path.normpath",
    "os.path.pardir",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ArchivesCache.clean": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "datalad.support.archives.lgr",
    "list",
    "rmtemp"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ArchivesCache.get_archive": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "ExtractedArchive",
    "datalad.support.archives._get_cached_filename",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ArchivesCache.path": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.DECOMPRESSORS": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "datalad.support.archives.ExtractedArchive": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.archives.ExtractedArchive.__del__": {
  "data": {
   "lineno": 531
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.__init__": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.support.archives._get_cached_filename",
    "datalad.support.archives.tempfile",
    "get_tempfile_kwargs",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.__repr__": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive._extract_archive": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "datalad.support.archives.decompress_file",
    "datalad.support.archives.lgr",
    "datalad.support.archives.os",
    "locals",
    "open",
    "os.path.exists",
    "rmtree"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.assure_extracted": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "lock_if_check_fails"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.clean": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "datalad.support.archives.lgr",
    "datalad.support.archives.os",
    "os.path.exists",
    "os.path.isdir"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.get_extracted_file": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "datalad.support.archives.lgr",
    "locals",
    "os.path.abspath",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.get_extracted_filename": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "os.path.join",
    "six.moves.urllib.parse.unquote"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.get_extracted_files": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "datalad.support.archives.os",
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.get_leading_directory": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "any_re_search",
    "len",
    "os.path.join",
    "os.path.sep",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.is_extracted": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "datalad.support.archives.os",
    "os.path.exists",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.path": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.stamp_path": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives._get_cached_filename": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "datalad.support.archives.hashlib",
    "datalad.support.archives.lgr",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives._get_random_id": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "datalad.support.archives.random",
    "datalad.support.archives.string",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives._patool_run": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Exception",
    "datalad.support.archives._runner",
    "datalad.support.archives.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives._runner": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "datalad.support.archives.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.support.archives.compress_files": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "datalad.support.archives._runner",
    "datalad.support.archives.lgr",
    "datalad.support.archives.patoolib",
    "datalad.support.archives.unixify_path",
    "opj_path",
    "os.path.join",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.decompress_file": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "NotImplementedError",
    "datalad.support.archives.lgr",
    "datalad.support.archives.os",
    "datalad.support.archives.patoolib",
    "datalad.support.archives.unixify_path",
    "len",
    "os.path.exists",
    "os.path.join",
    "six.next",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.support.archives.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "datalad.support.archives.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.support.archives.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.support.archives.lgr": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.support.archives.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.archives.next": {
  "data": {
   "shadows": "six.next"
  },
  "type": "import"
 },
 "datalad.support.archives.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.support.archives.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.archives.opsep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "datalad.support.archives.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.archives.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.support.archives.patoolib": {
  "data": {
   "shadows": "patoolib"
  },
  "type": "import"
 },
 "datalad.support.archives.patoolib.util": {
  "data": {
   "shadows": "patoolib.util"
  },
  "type": "import"
 },
 "datalad.support.archives.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "datalad.support.archives.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.support.archives.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.support.archives.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "datalad.support.archives.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.support.archives.unixify_path": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "datalad.support.archives.os"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.urlunquote": {
  "data": {
   "shadows": "six.moves.urllib.parse.unquote"
  },
  "type": "import"
 },
 "datalad.support.cache": {
  "data": {
   "symbols_in_volume": [
    "six.PY2"
   ]
  },
  "type": "module"
 },
 "datalad.support.cache.DictCache": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "datalad.support.cache.DictCache.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "collections.OrderedDict.__init__"
   ]
  },
  "type": "function"
 },
 "datalad.support.cache.DictCache.__setitem__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "collections.OrderedDict.__setitem__"
   ]
  },
  "type": "function"
 },
 "datalad.support.cache.DictCache._check_size_limit": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.cache.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.support.cache.PY2": {
  "data": {
   "shadows": "six.PY2"
  },
  "type": "import"
 },
 "datalad.support.cache.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "datalad.support.configparserinc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "datalad.support.configparserinc.logging",
    "datalad.support.configparserinc.sys"
   ]
  },
  "type": "module"
 },
 "datalad.support.configparserinc.BasicInterpolation": {
  "data": {
   "shadows": "configparser.BasicInterpolation"
  },
  "type": "import"
 },
 "datalad.support.configparserinc.BasicInterpolationWithName": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "configparser.BasicInterpolation"
   ]
  },
  "type": "class"
 },
 "datalad.support.configparserinc.BasicInterpolationWithName._interpolate_some": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "__name__",
    "datalad.support.configparserinc.BasicInterpolationWithName",
    "map",
    "map.copy",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.configparserinc.SafeConfigParser": {
  "data": {
   "shadows": "ConfigParser.SafeConfigParser"
  },
  "type": "import"
 },
 "datalad.support.configparserinc.SafeConfigParserWithIncludes": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ConfigParser.SafeConfigParser",
    "datalad.support.configparserinc.sys",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "datalad.support.configparserinc.SafeConfigParserWithIncludes.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datalad.support.configparserinc.BasicInterpolationWithName",
    "datalad.support.configparserinc.SafeConfigParserWithIncludes",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.configparserinc.SafeConfigParserWithIncludes.getIncludes": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ConfigParser.SafeConfigParser",
    "UnicodeDecodeError",
    "datalad.support.configparserinc.SafeConfigParserWithIncludes",
    "datalad.support.configparserinc.logSys",
    "datalad.support.configparserinc.os",
    "datalad.support.configparserinc.sys"
   ]
  },
  "type": "function"
 },
 "datalad.support.configparserinc.SafeConfigParserWithIncludes.read": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ConfigParser.SafeConfigParser.read",
    "datalad.support.configparserinc.SafeConfigParserWithIncludes",
    "datalad.support.configparserinc.logSys",
    "datalad.support.configparserinc.sys",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.configparserinc.__all__": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "datalad.support.configparserinc.logSys": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.support.configparserinc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.configparserinc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.configparserinc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.constraints": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureBool",
    "datalad.support.constraints.EnsureFloat",
    "datalad.support.constraints.EnsureInt",
    "datalad.support.constraints.EnsureStr"
   ]
  },
  "type": "module"
 },
 "datalad.support.constraints.AltConstraints": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.AltConstraints.__call__": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "c"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.AltConstraints.__init__": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "datalad.support.constraints.AltConstraints",
    "datalad.support.constraints.EnsureNone",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.AltConstraints.__or__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "datalad.support.constraints.AltConstraints",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.AltConstraints.long_description": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "c",
    "c.long_description",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.AltConstraints.short_description": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "c",
    "c.short_description",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraint": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.Constraint.__and__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Constraints"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraint.__call__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraint.__or__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "AltConstraints"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraint.__repr__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraint.long_description": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraint.short_description": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraints": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.Constraints.__and__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraints",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraints.__call__": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "c"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraints.__init__": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "c",
    "datalad.support.constraints.Constraints",
    "datalad.support.constraints.EnsureNone",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraints.long_description": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "c",
    "c.long_description",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraints.short_description": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "c",
    "c.short_description",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureBool": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureBool.__call__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "isinstance",
    "six.binary_type",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureBool.long_description": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureBool.short_description": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureCallable": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureCallable.__call__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureCallable.long_description": {
  "data": {
   "lineno": 247
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureCallable.short_description": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureChoice": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureChoice.__call__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureChoice.__init__": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureChoice",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureChoice.long_description": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureChoice.short_description": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureDType": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureDType.__call__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "list",
    "six.binary_type",
    "six.moves.map",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureDType.__init__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureDType.long_description": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureDType.short_description": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datalad.support.constraints._type_str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureFloat": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureDType"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureFloat.__init__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureDType",
    "float"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureInt": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureDType"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureInt.__init__": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureDType",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureKeyChoice": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureChoice"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureKeyChoice.__call__": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.constraints.EnsureKeyChoice",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureKeyChoice.__init__": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureKeyChoice",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureKeyChoice.long_description": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureKeyChoice.short_description": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureListOf": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureListOf.__call__": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "list",
    "six.moves.map"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureListOf.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureListOf",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureListOf.long_description": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureListOf.short_description": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "datalad.support.constraints._type_str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureNone": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureNone.__call__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureNone.long_description": {
  "data": {
   "lineno": 232
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureNone.short_description": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureRange": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureRange.__call__": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureRange.__init__": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureRange",
    "max",
    "min",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureRange.long_description": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureRange.short_description": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureStr": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureStr.__call__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "repr",
    "six.binary_type",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureStr.__init__": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureStr",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureStr.long_description": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureStr.short_description": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureTupleOf": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureTupleOf.__call__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "six.moves.map",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureTupleOf.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureTupleOf",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureTupleOf.long_description": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureTupleOf.short_description": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "datalad.support.constraints._type_str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.support.constraints._strip_typerepr": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "datalad.support.constraints.re"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints._type_str": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datalad.support.constraints._strip_typerepr",
    "isinstance",
    "len",
    "six.moves.map",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.binary_type": {
  "data": {
   "shadows": "six.binary_type"
  },
  "type": "import"
 },
 "datalad.support.constraints.constraint_spec_map": {
  "data": {
   "lineno": 444
  },
  "type": "constant"
 },
 "datalad.support.constraints.expand_constraint_spec": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "datalad.support.constraints.constraint_spec_map",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.map": {
  "data": {
   "shadows": "six.moves.map"
  },
  "type": "import"
 },
 "datalad.support.constraints.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.constraints.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "datalad.support.cookies": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.cookies.CookiesDB",
    "datalad.support.cookies.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.cookies.CookiesDB": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.cookies.CookiesDB.__contains__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Exception",
    "datalad.dochelpers.exc_str",
    "datalad.support.cookies.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.cookies.CookiesDB.__getitem__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Exception",
    "datalad.dochelpers.exc_str",
    "datalad.support.cookies.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.cookies.CookiesDB.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "datalad.support.cookies.CookiesDB.__setitem__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Exception",
    "datalad.dochelpers.exc_str",
    "datalad.support.cookies.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.cookies.CookiesDB._get_provider": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "get_tld",
    "six.PY2"
   ]
  },
  "type": "function"
 },
 "datalad.support.cookies.CookiesDB._load": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Exception",
    "datalad.dochelpers.exc_str",
    "datalad.support.cookies.appdirs",
    "datalad.support.cookies.atexit",
    "datalad.support.cookies.lgr",
    "datalad.support.cookies.shelve"
   ]
  },
  "type": "function"
 },
 "datalad.support.cookies.PY2": {
  "data": {
   "shadows": "six.PY2"
  },
  "type": "import"
 },
 "datalad.support.cookies.appdirs": {
  "data": {
   "shadows": "appdirs"
  },
  "type": "import"
 },
 "datalad.support.cookies.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "datalad.support.cookies.cookies_db": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "datalad.support.cookies.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.cookies.lgr": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.support.cookies.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.cookies.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.support.cookies.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "datalad.support.cookies.shelve": {
  "data": {
   "shadows": "shelve"
  },
  "type": "import"
 },
 "datalad.support.digests": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.digests.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.digests.Digester": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.digests.Digester.__call__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "datalad.support.digests.lgr",
    "open",
    "x",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.support.digests.Digester.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "datalad.support.digests.hashlib",
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.support.digests.Digester.digests": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.digests.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "datalad.support.digests.lgr": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.support.digests.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.exceptions": {
  "data": {},
  "type": "module"
 },
 "datalad.support.exceptions.AccessDeniedError": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "datalad.support.exceptions.DownloadError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.AccessFailedError": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "datalad.support.exceptions.DownloadError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.AnnexBatchCommandError": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.CommandError": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.CommandError.__init__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "RuntimeError.__init__"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.CommandError.__str__": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "datalad.support.exceptions.CommandNotAvailableError": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.CrawlerError": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.DeprecatedError": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.DeprecatedError.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "datalad.support.exceptions.DeprecatedError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.DeprecatedError.__str__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "datalad.support.exceptions.DownloadError": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.FileInGitError": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "datalad.support.exceptions.FileNotInAnnexError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.FileNotInAnnexError": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "IOError",
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.FileNotInAnnexError.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "IOError.__init__",
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.FileNotInAnnexError.__str__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "IOError.__str__",
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.FileNotInRepositoryError": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "datalad.support.exceptions.FileNotInAnnexError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.GitIgnoreError": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError",
    "datalad.support.exceptions.re"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.GitIgnoreError.__init__": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "datalad.support.exceptions.GitIgnoreError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.GitIgnoreError.__str__": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "datalad.support.exceptions.IncompleteDownloadError": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "datalad.support.exceptions.DownloadError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.IncompleteResultsError": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.IncompleteResultsError.__init__": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "datalad.support.exceptions.IncompleteResultsError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.IncompleteResultsError.__str__": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "datalad.support.exceptions.IncompleteResultsError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.InstallFailedError": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.InsufficientArgumentsError": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.InvalidInstanceRequestError": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.InvalidInstanceRequestError.__init__": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "datalad.support.exceptions.InvalidInstanceRequestError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.MissingBranchError": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.MissingBranchError.__init__": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "datalad.support.exceptions.MissingBranchError.__str__": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "datalad.support.exceptions.MissingExternalDependency": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.MissingExternalDependency.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "datalad.support.exceptions.MissingExternalDependency",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.MissingExternalDependency.__str__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.NoDatasetArgumentFound": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "datalad.support.exceptions.InsufficientArgumentsError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.OutOfSpaceError": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.OutOfSpaceError.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "datalad.support.exceptions.OutOfSpaceError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.OutOfSpaceError.__str__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "datalad.support.exceptions.OutOfSpaceError",
    "os.linesep",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.OutdatedExternalDependency": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "datalad.support.exceptions.MissingExternalDependency"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.OutdatedExternalDependency.__init__": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "datalad.support.exceptions.OutdatedExternalDependency",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.OutdatedExternalDependency.__str__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datalad.support.exceptions.OutdatedExternalDependency",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.PathOutsideRepositoryError": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.PathOutsideRepositoryError.__init__": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "datalad.support.exceptions.PathOutsideRepositoryError.__str__": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "datalad.support.exceptions.PipelineNotSpecifiedError": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "datalad.support.exceptions.CrawlerError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.RemoteNotAvailableError": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.RemoteNotAvailableError.__init__": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "datalad.support.exceptions.RemoteNotAvailableError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.RemoteNotAvailableError.__str__": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "datalad.support.exceptions.RemoteNotAvailableError",
    "os.linesep",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.TargetFileAbsent": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "datalad.support.exceptions.DownloadError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.UnaccountedDownloadError": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "datalad.support.exceptions.IncompleteDownloadError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.UnhandledRedirectError": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "datalad.support.exceptions.DownloadError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.UnhandledRedirectError.__init__": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "datalad.support.exceptions.UnhandledRedirectError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.linesep": {
  "data": {
   "shadows": "os.linesep"
  },
  "type": "import"
 },
 "datalad.support.exceptions.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.external_versions": {
  "data": {
   "symbols_in_volume": [
    "datalad.cmd.GitRunner",
    "datalad.cmd.Runner",
    "datalad.support.external_versions.ExternalVersions"
   ]
  },
  "type": "module"
 },
 "datalad.support.external_versions.ExternalVersions": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "datalad.support.external_versions.UnknownVersion",
    "datalad.support.external_versions._get_annex_version",
    "datalad.support.external_versions._get_git_version",
    "datalad.support.external_versions._get_system_git_version",
    "datalad.support.external_versions._get_system_ssh_version",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.external_versions.ExternalVersions.__contains__": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "datalad.support.external_versions.ExternalVersions.__getitem__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "__import__",
    "datalad.dochelpers.exc_str",
    "datalad.log.lgr.debug",
    "datalad.log.lgr.warning",
    "datalad.support.external_versions.sys",
    "isinstance",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.ExternalVersions.__init__": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "datalad.support.external_versions.ExternalVersions._deduce_version": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "datalad.support.external_versions.pkg_resources",
    "distutils.version.LooseVersion",
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "six.binary_type",
    "six.string_types",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.ExternalVersions.dumps": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "os.linesep",
    "os.linesep.join",
    "sorted",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.ExternalVersions.keys": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "datalad.support.external_versions.ExternalVersions.versions": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.support.external_versions.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datalad.support.external_versions.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.support.external_versions.UnknownVersion": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "datalad.support.external_versions.UnknownVersion.__cmp__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.UnknownVersion.__str__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "datalad.support.external_versions.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.support.external_versions.__get_git_version": {
  "data": {
   "shadows": "datalad.config.get_git_version"
  },
  "type": "import"
 },
 "datalad.support.external_versions._get_annex_version": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "datalad.support.external_versions._runner"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions._get_git_version": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "datalad.config.get_git_version",
    "datalad.support.external_versions._git_runner"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions._get_system_git_version": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "datalad.config.get_git_version",
    "datalad.support.external_versions._runner"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions._get_system_ssh_version": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "datalad.dochelpers.exc_str",
    "datalad.log.lgr.debug",
    "datalad.support.external_versions._runner"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions._git_runner": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datalad.support.external_versions._runner": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "datalad.support.external_versions.binary_type": {
  "data": {
   "shadows": "six.binary_type"
  },
  "type": "import"
 },
 "datalad.support.external_versions.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.external_versions.external_versions": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "datalad.support.external_versions.lgr": {
  "data": {
   "shadows": "datalad.log.lgr"
  },
  "type": "import"
 },
 "datalad.support.external_versions.linesep": {
  "data": {
   "shadows": "os.linesep"
  },
  "type": "import"
 },
 "datalad.support.external_versions.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "datalad.support.external_versions.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "datalad.support.external_versions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.gitrepo": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.gitrepo.logging",
    "git.GitCmdObjectDB",
    "os.path.curdir",
    "os.path.pardir",
    "os.path.sep"
   ]
  },
  "type": "module"
 },
 "datalad.support.gitrepo.Blob": {
  "data": {
   "shadows": "git.objects.blob.Blob"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.ConfigManager": {
  "data": {
   "shadows": "datalad.config.ConfigManager"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.GIT_SSH_COMMAND": {
  "data": {
   "shadows": "datalad.consts.GIT_SSH_COMMAND"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.GitCommandError": {
  "data": {
   "shadows": "git.exc.GitCommandError"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.GitRepo": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "datalad.consts.GIT_SSH_COMMAND",
    "six.add_metaclass",
    "weakref.WeakValueDictionary"
   ]
  },
  "type": "class"
 },
 "datalad.support.gitrepo.GitRepo.__del__": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "git.exc.InvalidGitRepositoryError",
    "hasattr",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.__eq__": {
  "data": {
   "lineno": 761
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.__init__": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "DeprecatedError",
    "TypeError",
    "datalad.cmd.GitRunner",
    "datalad.dochelpers.exc_str",
    "datalad.ssh_manager",
    "datalad.ssh_manager.assure_initialized",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.check_git_configured",
    "datalad.support.gitrepo.default_git_odbt",
    "datalad.support.gitrepo.lgr",
    "datalad.support.gitrepo.os",
    "git.Repo.init",
    "git.exc.GitCommandError",
    "git.exc.InvalidGitRepositoryError",
    "git.exc.NoSuchPathError",
    "os.path.exists",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.__repr__": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._flyweight_id_from_args": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "AttributeError",
    "RI",
    "TypeError",
    "classmethod",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._flyweight_invalid": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._flyweight_reject": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._get_added_files_commit_msg": {
  "data": {
   "lineno": 850,
   "symbols_in_volume": [
    "classmethod",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._get_files_history": {
  "data": {
   "lineno": 1320,
   "symbols_in_volume": [
    "git.objects.commit.Commit.iter_items"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._get_prefixed_commit_msg": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._get_remotes_having_commit": {
  "data": {
   "lineno": 1337,
   "symbols_in_volume": [
    "any",
    "bool",
    "filter"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._git_custom_command": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "GitIgnoreError",
    "datalad.support.gitrepo.normalize_paths",
    "datalad.support.gitrepo.re",
    "datalad.support.gitrepo.shlex",
    "datalad.utils.on_windows",
    "isinstance",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._gitpy_custom_call": {
  "data": {
   "lineno": 1357,
   "symbols_in_volume": [
    "NotImplementedError",
    "datalad.support.gitrepo.lgr",
    "datalad.support.gitrepo.logging",
    "git.cmd.Git.USE_SHELL",
    "git.exc.GitCommandError"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._process_git_get_output": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "datalad.support.gitrepo.re",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.add": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "OSError",
    "datalad.support.gitrepo._remove_empty_items",
    "datalad.support.gitrepo.lgr",
    "datalad.support.gitrepo.normalize_paths",
    "datalad.support.gitrepo.to_options",
    "datalad.utils.assure_list",
    "git"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.add_remote": {
  "data": {
   "lineno": 1513
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.add_submodule": {
  "data": {
   "lineno": 1973,
   "symbols_in_volume": [
    "datalad.support.gitrepo.posixpath",
    "datalad.utils.posix_relpath",
    "os.path.curdir",
    "os.path.isabs"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.checkout": {
  "data": {
   "lineno": 1852,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.clone": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "KeyError",
    "RI",
    "TypeError",
    "ValueError",
    "classmethod",
    "cls",
    "datalad.dochelpers.exc_str",
    "datalad.ssh_manager.get_connection",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.default_git_odbt",
    "datalad.support.gitrepo.lgr",
    "datalad.support.gitrepo.os",
    "datalad.support.gitrepo.re",
    "git.Repo.clone_from",
    "git.__version__",
    "git.exc.GitCommandError",
    "is_ssh",
    "isinstance",
    "os.listdir",
    "os.path.exists",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.commit": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "FileNotInRepositoryError",
    "datalad.support.gitrepo.lgr",
    "os.linesep.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.config": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "datalad.config.ConfigManager",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.count_objects": {
  "data": {
   "lineno": 2204,
   "symbols_in_volume": [
    "int",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.deinit_submodule": {
  "data": {
   "lineno": 2023,
   "symbols_in_volume": [
    "datalad.support.gitrepo.to_options"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.describe": {
  "data": {
   "lineno": 2161,
   "symbols_in_volume": [
    "datalad.support.gitrepo.to_options"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.dirty": {
  "data": {
   "lineno": 1915,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.fetch": {
  "data": {
   "lineno": 1560,
   "symbols_in_volume": [
    "ValueError",
    "datalad.ssh_manager.get_connection",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.lgr",
    "is_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.gc": {
  "data": {
   "lineno": 1923
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_active_branch": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "TypeError",
    "datalad.support.gitrepo.lgr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_branch_commits": {
  "data": {
   "lineno": 1796,
   "symbols_in_volume": [
    "IndexError",
    "MissingBranchError",
    "ValueError",
    "fvalue",
    "gen"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_branch_commits.gen": {
  "data": {
   "lineno": 1839
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_branches": {
  "data": {
   "lineno": 1204
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_commit_date": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "Exception",
    "datalad.dochelpers.exc_str",
    "datalad.support.gitrepo.lgr",
    "getattr",
    "next"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_deleted_files": {
  "data": {
   "lineno": 2223
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_file_content": {
  "data": {
   "lineno": 1299,
   "symbols_in_volume": [
    "bytes",
    "chr",
    "six.PY3"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_files": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "git.objects.blob.Blob",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_git_attributes": {
  "data": {
   "lineno": 2229,
   "symbols_in_volume": [
    "all",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_hexsha": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "object"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_indexed_files": {
  "data": {
   "lineno": 1094
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_merge_base": {
  "data": {
   "lineno": 1133,
   "symbols_in_volume": [
    "ValueError",
    "git.exc.GitCommandError",
    "isinstance",
    "len",
    "six.string_types",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_missing_files": {
  "data": {
   "lineno": 2217
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_remote_branches": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "AssertionError",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_remote_url": {
  "data": {
   "lineno": 1762
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_remotes": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "datalad.utils.unique"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_submodules": {
  "data": {
   "lineno": 1933,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_tags": {
  "data": {
   "lineno": 2127,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_toppath": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "OSError",
    "classmethod",
    "datalad.cmd.GitRunner",
    "datalad.support.gitrepo.GitRepo",
    "os.path.dirname",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_tracking_branch": {
  "data": {
   "lineno": 2182
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.is_dirty": {
  "data": {
   "lineno": 1890
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.is_submodule_modified": {
  "data": {
   "lineno": 1943,
   "symbols_in_volume": [
    "any",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.is_valid_repo": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "classmethod",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.is_with_annex": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.ls_remote": {
  "data": {
   "lineno": 1882
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.merge": {
  "data": {
   "lineno": 1865
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.precommit": {
  "data": {
   "lineno": 986
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.pull": {
  "data": {
   "lineno": 1640,
   "symbols_in_volume": [
    "ValueError",
    "datalad.ssh_manager.get_connection",
    "datalad.support.gitrepo.GitRepo",
    "is_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.push": {
  "data": {
   "lineno": 1679,
   "symbols_in_volume": [
    "ValueError",
    "datalad.ssh_manager.get_connection",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.lgr",
    "is_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.remove": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "datalad.support.gitrepo._remove_empty_items",
    "datalad.support.gitrepo.normalize_paths",
    "datalad.support.gitrepo.to_options"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.remove_branch": {
  "data": {
   "lineno": 1877
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.remove_remote": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "RemoteNotAvailableError"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.repo": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "datalad.support.gitrepo.Repo",
    "datalad.support.gitrepo.lgr",
    "datalad.support.gitrepo.os",
    "os.path.exists",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.set_remote_url": {
  "data": {
   "lineno": 1779
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.sth_like_file_has_content": {
  "data": {
   "lineno": 424
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.tag": {
  "data": {
   "lineno": 2106,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.untracked_files": {
  "data": {
   "lineno": 1919,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.update_ref": {
  "data": {
   "lineno": 2084
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.update_remote": {
  "data": {
   "lineno": 1548
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.update_submodule": {
  "data": {
   "lineno": 2039,
   "symbols_in_volume": [
    "datalad.support.gitrepo.lgr",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.InvalidGitRepositoryError": {
  "data": {
   "shadows": "git.exc.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.NoSuchPathError": {
  "data": {
   "shadows": "git.exc.NoSuchPathError"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.PY3": {
  "data": {
   "shadows": "six.PY3"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.Repo": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "datalad.support.gitrepo.default_git_odbt",
    "git.Repo"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.WeakValueDictionary": {
  "data": {
   "shadows": "weakref.WeakValueDictionary"
  },
  "type": "import"
 },
 "datalad.support.gitrepo._curdirsep": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "datalad.support.gitrepo._normalize_path": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "FileNotInRepositoryError",
    "datalad.support.gitrepo._curdirsep",
    "datalad.support.gitrepo._pardirsep",
    "datalad.utils.getpwd",
    "os.path.basename",
    "os.path.commonprefix",
    "os.path.dirname",
    "os.path.isabs",
    "os.path.join",
    "os.path.normpath",
    "os.path.realpath",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo._pardirsep": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "datalad.support.gitrepo._remove_empty_items": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "datalad.support.gitrepo.lgr",
    "isinstance",
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.check_git_configured": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "datalad.cmd.GitRunner",
    "datalad.dochelpers.exc_str",
    "datalad.support.gitrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.commonprefix": {
  "data": {
   "shadows": "os.path.commonprefix"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.default_git_odbt": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "datalad.support.gitrepo.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.gitpy": {
  "data": {
   "shadows": "git"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.kwargs_to_options": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "datalad.utils.optional_args"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.kwargs_to_options.newfunc": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "dict",
    "func",
    "functools.wraps",
    "git.Git"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.lgr": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "datalad.support.gitrepo.linesep": {
  "data": {
   "shadows": "os.linesep"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.normalize_path": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "datalad.utils.optional_args"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.normalize_path.newfunc": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "datalad.support.gitrepo._normalize_path",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.normalize_paths": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "datalad.utils.optional_args"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.normalize_paths.newfunc": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "datalad.support.gitrepo._normalize_path",
    "dict",
    "func",
    "functools.wraps",
    "isinstance",
    "len",
    "list",
    "normalize",
    "remap_filenames",
    "six.string_types",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.normalize_paths.newfunc.remap_filenames": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.optional_args": {
  "data": {
   "shadows": "datalad.utils.optional_args"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.posix_relpath": {
  "data": {
   "shadows": "datalad.utils.posix_relpath"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.sep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.split_remote_branch": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "datalad.support.gitrepo.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.to_options": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "git.Git"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.unique": {
  "data": {
   "shadows": "datalad.utils.unique"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.updated": {
  "data": {
   "shadows": "datalad.utils.updated"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "datalad.support.json_py": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "datalad.support.json_py.JSONDecodeError": {
  "data": {
   "shadows": "simplejson.JSONDecodeError"
  },
  "type": "import"
 },
 "datalad.support.json_py.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "datalad.support.json_py.dump": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "datalad.support.json_py.codecs",
    "datalad.support.json_py.json_dump_kwargs",
    "io.open",
    "simplejson.dump"
   ]
  },
  "type": "function"
 },
 "datalad.support.json_py.json_dump_kwargs": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.support.json_py.json_loads": {
  "data": {
   "shadows": "simplejson.loads"
  },
  "type": "import"
 },
 "datalad.support.json_py.jsondump": {
  "data": {
   "shadows": "simplejson.dump"
  },
  "type": "import"
 },
 "datalad.support.json_py.jsonload": {
  "data": {
   "shadows": "simplejson.load"
  },
  "type": "import"
 },
 "datalad.support.json_py.load": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "exc_str",
    "io.open",
    "simplejson.JSONDecodeError",
    "simplejson.load",
    "simplejson.loads"
   ]
  },
  "type": "function"
 },
 "datalad.support.json_py.loads": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "simplejson.loads"
   ]
  },
  "type": "function"
 },
 "datalad.support.json_py.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "datalad.support.keyring_": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.keyring_.Keyring"
   ]
  },
  "type": "module"
 },
 "datalad.support.keyring_.Keyring": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.keyring_.Keyring.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "datalad.support.keyring_.Keyring._get_service_name": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.keyring_.Keyring._keyring": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datalad.log.lgr.debug",
    "datalad.log.lgr.getEffectiveLevel",
    "datalad.log.lgr.handlers",
    "datalad.support.keyring_.keyring",
    "datalad.support.keyring_.logging",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.keyring_.Keyring.delete": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.support.keyring_.Keyring.get": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "datalad.support.keyring_.os"
   ]
  },
  "type": "function"
 },
 "datalad.support.keyring_.Keyring.set": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "datalad.support.keyring_.MemoryKeyring": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.keyring_.MemoryKeyring.__init__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "datalad.support.keyring_.MemoryKeyring.delete": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "datalad.support.keyring_.MemoryKeyring.get": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "datalad.support.keyring_.MemoryKeyring.set": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "datalad.support.keyring_.keyring": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "datalad.support.keyring_.lgr": {
  "data": {
   "shadows": "datalad.log.lgr"
  },
  "type": "import"
 },
 "datalad.support.keyring_.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.keyring_.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.locking": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.locking.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.locking._get": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "callable",
    "entry",
    "func",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.locking.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "datalad.support.locking.fasteners": {
  "data": {
   "shadows": "fasteners"
  },
  "type": "import"
 },
 "datalad.support.locking.lgr": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "datalad.support.locking.lock_if_check_fails": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "datalad.support.locking._get",
    "datalad.support.locking.fasteners",
    "datalad.support.locking.lgr",
    "datalad.support.locking.os"
   ]
  },
  "type": "function"
 },
 "datalad.support.locking.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.locking.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.nda_": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "datalad.support.nda_.image03_fields",
    "datalad.support.nda_.image03_file_fields",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.support.nda_.DEFAULT_SERVER": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "datalad.support.nda_.Providers": {
  "data": {
   "shadows": "datalad.downloaders.providers.Providers"
  },
  "type": "import"
 },
 "datalad.support.nda_.__docformat__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datalad.support.nda_.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.support.nda_.cx_Oracle": {
  "data": {
   "shadows": "cx_Oracle"
  },
  "type": "import"
 },
 "datalad.support.nda_.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.support.nda_.get_oracle_db": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "credential",
    "datalad.cfg.obtain",
    "datalad.downloaders.providers.Providers.from_config_files",
    "datalad.support.nda_.DEFAULT_SERVER",
    "datalad.support.nda_.cx_Oracle",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.nda_.image03_Record": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "datalad.support.nda_.image03_fields": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.support.nda_.image03_file_fields": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datalad.support.nda_.lgr": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.support.nda_.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "datalad.support.network": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.network.lgr",
    "datalad.support.network.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.network.DataLadRI": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "datalad.support.network.RegexBasedURLMixin",
    "datalad.support.network.re"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.DataLadRI.as_git_url": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "NotImplementedError",
    "datalad.consts.DATASETS_TOPURL",
    "six.moves.urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.DataLadRI.as_str": {
  "data": {
   "lineno": 754
  },
  "type": "function"
 },
 "datalad.support.network.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.support.network.ParseResult": {
  "data": {
   "shadows": "six.moves.urllib.parse.ParseResult"
  },
  "type": "import"
 },
 "datalad.support.network.PathRI": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "datalad.support.network.RI"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.PathRI._str_to_fields": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "classmethod",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.PathRI.as_str": {
  "data": {
   "lineno": 664
  },
  "type": "function"
 },
 "datalad.support.network.PathRI.localpath": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.Providers": {
  "data": {
   "shadows": "datalad.downloaders.providers.Providers"
  },
  "type": "import"
 },
 "datalad.support.network.RI": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.RI.__eq__": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.__getattribute__": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.__init__": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "datalad.support.network.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.__ne__": {
  "data": {
   "lineno": 509
  },
  "type": "function"
 },
 "datalad.support.network.RI.__new__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.network.RI",
    "datalad.support.network._guess_ri_cls",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.__nonzero__": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.__repr__": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.__setattr__": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.__str__": {
  "data": {
   "lineno": 435
  },
  "type": "function"
 },
 "datalad.support.network.RI._get_blank_fields": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "classmethod",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI._set_from_fields": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "set",
    "six.moves.urllib.parse.urlencode",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.fields": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.from_str": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls._str_to_fields"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.localpath": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RegexBasedURLMixin": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.RegexBasedURLMixin._normalize_fields": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RegexBasedURLMixin._str_to_fields": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "cls._REGEX.match",
    "cls._get_blank_fields",
    "cls._normalize_fields",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.Request": {
  "data": {
   "shadows": "six.moves.urllib.request.Request"
  },
  "type": "import"
 },
 "datalad.support.network.SSHRI": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "datalad.support.network.RegexBasedURLMixin",
    "datalad.support.network.re"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.SSHRI._normalize_fields": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "classmethod",
    "unescape_ssh_path"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.SSHRI.as_str": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "escape_ssh_path"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.Session": {
  "data": {
   "shadows": "requests.Session"
  },
  "type": "import"
 },
 "datalad.support.network.SimpleURLStamper": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.SimpleURLStamper.__call__": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "datalad.support.network.get_url_response_stamp",
    "datalad.support.network.retry_urlopen",
    "dict",
    "six.moves.urllib.request.Request"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.SimpleURLStamper.__init__": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "datalad.support.network.URL": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "datalad.support.network.RI"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.URL._fields_to_pr": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "classmethod",
    "cls._FIELDS",
    "six.moves.urllib.parse.ParseResult",
    "six.moves.urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL._parse_qs": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "len",
    "list",
    "six.moves.urllib.parse.parse_qsl"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL._pr_to_fields": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "_getattr",
    "classmethod",
    "cls._FIELDS",
    "datalad.support.network.lgr",
    "datalad.support.network.re",
    "getattr",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL._pr_to_fields._getattr": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL._str_to_fields": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "classmethod",
    "datalad.support.network.URL",
    "six.moves.urllib.parse.unquote",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL.as_str": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "six.moves.urllib.parse.urlunparse"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL.fragment_dict": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL.localpath": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL.query_dict": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL.to_pr": {
  "data": {
   "lineno": 553
  },
  "type": "function"
 },
 "datalad.support.network.URLError": {
  "data": {
   "shadows": "six.moves.urllib.error.URLError"
  },
  "type": "import"
 },
 "datalad.support.network._SSH_ESCAPED_CHARACTERS": {
  "data": {
   "lineno": 775
  },
  "type": "constant"
 },
 "datalad.support.network.__urlopen_requests": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "isinstance",
    "requests.Session",
    "six.moves.urllib.request.Request"
   ]
  },
  "type": "function"
 },
 "datalad.support.network._guess_ri_cls": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "_split_colon",
    "datalad.support.cache.lru_cache",
    "datalad.support.network.lgr",
    "len",
    "ntpath.splitdrive",
    "six.moves.urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "datalad.support.network._split_colon": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "datalad.support.network.re"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.support.network.assure_dir": {
  "data": {
   "shadows": "datalad.utils.assure_dir"
  },
  "type": "import"
 },
 "datalad.support.network.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "datalad.support.network.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.support.network.consts": {
  "data": {
   "shadows": "datalad.consts"
  },
  "type": "import"
 },
 "datalad.support.network.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.support.network.dlurljoin": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "datalad.support.network.os",
    "six.moves.urllib.parse.urljoin",
    "six.moves.urllib.parse.urlparse",
    "six.moves.urllib.parse.urlunparse"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.email.utils": {
  "data": {
   "shadows": "email.utils"
  },
  "type": "import"
 },
 "datalad.support.network.escape_ssh_path": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "datalad.support.network._SSH_ESCAPED_CHARACTERS"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.network.get_cached_url_content": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "Exception",
    "datalad.cfg.get",
    "datalad.dochelpers.exc_str",
    "datalad.downloaders.providers.Providers.from_config_files",
    "datalad.support.network.get_url_cache_filename",
    "datalad.support.network.lgr",
    "datalad.support.network.os",
    "datalad.support.network.pickle",
    "datalad.support.network.time",
    "datalad.utils.assure_dir",
    "fetcher",
    "float",
    "open",
    "os.path.dirname"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_local_file_url": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "datalad.support.network.URL",
    "datalad.support.network.lgr",
    "datalad.utils.on_windows",
    "os.path.abspath",
    "os.path.isabs",
    "six.moves.urllib.parse.quote",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_response_disposition_filename": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dict",
    "map"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_tld": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError",
    "six.moves.urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_url_cache_filename": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "datalad.cfg.obtain",
    "datalad.support.network.pickle",
    "hashlib.md5",
    "os.path.join",
    "six.moves.urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_url_disposition_filename": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.support.network.get_response_disposition_filename",
    "retry_urlopen",
    "six.moves.urllib.request.Request",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_url_filename": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "datalad.support.network.get_url_disposition_filename",
    "datalad.support.network.get_url_straight_filename"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_url_response_stamp": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "datalad.support.network.calendar",
    "dict",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_url_straight_filename": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "len",
    "six.moves.urllib.parse.unquote",
    "six.moves.urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.is_datalad_compat_ri": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "datalad.support.network.DataLadRI",
    "datalad.support.network.RI",
    "datalad.support.network.SSHRI",
    "datalad.support.network.URL",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.is_ssh": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "datalad.support.network.SSHRI",
    "datalad.support.network.URL",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.is_url": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "datalad.support.network.SSHRI",
    "datalad.support.network.URL",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.is_url_quoted": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "six.moves.urllib.parse.unquote"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.support.network.iso8601": {
  "data": {
   "shadows": "iso8601"
  },
  "type": "import"
 },
 "datalad.support.network.iso8601_to_epoch": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "datalad.support.network.calendar",
    "datalad.support.network.iso8601"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "datalad.support.network.lgr": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.support.network.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.network.lru_cache": {
  "data": {
   "shadows": "datalad.support.cache.lru_cache"
  },
  "type": "import"
 },
 "datalad.support.network.md5": {
  "data": {
   "shadows": "hashlib.md5"
  },
  "type": "import"
 },
 "datalad.support.network.mktime_tz": {
  "data": {
   "shadows": "email.utils.mktime_tz"
  },
  "type": "import"
 },
 "datalad.support.network.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.support.network.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.network.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.network.parse_qsl": {
  "data": {
   "shadows": "six.moves.urllib.parse.parse_qsl"
  },
  "type": "import"
 },
 "datalad.support.network.parse_url_opts": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "datalad.support.network.URL",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.parsedate_tz": {
  "data": {
   "shadows": "email.utils.parsedate_tz"
  },
  "type": "import"
 },
 "datalad.support.network.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "datalad.support.network.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.network.retry_urlopen": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "datalad.support.network.__urlopen_requests",
    "datalad.support.network.lgr",
    "range",
    "six.moves.urllib.error.URLError"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.rfc2822_to_epoch": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "email.utils.mktime_tz",
    "email.utils.parsedate_tz"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.same_website": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "isinstance",
    "six.moves.urllib.parse.urlparse",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "datalad.support.network.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.support.network.unescape_ssh_path": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "datalad.support.network._SSH_ESCAPED_CHARACTERS"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.urlencode": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlencode"
  },
  "type": "import"
 },
 "datalad.support.network.urljoin": {
  "data": {
   "shadows": "six.moves.urllib.parse.urljoin"
  },
  "type": "import"
 },
 "datalad.support.network.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlparse"
  },
  "type": "import"
 },
 "datalad.support.network.urlquote": {
  "data": {
   "shadows": "six.moves.urllib.parse.quote"
  },
  "type": "import"
 },
 "datalad.support.network.urlsplit": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlsplit"
  },
  "type": "import"
 },
 "datalad.support.network.urlunparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlunparse"
  },
  "type": "import"
 },
 "datalad.support.network.urlunquote": {
  "data": {
   "shadows": "six.moves.urllib.parse.unquote"
  },
  "type": "import"
 },
 "datalad.support.network.win_splitdrive": {
  "data": {
   "shadows": "ntpath.splitdrive"
  },
  "type": "import"
 },
 "datalad.support.param": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.param.re"
   ]
  },
  "type": "module"
 },
 "datalad.support.param.Parameter": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datalad.support.param.argparse",
    "inspect.getargspec",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.param.Parameter.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "expand_constraint_spec",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.param.Parameter.get_autodoc": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "datalad.support.param._whitespace_re",
    "datalad.support.param.textwrap",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.param.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.support.param._whitespace_re": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datalad.support.param.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "datalad.support.param.getargspec": {
  "data": {
   "shadows": "inspect.getargspec"
  },
  "type": "import"
 },
 "datalad.support.param.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.param.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "datalad.support.protocol": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.protocol.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.protocol.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "datalad.support.protocol.DryRunExternalsProtocol": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "datalad.support.protocol.DryRunProtocol"
   ]
  },
  "type": "class"
 },
 "datalad.support.protocol.DryRunExternalsProtocol.__init__": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "datalad.support.protocol.DryRunExternalsProtocol",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunExternalsProtocol.do_execute_callables": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunExternalsProtocol.records_callables": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "datalad.support.protocol.ProtocolInterface"
   ]
  },
  "type": "class"
 },
 "datalad.support.protocol.DryRunProtocol.__init__": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "datalad.support.protocol.DryRunProtocol",
    "os.linesep",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol.add_section": {
  "data": {
   "lineno": 231
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol.do_execute_callables": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol.do_execute_ext_commands": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol.end_section": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol.records_callables": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol.records_ext_commands": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol.start_section": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeExternalsProtocol": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "datalad.support.protocol.ExecutionTimeProtocol"
   ]
  },
  "type": "class"
 },
 "datalad.support.protocol.ExecutionTimeExternalsProtocol.records_callables": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "datalad.support.protocol.ProtocolInterface"
   ]
  },
  "type": "class"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.__init__": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "datalad.support.protocol.ExecutionTimeProtocol",
    "os.linesep",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.add_section": {
  "data": {
   "lineno": 297
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.do_execute_callables": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.do_execute_ext_commands": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.end_section": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "datalad.support.protocol.time"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.records_callables": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.records_ext_commands": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.start_section": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "datalad.support.protocol.time",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "datalad.support.protocol.ProtocolInterface"
   ]
  },
  "type": "class"
 },
 "datalad.support.protocol.NullProtocol.__init__": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "datalad.support.protocol.NullProtocol",
    "os.linesep",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol.add_section": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol.do_execute_callables": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol.do_execute_ext_commands": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol.end_section": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol.records_callables": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol.records_ext_commands": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol.start_section": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object",
    "six.add_metaclass"
   ]
  },
  "type": "class"
 },
 "datalad.support.protocol.ProtocolInterface.__getitem__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.__iter__": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.__len__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.__str__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "os.linesep"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.add_section": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.do_execute_callables": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.do_execute_ext_commands": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.end_section": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.records_callables": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.records_ext_commands": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.start_section": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.write_to_file": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "datalad.support.protocol.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "datalad.support.protocol.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "datalad.support.protocol.lgr": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "datalad.support.protocol.linesep": {
  "data": {
   "shadows": "os.linesep"
  },
  "type": "import"
 },
 "datalad.support.protocol.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.protocol.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.support.repo": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.repo.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.repo.Flyweight": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "datalad.support.repo.Flyweight.__call__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "InvalidInstanceRequestError",
    "type.__call__"
   ]
  },
  "type": "function"
 },
 "datalad.support.repo.Flyweight._flyweight_id_from_args": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "datalad.support.repo.Flyweight._flyweight_invalid": {
  "data": {
   "lineno": 93
  },
  "type": "function"
 },
 "datalad.support.repo.Flyweight._flyweight_reject": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "datalad.support.repo.RepoInterface": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.repo.RepoInterface.sth_like_file_has_content": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.support.repo.lgr": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.support.repo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.s3": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "ValueError",
    "__name__",
    "boto.exception.S3ResponseError",
    "boto.s3.connection.OrdinaryCallingFormat",
    "boto.s3.key.Key",
    "datalad.dochelpers.exc_str",
    "datalad.support.s3.boto",
    "datalad.support.s3.lgr",
    "datalad.support.s3.logging",
    "datalad.support.s3.name",
    "datalad.support.s3.sys",
    "isinstance",
    "len",
    "locals",
    "print"
   ]
  },
  "type": "module"
 },
 "datalad.support.s3.AWS_S3": {
  "data": {
   "shadows": "datalad.downloaders.credentials.AWS_S3"
  },
  "type": "import"
 },
 "datalad.support.s3.AccessDeniedError": {
  "data": {
   "shadows": "datalad.support.exceptions.AccessDeniedError"
  },
  "type": "import"
 },
 "datalad.support.s3.DownloadError": {
  "data": {
   "shadows": "datalad.support.exceptions.DownloadError"
  },
  "type": "import"
 },
 "datalad.support.s3.Key": {
  "data": {
   "shadows": "boto.s3.key.Key"
  },
  "type": "import"
 },
 "datalad.support.s3.OrdinaryCallingFormat": {
  "data": {
   "shadows": "boto.s3.connection.OrdinaryCallingFormat"
  },
  "type": "import"
 },
 "datalad.support.s3.Request": {
  "data": {
   "shadows": "six.moves.urllib.request.Request"
  },
  "type": "import"
 },
 "datalad.support.s3.S3ResponseError": {
  "data": {
   "shadows": "boto.exception.S3ResponseError"
  },
  "type": "import"
 },
 "datalad.support.s3.S3_ADMIN_CREDENTIAL": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "datalad.support.s3.S3_TEST_CREDENTIAL": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "datalad.support.s3.VersionedFilesPool": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.s3.VersionedFilesPool.__call__": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "boto.s3.key.Key",
    "datalad.support.s3.mimetypes",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.VersionedFilesPool.__init__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "datalad.support.s3.VersionedFilesPool.bucket": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.VersionedFilesPool.reset_version": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "datalad.support.s3.__docformat__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datalad.support.s3._gen_bucket_test0": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "datalad.support.s3.VersionedFilesPool",
    "datalad.support.s3.gen_test_bucket",
    "datalad.support.s3.lgr",
    "datalad.support.s3.set_bucket_public_access_policy",
    "files",
    "files.reset_version",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3._get_bucket_connection": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "credential",
    "datalad.downloaders.credentials.AWS_S3",
    "datalad.support.s3.boto"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3._handle_exception": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "datalad.dochelpers.exc_str",
    "datalad.support.exceptions.AccessDeniedError",
    "datalad.support.exceptions.DownloadError"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.boto": {
  "data": {
   "shadows": "boto"
  },
  "type": "import"
 },
 "datalad.support.s3.datalad.log": {
  "data": {
   "shadows": "datalad.log"
  },
  "type": "import"
 },
 "datalad.support.s3.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.s3.gen_bucket_test0_nonversioned": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "datalad.support.s3._gen_bucket_test0"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.gen_bucket_test0_versioned": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "datalad.support.s3._gen_bucket_test0"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.gen_bucket_test1_dirs": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "datalad.support.s3.VersionedFilesPool",
    "datalad.support.s3.gen_test_bucket",
    "datalad.support.s3.set_bucket_public_access_policy",
    "files"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.gen_bucket_test2_obscurenames_versioned": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "datalad.support.s3.VersionedFilesPool",
    "datalad.support.s3.gen_test_bucket",
    "datalad.support.s3.set_bucket_public_access_policy",
    "files"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.gen_test_bucket": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "datalad.support.s3.S3_ADMIN_CREDENTIAL",
    "datalad.support.s3._get_bucket_connection",
    "datalad.support.s3.lgr",
    "datalad.support.s3.prune_and_delete_bucket"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.get_bucket": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "boto.exception.S3ResponseError",
    "datalad.dochelpers.exc_str",
    "datalad.support.s3._handle_exception",
    "datalad.support.s3.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.get_key_url": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.network.urlquote"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.get_versioned_url": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "ValueError",
    "boto.exception.S3ResponseError",
    "boto.s3.key.Key",
    "isinstance",
    "six.moves.urllib.parse.urlparse",
    "six.moves.urllib.parse.urlunparse",
    "six.moves.urllib.request.Request",
    "six.moves.urllib.request.urlopen",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.lgr": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.support.s3.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.s3.mimetypes": {
  "data": {
   "shadows": "mimetypes"
  },
  "type": "import"
 },
 "datalad.support.s3.name": {
  "data": {
   "lineno": 411
  },
  "type": "constant"
 },
 "datalad.support.s3.prune_and_delete_bucket": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "datalad.support.s3.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.set_bucket_public_access_policy": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "datalad.support.s3.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "datalad.support.s3.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.s3.urlopen": {
  "data": {
   "shadows": "six.moves.urllib.request.urlopen"
  },
  "type": "import"
 },
 "datalad.support.s3.urlparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlparse"
  },
  "type": "import"
 },
 "datalad.support.s3.urlquote": {
  "data": {
   "shadows": "datalad.support.network.urlquote"
  },
  "type": "import"
 },
 "datalad.support.s3.urlunparse": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlunparse"
  },
  "type": "import"
 },
 "datalad.support.sshconnector": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datalad.support.sshconnector.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.sshconnector.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.SSHConnection": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "datalad.utils.auto_repr",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.sshconnector.SSHConnection.__call__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "RuntimeError",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHConnection.__init__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.network.SSHRI",
    "datalad.support.network.is_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHConnection.close": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError",
    "datalad.support.sshconnector.lgr",
    "os.path.exists",
    "os.remove"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHConnection.copy": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHConnection.get_annex_installdir": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "datalad.dochelpers.exc_str",
    "datalad.support.exceptions.CommandError",
    "datalad.support.sshconnector.lgr",
    "open",
    "self",
    "self._remote_props"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHConnection.get_annex_version": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "datalad.dochelpers.exc_str",
    "datalad.support.exceptions.CommandError",
    "datalad.support.sshconnector.lgr",
    "self",
    "self._remote_props"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHConnection.get_git_version": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "datalad.dochelpers.exc_str",
    "datalad.support.exceptions.CommandError",
    "datalad.support.sshconnector.lgr",
    "self",
    "self._remote_props"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHConnection.is_open": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError",
    "datalad.support.sshconnector.lgr",
    "open",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHConnection.open": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "datalad.support.sshconnector.lgr",
    "subprocess.Popen"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHConnection.runner": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHManager": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "datalad.utils.auto_repr",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.sshconnector.SSHManager.__init__": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "datalad.utils.not_supported_on_windows",
    "dict",
    "self._connections",
    "self._prev_connections",
    "self._socket_dir"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHManager.assure_initialized": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ConfigManager",
    "OSError",
    "datalad.dochelpers.exc_str",
    "datalad.support.sshconnector.lgr",
    "datalad.utils.assure_dir",
    "len",
    "os.chmod",
    "os.listdir",
    "os.path.isdir",
    "os.path.join",
    "self._prev_connections",
    "self._socket_dir",
    "self.socket_dir"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHManager.close": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "Exception",
    "datalad.dochelpers.exc_str",
    "datalad.support.sshconnector.lgr",
    "dict",
    "f",
    "len",
    "os.path.exists",
    "self._connections",
    "self._connections.close",
    "self._connections.ctrl_path",
    "self._prev_connections"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHManager.get_connection": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.network.RI",
    "datalad.support.network.is_ssh",
    "datalad.support.sshconnector.SSHConnection",
    "datalad.support.sshconnector.get_connection_hash",
    "datalad.support.sshconnector.lgr",
    "isinstance",
    "self._connections",
    "self.socket_dir"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHManager.socket_dir": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "property",
    "self._socket_dir",
    "self.assure_initialized"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.SSHRI": {
  "data": {
   "shadows": "datalad.support.network.SSHRI"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.assure_dir": {
  "data": {
   "shadows": "datalad.utils.assure_dir"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.auto_repr": {
  "data": {
   "shadows": "datalad.utils.auto_repr"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.chmod": {
  "data": {
   "shadows": "os.chmod"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.get_connection_hash": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "hashlib.md5",
    "socket.gethostname"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshconnector.gethostname": {
  "data": {
   "shadows": "socket.gethostname"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.is_ssh": {
  "data": {
   "shadows": "datalad.support.network.is_ssh"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.lgr": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "datalad.support.sshconnector.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.md5": {
  "data": {
   "shadows": "hashlib.md5"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.not_supported_on_windows": {
  "data": {
   "shadows": "datalad.utils.not_supported_on_windows"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "datalad.support.sshconnector.sh_quote": {
  "data": {
   "shadows": "pipes.quote"
  },
  "type": "import"
 },
 "datalad.support.sshrun": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.sshrun.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.sshrun.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.support.sshrun.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.support.sshrun.SSHRun": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.support.sshrun.SSHRun.__call__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.ssh_manager.get_connection",
    "datalad.support.sshrun.lgr",
    "datalad.support.sshrun.os",
    "datalad.support.sshrun.shlex",
    "datalad.support.sshrun.sys",
    "len",
    "open",
    "repr",
    "ssh",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshrun.__docformat__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datalad.support.sshrun.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.support.sshrun.lgr": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "datalad.support.sshrun.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.sshrun.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.sshrun.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "datalad.support.sshrun.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.support.sshrun.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.stats": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.stats.humanize"
   ]
  },
  "type": "module"
 },
 "datalad.support.stats.ActivityStats": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "datalad.support.stats._COUNTS",
    "datalad.support.stats._LISTS",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.stats.ActivityStats.__add__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "datalad.support.stats.ActivityStats"
   ]
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.__eq__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.__getattribute__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datalad.support.stats.ActivityStats",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.__iadd__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.__ne__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.__repr__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.__setattr__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "datalad.support.stats.ActivityStats",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats._get_updated_total": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats._reset_values": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "datalad.support.stats._COUNTS",
    "datalad.support.stats._LISTS"
   ]
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.as_dict": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.as_str": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.stats._FORMATTERS",
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.get_total": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.increment": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.reset": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "datalad.support.stats._COUNTS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "datalad.support.stats._FORMATTERS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "datalad.support.stats._LISTS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datalad.support.stats.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.support.stats.humanize": {
  "data": {
   "shadows": "humanize"
  },
  "type": "import"
 },
 "datalad.support.status": {
  "data": {},
  "type": "module"
 },
 "datalad.support.status.FileStatus": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.status.FileStatus.__eq__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplemented",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.status.FileStatus.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "datalad.support.status.FileStatus.__ne__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "NotImplemented",
    "RuntimeError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.status.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.support.strings": {
  "data": {},
  "type": "module"
 },
 "datalad.support.strings.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.support.strings.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.support.strings.apply_replacement_rules": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "datalad.support.strings.get_replacement_dict",
    "datalad.support.strings.re"
   ]
  },
  "type": "function"
 },
 "datalad.support.strings.binary_type": {
  "data": {
   "shadows": "six.binary_type"
  },
  "type": "import"
 },
 "datalad.support.strings.get_replacement_dict": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "isinstance",
    "len",
    "list",
    "repr",
    "six.binary_type",
    "six.text_type",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.strings.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.strings.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "datalad.support.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_annexrepo": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "datalad.support.tests.test_annexrepo.AnnexBatchCommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.AnnexBatchCommandError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.CommandNotAvailableError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandNotAvailableError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.FileInGitError": {
  "data": {
   "shadows": "datalad.support.exceptions.FileInGitError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.FileNotInAnnexError": {
  "data": {
   "shadows": "datalad.support.exceptions.FileNotInAnnexError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.FileNotInRepositoryError": {
  "data": {
   "shadows": "datalad.support.exceptions.FileNotInRepositoryError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.GitCommandError": {
  "data": {
   "shadows": "git.GitCommandError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.MissingExternalDependency": {
  "data": {
   "shadows": "datalad.support.exceptions.MissingExternalDependency"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.OutOfSpaceError": {
  "data": {
   "shadows": "datalad.support.exceptions.OutOfSpaceError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.OutdatedExternalDependency": {
  "data": {
   "shadows": "datalad.support.exceptions.OutdatedExternalDependency"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ProcessAnnexProgressIndicators": {
  "data": {
   "shadows": "datalad.support.annexrepo.ProcessAnnexProgressIndicators"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.RemoteNotAvailableError": {
  "data": {
   "shadows": "datalad.support.exceptions.RemoteNotAvailableError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.SilentConsoleLog": {
  "data": {
   "shadows": "datalad.ui.dialog.SilentConsoleLog"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.__test_get_md5s": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.tests.test_annexrepo.tree1args",
    "datalad.tests.utils.find_files",
    "datalad.tests.utils.with_tree",
    "os.path.basename",
    "print"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo._test_AnnexRepo_get_contentlocation": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo._test_status": {
  "data": {
   "lineno": 1682,
   "symbols_in_volume": [
    "all",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.utils.rmtree",
    "len",
    "open",
    "os.path.curdir",
    "os.path.join",
    "super",
    "sync_wrapper"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo._test_status.sync_wrapper": {
  "data": {
   "lineno": 1687,
   "symbols_in_volume": [
    "datalad.lgr",
    "datalad.lgr.warning",
    "datalad.support.exceptions.CommandError",
    "datalad.support.tests.test_annexrepo.logging"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.assert_cwd_unchanged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_cwd_unchanged"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_is": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_is_instance": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_not_is_instance": {
  "data": {
   "shadows": "nose.tools.assert_not_is_instance"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.deq_": {
  "data": {
   "shadows": "datalad.tests.utils.assert_dict_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.find_files": {
  "data": {
   "shadows": "datalad.tests.utils.find_files"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.get_connection_hash": {
  "data": {
   "shadows": "datalad.support.sshconnector.get_connection_hash"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.get_most_obscure_supported_name": {
  "data": {
   "shadows": "datalad.tests.utils.get_most_obscure_supported_name"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.git": {
  "data": {
   "shadows": "git"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ignore_nose_capturing_stdout": {
  "data": {
   "shadows": "datalad.tests.utils.ignore_nose_capturing_stdout"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.lgr": {
  "data": {
   "shadows": "datalad.lgr"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.linux_distribution_name": {
  "data": {
   "shadows": "datalad.utils.linux_distribution_name"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.local_testrepo_flavors": {
  "data": {
   "shadows": "datalad.tests.utils.local_testrepo_flavors"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.mkdir": {
  "data": {
   "shadows": "os.mkdir"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ok_annex_get": {
  "data": {
   "shadows": "datalad.tests.utils.ok_annex_get"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ok_clean_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_clean_git"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ok_git_config_not_empty": {
  "data": {
   "shadows": "datalad.tests.utils.ok_git_config_not_empty"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_add_submodule": {
  "data": {
   "lineno": 1609,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_add_to_annex": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_add_to_git": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.FileInGitError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.known_failure_v6",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_add_unexpected_direct_mode": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.tests.test_annexrepo.logging",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_testrepos",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_addurl_to_file_batched": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo._unique_instances.clear",
    "datalad.support.exceptions.AnnexBatchCommandError",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "len",
    "os.path.join",
    "shutil.copyfile",
    "six.moves.urllib.parse.urljoin",
    "six.moves.urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_always_commit": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.with_tempfile",
    "len",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_annex_proxy": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.exceptions.CommandError",
    "datalad.support.exceptions.CommandNotAvailableError",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_backend_option": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.tests.test_annexrepo.tree1args",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_commit": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datalad.support.exceptions.FileNotInRepositoryError",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_crippled_filesystem": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_dirty": {
  "data": {
   "lineno": 1632,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_file_has_content": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_annex_get",
    "datalad.tests.utils.with_batch_direct",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_flyweight": {
  "data": {
   "lineno": 1561,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "nose.tools.assert_not_is_instance",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_flyweight_monitoring_inode": {
  "data": {
   "lineno": 2181,
   "symbols_in_volume": [
    "check_repo_deals_with_inode_change",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "mock.patch.object",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get.check_run": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "orig_run"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_contentlocation": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "datalad.support.tests.test_annexrepo._test_AnnexRepo_get_contentlocation"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_corresponding_branch": {
  "data": {
   "lineno": 2135,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_file_backend": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.exceptions.CommandNotAvailableError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.ok_annex_get",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_file_key": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "IOError",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.exceptions.FileInGitError",
    "datalad.support.exceptions.FileNotInAnnexError",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_outofspace": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.OutOfSpaceError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_re_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "mock.patch.object",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_outofspace.raise_cmderror": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_remote_na": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.RemoteNotAvailableError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_submodules": {
  "data": {
   "lineno": 1627,
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.known_failure_v6"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_toppath": {
  "data": {
   "lineno": 1590,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.get_toppath",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.join",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_tracking_branch": {
  "data": {
   "lineno": 2154,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_instance_brand_new": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_instance_from_clone": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.tests.test_annexrepo.git",
    "datalad.support.tests.test_annexrepo.logging",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "git.GitCommandError"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_instance_from_existing": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.ignore_nose_capturing_stdout",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_is_direct_mode": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_is_direct_mode_gitrepo": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.on_windows",
    "os.mkdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_is_managed_branch": {
  "data": {
   "lineno": 2164,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_is_under_annex": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_annex_get",
    "datalad.tests.utils.with_batch_direct",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_metadata": {
  "data": {
   "lineno": 2046,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "dict",
    "len",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_migrating_backends": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.exceptions.CommandNotAvailableError",
    "datalad.support.tests.test_annexrepo.gc",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.ok_annex_get",
    "datalad.tests.utils.ok_git_config_not_empty",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_on_uninited_annex": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.exists",
    "os.path.join",
    "runner"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_set_direct_mode": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.exceptions.CommandError",
    "datalad.support.exceptions.CommandNotAvailableError",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_set_remote_url": {
  "data": {
   "lineno": 1996,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_status": {
  "data": {
   "lineno": 1975,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.tests.test_annexrepo._test_status",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_update_submodule": {
  "data": {
   "lineno": 1623,
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_web_remote": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "isinstance",
    "len",
    "list",
    "os.path.curdir",
    "os.path.join",
    "os.path.pardir",
    "set",
    "six.moves.urllib.parse.urljoin",
    "six.moves.urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_ProcessAnnexProgressIndicators": {
  "data": {
   "lineno": 1461,
   "symbols_in_volume": [
    "datalad.support.annexrepo.ProcessAnnexProgressIndicators",
    "datalad.tests.utils.assert_is",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.swallow_outputs",
    "datalad.ui.dialog.SilentConsoleLog",
    "datalad.ui.ui.ui",
    "isinstance",
    "len",
    "proc",
    "proc.finish",
    "proc.pbars",
    "proc.total_pbar",
    "proc.total_pbar.current",
    "proc.total_pbar.total"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_add_no_dotfiles": {
  "data": {
   "lineno": 1366,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join",
    "print"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_backends": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.rmtree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_copy_to": {
  "data": {
   "lineno": 1189,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.exceptions.FileInGitError",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "mock.patch.object",
    "orig_run"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_copy_to.fail_to_copy": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError",
    "orig_run"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_copy_to.fail_to_copy_get_expected": {
  "data": {
   "lineno": 1249
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_copy_to.ok_copy": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_in"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_drop": {
  "data": {
   "lineno": 1262,
   "symbols_in_volume": [
    "TypeError",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.exceptions.CommandError",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_remove": {
  "data": {
   "lineno": 1302,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_testrepos",
    "len",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_ssh": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "datalad.lgr.debug",
    "datalad.ssh_manager._connections",
    "datalad.ssh_manager.socket_dir",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.sshconnector.get_connection_hash",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_version_handling": {
  "data": {
   "lineno": 1397,
   "symbols_in_volume": [
    "OSError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.GIT_ANNEX_MIN_VERSION",
    "datalad.support.annexrepo.AnnexRepo._check_git_annex_version",
    "datalad.support.annexrepo.AnnexRepo.git_annex_version",
    "datalad.support.exceptions.MissingExternalDependency",
    "datalad.support.exceptions.OutdatedExternalDependency",
    "datalad.support.external_versions.external_versions",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.linux_distribution_name",
    "datalad.utils.rmtree",
    "mock.patch.object",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_change_description": {
  "data": {
   "lineno": 2121,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_dropkey": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.tests.test_annexrepo.tree1_md5e_keys",
    "datalad.support.tests.test_annexrepo.tree1args",
    "datalad.tests.utils.with_batch_direct",
    "datalad.tests.utils.with_tree",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_fake_is_not_special": {
  "data": {
   "lineno": 2188,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.RemoteNotAvailableError",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_get_description": {
  "data": {
   "lineno": 1530,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_not_equal",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_is_available": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.with_batch_direct",
    "datalad.tests.utils.with_testrepos",
    "functools.partial",
    "is_available",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_repo_version": {
  "data": {
   "lineno": 1168,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_clean_git",
    "datalad.tests.utils.with_tempfile",
    "mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_wanted": {
  "data": {
   "lineno": 2019,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.tree1_md5e_keys": {
  "data": {
   "lineno": 536
  },
  "type": "constant"
 },
 "datalad.support.tests.test_annexrepo.tree1args": {
  "data": {
   "lineno": 527
  },
  "type": "constant"
 },
 "datalad.support.tests.test_annexrepo.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.urljoin": {
  "data": {
   "shadows": "six.moves.urllib.parse.urljoin"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.urlsplit": {
  "data": {
   "shadows": "six.moves.urllib.parse.urlsplit"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.with_batch_direct": {
  "data": {
   "shadows": "datalad.tests.utils.with_batch_direct"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_cache": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_cache.test_DictCache": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "DictCache",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_digests": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_digests.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.tests.test_digests.test_digester": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Digester",
    "assert_equal",
    "chr",
    "digester",
    "os.path.join",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions": {
  "data": {
   "symbols_in_volume": [
    "six.PY3"
   ]
  },
  "type": "module"
 },
 "datalad.support.tests.test_external_versions.PY3": {
  "data": {
   "shadows": "six.PY3"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions._test_annex_version_comparison": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ExternalVersions",
    "_runner",
    "datalad.support.tests.test_external_versions.cmp",
    "mock.patch",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions._test_annex_version_comparison._runner": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.tests.test_external_versions._test_annex_version_comparison._runner.run": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions._test_external": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "exc_str",
    "exec",
    "globals",
    "locals",
    "nose.SkipTest",
    "nose.tools.assert_greater"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions._test_list_tuple": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ExternalVersions._deduce_version",
    "nose.tools.assert_equal",
    "nose.tools.assert_greater"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.assert_greater": {
  "data": {
   "shadows": "nose.tools.assert_greater"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.assert_greater_equal": {
  "data": {
   "shadows": "nose.tools.assert_greater_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.assert_in": {
  "data": {
   "shadows": "nose.tools.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.cmp": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.linesep": {
  "data": {
   "shadows": "os.linesep"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.mod": {
  "data": {
   "shadows": "datalad.tests.mod"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.test_ancient_annex": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ExternalVersions",
    "_runner",
    "mock.patch",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_ancient_annex._runner": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.tests.test_external_versions.test_ancient_annex._runner.run": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_annex_version_comparison": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "datalad.support.tests.test_external_versions._test_annex_version_comparison",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_custom_versions": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ExternalVersions",
    "isinstance",
    "nose.tools.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_external_versions_basic": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ExternalVersions",
    "TypeError",
    "datalad.support.tests.test_external_versions.cmp",
    "datalad.tests.mod",
    "datalad.tests.mod.__version__",
    "isinstance",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_greater",
    "nose.tools.assert_greater_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_external_versions_popular_packages": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ExternalVersions",
    "datalad.support.tests.test_external_versions._test_external",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "os.linesep"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_external_versions_rogue_module": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ExternalVersions",
    "create_tree",
    "datalad.support.tests.test_external_versions.logging",
    "mock.patch",
    "nose.tools.assert_in",
    "nose.tools.assert_true",
    "os.linesep",
    "swallow_logs",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_external_versions_unknown": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ExternalVersions.UNKNOWN",
    "nose.tools.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_humanize": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ExternalVersions"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_list_tuple": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "datalad.support.tests.test_external_versions._test_list_tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_list_tuple.thing_with_list_version": {
  "data": {
   "lineno": 205
  },
  "type": "class"
 },
 "datalad.support.tests.test_external_versions.test_list_tuple.thing_with_tuple_version": {
  "data": {
   "lineno": 202
  },
  "type": "class"
 },
 "datalad.support.tests.test_external_versions.test_system_ssh_version": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "ExternalVersions",
    "_runner",
    "mock.patch",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_system_ssh_version._runner": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.tests.test_external_versions.test_system_ssh_version._runner.run": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_gitrepo.BasicAnnexTestRepo": {
  "data": {
   "shadows": "datalad.tests.utils_testrepos.BasicAnnexTestRepo"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.assert_is_instance": {
  "data": {
   "shadows": "nose.tools.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.get_connection_hash": {
  "data": {
   "shadows": "datalad.support.sshconnector.get_connection_hash"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.get_local_file_url": {
  "data": {
   "shadows": "datalad.support.network.get_local_file_url"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo__get_files_history": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "GitRepo",
    "StopIteration",
    "assert_equal",
    "assert_raises",
    "next",
    "opj",
    "str",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_add": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "AssertionError",
    "GitRepo.clone",
    "assert_equal",
    "assert_in",
    "assert_raises",
    "get_most_obscure_supported_name",
    "ok_",
    "ok_clean_git",
    "open",
    "opj",
    "with_tempfile",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_add_submodule": {
  "data": {
   "lineno": 956,
   "symbols_in_volume": [
    "GitRepo",
    "eq_",
    "ok_clean_git",
    "opj",
    "with_tempfile",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_commit": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "GitRepo",
    "assert_raises",
    "eq_",
    "get_most_obscure_supported_name",
    "ok_",
    "ok_clean_git",
    "open",
    "opj",
    "to_options",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_count_objects": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "GitRepo",
    "dict",
    "eq_",
    "isinstance",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_dirty": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "GitRepo",
    "ok_",
    "open",
    "opj",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_equals": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "GitRepo",
    "assert_not_equal",
    "eq_",
    "ok_",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_fetch": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "GitRepo.clone",
    "assert_false",
    "assert_in",
    "eq_",
    "exists",
    "get_most_obscure_supported_name",
    "ok_clean_git",
    "open",
    "opj",
    "with_tempfile",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_files_decorator": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "_normalize_path",
    "assert_raises",
    "datalad.utils.getpwd",
    "eq_",
    "get_most_obscure_supported_name",
    "opj",
    "testclass"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_files_decorator.testclass": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_files_decorator.testclass.__init__": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "opj"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_files_decorator.testclass.decorated_many": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_files_decorator.testclass.decorated_one": {
  "data": {
   "lineno": 302
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_flyweight": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "GitRepo",
    "datalad.utils.chpwd",
    "nose.tools.assert_is_instance",
    "ok_",
    "relpath",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_flyweight_monitoring_inode": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "GitRepo",
    "check_repo_deals_with_inode_change",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_get_files": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "GitRepo.clone",
    "datalad.support.tests.test_gitrepo.os",
    "eq_",
    "open",
    "opj",
    "set",
    "with_tempfile",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_get_indexed_files": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "GitRepo.clone",
    "Runner",
    "assert_in",
    "bool",
    "filter",
    "list",
    "runner",
    "with_tempfile",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_get_merge_base": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "GitRepo",
    "ValueError",
    "assert_raises",
    "eq_",
    "len",
    "open",
    "opj",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_get_remote_url": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "GitRepo.clone",
    "eq_",
    "with_tempfile",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_get_submodules": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_get_toppath": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "GitRepo",
    "GitRepo.get_toppath",
    "datalad.support.tests.test_gitrepo.os",
    "eq_",
    "opj",
    "realpath",
    "with_tempfile",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_git_get_branch_commits": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "GitRepo",
    "SkipTest",
    "eq_",
    "len",
    "list",
    "open",
    "opj",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_gitignore": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "GitRepo",
    "assert_raises",
    "eq_",
    "f",
    "f.write",
    "open",
    "opj",
    "set",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_gitpy_injection": {
  "data": {
   "lineno": 1100,
   "symbols_in_volume": [
    "GitRepo",
    "assert_in",
    "assert_not_in",
    "assert_raises",
    "exc_str",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_init_options": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "GitRepo",
    "ok_",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_instance_from_clone": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "assert_raises",
    "assert_true",
    "exists",
    "nose.tools.assert_is_instance",
    "opj",
    "swallow_logs",
    "with_tempfile",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_instance_from_existing": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "GitRepo",
    "assert_true",
    "exists",
    "nose.tools.assert_is_instance",
    "opj",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_instance_from_not_existing": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "GitRepo",
    "assert_false",
    "assert_raises",
    "assert_true",
    "datalad.support.tests.test_gitrepo.os",
    "exists",
    "nose.tools.assert_is_instance",
    "ok_clean_git",
    "opj",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_invalid_path": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "datalad.utils.chpwd",
    "exists",
    "ok_",
    "opj",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_pull": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "GitRepo.clone",
    "assert_equal",
    "assert_true",
    "exists",
    "get_most_obscure_supported_name",
    "open",
    "opj",
    "set",
    "with_tempfile",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_push_n_checkout": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "GitRepo",
    "GitRepo.clone",
    "assert_true",
    "exists",
    "get_most_obscure_supported_name",
    "open",
    "opj",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_remote_add": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "GitRepo.clone",
    "assert_in",
    "eq_",
    "len",
    "with_tempfile",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_remote_remove": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "GitRepo.clone",
    "assert_in",
    "eq_",
    "len",
    "with_tempfile",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_remote_update": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "GitRepo",
    "eq_",
    "open",
    "opj",
    "set",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_remove": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "GitRepo",
    "eq_",
    "set",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_set_remote_url": {
  "data": {
   "lineno": 1180,
   "symbols_in_volume": [
    "GitRepo",
    "KeyError",
    "assert_equal",
    "assert_raises",
    "eq_",
    "set",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_ssh_fetch": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "GitRepo",
    "abspath",
    "assert_in",
    "datalad.ssh_manager._connections",
    "datalad.ssh_manager.socket_dir",
    "datalad.support.sshconnector.get_connection_hash",
    "eq_",
    "exists",
    "ok_",
    "ok_clean_git",
    "opj",
    "with_tempfile",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_ssh_pull": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "GitRepo",
    "abspath",
    "assert_in",
    "assert_not_in",
    "datalad.ssh_manager._connections",
    "datalad.ssh_manager.socket_dir",
    "datalad.support.sshconnector.get_connection_hash",
    "exists",
    "ok_",
    "ok_clean_git",
    "open",
    "opj",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_ssh_push": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "GitRepo",
    "abspath",
    "assert_in",
    "assert_not_in",
    "datalad.ssh_manager._connections",
    "datalad.ssh_manager.socket_dir",
    "datalad.support.sshconnector.get_connection_hash",
    "exists",
    "list",
    "ok_",
    "open",
    "opj",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_update_submodule": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_get_added_files_commit_msg": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "GitRepo._get_added_files_commit_msg",
    "eq_",
    "f"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_get_committed_date": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "GitRepo",
    "assert_equal",
    "eq_",
    "neq_",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_get_git_attributes": {
  "data": {
   "lineno": 1209,
   "symbols_in_volume": [
    "GitRepo",
    "create_tree",
    "eq_",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_get_missing": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "GitRepo",
    "datalad.support.tests.test_gitrepo.os",
    "eq_",
    "f",
    "f.write",
    "ok_clean_git",
    "open",
    "opj",
    "rmtree",
    "sorted",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_get_tags": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "GitRepo",
    "create_tree",
    "eq_",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_get_tracking_branch": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "GitRepo.clone",
    "eq_",
    "ok_",
    "with_tempfile",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_git_custom_calls": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "GitRepo",
    "assert_in",
    "assert_raises",
    "eq_",
    "f",
    "f.write",
    "ok_",
    "ok_clean_git",
    "open",
    "opj",
    "str",
    "swallow_logs",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_kwargs_to_options": {
  "data": {
   "lineno": 977,
   "symbols_in_volume": [
    "Some",
    "eq_",
    "isinstance",
    "list",
    "ok_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_kwargs_to_options.Some": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.tests.test_gitrepo.test_kwargs_to_options.Some.f_decorated_no_split": {
  "data": {
   "lineno": 985,
   "symbols_in_volume": [
    "kwargs_to_options"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_kwargs_to_options.Some.f_decorated_split": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "kwargs_to_options"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_normalize_path": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "GitRepo",
    "_normalize_path",
    "assert_cwd_unchanged",
    "assert_raises",
    "datalad.utils.chpwd",
    "datalad.utils.getpwd",
    "eq_",
    "opj",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_optimized_cloning": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "GitRepo",
    "GitRepo.clone",
    "_get_inodes",
    "assert_raises",
    "datalad.support.network.get_local_file_url",
    "eq_",
    "f",
    "f.write",
    "ok_clean_git",
    "open",
    "opj",
    "rmtree",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_optimized_cloning._get_inodes": {
  "data": {
   "lineno": 1076,
   "symbols_in_volume": [
    "datalad.support.tests.test_gitrepo.os",
    "dict",
    "glob.glob"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_split_remote_branch": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "eq_",
    "split_remote_branch"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_submodule_deinit": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "AnnexRepo",
    "GitRepo.is_valid_repo",
    "all",
    "assert_in",
    "assert_raises",
    "eq_",
    "f",
    "f.write",
    "ok_",
    "open",
    "opj",
    "swallow_logs",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_to_options": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "Some",
    "eq_",
    "to_options"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_to_options.Some": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.tests.test_gitrepo.test_to_options.Some.cmd_func": {
  "data": {
   "lineno": 1003
  },
  "type": "function"
 },
 "datalad.support.tests.test_json_py": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_json_py.JSONDecodeError": {
  "data": {
   "shadows": "datalad.support.json_py.JSONDecodeError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.load": {
  "data": {
   "shadows": "datalad.support.json_py.load"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.loads": {
  "data": {
   "shadows": "datalad.support.json_py.loads"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.test_load_screwy_unicode": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datalad.support.json_py.JSONDecodeError",
    "datalad.support.json_py.load",
    "datalad.support.tests.test_json_py.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_json_py.test_loads": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "datalad.support.json_py.JSONDecodeError",
    "datalad.support.json_py.loads",
    "datalad.support.tests.test_json_py.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_json_py.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_locking.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking.Queue": {
  "data": {
   "shadows": "multiprocessing.Queue"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking.ok_exists": {
  "data": {
   "shadows": "datalad.tests.utils.ok_exists"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking.test_lock_if_check_fails": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.with_tempfile",
    "lock_if_check_fails",
    "multiprocessing.Process",
    "multiprocessing.Queue",
    "open",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_locking.test_lock_if_check_fails.subproc": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "lock_if_check_fails"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_locking.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_network.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network._check_ri": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "RI",
    "ValueError",
    "cls",
    "cls._FIELDS",
    "datalad.support.tests.test_network.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.nok_",
    "datalad.tests.utils.swallow_logs",
    "eval",
    "getattr",
    "os.path.join",
    "repr",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network._test_get_url_straight_filename": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "get_url_straight_filename"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network._test_url_quote_path": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "PathRI",
    "RI",
    "cls",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.get_most_obscure_supported_name": {
  "data": {
   "shadows": "datalad.tests.utils.get_most_obscure_supported_name"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.neq_": {
  "data": {
   "shadows": "datalad.tests.utils.neq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.nok_": {
  "data": {
   "shadows": "datalad.tests.utils.nok_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.test_dlurljoin": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "dlurljoin"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_get_local_file_url_linux": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "get_local_file_url"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_get_response_disposition_filename": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "get_response_disposition_filename"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_get_tld": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "get_tld"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_get_url_path_on_fileurls": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "URL",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.skip_if_on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_get_url_straight_filename": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "datalad.support.tests.test_network._test_get_url_straight_filename"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_is_datalad_compat_ri": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "datalad.tests.utils.nok_",
    "datalad.tests.utils.ok_",
    "is_datalad_compat_ri"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_is_ssh": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "RI",
    "datalad.tests.utils.ok_",
    "is_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_is_url": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "RI",
    "datalad.tests.utils.nok_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_logs",
    "is_url"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_iso8601_to_epoch": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "iso8601_to_epoch"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_parse_url_opts": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "parse_url_opts"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_rfc2822_to_epoch": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "rfc2822_to_epoch"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_same_website": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "datalad.tests.utils.ok_",
    "same_website"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_split_colon": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "_split_colon",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_url_base": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "URL",
    "ValueError",
    "bool",
    "datalad.support.tests.test_network.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.nok_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_logs",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_url_compose_archive_one": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "URL",
    "collections.OrderedDict",
    "datalad.tests.utils.eq_",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_url_dicts": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "URL",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_url_eq": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "PathRI",
    "SSHRI",
    "URL",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.neq_",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_url_fragments_and_query": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "URL",
    "collections.OrderedDict",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_url_quote_path": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "PathRI",
    "SSHRI",
    "URL",
    "datalad.support.tests.test_network._test_url_quote_path"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_url_samples": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "PathRI",
    "RI",
    "SSHRI",
    "URL",
    "datalad.support.tests.test_network._check_ri",
    "datalad.support.tests.test_network.logging",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.swallow_logs",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_sshconnector.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.assert_is_instance": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.get_most_obscure_supported_name": {
  "data": {
   "shadows": "datalad.tests.utils.get_most_obscure_supported_name"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.getmtime": {
  "data": {
   "shadows": "os.path.getmtime"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_compound_cmds": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "SSHManager",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.skip_ssh",
    "ssh",
    "ssh.close"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_copy": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "SSHManager",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "int",
    "open",
    "os.path.exists",
    "os.path.getmtime",
    "os.path.isdir",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_get_connection": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "SSHManager",
    "ValueError",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_ssh",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_git_props": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "SSHManager",
    "datalad.support.external_versions.external_versions",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_ssh",
    "ssh",
    "ssh.get_annex_version",
    "ssh.get_git_version"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_manager_close": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "SSHManager",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_ssh",
    "get_connection_hash",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_manager_close_no_throw": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "Exception",
    "SSHManager",
    "bogus",
    "datalad.support.tests.test_sshconnector.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_manager_close_no_throw.bogus": {
  "data": {
   "lineno": 136
  },
  "type": "class"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_manager_close_no_throw.bogus.close": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_manager_close_no_throw.bogus.ctrl_path": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "open",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_open_close": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "SSHManager",
    "c1",
    "c1.close",
    "datalad.support.tests.test_sshconnector.os",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "get_connection_hash",
    "os.path.exists",
    "os.path.join",
    "print",
    "set",
    "sh_quote"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_sshrun.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.StringIO": {
  "data": {
   "shadows": "six.moves.StringIO"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.main": {
  "data": {
   "shadows": "datalad.cmdline.main.main"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.test_exit_code": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "SystemExit",
    "datalad.cmdline.main.main",
    "datalad.support.tests.test_sshrun.sys",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.swallow_outputs",
    "isinstance",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "six.moves.StringIO"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshrun.test_fancy_quotes": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshrun.test_no_stdin_swallow": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "nose.tools.assert_equal",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshrun.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_stats": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_stats.test_ActivityStats_basic": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ActivityStats",
    "AttributeError",
    "assert_equal",
    "assert_in",
    "assert_raises",
    "getattr",
    "len",
    "repr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_stats.test_ActivityStats_comparisons": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ActivityStats",
    "assert_equal",
    "assert_not_equal"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_stats.test_add": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ActivityStats",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_status": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_status.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_status.test_FileStatus_basic": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "FileStatus",
    "assert_equal",
    "nose.tools.assert_not_equal"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_vcr_": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_vcr_.test_use_cassette_if_no_vcr": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ImportError",
    "SkipTest",
    "checker",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_vcr_.test_use_cassette_if_no_vcr.checker": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_vcr_.vcr": {
  "data": {
   "shadows": "vcr"
  },
  "type": "import"
 },
 "datalad.support.tests.test_versions": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_versions.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_versions.od": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.support.tests.test_versions.test_get_versions": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "assert_raises",
    "collections.OrderedDict",
    "get_versions"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_versions.test_get_versions_default_version": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "FileStatus",
    "ValueError",
    "assert_equal",
    "assert_raises",
    "collections.OrderedDict",
    "get_versions"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_versions.test_get_versions_openfmri_dropped_models": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "assert_equal",
    "collections.OrderedDict",
    "get_versions"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_versions.test_get_versions_regex": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "assert_equal",
    "assert_raises",
    "collections.OrderedDict",
    "get_versions"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.utils": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.utils.check_repo_deals_with_inode_change": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "SkipTest",
    "class_",
    "datalad.support.tests.utils.os",
    "datalad.support.tests.utils.shutil",
    "exists",
    "open",
    "opj",
    "rmtree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.tests.utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.support.third": {
  "data": {},
  "type": "module"
 },
 "datalad.support.third.nda_aws_token_generator": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.sys"
   ]
  },
  "type": "module"
 },
 "datalad.support.third.nda_aws_token_generator.NDATokenGenerator": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.nda_aws_token_generator.NDATokenGenerator.__construct_request_xml": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.logging",
    "xml.etree.ElementTree.Element",
    "xml.etree.ElementTree.SubElement",
    "xml.etree.ElementTree.tostring"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.NDATokenGenerator.__encode_password": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.binascii",
    "datalad.support.third.nda_aws_token_generator.hashlib",
    "datalad.support.third.nda_aws_token_generator.logging"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.NDATokenGenerator.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.logging"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.NDATokenGenerator.__make_request": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.logging",
    "urllib.request",
    "urllib.request.Request",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.NDATokenGenerator.__parse_response": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "Exception",
    "Token",
    "datalad.support.third.nda_aws_token_generator.logging",
    "xml.etree.ElementTree.fromstring"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.NDATokenGenerator.generate_token": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.logging"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.Token": {
  "data": {
   "lineno": 99
  },
  "type": "class"
 },
 "datalad.support.third.nda_aws_token_generator.Token.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.logging"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.Token.access_key": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.Token.expiration": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.Token.secret_key": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.Token.session": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "datalad.support.third.nda_aws_token_generator.etree": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "datalad.support.third.nda_aws_token_generator.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "datalad.support.third.nda_aws_token_generator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.third.nda_aws_token_generator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.third.nda_aws_token_generator.urllib_request": {
  "data": {
   "shadows": "urllib.request"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses": {
  "data": {},
  "type": "module"
 },
 "datalad.support.third.noseclasses.ErrorClass": {
  "data": {
   "shadows": "nose.plugins.errorclass.ErrorClass"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.ErrorClassPlugin": {
  "data": {
   "shadows": "nose.plugins.errorclass.ErrorClassPlugin"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.NumpyDocTestCase": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "nose.plugins.doctests.DocTestCase"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.noseclasses.NumpyDocTestCase.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.doctest"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDocTestFinder": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.doctest"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.noseclasses.NumpyDocTestFinder._find": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "classmethod",
    "datalad.support.third.noseclasses.doctest",
    "getattr",
    "inspect.isclass",
    "inspect.isfunction",
    "inspect.ismethod",
    "inspect.ismodule",
    "inspect.isroutine",
    "isinstance",
    "property",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDocTestFinder._from_module": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.third.noseclasses.inspect",
    "hasattr",
    "isinstance",
    "object",
    "object.__globals__",
    "object.__module__",
    "object.__self__.__class__.__module__",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDoctest": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.NumpyDocTestCase",
    "datalad.support.third.noseclasses.NumpyDocTestFinder",
    "datalad.support.third.noseclasses.NumpyOutputChecker",
    "datalad.support.third.noseclasses.doctest",
    "nose.plugins.doctests.Doctest"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.noseclasses.NumpyDoctest.afterContext": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDoctest.configure": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.doctest",
    "nose.plugins.base.Plugin.configure"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDoctest.loadTestsFromModule": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "AttributeError",
    "nose.plugins.doctests.log.debug",
    "nose.util.src"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDoctest.options": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.os",
    "nose.plugins.base.Plugin.options"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDoctest.set_test_context": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "__import__",
    "datalad.support.third.noseclasses.os",
    "get_package_name"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDoctest.wantFile": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.os",
    "nose.plugins.doctests.Doctest.wantFile"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyOutputChecker": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.doctest"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.noseclasses.NumpyOutputChecker.check_output": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.doctest"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyTestProgram": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.nose"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.noseclasses.NumpyTestProgram.runTests": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.nose"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.Plugin": {
  "data": {
   "shadows": "nose.plugins.base.Plugin"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.Unplugger": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.noseclasses.Unplugger.__init__": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.Unplugger.configure": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.Unplugger.options": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.isclass": {
  "data": {
   "shadows": "inspect.isclass"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.isfunction": {
  "data": {
   "shadows": "inspect.isfunction"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.ismethod": {
  "data": {
   "shadows": "inspect.ismethod"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.ismodule": {
  "data": {
   "shadows": "inspect.ismodule"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.isroutine": {
  "data": {
   "shadows": "inspect.isroutine"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.npd": {
  "data": {
   "shadows": "nose.plugins.doctests"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.src": {
  "data": {
   "shadows": "nose.util.src"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester": {
  "data": {},
  "type": "module"
 },
 "datalad.support.third.nosetester.EntryPointPluginManager": {
  "data": {
   "shadows": "nose.plugins.EntryPointPluginManager"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.NoseTester": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.nosetester.NoseTester.__init__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.support.third.nosetester.get_package_name",
    "datalad.support.third.nosetester.os",
    "datalad.support.third.nosetester.sys",
    "getattr",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.NoseTester._get_custom_doctester": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "NumpyDoctest"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.NoseTester._show_system_info": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "datalad.support.third.nosetester.nose",
    "datalad.support.third.nosetester.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.NoseTester._test_argv": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "six.string_types",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.NoseTester.bench": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "Unplugger",
    "datalad.support.third.nosetester.nose",
    "datalad.support.third.nosetester.os",
    "print"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.NoseTester.prepare_test_args": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "ImportError",
    "Unplugger",
    "datalad.support.third.nosetester.nose",
    "int",
    "isinstance",
    "nose.plugins.EntryPointPluginManager",
    "p",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.NoseTester.test": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "DeprecationWarning",
    "NumpyTestProgram",
    "Warning",
    "datalad.support.third.nosetester.doctest",
    "datalad.support.third.nosetester.warnings",
    "dict",
    "isinstance",
    "min",
    "print",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datalad.support.third.nosetester.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.basestring": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.get_package_name": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "datalad.support.third.nosetester.os"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.nose.plugins.builtin": {
  "data": {
   "shadows": "nose.plugins.builtin"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.run_module_suite": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.support.third.nosetester.nose",
    "datalad.support.third.nosetester.sys"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "datalad.support.vcr_": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "datalad.dochelpers.exc_str",
    "datalad.support.vcr_.lgr",
    "datalad.support.vcr_.logging",
    "datalad.support.vcr_.returnnothing",
    "datalad.support.vcr_.vcr_lgr",
    "isinstance",
    "vcr.patch.CassettePatcherBuilder._requests"
   ]
  },
  "type": "module"
 },
 "datalad.support.vcr_._": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "datalad.support.vcr_._VCR": {
  "data": {
   "shadows": "vcr.VCR"
  },
  "type": "import"
 },
 "datalad.support.vcr_._a": {
  "data": {
   "shadows": "requests.packages.urllib3.connectionpool.HTTPConnection"
  },
  "type": "import"
 },
 "datalad.support.vcr_._b": {
  "data": {
   "shadows": "requests.packages.urllib3.connectionpool.VerifiedHTTPSConnection"
  },
  "type": "import"
 },
 "datalad.support.vcr_._get_cassette_path": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "os.path.isabs"
   ]
  },
  "type": "function"
 },
 "datalad.support.vcr_._use_cassette": {
  "data": {
   "shadows": "vcr.use_cassette"
  },
  "type": "import"
 },
 "datalad.support.vcr_._vcrp": {
  "data": {
   "shadows": "vcr.patch"
  },
  "type": "import"
 },
 "datalad.support.vcr_.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "datalad.support.vcr_.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.vcr_.externals_use_cassette": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "datalad.support.vcr_._get_cassette_path",
    "mock.patch.dict",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.vcr_.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.support.vcr_.lgr": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.support.vcr_.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.vcr_.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.support.vcr_.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.support.vcr_.returnnothing": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "datalad.support.vcr_.use_cassette": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "datalad.support.vcr_.use_cassette.do_nothing_decorator": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "datalad.support.vcr_.use_cassette.do_nothing_decorator.wrapper": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "datalad.support.vcr_.lgr",
    "functools.wraps",
    "t"
   ]
  },
  "type": "function"
 },
 "datalad.support.vcr_.vcr_lgr": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "datalad.support.vcr_.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "datalad.support.versions": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.support.versions.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datalad.support.versions.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.support.versions._get_default_version": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.versions.time"
   ]
  },
  "type": "function"
 },
 "datalad.support.versions.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.support.versions.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "datalad.support.versions.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.support.versions.get_versions": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "_get_default_version",
    "collections.OrderedDict",
    "collections.defaultdict",
    "datalad.support.versions.lgr",
    "datalad.support.versions.re",
    "dict",
    "distutils.version.LooseVersion",
    "isinstance",
    "len",
    "list",
    "map",
    "os.path.basename",
    "sorted",
    "str",
    "tuple",
    "versioneer"
   ]
  },
  "type": "function"
 },
 "datalad.support.versions.lgr": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.support.versions.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.versions.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.teardown_package": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "datalad._test_states",
    "datalad.consts.DATASETS_TOPURL",
    "datalad.os",
    "datalad.support.external_versions.external_versions.dumps",
    "datalad.tests._TEMP_PATHS_GENERATED",
    "datalad.tests.utils.rmtemp",
    "datalad.ui.ui.set_backend",
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "datalad.test": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "datalad.support.third.nosetester.NoseTester"
   ]
  },
  "type": "function"
 },
 "datalad.tests": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.os",
    "datalad.tests.tempfile",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.tests._TEMP_PATHS_GENERATED": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "datalad.tests.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.tests.heavyoutput": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "datalad.tests.heavyoutput.s",
    "datalad.tests.heavyoutput.sys",
    "datalad.tests.heavyoutput.x",
    "list",
    "range",
    "str"
   ]
  },
  "type": "module"
 },
 "datalad.tests.heavyoutput.s": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "datalad.tests.heavyoutput.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.tests.heavyoutput.x": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "datalad.tests.lgr": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datalad.tests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.tests.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test__main__": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test__main__.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "datalad.tests.test__main__.StringIO": {
  "data": {
   "shadows": "six.moves.StringIO"
  },
  "type": "import"
 },
 "datalad.tests.test__main__.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test__main__.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test__main__.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.tests.test__main__.test_main_help": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "SystemExit",
    "datalad.tests.test__main__.sys",
    "mock.patch",
    "nose.tools.assert_raises",
    "six.moves.StringIO"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test__main__.test_main_run_a_script": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "mock.patch",
    "mock.patch.object",
    "nose.tools.assert_equal",
    "six.moves.StringIO",
    "tempfile.NamedTemporaryFile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test__main__.test_main_version": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "SystemExit",
    "mock.patch",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "six.moves.StringIO"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_api": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_api.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "datalad.tests.test_api._test_consistent_order_of_args": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "getattr",
    "inspect.getargspec",
    "len",
    "nose.SkipTest",
    "nose.tools.eq_",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_api.api": {
  "data": {
   "shadows": "datalad.api"
  },
  "type": "import"
 },
 "datalad.tests.test_api.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.tests.test_api.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_api.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_api.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.tests.test_api.get_interface_groups": {
  "data": {
   "shadows": "datalad.interface.base.get_interface_groups"
  },
  "type": "import"
 },
 "datalad.tests.test_api.getargspec": {
  "data": {
   "shadows": "inspect.getargspec"
  },
  "type": "import"
 },
 "datalad.tests.test_api.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "datalad.tests.test_api.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.tests.test_api.test_basic_setup": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "datalad.api",
    "datalad.api.Dataset.create.__doc__",
    "datalad.api.Dataset.install.__doc__",
    "datalad.tests.test_api.re",
    "datalad.tests.utils.assert_in",
    "dir",
    "filter",
    "hasattr",
    "list",
    "nose.tools.assert_false",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_api.test_consistent_order_of_args": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datalad.interface.base.get_interface_groups",
    "datalad.tests.test_api._test_consistent_order_of_args",
    "dict",
    "getattr",
    "importlib.import_module"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.test_archives.fn_archive_obscure",
    "datalad.tests.test_archives.fn_archive_obscure_ext",
    "datalad.tests.test_archives.fn_in_archive_obscure",
    "dict",
    "get_most_obscure_supported_name"
   ]
  },
  "type": "module"
 },
 "datalad.tests.test_archives._test_get_leading_directory": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ExtractedArchive",
    "assert_equal",
    "mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.check_compress_file": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "assert_true",
    "compress_files",
    "datalad.tests.test_archives.os",
    "decompress_file",
    "os.path.exists",
    "os.path.join",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.check_decompress_file": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError",
    "assert_false",
    "assert_true",
    "datalad.tests.test_archives.fn_archive_obscure",
    "datalad.tests.test_archives.fn_archive_obscure_ext",
    "datalad.tests.test_archives.fn_in_archive_obscure",
    "datalad.tests.test_archives.tree_simplearchive",
    "decompress_file",
    "eq_",
    "open",
    "os.path.exists",
    "os.path.join",
    "swallow_outputs",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.fn_archive_obscure": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.tests.test_archives.fn_archive_obscure_ext": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datalad.tests.test_archives.fn_in_archive_obscure": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.tests.test_archives.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.test_ArchivesCache": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ArchivesCache",
    "ValueError",
    "assert_false",
    "assert_raises",
    "assert_true",
    "datalad.tests.test_archives.fn_archive_obscure_ext",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.test_ExtractedArchive": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ExtractedArchive",
    "assert_false",
    "assert_true",
    "datalad.tests.test_archives.fn_archive_obscure",
    "datalad.tests.test_archives.fn_archive_obscure_ext",
    "datalad.tests.test_archives.fn_in_archive_obscure",
    "datalad.tests.test_archives.os",
    "datalad.tests.test_archives.tree_simplearchive",
    "eq_",
    "ok_generator",
    "os.path.exists",
    "os.path.join",
    "sorted",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.test_compress_file": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "datalad.tests.test_archives.check_compress_file"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.test_decompress_file": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "NotImplementedError",
    "datalad.tests.test_archives.check_decompress_file"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.test_get_leading_directory": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "ExtractedArchive",
    "datalad.tests.test_archives._test_get_leading_directory",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.test_unixify_path": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "eq_",
    "unixify_path"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.tree_simplearchive": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datalad.tests.test_auto": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "nibabel"
   ]
  },
  "type": "module"
 },
 "datalad.tests.test_auto.StringIO": {
  "data": {
   "shadows": "six.moves.StringIO"
  },
  "type": "import"
 },
 "datalad.tests.test_auto._test_proxying_open": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "AnnexRepo",
    "AnnexRepo.clone",
    "AutomagicIO",
    "IOError",
    "assert_false",
    "assert_raises",
    "assert_true",
    "datalad.tests.test_auto.os",
    "generate_load",
    "mock.patch",
    "open",
    "os.path.dirname",
    "os.path.join",
    "verify_load",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto._test_proxying_open.StringIOfileno": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "six.moves.StringIO"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_auto._test_proxying_open.StringIOfileno.fileno": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.h5py": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datalad.tests.test_auto.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.lzma": {
  "data": {
   "shadows": "lzma"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.nib": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "datalad.tests.test_auto.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.skip_if_no_module": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_module"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.test_proxying_io_open_regular": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "datalad.tests.test_auto._test_proxying_open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_io_open_regular.generate_dat": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "datalad.tests.test_auto.io"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_io_open_regular.verify_dat": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "datalad.tests.test_auto.io",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_lzma_LZMAFile": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "datalad.tests.test_auto._test_proxying_open",
    "datalad.tests.utils.skip_if_no_module"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_lzma_LZMAFile.generate_dat": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "datalad.tests.test_auto.lzma",
    "dir"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_lzma_LZMAFile.verify_dat": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "datalad.tests.test_auto.lzma",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_h5py": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "SkipTest",
    "datalad.tests.test_auto._test_proxying_open",
    "datalad.tests.test_auto.h5py"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_h5py.generate_hdf5": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "datalad.tests.test_auto.h5py"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_h5py.verify_hdf5": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "datalad.tests.test_auto.h5py",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_nibabel": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "SkipTest",
    "datalad.tests.test_auto._test_proxying_open",
    "nibabel",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_nibabel.generate_nii": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_nibabel.verify_nii": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "nibabel.load",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_regular": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "datalad.tests.test_auto._test_proxying_open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_regular.generate_dat": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_regular.verify_dat": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "eq_",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_testrepobased": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "AnnexRepo",
    "AutomagicIO",
    "IOError",
    "assert_raises",
    "chpwd",
    "datalad.tests.test_auto.os",
    "eq_",
    "isinstance",
    "ok_",
    "open",
    "os.path.dirname",
    "os.path.join",
    "swallow_outputs",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_base.check_git_configured": {
  "data": {
   "shadows": "datalad.support.gitrepo.check_git_configured"
  },
  "type": "import"
 },
 "datalad.tests.test_base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_base.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_base.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.tests.test_base.test_git_config_fixture": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "assert_equal",
    "datalad.support.gitrepo.check_git_configured",
    "datalad.tests.test_base.os",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_base.test_git_config_warning": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "assert_equal",
    "assert_in",
    "chpwd",
    "datalad.support.gitrepo.check_git_configured",
    "mock.patch.dict",
    "swallow_logs",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_base.test_not_under_git": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Exception",
    "assert_raises",
    "chpwd",
    "datalad.distribution.dataset.require_dataset",
    "get_dataset_root",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_cmd.check_runner_heavy_output": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "Runner",
    "SkipTest",
    "assert_equal",
    "assert_greater",
    "datalad.tests.test_cmd.logging",
    "datalad.tests.test_cmd.sys",
    "eq_",
    "len",
    "os.path.dirname",
    "os.path.join",
    "runner",
    "runner.run",
    "swallow_logs",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.check_runner_heavy_output.process_stdout": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.shlex": {
  "data": {
   "shadows": "shlex"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.test_git_path": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "GitRepo",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_link_file_load": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "assert_equal",
    "datalad.tests.test_cmd.logging",
    "datalad.tests.test_cmd.os",
    "inode",
    "link_file_load",
    "mock.patch",
    "ok_",
    "open",
    "stats",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_link_file_load.inode": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "datalad.tests.test_cmd.os",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_link_file_load.raise_AttributeError": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_link_file_load.stats": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "datalad.tests.test_cmd.os",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_process_remaining_output": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "Runner",
    "eq_",
    "runner",
    "runner._process_remaining_output"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Runner",
    "assert_equal",
    "assert_true",
    "datalad.tests.test_cmd.os"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_dry": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "DryRunProtocol",
    "Runner",
    "assert_equal",
    "assert_false",
    "assert_in",
    "assert_is",
    "datalad.tests.test_cmd.os",
    "datalad.tests.test_cmd.shlex",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_failure": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "AnnexRepo",
    "Runner",
    "assert_equal",
    "assert_in",
    "assert_raises",
    "runner",
    "runner.run",
    "swallow_logs",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_heavy_output": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "datalad.tests.test_cmd.check_runner_heavy_output"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_instance_callable_dry": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "DryRunProtocol",
    "Runner",
    "assert_equal",
    "assert_in",
    "datalad.tests.test_cmd.os",
    "eq_",
    "runner"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_instance_callable_wet": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Runner",
    "datalad.tests.test_cmd.os",
    "datalad.tests.test_cmd.sys",
    "eq_",
    "runner"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_log_stderr": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "AssertionError",
    "Runner",
    "assert_raises",
    "eq_",
    "ok_",
    "runner",
    "runner.run",
    "swallow_logs",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_log_stdout": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "Runner",
    "eq_",
    "isinstance",
    "list",
    "ok_",
    "runner",
    "runner.run",
    "swallow_logs",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_stdin": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "Runner",
    "assert_in",
    "open",
    "os.path.join",
    "runner",
    "runner.run",
    "swallow_outputs",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.test_config._config_file_content"
   ]
  },
  "type": "module"
 },
 "datalad.tests.test_config.CommandError": {
  "data": {
   "shadows": "datalad.cmd.CommandError"
  },
  "type": "import"
 },
 "datalad.tests.test_config.ConfigManager": {
  "data": {
   "shadows": "datalad.config.ConfigManager"
  },
  "type": "import"
 },
 "datalad.tests.test_config.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.tests.test_config._config_file_content": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datalad.tests.test_config._dataset_config_template": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "datalad.tests.test_config.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_config.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.tests.test_config.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_config.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.tests.test_config.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_config.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_config.cfg_defs": {
  "data": {
   "shadows": "datalad.interface.common_cfg.definitions"
  },
  "type": "import"
 },
 "datalad.tests.test_config.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.tests.test_config.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.tests.test_config.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.tests.test_config.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.test_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_config.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_config.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.tests.test_config.test_crazy_cfg": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "datalad.config.ConfigManager",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_from_env": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "datalad.config.ConfigManager",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.test_config.os",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_obtain": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "ask",
    "datalad.api.create",
    "datalad.config.ConfigManager",
    "datalad.interface.common_cfg.definitions",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "dict",
    "float",
    "int",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_obtain.ask": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "datalad.tests.utils.with_testsui",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_something": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "datalad.cmd.CommandError",
    "datalad.config.ConfigManager",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.test_config._dataset_config_template",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.swallow_logs",
    "len",
    "mock.patch.dict",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "os.path.exists",
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test_config.with_testsui": {
  "data": {
   "shadows": "datalad.tests.utils.with_testsui"
  },
  "type": "import"
 },
 "datalad.tests.test_config.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_constraints.PY2": {
  "data": {
   "shadows": "six.PY2"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.ct": {
  "data": {
   "shadows": "constraints"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.ok_": {
  "data": {
   "shadows": "nose.tools.ok_"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.test_altconstraints": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "c.short_description",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_bool": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_both": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_callable": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_choice": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_constraints": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_float": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_int": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "c.short_description",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_keychoice": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_listof": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "c",
    "nose.tools.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_none": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_range": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "c",
    "datalad.tests.test_constraints.sys",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_str": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "c.short_description",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_str_min_len": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_tupleof": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "c",
    "nose.tools.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_type_str": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "six.PY2",
    "six.string_types",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_direct_mode": {
  "data": {
   "symbols_in_volume": [
    "SkipTest",
    "datalad.cfg.get",
    "datalad.tests.test_direct_mode.repo_version",
    "int"
   ]
  },
  "type": "module"
 },
 "datalad.tests.test_direct_mode.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.datalad.api": {
  "data": {
   "shadows": "datalad.api"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.ok_": {
  "data": {
   "shadows": "nose.tools.ok_"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.repo_version": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "datalad.tests.test_direct_mode.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.test_direct_cfg": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.test_direct_mode.logging",
    "datalad.utils.swallow_logs",
    "mock.patch.dict",
    "nose.tools.ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_direct_mode.test_direct_create": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "mock.patch.dict",
    "nose.tools.ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_direct_mode.test_direct_install": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "mock.patch.dict",
    "nose.tools.ok_",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_dochelpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_dochelpers.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_dochelpers.test_basic": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "assert_equal",
    "single_or_plural"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_doc": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_doc.A": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_dochelpers.test_borrow_doc.A.met1": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_doc.A.met2": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_doc.B": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_dochelpers.test_borrow_doc.B.met1": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "borrowdoc"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_doc.B.met2": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "borrowdoc"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "assert_true"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.A": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.A.met1": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.A.met2": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.B": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.B.met1": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "borrowkwargs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.B.met_anothermet": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "borrowkwargs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.B.met_excludes": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "borrowkwargs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.B.met_nodoc": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "borrowkwargs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.B.met_nodockwargs": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "borrowkwargs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_exc_str": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "assert_equal",
    "assert_re_in",
    "exc_str",
    "f",
    "mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_exc_str.f": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "f2"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_exc_str.f.f2": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_installed": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_installed.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.tests.test_installed.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.tests.test_installed.check_run_and_get_output": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.cmd.Runner",
    "datalad.support.exceptions.CommandError",
    "mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_installed.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_installed.test_run_datalad_help": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "datalad.tests.test_installed.check_run_and_get_output",
    "eq_",
    "ok_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_interface": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_interface.Demo": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_interface.Demo.__call__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "datalad.tests.test_interface.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.assert_is": {
  "data": {
   "shadows": "nose.tools.assert_is"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.cnstr": {
  "data": {
   "shadows": "constraints"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.test_interface": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "SystemExit",
    "assert_re_in",
    "datalad.tests.test_interface.Demo",
    "datalad.tests.test_interface.argparse",
    "datalad.tests.test_interface.re",
    "nose.tools.assert_equal",
    "nose.tools.assert_is",
    "nose.tools.assert_raises",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_interface.test_name_generation": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "get_api_name",
    "get_cmdline_command_name",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_interface.test_param": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "Parameter",
    "ValueError",
    "assert_in",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_log.ColorFormatter": {
  "data": {
   "shadows": "datalad.log.ColorFormatter"
  },
  "type": "import"
 },
 "datalad.tests.test_log.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.tests.test_log.GitCommandError": {
  "data": {
   "shadows": "git.exc.GitCommandError"
  },
  "type": "import"
 },
 "datalad.tests.test_log.LoggerHelper": {
  "data": {
   "shadows": "datalad.log.LoggerHelper"
  },
  "type": "import"
 },
 "datalad.tests.test_log.TraceBack": {
  "data": {
   "shadows": "datalad.log.TraceBack"
  },
  "type": "import"
 },
 "datalad.tests.test_log.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_log.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_log.assert_is_instance": {
  "data": {
   "shadows": "nose.tools.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.tests.test_log.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.tests.test_log.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_log.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_log.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.tests.test_log.check_filters": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "datalad.tests.test_log.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.colors": {
  "data": {
   "shadows": "datalad.support.ansi_colors"
  },
  "type": "import"
 },
 "datalad.tests.test_log.currentframe": {
  "data": {
   "shadows": "inspect.currentframe"
  },
  "type": "import"
 },
 "datalad.tests.test_log.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.tests.test_log.getframeinfo": {
  "data": {
   "shadows": "inspect.getframeinfo"
  },
  "type": "import"
 },
 "datalad.tests.test_log.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.tests.test_log.makeLogRecord": {
  "data": {
   "shadows": "logging.makeLogRecord"
  },
  "type": "import"
 },
 "datalad.tests.test_log.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.tests.test_log.ok_endswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_endswith"
  },
  "type": "import"
 },
 "datalad.tests.test_log.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.tests.test_log.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_log.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.tests.test_log.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.tests.test_log.test_color_formatter": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "datalad.log.ColorFormatter",
    "datalad.support.ansi_colors.RESET_SEQ",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "dict",
    "logging.makeLogRecord",
    "rec"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_filters": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "datalad.log.LoggerHelper",
    "datalad.tests.test_log.check_filters",
    "mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_filters._mock_names": {
  "data": {
   "lineno": 108
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_filters._mock_namesre": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_logging_to_a_file": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "datalad.cfg.get",
    "datalad.log.LoggerHelper",
    "datalad.support.constraints.EnsureBool",
    "datalad.tests.test_log.re",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "len",
    "mock.patch",
    "open",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_logtarget_via_env_variable": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "datalad.log.LoggerHelper",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "mock.patch.dict",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_mutliple_targets": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "datalad.log.LoggerHelper",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "len",
    "open",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_traceback": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "datalad.log.TraceBack",
    "datalad.tests.utils.ok_endswith",
    "inspect.currentframe",
    "inspect.getframeinfo",
    "rec",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_traceback.rec": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "rec",
    "tb"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_misc.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datalad.tests.test_misc.datalad": {
  "data": {
   "shadows": "datalad"
  },
  "type": "import"
 },
 "datalad.tests.test_misc.get_url_response_stamp": {
  "data": {
   "shadows": "datalad.support.network.get_url_response_stamp"
  },
  "type": "import"
 },
 "datalad.tests.test_misc.is_url_quoted": {
  "data": {
   "shadows": "datalad.support.network.is_url_quoted"
  },
  "type": "import"
 },
 "datalad.tests.test_misc.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datalad.tests.test_misc.swallow_outputs": {
  "data": {
   "shadows": "datalad.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.tests.test_misc.test_get_response_stamp": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "datalad.support.network.get_url_response_stamp",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_misc.test_is_url_quoted": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "datalad.support.network.is_url_quoted",
    "ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_misc.test_test": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "SkipTest",
    "datalad.tests.test_misc.datalad",
    "datalad.tests.test_misc.numpy",
    "distutils.version.LooseVersion"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_protocols": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_protocols.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.assert_greater": {
  "data": {
   "shadows": "nose.tools.assert_greater"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.assert_in": {
  "data": {
   "shadows": "nose.tools.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.assert_is": {
  "data": {
   "shadows": "nose.tools.assert_is"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.assert_is_instance": {
  "data": {
   "shadows": "nose.tools.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.ok_": {
  "data": {
   "shadows": "nose.tools.ok_"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.test_DryRunExternalsProtocol": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "AssertionError",
    "DryRunExternalsProtocol",
    "Exception",
    "GitRepo",
    "Runner",
    "datalad.tests.test_protocols.os",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_raises",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_protocols.test_DryRunProtocol": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "AssertionError",
    "DryRunProtocol",
    "Exception",
    "GitRepo",
    "Runner",
    "datalad.tests.test_protocols.os",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_false",
    "nose.tools.assert_raises",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_protocols.test_ExecutionTimeExternalsProtocol": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "Exception",
    "ExecutionTimeExternalsProtocol",
    "GitRepo",
    "Runner",
    "datalad.tests.test_protocols.os",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_is",
    "nose.tools.ok_",
    "str",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_protocols.test_ExecutionTimeProtocol": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception",
    "ExecutionTimeProtocol",
    "GitRepo",
    "Runner",
    "datalad.tests.test_protocols.os",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_in",
    "nose.tools.assert_is",
    "nose.tools.ok_",
    "os.path.normpath",
    "str",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_protocols.test_protocol_commons": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "TypeError",
    "dict",
    "iter",
    "len",
    "nose.tools.assert_equal",
    "nose.tools.assert_in",
    "nose.tools.assert_is_instance",
    "nose.tools.assert_raises",
    "open",
    "protocol_class",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_s3": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_s3.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_s3.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.tests.test_s3.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.tests.test_s3.test_version_url": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "datalad.tests.utils.skip_if_no_network",
    "get_test_providers",
    "get_versioned_url",
    "len",
    "nose.tools.assert_raises",
    "nose.tools.eq_",
    "ok_startswith",
    "set",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_s3.test_version_url_deleted": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "datalad.tests.utils.skip_if_no_network",
    "get_test_providers",
    "get_versioned_url",
    "nose.tools.eq_",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_strings": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_strings.test_apply_replacement_rules": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "apply_replacement_rules",
    "assert_raises",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_testrepos": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_testrepos.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.tests.test_testrepos.git": {
  "data": {
   "shadows": "git"
  },
  "type": "import"
 },
 "datalad.tests.test_testrepos.integration": {
  "data": {
   "shadows": "datalad.tests.utils.integration"
  },
  "type": "import"
 },
 "datalad.tests.test_testrepos.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.tests.test_testrepos.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_testrepos.test_clone": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.tests.test_testrepos.os",
    "ok_",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_testrepos.test_having_annex": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datalad.tests.test_testrepos.git",
    "datalad.tests.test_testrepos.os",
    "ok_",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_testrepos.test_make_studyforrest_mockup": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "datalad.tests.utils.known_failure_direct_mode",
    "datalad.tests.utils.usecase",
    "make_studyforrest_mockup",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_testrepos.test_point_to_github": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ok_",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_testrepos.usecase": {
  "data": {
   "shadows": "datalad.tests.utils.usecase"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "datalad.tests.test_tests_utils.DATASETS_TOPURL": {
  "data": {
   "shadows": "datalad.consts.DATASETS_TOPURL"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.PY2": {
  "data": {
   "shadows": "six.PY2"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.PY3": {
  "data": {
   "shadows": "six.PY3"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils._get_resolved_flavors": {
  "data": {
   "shadows": "datalad.tests.utils._get_resolved_flavors"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils._test_assert_Xwd_unchanged": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.tests.test_tests_utils.os",
    "do_chdir",
    "eq_",
    "getpwd"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils._test_assert_Xwd_unchanged.do_chdir": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.os",
    "func"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils._test_assert_Xwd_unchanged_ok_chdir": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.os",
    "do_chdir_value_error",
    "eq_",
    "getpwd",
    "nose.tools.assert_not_in",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils._test_assert_Xwd_unchanged_ok_chdir.do_chdir_value_error": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "assert_cwd_unchanged",
    "datalad.tests.test_tests_utils.os",
    "func"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils._test_serve_path_via_http": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "datalad.tests.test_tests_utils.bs4",
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.test_tests_utils.random",
    "datalad.tests.test_tests_utils.sys",
    "nose.SkipTest",
    "open",
    "six.text_type",
    "test_path_and_url",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils._test_serve_path_via_http.test_path_and_url": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "assert_false",
    "datalad.tests.test_tests_utils.bs4",
    "datalad.tests.test_tests_utils.os",
    "len",
    "nose.tools.assert_true",
    "serve_path_via_http",
    "six.moves.urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils._with_tempfile_decorated_dummy": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.assert_in": {
  "data": {
   "shadows": "nose.tools.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.assert_not_in": {
  "data": {
   "shadows": "nose.tools.assert_not_in"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.bs4": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.tests.test_tests_utils.check_nested_with_tempfile_parametrized_surrounded": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.os",
    "eq_",
    "ok_",
    "with_tempfile",
    "with_testrepos",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.get_datasets_topdir": {
  "data": {
   "shadows": "datalad.tests.utils.get_datasets_topdir"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.test_assert_Xwd_unchanged": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils._test_assert_Xwd_unchanged",
    "datalad.tests.test_tests_utils.os"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_assert_Xwd_unchanged_ok_chdir": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils._test_assert_Xwd_unchanged_ok_chdir",
    "datalad.tests.test_tests_utils.os"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_assert_cwd_unchanged_not_masking_exceptions": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "datalad.tests.test_tests_utils.logging",
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.test_tests_utils.sys",
    "datalad.tests.test_tests_utils.traceback",
    "do_chdir_value_error",
    "eq_",
    "nose.tools.assert_in",
    "nose.tools.assert_not_in",
    "six.PY2",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_assert_cwd_unchanged_not_masking_exceptions.do_chdir_value_error": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "ValueError",
    "assert_cwd_unchanged",
    "datalad.tests.test_tests_utils.os"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_assert_dict_equal": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "AssertionError",
    "assert_dict_equal",
    "assert_raises",
    "nose.SkipTest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_assert_re_in": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "assert_re_in"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_get_most_obscure_supported_name": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.platform",
    "eq_",
    "get_most_obscure_supported_name",
    "ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_get_resolved_values": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "assert_raises",
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils._get_resolved_flavors",
    "eq_",
    "mock.patch.dict",
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_get_resolved_values.magical": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "AssertionError",
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_keeptemp_via_env_variable": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "check",
    "datalad.tests.test_tests_utils.os",
    "eq_",
    "len",
    "mock.patch.dict",
    "nose.SkipTest",
    "ok_",
    "os.path.exists",
    "rmtemp"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_keeptemp_via_env_variable.check": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "open",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_nested_with_tempfile_basic": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.os",
    "ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_nested_with_tempfile_parametrized_surrounded": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.check_nested_with_tempfile_parametrized_surrounded"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_nok_startswith": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "nok_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_ok_generator": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "func",
    "gen",
    "ok_generator",
    "range",
    "six.PY2",
    "xrange"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_ok_generator.func": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_ok_generator.gen": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_ok_startswith": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "ok_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_ok_symlink_helpers": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.tests.test_tests_utils.os",
    "nose.SkipTest",
    "ok_broken_symlink",
    "ok_good_symlink",
    "ok_symlink",
    "open",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_run_under_dir": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "AssertionError",
    "assert_cwd_unchanged",
    "assert_raises",
    "datalad.tests.test_tests_utils.os",
    "eq_",
    "f",
    "getpwd",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_run_under_dir.f": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "eq_",
    "getpwd",
    "run_under_dir"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_serve_path_via_http": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils._test_serve_path_via_http",
    "get_most_obscure_supported_name",
    "mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_setup": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "datalad.consts.DATASETS_TOPURL",
    "datalad.tests.utils.get_datasets_topdir",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_if": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "assert_raises",
    "eq_",
    "f",
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_if.f": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "skip_if"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_if_no_module": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "assert_raises",
    "eq_",
    "nose.SkipTest",
    "testish2"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_if_no_module.testish": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "ValueError",
    "skip_if_no_module"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_if_no_module.testish2": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "skip_if_no_module"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_if_no_network": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "assert_raises",
    "datalad.tests.test_tests_utils.os",
    "eq_",
    "mock.patch",
    "mock.patch.dict",
    "nose.SkipTest",
    "skip_if_no_network",
    "somefunc"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_if_no_network.somefunc": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_testsui": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "eq_",
    "func2",
    "func3"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_testsui.func2": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.ui.ui.question",
    "datalad.ui.ui.yesno",
    "eq_",
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_testsui.func3": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "assert_false",
    "datalad.ui.ui.is_interactive",
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_testsui.some_func": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_content": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ok_file_has_content",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_content_raises_on_mkdir": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "t"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_content_raises_on_mkdir.t": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "AssertionError",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_default_prefix": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "nok_startswith",
    "ok_startswith",
    "os.path.basename",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_dir_via_env_variable": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "assert_false",
    "datalad.tests.test_tests_utils._with_tempfile_decorated_dummy",
    "datalad.tests.test_tests_utils.os",
    "mock.patch.dict",
    "ok_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_mkdir": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "check_mkdir",
    "datalad.tests.test_tests_utils.os",
    "ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_mkdir.check_mkdir": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.os",
    "eq_",
    "glob.glob",
    "ok_",
    "open",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_specified_prefix": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "ok_",
    "ok_startswith",
    "os.path.basename",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_testrepos": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "check_with_testrepos",
    "datalad.tests.test_tests_utils.os",
    "eq_",
    "len",
    "ok_",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_testrepos.check_with_testrepos": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_without_http_proxy": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "check",
    "mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_without_http_proxy.check": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "assert_false",
    "datalad.tests.test_tests_utils.os",
    "nose.tools.assert_in"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.urlopen": {
  "data": {
   "shadows": "six.moves.urllib.request.urlopen"
  },
  "type": "import"
 },
 "datalad.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_utils.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.PY3": {
  "data": {
   "shadows": "six.PY3"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.__builtin__": {
  "data": {
   "shadows": "six.moves.builtins"
  },
  "type": "import"
 },
 "datalad.tests.test_utils._check_setup_exceptionhook": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "SkipTest",
    "assert_in",
    "datalad.tests.test_utils.sys",
    "mock.patch",
    "nose.tools.assert_equal",
    "nose.tools.eq_",
    "nose.tools.ok_",
    "our_exceptionhook",
    "setup_exceptionhook",
    "six.PY3",
    "swallow_logs",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils._check_setup_exceptionhook.our_post_mortem": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "datalad.tests.test_utils.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.expandvars": {
  "data": {
   "shadows": "os.path.expandvars"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.getargspec": {
  "data": {
   "shadows": "inspect.getargspec"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.known_failure_direct_mode": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_direct_mode"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.nok_": {
  "data": {
   "shadows": "datalad.tests.utils.nok_"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.ok_": {
  "data": {
   "shadows": "nose.tools.ok_"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.test_any_re_search": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "any_re_search",
    "nose.tools.assert_false",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_assure_bool": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "assure_bool",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_assure_dict_from_str": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "assure_dict_from_str",
    "dict",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_assure_list_copy": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "assure_list"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_assure_list_from_str": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "assure_list_from_str",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_assure_unicode": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "assure_unicode",
    "isinstance",
    "nose.tools.eq_",
    "nose.tools.ok_",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_auto_repr": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "buga",
    "nose.tools.assert_equal",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_auto_repr.buga": {
  "data": {
   "lineno": 363
  },
  "type": "class"
 },
 "datalad.tests.test_utils.test_auto_repr.buga.__init__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "list",
    "range",
    "withoutrepr"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_auto_repr.buga.some": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_auto_repr.withoutrepr": {
  "data": {
   "lineno": 359
  },
  "type": "class"
 },
 "datalad.tests.test_utils.test_auto_repr.withoutrepr.__init__": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_better_wraps": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "function1",
    "function2",
    "inspect.getargspec",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_better_wraps.better_decorator": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_better_wraps.better_decorator.new_func": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "better_wraps",
    "func"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_better_wraps.function1": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_better_wraps.function2": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_better_wraps.wraps_decorator": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_better_wraps.wraps_decorator.new_func": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_disable_logger": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.tests.test_utils.logging",
    "disable_logger",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_expandpath": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "expandpath",
    "nose.tools.assert_true",
    "nose.tools.eq_",
    "os.path.expanduser",
    "os.path.expandvars",
    "os.path.isabs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_file_basename": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "file_basename",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_find_files": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "assert_in",
    "assert_not_in",
    "find_files",
    "len",
    "list",
    "ok_generator",
    "ok_startswith",
    "os.path.basename",
    "os.path.dirname",
    "os.path.join",
    "os.path.normpath",
    "os.path.pardir"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_find_files_exclude_vcs": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "assert_in",
    "assert_not_in",
    "find_files",
    "list",
    "nose.tools.assert_equal",
    "os.path.basename",
    "os.path.join",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_generate_chunks": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "generate_chunks",
    "list",
    "nose.tools.eq_",
    "ok_generator"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_get_dataset_root": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "chpwd",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.test_utils.os",
    "f",
    "f.write",
    "get_dataset_root",
    "nose.tools.eq_",
    "open",
    "os.path.abspath",
    "os.path.join",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_get_func_kwargs_doc": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "get_func_kwargs_doc",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_get_func_kwargs_doc.some_func": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_get_local_file_url_windows": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_get_timestamp_suffix": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "datalad.tests.test_utils.time",
    "get_timestamp_suffix",
    "mock.patch.dict",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_get_trace": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "get_trace",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_getpwd_basic": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "chpwd",
    "datalad.tests.test_utils.os",
    "getpwd",
    "mock.patch",
    "nose.tools.assert_false",
    "nose.tools.eq_",
    "nose.tools.ok_",
    "os.path.abspath",
    "os.path.isabs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_getpwd_symlink": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "OSError",
    "assert_raises",
    "chpwd",
    "datalad.tests.test_utils.os",
    "getpwd",
    "nose.tools.assert_false",
    "nose.tools.eq_",
    "nose.tools.ok_",
    "os.path.exists",
    "os.path.join",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_is_explicit_path": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "expandpath",
    "is_explicit_path",
    "nose.tools.assert_false",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_known_failure": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.cfg.obtain",
    "failing"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_known_failure.failing": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_known_failure_direct_mode": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.cfg.obtain",
    "failing"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_known_failure_direct_mode.failing": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.known_failure_direct_mode"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_known_failure_v6": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.cfg.obtain",
    "failing"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_known_failure_v6.failing": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.known_failure_v6"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_knows_annex": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.GitRepo.clone",
    "knows_annex",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_line_profile": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "assert_in",
    "f",
    "nose.tools.assert_equal",
    "skip_if_no_module",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_line_profile.f": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_make_tempfile": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "make_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_md5sum": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "md5sum"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_md5sum_archive": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "md5sum",
    "os.path.join",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_memoized_generator": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "g1",
    "list",
    "nose.tools.eq_",
    "ok_generator",
    "saved_generator"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_memoized_generator.g1": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_not_supported_on_windows": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "NotImplementedError",
    "assert_raises",
    "mock.patch",
    "nose.tools.assert_equal",
    "not_supported_on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_path_": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "_path_",
    "nose.tools.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_path_prefix": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "chpwd",
    "get_path_prefix",
    "nose.tools.eq_",
    "os.path.join",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_path_startswith": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "datalad.tests.utils.nok_",
    "nose.tools.ok_",
    "path_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_probe_known_failure": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.cfg.obtain",
    "failing",
    "not_failing"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_probe_known_failure.failing": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_probe_known_failure.not_failing": {
  "data": {
   "lineno": 722
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_rotree": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "AnnexRepo",
    "OSError",
    "assert_raises",
    "datalad.tests.test_utils.os",
    "datalad.tests.test_utils.shutil",
    "nose.tools.eq_",
    "open",
    "os.path.join",
    "rotree",
    "swallow_logs",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_safe_print": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "mock.patch.object",
    "nose.tools.assert_equal",
    "safe_print",
    "six.moves.builtins"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_safe_print._print": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_setup_exceptionhook": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "datalad.tests.test_utils._check_setup_exceptionhook"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_skip_known_failure": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.cfg.obtain",
    "failing"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_skip_known_failure.failing": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_swallow_logs": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "datalad.tests.test_utils.logging",
    "datalad.tests.utils.ok_file_has_content",
    "nose.tools.eq_",
    "swallow_logs",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_swallow_logs_assert": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.tests.test_utils.logging",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_swallow_outputs": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "datalad.tests.test_utils.sys",
    "nose.tools.eq_",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_unique": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "nose.tools.eq_",
    "operator.itemgetter",
    "range",
    "unique"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_updated": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "nose.tools.eq_",
    "nose.tools.ok_",
    "updated"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_testrepos": {
  "data": {
   "symbols_in_volume": [
    "SkipTest"
   ]
  },
  "type": "module"
 },
 "datalad.tests.test_utils_testrepos._test_BasicAnnexTestRepo": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "BasicAnnexTestRepo",
    "ok_",
    "ok_clean_git",
    "ok_file_under_git",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_testrepos.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_testrepos.test_BasicAnnexTestRepo": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "datalad.tests.test_utils_testrepos._test_BasicAnnexTestRepo",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_testrepos.test_BasicAnnexTestRepo_random_location_generated": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "datalad.tests.test_utils_testrepos._test_BasicAnnexTestRepo"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_testrepos.test_BasicGitTestRepo": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "BasicGitTestRepo",
    "ok_clean_git",
    "ok_file_under_git",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.utils.logging",
    "datalad.tests.utils.ok_generator",
    "datalad.tests.utils.os",
    "datalad.tests.utils.with_testrepos",
    "datalad.tests.utils.with_testsui",
    "nose.tools.assert_false",
    "nose.tools.assert_not_equal",
    "set"
   ]
  },
  "type": "module"
 },
 "datalad.tests.utils.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.tests.utils.DATASETS_TOPURL": {
  "data": {
   "shadows": "datalad.consts.DATASETS_TOPURL"
  },
  "type": "import"
 },
 "datalad.tests.utils.Digester": {
  "data": {
   "shadows": "datalad.support.digests.Digester"
  },
  "type": "import"
 },
 "datalad.tests.utils.DownloadError": {
  "data": {
   "shadows": "datalad.downloaders.base.DownloadError"
  },
  "type": "import"
 },
 "datalad.tests.utils.File": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.tests.utils.File.__init__": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "datalad.tests.utils.File.__str__": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "datalad.tests.utils.FileNotInAnnexError": {
  "data": {
   "shadows": "datalad.support.annexrepo.FileNotInAnnexError"
  },
  "type": "import"
 },
 "datalad.tests.utils.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.tests.utils.HTTPServer": {
  "data": {
   "shadows": "six.moves.BaseHTTPServer.HTTPServer"
  },
  "type": "import"
 },
 "datalad.tests.utils.OBSCURE_FILENAMES": {
  "data": {
   "lineno": 1295
  },
  "type": "constant"
 },
 "datalad.tests.utils.OBSCURE_PREFIX": {
  "data": {
   "lineno": 1294
  },
  "type": "constant"
 },
 "datalad.tests.utils.PY2": {
  "data": {
   "shadows": "six.PY2"
  },
  "type": "import"
 },
 "datalad.tests.utils.Providers": {
  "data": {
   "shadows": "datalad.downloaders.providers.Providers"
  },
  "type": "import"
 },
 "datalad.tests.utils.Selector": {
  "data": {
   "shadows": "scrapy.selector.Selector"
  },
  "type": "import"
 },
 "datalad.tests.utils.SilentHTTPHandler": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "six.moves.SimpleHTTPServer.SimpleHTTPRequestHandler"
   ]
  },
  "type": "class"
 },
 "datalad.tests.utils.SilentHTTPHandler.__init__": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "datalad.tests.utils.lgr",
    "datalad.tests.utils.logging",
    "six.moves.SimpleHTTPServer.SimpleHTTPRequestHandler.__init__"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.SilentHTTPHandler.log_message": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "datalad.tests.utils.lgr",
    "format"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.SimpleHTTPRequestHandler": {
  "data": {
   "shadows": "six.moves.SimpleHTTPServer.SimpleHTTPRequestHandler"
  },
  "type": "import"
 },
 "datalad.tests.utils.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "datalad.tests.utils._TEMP_PATHS_CLONES": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "datalad.tests.utils._TESTREPOS": {
  "data": {
   "lineno": 685
  },
  "type": "constant"
 },
 "datalad.tests.utils._get_repo_url": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.git",
    "len",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils._get_resolved_flavors": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "datalad.tests.utils.os",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils._get_testrepos_uris": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "BasicAnnexTestRepo",
    "BasicGitTestRepo",
    "InnerSubmodule",
    "NestedDataset",
    "SubmoduleDataset",
    "datalad.tests.utils._TESTREPOS",
    "datalad.tests.utils.clone_url",
    "datalad.tests.utils.re",
    "set",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils._multiproc_serve_path_via_http": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "chpwd",
    "datalad.tests.utils.SilentHTTPHandler",
    "six.moves.BaseHTTPServer.HTTPServer"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils._prep_file_under_git": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.os",
    "get_repo_instance",
    "os.path.curdir",
    "os.path.join",
    "os.path.split",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.assert_cwd_unchanged": {
  "data": {
   "lineno": 1024
  },
  "type": "function"
 },
 "datalad.tests.utils.assert_cwd_unchanged.newfunc": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "OSError",
    "chpwd",
    "datalad.tests.utils.lgr",
    "datalad.tests.utils.os",
    "func",
    "functools.wraps",
    "getpwd",
    "nose.tools.assert_equal",
    "six.reraise"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.assert_dict_equal": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "AssertionError",
    "bool",
    "len",
    "list",
    "nose.tools.eq_",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.utils.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "datalad.tests.utils.assert_greater": {
  "data": {
   "shadows": "nose.tools.assert_greater"
  },
  "type": "import"
 },
 "datalad.tests.utils.assert_in": {
  "data": {
   "shadows": "nose.tools.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.utils.assert_in_results": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "all",
    "assure_list",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.assert_is": {
  "data": {
   "shadows": "nose.tools.assert_is"
  },
  "type": "import"
 },
 "datalad.tests.utils.assert_is_generator": {
  "data": {
   "lineno": 434
  },
  "type": "constant"
 },
 "datalad.tests.utils.assert_is_instance": {
  "data": {
   "shadows": "nose.tools.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.tests.utils.assert_message": {
  "data": {
   "lineno": 1157,
   "symbols_in_volume": [
    "assure_list",
    "isinstance",
    "nose.tools.assert_equal",
    "nose.tools.assert_in",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.assert_no_errors_logged": {
  "data": {
   "lineno": 1360
  },
  "type": "function"
 },
 "datalad.tests.utils.assert_no_errors_logged.new_func": {
  "data": {
   "lineno": 1362,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.logging",
    "datalad.tests.utils.re",
    "func",
    "functools.wraps",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.assert_not_equal": {
  "data": {
   "shadows": "nose.tools.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.tests.utils.assert_not_in": {
  "data": {
   "shadows": "nose.tools.assert_not_in"
  },
  "type": "import"
 },
 "datalad.tests.utils.assert_not_in_results": {
  "data": {
   "lineno": 1198,
   "symbols_in_volume": [
    "any",
    "assure_list"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.assert_raises": {
  "data": {
   "shadows": "nose.tools.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.utils.assert_re_in": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.re",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.assert_result_count": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "AssertionError",
    "all",
    "assure_list",
    "json.dumps",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.assert_result_values_cond": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "assure_list",
    "cond",
    "nose.tools.ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.assert_result_values_equal": {
  "data": {
   "lineno": 1205,
   "symbols_in_volume": [
    "nose.tools.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.assert_set_equal": {
  "data": {
   "shadows": "nose.tools.assert_set_equal"
  },
  "type": "import"
 },
 "datalad.tests.utils.assert_status": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "AssertionError",
    "assure_list",
    "enumerate",
    "json.dumps",
    "len",
    "nose.tools.assert_in"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.utils.attr": {
  "data": {
   "shadows": "nose.plugins.attrib.attr"
  },
  "type": "import"
 },
 "datalad.tests.utils.binary_type": {
  "data": {
   "shadows": "six.binary_type"
  },
  "type": "import"
 },
 "datalad.tests.utils.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.tests.utils.clone_url": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "Runner",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils._TEMP_PATHS_CLONES",
    "datalad.tests.utils.tempfile",
    "get_tempfile_kwargs",
    "runner"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.create_tree": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "datalad.tests.utils.File",
    "datalad.tests.utils.create_tree_archive",
    "datalad.tests.utils.lgr",
    "datalad.tests.utils.os",
    "datalad.tests.utils.stat",
    "dict",
    "isinstance",
    "list",
    "open",
    "os.path.exists",
    "os.path.join",
    "six.PY2",
    "six.text_type",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.create_tree_archive": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "compress_files",
    "create_tree",
    "datalad.tests.utils.glob",
    "datalad.tests.utils.os",
    "datalad.tests.utils.shutil",
    "file_basename",
    "list",
    "os.path.join",
    "os.path.pardir",
    "six.moves.map"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.tests.utils.dump_graph": {
  "data": {
   "lineno": 1282,
   "symbols_in_volume": [
    "datalad.metadata.flatten_metadata_graph",
    "json.dumps"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.dumps": {
  "data": {
   "shadows": "json.dumps"
  },
  "type": "import"
 },
 "datalad.tests.utils.eq_": {
  "data": {
   "shadows": "nose.tools.eq_"
  },
  "type": "import"
 },
 "datalad.tests.utils.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.tests.utils.find_files": {
  "data": {
   "shadows": "datalad.utils.find_files"
  },
  "type": "import"
 },
 "datalad.tests.utils.flatten_metadata_graph": {
  "data": {
   "shadows": "datalad.metadata.flatten_metadata_graph"
  },
  "type": "import"
 },
 "datalad.tests.utils.fnmatch": {
  "data": {
   "shadows": "fnmatch.fnmatch"
  },
  "type": "import"
 },
 "datalad.tests.utils.get_datasets_topdir": {
  "data": {
   "lineno": 1396,
   "symbols_in_volume": [
    "RI",
    "datalad.consts.DATASETS_TOPURL"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.get_most_obscure_supported_name": {
  "data": {
   "lineno": 1310,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.tests.utils.OBSCURE_FILENAMES",
    "datalad.tests.utils.OBSCURE_PREFIX",
    "datalad.tests.utils.lgr",
    "datalad.tests.utils.platform",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.get_mtimes_and_digests": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "datalad.support.digests.Digester",
    "datalad.tests.utils.os",
    "datalad.utils.find_files",
    "digester",
    "os.path.exists",
    "os.path.relpath",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.git": {
  "data": {
   "shadows": "git"
  },
  "type": "import"
 },
 "datalad.tests.utils.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "datalad.tests.utils.ignore_nose_capturing_stdout": {
  "data": {
   "lineno": 1228
  },
  "type": "function"
 },
 "datalad.tests.utils.ignore_nose_capturing_stdout.newfunc": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "AttributeError",
    "func",
    "nose.SkipTest",
    "nose.tools.make_decorator"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.in_": {
  "data": {
   "shadows": "nose.tools.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.tests.utils.integration": {
  "data": {
   "lineno": 1415,
   "symbols_in_volume": [
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "datalad.tests.utils.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.utils.known_failure": {
  "data": {
   "lineno": 930
  },
  "type": "function"
 },
 "datalad.tests.utils.known_failure.newfunc": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "datalad.tests.utils.probe_known_failure",
    "datalad.tests.utils.skip_known_failure",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.known_failure_direct_mode": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "datalad.cfg.obtain",
    "func"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.known_failure_direct_mode.dm_func": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "datalad.tests.utils.known_failure",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.known_failure_v6": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "datalad.cfg.obtain",
    "func"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.known_failure_v6.v6_func": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "datalad.tests.utils.known_failure",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.lgr": {
  "data": {
   "lineno": 499
  },
  "type": "constant"
 },
 "datalad.tests.utils.local_testrepo_flavors": {
  "data": {
   "lineno": 680
  },
  "type": "constant"
 },
 "datalad.tests.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.tests.utils.make_decorator": {
  "data": {
   "shadows": "nose.tools.make_decorator"
  },
  "type": "import"
 },
 "datalad.tests.utils.map": {
  "data": {
   "shadows": "six.moves.map"
  },
  "type": "import"
 },
 "datalad.tests.utils.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "datalad.tests.utils.neq_": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "datalad.tests.utils.nok_": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "datalad.tests.utils.nok_startswith": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "nose.tools.assert_false"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.ok_": {
  "data": {
   "shadows": "nose.tools.ok_"
  },
  "type": "import"
 },
 "datalad.tests.utils.ok_annex_get": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "all",
    "bool",
    "datalad.tests.utils.ok_git_config_not_empty",
    "isinstance",
    "nose.tools.ok_",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.ok_archives_caches": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "datalad.tests.utils.glob",
    "len",
    "nose.tools.assert_equal",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.ok_broken_symlink": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "datalad.tests.utils.ok_symlink",
    "nose.tools.assert_false",
    "os.path.exists",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.ok_clean_git": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.lgr",
    "isinstance",
    "nose.tools.assert_is",
    "nose.tools.eq_",
    "nose.tools.ok_",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.ok_endswith": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "nose.tools.ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.ok_exists": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.ok_file_has_content": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "assert_re_in",
    "datalad.tests.utils.ok_exists",
    "nose.tools.assert_equal",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.ok_file_under_git": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "_prep_file_under_git",
    "datalad.support.annexrepo.FileNotInAnnexError",
    "nose.tools.assert_in"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.ok_generator": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "datalad.tests.utils.inspect",
    "nose.tools.assert_true"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.ok_git_config_not_empty": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "datalad.tests.utils.os",
    "nose.tools.assert_true",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.ok_good_symlink": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "datalad.tests.utils.ok_symlink",
    "nose.tools.ok_",
    "os.path.exists",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.ok_startswith": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "nose.tools.ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.ok_symlink": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.os"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.utils.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.tests.utils.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.utils.pathsplit": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "datalad.tests.utils.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "datalad.tests.utils.probe_known_failure": {
  "data": {
   "lineno": 892
  },
  "type": "function"
 },
 "datalad.tests.utils.probe_known_failure.newfunc": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "Exception",
    "datalad.cfg.obtain",
    "func",
    "functools.wraps",
    "nose.tools.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.put_file_under_git": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "_prep_file_under_git",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.ok_file_under_git",
    "isinstance",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "datalad.tests.utils.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "datalad.tests.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.tests.utils.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.tests.utils.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.tests.utils.reraise": {
  "data": {
   "shadows": "six.reraise"
  },
  "type": "import"
 },
 "datalad.tests.utils.run_under_dir": {
  "data": {
   "lineno": 1070
  },
  "type": "function"
 },
 "datalad.tests.utils.run_under_dir.newfunc": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "chpwd",
    "func",
    "functools.wraps",
    "getpwd"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.scrapy": {
  "data": {
   "shadows": "scrapy"
  },
  "type": "import"
 },
 "datalad.tests.utils.serve_path_via_http": {
  "data": {
   "lineno": 522
  },
  "type": "function"
 },
 "datalad.tests.utils.serve_path_via_http.newfunc": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "datalad.tests.utils._multiproc_serve_path_via_http",
    "datalad.tests.utils.lgr",
    "datalad.tests.utils.multiprocessing",
    "datalad.tests.utils.os",
    "functools.wraps",
    "len",
    "mock.patch.dict",
    "tfunc"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.tests.utils.skip_direct_mode": {
  "data": {
   "lineno": 1009
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_direct_mode.newfunc": {
  "data": {
   "lineno": 1016,
   "symbols_in_volume": [
    "datalad.cfg.obtain",
    "datalad.tests.utils.skip_if",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_httpretty_on_problematic_pythons": {
  "data": {
   "lineno": 1251
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_httpretty_on_problematic_pythons.newfunc": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "func",
    "nose.SkipTest",
    "nose.tools.make_decorator"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_if": {
  "data": {
   "lineno": 860
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_if.newfunc": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "func",
    "functools.wraps",
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_if_no_module": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Exception",
    "__import__",
    "exc_str",
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_if_no_network": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "check_and_raise",
    "func",
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_if_no_network.check_and_raise": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "datalad.tests.utils.os",
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_if_no_network.newfunc": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "check_and_raise",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_if_on_windows": {
  "data": {
   "lineno": 849
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_if_on_windows.newfunc": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "func",
    "functools.wraps",
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_if_scrapy_without_selector": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ImportError",
    "datalad.tests.utils.scrapy",
    "getattr",
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_if_url_is_not_available": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datalad.downloaders.base.DownloadError",
    "datalad.downloaders.providers.Providers.from_config_files",
    "datalad.tests.utils.re",
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_known_failure": {
  "data": {
   "lineno": 914
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_known_failure.newfunc": {
  "data": {
   "lineno": 922,
   "symbols_in_volume": [
    "datalad.cfg.obtain",
    "datalad.tests.utils.skip_if",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_ssh": {
  "data": {
   "lineno": 872
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_ssh.newfunc": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "datalad.cfg.get",
    "func",
    "functools.wraps",
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_v6": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "datalad.cfg.obtain"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.skip_v6.newfunc": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "datalad.tests.utils.skip_if",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.slow": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "datalad.tests.utils.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "datalad.tests.utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.tests.utils.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "datalad.tests.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.tests.utils.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.tests.utils.usecase": {
  "data": {
   "lineno": 1429,
   "symbols_in_volume": [
    "nose.plugins.attrib.attr"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.with_batch_direct": {
  "data": {
   "lineno": 1269
  },
  "type": "function"
 },
 "datalad.tests.utils.with_batch_direct.newfunc": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "functools.wraps",
    "t"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.with_fake_cookies_db": {
  "data": {
   "lineno": 809
  },
  "type": "function"
 },
 "datalad.tests.utils.with_fake_cookies_db.newfunc": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.with_memory_keyring": {
  "data": {
   "lineno": 572
  },
  "type": "function"
 },
 "datalad.tests.utils.with_memory_keyring.newfunc": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "MemoryKeyring",
    "functools.wraps",
    "mock.patch",
    "t"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.with_tempfile": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "borrowkwargs",
    "make_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.with_tempfile.newfunc": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "functools.wraps",
    "make_tempfile",
    "t"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.with_testrepos": {
  "data": {
   "lineno": 742
  },
  "type": "function"
 },
 "datalad.tests.utils.with_testrepos.newfunc": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "__debug__",
    "datalad.tests.utils._TEMP_PATHS_CLONES",
    "datalad.tests.utils._get_resolved_flavors",
    "datalad.tests.utils._get_testrepos_uris",
    "datalad.tests.utils.lgr",
    "datalad.tests.utils.os",
    "functools.wraps",
    "nose.SkipTest",
    "rmtemp",
    "t",
    "t.__name__"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.with_testsui": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.with_testsui.newfunc": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "datalad.ui.ui.add_responses",
    "datalad.ui.ui.backend",
    "datalad.ui.ui.get_responses",
    "datalad.ui.ui.set_backend",
    "functools.wraps",
    "len",
    "str",
    "t"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.with_tree": {
  "data": {
   "lineno": 483
  },
  "type": "function"
 },
 "datalad.tests.utils.with_tree.newfunc": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.tempfile",
    "functools.wraps",
    "get_tempfile_kwargs",
    "rmtemp",
    "t"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.without_http_proxy": {
  "data": {
   "lineno": 585
  },
  "type": "function"
 },
 "datalad.tests.utils.without_http_proxy.newfunc": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "datalad.tests.utils.os",
    "functools.wraps",
    "mock.patch.dict",
    "tfunc"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "datalad.tests.utils_testdatasets": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.utils_testdatasets.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.tests.utils_testdatasets.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.tests.utils_testdatasets.make_studyforrest_mockup": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.create_tree",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testdatasets.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.utils_testrepos.os",
    "datalad.tests.utils_testrepos.tempfile",
    "get_tempfile_kwargs",
    "open"
   ]
  },
  "type": "module"
 },
 "datalad.tests.utils_testrepos.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.BasicAnnexTestRepo": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "datalad.tests.utils_testrepos.TestRepo"
   ]
  },
  "type": "class"
 },
 "datalad.tests.utils_testrepos.BasicAnnexTestRepo.create_info_file": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.BasicAnnexTestRepo.populate": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "get_local_file_url"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.BasicGitTestRepo": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "datalad.tests.utils_testrepos.TestRepo"
   ]
  },
  "type": "class"
 },
 "datalad.tests.utils_testrepos.BasicGitTestRepo.create_info_file": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.BasicGitTestRepo.populate": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.InnerSubmodule": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.tests.utils_testrepos.InnerSubmodule.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "datalad.tests.utils_testrepos.NestedDataset"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.InnerSubmodule.create": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.InnerSubmodule.path": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "os.path.join",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.InnerSubmodule.url": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "get_local_file_url",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.NestedDataset": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "datalad.tests.utils_testrepos.BasicAnnexTestRepo"
   ]
  },
  "type": "class"
 },
 "datalad.tests.utils_testrepos.NestedDataset.populate": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "AnnexRepo",
    "datalad.tests.utils_testrepos.NestedDataset",
    "datalad.tests.utils_testrepos.SubmoduleDataset",
    "dict",
    "os.path.join",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.SubmoduleDataset": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "datalad.tests.utils_testrepos.BasicAnnexTestRepo"
   ]
  },
  "type": "class"
 },
 "datalad.tests.utils_testrepos.SubmoduleDataset.populate": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "AnnexRepo",
    "datalad.tests.utils_testrepos.BasicAnnexTestRepo",
    "datalad.tests.utils_testrepos.SubmoduleDataset",
    "dict",
    "os.path.join",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.TestRepo": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object",
    "six.add_metaclass"
   ]
  },
  "type": "class"
 },
 "datalad.tests.utils_testrepos.TestRepo.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.customremotes.base.init_datalad_remote",
    "datalad.tests.utils_testrepos.os",
    "datalad.tests.utils_testrepos.tempfile",
    "get_tempfile_kwargs",
    "os.path.exists",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.TestRepo.create": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "os.path.exists",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.TestRepo.create_file": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.TestRepo.path": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.TestRepo.populate": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.TestRepo.url": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "get_local_file_url",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.init_datalad_remote": {
  "data": {
   "shadows": "datalad.customremotes.base.init_datalad_remote"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.ui": {
  "data": {
   "symbols_in_volume": [
    "datalad.ui._UI_Switcher",
    "datalad.ui.lgr",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.ui._UI_Switcher": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.ui._UI_Switcher.__getattribute__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "datalad.ui._UI_Switcher",
    "getattr",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui._UI_Switcher.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "datalad.ui._UI_Switcher.__setattr__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "datalad.ui._UI_Switcher",
    "setattr",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui._UI_Switcher.backend": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.ui._UI_Switcher.set_backend": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "datalad.ui.lgr",
    "is_interactive"
   ]
  },
  "type": "function"
 },
 "datalad.ui._UI_Switcher.ui": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.ui.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.ui.base": {
  "data": {},
  "type": "module"
 },
 "datalad.ui.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "datalad.ui.base.InteractiveUI": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object",
    "six.add_metaclass"
   ]
  },
  "type": "class"
 },
 "datalad.ui.base.InteractiveUI.question": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.ui.base.InteractiveUI.yesno": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "datalad.ui.base.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.ui.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "datalad.ui.base.add_metaclass": {
  "data": {
   "shadows": "six.add_metaclass"
  },
  "type": "import"
 },
 "datalad.ui.dialog": {
  "data": {
   "symbols_in_volume": [
    "datalad.ui.dialog.lgr",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.ui.dialog.ConsoleLog": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.ui.dialog.ConsoleLog.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datalad.ui.dialog.sys"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.ConsoleLog.error": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "datalad.ui.dialog.ConsoleLog.get_progressbar": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "KeyError",
    "datalad.ui.dialog.ConsoleLog",
    "pbar"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.ConsoleLog.is_interactive": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.ConsoleLog.message": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "datalad.ui.dialog.DialogUI": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "datalad.ui.dialog.ConsoleLog"
   ]
  },
  "type": "class"
 },
 "datalad.ui.dialog.DialogUI.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "datalad.ui.dialog.DialogUI",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.DialogUI.question": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "RuntimeError",
    "ValueError",
    "datalad.ui.dialog.getpass_echo",
    "datalad.ui.dialog.os",
    "datalad.ui.dialog.time",
    "map"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.DialogUI.question.ask_repetition_match": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "datalad.ui.dialog.getpass"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.DialogUI.question.mark_default": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "datalad.ui.dialog.SilentConsoleLog": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "datalad.ui.dialog.ConsoleLog"
   ]
  },
  "type": "class"
 },
 "datalad.ui.dialog.SilentConsoleLog.get_progressbar": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "SilentProgressBar"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderAnnexUI": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "datalad.ui.dialog.DialogUI"
   ]
  },
  "type": "class"
 },
 "datalad.ui.dialog.UnderAnnexUI.__init__": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "datalad.ui.dialog.UnderAnnexUI",
    "datalad.ui.dialog.sys",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderAnnexUI.get_progressbar": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "datalad.ui.dialog.UnderAnnexUI",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderAnnexUI.set_specialremote": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderTestsUI": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "datalad.ui.dialog.DialogUI"
   ]
  },
  "type": "class"
 },
 "datalad.ui.dialog.UnderTestsUI.__enter__": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderTestsUI.__exit__": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "copy.copy",
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderTestsUI.__init__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "collections.deque",
    "datalad.ui.dialog.UnderTestsUI",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderTestsUI.add_responses": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderTestsUI.clear_responses": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderTestsUI.get_responses": {
  "data": {
   "lineno": 274
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderTestsUI.question": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.ui.dialog.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "datalad.ui.dialog.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "datalad.ui.dialog.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.ui.dialog.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "datalad.ui.dialog.getpass_echo": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "datalad.ui.dialog.getpass",
    "mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.lgr": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datalad.ui.dialog.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.ui.dialog.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.ui.dialog.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.ui.dialog.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.ui.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.ui.lgr": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datalad.ui.progressbars": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datalad.ui.progressbars.AnnexSpecialRemoteProgressBar",
    "datalad.ui.progressbars.SilentProgressBar",
    "datalad.ui.progressbars.progressbars",
    "datalad.ui.progressbars.tqdmProgressBar",
    "len"
   ]
  },
  "type": "module"
 },
 "datalad.ui.progressbars.AnnexSpecialRemoteProgressBar": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "datalad.ui.progressbars.ProgressBarBase"
   ]
  },
  "type": "class"
 },
 "datalad.ui.progressbars.AnnexSpecialRemoteProgressBar.__init__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "datalad.ui.progressbars.AnnexSpecialRemoteProgressBar",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.AnnexSpecialRemoteProgressBar.update": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "datalad.ui.progressbars.AnnexSpecialRemoteProgressBar",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.ui.progressbars.ProgressBarBase.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase.clear": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase.current": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase.finish": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase.refresh": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase.set_desc": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase.start": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase.update": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "datalad.ui.progressbars.SilentProgressBar": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datalad.ui.progressbars.ProgressBarBase"
   ]
  },
  "type": "class"
 },
 "datalad.ui.progressbars.SilentProgressBar.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "datalad.ui.progressbars.SilentProgressBar",
    "datalad.ui.progressbars.sys",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.ui.progressbars.progressbars": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "datalad.ui.progressbars.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.ui.progressbars.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "datalad.ui.progressbars.tqdmProgressBar": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "datalad.support.external_versions.external_versions",
    "datalad.ui.progressbars.ProgressBarBase",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.ui.progressbars.tqdmProgressBar.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "datalad.ui.progressbars.sys",
    "datalad.ui.progressbars.tqdmProgressBar",
    "datalad.utils.updated",
    "dict",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar._create": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar.clear": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar.finish": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "Exception",
    "datalad.ui.progressbars.tqdmProgressBar",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar.refresh": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "datalad.ui.progressbars.tqdmProgressBar",
    "hasattr",
    "super",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar.set_desc": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar.start": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "datalad.ui.progressbars.tqdmProgressBar",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar.update": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "datalad.ui.progressbars.tqdmProgressBar",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.updated": {
  "data": {
   "shadows": "datalad.utils.updated"
  },
  "type": "import"
 },
 "datalad.ui.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.ui.tests.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.ui.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "datalad.ui.tests.test_base.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.ui.tests.test_base.test_tests_ui": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "AssertionError",
    "_UI_Switcher",
    "assert_equal",
    "assert_false",
    "assert_raises",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_base.test_ui_switcher": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "AttributeError",
    "_UI_Switcher",
    "assert_equal",
    "assert_not_equal",
    "assert_raises",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_base.test_with_testsui": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "nothing"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_base.test_with_testsui.ask": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "assert_equal",
    "datalad.ui.ui.question",
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_base.test_with_testsui.nothing": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "assert_equal",
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_base.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_dialog": {
  "data": {},
  "type": "module"
 },
 "datalad.ui.tests.test_dialog.PY2": {
  "data": {
   "shadows": "six.PY2"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_dialog.StringIO": {
  "data": {
   "shadows": "six.moves.StringIO"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_dialog.__builtin__": {
  "data": {
   "shadows": "six.moves.builtins"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_dialog.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.ui.tests.test_dialog._test_progress_bar": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "DialogUI",
    "assert_in",
    "assert_re_in",
    "len",
    "ok_endswith",
    "ok_startswith",
    "range",
    "six.moves.StringIO"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_dialog.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_dialog.patch_getpass": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_dialog.patch_input": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "mock.patch.object",
    "six.PY2",
    "six.moves.builtins"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_dialog.progressbars": {
  "data": {
   "shadows": "datalad.ui.progressbars.progressbars"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_dialog.test_progress_bar": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "datalad.ui.progressbars.progressbars",
    "datalad.ui.tests.test_dialog._test_progress_bar"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_dialog.test_question_choices": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "DialogUI",
    "RuntimeError",
    "ValueError",
    "assert_raises",
    "assert_re_in",
    "datalad.ui.tests.test_dialog.patch_getpass",
    "eq_",
    "six.moves.StringIO",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.ui.ui": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "datalad.ui.utils": {
  "data": {},
  "type": "module"
 },
 "datalad.ui.utils.create_string_buffer": {
  "data": {
   "shadows": "ctypes.create_string_buffer"
  },
  "type": "import"
 },
 "datalad.ui.utils.fcntl": {
  "data": {
   "shadows": "fcntl"
  },
  "type": "import"
 },
 "datalad.ui.utils.get_terminal_size": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ctypes.create_string_buffer",
    "ctypes.windll.kernel32.GetConsoleScreenBufferInfo",
    "ctypes.windll.kernel32.GetStdHandle",
    "datalad.ui.utils.fcntl",
    "datalad.ui.utils.struct",
    "datalad.ui.utils.termios",
    "datalad.utils.on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.ui.utils.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.ui.utils.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "datalad.ui.utils.termios": {
  "data": {
   "shadows": "termios"
  },
  "type": "import"
 },
 "datalad.ui.utils.windll": {
  "data": {
   "shadows": "ctypes.windll"
  },
  "type": "import"
 },
 "datalad.utils": {
  "data": {
   "symbols_in_volume": [
    "datalad.utils._DATALAD_REGEX",
    "datalad.utils._VCS_REGEX",
    "datalad.utils.find_files",
    "datalad.utils.lgr",
    "datalad.utils.logging",
    "datalad.utils.on_linux",
    "datalad.utils.on_osx",
    "datalad.utils.on_windows",
    "datalad.utils.platform",
    "datalad.utils.platform_system",
    "datalad.utils.sys",
    "os.path.sep"
   ]
  },
  "type": "module"
 },
 "datalad.utils.CMD_MAX_ARG": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "datalad.utils.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.utils.TIMESTAMP_FMT": {
  "data": {
   "shadows": "datalad.consts.TIMESTAMP_FMT"
  },
  "type": "import"
 },
 "datalad.utils._DATALAD_REGEX": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "datalad.utils._VCS_REGEX": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "datalad.utils.__auto_repr__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "datalad.utils.shortened_repr",
    "getattr",
    "hasattr",
    "set",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.utils.__builtin__": {
  "data": {
   "shadows": "six.moves.builtins"
  },
  "type": "import"
 },
 "datalad.utils._get_normalized_paths": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "ValueError",
    "datalad.utils.with_pathsep",
    "os.path.isabs"
   ]
  },
  "type": "function"
 },
 "datalad.utils._path_": {
  "data": {
   "lineno": 1191,
   "symbols_in_volume": [
    "datalad.utils.on_windows",
    "map",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.utils._sys_excepthook": {
  "data": {
   "lineno": 931
  },
  "type": "constant"
 },
 "datalad.utils.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.utils.any_re_search": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "assure_tuple_or_list",
    "datalad.utils.re"
   ]
  },
  "type": "function"
 },
 "datalad.utils.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.utils.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.utils.assure_bool": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "isinstance",
    "six.string_types"
   ]
  },
  "type": "function"
 },
 "datalad.utils.assure_dict_from_str": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "ValueError",
    "datalad.utils.assure_list_from_str",
    "dict",
    "isinstance",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.utils.assure_dir": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "datalad.utils.os",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.utils.assure_list": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "list",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "datalad.utils.assure_list_from_str": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "datalad.utils.assure_tuple_or_list": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.utils.assure_unicode": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "isinstance",
    "six.binary_type"
   ]
  },
  "type": "function"
 },
 "datalad.utils.auto_repr": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "datalad.utils.__auto_repr__"
   ]
  },
  "type": "function"
 },
 "datalad.utils.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.utils.better_wraps": {
  "data": {
   "lineno": 589
  },
  "type": "function"
 },
 "datalad.utils.better_wraps.intermediator": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "datalad.utils.wrapt",
    "to_be_wrapper"
   ]
  },
  "type": "function"
 },
 "datalad.utils.binary_type": {
  "data": {
   "shadows": "six.binary_type"
  },
  "type": "import"
 },
 "datalad.utils.chpwd": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.utils.chpwd.__enter__": {
  "data": {
   "lineno": 1021
  },
  "type": "function"
 },
 "datalad.utils.chpwd.__exit__": {
  "data": {
   "lineno": 1025
  },
  "type": "function"
 },
 "datalad.utils.chpwd.__init__": {
  "data": {
   "lineno": 1001,
   "symbols_in_volume": [
    "datalad.utils.getpwd",
    "datalad.utils.lgr",
    "datalad.utils.os",
    "os.path.isabs",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "datalad.utils.commonprefix": {
  "data": {
   "shadows": "os.path.commonprefix"
  },
  "type": "import"
 },
 "datalad.utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "datalad.utils.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.utils.decode_input": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "datalad.utils.lgr",
    "datalad.utils.sys",
    "isinstance",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "datalad.utils.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.utils.dirsep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "datalad.utils.disable_logger": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "NullFilter",
    "contextlib.contextmanager",
    "datalad.utils.logging"
   ]
  },
  "type": "function"
 },
 "datalad.utils.disable_logger.NullFilter": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "datalad.utils.logging"
   ]
  },
  "type": "class"
 },
 "datalad.utils.disable_logger.NullFilter.filter": {
  "data": {
   "lineno": 912
  },
  "type": "function"
 },
 "datalad.utils.encode_filename": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "datalad.utils.sys",
    "isinstance",
    "six.text_type"
   ]
  },
  "type": "function"
 },
 "datalad.utils.escape_filename": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "datalad.utils.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.utils.expandpath": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "os.path.abspath",
    "os.path.expanduser",
    "os.path.expandvars"
   ]
  },
  "type": "function"
 },
 "datalad.utils.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "datalad.utils.expandvars": {
  "data": {
   "shadows": "os.path.expandvars"
  },
  "type": "import"
 },
 "datalad.utils.file_basename": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "datalad.utils.re",
    "len",
    "os.path.basename"
   ]
  },
  "type": "function"
 },
 "datalad.utils.find_files": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "datalad.utils._DATALAD_REGEX",
    "datalad.utils._VCS_REGEX",
    "datalad.utils.os",
    "datalad.utils.re",
    "filter",
    "os.path.curdir",
    "os.path.join",
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "datalad.utils.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "datalad.utils.generate_chunks": {
  "data": {
   "lineno": 553
  },
  "type": "function"
 },
 "datalad.utils.get_dataset_root": {
  "data": {
   "lineno": 1281,
   "symbols_in_volume": [
    "datalad.utils.os",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.exists",
    "os.path.isdir",
    "os.path.join",
    "os.path.normpath",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "datalad.utils.get_func_kwargs_doc": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "inspect.getargspec"
   ]
  },
  "type": "function"
 },
 "datalad.utils.get_logfilename": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "datalad.utils.assure_dir",
    "datalad.utils.get_timestamp_suffix",
    "os.path.exists",
    "os.path.isdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.utils.get_path_prefix": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "datalad.utils.getpwd",
    "datalad.utils.with_pathsep",
    "os.path.commonprefix",
    "os.path.curdir",
    "os.path.isabs",
    "os.path.join",
    "os.path.relpath",
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "datalad.utils.get_tempfile_kwargs": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "datalad.utils.on_windows",
    "datalad.utils.os"
   ]
  },
  "type": "function"
 },
 "datalad.utils.get_timestamp_suffix": {
  "data": {
   "lineno": 1200,
   "symbols_in_volume": [
    "datalad.consts.TIMESTAMP_FMT",
    "datalad.utils.time",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.utils.get_trace": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.utils.getargspec": {
  "data": {
   "shadows": "inspect.getargspec"
  },
  "type": "import"
 },
 "datalad.utils.getpwd": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "KeyError",
    "datalad.utils.os"
   ]
  },
  "type": "function"
 },
 "datalad.utils.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "datalad.utils.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "datalad.utils.is_explicit_path": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "datalad.utils.expandpath",
    "datalad.utils.os",
    "os.path.isabs"
   ]
  },
  "type": "function"
 },
 "datalad.utils.is_interactive": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "datalad.utils.sys"
   ]
  },
  "type": "function"
 },
 "datalad.utils.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.utils.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.utils.islink": {
  "data": {
   "shadows": "os.path.islink"
  },
  "type": "import"
 },
 "datalad.utils.knows_annex": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.utils.lgr",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.utils.lgr": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datalad.utils.line_profile": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "datalad.utils.line_profiler",
    "datalad.utils.optional_args"
   ]
  },
  "type": "function"
 },
 "datalad.utils.line_profile.newfunc": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "functools.wraps",
    "pfunc",
    "prof",
    "prof.print_stats"
   ]
  },
  "type": "function"
 },
 "datalad.utils.line_profiler": {
  "data": {
   "shadows": "line_profiler"
  },
  "type": "import"
 },
 "datalad.utils.lmtime": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "Runner",
    "datalad.utils.lgr",
    "datalad.utils.os",
    "datalad.utils.time",
    "os.path.exists",
    "os.path.islink",
    "os.path.realpath"
   ]
  },
  "type": "function"
 },
 "datalad.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.utils.make_tempfile": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "OSError",
    "ValueError",
    "__debug__",
    "contextlib.contextmanager",
    "datalad.utils.get_tempfile_kwargs",
    "datalad.utils.glob",
    "datalad.utils.lgr",
    "datalad.utils.rmtemp",
    "datalad.utils.tempfile",
    "isinstance",
    "len",
    "open",
    "os.path.realpath",
    "six.binary_type"
   ]
  },
  "type": "function"
 },
 "datalad.utils.md5sum": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "datalad.utils.hashlib",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.utils.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.utils.not_supported_on_windows": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "NotImplementedError",
    "datalad.utils.on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.utils.nothing_cm": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "datalad.utils.on_debian_wheezy": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "datalad.utils.on_linux": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "datalad.utils.on_osx": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "datalad.utils.on_windows": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "datalad.utils.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.utils.optional_args": {
  "data": {
   "lineno": 608
  },
  "type": "function"
 },
 "datalad.utils.optional_args.wrapper": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "datalad.utils.better_wraps",
    "datalad.utils.collections",
    "dec",
    "decorator",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.utils.optional_args.wrapper.dec": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "decorator"
   ]
  },
  "type": "function"
 },
 "datalad.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.utils.path_is_subpath": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "datalad.utils._get_normalized_paths",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.utils.path_startswith": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "datalad.utils._get_normalized_paths"
   ]
  },
  "type": "function"
 },
 "datalad.utils.pdb": {
  "data": {
   "shadows": "pdb"
  },
  "type": "import"
 },
 "datalad.utils.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "datalad.utils.platform_system": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datalad.utils.posix_relpath": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "datalad.utils.posixpath",
    "os.path.relpath",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "datalad.utils.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "datalad.utils.psplit": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "datalad.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.utils.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.utils.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.utils.rmtemp": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "OSError",
    "datalad.utils.lgr",
    "datalad.utils.on_windows",
    "datalad.utils.os",
    "datalad.utils.rmtree",
    "range",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "datalad.utils.rmtree": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "datalad.utils.on_windows",
    "datalad.utils.os",
    "datalad.utils.rotree",
    "datalad.utils.shutil"
   ]
  },
  "type": "function"
 },
 "datalad.utils.rotree": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "chmod",
    "datalad.utils.os",
    "os.path.exists",
    "os.path.join",
    "os.path.stat.S_IREAD",
    "os.path.stat.S_IWRITE"
   ]
  },
  "type": "function"
 },
 "datalad.utils.safe_print": {
  "data": {
   "lineno": 1332,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "datalad.utils.sys",
    "getattr",
    "hasattr",
    "print_f",
    "six.moves.builtins"
   ]
  },
  "type": "function"
 },
 "datalad.utils.saved_generator": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "gen1",
    "gen2"
   ]
  },
  "type": "function"
 },
 "datalad.utils.saved_generator.gen1": {
  "data": {
   "lineno": 574
  },
  "type": "function"
 },
 "datalad.utils.saved_generator.gen2": {
  "data": {
   "lineno": 579
  },
  "type": "function"
 },
 "datalad.utils.sep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "datalad.utils.setup_exceptionhook": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "IPython.core.ultratb.FormattedTB",
    "datalad.utils.is_interactive",
    "datalad.utils.sys"
   ]
  },
  "type": "function"
 },
 "datalad.utils.setup_exceptionhook._datalad_pdb_excepthook": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "datalad.utils.is_interactive",
    "datalad.utils.pdb",
    "datalad.utils.traceback",
    "print",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.utils.shortened_repr": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "hasattr",
    "len",
    "object.__repr__",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.utils.slash_join": {
  "data": {
   "lineno": 1318
  },
  "type": "function"
 },
 "datalad.utils.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "datalad.utils.sorted_files": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "datalad.utils.os",
    "len",
    "os.path.join",
    "sorted",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.utils.stat": {
  "data": {
   "shadows": "os.path.stat"
  },
  "type": "import"
 },
 "datalad.utils.string_types": {
  "data": {
   "shadows": "six.string_types"
  },
  "type": "import"
 },
 "datalad.utils.swallow_logs": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "StringIOAdapter",
    "contextlib.contextmanager",
    "datalad.utils.lgr",
    "datalad.utils.logging",
    "getattr",
    "isinstance",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_logs.StringIOAdapter": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.utils.swallow_logs.StringIOAdapter.__init__": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "datalad.utils.get_tempfile_kwargs",
    "datalad.utils.tempfile",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_logs.StringIOAdapter._read": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_logs.StringIOAdapter.assert_logged": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_re_in"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_logs.StringIOAdapter.cleanup": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "datalad.utils.gc",
    "datalad.utils.rmtemp"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_logs.StringIOAdapter.handle": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_logs.StringIOAdapter.lines": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_logs.StringIOAdapter.out": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_outputs": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "StringIOAdapter",
    "contextlib.contextmanager",
    "datalad.utils.sys",
    "getattr",
    "oldprint",
    "setattr",
    "six.moves.builtins"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_outputs.StringIOAdapter": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.utils.swallow_outputs.StringIOAdapter.__init__": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "datalad.utils.get_tempfile_kwargs",
    "datalad.utils.tempfile",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_outputs.StringIOAdapter._read": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_outputs.StringIOAdapter.cleanup": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "datalad.utils.gc",
    "datalad.utils.rmtemp"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_outputs.StringIOAdapter.err": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_outputs.StringIOAdapter.handles": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_outputs.StringIOAdapter.out": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.utils.swallow_outputs.fake_print": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "datalad.utils.sys",
    "oldprint",
    "os.path.sep",
    "os.path.sep.join"
   ]
  },
  "type": "function"
 },
 "datalad.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.utils.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.utils.text_type": {
  "data": {
   "shadows": "six.text_type"
  },
  "type": "import"
 },
 "datalad.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.utils.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "datalad.utils.try_multiple": {
  "data": {
   "lineno": 1303,
   "symbols_in_volume": [
    "datalad.utils.lgr",
    "exc_str",
    "f",
    "range",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "datalad.utils.ultratb": {
  "data": {
   "shadows": "IPython.core.ultratb"
  },
  "type": "import"
 },
 "datalad.utils.unique": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "key",
    "seen_add",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.utils.updated": {
  "data": {
   "lineno": 970
  },
  "type": "function"
 },
 "datalad.utils.with_pathsep": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "datalad.utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "datalad.utils.wrapt": {
  "data": {
   "shadows": "wrapt"
  },
  "type": "import"
 },
 "datalad.version": {
  "data": {
   "symbols_in_volume": [
    "OSError",
    "datalad.version.__full_version__",
    "datalad.version.__version__",
    "datalad.version.line",
    "datalad.version.moddir",
    "datalad.version.projdir",
    "datalad.version.sys",
    "os.path.curdir",
    "os.path.dirname",
    "os.path.join",
    "os.path.lexists",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "module"
 },
 "datalad.version.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "datalad.version.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "datalad.version._": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "datalad.version.__full_version__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "datalad.version.__version__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.version.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.version.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.version.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.version.line": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datalad.version.moddir": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datalad.version.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.version.projdir": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.version.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 }
}