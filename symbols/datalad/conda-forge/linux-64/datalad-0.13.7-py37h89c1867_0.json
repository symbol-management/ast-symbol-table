{
 "*": {
  "data": {
   "imports": [
    "datalad.tests.utils"
   ]
  },
  "type": "star-import"
 },
 "datalad": {
  "data": {
   "symbols_in_volume": [
    "ConfigManager",
    "ImportError",
    "RuntimeError",
    "SSHManager",
    "__debug__",
    "datalad._seed",
    "datalad.atexit",
    "datalad.colorama",
    "datalad.os",
    "datalad.random",
    "datalad.ssh_manager",
    "datalad.test",
    "datalad.utils.getpwd"
   ]
  },
  "type": "module"
 },
 "datalad.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.DEFAULT_BRANCH": {
  "data": {
   "shadows": "datalad.tests.utils.DEFAULT_BRANCH"
  },
  "type": "import"
 },
 "datalad.NoseTester": {
  "data": {
   "shadows": "datalad.support.third.nosetester.NoseTester"
  },
  "type": "import"
 },
 "datalad.OBSCURE_FILENAME": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_FILENAME"
  },
  "type": "import"
 },
 "datalad.OrigStringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "datalad._TEMP_PATHS_GENERATED": {
  "data": {
   "shadows": "datalad.tests._TEMP_PATHS_GENERATED"
  },
  "type": "import"
 },
 "datalad.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "datalad.__main__.main"
   ]
  },
  "type": "module"
 },
 "datalad.__main__.getopt": {
  "data": {
   "shadows": "getopt"
  },
  "type": "import"
 },
 "datalad.__main__.main": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "AutomagicIO",
    "IOError",
    "SystemExit",
    "compile",
    "datalad.__main__.getopt",
    "datalad.__main__.os",
    "datalad.__main__.runctx",
    "datalad.__main__.sys",
    "datalad.__main__.usage",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.__main__.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.__main__.runctx": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "exec",
    "globals",
    "locals"
   ]
  },
  "type": "function"
 },
 "datalad.__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.__main__.usage": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "datalad.__main__.sys"
   ]
  },
  "type": "function"
 },
 "datalad._seed": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datalad._test_states": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "datalad.api": {
  "data": {
   "symbols_in_volume": [
    "__doc__",
    "datalad.api._command_summary",
    "datalad.api._generate_extension_api",
    "datalad.api._load_plugins"
   ]
  },
  "type": "module"
 },
 "datalad.api._command_summary": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "collections.defaultdict",
    "datalad.interface.base.alter_interface_docs_for_api",
    "datalad.interface.base.get_api_name",
    "datalad.interface.base.get_cmd_doc",
    "datalad.interface.base.get_cmd_summaries",
    "datalad.interface.base.get_interface_groups",
    "datalad.interface.base.load_interface",
    "getattr",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.api._generate_extension_api": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Exception",
    "datalad.api.logging",
    "datalad.dochelpers.exc_str",
    "datalad.interface.base.get_api_name",
    "getattr",
    "globals",
    "importlib.import_module",
    "pkg_resources.iter_entry_points"
   ]
  },
  "type": "function"
 },
 "datalad.api._get_plugins": {
  "data": {
   "shadows": "datalad.plugin._get_plugins"
  },
  "type": "import"
 },
 "datalad.api._load_plugin": {
  "data": {
   "shadows": "datalad.plugin._load_plugin"
  },
  "type": "import"
 },
 "datalad.api._load_plugins": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "datalad.api.re",
    "datalad.plugin._get_plugins",
    "datalad.plugin._load_plugin",
    "globals"
   ]
  },
  "type": "function"
 },
 "datalad.api.alter_interface_docs_for_api": {
  "data": {
   "shadows": "datalad.interface.base.alter_interface_docs_for_api"
  },
  "type": "import"
 },
 "datalad.api.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "datalad.api.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.api.get_api_name": {
  "data": {
   "shadows": "datalad.interface.base.get_api_name"
  },
  "type": "import"
 },
 "datalad.api.get_cmd_doc": {
  "data": {
   "shadows": "datalad.interface.base.get_cmd_doc"
  },
  "type": "import"
 },
 "datalad.api.get_cmd_summaries": {
  "data": {
   "shadows": "datalad.interface.base.get_cmd_summaries"
  },
  "type": "import"
 },
 "datalad.api.get_interface_groups": {
  "data": {
   "shadows": "datalad.interface.base.get_interface_groups"
  },
  "type": "import"
 },
 "datalad.api.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "datalad.api.iter_entry_points": {
  "data": {
   "shadows": "pkg_resources.iter_entry_points"
  },
  "type": "import"
 },
 "datalad.api.load_interface": {
  "data": {
   "shadows": "datalad.interface.base.load_interface"
  },
  "type": "import"
 },
 "datalad.api.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.api.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "datalad.auto": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "datalad.auto.lgr",
    "datalad.auto.logging",
    "exc_str",
    "os.path.sep"
   ]
  },
  "type": "module"
 },
 "datalad.auto.AutomagicIO": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.auto.AutomagicIO.__del__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO.__enter__": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO.__exit__": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datalad.auto.builtins",
    "datalad.auto.h5py",
    "datalad.auto.io",
    "datalad.auto.lzma",
    "datalad.auto.os",
    "set",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._dataset_auto_get": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "RuntimeError",
    "ValueError",
    "datalad.auto.lgr",
    "datalad.support.exceptions.InvalidGitRepositoryError",
    "exc_str",
    "get_repo_instance",
    "getpwd",
    "id",
    "isinstance",
    "os.path.dirname",
    "os.path.isabs",
    "os.path.join",
    "os.path.lexists",
    "os.path.sep",
    "os.path.sep.join"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_exists": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "os.path.exists",
    "os.path.lexists",
    "os.path.realpath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_h5py_File": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_io_open": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_isfile": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_lzma_LZMAFile": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_open": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_open_name_mode": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "Exception",
    "datalad.auto._DOT_GIT_DIR",
    "datalad.auto._EarlyExit",
    "datalad.auto.lgr",
    "datalad.auto.os",
    "exc_str",
    "int",
    "isinstance",
    "len",
    "origfunc",
    "os.path.isabs"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO._proxy_os_stat": {
  "data": {
   "lineno": 188
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO.activate": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "datalad.auto.builtins",
    "datalad.auto.h5py",
    "datalad.auto.io",
    "datalad.auto.lgr",
    "datalad.auto.lzma",
    "datalad.auto.os",
    "datalad.auto.sys",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO.active": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO.autoget": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.auto.AutomagicIO.deactivate": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "datalad.auto.builtins",
    "datalad.auto.h5py",
    "datalad.auto.io",
    "datalad.auto.lgr",
    "datalad.auto.lzma",
    "datalad.auto.os"
   ]
  },
  "type": "function"
 },
 "datalad.auto.InvalidGitRepositoryError": {
  "data": {
   "shadows": "datalad.support.exceptions.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "datalad.auto._DOT_GIT_DIR": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datalad.auto._EarlyExit": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.auto._EarlyExit.__init__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "datalad.auto.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "datalad.auto.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.auto.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.auto.h5py": {
  "data": {
   "shadows": "h5py"
  },
  "type": "import"
 },
 "datalad.auto.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "datalad.auto.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.auto.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.auto.lgr": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "datalad.auto.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.auto.lzma": {
  "data": {
   "shadows": "lzma"
  },
  "type": "import"
 },
 "datalad.auto.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.auto.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.auto.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.auto.pathsep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "datalad.auto.realpath": {
  "data": {
   "shadows": "os.path.realpath"
  },
  "type": "import"
 },
 "datalad.auto.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.capture": {
  "data": {
   "shadows": "nose.plugins.capture"
  },
  "type": "import"
 },
 "datalad.cfg": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "datalad.cmd": {
  "data": {
   "symbols_in_volume": [
    "datalad.cmd.asyncio",
    "datalad.cmd.cmd_done",
    "datalad.cmd.factory",
    "datalad.cmd.functools",
    "datalad.cmd.lgr",
    "datalad.cmd.logging",
    "datalad.cmd.os",
    "datalad.cmd.proc",
    "datalad.cmd.protocol_kwargs",
    "datalad.cmd.result",
    "datalad.cmd.sys",
    "datalad.cmd.transport"
   ]
  },
  "type": "module"
 },
 "datalad.cmd.BatchedCommand": {
  "data": {
   "lineno": 1203,
   "symbols_in_volume": [
    "datalad.cmd.SafeDelCloseMixin"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.BatchedCommand.__call__": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.BatchedCommand.__init__": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "datalad.cmd.readline_rstripped",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.BatchedCommand._check_process": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "datalad.cmd.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.BatchedCommand._initialize": {
  "data": {
   "lineno": 1218,
   "symbols_in_volume": [
    "datalad.cmd.GitRunnerBase",
    "datalad.cmd.lgr",
    "datalad.cmd.subprocess",
    "datalad.cmd.tempfile",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.BatchedCommand.close": {
  "data": {
   "lineno": 1320,
   "symbols_in_volume": [
    "datalad.cmd.lgr",
    "datalad.cmd.os",
    "ensure_unicode",
    "f",
    "f.read",
    "len",
    "open",
    "unlink"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.BatchedCommand.proc1": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "assure_unicode",
    "datalad.cmd.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.BatchedCommand.yield_": {
  "data": {
   "lineno": 1278,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.GitRunner": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "datalad.cmd.GitRunnerBase",
    "datalad.cmd.Runner"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.GitRunner.__init__": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "borrowdoc",
    "datalad.cmd.Runner",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.GitRunner.run": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "assure_unicode",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.GitRunnerBase": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.GitRunnerBase._check_git_path": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "datalad.cmd.GitRunnerBase",
    "datalad.cmd.lgr",
    "datalad.cmd.os",
    "distutils.spawn.find_executable",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.GitRunnerBase._get_bundled_path": {
  "data": {
   "lineno": 1089,
   "symbols_in_volume": [
    "distutils.spawn.find_executable",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.GitRunnerBase.get_git_environ_adjusted": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": [
    "datalad.cmd.GitRunnerBase",
    "datalad.cmd.lgr",
    "datalad.cmd.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.GitWitlessRunner": {
  "data": {
   "lineno": 1161,
   "symbols_in_volume": [
    "datalad.cmd.GitRunnerBase",
    "datalad.cmd.WitlessRunner"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.GitWitlessRunner.__init__": {
  "data": {
   "lineno": 1167,
   "symbols_in_volume": [
    "borrowdoc",
    "datalad.cmd.WitlessRunner",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.GitWitlessRunner._get_adjusted_env": {
  "data": {
   "lineno": 1172,
   "symbols_in_volume": [
    "datalad.cmd.GitRunnerBase",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.KillOutput": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "datalad.cmd.WitlessProtocol"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.KillOutput.pipe_data_received": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "datalad.cmd.lgr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.NoCapture": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "datalad.cmd.WitlessProtocol"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.cmd.Runner": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.Runner.__call__": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.__init__": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "datalad.cmd.atexit",
    "datalad.cmd.functools",
    "datalad.cmd.os",
    "id"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner._get_log_setting": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "adapter"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner._get_output_online": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "bytes",
    "callable",
    "datalad.cmd._decide_to_log",
    "datalad.cmd.proc",
    "datalad.cmd.time"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner._log_err": {
  "data": {
   "lineno": 666
  },
  "type": "function"
 },
 "datalad.cmd.Runner._log_out": {
  "data": {
   "lineno": 662
  },
  "type": "function"
 },
 "datalad.cmd.Runner._opt_env_adapter": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "bool",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner._process_one_line": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "RuntimeError",
    "assure_bytes",
    "assure_unicode",
    "bytes",
    "datalad.cmd.lgr",
    "datalad.cmd.proc",
    "log_"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner._process_remaining_output": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "bytes",
    "datalad.cmd._MAGICAL_OUTPUT_MARKER",
    "datalad.cmd.linesep_bytes",
    "getattr",
    "io.IOBase",
    "isinstance",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.call": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "Exception",
    "f",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.log": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "datalad.cmd.lgr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.log_cwd": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.log_env": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.log_outputs": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.log_stdin": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.run": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "BaseException",
    "CommandError",
    "Exception",
    "datalad.cmd._cleanup_output",
    "datalad.cmd._get_output_stream",
    "datalad.cmd.lgr",
    "datalad.cmd.proc",
    "datalad.cmd.subprocess",
    "datalad.cmd.sys",
    "exc_str",
    "isinstance",
    "map",
    "split_cmdline",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.Runner.run.decode_if_not_None": {
  "data": {
   "lineno": 942,
   "symbols_in_volume": [
    "bytes.decode"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.SafeDelCloseMixin": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.SafeDelCloseMixin.__del__": {
  "data": {
   "lineno": 1192,
   "symbols_in_volume": [
    "TypeError",
    "datalad.cmd.lgr",
    "datalad.cmd.os"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.StdErrCapture": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "datalad.cmd.WitlessProtocol"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.StdOutCapture": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "datalad.cmd.WitlessProtocol"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.StdOutErrCapture": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "datalad.cmd.WitlessProtocol"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.WitlessProtocol": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "datalad.cmd.asyncio"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.WitlessProtocol.__init__": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "ImportError",
    "Streams",
    "bytearray",
    "collections.namedtuple",
    "datalad.cmd.lgr",
    "locale.getpreferredencoding",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.WitlessProtocol._log_nolog": {
  "data": {
   "lineno": 277
  },
  "type": "function"
 },
 "datalad.cmd.WitlessProtocol._log_summary": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "assure_unicode",
    "datalad.cmd.lgr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.WitlessProtocol._prepare_result": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "bytes",
    "datalad.cmd.lgr",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.WitlessProtocol.connection_made": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "datalad.cmd.lgr",
    "datalad.cmd.transport"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.WitlessProtocol.pipe_data_received": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "datalad.cmd.WitlessProtocol.process_exited": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "datalad.cmd.WitlessRunner": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.cmd.WitlessRunner.__init__": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.WitlessRunner._get_adjusted_env": {
  "data": {
   "lineno": 396
  },
  "type": "function"
 },
 "datalad.cmd.WitlessRunner.run": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "CommandError",
    "datalad.cmd.NoCapture",
    "datalad.cmd.asyncio",
    "datalad.cmd.lgr",
    "datalad.cmd.sys",
    "run_async_cmd"
   ]
  },
  "type": "function"
 },
 "datalad.cmd._MAGICAL_OUTPUT_MARKER": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "datalad.cmd._TEMP_std": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "datalad.cmd._cleanup_output": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "datalad.cmd._MAGICAL_OUTPUT_MARKER",
    "datalad.cmd.subprocess",
    "getattr",
    "io.IOBase",
    "isinstance",
    "unlink"
   ]
  },
  "type": "function"
 },
 "datalad.cmd._decide_to_log": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "callable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.cmd._get_output_stream": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "datalad.cmd._MAGICAL_OUTPUT_MARKER",
    "datalad.cmd.subprocess",
    "datalad.cmd.tempfile",
    "get_tempfile_kwargs",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "datalad.cmd.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "datalad.cmd.cmd_done": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "datalad.cmd.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "datalad.cmd.factory": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "datalad.cmd.file_class": {
  "data": {
   "shadows": "io.IOBase"
  },
  "type": "import"
 },
 "datalad.cmd.find_executable": {
  "data": {
   "shadows": "distutils.spawn.find_executable"
  },
  "type": "import"
 },
 "datalad.cmd.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "datalad.cmd.getpreferredencoding": {
  "data": {
   "shadows": "locale.getpreferredencoding"
  },
  "type": "import"
 },
 "datalad.cmd.lgr": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.cmd.linesep_bytes": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "datalad.cmd.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.cmd.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "datalad.cmd.op": {
  "data": {
   "shadows": "path"
  },
  "type": "import"
 },
 "datalad.cmd.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.cmd.proc": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "datalad.cmd.protocol_kwargs": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "datalad.cmd.readline_rstripped": {
  "data": {
   "lineno": 1183
  },
  "type": "function"
 },
 "datalad.cmd.result": {
  "data": {
   "lineno": 225
  },
  "type": "constant"
 },
 "datalad.cmd.run_gitcommand_on_file_list_chunks": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "RuntimeError",
    "collections.defaultdict",
    "datalad.cmd.lgr",
    "dict",
    "enumerate",
    "func",
    "generate_file_chunks",
    "isinstance",
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.cmd.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "datalad.cmd.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.cmd.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.cmd.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.cmd.transport": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "datalad.cmdline": {
  "data": {},
  "type": "module"
 },
 "datalad.cmdline.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.cmdline.common_args": {
  "data": {
   "symbols_in_volume": [
    "datalad.cmdline.common_args._log_level_names",
    "dict",
    "range",
    "str"
   ]
  },
  "type": "module"
 },
 "datalad.cmdline.common_args.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.cmdline.common_args._log_level_names": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datalad.cmdline.common_args.change_path": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datalad.cmdline.common_args.help": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.cmdline.common_args.log_level": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "datalad.cmdline.common_args.pbs_runner": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "datalad.cmdline.common_args.version": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datalad.cmdline.helpers": {
  "data": {
   "symbols_in_volume": [
    "appdirs.AppDirs",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.cmdline.helpers.AppDirs": {
  "data": {
   "shadows": "appdirs.AppDirs"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.HelpAction": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datalad.cmdline.helpers.argparse"
   ]
  },
  "type": "class"
 },
 "datalad.cmdline.helpers.HelpAction.__call__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "IOError",
    "IndexError",
    "OSError",
    "ValueError",
    "datalad.cmdline.helpers.gzip",
    "datalad.cmdline.helpers.lgr",
    "datalad.cmdline.helpers.os",
    "datalad.cmdline.helpers.re",
    "datalad.cmdline.helpers.subprocess",
    "datalad.cmdline.helpers.sys",
    "exc_str",
    "is_interactive",
    "len",
    "print",
    "sorted",
    "textwrap.wrap"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.helpers.InvalidGitRepositoryError": {
  "data": {
   "shadows": "datalad.support.exceptions.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.LogLevelAction": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "datalad.cmdline.helpers.argparse"
   ]
  },
  "type": "class"
 },
 "datalad.cmdline.helpers.LogLevelAction.__call__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "LoggerHelper"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.helpers.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.cmdline.helpers.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.curdir": {
  "data": {
   "shadows": "os.curdir"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.dirs": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "datalad.cmdline.helpers.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.get_repo_instance": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "AnnexRepo",
    "GitRepo",
    "RuntimeError",
    "class_",
    "datalad.cmdline.helpers.opj",
    "datalad.support.exceptions.InvalidGitRepositoryError",
    "expandpath",
    "os.curdir",
    "os.path.exists",
    "os.path.isabs",
    "os.path.ismount",
    "os.path.normpath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.helpers.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.ismount": {
  "data": {
   "shadows": "os.path.ismount"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.lgr": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "datalad.cmdline.helpers.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.parser_add_common_opt": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.helpers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.run_via_pbs": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "Runner",
    "datalad.cmdline.helpers.lgr",
    "getpwd",
    "len",
    "locals",
    "tempfile.NamedTemporaryFile",
    "unlink"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.helpers.strip_arg_from_argv": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "datalad.cmdline.helpers.sys",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.helpers.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.cmdline.helpers.wrap": {
  "data": {
   "shadows": "textwrap.wrap"
  },
  "type": "import"
 },
 "datalad.cmdline.main": {
  "data": {
   "symbols_in_volume": [
    "datalad.cmdline.main.lgr",
    "datalad.cmdline.main.logging"
   ]
  },
  "type": "module"
 },
 "datalad.cmdline.main.ArgumentParserDisableAbbrev": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "datalad.cmdline.main.argparse"
   ]
  },
  "type": "class"
 },
 "datalad.cmdline.main.ArgumentParserDisableAbbrev._get_option_tuples": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "datalad.cmdline.main.ArgumentParserDisableAbbrev",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.main.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.cmdline.main.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.cmdline.main.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.cmdline.main.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.cmdline.main.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.cmdline.main._fix_datalad_ri": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "datalad.cmdline.main.lgr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.main._license_info": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "datalad.cmdline.main.add_entrypoints_to_interface_groups": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "Exception",
    "datalad.cmdline.main.lgr",
    "exc_str",
    "len",
    "pkg_resources.iter_entry_points"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.main.argcomplete": {
  "data": {
   "shadows": "argcomplete"
  },
  "type": "import"
 },
 "datalad.cmdline.main.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "datalad.cmdline.main.change_path_opt": {
  "data": {
   "shadows": "change_path"
  },
  "type": "import"
 },
 "datalad.cmdline.main.datalad": {
  "data": {
   "shadows": "datalad"
  },
  "type": "import"
 },
 "datalad.cmdline.main.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "datalad.cmdline.main.fail_with_short_help": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "SystemExit",
    "datalad.cmdline.main.sys",
    "get_suggestions_msg"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.main.get_commands_from_groups": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "get_cmdline_command_name"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.main.get_console_width": {
  "data": {
   "shadows": "datalad.ui.utils.get_console_width"
  },
  "type": "import"
 },
 "datalad.cmdline.main.get_description_with_cmd_summary": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "datalad.cmdline.main.lgr",
    "datalad.cmdline.main.textwrap",
    "datalad.ui.utils.get_console_width",
    "dedent_docstring",
    "get_cmd_summaries"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.main.helpers": {
  "data": {
   "shadows": "datalad.cmdline.helpers"
  },
  "type": "import"
 },
 "datalad.cmdline.main.iter_entry_points": {
  "data": {
   "shadows": "pkg_resources.iter_entry_points"
  },
  "type": "import"
 },
 "datalad.cmdline.main.lgr": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datalad.cmdline.main.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.cmdline.main.main": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "chpwd",
    "datalad.cmdline.main._fix_datalad_ri",
    "datalad.cmdline.main.argcomplete",
    "datalad.cmdline.main.datalad",
    "datalad.cmdline.main.lgr",
    "datalad.cmdline.main.os",
    "datalad.cmdline.main.re",
    "datalad.cmdline.main.setup_parser",
    "datalad.cmdline.main.sys",
    "datalad.interface.base.Interface._interrupted_exit_code",
    "datalad.support.exceptions.CommandError",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "dict",
    "exc_str",
    "hasattr",
    "isinstance",
    "len",
    "repr",
    "run_via_pbs",
    "setup_exceptionhook",
    "str",
    "strip_arg_from_argv"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.main.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.cmdline.main.pbs_runner_opt": {
  "data": {
   "shadows": "pbs_runner"
  },
  "type": "import"
 },
 "datalad.cmdline.main.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.cmdline.main.setup_parser": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "Exception",
    "__debug__",
    "alter_interface_docs_for_cmdline",
    "collections.defaultdict",
    "datalad.cmdline.helpers.parser_add_common_opt",
    "datalad.cmdline.main.ArgumentParserDisableAbbrev",
    "datalad.cmdline.main.add_entrypoints_to_interface_groups",
    "datalad.cmdline.main.argparse",
    "datalad.cmdline.main.datalad",
    "datalad.cmdline.main.fail_with_short_help",
    "datalad.cmdline.main.get_commands_from_groups",
    "datalad.cmdline.main.get_description_with_cmd_summary",
    "datalad.cmdline.main.lgr",
    "datalad.cmdline.main.logging",
    "dedent_docstring",
    "dict",
    "exc_str",
    "fail_handler",
    "get_cmd_doc",
    "get_cmd_ex",
    "get_cmdline_command_name",
    "get_interface_groups",
    "getattr",
    "hasattr",
    "list",
    "load_interface",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.cmdline.main.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "datalad.cmdline.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.cmdline.tests.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.cmdline.tests.test_formatters": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datalad.tests.utils.SkipTest",
    "os.path.exists"
   ]
  },
  "type": "module"
 },
 "datalad.cmdline.tests.test_formatters.SIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.demo_example": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datalad.cmdline.tests.test_formatters.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.fmt": {
  "data": {
   "shadows": "formatters"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_formatters.test_cmdline_example_to_rst": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "datalad.cmdline.tests.test_formatters.demo_example",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.ok_startswith",
    "formatters.cmdline_example_to_rst",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_formatters.test_manpage_formatter": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_in",
    "formatters.ManPageFormatter",
    "setup_parser"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_formatters.test_parser_access": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.ok_",
    "len",
    "setup_parser"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_formatters.test_rstmanpage_formatter": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_in",
    "formatters.RSTManPageFormatter",
    "len",
    "setup_parser"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_helpers": {
  "data": {},
  "type": "module"
 },
 "datalad.cmdline.tests.test_helpers.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.cmdline.tests.test_helpers.assert_cwd_unchanged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_cwd_unchanged"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_helpers.assert_is_instance": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_helpers.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_helpers.mkdir": {
  "data": {
   "shadows": "os.mkdir"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_helpers.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_helpers.test_get_repo_instance_annex": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Path",
    "chpwd",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_testrepos",
    "get_repo_instance",
    "getpwd",
    "os.mkdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_helpers.test_get_repo_instance_git": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "Path",
    "chpwd",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_testrepos",
    "get_repo_instance",
    "getpwd",
    "os.mkdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_helpers.test_strip_arg_from_argv": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "strip_arg_from_argv"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_helpers.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main": {
  "data": {},
  "type": "module"
 },
 "datalad.cmdline.tests.test_main.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.__version__": {
  "data": {
   "shadows": "datalad.__version__"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.check_incorrect_option": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "datalad.cmdline.tests.test_main.run_main",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_re_in"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.datalad": {
  "data": {
   "shadows": "datalad"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.find_executable": {
  "data": {
   "shadows": "distutils.spawn.find_executable"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.get_console_width": {
  "data": {
   "shadows": "datalad.ui.utils.get_console_width"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.in_": {
  "data": {
   "shadows": "datalad.tests.utils.in_"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.run_main": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "SystemExit",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "io.StringIO",
    "list",
    "main",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.cmdline.tests.test_main.test_cfg_override": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.cmd.Runner",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.on_windows",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_combined_short_option": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "datalad.cmdline.tests.test_main.run_main",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_fail_with_short_help": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "SystemExit",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "fail_with_short_help",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_fix_datalad_ri": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "_fix_datalad_ri",
    "datalad.tests.utils.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_help_np": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.cmdline.tests.test_main.re",
    "datalad.cmdline.tests.test_main.run_main",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.ok_startswith",
    "datalad.ui.utils.get_console_width",
    "filter",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_incorrect_cfg_override": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "datalad.cmdline.tests.test_main.run_main"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_incorrect_options": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "datalad.cmdline.tests.test_main.check_incorrect_option",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_script_shims": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "datalad.__version__",
    "datalad.cmd.Runner",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.on_windows",
    "distutils.spawn.find_executable",
    "get_numeric_portion",
    "open",
    "runner"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_subcmd_usage_on_unknown_args": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "datalad.cmdline.tests.test_main.run_main",
    "datalad.tests.utils.in_"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_usage_on_insufficient_args": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "datalad.cmdline.tests.test_main.run_main",
    "datalad.tests.utils.ok_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.test_version": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "datalad.cmdline.tests.test_main.datalad",
    "datalad.cmdline.tests.test_main.run_main",
    "datalad.cmdline.tests.test_main.sys",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.ok_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.cmdline.tests.test_main.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.colorama": {
  "data": {
   "shadows": "colorama"
  },
  "type": "import"
 },
 "datalad.config": {
  "data": {
   "symbols_in_volume": [
    "datalad.config.ConfigManager",
    "datalad.config.logging",
    "datalad.config.re",
    "datalad.config.rewrite_url"
   ]
  },
  "type": "module"
 },
 "datalad.config.ConfigManager": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.config.ConfigManager.__contains__": {
  "data": {
   "lineno": 495
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.__getitem__": {
  "data": {
   "lineno": 492
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.__init__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "datalad.cmd.GitRunner",
    "datalad.config.datalad",
    "datalad.config.get_git_version",
    "datalad.consts.DATASET_CONFIG_FILE",
    "dict",
    "distutils.version.LooseVersion",
    "hasattr",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.__len__": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.__str__": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "datalad.config.ConfigManager._get_location_args": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "ValueError",
    "datalad.config.os",
    "datalad.consts.DATALAD_DOTDIR",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager._run": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "datalad.config._where_reload"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.add": {
  "data": {
   "lineno": 638,
   "symbols_in_volume": [
    "datalad.config._where_reload",
    "datalad.utils.assure_list",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.get": {
  "data": {
   "lineno": 503
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.get_value": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.getbool": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "datalad.config.anything2bool"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.getfloat": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.getint": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.has_option": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "datalad.config.cfg_sectionoption_regex"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.has_section": {
  "data": {
   "lineno": 523
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.items": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "datalad.config.cfg_section_regex"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.keys": {
  "data": {
   "lineno": 498
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.obtain": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "ValueError",
    "datalad.config._where_reload",
    "datalad.dochelpers.exc_str",
    "datalad.interface.common_cfg.definitions.get",
    "datalad.ui.ui",
    "datalad.ui.ui.is_interactive",
    "dialog",
    "getattr",
    "hasattr",
    "valtype"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.options": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "datalad.config.cfg_sectionoption_regex"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.reload": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "all",
    "any",
    "datalad.config.ConfigManager",
    "datalad.config._parse_env",
    "datalad.config._parse_gitconfig_dump",
    "datalad.config.lgr",
    "datalad.config.os",
    "os.path.exists",
    "os.path.getmtime",
    "time.time"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.remove_section": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "datalad.config._where_reload"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.rename_section": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "datalad.config._where_reload",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.sections": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "datalad.config.cfg_section_regex",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.set": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "datalad.config._where_reload",
    "datalad.support.gitrepo.to_options"
   ]
  },
  "type": "function"
 },
 "datalad.config.ConfigManager.unset": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "datalad.config._where_reload"
   ]
  },
  "type": "function"
 },
 "datalad.config.DATALAD_DOTDIR": {
  "data": {
   "shadows": "datalad.consts.DATALAD_DOTDIR"
  },
  "type": "import"
 },
 "datalad.config.DATASET_CONFIG_FILE": {
  "data": {
   "shadows": "datalad.consts.DATASET_CONFIG_FILE"
  },
  "type": "import"
 },
 "datalad.config.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.config.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datalad.config._parse_env": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "datalad.config.os"
   ]
  },
  "type": "function"
 },
 "datalad.config._parse_gitconfig_dump": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "datalad.config.cfg_kv_regex",
    "isinstance",
    "os.path.abspath",
    "os.path.isabs",
    "os.path.join",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.config._where_reload": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "datalad.config._where_reload_doc"
   ]
  },
  "type": "function"
 },
 "datalad.config._where_reload_doc": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.config.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.config.anything2bool": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "hasattr",
    "int",
    "isinstance",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.config.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.config.cfg_defs": {
  "data": {
   "shadows": "datalad.interface.common_cfg.definitions"
  },
  "type": "import"
 },
 "datalad.config.cfg_kv_regex": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "datalad.config.cfg_section_regex": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "datalad.config.cfg_sectionoption_regex": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "datalad.config.datalad": {
  "data": {
   "shadows": "datalad"
  },
  "type": "import"
 },
 "datalad.config.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.config.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.config.get_git_version": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datalad.cmd.GitRunner",
    "functools.lru_cache"
   ]
  },
  "type": "function"
 },
 "datalad.config.getmtime": {
  "data": {
   "shadows": "os.path.getmtime"
  },
  "type": "import"
 },
 "datalad.config.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.config.lgr": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.config.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "datalad.config.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.config.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.config.rewrite_url": {
  "data": {
   "lineno": 753,
   "symbols_in_volume": [
    "datalad.config.lgr",
    "isinstance",
    "len",
    "sorted",
    "sum",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.config.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "datalad.config.to_options": {
  "data": {
   "shadows": "datalad.support.gitrepo.to_options"
  },
  "type": "import"
 },
 "datalad.config.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.consts": {
  "data": {
   "shadows": "datalad.consts"
  },
  "type": "import"
 },
 "datalad.consts.ADJUSTED_BRANCH_EXPR": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "datalad.consts.ANNEX_TEMP_DIR": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "datalad.consts.ANNEX_TRANSFER_DIR": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "datalad.consts.ARCHIVES_SPECIAL_REMOTE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "datalad.consts.ARCHIVES_TEMP_DIR": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "datalad.consts.CONFIG_HUB_TOKEN_FIELD": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "datalad.consts.DATALAD_DOTDIR": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.consts.DATALAD_GIT_DIR": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.consts.DATALAD_SPECIAL_REMOTE": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datalad.consts.DATALAD_SPECIAL_REMOTES_UUIDS": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "datalad.consts.DATASETS_TOPURL": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "datalad.consts.DATASET_CONFIG_FILE": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datalad.consts.DATASET_METADATA_FILE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datalad.consts.GITHUB_LOGIN_URL": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "datalad.consts.GITHUB_TOKENS_URL": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "datalad.consts.GIT_SSH_COMMAND": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "datalad.consts.HANDLE_META_DIR": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.consts.METADATA_DIR": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "datalad.consts.OLDMETADATA_DIR": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.consts.OLDMETADATA_FILENAME": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.consts.PRE_INIT_COMMIT_SHA": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "datalad.consts.SEARCH_INDEX_DOTGITDIR": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "datalad.consts.TIMESTAMP_FMT": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "datalad.consts.WEB_HTML_DIR": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "datalad.consts.WEB_META_DIR": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "datalad.consts.WEB_META_LOG": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "datalad.consts.WEB_SPECIAL_REMOTE_UUID": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "datalad.consts.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.consts.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.consts.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.cookies_db": {
  "data": {
   "shadows": "datalad.support.cookies.cookies_db"
  },
  "type": "import"
 },
 "datalad.core": {
  "data": {},
  "type": "module"
 },
 "datalad.core.__docformat__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.core.distributed": {
  "data": {},
  "type": "module"
 },
 "datalad.core.distributed.push": {
  "data": {
   "symbols_in_volume": [
    "datalad.core.distributed.push.logging"
   ]
  },
  "type": "module"
 },
 "datalad.core.distributed.push.AnnexJsonProtocol": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexJsonProtocol"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.GitWitlessRunner": {
  "data": {
   "shadows": "datalad.cmd.GitWitlessRunner"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.Push": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.jobs_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.core.distributed.push.Push.__call__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "ValueError",
    "datalad.core.distributed.push._datasets_since_",
    "datalad.core.distributed.push._get_corresponding_remote_state",
    "datalad.core.distributed.push._push",
    "datalad.core.distributed.push.lgr",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.dataset.resolve_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.utils.eval_results",
    "datalad.log.log_progress",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.utils.assure_list",
    "dict",
    "isinstance",
    "repr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.push.Push.custom_result_summary_renderer": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "datalad.support.ansi_colors.YELLOW",
    "datalad.support.ansi_colors.color_word",
    "datalad.ui.ui.message",
    "enumerate",
    "id",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.push.TemporaryFile": {
  "data": {
   "shadows": "tempfile.TemporaryFile"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.core.distributed.push._append_branch_to_refspec_if_needed": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "all",
    "datalad.core.distributed.push.re"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.push._datasets_since_": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "any",
    "datalad.core.local.diff.diff_dataset",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.push._get_corresponding_remote_state": {
  "data": {
   "lineno": 881,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.push._push": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "Exception",
    "datalad.core.distributed.push._append_branch_to_refspec_if_needed",
    "datalad.core.distributed.push._push_data",
    "datalad.core.distributed.push._push_refspecs",
    "datalad.core.distributed.push.lgr",
    "datalad.distribution.dataset.Dataset",
    "datalad.log.log_progress",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datalad.utils.assure_list",
    "dict",
    "id",
    "isinstance",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.push._push_data": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "bytes",
    "collections.OrderedDict",
    "datalad.cmd.GitWitlessRunner",
    "datalad.core.distributed.push.lgr",
    "datalad.interface.results.annexjson2result",
    "datalad.utils.Path",
    "dict",
    "set",
    "str",
    "tempfile.TemporaryFile"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.push._push_data.TailoredPushAnnexJsonProtocol": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexJsonProtocol"
   ]
  },
  "type": "class"
 },
 "datalad.core.distributed.push._push_refspecs": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "any",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.push.annexjson2result": {
  "data": {
   "shadows": "datalad.interface.results.annexjson2result"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.ansi_colors": {
  "data": {
   "shadows": "datalad.support.ansi_colors"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.diff_dataset": {
  "data": {
   "shadows": "datalad.core.local.diff.diff_dataset"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.jobs_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.jobs_opt"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.lgr": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "datalad.core.distributed.push.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.resolve_path": {
  "data": {
   "shadows": "datalad.distribution.dataset.resolve_path"
  },
  "type": "import"
 },
 "datalad.core.distributed.push.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.core.distributed.tests.test_clone": {
  "data": {},
  "type": "module"
 },
 "datalad.core.distributed.tests.test_clone.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.ConfigManager": {
  "data": {
   "shadows": "datalad.config.ConfigManager"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.DEFAULT_BRANCH": {
  "data": {
   "shadows": "datalad.tests.utils.DEFAULT_BRANCH"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.GitWitlessRunner": {
  "data": {
   "shadows": "datalad.cmd.GitWitlessRunner"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.HTTPPath": {
  "data": {
   "shadows": "datalad.tests.utils.HTTPPath"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.LocalIO": {
  "data": {
   "shadows": "datalad.distributed.ora_remote.LocalIO"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone._get_installationpath_from_url": {
  "data": {
   "shadows": "datalad.core.distributed.clone._get_installationpath_from_url"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone._move2store": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone._postclonetest_prepare": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.customremotes.ria_utils.create_ds_in_store",
    "datalad.customremotes.ria_utils.create_store",
    "datalad.customremotes.ria_utils.get_layout_locations",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.network.get_local_file_url",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone._test_ria_postclonecfg": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.core.distributed.tests.test_clone.logging",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.assert_message": {
  "data": {
   "shadows": "datalad.tests.utils.assert_message"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.assert_result_values_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_values_equal"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.check_reckless": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.core.distributed.tests.test_clone.stat",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.nok_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.clone": {
  "data": {
   "shadows": "datalad.api.clone"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.consts": {
  "data": {
   "shadows": "datalad.consts"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.create_ds_in_store": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.create_ds_in_store"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.create_store": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.create_store"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.datalad_store_testds_id": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "datalad.core.distributed.tests.test_clone.decode_source_spec": {
  "data": {
   "shadows": "datalad.core.distributed.clone.decode_source_spec"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.get_datasets_topdir": {
  "data": {
   "shadows": "datalad.tests.utils.get_datasets_topdir"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.get_layout_locations": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.get_layout_locations"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.get_local_file_url": {
  "data": {
   "shadows": "datalad.support.network.get_local_file_url"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.has_symlink_capability": {
  "data": {
   "shadows": "datalad.tests.utils.has_symlink_capability"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.integration": {
  "data": {
   "shadows": "datalad.tests.utils.integration"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.known_failure": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.known_failure_appveyor": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_appveyor"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.make_tempfile": {
  "data": {
   "shadows": "datalad.utils.make_tempfile"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.neq_": {
  "data": {
   "shadows": "datalad.tests.utils.neq_"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.nok_": {
  "data": {
   "shadows": "datalad.tests.utils.nok_"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.patch_config": {
  "data": {
   "shadows": "datalad.tests.utils.patch_config"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.remove": {
  "data": {
   "shadows": "datalad.api.remove"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.set_date": {
  "data": {
   "shadows": "datalad.tests.utils.set_date"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.test_autoenabled_remote_msg": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.core.distributed.tests.test_clone.logging",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.known_failure_appveyor",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_cfg_originorigin": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.core.distributed.tests.test_clone.logging",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.chpwd",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_clone_autoenable_msg_handles_sameas": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.core.distributed.tests.test_clone.logging",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_sameas_remote",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_clone_crcns": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.api.create",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.integration",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.use_cassette",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_clone_dataladri": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.cmd.Runner",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_clone_dataset_from_just_source": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_clone_datasets_root": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.tests.utils.assert_message",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_datasets_topdir",
    "datalad.tests.utils.integration",
    "datalad.tests.utils.known_failure_appveyor",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.use_cassette",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_clone_into_dataset": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_clone_isnot_recursive": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_clone_isnt_a_smartass": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.api.create",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_clone_report_permission_issue": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "PermissionError",
    "datalad.api.clone",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.get_datasets_topdir",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_clone_simple_local": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.is_valid_repo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.tests.utils.assert_message",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_values_equal",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_clone_unborn_head": {
  "data": {
   "lineno": 1182,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.set_date",
    "datalad.tests.utils.with_tempfile",
    "int",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_clone_unborn_head_no_other_ref": {
  "data": {
   "lineno": 1232,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.core.distributed.tests.test_clone.logging",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_clone_unborn_head_sub": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_decode_source_spec": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "datalad.consts.DATASETS_TOPURL",
    "datalad.core.distributed.clone.decode_source_spec",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_ephemeral": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.cmd.GitWitlessRunner",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.has_symlink_capability",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_expanduser": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.api.remove",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.chpwd",
    "os.path.join",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_failed_clone": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.assert_message",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_fetch_git_special_remote": {
  "data": {
   "lineno": 1301,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_gin_cloning": {
  "data": {
   "lineno": 1283,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_inherit_src_candidates": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.config.ConfigManager",
    "datalad.core.distributed.tests.test_clone._move2store",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_install_source_relpath": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.api.create",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_installationpath_from_url": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "datalad.core.distributed.clone._get_installationpath_from_url",
    "datalad.tests.utils.eq_",
    "datalad.utils.on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_invalid_args": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.clone",
    "datalad.api.create",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_local_url_with_fetch": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "datalad.utils.chpwd",
    "os.path.join",
    "os.path.pardir"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_nonuniform_adjusted_subdataset": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_notclone_known_subdataset": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo.is_valid_repo",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_message",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_reckless": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "datalad.core.distributed.tests.test_clone.check_reckless"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_relative_submodule_url": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.join",
    "os.path.pardir"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_ria_http": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.cmd.Runner",
    "datalad.core.distributed.tests.test_clone._move2store",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.has_symlink_capability",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.patch_config",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "datalad.utils.chpwd",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_ria_http_storedataladorg": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.core.distributed.tests.test_clone.datalad_store_testds_id",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_ria_postclone_noannex": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.customremotes.ria_utils.create_ds_in_store",
    "datalad.customremotes.ria_utils.create_store",
    "datalad.customremotes.ria_utils.get_layout_locations",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.network.get_local_file_url",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.rmtree",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.test_ria_postclonecfg": {
  "data": {
   "lineno": 950,
   "symbols_in_volume": [
    "datalad.core.distributed.tests.test_clone._postclonetest_prepare",
    "datalad.core.distributed.tests.test_clone._test_ria_postclonecfg",
    "datalad.support.network.get_local_file_url",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.has_symlink_capability",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow",
    "datalad.utils.Path",
    "datalad.utils.make_tempfile",
    "id"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_clone.use_cassette": {
  "data": {
   "shadows": "datalad.tests.utils.use_cassette"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.with_sameas_remote": {
  "data": {
   "shadows": "datalad.tests.utils.with_sameas_remote"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_clone.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.utils.DEFAULT_BRANCH"
   ]
  },
  "type": "module"
 },
 "datalad.core.distributed.tests.test_push.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.Clone": {
  "data": {
   "shadows": "datalad.core.distributed.clone.Clone"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.DEFAULT_BRANCH": {
  "data": {
   "shadows": "datalad.tests.utils.DEFAULT_BRANCH"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.DEFAULT_REFSPEC": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datalad.core.distributed.tests.test_push.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.Push": {
  "data": {
   "shadows": "datalad.core.distributed.push.Push"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.assert_not_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in_results"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.check_push": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "datalad.core.distributed.tests.test_push.DEFAULT_REFSPEC",
    "datalad.core.distributed.tests.test_push.mk_push_target",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.get_local_file_url": {
  "data": {
   "shadows": "datalad.support.network.get_local_file_url"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.known_failure_githubci_osx": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_osx"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.mk_push_target": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.neq_": {
  "data": {
   "shadows": "datalad.tests.utils.neq_"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.test_auto_data_transfer": {
  "data": {
   "lineno": 661,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in_results",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_auto_if_wanted_data_transfer_path_restriction": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in_results",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_force_checkdatapresent": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "datalad.core.distributed.tests.test_push.DEFAULT_REFSPEC",
    "datalad.core.distributed.tests.test_push.mk_push_target",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_gh1426": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "datalad.core.distributed.tests.test_push.mk_push_target",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_gh1763": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "datalad.core.distributed.tests.test_push.mk_push_target",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_gh1811": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "datalad.core.distributed.clone.Clone.__call__",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_invalid_call": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "datalad.core.distributed.push.Push.__call__",
    "datalad.core.distributed.tests.test_push.mk_push_target",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_publish_target_url": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_push": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "datalad.core.distributed.tests.test_push.check_push"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_push_git_annex_branch_many_paths_same_data": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "datalad.core.distributed.tests.test_push.logging",
    "datalad.core.distributed.tests.test_push.mk_push_target",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_githubci_osx",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_push_git_annex_branch_when_no_data": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "datalad.core.distributed.tests.test_push.mk_push_target",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_push_matching": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "datalad.core.distributed.tests.test_push.mk_push_target",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_osx",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_push_recursive": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "datalad.core.distributed.clone.Clone.__call__",
    "datalad.core.distributed.tests.test_push.DEFAULT_REFSPEC",
    "datalad.core.distributed.tests.test_push.mk_push_target",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "list",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_push_subds_no_recursion": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "datalad.core.distributed.tests.test_push.mk_push_target",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_push_wanted": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "FileNotFoundError",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in_results",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.with_tempfile",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.test_ria_push": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "datalad.core.distributed.tests.test_push.DEFAULT_REFSPEC",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.network.get_local_file_url",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.distributed.tests.test_push.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.core.distributed.tests.test_push.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.core.local": {
  "data": {},
  "type": "module"
 },
 "datalad.core.local.__docformat__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datalad.core.local.create": {
  "data": {
   "symbols_in_volume": [
    "datalad.core.local.create.logging"
   ]
  },
  "type": "module"
 },
 "datalad.core.local.create.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.core.local.create.Create": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "argparse.REMAINDER",
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.location_description",
    "datalad.support.constraints.EnsureKeyChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict",
    "tuple"
   ]
  },
  "type": "class"
 },
 "datalad.core.local.create.Create.__call__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "DeprecationWarning",
    "ValueError",
    "any",
    "datalad._seed",
    "datalad.cfg.obtain",
    "datalad.core.local.create._NoAnnexDefault",
    "datalad.core.local.create.lgr",
    "datalad.core.local.create.os",
    "datalad.core.local.create.random",
    "datalad.core.local.create.uuid",
    "datalad.core.local.create.warnings",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.path_under_rev_dataset",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.dataset.resolve_path",
    "datalad.interface.utils.eval_results",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.utils.Path",
    "datalad.utils.assure_list",
    "datalad.utils.get_dataset_root",
    "datalad.utils.getpwd",
    "dict",
    "isinstance",
    "list",
    "os.listdir",
    "os.path.isdir",
    "os.path.join",
    "os.path.normpath",
    "staticmethod",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.create.Create.custom_result_renderer": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "datalad.ui.ui.message",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.create.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.core.local.create.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.core.local.create.EnsureKeyChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureKeyChoice"
  },
  "type": "import"
 },
 "datalad.core.local.create.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.core.local.create.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.core.local.create.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.core.local.create.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.core.local.create.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.core.local.create.REMAINDER": {
  "data": {
   "shadows": "argparse.REMAINDER"
  },
  "type": "import"
 },
 "datalad.core.local.create.ResultXFM": {
  "data": {
   "shadows": "datalad.interface.results.ResultXFM"
  },
  "type": "import"
 },
 "datalad.core.local.create._NoAnnexDefault": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.core.local.create.__docformat__": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "datalad.core.local.create._seed": {
  "data": {
   "shadows": "datalad._seed"
  },
  "type": "import"
 },
 "datalad.core.local.create.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.core.local.create.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.core.local.create.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.core.local.create.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.core.local.create.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.core.local.create.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.core.local.create.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.core.local.create.lgr": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "datalad.core.local.create.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.core.local.create.location_description": {
  "data": {
   "shadows": "datalad.interface.common_opts.location_description"
  },
  "type": "import"
 },
 "datalad.core.local.create.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.core.local.create.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.core.local.create.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.core.local.create.path_under_rev_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.path_under_rev_dataset"
  },
  "type": "import"
 },
 "datalad.core.local.create.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "datalad.core.local.create.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.core.local.create.resolve_path": {
  "data": {
   "shadows": "datalad.distribution.dataset.resolve_path"
  },
  "type": "import"
 },
 "datalad.core.local.create.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.core.local.create.ut": {
  "data": {
   "shadows": "datalad.utils"
  },
  "type": "import"
 },
 "datalad.core.local.create.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "datalad.core.local.create.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "datalad.core.local.diff": {
  "data": {
   "symbols_in_volume": [
    "datalad.core.local.diff.logging"
   ]
  },
  "type": "module"
 },
 "datalad.core.local.diff.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.core.local.diff.Diff": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datalad.core.local.status._common_diffstatus_params",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.core.local.diff.Diff.__call__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "datalad.core.local.diff.diff_dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.interface.utils.eval_results",
    "datalad.utils.assure_unicode",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.diff.Diff.custom_result_renderer": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "datalad.core.local.status.Status.custom_result_renderer",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.diff.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.core.local.diff.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.core.local.diff.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.core.local.diff.InvalidGitReferenceError": {
  "data": {
   "shadows": "datalad.support.exceptions.InvalidGitReferenceError"
  },
  "type": "import"
 },
 "datalad.core.local.diff.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.core.local.diff.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.core.local.diff.Status": {
  "data": {
   "shadows": "datalad.core.local.status.Status"
  },
  "type": "import"
 },
 "datalad.core.local.diff.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.core.local.diff._common_diffstatus_params": {
  "data": {
   "shadows": "datalad.core.local.status._common_diffstatus_params"
  },
  "type": "import"
 },
 "datalad.core.local.diff._diff_ds": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "RuntimeError",
    "any",
    "collections.OrderedDict",
    "datalad.core.local.diff.lgr",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.InvalidGitReferenceError",
    "dict",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.diff.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.core.local.diff.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.core.local.diff.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.core.local.diff.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.core.local.diff.diff_dataset": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "datalad.core.local.diff._diff_ds",
    "datalad.core.local.diff.lgr",
    "datalad.distribution.dataset.path_under_rev_dataset",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.dataset.resolve_path",
    "datalad.utils.assure_list",
    "datalad.utils.get_dataset_root",
    "dict",
    "os.path.sep",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.diff.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.core.local.diff.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.core.local.diff.lgr": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datalad.core.local.diff.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.core.local.diff.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.core.local.diff.path_under_rev_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.path_under_rev_dataset"
  },
  "type": "import"
 },
 "datalad.core.local.diff.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.core.local.diff.resolve_path": {
  "data": {
   "shadows": "datalad.distribution.dataset.resolve_path"
  },
  "type": "import"
 },
 "datalad.core.local.repo": {
  "data": {
   "symbols_in_volume": [
    "datalad.core.local.repo.logging"
   ]
  },
  "type": "module"
 },
 "datalad.core.local.repo.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.core.local.repo.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.core.local.repo.InvalidAnnexRepositoryError": {
  "data": {
   "shadows": "datalad.support.exceptions.InvalidAnnexRepositoryError"
  },
  "type": "import"
 },
 "datalad.core.local.repo.InvalidGitRepositoryError": {
  "data": {
   "shadows": "datalad.support.exceptions.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "datalad.core.local.repo.NoSuchPathError": {
  "data": {
   "shadows": "datalad.support.exceptions.NoSuchPathError"
  },
  "type": "import"
 },
 "datalad.core.local.repo.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.core.local.repo.lgr": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datalad.core.local.repo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.core.local.repo.repo_from_path": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "datalad.core.local.repo.lgr",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.InvalidAnnexRepositoryError",
    "datalad.support.exceptions.InvalidGitRepositoryError",
    "datalad.support.exceptions.NoSuchPathError",
    "datalad.support.gitrepo.GitRepo"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.resulthooks": {
  "data": {
   "symbols_in_volume": [
    "datalad.core.local.resulthooks.logging"
   ]
  },
  "type": "module"
 },
 "datalad.core.local.resulthooks.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.core.local.resulthooks.dl": {
  "data": {
   "shadows": "datalad.api"
  },
  "type": "import"
 },
 "datalad.core.local.resulthooks.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.core.local.resulthooks.get_jsonhooks_from_config": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Exception",
    "datalad.core.local.resulthooks.json",
    "datalad.core.local.resulthooks.lgr",
    "datalad.dochelpers.exc_str",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.resulthooks.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.core.local.resulthooks.lgr": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "datalad.core.local.resulthooks.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.core.local.resulthooks.match_jsonhook2result": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datalad.core.local.resulthooks.lgr",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.resulthooks.run_jsonhook": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "Exception",
    "cmd",
    "datalad.api",
    "datalad.api.Dataset",
    "datalad.core.local.resulthooks.json",
    "datalad.core.local.resulthooks.lgr",
    "datalad.dochelpers.exc_str",
    "enc",
    "getattr",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.run": {
  "data": {
   "symbols_in_volume": [
    "datalad.core.local.run.logging"
   ]
  },
  "type": "module"
 },
 "datalad.core.local.run.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.core.local.run.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.core.local.run.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.core.local.run.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.core.local.run.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.core.local.run.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.core.local.run.Get": {
  "data": {
   "shadows": "datalad.distribution.get.Get"
  },
  "type": "import"
 },
 "datalad.core.local.run.GlobbedPaths": {
  "data": {
   "shadows": "datalad.support.globbedpaths.GlobbedPaths"
  },
  "type": "import"
 },
 "datalad.core.local.run.Install": {
  "data": {
   "shadows": "datalad.distribution.install.Install"
  },
  "type": "import"
 },
 "datalad.core.local.run.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.core.local.run.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.core.local.run.REMAINDER": {
  "data": {
   "shadows": "argparse.REMAINDER"
  },
  "type": "import"
 },
 "datalad.core.local.run.Remove": {
  "data": {
   "shadows": "datalad.distribution.remove.Remove"
  },
  "type": "import"
 },
 "datalad.core.local.run.Run": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "argparse.REMAINDER",
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.save_message_opt",
    "datalad.support.constraints.EnsureBool",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.core.local.run.Run.__call__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "datalad.core.local.run.run_command",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.interface.utils.eval_results",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.run.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.core.local.run.Save": {
  "data": {
   "shadows": "datalad.core.local.save.Save"
  },
  "type": "import"
 },
 "datalad.core.local.run.SequenceFormatter": {
  "data": {
   "shadows": "datalad.utils.SequenceFormatter"
  },
  "type": "import"
 },
 "datalad.core.local.run.Unlock": {
  "data": {
   "shadows": "datalad.interface.unlock.Unlock"
  },
  "type": "import"
 },
 "datalad.core.local.run.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.core.local.run._dset_arg_kludge": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "DeprecationWarning",
    "datalad.core.local.run.warnings",
    "datalad.distribution.dataset.Dataset",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.run._execute_command": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.core.local.run.lgr",
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.run._format_cmd_shorty": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.run._install_and_reglob": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "datalad.core.local.run._dset_arg_kludge",
    "datalad.core.local.run._is_nonexistent_path",
    "datalad.core.local.run.lgr",
    "datalad.distribution.install.Install",
    "glob_dirs",
    "install"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.run._install_and_reglob.glob_dirs": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "map",
    "os.path.dirname"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.run._is_nonexistent_path": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "datalad.core.local.run._unlock_or_remove": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "datalad.core.local.run._dset_arg_kludge",
    "datalad.core.local.run.lgr",
    "datalad.distribution.remove.Remove",
    "datalad.interface.unlock.Unlock",
    "os.path.exists",
    "os.path.lexists",
    "remove"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.run.anything2bool": {
  "data": {
   "shadows": "datalad.config.anything2bool"
  },
  "type": "import"
 },
 "datalad.core.local.run.assure_bytes": {
  "data": {
   "shadows": "datalad.utils.assure_bytes"
  },
  "type": "import"
 },
 "datalad.core.local.run.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.core.local.run.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.core.local.run.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.core.local.run.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.core.local.run.dump2stream": {
  "data": {
   "shadows": "datalad.support.json_py.dump2stream"
  },
  "type": "import"
 },
 "datalad.core.local.run.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.core.local.run.format_command": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "datalad.core.local.run.normalize_command",
    "datalad.support.globbedpaths.GlobbedPaths",
    "datalad.utils.SequenceFormatter",
    "datalad.utils.quote_cmdlinearg",
    "isinstance",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.run.get_command_pwds": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.utils.get_dataset_root",
    "datalad.utils.getpwd",
    "isinstance",
    "os.path.curdir",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.run.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.core.local.run.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.core.local.run.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.core.local.run.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.core.local.run.lgr": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "datalad.core.local.run.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.core.local.run.md5": {
  "data": {
   "shadows": "hashlib.md5"
  },
  "type": "import"
 },
 "datalad.core.local.run.mkdtemp": {
  "data": {
   "shadows": "tempfile.mkdtemp"
  },
  "type": "import"
 },
 "datalad.core.local.run.normalize_command": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "datalad.utils.assure_unicode",
    "datalad.utils.quote_cmdlinearg",
    "isinstance",
    "len",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.run.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.core.local.run.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.core.local.run.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.core.local.run.prepare_inputs": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "bool",
    "datalad.core.local.run._dset_arg_kludge",
    "datalad.core.local.run._install_and_reglob",
    "datalad.core.local.run._is_nonexistent_path",
    "datalad.core.local.run.lgr",
    "datalad.distribution.get.Get",
    "filter",
    "get",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.run.quote_cmdlinearg": {
  "data": {
   "shadows": "datalad.utils.quote_cmdlinearg"
  },
  "type": "import"
 },
 "datalad.core.local.run.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.core.local.run.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.core.local.run.run_command": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "DeprecationWarning",
    "KeyError",
    "datalad.config.anything2bool",
    "datalad.core.local.run._execute_command",
    "datalad.core.local.run._format_cmd_shorty",
    "datalad.core.local.run._install_and_reglob",
    "datalad.core.local.run._unlock_or_remove",
    "datalad.core.local.run.format_command",
    "datalad.core.local.run.get_command_pwds",
    "datalad.core.local.run.json",
    "datalad.core.local.run.lgr",
    "datalad.core.local.run.normalize_command",
    "datalad.core.local.run.prepare_inputs",
    "datalad.core.local.run.warnings",
    "datalad.core.local.save.Save.__call__",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.results.get_status_dict",
    "datalad.support.globbedpaths.GlobbedPaths",
    "datalad.support.json_py.dump2stream",
    "datalad.utils.assure_bytes",
    "datalad.utils.chpwd",
    "hashlib.md5",
    "isinstance",
    "open",
    "os.path.join",
    "os.path.lexists",
    "os.path.normpath",
    "os.path.relpath",
    "str",
    "tempfile.mkdtemp",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.run.save_message_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.save_message_opt"
  },
  "type": "import"
 },
 "datalad.core.local.run.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "datalad.core.local.save": {
  "data": {
   "symbols_in_volume": [
    "datalad.core.local.save.logging"
   ]
  },
  "type": "module"
 },
 "datalad.core.local.save.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.core.local.save.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.core.local.save.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.core.local.save.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.core.local.save.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.core.local.save.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.core.local.save.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.core.local.save.Save": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.common_opts.save_message_opt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.core.local.save.Save.__call__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "Status",
    "ValueError",
    "all",
    "datalad.core.local.save.lgr",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.utils.discover_dataset_trace_to_targets",
    "datalad.interface.utils.eval_results",
    "datalad.interface.utils.get_tree_roots",
    "datalad.support.exceptions.CommandError",
    "datalad.utils.Path",
    "datalad.utils.assure_list",
    "dict",
    "hasattr",
    "len",
    "list",
    "open",
    "sorted",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.save.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.core.local.save.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.core.local.save.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.core.local.save.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.core.local.save.discover_dataset_trace_to_targets": {
  "data": {
   "shadows": "datalad.interface.utils.discover_dataset_trace_to_targets"
  },
  "type": "import"
 },
 "datalad.core.local.save.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.core.local.save.get_tree_roots": {
  "data": {
   "shadows": "datalad.interface.utils.get_tree_roots"
  },
  "type": "import"
 },
 "datalad.core.local.save.lgr": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datalad.core.local.save.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.core.local.save.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.core.local.save.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.core.local.save.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.core.local.save.save_message_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.save_message_opt"
  },
  "type": "import"
 },
 "datalad.core.local.save.ut": {
  "data": {
   "shadows": "datalad.utils"
  },
  "type": "import"
 },
 "datalad.core.local.status": {
  "data": {
   "symbols_in_volume": [
    "datalad.core.local.status.logging",
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.ansi_colors.GREEN",
    "datalad.support.ansi_colors.RED",
    "datalad.support.ansi_colors.YELLOW",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "module"
 },
 "datalad.core.local.status.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.core.local.status.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.core.local.status.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.core.local.status.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.core.local.status.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.core.local.status.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.core.local.status.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.core.local.status.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.core.local.status.STATE_COLOR_MAP": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "datalad.core.local.status.Status": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "datalad.core.local.status._common_diffstatus_params",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.core.local.status.Status.__call__": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.core.local.status._yield_status",
    "datalad.core.local.status.lgr",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.path_under_rev_dataset",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.dataset.resolve_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.utils.eval_results",
    "datalad.utils.Path",
    "datalad.utils.assure_list",
    "datalad.utils.assure_unicode",
    "datalad.utils.get_dataset_root",
    "dict",
    "map",
    "os.path.dirname",
    "os.path.sep",
    "set",
    "sorted",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.status.Status.custom_result_renderer": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "datalad.core.local.status.STATE_COLOR_MAP",
    "datalad.core.local.status.os",
    "datalad.support.ansi_colors.MAGENTA",
    "datalad.support.ansi_colors.color_word",
    "datalad.ui.ui.message",
    "datalad.utils.Path",
    "len",
    "max",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.status.Status.custom_result_summary_renderer": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "all",
    "any",
    "datalad.dochelpers.single_or_plural",
    "datalad.ui.ui.message",
    "datalad.utils.bytes2human",
    "int",
    "len",
    "staticmethod",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.status.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.core.local.status._common_diffstatus_params": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "datalad.core.local.status._yield_status": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "datalad.core.local.status.lgr",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.common_opts.recursion_limit",
    "dict",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.status.ac": {
  "data": {
   "shadows": "datalad.support.ansi_colors"
  },
  "type": "import"
 },
 "datalad.core.local.status.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.core.local.status.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.core.local.status.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.core.local.status.bytes2human": {
  "data": {
   "shadows": "datalad.utils.bytes2human"
  },
  "type": "import"
 },
 "datalad.core.local.status.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.core.local.status.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.core.local.status.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.core.local.status.lgr": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datalad.core.local.status.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.core.local.status.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.core.local.status.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.core.local.status.path_under_rev_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.path_under_rev_dataset"
  },
  "type": "import"
 },
 "datalad.core.local.status.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.core.local.status.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.core.local.status.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.core.local.status.resolve_path": {
  "data": {
   "shadows": "datalad.distribution.dataset.resolve_path"
  },
  "type": "import"
 },
 "datalad.core.local.status.single_or_plural": {
  "data": {
   "shadows": "datalad.dochelpers.single_or_plural"
  },
  "type": "import"
 },
 "datalad.core.local.status.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.core.local.status.ut": {
  "data": {
   "shadows": "datalad.utils"
  },
  "type": "import"
 },
 "datalad.core.local.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.core.local.tests.test_create": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.utils.OBSCURE_FILENAME",
    "dict"
   ]
  },
  "type": "module"
 },
 "datalad.core.local.tests.test_create.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.OBSCURE_FILENAME": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_FILENAME"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create._dataset_hierarchy_template": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datalad.core.local.tests.test_create.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.check_create_obscure": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.check_create_path_semantics": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.core.local.tests.test_create.os",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path.cwd",
    "datalad.utils.chpwd",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.has_symlink_capability": {
  "data": {
   "shadows": "datalad.tests.utils.has_symlink_capability"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.raw": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "datalad.core.local.tests.test_create.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.test_cfg_passthrough": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_create": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_create_curdir": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_create_dataset_same_as_path": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_create_fake_dates": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_create_force_subds": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "datalad.core.local.tests.test_create.raw",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_create_raises": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "datalad.core.local.tests.test_create.os",
    "datalad.core.local.tests.test_create.raw",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_create_relpath_semantics": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "datalad.core.local.tests.test_create.check_create_path_semantics"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_create_sub": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "isinstance",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_create_sub_dataset_dot_no_path": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.cmd.Runner",
    "datalad.core.local.tests.test_create.os",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_create_sub_gh3463": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.cmd.Runner",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_create_subdataset_hierarchy_from_top": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "datalad.core.local.tests.test_create._dataset_hierarchy_template",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_create_with_obscure_name": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "datalad.core.local.tests.test_create.check_create_obscure",
    "datalad.tests.utils.OBSCURE_FILENAME"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_create_withcfg": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_empty_git_upstairs": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.core.local.tests.test_create.raw",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_gh2927": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.has_symlink_capability",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_nested_create": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "datalad.core.local.tests.test_create.os",
    "datalad.core.local.tests.test_create.raw",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.test_saving_prior": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_create.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_create.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff": {
  "data": {},
  "type": "module"
 },
 "datalad.core.local.tests.test_diff.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.DEFAULT_BRANCH": {
  "data": {
   "shadows": "datalad.tests.utils.DEFAULT_BRANCH"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.NoDatasetFound": {
  "data": {
   "shadows": "datalad.support.exceptions.NoDatasetFound"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.OBSCURE_FILENAME": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_FILENAME"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.PRE_INIT_COMMIT_SHA": {
  "data": {
   "shadows": "datalad.consts.PRE_INIT_COMMIT_SHA"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.core.local.tests.test_diff._dirty_results": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_diff.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.diff": {
  "data": {
   "shadows": "datalad.api.diff"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.get_deeply_nested_structure": {
  "data": {
   "shadows": "datalad.tests.utils.get_deeply_nested_structure"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.has_symlink_capability": {
  "data": {
   "shadows": "datalad.tests.utils.has_symlink_capability"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.neq_": {
  "data": {
   "shadows": "datalad.tests.utils.neq_"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.save": {
  "data": {
   "shadows": "datalad.api.save"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.test_diff": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "datalad.api.diff",
    "datalad.core.local.tests.test_diff._dirty_results",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.NoDatasetFound",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_diff.test_diff_fr_none_one_get_content_annexinfo_call": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_diff.test_diff_nods": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_diff.test_diff_nonexistent_ref_unicode": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_diff.test_diff_recursive": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "datalad.core.local.tests.test_diff._dirty_results",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_diff.test_diff_rsync_syntax": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "datalad.consts.PRE_INIT_COMMIT_SHA",
    "datalad.core.local.tests.test_diff.os",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_diff.test_magic_number": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datalad.cmd.GitRunner",
    "datalad.consts.PRE_INIT_COMMIT_SHA",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_diff.test_no_worktree_impact_false_deletions": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tempfile",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_diff.test_path_diff": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "datalad.api.diff",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_deeply_nested_structure",
    "datalad.tests.utils.has_symlink_capability",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_diff.test_repo_diff": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_diff.ut": {
  "data": {
   "shadows": "datalad.utils"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_diff.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_resulthooks": {
  "data": {},
  "type": "module"
 },
 "datalad.core.local.tests.test_resulthooks.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_resulthooks.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_resulthooks.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_resulthooks.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_resulthooks.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_resulthooks.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_resulthooks.test_basics": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.api.install",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.on_windows",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_resulthooks.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_results": {
  "data": {},
  "type": "module"
 },
 "datalad.core.local.tests.test_results.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_results.default_result_renderer": {
  "data": {
   "shadows": "datalad.interface.utils.default_result_renderer"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_results.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_results.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_results.test_default_result_renderer": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datalad.interface.utils.default_result_renderer",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.swallow_outputs",
    "datalad.utils.on_windows",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run": {
  "data": {},
  "type": "module"
 },
 "datalad.core.local.tests.test_run.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.DEFAULT_BRANCH": {
  "data": {
   "shadows": "datalad.tests.utils.DEFAULT_BRANCH"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.NoDatasetFound": {
  "data": {
   "shadows": "datalad.support.exceptions.NoDatasetFound"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.OBSCURE_FILENAME": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_FILENAME"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.__docformat__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datalad.core.local.tests.test_run.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.format_command": {
  "data": {
   "shadows": "datalad.core.local.run.format_command"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.known_failure_appveyor": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_appveyor"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.last_commit_msg": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "datalad.tests.utils.DEFAULT_BRANCH"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.main": {
  "data": {
   "shadows": "datalad.cmdline.main.main"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.mkdir": {
  "data": {
   "shadows": "os.mkdir"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.neq_": {
  "data": {
   "shadows": "datalad.tests.utils.neq_"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.ok_exists": {
  "data": {
   "shadows": "datalad.tests.utils.ok_exists"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.run": {
  "data": {
   "shadows": "datalad.api.run"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.run_command": {
  "data": {
   "shadows": "datalad.core.local.run.run_command"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.test_basics": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "datalad.core.local.tests.test_run.last_commit_msg",
    "datalad.core.local.tests.test_run.logging",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run.test_format_command_strip_leading_dashes": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "datalad.core.local.run.format_command",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run.test_inject": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "datalad.core.local.run.run_command",
    "datalad.core.local.tests.test_run.last_commit_msg",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tree",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run.test_inputs_quotes_needed": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "datalad.core.local.tests.test_run.sys",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tree",
    "datalad.utils.assure_unicode",
    "list",
    "open",
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run.test_invalid_call": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "datalad.api.run",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.NoDatasetFound",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run.test_py2_unicode_command": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "datalad.core.local.tests.test_run.os",
    "datalad.core.local.tests.test_run.sys",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.on_windows",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run.test_run_cmdline_disambiguation": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "SystemExit",
    "datalad.cmdline.main.main",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "datalad.utils.on_windows",
    "getattr",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run.test_run_explicit": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "datalad.api.run",
    "datalad.core.local.tests.test_run.logging",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "open",
    "os.mkdir",
    "os.path.join",
    "os.remove"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run.test_run_from_subds": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_appveyor",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run.test_run_from_subds_gh3551": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "datalad.api.run",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "os.path.join",
    "os.path.pardir"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run.test_run_path_semantics": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "datalad.api.run",
    "datalad.core.local.tests.test_run.os",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.join",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run.test_run_save_deletion": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tree",
    "datalad.utils.on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run.test_sidecar": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "datalad.core.local.tests.test_run.last_commit_msg",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_run.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_run.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.utils.OBSCURE_FILENAME",
    "dict"
   ]
  },
  "type": "module"
 },
 "datalad.core.local.tests.test_save.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.DEFAULT_BRANCH": {
  "data": {
   "shadows": "datalad.tests.utils.DEFAULT_BRANCH"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.OBSCURE_FILENAME": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_FILENAME"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.check_save_dotfiles": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "check",
    "datalad.core.local.tests.test_save.os",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "os.path.join",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.check_save_dotfiles._check": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.check_save_dotfiles.check": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "_check",
    "datalad.tests.utils.assert_in"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.known_failure_appveyor": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_appveyor"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.save": {
  "data": {
   "shadows": "datalad.api.save"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.skip_wo_symlink_capability": {
  "data": {
   "shadows": "datalad.tests.utils.skip_wo_symlink_capability"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.test_add_files": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "datalad.core.local.tests.test_save.tree_arg",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "datalad.utils.assure_list",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_add_mimetypes": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_add_recursive": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_add_subdataset": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.install",
    "datalad.api.save",
    "datalad.core.local.tests.test_save.tree_arg",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_bf1886": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.save",
    "datalad.core.local.tests.test_save.os",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.skip_wo_symlink_capability",
    "datalad.tests.utils.with_tempfile",
    "os.path.join",
    "os.path.pardir"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_bf2043p2": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "datalad.api.save",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_bf2541": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.save",
    "datalad.core.local.tests.test_save.os",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.skip_wo_symlink_capability",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_bf3285": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_encoding": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_gh1597": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_appveyor",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_gh1597_simpler": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "dict",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_gh2043p1": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "datalad.api.save",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_on_failure_continue": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_partial_unlocked": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_path_arg_call": {
  "data": {
   "lineno": 677,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.save",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_relpath_add": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "datalad.api.save",
    "datalad.core.local.tests.test_save.tree_arg",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_remove_subds": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.rmtree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_renamed_file": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_renamed_file.check_renamed_file": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_save": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "datalad.api.save",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_appveyor",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_testrepos",
    "dict",
    "isinstance",
    "len",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_save_dotfiles": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": [
    "datalad.core.local.tests.test_save.check_save_dotfiles"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_save_message_file": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_save_nested_subs_explicit_paths": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "map",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_save_obscure_name": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_save_partial_commit_shrinking_annex": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.with_tree",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_subdataset_save": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "datalad.api.save",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_subsuperdataset_save": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "datalad.api.save",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.rmtree",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_surprise_subds": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_symlinked_relpath": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "datalad.api.save",
    "datalad.core.local.tests.test_save.os",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.skip_wo_symlink_capability",
    "datalad.tests.utils.with_tempfile",
    "os.path.join",
    "os.path.pardir"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_update_known_submodule": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "datalad.api.save",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.with_tempfile",
    "get_baseline",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.test_update_known_submodule.get_baseline": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_save.tree_arg": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "datalad.core.local.tests.test_save.ut": {
  "data": {
   "shadows": "datalad.utils"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_save.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status": {
  "data": {},
  "type": "module"
 },
 "datalad.core.local.tests.test_status.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.NoDatasetFound": {
  "data": {
   "shadows": "datalad.support.exceptions.NoDatasetFound"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.OBSCURE_FILENAME": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_FILENAME"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.get_deeply_nested_structure": {
  "data": {
   "shadows": "datalad.tests.utils.get_deeply_nested_structure"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.has_symlink_capability": {
  "data": {
   "shadows": "datalad.tests.utils.has_symlink_capability"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.status": {
  "data": {
   "shadows": "datalad.api.status"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.test_runnin_on_empty": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_status.test_status": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "datalad.api.status",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_deeply_nested_structure",
    "datalad.tests.utils.has_symlink_capability",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.chpwd",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_status.test_status_basics": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datalad.api.status",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.support.exceptions.NoDatasetFound",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.has_symlink_capability",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.chpwd",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_status.test_status_nods": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_status.test_status_symlinked_dir_within_repo": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "call",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.has_symlink_capability",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_status.test_status_symlinked_dir_within_repo.call": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_status.test_subds_status": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.core.local.tests.test_status.ut": {
  "data": {
   "shadows": "datalad.utils"
  },
  "type": "import"
 },
 "datalad.core.local.tests.test_status.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.coreapi": {
  "data": {
   "symbols_in_volume": [
    "datalad.coreapi._generate_func_api"
   ]
  },
  "type": "module"
 },
 "datalad.coreapi._generate_func_api": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "get_api_name",
    "get_interface_groups",
    "getattr",
    "globals",
    "importlib.import_module"
   ]
  },
  "type": "function"
 },
 "datalad.coreapi.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "datalad.customremotes": {
  "data": {},
  "type": "module"
 },
 "datalad.customremotes.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.customremotes.archives": {
  "data": {
   "symbols_in_volume": [
    "datalad.customremotes.archives.lgr",
    "datalad.customremotes.archives.logging"
   ]
  },
  "type": "module"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote": {
  "data": {
   "lineno": 67
  },
  "type": "class"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ArchivesCache",
    "datalad.customremotes.archives.ArchiveAnnexCustomRemote",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote._annex_get_archive_by_key": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "humanize.naturalsize"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote._annex_get_archive_by_key.progress_indicators": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "datalad.customremotes.archives.os"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote._gen_akey_afiles": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "exists",
    "len",
    "operator.itemgetter",
    "set",
    "sorted",
    "unique"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote._parse_url": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "URL",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote._transfer": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "datalad.customremotes.archives.lgr",
    "datalad.customremotes.archives.link_file_load",
    "exc_str",
    "exists",
    "getpwd",
    "locals",
    "lock_if_check_fails",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.cache": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.get_file_url": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "URL",
    "ValueError",
    "collections.OrderedDict",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.req_CHECKPRESENT": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "datalad.customremotes.archives.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.req_CHECKURL": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "assure_bytes",
    "datalad.customremotes.archives.lgr",
    "datalad.customremotes.archives.os",
    "exists"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.req_REMOVE": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.req_WHEREIS": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "datalad.customremotes.archives.ArchiveAnnexCustomRemote.stop": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datalad.customremotes.archives.ArchiveAnnexCustomRemote",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.customremotes.archives.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.lgr": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.customremotes.archives.link_file_load": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "AttributeError",
    "datalad.customremotes.archives.lgr",
    "datalad.customremotes.archives.os",
    "datalad.customremotes.archives.shutil",
    "locals",
    "os.path.dirname",
    "os.path.exists",
    "os.path.lexists",
    "os.path.realpath",
    "unlink"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.archives.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.main": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "datalad.customremotes.archives.naturalsize": {
  "data": {
   "shadows": "humanize.naturalsize"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.customremotes.archives.super_main": {
  "data": {
   "shadows": "main"
  },
  "type": "import"
 },
 "datalad.customremotes.base": {
  "data": {
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr",
    "datalad.customremotes.base.logging"
   ]
  },
  "type": "module"
 },
 "datalad.customremotes.base.AnnexCustomRemote": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "datalad.customremotes.base.DEFAULT_AVAILABILITY",
    "datalad.customremotes.base.DEFAULT_COST",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.customremotes.base.AnnexCustomRemote.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "AnnexRepo",
    "DictCache",
    "GitRunner",
    "datalad.customremotes.base.AnnexExchangeProtocol",
    "datalad.customremotes.base.os",
    "datalad.customremotes.base.sys",
    "get_repo_instance"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote._get_custom_scheme": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "classmethod",
    "datalad.customremotes.base.URI_PREFIX"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote._get_key_path": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "datalad.customremotes.base.os"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote._initremote": {
  "data": {
   "lineno": 595
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote._introspect_req_signatures": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "classmethod",
    "datalad.customremotes.base.get_function_nargs",
    "dir",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote._loop": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "Exception",
    "datalad.customremotes.base.SUPPORTED_PROTOCOL",
    "datalad.customremotes.base.lgr",
    "exc_str",
    "getattr",
    "len",
    "method",
    "traceback.format_exc"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote._prepare": {
  "data": {
   "lineno": 599
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote._transfer": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.debug": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.error": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.get_DIRHASH": {
  "data": {
   "lineno": 604
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.get_URLS": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.get_contentlocation": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "lexists"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.heavydebug": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.info": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.main": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "datalad.customremotes.base.AnnexRemoteQuit",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.progress": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "bytes",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.read": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "datalad.customremotes.base.os"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_CHECKPRESENT": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_CHECKURL": {
  "data": {
   "lineno": 535
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_CLAIMURL": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_EXPORTSUPPORTED": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_GETAVAILABILITY": {
  "data": {
   "lineno": 505
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_GETCOST": {
  "data": {
   "lineno": 502
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_INITREMOTE": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_PREPARE": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "Exception",
    "datalad.customremotes.base.sys"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_REMOVE": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_TRANSFER": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "Exception",
    "datalad.customremotes.base.lgr",
    "exc_str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.req_WHEREIS": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.send": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "IOError",
    "datalad.customremotes.base.errno",
    "datalad.customremotes.base.lgr",
    "datalad.customremotes.base.os",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.send_unsupported": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexCustomRemote.stop": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "datalad.customremotes.base.AnnexRemoteQuit",
    "datalad.customremotes.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol": {
  "data": {
   "lineno": 67
  },
  "type": "class"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.__iadd__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "datalad.customremotes.base.os",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "datalad.customremotes.base.AnnexExchangeProtocol",
    "datalad.utils.Path",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.add_section": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.do_execute_callables": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.do_execute_ext_commands": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.end_section": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.initiate": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr",
    "datalad.customremotes.base.os",
    "datalad.utils.assure_unicode",
    "exists",
    "len",
    "list",
    "map",
    "open",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.records_callables": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.records_ext_commands": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.start_section": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.write_entries": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "datalad.customremotes.base.os",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexExchangeProtocol.write_section": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "datalad.customremotes.base.lgr",
    "datalad.customremotes.base.os",
    "dirname",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.AnnexRemoteQuit": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.customremotes.base.DATALAD_SPECIAL_REMOTES_UUIDS": {
  "data": {
   "shadows": "datalad.consts.DATALAD_SPECIAL_REMOTES_UUIDS"
  },
  "type": "import"
 },
 "datalad.customremotes.base.DEFAULT_AVAILABILITY": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "datalad.customremotes.base.DEFAULT_COST": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "datalad.customremotes.base.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.customremotes.base.ProgressBarBase": {
  "data": {
   "shadows": "datalad.ui.progressbars.ProgressBarBase"
  },
  "type": "import"
 },
 "datalad.customremotes.base.SUPPORTED_PROTOCOL": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "datalad.customremotes.base.URI_PREFIX": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "datalad.customremotes.base.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.customremotes.base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datalad.customremotes.base.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.customremotes.base.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "datalad.customremotes.base.format_exc": {
  "data": {
   "shadows": "traceback.format_exc"
  },
  "type": "import"
 },
 "datalad.customremotes.base.generate_uuids": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "datalad.customremotes.base.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.get_function_nargs": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "datalad.utils.getargspec",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.getargspec": {
  "data": {
   "shadows": "datalad.utils.getargspec"
  },
  "type": "import"
 },
 "datalad.customremotes.base.init_datalad_remote": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "bool",
    "datalad.consts.DATALAD_SPECIAL_REMOTES_UUIDS",
    "datalad.customremotes.base.lgr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.base.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.customremotes.base.lgr": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.customremotes.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.customremotes.base.opj": {
  "data": {
   "shadows": "join"
  },
  "type": "import"
 },
 "datalad.customremotes.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.customremotes.base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.customremotes.base.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "datalad.customremotes.base.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "datalad.customremotes.datalad": {
  "data": {
   "symbols_in_volume": [
    "datalad.customremotes.datalad.logging"
   ]
  },
  "type": "module"
 },
 "datalad.customremotes.datalad.DataladAnnexCustomRemote": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "datalad.customremotes.datalad.DataladAnnexCustomRemote.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datalad.customremotes.datalad.DataladAnnexCustomRemote",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.datalad.DataladAnnexCustomRemote._transfer": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "datalad.customremotes.datalad.lgr",
    "exc_str",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.datalad.DataladAnnexCustomRemote.req_CHECKPRESENT": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Exception",
    "datalad.customremotes.datalad.lgr",
    "exc_str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.datalad.DataladAnnexCustomRemote.req_CHECKURL": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Exception",
    "exc_str",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.datalad.DataladAnnexCustomRemote.req_REMOVE": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "datalad.customremotes.datalad.DataladAnnexCustomRemote.req_WHEREIS": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "datalad.customremotes.datalad.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.customremotes.datalad.lgr": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datalad.customremotes.datalad.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.customremotes.datalad.main": {
  "data": {
   "lineno": 172
  },
  "type": "function"
 },
 "datalad.customremotes.datalad.super_main": {
  "data": {
   "shadows": "main"
  },
  "type": "import"
 },
 "datalad.customremotes.main": {
  "data": {},
  "type": "module"
 },
 "datalad.customremotes.main.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.customremotes.main._main": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ArchiveAnnexCustomRemote",
    "DataladAnnexCustomRemote",
    "ValueError",
    "datalad.customremotes.main.backends",
    "datalad.customremotes.main.os",
    "print",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.main.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "datalad.customremotes.main.backends": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.customremotes.main.m__doc__": {
  "data": {
   "shadows": "__doc__"
  },
  "type": "import"
 },
 "datalad.customremotes.main.m__version__": {
  "data": {
   "shadows": "__version__"
  },
  "type": "import"
 },
 "datalad.customremotes.main.main": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "Exception",
    "datalad.customremotes.main._main",
    "datalad.customremotes.main.setup_parser",
    "datalad.customremotes.main.sys",
    "setup_exceptionhook",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.main.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.customremotes.main.setup_parser": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "__debug__",
    "__doc__",
    "_license_info",
    "datalad.customremotes.main.argparse"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.main.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.customremotes.ria_utils": {
  "data": {},
  "type": "module"
 },
 "datalad.customremotes.ria_utils.URL": {
  "data": {
   "shadows": "datalad.support.network.URL"
  },
  "type": "import"
 },
 "datalad.customremotes.ria_utils.UnknownLayoutVersion": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.customremotes.ria_utils.create_ds_in_store": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "datalad.customremotes.ria_utils.UnknownLayoutVersion",
    "datalad.customremotes.ria_utils.get_layout_locations",
    "datalad.customremotes.ria_utils.known_versions_objt",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.ria_utils.create_store": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "datalad.customremotes.ria_utils.UnknownLayoutVersion",
    "datalad.customremotes.ria_utils.known_versions_dst"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.ria_utils.get_layout_locations": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "datalad.customremotes.ria_utils.known_versions_dst"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.ria_utils.known_versions_dst": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datalad.customremotes.ria_utils.known_versions_objt": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.customremotes.ria_utils.rewrite_url": {
  "data": {
   "shadows": "datalad.config.rewrite_url"
  },
  "type": "import"
 },
 "datalad.customremotes.ria_utils.verify_ria_url": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "datalad.config.rewrite_url",
    "datalad.support.network.URL"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.customremotes.tests._get_custom_runner": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "AnnexExchangeProtocol",
    "Runner",
    "datalad.customremotes.tests.os"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives": {
  "data": {},
  "type": "module"
 },
 "datalad.customremotes.tests.test_archives.add_archive_content": {
  "data": {
   "shadows": "datalad.api.add_archive_content"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.check_observe_tqdm": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "chpwd",
    "datalad.api.add_archive_content",
    "datalad.api.create",
    "datalad.customremotes.tests.test_archives.glob",
    "os.path.join",
    "print",
    "serve_path_via_http",
    "time.sleep",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.dl_cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_archives.test_annex_get_from_subdir": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "AnnexRepo",
    "Runner",
    "assert_false",
    "assert_true",
    "chpwd",
    "datalad.api.add_archive_content",
    "os.path.join",
    "runner",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.test_basic_scenario": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AnnexRepo",
    "AnnexRepo.clone",
    "ArchiveAnnexCustomRemote",
    "_get_custom_runner",
    "_path_",
    "assert_false",
    "assert_is_instance",
    "assert_true",
    "datalad.cfg.get",
    "eq_",
    "in_",
    "isinstance",
    "ok_file_has_content",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.test_get_git_environ_adjusted": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "GitRunner",
    "abspath",
    "assert_equal",
    "datalad.customremotes.tests.test_archives.os"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.test_interactions": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "AnnexRepo",
    "ArchiveAnnexCustomRemote",
    "ArchiveAnnexCustomRemote.COST",
    "check_interaction_scenario",
    "datalad.customremotes.tests.test_archives.re",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.test_link_file_load": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "assert_equal",
    "assert_not_equal",
    "datalad.customremotes.tests.test_archives.logging",
    "datalad.customremotes.tests.test_archives.os",
    "inode",
    "link_file_load",
    "ok_",
    "open",
    "stats",
    "swallow_logs",
    "unittest.mock.patch",
    "unlink",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.test_link_file_load.inode": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_archives.os",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.test_link_file_load.raise_AttributeError": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.test_link_file_load.stats": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_archives.os",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_archives.test_no_rdflib_loaded": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "Runner",
    "assert_not_in",
    "datalad.customremotes.tests.test_archives.sys",
    "runner",
    "runner.run",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base": {
  "data": {
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_base.ERROR_ARGS",
    "datalad.customremotes.tests.test_base.re"
   ]
  },
  "type": "module"
 },
 "datalad.customremotes.tests.test_base.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_base.BASE_INTERACTION_SCENARIOS": {
  "data": {
   "lineno": 118
  },
  "type": "constant"
 },
 "datalad.customremotes.tests.test_base.ERROR_ARGS": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "datalad.customremotes.tests.test_base.FIFO": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.customremotes.tests.test_base.FIFO.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.FIFO._pop": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.FIFO.flush": {
  "data": {
   "lineno": 88
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.FIFO.read": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.FIFO.readline": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.FIFO.write": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.check_interaction_scenario": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_base.FIFO",
    "datalad.tests.utils.eq_",
    "isinstance",
    "remote_class",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_base.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_base.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_base.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_base.test_get_contentlocation": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "AnnexCustomRemote",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tree",
    "os.path.isabs"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.test_interactions": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "AnnexCustomRemote",
    "datalad.customremotes.tests.test_base.BASE_INTERACTION_SCENARIOS",
    "datalad.customremotes.tests.test_base.check_interaction_scenario",
    "datalad.customremotes.tests.test_base.re",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_base.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_datalad": {
  "data": {},
  "type": "module"
 },
 "datalad.customremotes.tests.test_datalad.check_basic_scenario": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "AnnexRepo",
    "_get_custom_runner",
    "assert_equal",
    "assert_in",
    "assert_raises",
    "eq_",
    "get_test_providers",
    "len",
    "swallow_logs",
    "swallow_outputs",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_datalad.test_basic_scenario_local_url": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_datalad.check_basic_scenario",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_datalad.test_basic_scenario_s3": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_datalad.check_basic_scenario"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_datalad.test_interactions": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "AnnexRepo",
    "check_interaction_scenario",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_ria_utils": {
  "data": {},
  "type": "module"
 },
 "datalad.customremotes.tests.test_ria_utils.LocalIO": {
  "data": {
   "shadows": "datalad.distributed.ora_remote.LocalIO"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_ria_utils.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_ria_utils.SSHRemoteIO": {
  "data": {
   "shadows": "datalad.distributed.ora_remote.SSHRemoteIO"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_ria_utils.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_ria_utils.UnknownLayoutVersion": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.UnknownLayoutVersion"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_ria_utils._test_setup_ds_in_store": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "datalad.customremotes.ria_utils.UnknownLayoutVersion",
    "datalad.customremotes.ria_utils.create_ds_in_store",
    "datalad.customremotes.ria_utils.create_store",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.rmtree",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "io_cls",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_ria_utils._test_setup_store": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "datalad.customremotes.ria_utils.UnknownLayoutVersion",
    "datalad.customremotes.ria_utils.create_store",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.rmtree",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "io_cls",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_ria_utils.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_ria_utils.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_ria_utils.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_ria_utils.create_ds_in_store": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.create_ds_in_store"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_ria_utils.create_store": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.create_store"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_ria_utils.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_ria_utils.rmtree": {
  "data": {
   "shadows": "datalad.tests.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_ria_utils.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.customremotes.tests.test_ria_utils.test_setup_ds_in_store": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_ria_utils._test_setup_ds_in_store",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distributed.ora_remote.SSHRemoteIO",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.skip_ssh",
    "datalad.utils.on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_ria_utils.test_setup_store": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "datalad.customremotes.tests.test_ria_utils._test_setup_store",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distributed.ora_remote.SSHRemoteIO",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.skip_ssh",
    "datalad.utils.on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.customremotes.tests.test_ria_utils.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distributed": {
  "data": {},
  "type": "module"
 },
 "datalad.distributed.__docformat__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.distributed.create_sibling_gitlab": {
  "data": {
   "symbols_in_volume": [
    "datalad.distributed.create_sibling_gitlab.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distributed.create_sibling_gitlab.CreateSiblingGitlab": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "EnsureChoice",
    "EnsureDataset",
    "EnsureNone",
    "EnsureStr",
    "Parameter",
    "datalad.distributed.create_sibling_gitlab.known_access_labels",
    "datalad.distributed.create_sibling_gitlab.known_layout_labels",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.create_sibling_gitlab.CreateSiblingGitlab.__call__": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "assure_list",
    "datalad.distributed.create_sibling_gitlab._proc_dataset",
    "datasetmethod",
    "dict",
    "len",
    "require_dataset",
    "resolve_path",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.create_sibling_gitlab.GitLabSite": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.create_sibling_gitlab.GitLabSite.__init__": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distributed.create_sibling_gitlab.gitlab",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.create_sibling_gitlab.GitLabSite._obtain_namespace": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "datalad.distributed.create_sibling_gitlab.lgr",
    "dict",
    "len",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.create_sibling_gitlab.GitLabSite.create_project": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.create_sibling_gitlab.GitLabSite.get_project": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "datalad.distributed.create_sibling_gitlab.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.create_sibling_gitlab.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.distributed.create_sibling_gitlab._proc_dataset": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "datalad.distributed.create_sibling_gitlab.GitLabSite",
    "datalad.distributed.create_sibling_gitlab.known_access_labels",
    "datalad.distributed.create_sibling_gitlab.known_layout_labels",
    "datalad.distributed.create_sibling_gitlab.lgr",
    "dict",
    "exc_str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.create_sibling_gitlab.gitlab": {
  "data": {
   "shadows": "gitlab"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_gitlab.known_access_labels": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datalad.distributed.create_sibling_gitlab.known_layout_labels": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "datalad.distributed.create_sibling_gitlab.lgr": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "datalad.distributed.create_sibling_gitlab.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria": {
  "data": {
   "symbols_in_volume": [
    "datalad.distributed.create_sibling_ria.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distributed.create_sibling_ria.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.CreateSiblingRia": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureBool",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.create_sibling_ria.CreateSiblingRia.__call__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "datalad.customremotes.ria_utils.create_store",
    "datalad.customremotes.ria_utils.verify_ria_url",
    "datalad.distributed.create_sibling_ria._create_sibling_ria",
    "datalad.distributed.create_sibling_ria.lgr",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distributed.ora_remote.SSHRemoteIO",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.log.log_progress",
    "datalad.utils.Path",
    "dict",
    "id",
    "isinstance",
    "staticmethod",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.create_sibling_ria.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.LocalIO": {
  "data": {
   "shadows": "datalad.distributed.ora_remote.LocalIO"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.SSHRemoteIO": {
  "data": {
   "shadows": "datalad.distributed.ora_remote.SSHRemoteIO"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.distributed.create_sibling_ria._create_sibling_ria": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "ValueError",
    "datalad.core.distributed.clone.decode_source_spec",
    "datalad.customremotes.ria_utils.create_ds_in_store",
    "datalad.customremotes.ria_utils.get_layout_locations",
    "datalad.customremotes.ria_utils.verify_ria_url",
    "datalad.distributed.create_sibling_ria.lgr",
    "datalad.distributed.create_sibling_ria.subprocess",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distributed.ora_remote.SSHRemoteIO",
    "datalad.interface.results.get_status_dict",
    "datalad.ssh_manager.get_connection",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.utils.Path",
    "datalad.utils.quote_cmdlinearg",
    "isinstance",
    "ssh",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.create_sibling_ria.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.create_ds_in_store": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.create_ds_in_store"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.create_store": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.create_store"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.decode_source_spec": {
  "data": {
   "shadows": "datalad.core.distributed.clone.decode_source_spec"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.get_layout_locations": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.get_layout_locations"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.lgr": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "datalad.distributed.create_sibling_ria.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.quote_cmdlinearg": {
  "data": {
   "shadows": "datalad.utils.quote_cmdlinearg"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "datalad.distributed.create_sibling_ria.verify_ria_url": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.verify_ria_url"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora": {
  "data": {
   "symbols_in_volume": [
    "datalad.distributed.export_archive_ora.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distributed.export_archive_ora.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.ExportArchiveORA": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "argparse.REMAINDER",
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.export_archive_ora.ExportArchiveORA.__call__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Exception",
    "OSError",
    "datalad.distributed.export_archive_ora.lgr",
    "datalad.distributed.export_archive_ora.os",
    "datalad.distributed.export_archive_ora.shutil",
    "datalad.distributed.export_archive_ora.subprocess",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.dataset.resolve_path",
    "datalad.dochelpers.exc_str",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.log.log_progress",
    "datalad.utils.rmtree",
    "dict",
    "len",
    "link_fx",
    "os.path.join",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.export_archive_ora.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.REMAINDER": {
  "data": {
   "shadows": "argparse.REMAINDER"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.distributed.export_archive_ora.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.lgr": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datalad.distributed.export_archive_ora.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.resolve_path": {
  "data": {
   "shadows": "datalad.distribution.dataset.resolve_path"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.distributed.export_archive_ora.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote": {
  "data": {
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distributed.ora_remote.DEFAULT_BUFFER_SIZE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datalad.distributed.ora_remote.HTTPRemoteIO": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.ora_remote.HTTPRemoteIO.__init__": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.DEFAULT_BUFFER_SIZE"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.HTTPRemoteIO.checkpresent": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.requests",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.HTTPRemoteIO.get": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "datalad.support.network.download_url",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.IOBase": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.ora_remote.IOBase.exists": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.IOBase.get": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.IOBase.get_from_archive": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.IOBase.in_archive": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.IOBase.mkdir": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.IOBase.put": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.IOBase.read_file": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.IOBase.remove": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.IOBase.rename": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.IOBase.write_file": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.LocalIO": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.IOBase"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.ora_remote.LocalIO.exists": {
  "data": {
   "lineno": 202
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.LocalIO.get": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.shutil",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.LocalIO.get_from_archive": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.subprocess",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.LocalIO.in_archive": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "runner",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.LocalIO.mkdir": {
  "data": {
   "lineno": 161
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.LocalIO.put": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.shutil",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.LocalIO.read_file": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.LocalIO.remove": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.LocalIO.remove_dir": {
  "data": {
   "lineno": 199
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.LocalIO.rename": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.LocalIO.write_file": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.Master": {
  "data": {
   "shadows": "annexremote.Master"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.NoLayoutVersion": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.ora_remote.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.ProtocolError": {
  "data": {
   "shadows": "annexremote.ProtocolError"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.PurePosixPath": {
  "data": {
   "shadows": "pathlib.PurePosixPath"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.RIARemote": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "annexremote.SpecialRemote"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.ora_remote.RIARemote.__init__": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.RIARemote",
    "datalad.distributed.ora_remote.handle_errors",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote._ensure_writeable": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.HTTPRemoteIO",
    "datalad.distributed.ora_remote.RIARemoteError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote._get_obj_location": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote._get_version_config": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote._load_cfg": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote._get_gitcfg",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote._local_io": {
  "data": {
   "lineno": 928
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote._set_read_only": {
  "data": {
   "lineno": 952
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote._verify_config": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "datalad.customremotes.ria_utils.verify_ria_url",
    "datalad.distributed.ora_remote.RIARemoteError",
    "datalad.distributed.ora_remote._get_gitcfg",
    "dict",
    "pathlib.PurePosixPath",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.checkpresent": {
  "data": {
   "lineno": 1063,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.HTTPRemoteIO",
    "datalad.distributed.ora_remote.handle_errors",
    "isinstance",
    "pathlib.PurePosixPath"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.debug": {
  "data": {
   "lineno": 938
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.get_layout_locations": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "datalad.customremotes.ria_utils.get_layout_locations",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.get_store": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "datalad.customremotes.ria_utils.UnknownLayoutVersion",
    "datalad.distributed.ora_remote.NoLayoutVersion",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.getcost": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.handle_errors"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.initremote": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.HTTPRemoteIO",
    "datalad.distributed.ora_remote._get_datalad_id",
    "datalad.distributed.ora_remote.handle_errors",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.io": {
  "data": {
   "lineno": 968,
   "symbols_in_volume": [
    "atexit.register",
    "datalad.distributed.ora_remote.HTTPRemoteIO",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distributed.ora_remote.RIARemoteError",
    "datalad.distributed.ora_remote.SSHRemoteIO",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.message": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "annexremote.ProtocolError"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.prepare": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.HTTPRemoteIO",
    "datalad.distributed.ora_remote.handle_errors",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.remove": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "Exception",
    "datalad.distributed.ora_remote.handle_errors",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.transfer_retrieve": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "Exception",
    "datalad.distributed.ora_remote.HTTPRemoteIO",
    "datalad.distributed.ora_remote.RIARemoteError",
    "datalad.distributed.ora_remote.handle_errors",
    "isinstance",
    "pathlib.PurePosixPath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.transfer_store": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "Exception",
    "datalad.distributed.ora_remote.RIARemoteError",
    "datalad.distributed.ora_remote.handle_errors"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.verify_ds_in_store": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "FileNotFoundError",
    "annexremote.RemoteError",
    "datalad.customremotes.ria_utils.UnknownLayoutVersion",
    "datalad.distributed.ora_remote.NoLayoutVersion"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.verify_store": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "FileNotFoundError",
    "annexremote.RemoteError",
    "datalad.customremotes.ria_utils.UnknownLayoutVersion",
    "datalad.distributed.ora_remote.NoLayoutVersion",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemote.whereis": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.HTTPRemoteIO",
    "datalad.distributed.ora_remote.handle_errors",
    "isinstance",
    "shlex.quote",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RIARemoteError": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "annexremote.RemoteError"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.ora_remote.RIARemoteError.__init__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.RemoteCommandFailedError": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.ora_remote.RemoteError": {
  "data": {
   "shadows": "annexremote.RemoteError"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.SSHManager": {
  "data": {
   "shadows": "datalad.support.sshconnector.SSHManager"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.IOBase"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO.__init__": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.DEFAULT_BUFFER_SIZE",
    "datalad.distributed.ora_remote.subprocess",
    "datalad.support.sshconnector.SSHManager"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO._append_end_markers": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "shlex.quote"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO._get_download_size_from_key": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.RIARemoteError",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO._run": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.RIARemoteError",
    "datalad.distributed.ora_remote.RemoteCommandFailedError",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO.close": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO.exists": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.RemoteCommandFailedError",
    "shlex.quote",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO.get": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "annexremote.RemoteError",
    "datalad.distributed.ora_remote.RIARemoteError",
    "len",
    "open",
    "os.path.basename",
    "progress_cb",
    "shlex.quote",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO.get_from_archive": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.RIARemoteError",
    "len",
    "open",
    "os.path.basename",
    "progress_cb",
    "shlex.quote",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO.in_archive": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "shlex.quote",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO.mkdir": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "shlex.quote",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO.put": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO.read_file": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote.RIARemoteError",
    "datalad.distributed.ora_remote.RemoteCommandFailedError",
    "shlex.quote",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO.remove": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "shlex.quote",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO.remove_dir": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "shlex.quote",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO.rename": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "shlex.quote",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SSHRemoteIO.write_file": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distributed.ora_remote.RIARemoteError",
    "datalad.distributed.ora_remote.RemoteCommandFailedError",
    "shlex.quote",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.SpecialRemote": {
  "data": {
   "shadows": "annexremote.SpecialRemote"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.UnknownLayoutVersion": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.UnknownLayoutVersion"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote._get_datalad_id": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "datalad.distributed.ora_remote._get_gitcfg",
    "datalad.distributed.ora_remote.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote._get_gitcfg": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception",
    "datalad.distributed.ora_remote.lgr",
    "datalad.distributed.ora_remote.subprocess"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.download_url": {
  "data": {
   "shadows": "datalad.support.network.download_url"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.format_exc": {
  "data": {
   "shadows": "traceback.format_exc"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.get_layout_locations": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.get_layout_locations"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.handle_errors": {
  "data": {
   "lineno": 563
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.handle_errors._wrap_handle_errors": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "atexit.unregister",
    "datalad.distributed.ora_remote.RIARemoteError",
    "datetime.datetime.now",
    "func",
    "functools.wraps",
    "isinstance",
    "pathlib.Path",
    "str",
    "traceback.format_exc"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.lgr": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.distributed.ora_remote.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.main": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": [
    "annexremote.Master",
    "datalad.distributed.ora_remote.RIARemote"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.ora_remote.register": {
  "data": {
   "shadows": "atexit.register"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.sh_quote": {
  "data": {
   "shadows": "shlex.quote"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.unregister": {
  "data": {
   "shadows": "atexit.unregister"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.verify_ria_url": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.verify_ria_url"
  },
  "type": "import"
 },
 "datalad.distributed.ora_remote.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "datalad.distributed.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.distributed.tests.ria_utils": {
  "data": {},
  "type": "module"
 },
 "datalad.distributed.tests.ria_utils.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distributed.tests.ria_utils.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.distributed.tests.ria_utils.attr": {
  "data": {
   "shadows": "datalad.tests.utils.attr"
  },
  "type": "import"
 },
 "datalad.distributed.tests.ria_utils.check_not_generatorfunction": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.distributed.tests.ria_utils.inspect"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.ria_utils.common_init_opts": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datalad.distributed.tests.ria_utils.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distributed.tests.ria_utils.example_payload": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datalad.distributed.tests.ria_utils.get_all_files": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datalad.utils.Path",
    "glob.glob",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.ria_utils.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.distributed.tests.ria_utils.initexternalremote": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "datalad.distributed.tests.ria_utils.initremote",
    "dict",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.ria_utils.initremote": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.ria_utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.distributed.tests.ria_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distributed.tests.ria_utils.populate_dataset": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "datalad.distributed.tests.ria_utils.example_payload",
    "datalad.tests.utils.create_tree"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.ria_utils.setup_archive_remote": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "datalad.distributed.tests.ria_utils.initexternalremote",
    "datalad.distributed.tests.ria_utils.os",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.ria_utils.skip_non_ssh": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "datalad.distributed.tests.ria_utils.check_not_generatorfunction"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.ria_utils.skip_non_ssh._wrap_skip_non_ssh": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "datalad.distributed.tests.ria_utils.os",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.attr",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.ria_utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab": {
  "data": {},
  "type": "module"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab._CreateFailureGitLab": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "datalad.distributed.tests.test_create_sibling_gitlab._FakeGitLab"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab._CreateFailureGitLab.create_project": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab._CreateFailureGitLab.get_project": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab._ExistingProjectGitLab": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "datalad.distributed.tests.test_create_sibling_gitlab._FakeGitLab"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab._ExistingProjectGitLab.get_project": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab._ExistingProjectOtherURLGitLab": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "datalad.distributed.tests.test_create_sibling_gitlab._FakeGitLab"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab._ExistingProjectOtherURLGitLab.get_project": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab._FakeGitLab": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab._FakeGitLab.__init__": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab._NewProjectGitLab": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "datalad.distributed.tests.test_create_sibling_gitlab._FakeGitLab"
   ]
  },
  "type": "class"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab._NewProjectGitLab.create_project": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab._NewProjectGitLab.get_project": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab._get_nested_collections": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.create_sibling_gitlab": {
  "data": {
   "shadows": "datalad.api.create_sibling_gitlab"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.datalad.distributed.create_sibling_gitlab": {
  "data": {
   "shadows": "datalad.distributed.create_sibling_gitlab"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.test_dryrun": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.create_sibling_gitlab",
    "datalad.distributed.tests.test_create_sibling_gitlab._get_nested_collections",
    "datalad.distributed.tests.test_create_sibling_gitlab.os",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "len",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.test_fake_gitlab": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.distributed.tests.test_create_sibling_gitlab._CreateFailureGitLab",
    "datalad.distributed.tests.test_create_sibling_gitlab._ExistingProjectGitLab",
    "datalad.distributed.tests.test_create_sibling_gitlab._ExistingProjectOtherURLGitLab",
    "datalad.distributed.tests.test_create_sibling_gitlab._NewProjectGitLab",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_gitlab.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria": {
  "data": {},
  "type": "module"
 },
 "datalad.distributed.tests.test_create_sibling_ria.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria._test_create_store": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.api.clone",
    "datalad.distributed.tests.test_create_sibling_ria.with_store_insteadof",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "len",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_ria.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.attr": {
  "data": {
   "shadows": "datalad.tests.utils.attr"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.clone": {
  "data": {
   "shadows": "datalad.api.clone"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.dl_cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.test_create_simple": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "datalad.distributed.tests.test_create_sibling_ria._test_create_store",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_ria.test_invalid_calls": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "datalad.api.Dataset",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_ria.with_store_insteadof": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_ria.with_store_insteadof._wrap_with_store_insteadof": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datalad.cfg.set",
    "datalad.cfg.unset",
    "datalad.tests.utils.attr",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_create_sibling_ria.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_create_sibling_ria.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http": {
  "data": {},
  "type": "module"
 },
 "datalad.distributed.tests.test_ora_http.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.LocalIO": {
  "data": {
   "shadows": "datalad.distributed.ora_remote.LocalIO"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.common_init_opts": {
  "data": {
   "shadows": "datalad.distributed.tests.ria_utils.common_init_opts"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.create_ds_in_store": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.create_ds_in_store"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.create_store": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.create_store"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.populate_dataset": {
  "data": {
   "shadows": "datalad.distributed.tests.ria_utils.populate_dataset"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ora_http.test_initremote": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.distributed.tests.ria_utils.common_init_opts",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ora_http.test_read_access": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.customremotes.ria_utils.create_ds_in_store",
    "datalad.customremotes.ria_utils.create_store",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distributed.tests.ria_utils.common_init_opts",
    "datalad.distributed.tests.ria_utils.populate_dataset",
    "datalad.distributed.tests.test_ora_http.shutil",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ora_http.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria": {
  "data": {},
  "type": "module"
 },
 "datalad.distributed.tests.test_ria.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria.clone": {
  "data": {
   "shadows": "datalad.api.clone"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria.has_symlink_capability": {
  "data": {
   "shadows": "datalad.tests.utils.has_symlink_capability"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria.skip_if": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria.test_ephemeral": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.api.clone",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.has_symlink_capability",
    "datalad.tests.utils.skip_if",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics": {
  "data": {},
  "type": "module"
 },
 "datalad.distributed.tests.test_ria_basics.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.LocalIO": {
  "data": {
   "shadows": "datalad.distributed.ora_remote.LocalIO"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.SSHRemoteIO": {
  "data": {
   "shadows": "datalad.distributed.ora_remote.SSHRemoteIO"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.WitlessRunner": {
  "data": {
   "shadows": "datalad.cmd.WitlessRunner"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics._test_binary_data": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.customremotes.ria_utils.create_ds_in_store",
    "datalad.customremotes.ria_utils.create_store",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distributed.ora_remote.SSHRemoteIO",
    "datalad.distributed.tests.ria_utils.common_init_opts",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_basics._test_gitannex": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.cmd.GitRunner.get_git_environ_adjusted",
    "datalad.cmd.WitlessRunner",
    "datalad.customremotes.ria_utils.create_ds_in_store",
    "datalad.customremotes.ria_utils.create_store",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distributed.ora_remote.SSHRemoteIO",
    "datalad.distributed.tests.ria_utils.common_init_opts",
    "datalad.distributed.tests.ria_utils.populate_dataset",
    "datalad.support.external_versions.external_versions",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_basics._test_initremote_basic": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.customremotes.ria_utils.create_ds_in_store",
    "datalad.customremotes.ria_utils.create_store",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distributed.ora_remote.SSHRemoteIO",
    "datalad.distributed.tests.ria_utils.common_init_opts",
    "datalad.distributed.tests.ria_utils.populate_dataset",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.has_symlink_capability",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_basics._test_initremote_rewrite": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.customremotes.ria_utils.create_ds_in_store",
    "datalad.customremotes.ria_utils.create_store",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distributed.ora_remote.SSHRemoteIO",
    "datalad.distributed.tests.ria_utils.common_init_opts",
    "datalad.distributed.tests.ria_utils.populate_dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_basics._test_remote_layout": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.customremotes.ria_utils.create_ds_in_store",
    "datalad.customremotes.ria_utils.create_store",
    "datalad.customremotes.ria_utils.get_layout_locations",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distributed.ora_remote.SSHRemoteIO",
    "datalad.distributed.tests.ria_utils.common_init_opts",
    "datalad.distributed.tests.ria_utils.get_all_files",
    "datalad.distributed.tests.ria_utils.populate_dataset",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_basics._test_version_check": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.customremotes.ria_utils.create_ds_in_store",
    "datalad.customremotes.ria_utils.create_store",
    "datalad.customremotes.ria_utils.get_layout_locations",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distributed.ora_remote.SSHRemoteIO",
    "datalad.distributed.tests.ria_utils.common_init_opts",
    "datalad.distributed.tests.ria_utils.populate_dataset",
    "datalad.distributed.tests.test_ria_basics.logging",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_basics.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.clone": {
  "data": {
   "shadows": "datalad.api.clone"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.common_init_opts": {
  "data": {
   "shadows": "datalad.distributed.tests.ria_utils.common_init_opts"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.create_ds_in_store": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.create_ds_in_store"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.create_store": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.create_store"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.get_all_files": {
  "data": {
   "shadows": "datalad.distributed.tests.ria_utils.get_all_files"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.get_layout_locations": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.get_layout_locations"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.has_symlink_capability": {
  "data": {
   "shadows": "datalad.tests.utils.has_symlink_capability"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.populate_dataset": {
  "data": {
   "shadows": "datalad.distributed.tests.ria_utils.populate_dataset"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.test_binary_data": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "datalad.distributed.tests.test_ria_basics._test_binary_data",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.skip_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_basics.test_gitannex_local": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "datalad.distributed.tests.test_ria_basics._test_gitannex",
    "datalad.tests.utils.slow"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_basics.test_gitannex_ssh": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "datalad.distributed.tests.test_ria_basics._test_gitannex",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.turtle"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_basics.test_initremote_basic": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "datalad.distributed.tests.test_ria_basics._test_initremote_basic",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.skip_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_basics.test_initremote_rewrite": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "datalad.distributed.tests.test_ria_basics._test_initremote_rewrite",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.skip_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_basics.test_remote_layout": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "datalad.distributed.tests.test_ria_basics._test_remote_layout",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_basics.test_version_check": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "datalad.distributed.tests.test_ria_basics._test_version_check",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_basics.turtle": {
  "data": {
   "shadows": "datalad.tests.utils.turtle"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_basics.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote": {
  "data": {},
  "type": "module"
 },
 "datalad.distributed.tests.test_ria_git_remote.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.LocalIO": {
  "data": {
   "shadows": "datalad.distributed.ora_remote.LocalIO"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.SSHRemoteIO": {
  "data": {
   "shadows": "datalad.distributed.ora_remote.SSHRemoteIO"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote._test_bare_git_version_1": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.customremotes.ria_utils.create_ds_in_store",
    "datalad.customremotes.ria_utils.create_store",
    "datalad.customremotes.ria_utils.get_layout_locations",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distributed.ora_remote.SSHRemoteIO",
    "datalad.distributed.tests.ria_utils.common_init_opts",
    "datalad.distributed.tests.ria_utils.populate_dataset",
    "datalad.distributed.tests.test_ria_git_remote.subprocess",
    "datalad.interface.results.annexjson2result",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.quote_cmdlinearg",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_git_remote._test_bare_git_version_2": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.customremotes.ria_utils.create_ds_in_store",
    "datalad.customremotes.ria_utils.create_store",
    "datalad.customremotes.ria_utils.get_layout_locations",
    "datalad.distributed.ora_remote.LocalIO",
    "datalad.distributed.ora_remote.SSHRemoteIO",
    "datalad.distributed.tests.ria_utils.common_init_opts",
    "datalad.distributed.tests.ria_utils.populate_dataset",
    "datalad.distributed.tests.test_ria_git_remote.subprocess",
    "datalad.interface.results.annexjson2result",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.quote_cmdlinearg",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_git_remote.annexjson2result": {
  "data": {
   "shadows": "datalad.interface.results.annexjson2result"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.clone": {
  "data": {
   "shadows": "datalad.api.clone"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.common_init_opts": {
  "data": {
   "shadows": "datalad.distributed.tests.ria_utils.common_init_opts"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.create_ds_in_store": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.create_ds_in_store"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.create_store": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.create_store"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.get_layout_locations": {
  "data": {
   "shadows": "datalad.customremotes.ria_utils.get_layout_locations"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.populate_dataset": {
  "data": {
   "shadows": "datalad.distributed.tests.ria_utils.populate_dataset"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.quote_cmdlinearg": {
  "data": {
   "shadows": "datalad.utils.quote_cmdlinearg"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "datalad.distributed.tests.test_ria_git_remote.test_bare_git_version_1": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "datalad.distributed.tests.test_ria_git_remote._test_bare_git_version_1",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_git_remote.test_bare_git_version_2": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "datalad.distributed.tests.test_ria_git_remote._test_bare_git_version_2",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow"
   ]
  },
  "type": "function"
 },
 "datalad.distributed.tests.test_ria_git_remote.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.clone": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "datalad.distribution.clone.warnings"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.clone.Clone": {
  "data": {
   "shadows": "datalad.core.distributed.clone.Clone"
  },
  "type": "import"
 },
 "datalad.distribution.clone.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.clone._get_installationpath_from_url": {
  "data": {
   "shadows": "datalad.core.distributed.clone._get_installationpath_from_url"
  },
  "type": "import"
 },
 "datalad.distribution.clone._get_tracking_source": {
  "data": {
   "shadows": "datalad.core.distributed.clone._get_tracking_source"
  },
  "type": "import"
 },
 "datalad.distribution.clone._handle_possible_annex_dataset": {
  "data": {
   "shadows": "datalad.core.distributed.clone._handle_possible_annex_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.clone.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.create_sibling.logging",
    "datalad.utils.on_windows"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.create_sibling.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.CommandError": {
  "data": {
   "shadows": "datalad.cmd.CommandError"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.CreateSibling": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.annex_group_opt",
    "datalad.interface.common_opts.annex_groupwanted_opt",
    "datalad.interface.common_opts.annex_wanted_opt",
    "datalad.interface.common_opts.as_common_datasrc",
    "datalad.interface.common_opts.inherit_opt",
    "datalad.interface.common_opts.publish_by_default",
    "datalad.interface.common_opts.publish_depends",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureBool",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.create_sibling.CreateSibling.__call__": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "datalad.cmd.CommandError",
    "datalad.distribution.create_sibling.CreateSibling",
    "datalad.distribution.create_sibling._RunnerAdapter",
    "datalad.distribution.create_sibling._create_dataset_sibling",
    "datalad.distribution.create_sibling.lgr",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.dataset.resolve_path",
    "datalad.dochelpers.exc_str",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.common_opts.as_common_datasrc",
    "datalad.interface.common_opts.publish_by_default",
    "datalad.interface.common_opts.publish_depends",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.utils.eval_results",
    "datalad.ssh_manager.get_connection",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.exceptions.MissingExternalDependency",
    "datalad.support.network.PathRI",
    "datalad.support.network.RI",
    "datalad.support.network.is_ssh",
    "datalad.support.sshconnector.sh_quote",
    "datalad.ui.ui",
    "datalad.utils._path_",
    "datalad.utils.assure_list",
    "datalad.utils.slash_join",
    "isinstance",
    "os.path.join",
    "os.path.relpath",
    "set",
    "shell",
    "shell.get_annex_version",
    "sorted",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.CreateSibling._get_ds_remote_shared_setting": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "datalad.cmd.CommandError",
    "datalad.distribution.create_sibling.CreateSibling",
    "datalad.distribution.create_sibling.lgr",
    "datalad.dochelpers.exc_str",
    "ssh",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.CreateSibling._get_remote_url": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "ValueError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.CreateSibling._has_active_postupdate": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "datalad.cmd.CommandError",
    "datalad.distribution.create_sibling.CreateSibling",
    "datalad.distribution.create_sibling.lgr",
    "datalad.dochelpers.exc_str",
    "ssh",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.CreateSibling._run_on_ds_ssh_remote": {
  "data": {
   "lineno": 813,
   "symbols_in_volume": [
    "datalad.distribution.create_sibling.CreateSibling",
    "datalad.distribution.create_sibling.lgr",
    "datalad.support.network.RI",
    "datalad.support.sshconnector.sh_quote",
    "ssh",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.CreateSibling.create_postupdate_hook": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "datalad.consts.TIMESTAMP_FMT",
    "datalad.consts.WEB_META_LOG",
    "datalad.distribution.create_sibling.mkdir_cmd",
    "datalad.support.sshconnector.sh_quote",
    "datalad.utils.make_tempfile",
    "locals",
    "os.path.join",
    "ssh",
    "ssh.put",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.CreateSibling.init_remote_repo": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "datalad.cmd.CommandError",
    "datalad.distribution.create_sibling.lgr",
    "datalad.dochelpers.exc_str",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.sshconnector.sh_quote",
    "isinstance",
    "ssh",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.CreateSibling.upload_web_interface": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "ImportError",
    "datalad.consts.WEB_HTML_DIR",
    "datalad.distribution.create_sibling.datalad",
    "datalad.distribution.create_sibling.lgr",
    "datalad.distribution.create_sibling.mkdir_cmd",
    "datalad.support.sshconnector.sh_quote",
    "datalad.ui.ui",
    "datalad.utils.make_tempfile",
    "glob.glob",
    "isinstance",
    "jsmin.jsmin",
    "open",
    "os.path.dirname",
    "os.path.join",
    "ssh",
    "ssh.put",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.MissingExternalDependency": {
  "data": {
   "shadows": "datalad.support.exceptions.MissingExternalDependency"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.PathRI": {
  "data": {
   "shadows": "datalad.support.network.PathRI"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.Siblings": {
  "data": {
   "shadows": "datalad.distribution.siblings.Siblings"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.TIMESTAMP_FMT": {
  "data": {
   "shadows": "datalad.consts.TIMESTAMP_FMT"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.WEB_HTML_DIR": {
  "data": {
   "shadows": "datalad.consts.WEB_HTML_DIR"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.WEB_META_LOG": {
  "data": {
   "shadows": "datalad.consts.WEB_META_LOG"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling._DelayedSuper": {
  "data": {
   "shadows": "datalad.distribution.siblings._DelayedSuper"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling._RunnerAdapter": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "datalad.cmd.Runner"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.create_sibling._RunnerAdapter.get_annex_version": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "datalad.support.external_versions.external_versions"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling._RunnerAdapter.get_git_version": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "datalad.support.external_versions.external_versions"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling._RunnerAdapter.put": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "FileExistsError",
    "copy_fn",
    "datalad.distribution.create_sibling.shutil",
    "datalad.utils.quote_cmdlinearg",
    "self"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.distribution.create_sibling._create_dataset_sibling": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "RuntimeError",
    "UnicodeDecodeError",
    "ValueError",
    "datalad.cmd.CommandError",
    "datalad.distribution.create_sibling._ls_remote_path",
    "datalad.distribution.create_sibling.lgr",
    "datalad.distribution.create_sibling.mkdir_cmd",
    "datalad.distribution.siblings.Siblings.__call__",
    "datalad.distribution.siblings._DelayedSuper",
    "datalad.dochelpers.exc_str",
    "datalad.interface.common_opts.as_common_datasrc",
    "datalad.interface.common_opts.publish_by_default",
    "datalad.interface.common_opts.publish_depends",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.network.PathRI",
    "datalad.support.network.is_ssh",
    "datalad.support.sshconnector.sh_quote",
    "datalad.ui.ui.is_interactive",
    "datalad.ui.ui.yesno",
    "distutils.version.LooseVersion",
    "isinstance",
    "len",
    "os.path.curdir",
    "os.path.join",
    "os.path.normpath",
    "os.path.relpath",
    "repr",
    "shell",
    "shell.get_git_version",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling._ls_remote_path": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "datalad.cmd.CommandError",
    "datalad.distribution.create_sibling.lgr",
    "datalad.distribution.create_sibling.os",
    "datalad.support.sshconnector.sh_quote",
    "ssh"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.annex_group_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_group_opt"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.annex_groupwanted_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_groupwanted_opt"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.annex_wanted_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_wanted_opt"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.as_common_datasrc": {
  "data": {
   "shadows": "datalad.interface.common_opts.as_common_datasrc"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.datalad": {
  "data": {
   "shadows": "datalad"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.inherit_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.inherit_opt"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.is_ssh": {
  "data": {
   "shadows": "datalad.support.network.is_ssh"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.jsmin": {
  "data": {
   "shadows": "jsmin.jsmin"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.lgr": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "datalad.distribution.create_sibling.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.make_tempfile": {
  "data": {
   "shadows": "datalad.utils.make_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.mkdir_cmd": {
  "data": {
   "lineno": 101
  },
  "type": "constant"
 },
 "datalad.distribution.create_sibling.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.publish_by_default": {
  "data": {
   "shadows": "datalad.interface.common_opts.publish_by_default"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.publish_depends": {
  "data": {
   "shadows": "datalad.interface.common_opts.publish_depends"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.quote_cmdlinearg": {
  "data": {
   "shadows": "datalad.utils.quote_cmdlinearg"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.resolve_path": {
  "data": {
   "shadows": "datalad.distribution.dataset.resolve_path"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.sh_quote": {
  "data": {
   "shadows": "datalad.support.sshconnector.sh_quote"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.slash_join": {
  "data": {
   "shadows": "datalad.utils.slash_join"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.create_sibling_github.logging",
    "datalad.distribution.create_sibling_github.re"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.create_sibling_github.CreateSiblingGithub": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "EnsureChoice",
    "EnsureDataset",
    "EnsureNone",
    "EnsureStr",
    "Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.create_sibling_github.CreateSiblingGithub.__call__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "Siblings",
    "ValueError",
    "datalad.distribution.create_sibling_github.lgr",
    "datalad.distribution.create_sibling_github.template_fx",
    "datalad.support.github_._make_github_repos",
    "datasetmethod",
    "os.path.relpath",
    "require_dataset",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling_github.CreateSiblingGithub.result_renderer_cmdline": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "assure_list",
    "datalad.ui.ui.message",
    "len",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_sibling_github.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.distribution.create_sibling_github._make_github_repos": {
  "data": {
   "shadows": "datalad.support.github_._make_github_repos"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.lgr": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "datalad.distribution.create_sibling_github.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.create_sibling_github.template_fx": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "datalad.distribution.create_sibling_github.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.create_test_dataset.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.create_test_dataset.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.CreateTestDataset": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureInt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.create_test_dataset.CreateTestDataset.__call__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "datalad.distribution.create_test_dataset._makeds",
    "datalad.distribution.create_test_dataset._parse_spec",
    "datalad.distribution.create_test_dataset.os",
    "datalad.distribution.create_test_dataset.random",
    "datalad.distribution.create_test_dataset.tempfile",
    "datalad.utils.get_tempfile_kwargs",
    "list",
    "os.path.exists",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_test_dataset.CreateTestDataset.result_renderer_cmdline": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "datalad.ui.ui.message",
    "len",
    "map",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_test_dataset.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.EnsureInt": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureInt"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.create_test_dataset._makeds": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "RepoClass",
    "datalad.api.save",
    "datalad.distribution.create_test_dataset.lgr",
    "datalad.distribution.create_test_dataset.random",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "open",
    "os.path.abspath",
    "os.path.isabs",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_test_dataset._parse_spec": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.create_test_dataset.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.get_tempfile_kwargs": {
  "data": {
   "shadows": "datalad.utils.get_tempfile_kwargs"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.lgr": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datalad.distribution.create_test_dataset.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.save": {
  "data": {
   "shadows": "datalad.api.save"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.create_test_dataset.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.distribution.dataset": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.dataset.lgr",
    "datalad.distribution.dataset.logging",
    "datalad.distribution.dataset.resolve_path"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.dataset.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.ConfigManager": {
  "data": {
   "shadows": "datalad.config.ConfigManager"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.Constraint": {
  "data": {
   "shadows": "datalad.support.constraints.Constraint"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.Dataset": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "datalad.support.repo.PathBasedFlyweight",
    "datalad.support.repo.path_based_str_repr",
    "object",
    "weakref.WeakValueDictionary"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.dataset.Dataset.__eq__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.__getattr__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.lgr",
    "datalad.interface.base.get_api_name",
    "datalad.interface.base.get_interface_groups",
    "datalad.interface.base.load_interface",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.__hash__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.__init__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "datalad.support.path",
    "datalad.utils.Path",
    "datalad.utils.PurePath",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset._flyweight_invalid": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset._flyweight_postproc_path": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "classmethod",
    "datalad.support.path",
    "datalad.support.path.getpwd",
    "datalad.support.path.isabs",
    "datalad.support.path.join",
    "datalad.support.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset._flyweight_preproc_path": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "classmethod",
    "datalad.cfg.obtain",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.lgr",
    "datalad.support.exceptions.NoDatasetFound",
    "datalad.support.path",
    "datalad.utils.Path.cwd",
    "datalad.utils.get_dataset_root",
    "os.path.curdir",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.close": {
  "data": {
   "lineno": 211
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.config": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "datalad.config.ConfigManager",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.get_superdataset": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.path",
    "datalad.utils.get_dataset_root",
    "os.path.join",
    "os.path.normpath",
    "os.path.pardir",
    "subds_contains_path"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.get_superdataset.res_filter": {
  "data": {
   "lineno": 410
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.get_superdataset.subds_contains_path": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "datalad.support.path"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.id": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.is_installed": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.path": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.pathobj": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "datalad.utils.Path",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.recall_state": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.Dataset.repo": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "datalad.core.local.repo.repo_from_path",
    "datalad.distribution.dataset.lgr",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo._unique_instances.get",
    "datalad.support.due.due.active",
    "datalad.support.due_utils.duecredit_dataset",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.GitRepo._unique_instances.get",
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.EnsureDataset": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.dataset.EnsureDataset.__call__": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.EnsureDataset.long_description": {
  "data": {
   "lineno": 535
  },
  "type": "function"
 },
 "datalad.distribution.dataset.EnsureDataset.short_description": {
  "data": {
   "lineno": 532
  },
  "type": "function"
 },
 "datalad.distribution.dataset.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.NoDatasetFound": {
  "data": {
   "shadows": "datalad.support.exceptions.NoDatasetFound"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.PathBasedFlyweight": {
  "data": {
   "shadows": "datalad.support.repo.PathBasedFlyweight"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.PurePath": {
  "data": {
   "shadows": "datalad.utils.PurePath"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.WeakValueDictionary": {
  "data": {
   "shadows": "weakref.WeakValueDictionary"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.datasetmethod": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "apply_func",
    "datalad.distribution.dataset.Dataset",
    "datalad.utils.optional_args",
    "f",
    "setattr"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.datasetmethod.apply_func": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "TypeError",
    "datalad.distribution.dataset.wrapt",
    "datalad.utils.getargspec",
    "f",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.due": {
  "data": {
   "shadows": "datalad.support.due.due"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.duecredit_dataset": {
  "data": {
   "shadows": "datalad.support.due_utils.duecredit_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.get_api_name": {
  "data": {
   "shadows": "datalad.interface.base.get_api_name"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.get_interface_groups": {
  "data": {
   "shadows": "datalad.interface.base.get_interface_groups"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.getargspec": {
  "data": {
   "shadows": "datalad.utils.getargspec"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.lgr": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "datalad.distribution.dataset.load_interface": {
  "data": {
   "shadows": "datalad.interface.base.load_interface"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.op": {
  "data": {
   "shadows": "datalad.support.path"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.optional_args": {
  "data": {
   "shadows": "datalad.utils.optional_args"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.path_based_str_repr": {
  "data": {
   "shadows": "datalad.support.repo.path_based_str_repr"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.path_under_rev_dataset": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "Exception",
    "datalad.support.path",
    "datalad.support.path.join",
    "datalad.support.path.pardir",
    "datalad.support.path.relpath",
    "datalad.utils.Path",
    "datalad.utils.get_dataset_root",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.quote_cmdlinearg": {
  "data": {
   "shadows": "datalad.utils.quote_cmdlinearg"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.repo_from_path": {
  "data": {
   "shadows": "datalad.core.local.repo.repo_from_path"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.require_dataset": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.lgr",
    "datalad.support.exceptions.NoDatasetFound",
    "datalad.utils.get_dataset_root",
    "datalad.utils.getpwd",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.resolve_path": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.require_dataset",
    "datalad.support.path",
    "datalad.support.path.curdir",
    "datalad.support.path.join",
    "datalad.support.path.pardir",
    "datalad.utils.Path",
    "datalad.utils.PurePath",
    "datalad.utils.assure_list",
    "datalad.utils.getpwd",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.dataset.rev_get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.rev_resolve_path": {
  "data": {
   "lineno": 681
  },
  "type": "constant"
 },
 "datalad.distribution.dataset.subdatasets": {
  "data": {
   "shadows": "datalad.coreapi.subdatasets"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.ut": {
  "data": {
   "shadows": "datalad.utils"
  },
  "type": "import"
 },
 "datalad.distribution.dataset.wrapt": {
  "data": {
   "shadows": "wrapt"
  },
  "type": "import"
 },
 "datalad.distribution.drop": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.distribution.drop.logging",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.param.Parameter"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.drop.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.distribution.drop.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.drop.Drop": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "datalad.distribution.drop.check_argument",
    "datalad.distribution.drop.dataset_argument",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.if_dirty_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.drop.Drop.__call__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.drop._drop_files",
    "datalad.distribution.drop.lgr",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.annotate_paths.annotated2content_by_ds",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.utils.eval_results",
    "datalad.interface.utils.handle_dirty_dataset",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "dict",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.drop.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.distribution.drop.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.drop.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.drop.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.drop.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.drop.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.drop.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.drop.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.drop._drop_files": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datalad.interface.results.annexjson2result",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.results.results_from_annex_noinfo",
    "datalad.interface.results.success_status_map",
    "datalad.utils.assure_list",
    "hasattr",
    "isinstance",
    "os.path.isabs",
    "os.path.join",
    "os.path.normpath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.drop.annexjson2result": {
  "data": {
   "shadows": "datalad.interface.results.annexjson2result"
  },
  "type": "import"
 },
 "datalad.distribution.drop.annotated2content_by_ds": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.annotated2content_by_ds"
  },
  "type": "import"
 },
 "datalad.distribution.drop.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.drop.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.drop.check_argument": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.distribution.drop.dataset_argument": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "datalad.distribution.drop.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.distribution.drop.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.drop.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.drop.handle_dirty_dataset": {
  "data": {
   "shadows": "datalad.interface.utils.handle_dirty_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.drop.if_dirty_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.if_dirty_opt"
  },
  "type": "import"
 },
 "datalad.distribution.drop.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.distribution.drop.lgr": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "datalad.distribution.drop.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.drop.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.distribution.drop.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.drop.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.drop.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.drop.results_from_annex_noinfo": {
  "data": {
   "shadows": "datalad.interface.results.results_from_annex_noinfo"
  },
  "type": "import"
 },
 "datalad.distribution.drop.success_status_map": {
  "data": {
   "shadows": "datalad.interface.results.success_status_map"
  },
  "type": "import"
 },
 "datalad.distribution.get": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.get.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.get.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.get.ConfigManager": {
  "data": {
   "shadows": "datalad.config.ConfigManager"
  },
  "type": "import"
 },
 "datalad.distribution.get.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.get.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.distribution.get.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.distribution.get.EnsureInt": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureInt"
  },
  "type": "import"
 },
 "datalad.distribution.get.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.get.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.get.Get": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.jobs_opt",
    "datalad.interface.common_opts.location_description",
    "datalad.interface.common_opts.reckless_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureInt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.get.Get.__call__": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.get._get_targetpaths",
    "datalad.distribution.get._install_targetpath",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.utils.eval_results",
    "datalad.local.subdatasets.Subdatasets.__call__",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.utils.Path",
    "dict",
    "set",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.get.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.get.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.get.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.get.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.get.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distribution.get.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.get.Subdatasets": {
  "data": {
   "shadows": "datalad.local.subdatasets.Subdatasets"
  },
  "type": "import"
 },
 "datalad.distribution.get.URL": {
  "data": {
   "shadows": "datalad.support.network.URL"
  },
  "type": "import"
 },
 "datalad.distribution.get.__docformat__": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "datalad.distribution.get._fixup_submodule_dotgit_setup": {
  "data": {
   "shadows": "datalad.support.gitrepo._fixup_submodule_dotgit_setup"
  },
  "type": "import"
 },
 "datalad.distribution.get._get_flexible_source_candidates": {
  "data": {
   "shadows": "datalad.distribution.utils._get_flexible_source_candidates"
  },
  "type": "import"
 },
 "datalad.distribution.get._get_flexible_source_candidates_for_submodule": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "datalad.distribution.get._get_remotes_having_commit",
    "datalad.distribution.get.re",
    "datalad.distribution.utils._get_flexible_source_candidates",
    "datalad.support.network.RI",
    "datalad.support.network.URL",
    "datalad.support.network.urlquote",
    "datalad.utils.unique",
    "dict",
    "int",
    "isinstance",
    "len",
    "list",
    "os.path.relpath",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.get._get_remotes_having_commit": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.get._get_targetpaths": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "datalad.distribution.get.lgr",
    "datalad.interface.results.annexjson2result",
    "datalad.interface.results.results_from_annex_noinfo",
    "datalad.interface.results.results_from_paths",
    "datalad.interface.results.success_status_map",
    "datalad.support.annexrepo.AnnexRepo",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.get._install_necessary_subdatasets": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.get._install_subds_from_flexible_source",
    "datalad.interface.results.is_ok_dataset",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.get._install_subds_from_flexible_source": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "datalad.config.ConfigManager",
    "datalad.core.distributed.clone.clone_dataset",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.get._get_flexible_source_candidates_for_submodule",
    "datalad.distribution.get.lgr",
    "datalad.interface.results.get_status_dict",
    "datalad.support.gitrepo._fixup_submodule_dotgit_setup",
    "os.path.join",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.get._install_targetpath": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "any",
    "datalad.distribution.get._install_necessary_subdatasets",
    "datalad.distribution.get._recursive_install_subds_underneath",
    "datalad.distribution.get.lgr",
    "datalad.utils.Path",
    "datalad.utils.get_dataset_root",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.get._recursive_install_subds_underneath": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.get._install_subds_from_flexible_source",
    "datalad.distribution.get.lgr",
    "datalad.interface.results.get_status_dict",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.get.annexjson2result": {
  "data": {
   "shadows": "datalad.interface.results.annexjson2result"
  },
  "type": "import"
 },
 "datalad.distribution.get.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.get.clone_dataset": {
  "data": {
   "shadows": "datalad.core.distributed.clone.clone_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.get.count_results": {
  "data": {
   "shadows": "datalad.interface.results.count_results"
  },
  "type": "import"
 },
 "datalad.distribution.get.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.distribution.get.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.get.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.distribution.get.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.get.is_ok_dataset": {
  "data": {
   "shadows": "datalad.interface.results.is_ok_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.get.jobs_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.jobs_opt"
  },
  "type": "import"
 },
 "datalad.distribution.get.lgr": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "datalad.distribution.get.location_description": {
  "data": {
   "shadows": "datalad.interface.common_opts.location_description"
  },
  "type": "import"
 },
 "datalad.distribution.get.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.get.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.distribution.get.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.distribution.get.reckless_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.reckless_opt"
  },
  "type": "import"
 },
 "datalad.distribution.get.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.get.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.get.results_from_annex_noinfo": {
  "data": {
   "shadows": "datalad.interface.results.results_from_annex_noinfo"
  },
  "type": "import"
 },
 "datalad.distribution.get.results_from_paths": {
  "data": {
   "shadows": "datalad.interface.results.results_from_paths"
  },
  "type": "import"
 },
 "datalad.distribution.get.single_or_plural": {
  "data": {
   "shadows": "datalad.dochelpers.single_or_plural"
  },
  "type": "import"
 },
 "datalad.distribution.get.success_status_map": {
  "data": {
   "shadows": "datalad.interface.results.success_status_map"
  },
  "type": "import"
 },
 "datalad.distribution.get.unique": {
  "data": {
   "shadows": "datalad.utils.unique"
  },
  "type": "import"
 },
 "datalad.distribution.get.urlquote": {
  "data": {
   "shadows": "datalad.support.network.urlquote"
  },
  "type": "import"
 },
 "datalad.distribution.install": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.install.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.install.Clone": {
  "data": {
   "shadows": "datalad.core.distributed.clone.Clone"
  },
  "type": "import"
 },
 "datalad.distribution.install.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.distribution.install.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.install.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.install.Get": {
  "data": {
   "shadows": "datalad.distribution.get.Get"
  },
  "type": "import"
 },
 "datalad.distribution.install.Install": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.jobs_opt",
    "datalad.interface.common_opts.location_description",
    "datalad.interface.common_opts.nosave_opt",
    "datalad.interface.common_opts.reckless_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.is_result_matching_pathsource_argument",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.install.Install.__call__": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "as_ds",
    "datalad.core.distributed.clone.Clone.__call__",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.dataset.resolve_path",
    "datalad.distribution.get.Get.__call__",
    "datalad.distribution.install.Install",
    "datalad.distribution.install.lgr",
    "datalad.dochelpers.exc_str",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.YieldDatasets",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.network.PathRI",
    "datalad.support.network.RI",
    "datalad.utils.assure_list",
    "dict",
    "isinstance",
    "len",
    "os.curdir",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.install.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.install.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.install.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.install.PathRI": {
  "data": {
   "shadows": "datalad.support.network.PathRI"
  },
  "type": "import"
 },
 "datalad.distribution.install.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.install.YieldDatasets": {
  "data": {
   "shadows": "datalad.interface.results.YieldDatasets"
  },
  "type": "import"
 },
 "datalad.distribution.install.__docformat__": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datalad.distribution.install.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.install.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.install.curdir": {
  "data": {
   "shadows": "os.curdir"
  },
  "type": "import"
 },
 "datalad.distribution.install.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.distribution.install.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.install.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.install.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.install.is_result_matching_pathsource_argument": {
  "data": {
   "shadows": "datalad.interface.results.is_result_matching_pathsource_argument"
  },
  "type": "import"
 },
 "datalad.distribution.install.jobs_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.jobs_opt"
  },
  "type": "import"
 },
 "datalad.distribution.install.lgr": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "datalad.distribution.install.location_description": {
  "data": {
   "shadows": "datalad.interface.common_opts.location_description"
  },
  "type": "import"
 },
 "datalad.distribution.install.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.install.nosave_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.nosave_opt"
  },
  "type": "import"
 },
 "datalad.distribution.install.reckless_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.reckless_opt"
  },
  "type": "import"
 },
 "datalad.distribution.install.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.install.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.install.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.install.resolve_path": {
  "data": {
   "shadows": "datalad.distribution.dataset.resolve_path"
  },
  "type": "import"
 },
 "datalad.distribution.publish": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.publish.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.publish.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.publish.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.distribution.publish.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.distribution.publish.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.publish.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.publish.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.publish.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.publish.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.distribution.publish.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.publish.Publish": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.annex_copy_opts",
    "datalad.interface.common_opts.annex_opts",
    "datalad.interface.common_opts.git_opts",
    "datalad.interface.common_opts.jobs_opt",
    "datalad.interface.common_opts.missing_sibling_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.publish.Publish.__call__": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "Dataset",
    "collections.OrderedDict",
    "datalad.distribution.publish._get_remote_info",
    "datalad.distribution.publish._publish_dataset",
    "datalad.distribution.publish.lgr",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.annotate_paths.annotated2content_by_ds",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.common_opts.annex_copy_opts",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datasetmethod",
    "dict",
    "isinstance",
    "len",
    "require_dataset",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.publish.SSHRI": {
  "data": {
   "shadows": "datalad.support.network.SSHRI"
  },
  "type": "import"
 },
 "datalad.distribution.publish.URL": {
  "data": {
   "shadows": "datalad.support.network.URL"
  },
  "type": "import"
 },
 "datalad.distribution.publish.__docformat__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "datalad.distribution.publish._check_and_update_remote_server_info": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "datalad.distribution.publish.lgr",
    "datalad.ssh_manager.get_connection",
    "datalad.support.network.RI",
    "datalad.support.network.URL",
    "datalad.support.network.is_ssh",
    "datalad.support.sshconnector.sh_quote",
    "isinstance",
    "ssh"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish._get_remote_branch": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "datalad.distribution.publish._get_remote_diff": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "datalad.distribution.publish.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish._get_remote_info": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.publish.lgr",
    "dict",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish._maybe_fetch": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "datalad.distribution.publish.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish._publish_data": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.publish._check_and_update_remote_server_info",
    "datalad.distribution.publish.lgr",
    "datalad.interface.results.get_status_dict",
    "datalad.support.annexrepo.AnnexRepo",
    "isinstance",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish._publish_dataset": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "StopIteration",
    "datalad.distribution.publish._get_remote_branch",
    "datalad.distribution.publish._get_remote_diff",
    "datalad.distribution.publish._maybe_fetch",
    "datalad.distribution.publish._publish_data",
    "datalad.distribution.publish._push",
    "datalad.distribution.publish.has_diff",
    "datalad.distribution.publish.lgr",
    "datalad.distribution.publish.re",
    "datalad.interface.results.get_status_dict",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.utils.assure_list",
    "isinstance",
    "next"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish._push": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "datalad.distribution.publish.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish.annex_copy_opts": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_copy_opts"
  },
  "type": "import"
 },
 "datalad.distribution.publish.annex_opts": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_opts"
  },
  "type": "import"
 },
 "datalad.distribution.publish.annotated2content_by_ds": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.annotated2content_by_ds"
  },
  "type": "import"
 },
 "datalad.distribution.publish.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.publish.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.publish.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.publish.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.publish.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.publish.git_opts": {
  "data": {
   "shadows": "datalad.interface.common_opts.git_opts"
  },
  "type": "import"
 },
 "datalad.distribution.publish.has_diff": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "any",
    "datalad.distribution.publish.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.publish.is_ssh": {
  "data": {
   "shadows": "datalad.support.network.is_ssh"
  },
  "type": "import"
 },
 "datalad.distribution.publish.jobs_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.jobs_opt"
  },
  "type": "import"
 },
 "datalad.distribution.publish.lgr": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "datalad.distribution.publish.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.publish.missing_sibling_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.missing_sibling_opt"
  },
  "type": "import"
 },
 "datalad.distribution.publish.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.publish.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.distribution.publish.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.publish.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.publish.sh_quote": {
  "data": {
   "shadows": "datalad.support.sshconnector.sh_quote"
  },
  "type": "import"
 },
 "datalad.distribution.publish.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.distribution.remove": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.remove.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.remove.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.distribution.remove.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.remove.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.remove.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.remove.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.remove.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.remove.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.remove.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.remove.Remove": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "datalad.distribution.drop.check_argument",
    "datalad.distribution.drop.dataset_argument",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.if_dirty_opt",
    "datalad.interface.common_opts.nosave_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.save_message_opt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.remove.Remove.__call__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "datalad.core.local.save.Save.__call__",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.drop._drop_files",
    "datalad.distribution.remove.lgr",
    "datalad.distribution.uninstall.Uninstall.__call__",
    "datalad.distribution.uninstall._uninstall_dataset",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.annotate_paths.annotated2content_by_ds",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.interface.utils.path_is_under",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.utils.rmdir",
    "dict",
    "hasattr",
    "list",
    "os.path.exists",
    "os.path.join",
    "os.path.pardir",
    "os.path.relpath",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.remove.Save": {
  "data": {
   "shadows": "datalad.core.local.save.Save"
  },
  "type": "import"
 },
 "datalad.distribution.remove.Uninstall": {
  "data": {
   "shadows": "datalad.distribution.uninstall.Uninstall"
  },
  "type": "import"
 },
 "datalad.distribution.remove.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.remove._drop_files": {
  "data": {
   "shadows": "datalad.distribution.drop._drop_files"
  },
  "type": "import"
 },
 "datalad.distribution.remove._uninstall_dataset": {
  "data": {
   "shadows": "datalad.distribution.uninstall._uninstall_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.remove.annotated2content_by_ds": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.annotated2content_by_ds"
  },
  "type": "import"
 },
 "datalad.distribution.remove.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.remove.check_argument": {
  "data": {
   "shadows": "datalad.distribution.drop.check_argument"
  },
  "type": "import"
 },
 "datalad.distribution.remove.dataset_argument": {
  "data": {
   "shadows": "datalad.distribution.drop.dataset_argument"
  },
  "type": "import"
 },
 "datalad.distribution.remove.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.distribution.remove.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.remove.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.remove.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.remove.if_dirty_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.if_dirty_opt"
  },
  "type": "import"
 },
 "datalad.distribution.remove.lgr": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datalad.distribution.remove.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.remove.nosave_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.nosave_opt"
  },
  "type": "import"
 },
 "datalad.distribution.remove.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.remove.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.remove.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.distribution.remove.path_is_under": {
  "data": {
   "shadows": "datalad.interface.utils.path_is_under"
  },
  "type": "import"
 },
 "datalad.distribution.remove.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.remove.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.remove.rmdir": {
  "data": {
   "shadows": "datalad.utils.rmdir"
  },
  "type": "import"
 },
 "datalad.distribution.remove.save_message_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.save_message_opt"
  },
  "type": "import"
 },
 "datalad.distribution.siblings": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.siblings.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.siblings.AccessDeniedError": {
  "data": {
   "shadows": "datalad.support.exceptions.AccessDeniedError"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.AccessFailedError": {
  "data": {
   "shadows": "datalad.support.exceptions.AccessFailedError"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.DownloadError": {
  "data": {
   "shadows": "datalad.support.exceptions.DownloadError"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.PathRI": {
  "data": {
   "shadows": "datalad.support.network.PathRI"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.RemoteNotAvailableError": {
  "data": {
   "shadows": "datalad.support.exceptions.RemoteNotAvailableError"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.Siblings": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.annex_group_opt",
    "datalad.interface.common_opts.annex_groupwanted_opt",
    "datalad.interface.common_opts.annex_required_opt",
    "datalad.interface.common_opts.annex_wanted_opt",
    "datalad.interface.common_opts.as_common_datasrc",
    "datalad.interface.common_opts.inherit_opt",
    "datalad.interface.common_opts.location_description",
    "datalad.interface.common_opts.publish_by_default",
    "datalad.interface.common_opts.publish_depends",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.siblings.Siblings.__call__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.siblings._mangle_urls",
    "datalad.distribution.siblings.lgr",
    "datalad.interface.common_opts.as_common_datasrc",
    "datalad.interface.common_opts.publish_by_default",
    "datalad.interface.common_opts.publish_depends",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.utils.eval_results",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.utils.slash_join",
    "datasetmethod",
    "dict",
    "os.path.basename",
    "os.path.relpath",
    "staticmethod",
    "worker"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings.Siblings.custom_result_renderer": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "datalad.support.ansi_colors.LOG_LEVEL_COLORS",
    "datalad.support.ansi_colors.color_word",
    "datalad.ui.ui.message",
    "dict",
    "os.path.relpath",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings.URL": {
  "data": {
   "shadows": "datalad.support.network.URL"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.Update": {
  "data": {
   "shadows": "datalad.distribution.update.Update"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.UserPassword": {
  "data": {
   "shadows": "datalad.downloaders.credentials.UserPassword"
  },
  "type": "import"
 },
 "datalad.distribution.siblings._DelayedSuper": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.siblings._DelayedSuper.__init__": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._DelayedSuper.__str__": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._DelayedSuper.config": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._DelayedSuper.repo": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._DelayedSuper.super": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "datalad.distribution.siblings.lgr",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.distribution.siblings._add_remote": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "AttributeError",
    "datalad.distribution.siblings._configure_remote",
    "datalad.distribution.siblings.lgr",
    "datalad.interface.common_opts.as_common_datasrc",
    "datalad.interface.common_opts.publish_by_default",
    "datalad.interface.common_opts.publish_depends",
    "datalad.interface.results.get_status_dict",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.network.PathRI",
    "datalad.support.network.RI",
    "datalad.utils.Path",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._configure_remote": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "datalad.distribution.siblings._DelayedSuper",
    "datalad.distribution.siblings._inherit_annex_var",
    "datalad.distribution.siblings._inherit_config_var",
    "datalad.distribution.siblings._query_remotes",
    "datalad.distribution.siblings.lgr",
    "datalad.distribution.update.Update.__call__",
    "datalad.dochelpers.exc_str",
    "datalad.interface.common_opts.as_common_datasrc",
    "datalad.interface.common_opts.publish_by_default",
    "datalad.interface.common_opts.publish_depends",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.constraints.EnsureBool",
    "datalad.support.exceptions.CommandError",
    "datalad.support.exceptions.DownloadError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.network.RI",
    "datalad.support.network.URL",
    "datalad.utils.assure_list",
    "dict",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._enable_remote": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "Exception",
    "KeyboardInterrupt",
    "cred",
    "cred.delete",
    "cred.is_known",
    "datalad.distribution.siblings.os",
    "datalad.downloaders.credentials.UserPassword",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.AccessDeniedError",
    "datalad.support.exceptions.AccessFailedError",
    "dict",
    "isinstance",
    "str",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._inherit_annex_var": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "datalad.distribution.siblings.lgr",
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._inherit_config_var": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "datalad.distribution.siblings.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._mangle_urls": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "datalad.distribution.siblings._query_remotes": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "datalad.distribution.siblings.lgr",
    "datalad.interface.results.get_status_dict",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings._remove_remote": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "datalad.interface.results.get_status_dict",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.exceptions.RemoteNotAvailableError",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.siblings.ac": {
  "data": {
   "shadows": "datalad.support.ansi_colors"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.annex_group_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_group_opt"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.annex_groupwanted_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_groupwanted_opt"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.annex_required_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_required_opt"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.annex_wanted_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.annex_wanted_opt"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.as_common_datasrc": {
  "data": {
   "shadows": "datalad.interface.common_opts.as_common_datasrc"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.inherit_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.inherit_opt"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.lgr": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "datalad.distribution.siblings.location_description": {
  "data": {
   "shadows": "datalad.interface.common_opts.location_description"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.publish_by_default": {
  "data": {
   "shadows": "datalad.interface.common_opts.publish_by_default"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.publish_depends": {
  "data": {
   "shadows": "datalad.interface.common_opts.publish_depends"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.slash_join": {
  "data": {
   "shadows": "datalad.utils.slash_join"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.distribution.siblings.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "datalad.distribution.subdatasets": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.subdatasets.Subdatasets": {
  "data": {
   "shadows": "datalad.local.subdatasets.Subdatasets"
  },
  "type": "import"
 },
 "datalad.distribution.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.tests.test_create_sibling": {
  "data": {
   "symbols_in_volume": [
    "datalad.api.create_sibling",
    "datalad.distribution.tests.test_create_sibling.lgr",
    "datalad.distribution.tests.test_create_sibling.logging",
    "datalad.tests.utils.assert_no_errors_logged"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.tests.test_create_sibling.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.DEFAULT_BRANCH": {
  "data": {
   "shadows": "datalad.tests.utils.DEFAULT_BRANCH"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.WEB_META_LOG": {
  "data": {
   "shadows": "datalad.consts.WEB_META_LOG"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling._test_target_ssh_inherit": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "Dataset",
    "check_dss",
    "datalad.distribution.tests.test_create_sibling.assert_postupdate_hooks",
    "datalad.distribution.tests.test_create_sibling.logging",
    "datalad.distribution.tests.test_create_sibling.os",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "len",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling._test_target_ssh_inherit.check_dss": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_has_content",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.assert_create_sshwebserver": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "datalad.distribution.tests.test_create_sibling.assert_dict_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_dict_equal"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_no_errors_logged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_no_errors_logged"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_postupdate_hooks": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_create_sibling.os",
    "datalad.tests.utils.ok_",
    "glob.glob",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.assert_publish_with_ui": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_create_sibling.re",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.utils._path_",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.check_exists_interactive": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "Dataset",
    "RuntimeError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testsui",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.check_failon_no_permissions": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_create_sibling.assert_create_sshwebserver",
    "datalad.distribution.tests.test_create_sibling.stat",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_if_root",
    "datalad.tests.utils.with_tempfile",
    "os.chmod",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.check_replace_and_relative_sshpath": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "Dataset",
    "RuntimeError",
    "UnicodeDecodeError",
    "datalad.cmd.Runner",
    "datalad.consts.WEB_META_LOG",
    "datalad.distribution.tests.test_create_sibling.assert_postupdate_hooks",
    "datalad.distribution.tests.test_create_sibling.os",
    "datalad.distribution.tests.test_create_sibling.sys",
    "datalad.ssh_manager.get_connection",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils._path_",
    "glob.glob",
    "interactive_create_sibling",
    "len",
    "os.path.join",
    "ssh"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.check_replace_and_relative_sshpath.interactive_create_sibling": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "datalad.tests.utils.with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.check_target_ssh_recursive": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.api.publish",
    "datalad.distribution.tests.test_create_sibling.assert_create_sshwebserver",
    "datalad.distribution.tests.test_create_sibling.assert_postupdate_hooks",
    "datalad.distribution.tests.test_create_sibling.assert_publish_with_ui",
    "datalad.distribution.tests.test_create_sibling.os",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils._path_",
    "datalad.utils.chpwd",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.check_target_ssh_since": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.distribution.tests.test_create_sibling.assert_create_sshwebserver",
    "datalad.distribution.tests.test_create_sibling.assert_postupdate_hooks",
    "datalad.distribution.tests.test_create_sibling.os",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils._path_",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.chmod": {
  "data": {
   "shadows": "os.chmod"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.create_sibling": {
  "data": {
   "shadows": "datalad.api.create_sibling"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.get_mtimes_and_digests": {
  "data": {
   "shadows": "datalad.tests.utils.get_mtimes_and_digests"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.get_ssh_port": {
  "data": {
   "shadows": "datalad.tests.utils.get_ssh_port"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.lgr": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "datalad.distribution.tests.test_create_sibling.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.ok_endswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_endswith"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.ok_exists": {
  "data": {
   "shadows": "datalad.tests.utils.ok_exists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.ok_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_under_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.publish": {
  "data": {
   "shadows": "datalad.api.publish"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.skip_if_root": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_root"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.test_check_exists_interactive": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_create_sibling.check_exists_interactive",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_failon_no_permissions": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_create_sibling.check_failon_no_permissions",
    "datalad.tests.utils.skip_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_invalid_call": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Dataset",
    "ValueError",
    "datalad.api.create_sibling",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_local_path_target_dir": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.create_sibling",
    "datalad.distribution.tests.test_create_sibling.os",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.chpwd",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_local_relpath": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.create_sibling",
    "datalad.distribution.tests.test_create_sibling.os",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.chpwd",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_non_master_branch": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "get_branch",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_non_master_branch.get_branch": {
  "data": {
   "lineno": 834
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_replace_and_relative_sshpath": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_create_sibling.check_replace_and_relative_sshpath",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_target_ssh_inherit": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_create_sibling._test_target_ssh_inherit",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_target_ssh_recursive": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_create_sibling.check_target_ssh_recursive",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_target_ssh_simple": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.api.create_sibling",
    "datalad.api.install",
    "datalad.api.publish",
    "datalad.distribution.tests.test_create_sibling.assert_create_sshwebserver",
    "datalad.distribution.tests.test_create_sibling.assert_publish_with_ui",
    "datalad.distribution.tests.test_create_sibling.logging",
    "datalad.distribution.tests.test_create_sibling.time",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.is_valid_repo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.network.urlquote",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_equal",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_mtimes_and_digests",
    "datalad.tests.utils.get_ssh_port",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_endswith",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils._path_",
    "datalad.utils.on_windows",
    "dict",
    "interactive_assert_create_sshwebserver",
    "open",
    "os.path.basename",
    "os.path.exists",
    "os.path.join",
    "process_digests_mtimes",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_target_ssh_simple.interactive_assert_create_sshwebserver": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_create_sibling.assert_create_sshwebserver",
    "datalad.tests.utils.with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_target_ssh_simple.process_digests_mtimes": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "bool",
    "datalad.tests.utils.eq_",
    "datalad.utils._path_",
    "len",
    "list",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.test_target_ssh_since": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_create_sibling.check_target_ssh_since",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_sibling.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.urlquote": {
  "data": {
   "shadows": "datalad.support.network.urlquote"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_sibling.with_testsui": {
  "data": {
   "shadows": "datalad.tests.utils.with_testsui"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_create_test_dataset._parse_spec": {
  "data": {
   "shadows": "datalad.distribution.create_test_dataset._parse_spec"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.create_test_dataset": {
  "data": {
   "shadows": "datalad.api.create_test_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.repo_from_path": {
  "data": {
   "shadows": "datalad.core.local.repo.repo_from_path"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.swallow_outputs": {
  "data": {
   "shadows": "datalad.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_create_test_dataset.test_create": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.create",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_test_dataset.test_create_1test_dataset": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "datalad.api.create_test_dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.utils.swallow_outputs",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_test_dataset.test_create_test_dataset": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "datalad.api.create_test_dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.utils.swallow_logs",
    "datalad.utils.swallow_outputs",
    "glob.glob",
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_test_dataset.test_hierarchy": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "datalad.api.create_test_dataset",
    "datalad.core.local.repo.repo_from_path",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.swallow_logs",
    "datalad.utils.swallow_outputs",
    "enumerate",
    "hasattr",
    "int",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_test_dataset.test_new_relpath": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "datalad.api.create_test_dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "datalad.utils.swallow_logs",
    "datalad.utils.swallow_outputs",
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_test_dataset.test_parse_spec": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datalad.distribution.create_test_dataset._parse_spec",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_create_test_dataset.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_dataset.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.NoDatasetFound": {
  "data": {
   "shadows": "datalad.support.exceptions.NoDatasetFound"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.OBSCURE_FILENAME": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_FILENAME"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_is": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_is_instance": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_is_none": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_none"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_is_not": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_not"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_is_not_none": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_not_none"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.check_require_dataset": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.create",
    "datalad.distribution.tests.test_dataset.os",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.abspath",
    "os.path.join",
    "require_dataset"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.dl_cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.get": {
  "data": {
   "shadows": "datalad.api.get"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.test_Dataset_flyweight": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_dataset.os",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "datalad.utils.on_windows",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_EnsureDataset": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Dataset",
    "EnsureDataset",
    "ValueError",
    "c",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_",
    "isinstance",
    "os.path.join",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_dataset_constructor": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "Dataset",
    "TypeError",
    "ValueError",
    "datalad.distribution.tests.test_dataset.os",
    "datalad.support.exceptions.NoDatasetFound",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_dataset_id": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "Dataset",
    "Dataset._unique_instances.clear",
    "datalad.support.annexrepo.AnnexRepo._unique_instances.clear",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_tempfile",
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_hashable": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_hat_dataset_more": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_dataset.os",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_is_installed": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.get",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "datalad.utils.rmtree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_property_reevaluation": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_is",
    "datalad.tests.utils.assert_is_none",
    "datalad.tests.utils.assert_is_not",
    "datalad.tests.utils.assert_is_not_none",
    "datalad.tests.utils.assert_not_equal",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_tempfile",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_repo_cache": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_require_dataset": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_dataset.check_require_dataset",
    "datalad.tests.utils.OBSCURE_FILENAME"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_resolve_path": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_dataset.os",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.Path.cwd",
    "datalad.utils.chpwd",
    "datalad.utils.on_windows",
    "os.path.join",
    "resolve_path",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_resolve_path_symlink_edition": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_dataset.os",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.chpwd",
    "os.path.join",
    "resolve_path",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_subdatasets": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "Dataset",
    "ValueError",
    "datalad.cfg.obtain",
    "datalad.distribution.tests.test_dataset.os",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils._path_",
    "datalad.utils.chpwd",
    "len",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.test_symlinked_dataset_properties": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "Dataset",
    "datalad.distribution.tests.test_dataset.os",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_is",
    "datalad.tests.utils.assert_is_none",
    "datalad.tests.utils.assert_is_not",
    "datalad.tests.utils.assert_is_not_none",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset.ut": {
  "data": {
   "shadows": "datalad.utils"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_api": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_dataset_api.test_datasetmethod_bound": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "AttributeError",
    "Dataset",
    "assert_raises",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset_binding": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_dataset_binding.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_binding.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_binding.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_dataset_binding.test_decorator": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Dataset",
    "TypeError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "func",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset_binding.test_decorator.another": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "datasetmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_dataset_binding.test_decorator.func": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_drop": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_drop.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_drop.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_drop.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_drop.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_drop.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_drop.test_drop_file_need_nocheck": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tree",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_drop.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_get.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.RemoteNotAvailableError": {
  "data": {
   "shadows": "datalad.support.exceptions.RemoteNotAvailableError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get._get_flexible_source_candidates_for_submodule": {
  "data": {
   "shadows": "datalad.distribution.get._get_flexible_source_candidates_for_submodule"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get._make_dataset_hierarchy": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "Dataset",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assert_message": {
  "data": {
   "shadows": "datalad.tests.utils.assert_message"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assert_not_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in_results"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.check_get_subdataset_inherit_reckless": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.curdir": {
  "data": {
   "shadows": "os.curdir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.get": {
  "data": {
   "shadows": "datalad.api.get"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.only_matching_paths": {
  "data": {
   "shadows": "datalad.interface.results.only_matching_paths"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.test_get_autoresolve_recurse_subdatasets": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.get",
    "datalad.api.install",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "f",
    "f.write",
    "len",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_flexible_source_candidates_for_submodule": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.install",
    "datalad.distribution.get._get_flexible_source_candidates_for_submodule",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tempfile",
    "dict",
    "f",
    "str",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_greedy_recurse_subdatasets": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_in_unavailable_subdataset": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.get",
    "datalad.api.install",
    "datalad.distribution.tests.test_get._make_dataset_hierarchy",
    "datalad.interface.results.only_matching_paths",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_install_missing_subdataset": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "all",
    "datalad.api.install",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.curdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_invalid_call": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "Dataset",
    "ValueError",
    "datalad.api.get",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.exceptions.RemoteNotAvailableError",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_message",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "f",
    "f.write",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_mixed_hierarchy": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "f",
    "f.write",
    "open",
    "os.curdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_multiple_files": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "Dataset",
    "all",
    "any",
    "datalad.api.install",
    "datalad.support.network.RI",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "f",
    "f.startswith",
    "os.curdir",
    "os.listdir",
    "os.path.basename",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_recurse_dirs": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "Dataset",
    "all",
    "any",
    "datalad.api.install",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.with_pathsep",
    "f",
    "f.startswith",
    "len",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_recurse_subdatasets": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "len",
    "os.path.basename",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_single_file": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_testrepos",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_get_subdataset_inherit_reckless": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_get.check_get_subdataset_inherit_reckless"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_gh3356": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.get",
    "datalad.api.install",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.test_recurse_existing": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.distribution.tests.test_get._make_dataset_hierarchy",
    "datalad.tests.utils.assert_not_in_results",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.rmtree",
    "len",
    "os.curdir",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_get.with_pathsep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_get.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_install.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.DEFAULT_BRANCH": {
  "data": {
   "shadows": "datalad.tests.utils.DEFAULT_BRANCH"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.PathRI": {
  "data": {
   "shadows": "datalad.support.network.PathRI"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.YieldDatasets": {
  "data": {
   "shadows": "datalad.interface.results.YieldDatasets"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install._test_guess_dot_git": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.cmd.Runner",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.path",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_is_instance": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.check_datasets_datalad_org": {
  "data": {
   "lineno": 890,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.support.path.join",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.get": {
  "data": {
   "shadows": "datalad.api.get"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.get_datasets_topdir": {
  "data": {
   "shadows": "datalad.tests.utils.get_datasets_topdir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.integration": {
  "data": {
   "shadows": "datalad.tests.utils.integration"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.known_failure_appveyor": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_appveyor"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.op": {
  "data": {
   "shadows": "datalad.support.path"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.put_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.put_file_under_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.test_datasets_datalad_org": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_install.check_datasets_datalad_org"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_failed_install": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_failed_install_multiple": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.use_cassette",
    "datalad.tests.utils.usecase",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils._path_",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_guess_dot_git": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_install._test_guess_dot_git"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_implicit_install": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.create",
    "datalad.api.get",
    "datalad.api.install",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "datalad.utils.rmtree",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_consistent_state": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "check_consistent_installation",
    "datalad.api.create",
    "datalad.api.install",
    "datalad.tests.utils.integration",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.put_file_under_git",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_consistent_state.check_consistent_installation": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "len",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_dataladri": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.cmd.Runner",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.path",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "os.path.join",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_dataset_from_instance": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_dataset_from_just_source": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.support.path",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_dataset_from_just_source_via_path": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.support.path",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_datasets_root": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.interface.results.YieldDatasets",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_datasets_topdir",
    "datalad.tests.utils.known_failure_appveyor",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.use_cassette",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "open",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_from_tilda": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.create",
    "datalad.api.install",
    "datalad.distribution.tests.test_install.os",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_into_dataset": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils._path_",
    "os.path.isdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_known_subdataset": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.get",
    "datalad.api.install",
    "datalad.distribution.tests.test_install.os",
    "datalad.support.annexrepo.AnnexRepo.is_valid_repo",
    "datalad.support.path",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_list": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "Dataset",
    "ValueError",
    "datalad.api.install",
    "datalad.support.path",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_noautoget_data": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "Dataset",
    "any",
    "datalad.api.install",
    "datalad.support.path",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_recursive": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "Dataset",
    "any",
    "datalad.api.install",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "len",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_recursive_repeat": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.get",
    "datalad.api.install",
    "datalad.support.path",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_recursive_with_data": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "all_have_content",
    "datalad.api.install",
    "datalad.interface.results.YieldDatasets",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_recursive_with_data.all_have_content": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_simple_local": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.is_valid_repo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.support.path",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_skip_failed_recursive": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.distribution.tests.test_install.logging",
    "datalad.distribution.tests.test_install.os",
    "datalad.support.path",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_skip_list_arguments": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.support.path",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "isinstance",
    "len",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_source_relpath": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.install",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.basename",
    "os.path.dirname"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_subds_from_another_remote": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.create",
    "datalad.api.install",
    "datalad.support.network.PathRI",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.usecase",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "datalad.utils.getpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_install_subds_with_space": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.create",
    "datalad.api.install",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.on_windows",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_insufficient_args": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_invalid_args": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.create",
    "datalad.api.install",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.support.path",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_reckless": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.support.path",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.test_relpath_semantics": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.install",
    "datalad.support.path",
    "datalad.support.path.join",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "super",
    "super.path"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_install.use_cassette": {
  "data": {
   "shadows": "datalad.tests.utils.use_cassette"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.usecase": {
  "data": {
   "shadows": "datalad.tests.utils.usecase"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_install.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_publish.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.DEFAULT_BRANCH": {
  "data": {
   "shadows": "datalad.tests.utils.DEFAULT_BRANCH"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.PathRI": {
  "data": {
   "shadows": "datalad.support.network.PathRI"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_git_annex_branch_published": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.filter_fsck_error_msg": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.known_failure_appveyor": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_appveyor"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.neq_": {
  "data": {
   "shadows": "datalad.tests.utils.neq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.nok_": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.publish": {
  "data": {
   "shadows": "datalad.api.publish"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.test_assert_git_annex_branch_published": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.distribution.tests.test_publish.assert_git_annex_branch_published",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_gh1426": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_not_equal",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_gh1763": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_gh1811": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_invalid_call": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.publish",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_depends": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.join",
    "os.path.lexists",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_fetch_do_not_recurse_submodules": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.publish",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_gh1691": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_no_fetch_refspec_configured": {
  "data": {
   "lineno": 745,
   "symbols_in_volume": [
    "Dataset",
    "datalad.cmd.GitRunner",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_plain_git": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.api.publish",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "list",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_recursive": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.api.publish",
    "datalad.distribution.tests.test_publish.assert_git_annex_branch_published",
    "datalad.distribution.tests.test_publish.logging",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "list",
    "open",
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_simple": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.api.publish",
    "datalad.distribution.tests.test_publish.assert_git_annex_branch_published",
    "datalad.distribution.tests.test_publish.filter_fsck_error_msg",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "list",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_target_url": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils._path_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_publish_with_data": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.api.publish",
    "datalad.distribution.tests.test_publish.assert_git_annex_branch_published",
    "datalad.distribution.tests.test_publish.filter_fsck_error_msg",
    "datalad.distribution.tests.test_publish.glob",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "list",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.test_since_empty_and_unsupported": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.publish",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_publish.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_publish.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_siblings.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.basename": {
  "data": {
   "shadows": "datalad.support.path.basename"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.clone": {
  "data": {
   "shadows": "datalad.api.clone"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.normpath": {
  "data": {
   "shadows": "datalad.support.path.normpath"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.opj": {
  "data": {
   "shadows": "datalad.support.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.relpath": {
  "data": {
   "shadows": "datalad.support.path.relpath"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.siblings": {
  "data": {
   "shadows": "datalad.api.siblings"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.test_arg_missing": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_siblings.test_bf3733": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_siblings.test_here": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_siblings.test_sibling_enable_sameas": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.api.clone",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_sameas_remote",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_siblings.test_sibling_inherit": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.support.path.join",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_siblings.test_sibling_inherit_no_super_remote": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.support.path.join",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_siblings.test_sibling_path_is_posix": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.support.path.join",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_siblings.test_siblings": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.api.siblings",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.path.basename",
    "datalad.support.path.join",
    "datalad.support.path.normpath",
    "datalad.support.path.relpath",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_siblings.with_sameas_remote": {
  "data": {
   "shadows": "datalad.tests.utils.with_sameas_remote"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_siblings.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_uninstall.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.assert_result_values_cond": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_values_cond"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.drop": {
  "data": {
   "shadows": "datalad.api.drop"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.ok_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_under_git"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.psplit": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.remove": {
  "data": {
   "shadows": "datalad.api.remove"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.test_careless_subdataset_uninstall": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_clean_subds_removal": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_drop_nocrash_absent_subds": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.drop",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_failon_nodrop": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_kill": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_result_values_cond",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.exists",
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_no_interaction_with_untracked_content": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_remove_dataset_hierarchy": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.remove",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_remove_file_handle_only": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.remove",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "len",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_remove_more_than_one": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_remove_nowhining": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.install",
    "datalad.api.remove",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils._path_"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_remove_recreation": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_remove_recursive_2": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.api.remove",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.use_cassette",
    "datalad.tests.utils.usecase",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_safetynet": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.uninstall",
    "datalad.distribution.tests.test_uninstall.os",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_annex_file": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "AssertionError",
    "Dataset",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.with_testrepos",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_dataset": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_git_file": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "AssertionError",
    "Dataset",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.with_testrepos",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_invalid": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.uninstall",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "method"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_multiple_paths": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "Dataset",
    "all",
    "any",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tree",
    "glob.glob",
    "os.path.exists",
    "os.path.isdir",
    "os.path.join",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_recursive": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_result_values_cond",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tree",
    "os.path.exists",
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_subdataset": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "all",
    "datalad.api.install",
    "datalad.api.uninstall",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.Path",
    "datalad.utils.chpwd",
    "os.path.exists",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_uninstalled": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Dataset",
    "ValueError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.test_uninstall_without_super": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.create",
    "datalad.api.uninstall",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_uninstall.uninstall": {
  "data": {
   "shadows": "datalad.api.uninstall"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.use_cassette": {
  "data": {
   "shadows": "datalad.tests.utils.use_cassette"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.usecase": {
  "data": {
   "shadows": "datalad.tests.utils.usecase"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_uninstall.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_update.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.DEFAULT_BRANCH": {
  "data": {
   "shadows": "datalad.tests.utils.DEFAULT_BRANCH"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update._adjust": {
  "data": {
   "lineno": 653
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.assert_is_instance": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.check_merge_follow_parentds_subdataset_detached": {
  "data": {
   "lineno": 698,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.distribution.tests.test_update._adjust",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.dl_cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.knows_annex": {
  "data": {
   "shadows": "datalad.utils.knows_annex"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.remove": {
  "data": {
   "shadows": "datalad.api.remove"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.test_merge_conflict": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_merge_conflict_in_subdataset_only": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_merge_ff_only": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_merge_follow_parentds_subdataset_adjusted_warning": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.distribution.tests.test_update._adjust",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_merge_follow_parentds_subdataset_detached": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "datalad.distribution.tests.test_update.check_merge_follow_parentds_subdataset_detached",
    "datalad.tests.utils.slow"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_merge_follow_parentds_subdataset_other_branch": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_merge_no_merge_target": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_multiway_merge": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_newthings_coming_down": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.knows_annex",
    "datalad.utils.rmtree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_reobtain_data": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.distribution.tests.test_update.os",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_update_fetch_all": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "Dataset",
    "datalad.cfg.get",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_update_git_smoke": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_update_simple": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.api.update",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "open",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_update_unborn_master": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.test_update_volatile_subds": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "Dataset",
    "datalad.api.install",
    "datalad.api.remove",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_update.update": {
  "data": {
   "shadows": "datalad.api.update"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_update.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "datalad.distribution.tests.test_utils.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils._get_flexible_source_candidates": {
  "data": {
   "shadows": "datalad.distribution.utils._get_flexible_source_candidates"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.test_get_flexible_source_candidates": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "datalad.distribution.utils._get_flexible_source_candidates",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "f"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_utils.test_get_git_dir": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.distribution.tests.test_utils.os",
    "datalad.support.gitrepo.GitRepo.get_git_dir",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.on_windows",
    "datalad.utils.unlink",
    "f",
    "f.write",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.tests.test_utils.unlink": {
  "data": {
   "shadows": "datalad.utils.unlink"
  },
  "type": "import"
 },
 "datalad.distribution.tests.test_utils.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.uninstall.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.uninstall.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.Subdatasets": {
  "data": {
   "shadows": "datalad.local.subdatasets.Subdatasets"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.Uninstall": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "datalad.distribution.drop.check_argument",
    "datalad.distribution.drop.dataset_argument",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.if_dirty_opt",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.uninstall.Uninstall.__call__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.uninstall._uninstall_dataset",
    "datalad.distribution.uninstall.itertools",
    "datalad.distribution.uninstall.lgr",
    "datalad.interface.utils.eval_results",
    "datalad.interface.utils.handle_dirty_dataset",
    "datalad.local.subdatasets.Subdatasets.__call__",
    "dict",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.uninstall.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.uninstall._drop_files": {
  "data": {
   "shadows": "datalad.distribution.drop._drop_files"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall._uninstall_dataset": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "datalad.distribution.drop._drop_files",
    "datalad.distribution.uninstall.os",
    "datalad.interface.results.get_status_dict",
    "datalad.utils.Path.cwd",
    "datalad.utils.rmtree",
    "os.path.curdir",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.uninstall.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.check_argument": {
  "data": {
   "shadows": "datalad.distribution.drop.check_argument"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.dataset_argument": {
  "data": {
   "shadows": "datalad.distribution.drop.dataset_argument"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.handle_dirty_dataset": {
  "data": {
   "shadows": "datalad.interface.utils.handle_dirty_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.if_dirty_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.if_dirty_opt"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.lgr": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datalad.distribution.uninstall.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.uninstall.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.distribution.update": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.update.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.update.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.distribution.update.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.distribution.update.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.distribution.update.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.distribution.update.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.distribution.update.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.distribution.update.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.distribution.update.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.distribution.update.Update": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureBool",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.update.Update.__call__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.update.YieldDatasetAndRevision",
    "datalad.distribution.update._choose_merge_fn",
    "datalad.distribution.update._choose_merge_target",
    "datalad.distribution.update._reobtain",
    "datalad.distribution.update.itertools",
    "datalad.distribution.update.lgr",
    "datalad.dochelpers.exc_str",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datasetmethod",
    "dict",
    "isinstance",
    "len",
    "merge_fn",
    "set",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.update.YieldDatasetAndRevision": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "datalad.interface.results.YieldDatasets"
   ]
  },
  "type": "class"
 },
 "datalad.distribution.update.YieldDatasetAndRevision.__call__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "datalad.distribution.update.YieldDatasetAndRevision",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.update.YieldDatasets": {
  "data": {
   "shadows": "datalad.interface.results.YieldDatasets"
  },
  "type": "import"
 },
 "datalad.distribution.update.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.distribution.update._annex_plain_merge": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "datalad.distribution.update._plain_merge"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.update._annex_sync": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "datalad.distribution.update._choose_merge_fn": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "RuntimeError",
    "merge_fn"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.update._choose_merge_target": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "datalad.distribution.update._plain_merge": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "datalad.dochelpers.exc_str",
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.update._reobtain": {
  "data": {
   "lineno": 407
  },
  "type": "function"
 },
 "datalad.distribution.update._reobtain.wrapped": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "datalad.distribution.update.lgr",
    "len",
    "merge_fn",
    "os.path.lexists",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.update.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.distribution.update.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.distribution.update.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.distribution.update.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.distribution.update.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "datalad.distribution.update.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.distribution.update.lgr": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datalad.distribution.update.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.update.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.update.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.distribution.update.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.distribution.update.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.distribution.utils": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.utils.logging"
   ]
  },
  "type": "module"
 },
 "datalad.distribution.utils.DataLadRI": {
  "data": {
   "shadows": "datalad.support.network.DataLadRI"
  },
  "type": "import"
 },
 "datalad.distribution.utils.PathRI": {
  "data": {
   "shadows": "datalad.support.network.PathRI"
  },
  "type": "import"
 },
 "datalad.distribution.utils.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.distribution.utils.URL": {
  "data": {
   "shadows": "datalad.support.network.URL"
  },
  "type": "import"
 },
 "datalad.distribution.utils._get_flexible_source_candidates": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datalad.distribution.utils.posixpath",
    "datalad.support.network.PathRI",
    "datalad.support.network.RI",
    "datalad.support.network.URL",
    "isinstance",
    "os.path.isabs",
    "os.path.join",
    "os.path.normpath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.distribution.utils.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.distribution.utils.lgr": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.distribution.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.distribution.utils.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.distribution.utils.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.distribution.utils.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "datalad.dochelpers": {
  "data": {
   "symbols_in_volume": [
    "ValueError",
    "datalad.dochelpers.__in_ipython",
    "datalad.dochelpers.__rst_conventions",
    "datalad.dochelpers.logging",
    "datalad.dochelpers.re"
   ]
  },
  "type": "module"
 },
 "datalad.dochelpers.__add_init2doc": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.dochelpers.__in_ipython": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.dochelpers.__parameters_str_re": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "datalad.dochelpers.__re_params": {
  "data": {
   "lineno": 157
  },
  "type": "constant"
 },
 "datalad.dochelpers.__re_spliter1": {
  "data": {
   "lineno": 158
  },
  "type": "constant"
 },
 "datalad.dochelpers.__re_spliter2": {
  "data": {
   "lineno": 159
  },
  "type": "constant"
 },
 "datalad.dochelpers.__rst_conventions": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "datalad.dochelpers.__rst_mode": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.dochelpers._indent": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "datalad.dochelpers._rst_indentstr"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers._parse_parameters": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "datalad.dochelpers.__re_spliter1",
    "datalad.dochelpers.__re_spliter2",
    "datalad.dochelpers.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers._rst": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "datalad.dochelpers.__rst_mode"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers._rst_indentstr": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datalad.dochelpers._rst_section": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers._rst_sep": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "datalad.dochelpers._rst_underline": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers._split_out_parameters": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "datalad.dochelpers.__parameters_str_re",
    "datalad.dochelpers.handle_docstring",
    "datalad.dochelpers.textwrap",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers.borrowdoc": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "datalad.dochelpers.borrowdoc._borrowdoc": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers.borrowkwargs": {
  "data": {
   "lineno": 241
  },
  "type": "function"
 },
 "datalad.dochelpers.borrowkwargs._borrowkwargs": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "datalad.dochelpers._indent",
    "datalad.dochelpers._parse_parameters",
    "datalad.dochelpers._rst_section",
    "datalad.dochelpers._split_out_parameters",
    "datalad.dochelpers.handle_docstring",
    "getattr",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers.exc_str": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "datalad.dochelpers.os",
    "datalad.dochelpers.sys",
    "datalad.dochelpers.traceback",
    "int",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers.get_docstring_split": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "datalad.dochelpers._parse_parameters",
    "datalad.dochelpers._split_out_parameters",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers.handle_docstring": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "datalad.dochelpers.textwrap",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers.lgr": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "datalad.dochelpers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.dochelpers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.dochelpers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.dochelpers.single_or_plural": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.dochelpers.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.dochelpers.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "datalad.dochelpers.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "datalad.downloaders": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.downloaders.base": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "datalad.downloaders.base.Authenticator": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.base.Authenticator.authenticate": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.base.BaseDownloader.__init__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "InterProcessLock",
    "ValueError",
    "id",
    "os.path.join",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._download": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "DownloadError",
    "Exception",
    "datalad.downloaders.base.lgr",
    "datalad.downloaders.base.os",
    "datalad.downloaders.base.time",
    "exc_str",
    "int",
    "locals",
    "min",
    "open",
    "os.path.dirname",
    "os.path.exists",
    "os.path.isdir",
    "os.path.join",
    "unlink"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._enter_credentials": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "DownloadError"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._fetch": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "DownloadError",
    "Exception",
    "bytes",
    "datalad.downloaders.base.lgr",
    "datalad.downloaders.base.msgpack",
    "dict",
    "ensure_unicode",
    "exc_str",
    "isinstance",
    "len",
    "locals",
    "min"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._get_status": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "NotImplementedError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._get_target_url": {
  "data": {
   "lineno": 697
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._get_temp_download_filename": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._handle_authentication": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "DownloadError",
    "datalad.downloaders.base.lgr",
    "exc_str"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._setup_new_provider": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader._verify_download": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "hasattr",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.access": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.downloaders.base.lgr",
    "datalad.downloaders.base.sys",
    "exc_str",
    "isinstance",
    "method",
    "try_lock"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.cache": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "datalad.downloaders.base.atexit",
    "datalad.downloaders.base.dbm",
    "datalad.downloaders.base.lgr",
    "datalad.downloaders.base.os",
    "os.path.exists",
    "os.path.join",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.download": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "datalad.downloaders.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.fetch": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "datalad.downloaders.base.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.get_downloader_session": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.get_status": {
  "data": {
   "lineno": 633
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.get_status_from_headers": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.BaseDownloader.get_target_url": {
  "data": {
   "lineno": 683
  },
  "type": "function"
 },
 "datalad.downloaders.base.DownloaderSession": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.base.DownloaderSession.__init__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "datalad.downloaders.base.DownloaderSession.download": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.base.NoneAuthenticator": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "datalad.downloaders.base.Authenticator"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.base.NotImplementedAuthenticator": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "datalad.downloaders.base.Authenticator"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.base.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.downloaders.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "datalad.downloaders.base.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "datalad.downloaders.base.dbm": {
  "data": {
   "shadows": "dbm"
  },
  "type": "import"
 },
 "datalad.downloaders.base.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.downloaders.base.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.downloaders.base.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.downloaders.base.lgr": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.downloaders.base.msgpack": {
  "data": {
   "shadows": "msgpack"
  },
  "type": "import"
 },
 "datalad.downloaders.base.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.downloaders.base.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.downloaders.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.downloaders.base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.downloaders.base.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.downloaders.credentials": {
  "data": {
   "symbols_in_volume": [
    "datalad.downloaders.credentials.AWS_S3",
    "datalad.downloaders.credentials.LORIS_Token",
    "datalad.downloaders.credentials.NDA_S3",
    "datalad.downloaders.credentials.Token",
    "datalad.downloaders.credentials.UserPassword",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.credentials.AWS_S3": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.downloaders.credentials.Credential"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.credentials.AWS_S3.is_expired": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "datalad.downloaders.credentials.lgr",
    "datalad.downloaders.credentials.time",
    "iso8601_to_epoch",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.CREDENTIAL_TYPES": {
  "data": {
   "lineno": 367
  },
  "type": "constant"
 },
 "datalad.downloaders.credentials.CompositeCredential": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "datalad.downloaders.credentials.Credential"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.credentials.CompositeCredential.__call__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "adapter",
    "c",
    "len",
    "self",
    "self._CREDENTIAL_ADAPTERS",
    "self._credentials",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.CompositeCredential._prepare": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "C",
    "datalad.downloaders.credentials.CompositeCredential",
    "datalad.downloaders.credentials.Credential",
    "enumerate",
    "issubclass",
    "len",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.CompositeCredential.enter_new": {
  "data": {
   "lineno": 266
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.CompositeCredential.is_expired": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "any",
    "property",
    "self._credentials"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.CompositeCredential.refresh": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "RuntimeError",
    "self",
    "self.is_expired"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.credentials.Credential.__call__": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential.__init__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential._ask_and_set": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential._ask_field_value": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential._is_field_optional": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential._prepare": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential.delete": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential.enter_new": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential.get": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential.is_known": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Exception",
    "all",
    "datalad.downloaders.credentials.lgr",
    "exc_str",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.Credential.set": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.LORISTokenGenerator": {
  "data": {
   "shadows": "datalad.support.third.loris_token_generator.LORISTokenGenerator"
  },
  "type": "import"
 },
 "datalad.downloaders.credentials.LORIS_Token": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "datalad.downloaders.credentials.CompositeCredential",
    "datalad.downloaders.credentials.Token",
    "datalad.downloaders.credentials.UserPassword",
    "datalad.downloaders.credentials._loris_adapter"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.credentials.LORIS_Token.__init__": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "datalad.downloaders.credentials.CompositeCredential",
    "self",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.NDATokenGenerator": {
  "data": {
   "shadows": "datalad.support.third.nda_aws_token_generator.NDATokenGenerator"
  },
  "type": "import"
 },
 "datalad.downloaders.credentials.NDA_S3": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "datalad.downloaders.credentials.AWS_S3",
    "datalad.downloaders.credentials.CompositeCredential",
    "datalad.downloaders.credentials.UserPassword",
    "datalad.downloaders.credentials._nda_adapter"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.credentials.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.downloaders.credentials.Token": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.downloaders.credentials.Credential"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.credentials.UserPassword": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.downloaders.credentials.Credential"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.credentials.__dev_doc__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datalad.downloaders.credentials._loris_adapter": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "datalad.support.third.loris_token_generator.LORISTokenGenerator",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials._nda_adapter": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "AccessDeniedError",
    "Exception",
    "datalad.downloaders.credentials.lgr",
    "datalad.support.third.nda_aws_token_generator.NDATokenGenerator",
    "dict",
    "exc_str",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.credentials.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.downloaders.credentials.keyring_": {
  "data": {
   "shadows": "keyring"
  },
  "type": "import"
 },
 "datalad.downloaders.credentials.lgr": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datalad.downloaders.credentials.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.downloaders.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.downloaders.http": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "LoggerHelper",
    "datalad.downloaders.http.lgr",
    "datalad.downloaders.http.requests_ftp",
    "datalad.downloaders.http.requests_log",
    "exc_str",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.http.HTMLFormAuthenticator": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPBaseAuthenticator"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTMLFormAuthenticator.__init__": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "assure_dict_from_str",
    "datalad.downloaders.http.HTMLFormAuthenticator",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTMLFormAuthenticator._post_credential": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "datalad.downloaders.http.lgr",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPAuthAuthenticator": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPRequestsAuthenticator",
    "datalad.downloaders.http.requests"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTTPAuthAuthenticator._post_credential": {
  "data": {
   "lineno": 333
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPBaseAuthenticator": {
  "data": {
   "lineno": 124
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTTPBaseAuthenticator.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "assure_list_from_str",
    "datalad.downloaders.http.HTTPBaseAuthenticator",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPBaseAuthenticator._post_credential": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPBaseAuthenticator.authenticate": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "AccessDeniedError",
    "DownloadError",
    "credential",
    "datalad.downloaders.http.check_response_status",
    "datalad.downloaders.http.lgr",
    "datalad.downloaders.http.re",
    "datalad.downloaders.http.requests"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPBaseAuthenticator.check_for_auth_failure": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "AccessDeniedError",
    "bytes",
    "datalad.downloaders.http.re",
    "ensure_bytes",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPBasicAuthAuthenticator": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPRequestsAuthenticator",
    "datalad.downloaders.http.requests"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTTPBearerTokenAuthenticator": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPRequestsAuthenticator"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTTPBearerTokenAuthenticator.__init__": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPBearerTokenAuthenticator",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPBearerTokenAuthenticator._post_credential": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPDigestAuthAuthenticator": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPRequestsAuthenticator",
    "datalad.downloaders.http.requests"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTTPDownloader": {
  "data": {
   "lineno": 445
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTTPDownloader.__init__": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "borrowkwargs",
    "datalad.downloaders.http.HTTPDownloader",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPDownloader._establish_session": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "datalad.downloaders.http.lgr",
    "datalad.downloaders.http.requests",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPDownloader.get_downloader_session": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "AccessFailedError",
    "Exception",
    "datalad.downloaders.http.HTTPDownloaderSession",
    "datalad.downloaders.http._FTP_SUPPORT",
    "datalad.downloaders.http.check_response_status",
    "datalad.downloaders.http.lgr",
    "exc_str",
    "get_url_filename",
    "int",
    "range",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPDownloader.get_status_from_headers": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "FileStatus",
    "KeyError",
    "classmethod",
    "get_response_disposition_filename",
    "int",
    "str",
    "t"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPDownloaderSession": {
  "data": {
   "lineno": 366
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTTPDownloaderSession.__init__": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPDownloaderSession",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPDownloaderSession.download": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "Exception",
    "_stream",
    "datalad.downloaders.http.io",
    "datalad.downloaders.http.lgr",
    "exc_str",
    "hasattr",
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPDownloaderSession.download._stream": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "datalad.downloaders.http.io"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPRequestsAuthenticator": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPBaseAuthenticator"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.http.HTTPRequestsAuthenticator.__init__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "datalad.downloaders.http.HTTPRequestsAuthenticator",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.HTTPRequestsAuthenticator._post_credential": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "datalad.downloaders.http._FTP_SUPPORT": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "datalad.downloaders.http.__docformat__": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "datalad.downloaders.http.check_response_status": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "AccessDeniedError",
    "AccessFailedError",
    "DownloadError",
    "UnhandledRedirectError",
    "datalad.downloaders.http.lgr",
    "datalad.downloaders.http.process_www_authenticate",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.http.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.downloaders.http.http.client": {
  "data": {
   "shadows": "http.client"
  },
  "type": "import"
 },
 "datalad.downloaders.http.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "datalad.downloaders.http.lgr": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "datalad.downloaders.http.process_www_authenticate": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "datalad.downloaders.http.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.downloaders.http.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "datalad.downloaders.http.requests.auth": {
  "data": {
   "shadows": "requests.auth"
  },
  "type": "import"
 },
 "datalad.downloaders.http.requests_ftp": {
  "data": {
   "shadows": "requests_ftp"
  },
  "type": "import"
 },
 "datalad.downloaders.http.requests_log": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "datalad.downloaders.http.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "datalad.downloaders.lgr": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datalad.downloaders.providers": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.providers.AUTHENTICATION_TYPES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "datalad.downloaders.providers.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.Provider": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.providers.Provider.__init__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "assure_list_from_str"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Provider._get_downloader_class": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "classmethod",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Provider.downloader": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Provider.get_downloader": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "Downloader"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Provider.get_scheme_from_url": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "staticmethod",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.providers.Providers.__getitem__": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.__init__": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.__iter__": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.__len__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.__repr__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers._get_configs": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "classmethod",
    "dir",
    "glob.glob",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers._get_providers_dirs": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "classmethod",
    "collections.OrderedDict",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers._process_credential": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "ValueError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers._process_provider": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "ValueError",
    "assure_list_from_str",
    "classmethod",
    "datalad.downloaders.providers.AUTHENTICATION_TYPES",
    "datalad.downloaders.providers.Provider",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.download": {
  "data": {
   "lineno": 477
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.enter_new": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "AttributeError",
    "RI",
    "datalad.downloaders.providers.AUTHENTICATION_TYPES",
    "datalad.downloaders.providers.os",
    "datalad.downloaders.providers.re",
    "datalad.ui.ui.error",
    "datalad.ui.ui.question",
    "datalad.ui.ui.yesno",
    "getattr",
    "locals",
    "open",
    "os.path.join",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.fetch": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.from_config_files": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "SafeConfigParserWithIncludes",
    "ValueError",
    "classmethod",
    "collections.OrderedDict",
    "datalad.downloaders.providers.Providers",
    "datalad.downloaders.providers.lgr",
    "get_dataset_root",
    "getattr",
    "len",
    "list",
    "locals",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.get_provider": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "datalad.downloaders.providers.Provider",
    "datalad.downloaders.providers.lgr",
    "datalad.downloaders.providers.re",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.get_status": {
  "data": {
   "lineno": 483
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.needs_authentication": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.reload": {
  "data": {
   "lineno": 315
  },
  "type": "function"
 },
 "datalad.downloaders.providers.Providers.reset_default_providers": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.providers.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.lgr": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "datalad.downloaders.providers.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.pathjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.downloaders.providers.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "datalad.downloaders.s3": {
  "data": {
   "symbols_in_volume": [
    "datalad.downloaders.s3.logging",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.s3.S3Authenticator": {
  "data": {
   "lineno": 56
  },
  "type": "class"
 },
 "datalad.downloaders.s3.S3Authenticator.__init__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "datalad.downloaders.s3.S3Authenticator",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Authenticator.authenticate": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "OrdinaryCallingFormat",
    "RuntimeError",
    "credential",
    "datalad.downloaders.s3.boto_lgr",
    "datalad.downloaders.s3.lgr",
    "datalad.downloaders.s3.logging",
    "get_bucket"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "datalad.downloaders.s3.S3Authenticator"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.s3.S3Downloader.__init__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "borrowkwargs",
    "datalad.downloaders.s3.S3Downloader",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader._check_credential": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "AccessPermissionExpiredError"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader._establish_session": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "datalad.downloaders.s3.lgr",
    "try_multiple_dec_s3"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader._get_key": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "Exception",
    "datalad.downloaders.s3.lgr",
    "exc_str"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader._get_key_via_get": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader._parse_url": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "assure_dict_from_str",
    "classmethod",
    "datalad.downloaders.s3.lgr",
    "datalad.downloaders.s3.re",
    "urllib.parse.unquote",
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader.bucket": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader.get_downloader_session": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "NotImplementedError",
    "TargetFileAbsent",
    "datalad.downloaders.s3.S3DownloaderSession",
    "get_url_straight_filename",
    "rfc2822_to_epoch",
    "set",
    "try_multiple_dec_s3"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader.get_key_headers": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "classmethod",
    "rfc2822_to_epoch"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader.get_key_status": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader.get_status_from_headers": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "FileStatus",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3Downloader.reset": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3DownloaderSession": {
  "data": {
   "lineno": 125
  },
  "type": "class"
 },
 "datalad.downloaders.s3.S3DownloaderSession.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "datalad.downloaders.s3.S3DownloaderSession",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3DownloaderSession.download": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.s3.S3DownloaderSession.download.pbar_callback": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "datalad.downloaders.s3.__docformat__": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.downloaders.s3.boto_lgr": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "datalad.downloaders.s3.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.downloaders.s3.lgr": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datalad.downloaders.s3.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.downloaders.s3.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.downloaders.s3.urlsplit": {
  "data": {
   "shadows": "urllib.parse.urlsplit"
  },
  "type": "import"
 },
 "datalad.downloaders.s3.urlunquote": {
  "data": {
   "shadows": "urllib.parse.unquote"
  },
  "type": "import"
 },
 "datalad.downloaders.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.downloaders.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "datalad.downloaders.tests.test_base.test_docstring": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_credentials": {
  "data": {},
  "type": "module"
 },
 "datalad.downloaders.tests.test_credentials.Keyring": {
  "data": {
   "shadows": "datalad.support.keyring_.Keyring"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.MemoryKeyring": {
  "data": {
   "shadows": "datalad.support.keyring_.MemoryKeyring"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials._CCred1": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "UserPassword",
    "datalad.downloaders.tests.test_credentials._cred1_adapter"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.tests.test_credentials._cred1_adapter": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_credentials.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_credentials.test_composite_credential1": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "cred",
    "cred.enter_new",
    "cred.get",
    "datalad.downloaders.tests.test_credentials._CCred1",
    "datalad.support.keyring_.MemoryKeyring",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_credentials.test_cred1_call": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "UserPassword",
    "cred",
    "datalad.support.keyring_.MemoryKeyring",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_credentials.test_cred1_enter_new": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "KeyError",
    "UserPassword",
    "ValueError",
    "datalad.support.keyring_.MemoryKeyring",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_testsui",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_credentials.test_credentials_from_env": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "AWS_S3",
    "cred",
    "cred.get",
    "cred.is_known",
    "datalad.support.keyring_.Keyring",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_true",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_credentials.test_keyring": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_credentials.with_testsui": {
  "data": {
   "shadows": "datalad.tests.utils.with_testsui"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_providers": {
  "data": {},
  "type": "module"
 },
 "datalad.downloaders.tests.test_providers.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_providers.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_providers.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_providers.test_Providers_OnStockConfiguration": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "assert_equal",
    "assert_greater",
    "assert_in",
    "len",
    "range",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_Providers_default_ones": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Providers",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_Providers_from_config__files": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Providers.from_config_files",
    "assert_equal",
    "chpwd",
    "unittest.mock.patch.multiple",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_Providers_process_credential": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "Providers._process_credential",
    "ValueError",
    "assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_get_downloader_class": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "RuntimeError",
    "assert_in",
    "assert_raises",
    "str",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_providers_badre": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "Providers.from_config_files",
    "assert_in",
    "datalad.downloaders.tests.test_providers.logging",
    "os.path.join",
    "swallow_logs",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_providers_enter_new": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "Providers.from_config_files",
    "already_exists",
    "assert_false",
    "auth_types",
    "create_tree",
    "known_provider",
    "no_save",
    "nonmatching_url",
    "ok_exists",
    "os.path.exists",
    "os.path.join",
    "save",
    "unittest.mock.patch.multiple",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_providers_enter_new.already_exists": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_providers_enter_new.auth_types": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_providers_enter_new.known_provider": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_providers_enter_new.no_save": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_providers_enter_new.nonmatching_url": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_providers_enter_new.save": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_providers.test_providers_multiple_matches": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "Providers.from_config_files",
    "assert_equal",
    "os.path.join",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "SkipTest",
    "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1",
    "exc_str",
    "skip_if_no_network"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.tests.test_s3.AWS_S3": {
  "data": {
   "shadows": "datalad.downloaders.credentials.AWS_S3"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3.CompositeCredential": {
  "data": {
   "shadows": "datalad.downloaders.credentials.CompositeCredential"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3.MemoryKeyring": {
  "data": {
   "shadows": "datalad.support.keyring_.MemoryKeyring"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3.STSConnection": {
  "data": {
   "shadows": "boto.sts.connection.STSConnection"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3.UserPassword": {
  "data": {
   "shadows": "datalad.downloaders.credentials.UserPassword"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3._test_expiring_token": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "CustomS3",
    "datalad.downloaders.tests.test_s3.os",
    "datalad.support.keyring_.MemoryKeyring",
    "datalad.tests.utils.ok_file_has_content",
    "get_test_providers",
    "len",
    "print",
    "range",
    "time.sleep",
    "time.time",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3._test_expiring_token.CustomS3": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "datalad.downloaders.credentials.AWS_S3",
    "datalad.downloaders.credentials.CompositeCredential",
    "datalad.downloaders.credentials.UserPassword"
   ]
  },
  "type": "class"
 },
 "datalad.downloaders.tests.test_s3._test_expiring_token._gen_session_token": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "boto.sts.connection.STSConnection",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.boto": {
  "data": {
   "shadows": "boto"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3.check_get_key": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "assert_equal",
    "f",
    "get_test_providers",
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3.op": {
  "data": {
   "shadows": "path"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3.test_boto_host_specification": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "SkipTest",
    "assert_equal",
    "datalad.downloaders.tests.test_s3.url_dandi1",
    "md5sum",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.test_deny_access": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "S3Authenticator",
    "S3Downloader",
    "assert_raises",
    "unittest.mock.patch.object",
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.test_deny_access.deny_access": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.test_download_multiple_NDA": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "get_test_providers",
    "use_cassette",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.test_get_key": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "datalad.downloaders.tests.test_s3.check_get_key",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.test_mtime": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "assert_equal",
    "assert_raises",
    "datalad.downloaders.tests.test_s3.os",
    "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1_ver2",
    "get_test_providers",
    "swallow_outputs",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.test_parse_url": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "assert_equal",
    "f"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.test_restricted_bucket_on_NDA": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "get_test_providers"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.test_reuse_session": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "assert_equal",
    "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1_ver1",
    "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1_ver2",
    "get_test_providers",
    "swallow_outputs",
    "unittest.mock.patch.object",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.test_s3_download_basic": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datalad.downloaders.tests.test_s3.url_1version_bucketwithdot",
    "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1",
    "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1_ver1",
    "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1_ver2",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.downloaders.tests.test_s3.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.test_s3.url_1version_bucketwithdot": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1_ver1": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "datalad.downloaders.tests.test_s3.url_2versions_nonversioned1_ver2": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datalad.downloaders.tests.test_s3.url_dandi1": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "datalad.downloaders.tests.utils": {
  "data": {
   "symbols_in_volume": [
    "datalad.downloaders.tests.utils.get_test_providers"
   ]
  },
  "type": "module"
 },
 "datalad.downloaders.tests.utils.Providers": {
  "data": {
   "shadows": "datalad.downloaders.providers.Providers"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.utils.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "datalad.downloaders.tests.utils.get_test_providers": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "datalad.downloaders.providers.Providers.from_config_files",
    "unittest.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.dtcompat": {
  "data": {
   "shadows": "nose.ext.dtcompat"
  },
  "type": "import"
 },
 "datalad.ev": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.get_encoding_info": {
  "data": {
   "shadows": "datalad.utils.get_encoding_info"
  },
  "type": "import"
 },
 "datalad.get_envvars_info": {
  "data": {
   "shadows": "datalad.utils.get_envvars_info"
  },
  "type": "import"
 },
 "datalad.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.interface": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface._deprecated_commands": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "datalad.interface._group_dataset": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datalad.interface._group_metadata": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.interface._group_misc": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "datalad.interface._group_plumbing": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "datalad.interface._known_extension_commands": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "datalad.interface.add_archive_content": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.add_archive_content._KEY_OPT"
   ]
  },
  "type": "module"
 },
 "datalad.interface.add_archive_content.AddArchiveContent": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "EnsureNone",
    "EnsureStr",
    "Parameter",
    "datalad.interface.add_archive_content._KEY_OPT",
    "datalad.interface.add_archive_content._KEY_OPT_NOTE",
    "datalad.interface.base.build_doc",
    "dict",
    "int"
   ]
  },
  "type": "class"
 },
 "datalad.interface.add_archive_content.AddArchiveContent.__call__": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ActivityStats",
    "NotImplementedError",
    "Path",
    "RuntimeError",
    "StopIteration",
    "ValueError",
    "any",
    "apply_replacement_rules",
    "assure_tuple_or_list",
    "datalad.customremotes.archives.ArchiveAnnexCustomRemote",
    "datalad.customremotes.base.init_datalad_remote",
    "datalad.interface.add_archive_content.lgr",
    "datalad.interface.add_archive_content.os",
    "datalad.interface.add_archive_content.re",
    "datalad.interface.add_archive_content.tempfile",
    "datalad.support.exceptions.FileNotInRepositoryError",
    "file_basename",
    "get_dataset_root",
    "get_repo_instance",
    "getpwd",
    "isinstance",
    "len",
    "locals",
    "md5sum",
    "os.path.basename",
    "os.path.commonprefix",
    "os.path.curdir",
    "os.path.dirname",
    "os.path.exists",
    "os.path.isabs",
    "os.path.islink",
    "os.path.join",
    "os.path.lexists",
    "os.path.normpath",
    "os.path.relpath",
    "os.path.sep",
    "rmtree",
    "split_cmdline",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.add_archive_content.ArchiveAnnexCustomRemote": {
  "data": {
   "shadows": "datalad.customremotes.archives.ArchiveAnnexCustomRemote"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.FileNotInRepositoryError": {
  "data": {
   "shadows": "datalad.support.exceptions.FileNotInRepositoryError"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content._KEY_OPT": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "datalad.interface.add_archive_content._KEY_OPT_NOTE": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "datalad.interface.add_archive_content.__docformat__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datalad.interface.add_archive_content.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.commonprefix": {
  "data": {
   "shadows": "os.path.commonprefix"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.init_datalad_remote": {
  "data": {
   "shadows": "datalad.customremotes.base.init_datalad_remote"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.islink": {
  "data": {
   "shadows": "os.path.islink"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.lgr": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "datalad.interface.add_archive_content.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.opsep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.add_archive_content.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.annotate_paths.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.annotate_paths.AnnotatePaths": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.annotate_paths.known_props",
    "datalad.interface.annotate_paths.textwrap",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureBool",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict",
    "sorted"
   ]
  },
  "type": "class"
 },
 "datalad.interface.annotate_paths.AnnotatePaths.__call__": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.interface.annotate_paths._resolve_path",
    "datalad.interface.annotate_paths.get_modified_subpaths",
    "datalad.interface.annotate_paths.lgr",
    "datalad.interface.annotate_paths.rawpath2ap",
    "datalad.interface.annotate_paths.yield_recursive",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.utils.assure_list",
    "datalad.utils.get_dataset_root",
    "datalad.utils.path_startswith",
    "datalad.utils.with_pathsep",
    "dict",
    "isinstance",
    "iter",
    "itertools.chain",
    "os.curdir",
    "os.path.dirname",
    "os.path.isdir",
    "os.path.islink",
    "os.path.join",
    "os.path.lexists",
    "os.path.normpath",
    "os.path.pardir",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.annotate_paths.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.Diff": {
  "data": {
   "shadows": "datalad.interface.diff.Diff"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.PRE_INIT_COMMIT_SHA": {
  "data": {
   "shadows": "datalad.consts.PRE_INIT_COMMIT_SHA"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.interface.annotate_paths._resolve_path": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.utils.dlabspath",
    "datalad.utils.expandpath",
    "datalad.utils.getpwd",
    "datalad.utils.is_explicit_path",
    "isinstance",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.annotate_paths._with_sep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.annotated2content_by_ds": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.utils.path_startswith",
    "os.curdir",
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "datalad.interface.annotate_paths.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.curdir": {
  "data": {
   "shadows": "os.curdir"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.dirsep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.dlabspath": {
  "data": {
   "shadows": "datalad.utils.dlabspath"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.expandpath": {
  "data": {
   "shadows": "datalad.utils.expandpath"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.get_modified_subpaths": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "datalad.consts.PRE_INIT_COMMIT_SHA",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.annotate_paths.rawpath2ap",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.diff.Diff.__call__",
    "datalad.utils.path_is_subpath",
    "datalad.utils.with_pathsep",
    "dict",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.annotate_paths.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.is_explicit_path": {
  "data": {
   "shadows": "datalad.utils.is_explicit_path"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.islink": {
  "data": {
   "shadows": "os.path.islink"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.known_props": {
  "data": {
   "lineno": 330
  },
  "type": "constant"
 },
 "datalad.interface.annotate_paths.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.lgr": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "datalad.interface.annotate_paths.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.path_is_subpath": {
  "data": {
   "shadows": "datalad.utils.path_is_subpath"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.path_startswith": {
  "data": {
   "shadows": "datalad.utils.path_startswith"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.rawpath2ap": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "datalad.interface.annotate_paths._resolve_path",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.interface.annotate_paths.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "datalad.interface.annotate_paths.yield_recursive": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "datalad.interface.common_opts.recursion_limit",
    "datalad.utils.path_is_subpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.base.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.base.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.base.DefaultOutputFormatter": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "datalad.interface.base.string"
   ]
  },
  "type": "class"
 },
 "datalad.interface.base.DefaultOutputFormatter.__init__": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "datalad.interface.base.DefaultOutputFormatter",
    "datalad.interface.base.nagen",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.DefaultOutputFormatter._d": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "datalad.interface.base.DefaultOutputFormatter.get_value": {
  "data": {
   "lineno": 598
  },
  "type": "function"
 },
 "datalad.interface.base.DefaultOutputRenderer": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.interface.base.DefaultOutputRenderer.__call__": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "datalad.interface.base.nadict",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.DefaultOutputRenderer.__init__": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "datalad.interface.base.DefaultOutputFormatter",
    "format"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.DefaultOutputRenderer._dict_to_nadict": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "classmethod",
    "datalad.interface.base.nadict",
    "dict",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.interface.base.EnsureKeyChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureKeyChoice"
  },
  "type": "import"
 },
 "datalad.interface.base.Interface": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.interface.base.Interface._get_result_filter": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "classmethod",
    "datalad.cfg",
    "datalad.cfg.obtain",
    "datalad.support.constraints.EnsureKeyChoice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.Interface.call_from_parser": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "classmethod",
    "datalad.interface.base.DefaultOutputRenderer",
    "datalad.interface.base.Interface",
    "datalad.interface.base.inspect",
    "datalad.interface.base.is_api_arg",
    "datalad.interface.base.sys",
    "datalad.utils.getargspec",
    "dir",
    "exc_str",
    "getattr",
    "hasattr",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.Interface.get_refds_path": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "classmethod",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.resolve_path",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.Interface.setup_parser": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "classmethod",
    "datalad.interface.base.alter_interface_docs_for_cmdline",
    "datalad.interface.base.is_api_arg",
    "datalad.support.constraints.EnsureChoice",
    "datalad.utils.getargspec",
    "enumerate",
    "help",
    "help.rstrip",
    "isinstance",
    "len",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.NA_STRING": {
  "data": {
   "lineno": 544
  },
  "type": "constant"
 },
 "datalad.interface.base.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.interface.base.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.base._get_plugins": {
  "data": {
   "shadows": "datalad.plugin._get_plugins"
  },
  "type": "import"
 },
 "datalad.interface.base._interfaces": {
  "data": {
   "shadows": "interface"
  },
  "type": "import"
 },
 "datalad.interface.base._load_plugin": {
  "data": {
   "shadows": "datalad.plugin._load_plugin"
  },
  "type": "import"
 },
 "datalad.interface.base.alter_interface_docs_for_api": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "datalad.interface.base.dedent_docstring",
    "datalad.interface.base.os",
    "datalad.interface.base.re",
    "datalad.interface.base.textwrap"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.alter_interface_docs_for_cmdline": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "datalad.interface.base.dedent_docstring",
    "datalad.interface.base.re",
    "datalad.interface.base.textwrap"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.build_doc": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "datalad.interface.base.alter_interface_docs_for_api",
    "datalad.interface.base.lgr",
    "datalad.interface.base.update_docstring_with_examples",
    "datalad.interface.base.update_docstring_with_parameters",
    "datalad.interface.common_opts.eval_defaults.items",
    "datalad.interface.common_opts.eval_params",
    "dict",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.build_example": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "ValueError",
    "datalad.interface.base.dedent_docstring",
    "datalad.interface.base.textwrap"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.interface.base.dedent_docstring": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "datalad.interface.base.textwrap",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.default_logchannels": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "datalad.interface.base.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "datalad.interface.base.eval_defaults": {
  "data": {
   "shadows": "datalad.interface.common_opts.eval_defaults"
  },
  "type": "import"
 },
 "datalad.interface.base.eval_params": {
  "data": {
   "shadows": "datalad.interface.common_opts.eval_params"
  },
  "type": "import"
 },
 "datalad.interface.base.get_allargs_as_kwargs": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.utils.getargspec",
    "len",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.get_api_name": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.get_cmd_doc": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.get_cmd_ex": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "datalad.interface.base.build_example"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.get_cmd_summaries": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "datalad.interface.base.textwrap",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.get_cmdline_command_name": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.get_interface_groups": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "datalad.plugin._get_plugins",
    "getattr",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.getargspec": {
  "data": {
   "shadows": "datalad.utils.getargspec"
  },
  "type": "import"
 },
 "datalad.interface.base.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "datalad.interface.base.indent": {
  "data": {
   "shadows": "textwrap.indent"
  },
  "type": "import"
 },
 "datalad.interface.base.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.interface.base.is_api_arg": {
  "data": {
   "lineno": 338
  },
  "type": "function"
 },
 "datalad.interface.base.lgr": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datalad.interface.base.load_interface": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "Exception",
    "datalad.interface.base.lgr",
    "datalad.plugin._load_plugin",
    "dict",
    "exc_str",
    "getattr",
    "importlib.import_module",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.base.nadict": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "collections.defaultdict",
    "datalad.interface.base.nagen"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.nagen": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.interface.base.nagen.__getattr__": {
  "data": {
   "lineno": 569
  },
  "type": "function"
 },
 "datalad.interface.base.nagen.__getitem__": {
  "data": {
   "lineno": 566
  },
  "type": "function"
 },
 "datalad.interface.base.nagen.__init__": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "datalad.interface.base.NA_STRING"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.nagen.__repr__": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "datalad.interface.base.NA_STRING",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.nagen.__str__": {
  "data": {
   "lineno": 563
  },
  "type": "function"
 },
 "datalad.interface.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.interface.base.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.interface.base.resolve_path": {
  "data": {
   "shadows": "datalad.distribution.dataset.resolve_path"
  },
  "type": "import"
 },
 "datalad.interface.base.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "datalad.interface.base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.interface.base.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "datalad.interface.base.update_docstring_with_examples": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "datalad.interface.base.build_example",
    "len",
    "textwrap.indent"
   ]
  },
  "type": "function"
 },
 "datalad.interface.base.update_docstring_with_parameters": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "ValueError",
    "datalad.interface.base.alter_interface_docs_for_api",
    "datalad.interface.base.is_api_arg",
    "datalad.utils.getargspec",
    "enumerate",
    "len",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.interface.clean": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.interface.clean.Clean": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Parameter",
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureNone",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.clean.Clean.__call__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.clean.itertools",
    "datalad.interface.clean.lgr",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.support.gitrepo.GitRepo.get_git_dir",
    "dict",
    "glob.glob",
    "int",
    "len",
    "os.path.join",
    "rmtree",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.clean.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.clean.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.clean.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.interface.clean.__docformat__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "datalad.interface.clean.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.clean.datalad.distribution.subdatasets": {
  "data": {
   "shadows": "datalad.distribution.subdatasets"
  },
  "type": "import"
 },
 "datalad.interface.clean.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.clean.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.interface.clean.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.interface.clean.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.interface.clean.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.interface.clean.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "datalad.interface.clean.lgr": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "datalad.interface.clean.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.clean.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.interface.clean.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.interface.clean.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg": {
  "data": {
   "symbols_in_volume": [
    "appdirs.AppDirs",
    "bool",
    "datalad.interface.common_cfg.dirs",
    "datalad.support.constraints.EnsureBool",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureInt",
    "datalad.support.constraints.EnsureStr",
    "datalad.utils.on_windows",
    "os.environ.get",
    "os.path.expanduser",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "datalad.interface.common_cfg.AppDirs": {
  "data": {
   "shadows": "appdirs.AppDirs"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.EnsureInt": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureInt"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.EnsureListOf": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureListOf"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.common_cfg.definitions": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "datalad.interface.common_cfg.dirs": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.interface.common_cfg.environ": {
  "data": {
   "shadows": "os.environ"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.interface.common_cfg.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.common_opts": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.results.known_result_xfms.keys",
    "datalad.support.constraints.EnsureCallable",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureInt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.constraints.EnsureStrPrefix",
    "datalad.support.param.Parameter",
    "dict",
    "list"
   ]
  },
  "type": "module"
 },
 "datalad.interface.common_opts.EnsureCallable": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureCallable"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.EnsureInt": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureInt"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.EnsureStrPrefix": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStrPrefix"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.allow_dirty": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_add_opts": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_copy_opts": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_get_opts": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_group_opt": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_groupwanted_opt": {
  "data": {
   "lineno": 230
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_init_opts": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_opts": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_required_opt": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.annex_wanted_opt": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.as_common_datasrc": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.eval_defaults": {
  "data": {
   "lineno": 340
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.eval_params": {
  "data": {
   "lineno": 300
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.git_clone_opts": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.git_opts": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.if_dirty_opt": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.inherit_opt": {
  "data": {
   "lineno": 240
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.jobs_opt": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.known_result_xfms": {
  "data": {
   "shadows": "datalad.interface.results.known_result_xfms"
  },
  "type": "import"
 },
 "datalad.interface.common_opts.location_description": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.merge_native_opt": {
  "data": {
   "lineno": 268
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.message_file_opt": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.missing_sibling_opt": {
  "data": {
   "lineno": 246
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.nosave_opt": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.publish_by_default": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.publish_depends": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.reckless_opt": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.recursion_flag": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.recursion_limit": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.reporton_opt": {
  "data": {
   "lineno": 285
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.save_message_opt": {
  "data": {
   "lineno": 120
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.shared_access_opt": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.super_datasets_flag": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.verbose": {
  "data": {
   "lineno": 172
  },
  "type": "constant"
 },
 "datalad.interface.common_opts.with_plugin_opt": {
  "data": {
   "lineno": 255
  },
  "type": "constant"
 },
 "datalad.interface.diff": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.diff.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.diff.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.interface.diff.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.interface.diff.Diff": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.diff.Diff.__call__": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "datalad.consts.PRE_INIT_COMMIT_SHA",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.annotate_paths.annotated2content_by_ds",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.diff._get_untracked_content",
    "datalad.interface.diff._parse_git_diff",
    "datalad.interface.diff.lgr",
    "datalad.interface.utils.eval_results",
    "dict",
    "os.path.curdir",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.diff.Diff.custom_result_renderer": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "datalad.ui.ui.message",
    "len",
    "max",
    "os.path.relpath",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.diff.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.interface.diff.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.diff.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.diff.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.diff.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.interface.diff.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.interface.diff.PRE_INIT_COMMIT_SHA": {
  "data": {
   "shadows": "datalad.consts.PRE_INIT_COMMIT_SHA"
  },
  "type": "import"
 },
 "datalad.interface.diff.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.diff.__docformat__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datalad.interface.diff._get_untracked_content": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "any",
    "datalad.cmd.GitRunner",
    "datalad.support.exceptions.CommandError",
    "datalad.utils.assure_unicode",
    "datalad.utils.path_startswith",
    "dict",
    "len",
    "os.path.isdir",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.diff._parse_git_diff": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "datalad.cmd.GitRunner",
    "datalad.interface.diff._translate_status",
    "datalad.interface.diff._translate_type",
    "datalad.support.exceptions.CommandError",
    "dict",
    "int",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.diff._translate_status": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "datalad.interface.diff.state_map",
    "float",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.diff._translate_type": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "datalad.interface.diff.stat"
   ]
  },
  "type": "function"
 },
 "datalad.interface.diff._with_sep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.interface.diff.annotated2content_by_ds": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.annotated2content_by_ds"
  },
  "type": "import"
 },
 "datalad.interface.diff.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.interface.diff.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.diff.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.interface.diff.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.diff.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.interface.diff.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.interface.diff.lgr": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datalad.interface.diff.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.diff.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.interface.diff.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.diff.path_startswith": {
  "data": {
   "shadows": "datalad.utils.path_startswith"
  },
  "type": "import"
 },
 "datalad.interface.diff.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.interface.diff.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.interface.diff.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.diff.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "datalad.interface.diff.state_map": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datalad.interface.diff.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.interface.download_url": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.interface.download_url.DownloadURL": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "EnsureDataset",
    "EnsureNone",
    "EnsureStr",
    "Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.download_url.DownloadURL.__call__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Exception",
    "Path",
    "PurePosixPath",
    "Save",
    "assure_list_from_str",
    "datalad.api.add_archive_content",
    "datalad.interface.download_url.lgr",
    "datalad.support.network.URL",
    "datasetmethod",
    "dict",
    "exc_str",
    "get_status_dict",
    "isinstance",
    "len",
    "list",
    "os.path.curdir",
    "os.path.isdir",
    "os.path.sep",
    "path_under_rev_dataset",
    "require_dataset",
    "resolve_path",
    "staticmethod",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.interface.download_url.URL": {
  "data": {
   "shadows": "datalad.support.network.URL"
  },
  "type": "import"
 },
 "datalad.interface.download_url.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.interface.download_url.add_archive_content": {
  "data": {
   "shadows": "datalad.api.add_archive_content"
  },
  "type": "import"
 },
 "datalad.interface.download_url.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.interface.download_url.lgr": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "datalad.interface.download_url.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.interface.ls": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.interface.ls.AbsentRepoModel": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.interface.ls.AbsentRepoModel.__init__": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "datalad.interface.ls.AbsentRepoModel.type": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.AnnexModel": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "datalad.interface.ls.GitModel"
   ]
  },
  "type": "class"
 },
 "datalad.interface.ls.AnnexModel.__init__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "datalad.interface.ls.AnnexModel",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.AnnexModel.annex_local_size": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.AnnexModel.annex_worktree_size": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.AnnexModel.info": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.interface.ls.FsModel": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "datalad.interface.ls.AnnexModel"
   ]
  },
  "type": "class"
 },
 "datalad.interface.ls.FsModel.__init__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "Path",
    "datalad.interface.ls.FsModel",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.FsModel.date": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.FsModel.path": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.FsModel.size": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "isinstance",
    "os.lstat",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.FsModel.symlink": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.FsModel.type_": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "os.path.exists",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.islink",
    "os.path.join",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.interface.ls.GitModel.__init__": {
  "data": {
   "lineno": 209
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.branch": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.clean": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.count_objects": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.date": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.describe": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.git_local_size": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.path": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "datalad.interface.ls.GitModel.type": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.GitRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.interface.ls.HTTPError": {
  "data": {
   "shadows": "urllib.error.HTTPError"
  },
  "type": "import"
 },
 "datalad.interface.ls.Key": {
  "data": {
   "shadows": "boto.s3.key.Key"
  },
  "type": "import"
 },
 "datalad.interface.ls.Ls": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "EnsureNone",
    "EnsureStr",
    "Parameter",
    "datalad.interface.base.build_doc",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.ls.Ls.__call__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "Dataset",
    "KeyError",
    "datalad.interface.ls.Ls",
    "datalad.interface.ls._ls_dataset",
    "datalad.interface.ls._ls_s3",
    "datalad.interface.ls_webui._ls_json",
    "dict",
    "isinstance",
    "len",
    "list",
    "os.path.isdir",
    "os.path.lexists",
    "os.path.relpath",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.LsFormatter": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "datalad.interface.ls.string"
   ]
  },
  "type": "class"
 },
 "datalad.interface.ls.LsFormatter.__init__": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "datalad.interface.ls.LsFormatter",
    "datalad.interface.ls.lgr",
    "datalad.interface.ls.sys",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.LsFormatter.convert_field": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "datalad.interface.ls.LsFormatter",
    "datalad.interface.ls.humanize",
    "datalad.interface.ls.time",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.LsFormatter.format_field": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "datalad.interface.ls.LsFormatter",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.OrdinaryCallingFormat": {
  "data": {
   "shadows": "boto.s3.connection.OrdinaryCallingFormat"
  },
  "type": "import"
 },
 "datalad.interface.ls.Prefix": {
  "data": {
   "shadows": "boto.s3.prefix.Prefix"
  },
  "type": "import"
 },
 "datalad.interface.ls.Providers": {
  "data": {
   "shadows": "datalad.downloaders.providers.Providers"
  },
  "type": "import"
 },
 "datalad.interface.ls.Request": {
  "data": {
   "shadows": "urllib.request.Request"
  },
  "type": "import"
 },
 "datalad.interface.ls.S3ResponseError": {
  "data": {
   "shadows": "boto.exception.S3ResponseError"
  },
  "type": "import"
 },
 "datalad.interface.ls.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.interface.ls._ls_dataset": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "Dataset",
    "RuntimeError",
    "datalad.interface.ls.AbsentRepoModel",
    "datalad.interface.ls.AnnexModel",
    "datalad.interface.ls.GitModel",
    "datalad.interface.ls.LsFormatter",
    "datalad.interface.ls.format_ds_model",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.GitRepo",
    "datalad.utils.is_interactive",
    "isinstance",
    "len",
    "max",
    "os.path.abspath",
    "os.path.curdir",
    "os.path.isabs",
    "os.path.join",
    "os.path.relpath",
    "safe_print",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls._ls_json": {
  "data": {
   "shadows": "datalad.interface.ls_webui._ls_json"
  },
  "type": "import"
 },
 "datalad.interface.ls._ls_s3": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "SafeConfigParser",
    "ValueError",
    "acc",
    "boto.exception.S3ResponseError",
    "boto.s3.connection.OrdinaryCallingFormat",
    "boto.s3.key.Key",
    "boto.s3.prefix.Prefix",
    "datalad.downloaders.providers.Providers.from_config_files",
    "datalad.interface.ls.boto",
    "datalad.interface.ls.lgr",
    "dict",
    "exc_str",
    "get_key_url",
    "getattr",
    "hashlib.md5",
    "imeth",
    "isinstance",
    "len",
    "list",
    "locals",
    "max",
    "repr",
    "str",
    "type",
    "urllib.error.HTTPError",
    "urllib.request.Request",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.interface.ls.boto": {
  "data": {
   "shadows": "boto"
  },
  "type": "import"
 },
 "datalad.interface.ls.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.ls.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.interface.ls.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.interface.ls.format_ds_model": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "Exception",
    "exc_str",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.interface.ls.humanize": {
  "data": {
   "shadows": "humanize"
  },
  "type": "import"
 },
 "datalad.interface.ls.is_interactive": {
  "data": {
   "shadows": "datalad.utils.is_interactive"
  },
  "type": "import"
 },
 "datalad.interface.ls.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.interface.ls.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.interface.ls.isfile": {
  "data": {
   "shadows": "os.path.isfile"
  },
  "type": "import"
 },
 "datalad.interface.ls.islink": {
  "data": {
   "shadows": "os.path.islink"
  },
  "type": "import"
 },
 "datalad.interface.ls.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.interface.ls.lgr": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "datalad.interface.ls.lstat": {
  "data": {
   "shadows": "os.lstat"
  },
  "type": "import"
 },
 "datalad.interface.ls.md5": {
  "data": {
   "shadows": "hashlib.md5"
  },
  "type": "import"
 },
 "datalad.interface.ls.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.ls.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.ls.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "datalad.interface.ls.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.interface.ls.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.interface.ls.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.ls_webui.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.FsModel": {
  "data": {
   "shadows": "datalad.interface.ls.FsModel"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.GitModel": {
  "data": {
   "shadows": "datalad.interface.ls.GitModel"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.OLDMETADATA_DIR": {
  "data": {
   "shadows": "datalad.consts.OLDMETADATA_DIR"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.OLDMETADATA_FILENAME": {
  "data": {
   "shadows": "datalad.consts.OLDMETADATA_FILENAME"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.UNKNOWN_SIZE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "datalad.interface.ls_webui.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.interface.ls_webui._ls_json": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.ls_webui.ds_traverse"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui._traverse_handle_subds": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.ls.lgr.info",
    "datalad.interface.ls.lgr.warning",
    "datalad.interface.ls_webui.ds_traverse",
    "datalad.interface.ls_webui.metadata_locator",
    "genericpath.exists",
    "handle_not_installed",
    "json",
    "json.load",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui._traverse_handle_subds.handle_not_installed": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "datalad.interface.ls.lgr.warning",
    "datalad.interface.ls_webui.fs_extract"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.ds_traverse": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "datalad.interface.ls.GitModel",
    "datalad.interface.ls.lgr.info",
    "datalad.interface.ls_webui.fs_extract",
    "datalad.interface.ls_webui.fs_render",
    "datalad.interface.ls_webui.fs_traverse",
    "datalad.interface.ls_webui.time",
    "genericpath.exists",
    "genericpath.getmtime",
    "json",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.exists": {
  "data": {
   "shadows": "genericpath.exists"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.fs_extract": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "all",
    "datalad.consts.OLDMETADATA_DIR",
    "datalad.consts.OLDMETADATA_FILENAME",
    "datalad.interface.ls.FsModel",
    "datalad.interface.ls_webui.UNKNOWN_SIZE",
    "datalad.interface.ls_webui.humanize",
    "datalad.interface.ls_webui.leaf_name",
    "datalad.interface.ls_webui.numbers",
    "datalad.interface.ls_webui.time",
    "genericpath.exists",
    "isinstance",
    "json.load",
    "open",
    "os.path.join",
    "os.path.relpath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.fs_render": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "datalad.interface.ls_webui.metadata_locator",
    "datalad.utils.safe_print",
    "genericpath.exists",
    "json",
    "json.dump",
    "json.dumps",
    "open",
    "os.makedirs",
    "os.path.dirname",
    "os.remove"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.fs_traverse": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.ls.lgr.info",
    "datalad.interface.ls_webui._traverse_handle_subds",
    "datalad.interface.ls_webui.fs_extract",
    "datalad.interface.ls_webui.fs_render",
    "datalad.interface.ls_webui.humanize",
    "datalad.interface.ls_webui.ignored",
    "datalad.interface.ls_webui.machinesize",
    "datalad.interface.ls_webui.metadata_locator",
    "datalad.support.network.is_datalad_compat_ri",
    "datalad.utils.Path",
    "datalad.utils.with_pathsep",
    "genericpath.exists",
    "genericpath.isdir",
    "json",
    "json.load",
    "len",
    "open",
    "os.listdir",
    "os.path.join",
    "os.path.relpath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.getmtime": {
  "data": {
   "shadows": "genericpath.getmtime"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.humanize": {
  "data": {
   "shadows": "humanize"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.ignored": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "datalad.interface.ls_webui.leaf_name",
    "genericpath.isdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.is_datalad_compat_ri": {
  "data": {
   "shadows": "datalad.support.network.is_datalad_compat_ri"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.isdir": {
  "data": {
   "shadows": "genericpath.isdir"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.js": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.leaf_name": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.lgr": {
  "data": {
   "shadows": "datalad.interface.ls.lgr"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.machinesize": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "AttributeError",
    "datalad.interface.ls_webui.UNKNOWN_SIZE",
    "float"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.metadata_locator": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "datalad.interface.ls_webui.hashlib",
    "datalad.utils.Path",
    "os.path.isabs",
    "os.path.join",
    "os.path.relpath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.ls_webui.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.safe_print": {
  "data": {
   "shadows": "datalad.utils.safe_print"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.interface.ls_webui.with_pathsep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.interface.rerun": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.rerun.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.rerun.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.rerun.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.rerun.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.rerun.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.interface.rerun.PRE_INIT_COMMIT_SHA": {
  "data": {
   "shadows": "datalad.consts.PRE_INIT_COMMIT_SHA"
  },
  "type": "import"
 },
 "datalad.interface.rerun.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.rerun.Rerun": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.rerun.Rerun.__call__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.rerun._get_script_handler",
    "datalad.interface.rerun._rerun_as_results",
    "datalad.interface.rerun.lgr",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "functools.partial",
    "handler",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.interface.rerun._format_cmd_shorty": {
  "data": {
   "shadows": "datalad.core.local.run._format_cmd_shorty"
  },
  "type": "import"
 },
 "datalad.interface.rerun._get_rerun_log_msg": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun._get_script_handler": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "datalad.interface.rerun.sys",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun._get_script_handler.fn": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "datalad.core.local.run._format_cmd_shorty",
    "datalad.core.local.run.format_command",
    "datalad.interface.rerun.sys",
    "datalad.interface.results.get_status_dict",
    "dict",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun._mark_nonrun_result": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun._report": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun._rerun": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "datalad.core.local.run.run_command",
    "datalad.interface.rerun._get_rerun_log_msg",
    "datalad.interface.rerun._mark_nonrun_result",
    "datalad.interface.rerun.lgr",
    "datalad.interface.rerun.new_or_modified",
    "len",
    "os.path.join",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun._rerun_as_results": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "datalad.dochelpers.exc_str",
    "datalad.interface.rerun._revrange_as_results",
    "datalad.interface.rerun.diff_revision",
    "datalad.interface.results.get_status_dict",
    "itertools.dropwhile",
    "len",
    "list",
    "skip_or_pick"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun._rerun_as_results.skip_or_pick": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "datalad.interface.rerun._revrange_as_results": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "datalad.dochelpers.exc_str",
    "datalad.interface.rerun.get_run_info",
    "datalad.interface.rerun.lgr",
    "datalad.interface.results.get_status_dict",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.rerun.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.rerun.diff_revision": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "datalad.consts.PRE_INIT_COMMIT_SHA"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun.diff_revision.changed": {
  "data": {
   "lineno": 660
  },
  "type": "function"
 },
 "datalad.interface.rerun.dropwhile": {
  "data": {
   "shadows": "itertools.dropwhile"
  },
  "type": "import"
 },
 "datalad.interface.rerun.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.interface.rerun.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.interface.rerun.format_command": {
  "data": {
   "shadows": "datalad.core.local.run.format_command"
  },
  "type": "import"
 },
 "datalad.interface.rerun.get_run_info": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "datalad.dochelpers.exc_str",
    "datalad.interface.rerun.json",
    "datalad.interface.rerun.re",
    "datalad.support.json_py.load_stream",
    "dict",
    "isinstance",
    "list",
    "next",
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.interface.rerun.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.interface.rerun.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.interface.rerun.lgr": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.interface.rerun.load_stream": {
  "data": {
   "shadows": "datalad.support.json_py.load_stream"
  },
  "type": "import"
 },
 "datalad.interface.rerun.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.rerun.new_or_modified": {
  "data": {
   "lineno": 671
  },
  "type": "function"
 },
 "datalad.interface.rerun.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.interface.rerun.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "datalad.interface.rerun.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.interface.rerun.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.interface.rerun.run_command": {
  "data": {
   "shadows": "datalad.core.local.run.run_command"
  },
  "type": "import"
 },
 "datalad.interface.rerun.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.interface.results": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.results.YieldDatasets",
    "datalad.interface.results.YieldField",
    "datalad.interface.results.YieldRelativePaths",
    "datalad.interface.results.lgr",
    "datalad.interface.results.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.results.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.results.PurePosixPath": {
  "data": {
   "shadows": "datalad.utils.PurePosixPath"
  },
  "type": "import"
 },
 "datalad.interface.results.ResultXFM": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.interface.results.ResultXFM.__call__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.YieldDatasets": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "datalad.interface.results.ResultXFM"
   ]
  },
  "type": "class"
 },
 "datalad.interface.results.YieldDatasets.__call__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.results.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.YieldDatasets.__init__": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "datalad.interface.results.YieldField": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "datalad.interface.results.ResultXFM"
   ]
  },
  "type": "class"
 },
 "datalad.interface.results.YieldField.__call__": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "datalad.interface.results.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.YieldField.__init__": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "datalad.interface.results.YieldRelativePaths": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "datalad.interface.results.ResultXFM"
   ]
  },
  "type": "class"
 },
 "datalad.interface.results.YieldRelativePaths.__call__": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.results.annexjson2result": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "datalad.interface.results.get_status_dict",
    "datalad.interface.results.lgr",
    "datalad.interface.results.translate_annex_notes",
    "datalad.utils.PurePosixPath",
    "isinstance",
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.interface.results.count_results": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "all",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.interface.results.get_status_dict": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "datalad.dochelpers.exc_str",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.is_ok_dataset": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "datalad.interface.results.is_result_matching_pathsource_argument": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "any",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.results.YieldRelativePaths",
    "datalad.support.path.robust_abspath",
    "datalad.utils.assure_list",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.interface.results.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.interface.results.known_result_xfms": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "datalad.interface.results.lgr": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "datalad.interface.results.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.results.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.interface.results.only_matching_paths": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "datalad.utils.assure_list"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.results.path_is_subpath": {
  "data": {
   "shadows": "datalad.utils.path_is_subpath"
  },
  "type": "import"
 },
 "datalad.interface.results.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.results.results_from_annex_noinfo": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "any",
    "datalad.interface.results.get_status_dict",
    "datalad.utils.path_is_subpath",
    "dict",
    "os.path.isabs",
    "os.path.isdir",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.results_from_paths": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "datalad.interface.results.get_status_dict",
    "datalad.utils.assure_list",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.interface.results.robust_abspath": {
  "data": {
   "shadows": "datalad.support.path.robust_abspath"
  },
  "type": "import"
 },
 "datalad.interface.results.success_status_map": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "datalad.interface.results.translate_annex_notes": {
  "data": {
   "lineno": 195
  },
  "type": "constant"
 },
 "datalad.interface.run": {
  "data": {
   "symbols_in_volume": [
    "DeprecationWarning",
    "datalad.interface.run.warnings"
   ]
  },
  "type": "module"
 },
 "datalad.interface.run.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.run._execute_command": {
  "data": {
   "shadows": "datalad.core.local.run._execute_command"
  },
  "type": "import"
 },
 "datalad.interface.run._format_cmd_shorty": {
  "data": {
   "shadows": "datalad.core.local.run._format_cmd_shorty"
  },
  "type": "import"
 },
 "datalad.interface.run._install_and_reglob": {
  "data": {
   "shadows": "datalad.core.local.run._install_and_reglob"
  },
  "type": "import"
 },
 "datalad.interface.run._unlock_or_remove": {
  "data": {
   "shadows": "datalad.core.local.run._unlock_or_remove"
  },
  "type": "import"
 },
 "datalad.interface.run.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.run_procedure.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.run_procedure.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.ENOENT": {
  "data": {
   "shadows": "errno.ENOENT"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.NoDatasetFound": {
  "data": {
   "shadows": "datalad.support.exceptions.NoDatasetFound"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.REMAINDER": {
  "data": {
   "shadows": "argparse.REMAINDER"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.Run": {
  "data": {
   "shadows": "datalad.core.local.run.Run"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.RunProcedure": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "argparse.REMAINDER",
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.run_procedure.RunProcedure.__call__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "StopIteration",
    "ValueError",
    "datalad.core.local.run.Run.__call__",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.run_procedure._get_procedure_implementation",
    "datalad.interface.run_procedure._guess_exec",
    "datalad.interface.run_procedure.lgr",
    "datalad.interface.utils.eval_results",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.exceptions.NoDatasetFound",
    "datalad.utils.guard_for_format",
    "datalad.utils.quote_cmdlinearg",
    "datalad.utils.split_cmdline",
    "isinstance",
    "list",
    "next",
    "set",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.interface.run_procedure.RunProcedure.custom_result_renderer": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "datalad.interface.run_procedure.os",
    "datalad.interface.utils.default_result_renderer",
    "datalad.support.ansi_colors.BOLD",
    "datalad.support.ansi_colors.color_word",
    "datalad.ui.ui.message",
    "isinstance",
    "os.path.relpath",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.interface.run_procedure.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.interface.run_procedure._get_file_match": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "datalad.interface.run_procedure.lgr",
    "dir",
    "glob.iglob",
    "os.path.basename",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.run_procedure._get_proc_config": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "datalad.cfg",
    "isinstance",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.interface.run_procedure._get_procedure_implementation": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "datalad.cfg.obtain",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.run_procedure._get_file_match",
    "datalad.interface.run_procedure._get_proc_config",
    "datalad.utils.assure_list",
    "dir",
    "isinstance",
    "os.path.join",
    "pkg_resources.iter_entry_points",
    "pkg_resources.resource_filename",
    "pkg_resources.resource_isdir"
   ]
  },
  "type": "function"
 },
 "datalad.interface.run_procedure._guess_exec": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "OSError",
    "datalad.interface.run_procedure.os",
    "datalad.interface.run_procedure.stat",
    "datalad.interface.run_procedure.sys",
    "datalad.utils.quote_cmdlinearg",
    "errno.ENOENT",
    "os.path.islink"
   ]
  },
  "type": "function"
 },
 "datalad.interface.run_procedure.ac": {
  "data": {
   "shadows": "datalad.support.ansi_colors"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.default_result_renderer": {
  "data": {
   "shadows": "datalad.interface.utils.default_result_renderer"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.guard_for_format": {
  "data": {
   "shadows": "datalad.utils.guard_for_format"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.iglob": {
  "data": {
   "shadows": "glob.iglob"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.iter_entry_points": {
  "data": {
   "shadows": "pkg_resources.iter_entry_points"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.lgr": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datalad.interface.run_procedure.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.quote_cmdlinearg": {
  "data": {
   "shadows": "datalad.utils.quote_cmdlinearg"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.resource_filename": {
  "data": {
   "shadows": "pkg_resources.resource_filename"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.resource_isdir": {
  "data": {
   "shadows": "pkg_resources.resource_isdir"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.split_cmdline": {
  "data": {
   "shadows": "datalad.utils.split_cmdline"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.interface.run_procedure.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.interface.test": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.test.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.test.Test": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Parameter",
    "datalad.interface.base.build_doc",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.test.Test.__call__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "datalad.interface.test.datalad",
    "datalad.interface.test.lgr",
    "datalad.utils.assure_list",
    "pkg_resources.iter_entry_points",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.test.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.interface.test.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.interface.test.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.test.datalad": {
  "data": {
   "shadows": "datalad"
  },
  "type": "import"
 },
 "datalad.interface.test.iter_entry_points": {
  "data": {
   "shadows": "pkg_resources.iter_entry_points"
  },
  "type": "import"
 },
 "datalad.interface.test.lgr": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.interface.test.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_add_archive_content": {
  "data": {
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "module"
 },
 "datalad.interface.tests.test_add_archive_content.ARCHIVES_SPECIAL_REMOTE": {
  "data": {
   "shadows": "datalad.consts.ARCHIVES_SPECIAL_REMOTE"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.DATALAD_SPECIAL_REMOTES_UUIDS": {
  "data": {
   "shadows": "datalad.consts.DATALAD_SPECIAL_REMOTES_UUIDS"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.FileNotInRepositoryError": {
  "data": {
   "shadows": "datalad.support.exceptions.FileNotInRepositoryError"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions": {
  "data": {
   "lineno": 414
  },
  "type": "class"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.assert_no_trash_left_behind": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_equal",
    "datalad.utils.find_files",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.setup": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tree",
    "datalad.utils.getpwd"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.teardown": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_equal",
    "datalad.utils.getpwd",
    "datalad.utils.rmtemp"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.test_add_archive_leading_dir": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "datalad.api.add_archive_content",
    "datalad.interface.tests.test_add_archive_content.os",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_file_under_git",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.test_add_delete": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "datalad.api.add_archive_content",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.known_failure_windows",
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.test_add_delete_after_and_drop": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "Exception",
    "datalad.api.add_archive_content",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.swallow_logs",
    "datalad.utils.find_files",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.test_add_delete_after_and_drop_subdir": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "datalad.api.add_archive_content",
    "datalad.interface.tests.test_add_archive_content.os",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_windows",
    "datalad.utils.chpwd",
    "len",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.TestAddArchiveOptions.test_override_existing_under_git": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "datalad.api.add_archive_content",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_file_under_git"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_add_archive_content.add_archive_content": {
  "data": {
   "shadows": "datalad.api.add_archive_content"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.assert_cwd_unchanged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_cwd_unchanged"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.assert_result_values_cond": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_values_cond"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.clean": {
  "data": {
   "shadows": "datalad.api.clean"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.find_files": {
  "data": {
   "shadows": "datalad.utils.find_files"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.integration": {
  "data": {
   "shadows": "datalad.tests.utils.integration"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.ok_archives_caches": {
  "data": {
   "shadows": "datalad.tests.utils.ok_archives_caches"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.ok_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_under_git"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.rmtemp": {
  "data": {
   "shadows": "datalad.utils.rmtemp"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.test_add_archive_content": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "all",
    "d1_basic_checks",
    "d2_basic_checks",
    "datalad.api.add_archive_content",
    "datalad.api.clean",
    "datalad.interface.tests.test_add_archive_content.tree1args",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.FileNotInRepositoryError",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_values_cond",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_archives_caches",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "datalad.utils.getpwd",
    "glob.glob",
    "map",
    "os.path.basename",
    "os.path.exists",
    "os.path.join",
    "os.path.pardir",
    "os.unlink",
    "range",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.test_add_archive_content.d1_basic_checks": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_archives_caches",
    "datalad.tests.utils.ok_file_under_git",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.test_add_archive_content.d2_basic_checks": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_archives_caches",
    "datalad.tests.utils.ok_file_under_git",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.test_add_archive_content_absolute_path": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "datalad.api.add_archive_content",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.FileNotInRepositoryError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.test_add_archive_content_strip_leading": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "datalad.api.add_archive_content",
    "datalad.interface.tests.test_add_archive_content.tree1args",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.integration",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_archives_caches",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.test_add_archive_content_zip": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "datalad.api.add_archive_content",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.ok_archives_caches",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.test_add_archive_dirs": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "datalad.api.add_archive_content",
    "datalad.consts.ARCHIVES_SPECIAL_REMOTE",
    "datalad.consts.DATALAD_SPECIAL_REMOTES_UUIDS",
    "datalad.interface.tests.test_add_archive_content.treeargs",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "datalad.utils.find_files",
    "os.path.exists",
    "os.path.join",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.test_add_archive_use_archive_dir": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.api.add_archive_content",
    "datalad.interface.tests.test_add_archive_content.tree4uargs",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_re_in",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_archives_caches",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "datalad.utils.on_windows",
    "os.path.exists",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_add_archive_content.tree1args": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_add_archive_content.tree4uargs": {
  "data": {
   "lineno": 170
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_add_archive_content.treeargs": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_add_archive_content.unlink": {
  "data": {
   "shadows": "os.unlink"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_add_archive_content.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest",
    "datalad.utils.on_windows"
   ]
  },
  "type": "module"
 },
 "datalad.interface.tests.test_annotate_paths.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.__docformat__": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_annotate_paths._resolve_path": {
  "data": {
   "shadows": "datalad.interface.annotate_paths._resolve_path"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.annotate_paths": {
  "data": {
   "shadows": "datalad.api.annotate_paths"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.assert_cwd_unchanged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_cwd_unchanged"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.demo_hierarchy": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_annotate_paths.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.get_modified_subpaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.get_modified_subpaths"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.make_demo_hierarchy_datasets": {
  "data": {
   "shadows": "datalad.interface.tests.test_utils.make_demo_hierarchy_datasets"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.test_annotate_paths": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "copy.deepcopy",
    "datalad.api.annotate_paths",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.tests.test_annotate_paths.demo_hierarchy",
    "datalad.interface.tests.test_annotate_paths.logging",
    "datalad.interface.tests.test_utils.make_demo_hierarchy_datasets",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "len",
    "os.path.basename",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_annotate_paths.test_get_modified_subpaths": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.annotate_paths.get_modified_subpaths",
    "datalad.interface.tests.test_annotate_paths.demo_hierarchy",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tree",
    "dict",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_annotate_paths.test_invalid_call": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.annotate_paths",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_annotate_paths.test_recurseinto": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.tests.test_annotate_paths.demo_hierarchy",
    "datalad.interface.tests.test_utils.make_demo_hierarchy_datasets",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "os.path.join",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_annotate_paths.test_resolve_path": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.annotate_paths._resolve_path",
    "datalad.interface.tests.test_annotate_paths.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.getpwd",
    "os.path.abspath",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_annotate_paths.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_annotate_paths.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_base.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_base.Namespace": {
  "data": {
   "shadows": "argparse.Namespace"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_base.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_base.Status": {
  "data": {
   "shadows": "datalad.core.local.status.Status"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_base._args": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "argparse.Namespace",
    "datalad.utils.updated",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_base._new_args": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "datalad.interface.tests.test_base._args",
    "datalad.utils.updated",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_base.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_base.swallow_outputs": {
  "data": {
   "shadows": "datalad.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_base.test_call_from_parser_default_args": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "datalad.interface.tests.test_base._new_args",
    "eq_",
    "tuple",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_base.test_call_from_parser_default_args.DummyOne": {
  "data": {
   "lineno": 82
  },
  "type": "class"
 },
 "datalad.interface.tests.test_base.test_call_from_parser_default_args.DummyOne.__call__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "eq_",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_base.test_call_from_parser_old_style": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "datalad.interface.tests.test_base._args",
    "eq_",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_base.test_call_from_parser_old_style.DummyOne": {
  "data": {
   "lineno": 58
  },
  "type": "class"
 },
 "datalad.interface.tests.test_base.test_call_from_parser_old_style.DummyOne.__call__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "eq_",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_base.test_call_from_parser_old_style_generator": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "datalad.interface.tests.test_base._args",
    "eq_",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_base.test_call_from_parser_old_style_generator.DummyOne": {
  "data": {
   "lineno": 70
  },
  "type": "class"
 },
 "datalad.interface.tests.test_base.test_call_from_parser_old_style_generator.DummyOne.__call__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "eq_",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_base.test_call_from_parser_result_filter": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "assert_in",
    "assert_not_in",
    "datalad.interface.tests.test_base._new_args",
    "tuple",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_base.test_call_from_parser_result_filter.DummyOne": {
  "data": {
   "lineno": 103
  },
  "type": "class"
 },
 "datalad.interface.tests.test_base.test_call_from_parser_result_filter.DummyOne.__call__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_base.test_get_result_filter_arg_vs_config": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "datalad.interface.tests.test_base._new_args",
    "eq_",
    "f",
    "patch_config",
    "print",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_base.test_nadict": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "eq_",
    "nadict",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_base.test_nagen": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "eq_",
    "nagen",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_base.test_status_custom_summary_no_repeats": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.cmd.Runner",
    "datalad.core.local.status.Status",
    "eq_",
    "hasattr",
    "len",
    "ok_",
    "set",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_base.updated": {
  "data": {
   "shadows": "datalad.utils.updated"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_clean": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_clean.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_clean.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_clean.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_clean.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_clean.test_clean": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "AnnexRepo",
    "Dataset",
    "assert_equal",
    "assert_status",
    "chpwd",
    "clean",
    "open",
    "os.makedirs",
    "os.path.join",
    "swallow_outputs",
    "tuple",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_diff": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest",
    "datalad.utils.on_windows"
   ]
  },
  "type": "module"
 },
 "datalad.interface.tests.test_diff.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.PRE_INIT_COMMIT_SHA": {
  "data": {
   "shadows": "datalad.consts.PRE_INIT_COMMIT_SHA"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_diff._parse_git_diff": {
  "data": {
   "shadows": "datalad.interface.diff._parse_git_diff"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.diff": {
  "data": {
   "shadows": "datalad.api.diff"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.test_diff": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_diff.test_diff_helper": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset.create",
    "datalad.interface.diff._parse_git_diff",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tree",
    "list",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_diff.test_diff_recursive": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_diff.test_magic_number": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "datalad.cmd.GitRunner",
    "datalad.consts.PRE_INIT_COMMIT_SHA",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_diff.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_diff.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_docs.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_docs.alter_interface_docs_for_api": {
  "data": {
   "shadows": "datalad.interface.base.alter_interface_docs_for_api"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.alter_interface_docs_for_cmdline": {
  "data": {
   "shadows": "datalad.interface.base.alter_interface_docs_for_cmdline"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.dedent_docstring": {
  "data": {
   "shadows": "datalad.interface.base.dedent_docstring"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.demo_argdoc": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_docs.demo_doc": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_docs.demo_paramdoc": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_docs.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_docs.test_alter_interface_docs_for_api": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "datalad.interface.base.alter_interface_docs_for_api",
    "datalad.interface.tests.test_docs.demo_doc",
    "datalad.interface.tests.test_docs.demo_paramdoc",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_docs.test_alter_interface_docs_for_cmdline": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "datalad.interface.base.alter_interface_docs_for_cmdline",
    "datalad.interface.tests.test_docs.demo_argdoc",
    "datalad.interface.tests.test_docs.demo_doc",
    "datalad.interface.tests.test_docs.demo_paramdoc",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_docs.test_dedent": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "datalad.interface.base.dedent_docstring",
    "datalad.tests.utils.assert_false"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_download_url": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_download_url.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_download_url.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_download_url.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_download_url.test_download_url_archive": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "Dataset",
    "assert_not_in",
    "ok_",
    "os.path.join",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_download_url.test_download_url_archive_from_subdir": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "Dataset",
    "chpwd",
    "datalad.interface.tests.test_download_url.os",
    "download_url",
    "ok_",
    "os.path.join",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_download_url.test_download_url_archive_trailing_separator": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "Dataset",
    "ok_",
    "os.path.join",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_download_url.test_download_url_dataset": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Dataset",
    "assert_false",
    "assert_in_results",
    "chpwd",
    "datalad.interface.tests.test_download_url.os",
    "download_url",
    "eq_",
    "ok_",
    "ok_exists",
    "os.path.join",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_download_url.test_download_url_exceptions": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "assert_in",
    "assert_message",
    "assert_result_count",
    "download_url"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_download_url.test_download_url_existing_dir_no_slash_exception": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "assert_message",
    "assert_result_count",
    "chpwd",
    "download_url",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_download_url.test_download_url_return": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "assert_in",
    "assert_result_count",
    "download_url",
    "eq_",
    "os.path.join",
    "with_tempfile",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.tests.test_ls.test_ls_s3"
   ]
  },
  "type": "module"
 },
 "datalad.interface.tests.test_ls.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_ls.get_test_providers": {
  "data": {
   "shadows": "datalad.downloaders.tests.utils.get_test_providers"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.mkdir": {
  "data": {
   "shadows": "os.mkdir"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls.test_ls_formatter": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "LsFormatter",
    "assert_equal",
    "assert_in",
    "datalad.interface.tests.test_ls.sys",
    "fake_stdout",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls.test_ls_formatter.fake_stdout": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.interface.tests.test_ls.test_ls_formatter.fake_stdout.isatty": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls.test_ls_formatter.fake_stdout.write": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls.test_ls_noarg": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "assert_equal",
    "chpwd",
    "datalad.support.annexrepo.AnnexRepo",
    "ls",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls.test_ls_repos": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "_test",
    "chpwd",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "glob.glob",
    "os.mkdir",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls.test_ls_repos._test": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "assert_equal",
    "assert_in",
    "len",
    "ls",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls.test_ls_s3": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "assert_equal",
    "assert_in",
    "collections.Counter",
    "datalad.downloaders.tests.utils.get_test_providers",
    "len",
    "ls",
    "map",
    "swallow_outputs",
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls.test_ls_uninstalled": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "assert_in",
    "datalad.distribution.dataset.Dataset",
    "ls",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_ls_webui.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.UNKNOWN_SIZE": {
  "data": {
   "shadows": "datalad.interface.ls_webui.UNKNOWN_SIZE"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui._ls_json": {
  "data": {
   "shadows": "datalad.interface.ls_webui._ls_json"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.exists": {
  "data": {
   "shadows": "genericpath.exists"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.fs_traverse": {
  "data": {
   "shadows": "datalad.interface.ls_webui.fs_traverse"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.ignored": {
  "data": {
   "shadows": "datalad.interface.ls_webui.ignored"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.js": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.machinesize": {
  "data": {
   "shadows": "datalad.interface.ls_webui.machinesize"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.swallow_outputs": {
  "data": {
   "shadows": "datalad.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_ls_webui.test_fs_traverse": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "datalad.interface.ls_webui.fs_traverse",
    "datalad.interface.tests.test_ls_webui.logging",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.with_tree",
    "datalad.utils.swallow_logs",
    "datalad.utils.swallow_outputs",
    "dict",
    "isinstance",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui.test_ignored": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "datalad.interface.ls_webui.ignored",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui.test_ls_json": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.ls_webui.UNKNOWN_SIZE",
    "datalad.interface.ls_webui._ls_json",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tree",
    "datalad.utils._path_",
    "genericpath.exists",
    "get_meta",
    "get_metapath",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui.test_ls_json.get_meta": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "get_metapath",
    "json.load",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui.test_ls_json.get_metahash": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "datalad.interface.tests.test_ls_webui.hashlib",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui.test_ls_json.get_metapath": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "datalad.utils._path_",
    "get_metahash"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui.test_machinesize": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "datalad.interface.ls_webui.UNKNOWN_SIZE",
    "datalad.interface.ls_webui.machinesize",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_ls_webui.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_rerun.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.DEFAULT_BRANCH": {
  "data": {
   "shadows": "datalad.tests.utils.DEFAULT_BRANCH"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_rerun.assert_dict_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_dict_equal"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.diff_revision": {
  "data": {
   "shadows": "datalad.interface.rerun.diff_revision"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.get_run_info": {
  "data": {
   "shadows": "datalad.interface.rerun.get_run_info"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.known_failure_appveyor": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_appveyor"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.neq_": {
  "data": {
   "shadows": "datalad.tests.utils.neq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.new_or_modified": {
  "data": {
   "shadows": "datalad.interface.rerun.new_or_modified"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.ok_exists": {
  "data": {
   "shadows": "datalad.tests.utils.ok_exists"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.ok_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_under_git"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.remove": {
  "data": {
   "shadows": "os.remove"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.run": {
  "data": {
   "shadows": "datalad.api.run"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.run_command": {
  "data": {
   "shadows": "datalad.core.local.run.run_command"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.test_new_or_modified": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tree",
    "get_new_or_modified",
    "len",
    "open",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_new_or_modified.get_new_or_modified": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "datalad.interface.rerun.diff_revision",
    "datalad.interface.rerun.new_or_modified",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_placeholders": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "datalad.api.run",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.rerun.get_run_info",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "io.StringIO",
    "os.path.join",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "any",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.rerun.get_run_info",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "open",
    "os.path.join",
    "os.remove"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun_ambiguous_revision_file": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun_branch": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "len",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun_chain": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.rerun.get_run_info",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun_cherry_pick": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun_commit_message_check": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "ValueError",
    "datalad.interface.rerun.get_run_info",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun_empty_branch": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun_explicit": {
  "data": {
   "lineno": 771,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tree",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun_invalid_merge_run_commit": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.tests.test_rerun.logging",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "len",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun_just_one_commit": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun_onto": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "all",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "len",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun_outofdate_tree": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun_script": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "any",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.with_tempfile",
    "io.StringIO",
    "open",
    "os.path.join",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun_subdir": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.api.run",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.rerun.get_run_info",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "ok_file_under_git_kludge",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_rerun_subdir.ok_file_under_git_kludge": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "datalad.tests.utils.ok_file_under_git",
    "datalad.utils.Path",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_run_failure": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.on_windows",
    "open",
    "os.path.exists",
    "os.path.join",
    "os.remove"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_run_inputs_no_annex_repo": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.test_run_inputs_outputs": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "all",
    "any",
    "datalad.api.install",
    "datalad.api.run",
    "datalad.core.local.run.run_command",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.tests.test_rerun.logging",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_appveyor",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "datalad.utils.on_windows",
    "enumerate",
    "list",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun_merges": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_rerun_merges.DEFAULT_BRANCH": {
  "data": {
   "shadows": "datalad.tests.utils.DEFAULT_BRANCH"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun_merges.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun_merges.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_rerun_merges.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun_merges.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun_merges.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun_merges.neq_": {
  "data": {
   "shadows": "datalad.tests.utils.neq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun_merges.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun_merges.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun_merges.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_exclude_side": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_fastforwardable": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_fastforwardable_mutator": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_left_right_runs": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_multifork": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_mutator_left_nonrun_right": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_mutator_stem_nonrun_merges": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_nonrun_left_run_right": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_octopus": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_run_left_mutator_right": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_run_left_nonrun_right": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_unrelated_mutator_left_nonrun_right": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_unrelated_nonrun_left_mutator_right": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_unrelated_nonrun_left_run_right": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.test_rerun_unrelated_run_left_nonrun_right": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_rerun_merges.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_run_procedure.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.OBSCURE_FILENAME": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_FILENAME"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_run_procedure.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.assert_not_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in_results"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.dl_cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.quote_cmdlinearg": {
  "data": {
   "shadows": "datalad.utils.quote_cmdlinearg"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.run_procedure": {
  "data": {
   "shadows": "datalad.api.run_procedure"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.skip_if": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.swallow_outputs": {
  "data": {
   "shadows": "datalad.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.test_configs": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "datalad.cfg.obtain",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.tests.test_run_procedure.sys",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.on_windows",
    "datalad.tests.utils.skip_if",
    "datalad.tests.utils.with_tree",
    "datalad.utils.quote_cmdlinearg",
    "len",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run_procedure.test_dirty": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run_procedure.test_invalid_call": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "datalad.api.run_procedure",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run_procedure.test_procedure_discovery": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "datalad.api.run_procedure",
    "datalad.cfg.obtain",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.tests.test_run_procedure.os",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in_results",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.on_windows",
    "datalad.tests.utils.skip_if",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "len",
    "os.path.join",
    "sum",
    "super",
    "super.install",
    "super.path",
    "super.run_procedure"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run_procedure.test_quoting": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tree",
    "datalad.utils.swallow_outputs",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run_procedure.test_spaces": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run_procedure.test_text2git": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_run_procedure.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_run_procedure.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock": {
  "data": {},
  "type": "module"
 },
 "datalad.interface.tests.test_unlock.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.NoDatasetFound": {
  "data": {
   "shadows": "datalad.support.exceptions.NoDatasetFound"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_unlock.assert_cwd_unchanged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_cwd_unchanged"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.assert_not_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in_results"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.getpwd": {
  "data": {
   "shadows": "datalad.tests.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.skip_if": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.skip_if_root": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_root"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.test_unlock": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "IOError",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.skip_if_root",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_unlock.test_unlock_cant_unlock": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tree",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_unlock.test_unlock_directory": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in_results",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_unlock.test_unlock_raises": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.api.unlock",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.support.exceptions.NoDatasetFound",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.getpwd",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_unlock.unlock": {
  "data": {
   "shadows": "datalad.api.unlock"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_unlock.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.tests.test_utils.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.tests.test_utils.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.EnsureKeyChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureKeyChoice"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.TestUtils": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict",
    "tuple"
   ]
  },
  "type": "class"
 },
 "datalad.interface.tests.test_utils.TestUtils.__call__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "datalad.distribution.dataset.datasetmethod",
    "range",
    "result_fn",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.TestUtils2": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.tests.test_utils.TestUtils2.__call__": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "get_status_dict",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.TestUtils2.__call__.logger": {
  "data": {
   "lineno": 489
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.__docformat__": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_utils._check_all_clean": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "datalad.interface.tests.test_utils._dirty_modes",
    "datalad.tests.utils.assert_equal",
    "handle_dirty_dataset"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils._check_auto_save": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.interface.tests.test_utils._check_all_clean",
    "datalad.tests.utils.assert_not_equal",
    "datalad.tests.utils.assert_raises",
    "handle_dirty_dataset"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils._dirty_modes": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_utils._swallow_outputs": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "datalad.utils.swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.assert_dict_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_dict_equal"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.demo_hierarchy": {
  "data": {
   "lineno": 115
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_utils.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.getargspec": {
  "data": {
   "shadows": "datalad.utils.getargspec"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.lgr": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "datalad.interface.tests.test_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.make_demo_hierarchy_datasets": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "dict",
    "isinstance",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.sleep": {
  "data": {
   "shadows": "time.sleep"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.swallow_outputs": {
  "data": {
   "shadows": "datalad.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.test_dirty": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.tests.test_utils._check_all_clean",
    "datalad.interface.tests.test_utils._check_auto_save",
    "datalad.interface.tests.test_utils._dirty_modes",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tempfile",
    "handle_dirty_dataset",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_discover_ds_trace": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "datalad.interface.tests.test_utils.demo_hierarchy",
    "datalad.interface.tests.test_utils.make_demo_hierarchy_datasets",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "discover_dataset_trace_to_targets",
    "input",
    "os.path.exists",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_eval_results_plus_build_doc": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.Dataset.fake_command",
    "datalad.distribution.dataset.Dataset.fake_command.__doc__",
    "datalad.interface.tests.test_utils.TestUtils",
    "datalad.interface.tests.test_utils.logging",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.utils.getargspec",
    "datalad.utils.swallow_logs",
    "dict",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_incorrect_msg_interpolation": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "TypeError",
    "datalad.interface.tests.test_utils.TestUtils2",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_re_in",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_result_filter": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "datalad.interface.tests.test_utils.TestUtils",
    "datalad.support.constraints.EnsureKeyChoice",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_result_filter.greatfilter": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_result_filter.sadfilter": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_save_hierarchy": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.tests.test_utils.demo_hierarchy",
    "datalad.interface.tests.test_utils.make_demo_hierarchy_datasets",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_utils_suppress_similar": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "datalad.interface.tests.test_utils.TestUtils",
    "datalad.interface.tests.test_utils._swallow_outputs",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_re_in",
    "list",
    "tu"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_utils_suppress_similar.n_foo": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "dict",
    "range",
    "time.sleep"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.test_utils_suppress_similar.n_foo_split_by_a_bar": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "dict",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.interface.tests.test_utils.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.interface.tests.test_utils.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.interface.unlock": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.unlock.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.unlock.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.unlock.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.interface.unlock.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.interface.unlock.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.interface.unlock.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.interface.unlock.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.interface.unlock.Status": {
  "data": {
   "shadows": "datalad.core.local.status.Status"
  },
  "type": "import"
 },
 "datalad.interface.unlock.Unlock": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.interface.unlock.Unlock.__call__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "collections.defaultdict",
    "datalad.core.local.status.Status",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.dataset.resolve_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.unlock.lgr",
    "datalad.interface.utils.eval_results",
    "datalad.utils.Path",
    "datalad.utils.assure_list",
    "dict",
    "list",
    "os.path.join",
    "os.path.relpath",
    "set",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.interface.unlock.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.unlock.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.interface.unlock.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.interface.unlock.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.interface.unlock.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "datalad.interface.unlock.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.interface.unlock.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.interface.unlock.lgr": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "datalad.interface.unlock.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.unlock.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.interface.unlock.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.interface.unlock.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.interface.unlock.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.interface.unlock.resolve_path": {
  "data": {
   "shadows": "datalad.distribution.dataset.resolve_path"
  },
  "type": "import"
 },
 "datalad.interface.utils": {
  "data": {
   "symbols_in_volume": [
    "datalad.interface.utils.logging"
   ]
  },
  "type": "module"
 },
 "datalad.interface.utils.ConfigManager": {
  "data": {
   "shadows": "datalad.config.ConfigManager"
  },
  "type": "import"
 },
 "datalad.interface.utils.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.interface.utils.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.interface.utils.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.interface.utils.Save": {
  "data": {
   "shadows": "datalad.core.local.save.Save"
  },
  "type": "import"
 },
 "datalad.interface.utils.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.interface.utils._display_suppressed_message": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "datalad.dochelpers.single_or_plural",
    "datalad.ui.ui.message",
    "time.time"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils._process_results": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "datalad.dochelpers.exc_str",
    "datalad.interface.base.default_logchannels",
    "datalad.interface.utils._display_suppressed_message",
    "datalad.interface.utils.default_result_renderer",
    "datalad.interface.utils.json",
    "datalad.interface.utils.lgr",
    "datalad.interface.utils.logging",
    "datalad.interface.utils.sys",
    "datalad.ui.ui.message",
    "float",
    "getattr",
    "hasattr",
    "isinstance",
    "res_lgr",
    "result_renderer",
    "set",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils._with_sep": {
  "data": {
   "shadows": "datalad.utils.with_pathsep"
  },
  "type": "import"
 },
 "datalad.interface.utils.ac": {
  "data": {
   "shadows": "datalad.support.ansi_colors"
  },
  "type": "import"
 },
 "datalad.interface.utils.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.interface.utils.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "datalad.interface.utils.cls2cmdlinename": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.interface.utils.re"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.curdir": {
  "data": {
   "shadows": "os.curdir"
  },
  "type": "import"
 },
 "datalad.interface.utils.default_logchannels": {
  "data": {
   "shadows": "datalad.interface.base.default_logchannels"
  },
  "type": "import"
 },
 "datalad.interface.utils.default_result_renderer": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.ansi_colors.BOLD",
    "datalad.support.ansi_colors.MAGENTA",
    "datalad.support.ansi_colors.color_status",
    "datalad.support.ansi_colors.color_word",
    "datalad.ui.ui.message",
    "isinstance",
    "os.path.relpath",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.discover_dataset_trace_to_targets": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.utils.assure_unicode",
    "datalad.utils.path_is_subpath",
    "datalad.utils.path_startswith",
    "enumerate",
    "isinstance",
    "os.listdir",
    "os.path.isdir",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.dlcfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.interface.utils.eval_defaults": {
  "data": {
   "shadows": "datalad.interface.common_opts.eval_defaults"
  },
  "type": "import"
 },
 "datalad.interface.utils.eval_params": {
  "data": {
   "shadows": "datalad.interface.common_opts.eval_params"
  },
  "type": "import"
 },
 "datalad.interface.utils.eval_results": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "eval_func"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.eval_results.eval_func": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "datalad.cfg",
    "datalad.cfg.get",
    "datalad.cfg.overrides",
    "datalad.config.ConfigManager",
    "datalad.core.local.resulthooks.get_jsonhooks_from_config",
    "datalad.distribution.dataset.Dataset",
    "datalad.interface.base.get_allargs_as_kwargs",
    "datalad.interface.common_opts.eval_defaults",
    "datalad.interface.common_opts.eval_params",
    "datalad.interface.utils.get_result_filter",
    "datalad.interface.utils.lgr",
    "datalad.interface.utils.wrapt",
    "datalad.utils.get_wrapped_class",
    "generator_func",
    "getattr",
    "isinstance",
    "return_func"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.eval_results.eval_func.generator_func": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "datalad.core.local.resulthooks.match_jsonhook2result",
    "datalad.core.local.resulthooks.run_jsonhook",
    "datalad.interface.utils._process_results",
    "datalad.interface.utils.keep_result",
    "datalad.interface.utils.lgr",
    "datalad.interface.utils.xfm_result",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.ui.ui.message",
    "hasattr",
    "sorted",
    "sum",
    "wrapped"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.eval_results.eval_func.return_func": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "datalad.interface.utils.inspect",
    "datalad.interface.utils.wrapt",
    "hasattr",
    "len",
    "list",
    "wrapped_"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.interface.utils.get_allargs_as_kwargs": {
  "data": {
   "shadows": "datalad.interface.base.get_allargs_as_kwargs"
  },
  "type": "import"
 },
 "datalad.interface.utils.get_jsonhooks_from_config": {
  "data": {
   "shadows": "datalad.core.local.resulthooks.get_jsonhooks_from_config"
  },
  "type": "import"
 },
 "datalad.interface.utils.get_result_filter": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "datalad.utils.getargspec"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.get_result_filter._fx": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "fx"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.get_tree_roots": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "any",
    "datalad.utils.with_pathsep",
    "os.path.sep",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.get_wrapped_class": {
  "data": {
   "shadows": "datalad.utils.get_wrapped_class"
  },
  "type": "import"
 },
 "datalad.interface.utils.getargspec": {
  "data": {
   "shadows": "datalad.utils.getargspec"
  },
  "type": "import"
 },
 "datalad.interface.utils.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.interface.utils.handle_dirty_dataset": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "datalad.core.local.save.Save.__call__"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.interface.utils.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.interface.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.interface.utils.keep_result": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "ValueError",
    "datalad.dochelpers.exc_str",
    "datalad.interface.utils.lgr",
    "rfilter"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.lgr": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "datalad.interface.utils.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.interface.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.interface.utils.match_jsonhook2result": {
  "data": {
   "shadows": "datalad.core.local.resulthooks.match_jsonhook2result"
  },
  "type": "import"
 },
 "datalad.interface.utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.interface.utils.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.interface.utils.pardir": {
  "data": {
   "shadows": "os.pardir"
  },
  "type": "import"
 },
 "datalad.interface.utils.path_is_subpath": {
  "data": {
   "shadows": "datalad.utils.path_is_subpath"
  },
  "type": "import"
 },
 "datalad.interface.utils.path_is_under": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "datalad.utils.getpwd",
    "dict",
    "isinstance",
    "itertools.chain",
    "os.curdir",
    "os.pardir",
    "os.path.relpath",
    "os.path.split",
    "os.path.splitdrive",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.interface.utils.path_startswith": {
  "data": {
   "shadows": "datalad.utils.path_startswith"
  },
  "type": "import"
 },
 "datalad.interface.utils.psplit": {
  "data": {
   "shadows": "os.path.split"
  },
  "type": "import"
 },
 "datalad.interface.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.interface.utils.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.interface.utils.run_jsonhook": {
  "data": {
   "shadows": "datalad.core.local.resulthooks.run_jsonhook"
  },
  "type": "import"
 },
 "datalad.interface.utils.sep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "datalad.interface.utils.single_or_plural": {
  "data": {
   "shadows": "datalad.dochelpers.single_or_plural"
  },
  "type": "import"
 },
 "datalad.interface.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.interface.utils.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "datalad.interface.utils.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.interface.utils.wrapt": {
  "data": {
   "shadows": "wrapt"
  },
  "type": "import"
 },
 "datalad.interface.utils.xfm_result": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "xfm"
   ]
  },
  "type": "function"
 },
 "datalad.local": {
  "data": {},
  "type": "module"
 },
 "datalad.local.__docformat__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.local.copy_file": {
  "data": {
   "symbols_in_volume": [
    "datalad.local.copy_file.logging"
   ]
  },
  "type": "module"
 },
 "datalad.local.copy_file.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.local.copy_file.CopyFile": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.save_message_opt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.local.copy_file.CopyFile.__call__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.dataset.resolve_path",
    "datalad.interface.utils.eval_results",
    "datalad.local.copy_file._cleanup_cache",
    "datalad.local.copy_file._copy_file",
    "datalad.local.copy_file._yield_specs",
    "datalad.local.copy_file._yield_src_dest_filepaths",
    "datalad.local.copy_file.lgr",
    "datalad.utils.Path",
    "datalad.utils.ensure_list",
    "dict",
    "len",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.local.copy_file.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.local.copy_file.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.local.copy_file.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.local.copy_file.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.local.copy_file.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.local.copy_file.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.local.copy_file.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.local.copy_file.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.local.copy_file._cleanup_cache": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "OSError",
    "datalad.dochelpers.exc_str",
    "datalad.local.copy_file.lgr",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.local.copy_file._copy_file": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "datalad.local.copy_file._extract_special_remote_info",
    "datalad.local.copy_file._get_repo_record",
    "datalad.local.copy_file._place_filekey",
    "datalad.local.copy_file._place_filekey_managed",
    "datalad.local.copy_file._replace_file",
    "datalad.local.copy_file.lgr",
    "datalad.support.annexrepo.AnnexRepo",
    "dict",
    "isinstance",
    "os.path.lexists",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.local.copy_file._extract_special_remote_info": {
  "data": {
   "lineno": 604
  },
  "type": "function"
 },
 "datalad.local.copy_file._get_repo_record": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.utils.Path",
    "datalad.utils.get_dataset_root",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.local.copy_file._place_filekey": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "any",
    "datalad.local.copy_file._replace_file",
    "datalad.local.copy_file.lgr",
    "dict",
    "os.path.lexists",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.local.copy_file._place_filekey_managed": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "datalad.local.copy_file._replace_file",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.local.copy_file._replace_file": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "os.path.lexists",
    "shutil.copyfile"
   ]
  },
  "type": "function"
 },
 "datalad.local.copy_file._yield_specs": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "datalad.local.copy_file.sys",
    "datalad.utils.Path",
    "isinstance",
    "len",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.local.copy_file._yield_src_dest_filepaths": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.local.copy_file.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.local.copy_file.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "datalad.local.copy_file.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.local.copy_file.ensure_list": {
  "data": {
   "shadows": "datalad.utils.ensure_list"
  },
  "type": "import"
 },
 "datalad.local.copy_file.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.local.copy_file.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.local.copy_file.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.local.copy_file.lgr": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "datalad.local.copy_file.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.local.copy_file.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.local.copy_file.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.local.copy_file.resolve_path": {
  "data": {
   "shadows": "datalad.distribution.dataset.resolve_path"
  },
  "type": "import"
 },
 "datalad.local.copy_file.save_message_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.save_message_opt"
  },
  "type": "import"
 },
 "datalad.local.copy_file.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.local.subdatasets": {
  "data": {
   "symbols_in_volume": [
    "datalad.local.subdatasets.logging",
    "datalad.local.subdatasets.re"
   ]
  },
  "type": "module"
 },
 "datalad.local.subdatasets.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.Subdatasets": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.support.constraints.EnsureBool",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.local.subdatasets.Subdatasets.__call__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.dataset.resolve_path",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.local.subdatasets._get_submodules",
    "datalad.local.subdatasets.lgr",
    "datalad.local.subdatasets.os",
    "datalad.local.subdatasets.valid_key",
    "datalad.utils.assure_list",
    "int",
    "isinstance",
    "set",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.local.subdatasets.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.local.subdatasets._get_submodules": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "any",
    "datalad.distribution.dataset.Dataset",
    "datalad.dochelpers.exc_str",
    "datalad.interface.common_opts.recursion_limit",
    "datalad.interface.results.get_status_dict",
    "datalad.local.subdatasets._parse_git_submodules",
    "datalad.local.subdatasets.lgr",
    "datalad.local.subdatasets.os",
    "datalad.support.exceptions.CommandError",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.utils.assure_list",
    "dict",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.local.subdatasets._parse_git_submodules": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "any",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.utils.partition",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.local.subdatasets.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.lgr": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datalad.local.subdatasets.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.partition": {
  "data": {
   "shadows": "datalad.utils.partition"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.recursion_limit": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_limit"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.resolve_path": {
  "data": {
   "shadows": "datalad.distribution.dataset.resolve_path"
  },
  "type": "import"
 },
 "datalad.local.subdatasets.valid_key": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.local.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.local.tests.test_copy_file": {
  "data": {},
  "type": "module"
 },
 "datalad.local.tests.test_copy_file.DATALAD_SPECIAL_REMOTE": {
  "data": {
   "shadows": "datalad.consts.DATALAD_SPECIAL_REMOTE"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file._check_copy_file_specs_from": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset"
   ]
  },
  "type": "function"
 },
 "datalad.local.tests.test_copy_file.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.copy_file": {
  "data": {
   "shadows": "datalad.api.copy_file"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.nok_": {
  "data": {
   "shadows": "datalad.tests.utils.nok_"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.test_copy_file": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.nok_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.local.tests.test_copy_file.test_copy_file_datalad_specialremote": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "datalad.api.copy_file",
    "datalad.consts.DATALAD_SPECIAL_REMOTE",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.local.tests.test_copy_file.test_copy_file_errors": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.copy_file",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.local.tests.test_copy_file.test_copy_file_into_dshierarchy": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.local.tests.test_copy_file.test_copy_file_into_nonannex": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "datalad.api.copy_file",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.local.tests.test_copy_file.test_copy_file_prevent_dotgit_placement": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.nok_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.local.tests.test_copy_file.test_copy_file_recursion": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "datalad.api.copy_file",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.local.tests.test_copy_file.test_copy_file_specs_from": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "datalad.api.copy_file",
    "datalad.local.tests.test_copy_file._check_copy_file_specs_from",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.local.tests.test_copy_file.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.local.tests.test_copy_file.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset": {
  "data": {},
  "type": "module"
 },
 "datalad.local.tests.test_subdataset.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.PurePosixPath": {
  "data": {
   "shadows": "datalad.utils.PurePosixPath"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset._p": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "datalad.utils.Path",
    "datalad.utils.PurePosixPath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.local.tests.test_subdataset.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.clone": {
  "data": {
   "shadows": "datalad.api.clone"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.subdatasets": {
  "data": {
   "shadows": "datalad.api.subdatasets"
  },
  "type": "import"
 },
 "datalad.local.tests.test_subdataset.test_get_subdatasets": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "datalad.api.clone",
    "datalad.api.subdatasets",
    "datalad.distribution.dataset.Dataset",
    "datalad.local.tests.test_subdataset._p",
    "datalad.local.tests.test_subdataset.os",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.chpwd",
    "os.path.join",
    "os.path.pardir",
    "os.path.relpath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.local.tests.test_subdataset.test_get_subdatasets_types": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.local.tests.test_subdataset.test_parent_on_unborn_branch": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.local.tests.test_subdataset.test_state": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset.create",
    "datalad.local.tests.test_subdataset.os",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.local.tests.test_subdataset.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.log": {
  "data": {
   "symbols_in_volume": [
    "datalad.log.LoggerHelper"
   ]
  },
  "type": "module"
 },
 "datalad.log.ColorFormatter": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "datalad.log.logging"
   ]
  },
  "type": "class"
 },
 "datalad.log.ColorFormatter.__init__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "datalad.log.MemoryInfo",
    "datalad.log.TraceBack",
    "datalad.log.logging",
    "datalad.log.os",
    "datalad.log.platform",
    "int",
    "is_interactive"
   ]
  },
  "type": "function"
 },
 "datalad.log.ColorFormatter._get_format": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "datalad.cfg.get",
    "datalad.config.anything2bool"
   ]
  },
  "type": "function"
 },
 "datalad.log.ColorFormatter.format": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "datalad.log.logging",
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.log.LoggerHelper": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.log.LoggerHelper.__init__": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "datalad.log.logging"
   ]
  },
  "type": "function"
 },
 "datalad.log.LoggerHelper._get_config": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "datalad.cfg.get"
   ]
  },
  "type": "function"
 },
 "datalad.log.LoggerHelper.get_initialized_logger": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "LogFilter",
    "datalad.log.ColorFormatter",
    "datalad.log.NoProgressLog",
    "datalad.log.OnlyProgressLog",
    "datalad.log.ProgressHandler",
    "datalad.log.filter_noninteractive_progress",
    "datalad.log.logging",
    "datalad.log.sys",
    "functools.partial",
    "getattr",
    "is_interactive"
   ]
  },
  "type": "function"
 },
 "datalad.log.LoggerHelper.get_initialized_logger.LogFilter": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.log.LoggerHelper.get_initialized_logger.LogFilter.__init__": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "datalad.log.re",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.log.LoggerHelper.get_initialized_logger.LogFilter.filter": {
  "data": {
   "lineno": 475
  },
  "type": "function"
 },
 "datalad.log.LoggerHelper.set_level": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "ValueError",
    "datalad.log.logging",
    "getattr",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.log.MemoryInfo": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.log.MemoryInfo.__call__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.log.MemoryInfo.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "datalad.log.os",
    "hasattr",
    "psutil.Process"
   ]
  },
  "type": "function"
 },
 "datalad.log.NoProgressLog": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "datalad.log.logging"
   ]
  },
  "type": "class"
 },
 "datalad.log.NoProgressLog.filter": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.log.OnlyProgressLog": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "datalad.log.logging"
   ]
  },
  "type": "class"
 },
 "datalad.log.OnlyProgressLog.filter": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.log.Process": {
  "data": {
   "shadows": "psutil.Process"
  },
  "type": "import"
 },
 "datalad.log.ProgressHandler": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "datalad.log.logging"
   ]
  },
  "type": "class"
 },
 "datalad.log.ProgressHandler.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.log.ProgressHandler.emit": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "datalad.ui.ui.get_progressbar",
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.log.TraceBack": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.log.TraceBack.__call__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.log.mbasename",
    "datalad.log.os",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.log.TraceBack.__init__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "datalad.log.re",
    "datalad.log.traceback"
   ]
  },
  "type": "function"
 },
 "datalad.log.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datalad.log.anything2bool": {
  "data": {
   "shadows": "datalad.config.anything2bool"
  },
  "type": "import"
 },
 "datalad.log.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.log.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.log.colors": {
  "data": {
   "shadows": "ansi_colors"
  },
  "type": "import"
 },
 "datalad.log.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "datalad.log.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.log.filter_noninteractive_progress": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.log.lgr": {
  "data": {
   "lineno": 505
  },
  "type": "constant"
 },
 "datalad.log.log_progress": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "dict",
    "lgrcall"
   ]
  },
  "type": "function"
 },
 "datalad.log.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.log.logging.handlers": {
  "data": {
   "shadows": "logging.handlers"
  },
  "type": "import"
 },
 "datalad.log.mbasename": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "os.path.basename",
    "os.path.dirname",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.log.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.log.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "datalad.log.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "datalad.log.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.log.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.log.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "datalad.log.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.log.with_result_progress": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.log.with_result_progress.count_str": {
  "data": {
   "lineno": 334
  },
  "type": "function"
 },
 "datalad.log.with_result_progress.wrapped": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "collections.defaultdict",
    "count_str",
    "datalad.log.log_progress",
    "filter",
    "fn",
    "int",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.make_tempfile": {
  "data": {
   "shadows": "datalad.utils.make_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.definitions": {
  "data": {
   "symbols_in_volume": [
    "datalad.metadata.definitions.vocabulary_id"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.definitions.common_defs": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.metadata.definitions.version": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datalad.metadata.definitions.vocabulary_id": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.metadata.extract_metadata": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.extract_metadata.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.metadata.extract_metadata.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.metadata.extract_metadata.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.metadata.extract_metadata.ExtractMetadata": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.extract_metadata.ExtractMetadata.__call__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "bool",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.metadata.metadata._get_metadata",
    "datalad.metadata.metadata._get_metadatarelevant_paths",
    "list",
    "os.curdir",
    "os.path.join",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extract_metadata.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.metadata.extract_metadata.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.metadata.extract_metadata.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.metadata.extract_metadata._get_metadata": {
  "data": {
   "shadows": "datalad.metadata.metadata._get_metadata"
  },
  "type": "import"
 },
 "datalad.metadata.extract_metadata._get_metadatarelevant_paths": {
  "data": {
   "shadows": "datalad.metadata.metadata._get_metadatarelevant_paths"
  },
  "type": "import"
 },
 "datalad.metadata.extract_metadata.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.metadata.extract_metadata.curdir": {
  "data": {
   "shadows": "os.curdir"
  },
  "type": "import"
 },
 "datalad.metadata.extract_metadata.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.metadata.extract_metadata.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.metadata.extract_metadata.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.metadata.extract_metadata.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.extract_metadata.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.metadata.extractors": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.extractors.annex": {
  "data": {
   "symbols_in_volume": [
    "datalad.metadata.extractors.annex.logging"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.extractors.annex.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.annex.BaseMetadataExtractor": {
  "data": {
   "shadows": "datalad.metadata.extractors.base.BaseMetadataExtractor"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.annex.MetadataExtractor": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datalad.metadata.extractors.base.BaseMetadataExtractor"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.extractors.annex.MetadataExtractor._get_content_metadata": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "datalad.log.log_progress",
    "datalad.metadata.extractors.annex.lgr",
    "datalad.support.annexrepo.AnnexRepo",
    "isinstance",
    "len",
    "list",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.annex.MetadataExtractor._get_dataset_metadata": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "datalad.metadata.extractors.annex.lgr": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.annex.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.annex.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.annex.vocabulary_version": {
  "data": {
   "shadows": "datalad.metadata.definitions.version"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.audio": {
  "data": {
   "symbols_in_volume": [
    "datalad.metadata.extractors.audio.logging"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.extractors.audio.BaseMetadataExtractor": {
  "data": {
   "shadows": "datalad.metadata.extractors.base.BaseMetadataExtractor"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.audio.MetadataExtractor": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "datalad.metadata.extractors.base.BaseMetadataExtractor"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.extractors.audio.MetadataExtractor.get_metadata": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "datalad.log.log_progress",
    "datalad.metadata.definitions.vocabulary_id",
    "datalad.metadata.extractors.audio.lgr",
    "datalad.metadata.extractors.audio.vocab_map",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "mutagen.File",
    "os.path.join",
    "round"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.audio.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.audio.audiofile": {
  "data": {
   "shadows": "mutagen.File"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.audio.lgr": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.audio.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.audio.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.audio.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.audio.vocab_map": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.audio.vocabulary_id": {
  "data": {
   "shadows": "datalad.metadata.definitions.vocabulary_id"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.base": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.extractors.base.BaseMetadataExtractor": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.extractors.base.BaseMetadataExtractor.__init__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "datalad.metadata.extractors.base.BaseMetadataExtractor._get_content_metadata": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.base.BaseMetadataExtractor._get_dataset_metadata": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.base.BaseMetadataExtractor.get_metadata": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "datalad.metadata.extractors.datacite": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datalad.metadata.extractors.datacite.logging"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.extractors.datacite.BaseMetadataExtractor": {
  "data": {
   "shadows": "datalad.metadata.extractors.base.BaseMetadataExtractor"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datacite.ET": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datacite.MetadataExtractor": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "datalad.metadata.extractors.base.BaseMetadataExtractor"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.extractors.datacite.MetadataExtractor._get_content_metadata": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "datalad.metadata.extractors.datacite.MetadataExtractor._get_dataset_metadata": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "datalad.metadata.extractors.datacite._process_tree",
    "dict",
    "nstag",
    "open",
    "os.path.basename",
    "os.path.join",
    "os.path.lexists",
    "xml.etree.ElementTree.ElementTree",
    "xml.etree.ElementTree.iterparse"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.datacite.MetadataExtractor._get_dataset_metadata.nstag": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "datalad.metadata.extractors.datacite.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datacite._merge": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "datalad.metadata.extractors.datacite._process_tree": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "AttributeError",
    "collections.OrderedDict",
    "datalad.metadata.extractors.datacite._merge",
    "datalad.metadata.extractors.datacite._unwrap",
    "list",
    "map",
    "nstag",
    "text",
    "trans1",
    "transall_"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.datacite._unwrap": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "datalad.metadata.extractors.datacite.re"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.datacite.lgr": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.datacite.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datacite.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datacite.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_core": {
  "data": {
   "symbols_in_volume": [
    "datalad.metadata.extractors.datalad_core.logging"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.extractors.datalad_core.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_core.BaseMetadataExtractor": {
  "data": {
   "shadows": "datalad.metadata.extractors.base.BaseMetadataExtractor"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_core.DATALAD_DOTDIR": {
  "data": {
   "shadows": "datalad.consts.DATALAD_DOTDIR"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_core.DATASET_METADATA_FILE": {
  "data": {
   "shadows": "datalad.consts.DATASET_METADATA_FILE"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_core.MetadataExtractor": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "datalad.metadata.extractors.base.BaseMetadataExtractor"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.extractors.datalad_core.MetadataExtractor._get_content_metadata": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "datalad.consts.DATALAD_DOTDIR",
    "datalad.consts.WEB_SPECIAL_REMOTE_UUID",
    "datalad.log.log_progress",
    "datalad.metadata.extractors.datalad_core.lgr",
    "datalad.support.annexrepo.AnnexRepo",
    "dict",
    "isinstance",
    "len",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.datalad_core.MetadataExtractor._get_dataset_metadata": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "datalad.consts.DATASET_METADATA_FILE",
    "datalad.coreapi.subdatasets",
    "datalad.support.json_py.load",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.datalad_core.WEB_SPECIAL_REMOTE_UUID": {
  "data": {
   "shadows": "datalad.consts.WEB_SPECIAL_REMOTE_UUID"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_core.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_core.jsonload": {
  "data": {
   "shadows": "datalad.support.json_py.load"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_core.lgr": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.datalad_core.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_core.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_core.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_core.subdatasets": {
  "data": {
   "shadows": "datalad.coreapi.subdatasets"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_core.vocabulary_version": {
  "data": {
   "shadows": "datalad.metadata.definitions.version"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_rfc822": {
  "data": {
   "symbols_in_volume": [
    "datalad.metadata.extractors.datalad_rfc822.logging"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.extractors.datalad_rfc822.BaseMetadataExtractor": {
  "data": {
   "shadows": "datalad.metadata.extractors.base.BaseMetadataExtractor"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_rfc822.MetadataExtractor": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "datalad.metadata.extractors.base.BaseMetadataExtractor",
    "os.path.join"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.extractors.datalad_rfc822.MetadataExtractor._get_content_metadata": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "datalad.metadata.extractors.datalad_rfc822.MetadataExtractor._get_dataset_metadata": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.metadata.extractors.datalad_rfc822._beautify_multiline_field",
    "datalad.metadata.extractors.datalad_rfc822._split_list_field",
    "datalad.metadata.extractors.datalad_rfc822.email",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.datalad_rfc822._beautify_multiline_field": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "datalad.interface.base.dedent_docstring",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.datalad_rfc822._split_list_field": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "datalad.metadata.extractors.datalad_rfc822.dedent_docstring": {
  "data": {
   "shadows": "datalad.interface.base.dedent_docstring"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_rfc822.email": {
  "data": {
   "shadows": "email"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_rfc822.email.parser": {
  "data": {
   "shadows": "email.parser"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_rfc822.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_rfc822.lgr": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.datalad_rfc822.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.datalad_rfc822.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.exif": {
  "data": {
   "symbols_in_volume": [
    "datalad.metadata.extractors.exif.logging"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.extractors.exif.BaseMetadataExtractor": {
  "data": {
   "shadows": "datalad.metadata.extractors.base.BaseMetadataExtractor"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.exif.MetadataExtractor": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "datalad.metadata.extractors.base.BaseMetadataExtractor"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.extractors.exif.MetadataExtractor.get_metadata": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datalad.log.log_progress",
    "datalad.metadata.definitions.vocabulary_id",
    "datalad.metadata.extractors.exif._return_as_appropriate_dtype",
    "datalad.metadata.extractors.exif.lgr",
    "exifread.process_file",
    "len",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.exif._return_as_appropriate_dtype": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.exif.lgr": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.exif.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.exif.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.exif.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.exif.process_file": {
  "data": {
   "shadows": "exifread.process_file"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.exif.vocabulary_id": {
  "data": {
   "shadows": "datalad.metadata.definitions.vocabulary_id"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.frictionless_datapackage": {
  "data": {
   "symbols_in_volume": [
    "datalad.metadata.extractors.frictionless_datapackage.logging"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.extractors.frictionless_datapackage.BaseMetadataExtractor": {
  "data": {
   "shadows": "datalad.metadata.extractors.base.BaseMetadataExtractor"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.frictionless_datapackage.MetadataExtractor": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "datalad.metadata.extractors.base.BaseMetadataExtractor"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.extractors.frictionless_datapackage.MetadataExtractor._get_content_metadata": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "datalad.metadata.extractors.frictionless_datapackage.MetadataExtractor._get_dataset_metadata": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datalad.metadata.extractors.frictionless_datapackage._compact_author",
    "datalad.metadata.extractors.frictionless_datapackage._compact_license",
    "datalad.support.json_py.load",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.frictionless_datapackage._compact_author": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.frictionless_datapackage._compact_license": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.frictionless_datapackage.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.frictionless_datapackage.jsonload": {
  "data": {
   "shadows": "datalad.support.json_py.load"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.frictionless_datapackage.lgr": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.frictionless_datapackage.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.frictionless_datapackage.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.image": {
  "data": {
   "symbols_in_volume": [
    "datalad.metadata.extractors.image.logging"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.extractors.image.BaseMetadataExtractor": {
  "data": {
   "shadows": "datalad.metadata.extractors.base.BaseMetadataExtractor"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.image.Image": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.image.MetadataExtractor": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "datalad.metadata.extractors.base.BaseMetadataExtractor",
    "datalad.metadata.extractors.image.mode_map"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.extractors.image.MetadataExtractor.get_metadata": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Exception",
    "PIL.Image.open",
    "datalad.dochelpers.exc_str",
    "datalad.log.log_progress",
    "datalad.metadata.extractors.image.lgr",
    "datalad.metadata.extractors.image.vocabulary",
    "hasattr",
    "len",
    "os.path.join",
    "v"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.image.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.image.lgr": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.image.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.image.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.image.mode_map": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.image.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.image.vocabulary": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.extractors.tests.test_audio": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datalad.tests.utils.SkipTest"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.extractors.tests.test_audio.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_audio.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_audio.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_audio.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_audio.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_audio.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_audio.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_audio.copy": {
  "data": {
   "shadows": "shutil.copy"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_audio.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_audio.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_audio.mutagen": {
  "data": {
   "shadows": "mutagen"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_audio.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_audio.target": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.tests.test_audio.test_audio": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.metadata.extractors.tests.test_audio.target",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "os.path.dirname",
    "os.path.join",
    "shutil.copy"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.tests.test_audio.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.extractors.tests.test_base.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_base.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_base.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_base.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_base.check_api": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception",
    "datalad.api.Dataset",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tree",
    "dict",
    "extractor_cls",
    "hasattr",
    "inspect.isgenerator",
    "isinstance",
    "len",
    "pkg_resources.iter_entry_points",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.tests.test_base.isgenerator": {
  "data": {
   "shadows": "inspect.isgenerator"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_base.iter_entry_points": {
  "data": {
   "shadows": "pkg_resources.iter_entry_points"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_base.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_base.test_api_annex": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "datalad.metadata.extractors.tests.test_base.check_api",
    "datalad.tests.utils.known_failure_githubci_win"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.tests.test_base.test_api_git": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "datalad.metadata.extractors.tests.test_base.check_api",
    "datalad.tests.utils.known_failure_githubci_win"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.tests.test_base.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_datacite_xml": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.extractors.tests.test_datacite_xml.MetadataExtractor": {
  "data": {
   "shadows": "datalad.metadata.extractors.datacite.MetadataExtractor"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_datacite_xml._get_metadatarelevant_paths": {
  "data": {
   "shadows": "datalad.metadata.metadata._get_metadatarelevant_paths"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_datacite_xml.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_datacite_xml.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_datacite_xml.dumps": {
  "data": {
   "shadows": "simplejson.dumps"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_datacite_xml.test_get_metadata": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.metadata.extractors.datacite.MetadataExtractor",
    "datalad.metadata.extractors.tests.test_datacite_xml.xml_content",
    "datalad.metadata.metadata._get_metadatarelevant_paths",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.with_tree",
    "print",
    "simplejson.dumps"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.tests.test_datacite_xml.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_datacite_xml.xml_content": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.tests.test_exif": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datalad.tests.utils.SkipTest"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.extractors.tests.test_exif.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_exif.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_exif.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_exif.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_exif.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_exif.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_exif.copy": {
  "data": {
   "shadows": "shutil.copy"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_exif.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_exif.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_exif.exifread": {
  "data": {
   "shadows": "exifread"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_exif.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_exif.target": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.tests.test_exif.test_exif": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.metadata.extractors.tests.test_exif.target",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "os.path.dirname",
    "os.path.join",
    "shutil.copy"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.tests.test_exif.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_frictionless_datapackage": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.extractors.tests.test_frictionless_datapackage.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_frictionless_datapackage.MetadataExtractor": {
  "data": {
   "shadows": "datalad.metadata.extractors.frictionless_datapackage.MetadataExtractor"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_frictionless_datapackage.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_frictionless_datapackage.dumps": {
  "data": {
   "shadows": "simplejson.dumps"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_frictionless_datapackage.test_get_metadata": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.metadata.extractors.frictionless_datapackage.MetadataExtractor",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.with_tree",
    "simplejson.dumps"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.tests.test_frictionless_datapackage.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_image": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datalad.dochelpers.exc_str",
    "datalad.tests.utils.SkipTest"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.extractors.tests.test_image.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_image.Image": {
  "data": {
   "shadows": "PIL.Image"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_image.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_image.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_image.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_image.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_image.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_image.copy": {
  "data": {
   "shadows": "shutil.copy"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_image.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_image.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_image.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_image.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_image.target": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.tests.test_image.test_image": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.metadata.extractors.tests.test_image.target",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "os.path.dirname",
    "os.path.join",
    "shutil.copy"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.tests.test_image.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_rfc822": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.extractors.tests.test_rfc822.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_rfc822.MetadataExtractor": {
  "data": {
   "shadows": "datalad.metadata.extractors.datalad_rfc822.MetadataExtractor"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_rfc822.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_rfc822.dumps": {
  "data": {
   "shadows": "simplejson.dumps"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_rfc822.test_get_metadata": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.extractors.datalad_rfc822.MetadataExtractor",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.with_tree",
    "simplejson.dumps"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.tests.test_rfc822.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_xmp": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "datalad.dochelpers.exc_str",
    "datalad.tests.utils.SkipTest"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.extractors.tests.test_xmp.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_xmp.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_xmp.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_xmp.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_xmp.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_xmp.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_xmp.copy": {
  "data": {
   "shadows": "shutil.copy"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_xmp.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_xmp.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_xmp.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_xmp.libxmp": {
  "data": {
   "shadows": "libxmp"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_xmp.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.tests.test_xmp.target": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.tests.test_xmp.test_xmp": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.metadata.extractors.tests.test_xmp.target",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "os.path.dirname",
    "os.path.join",
    "shutil.copy"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.tests.test_xmp.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.xmp": {
  "data": {
   "symbols_in_volume": [
    "datalad.metadata.extractors.xmp.logging",
    "datalad.metadata.extractors.xmp.re"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.extractors.xmp.BaseMetadataExtractor": {
  "data": {
   "shadows": "datalad.metadata.extractors.base.BaseMetadataExtractor"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.xmp.MetadataExtractor": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datalad.metadata.extractors.base.BaseMetadataExtractor"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.extractors.xmp.MetadataExtractor.get_metadata": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "datalad.log.log_progress",
    "datalad.metadata.definitions.vocabulary_id",
    "datalad.metadata.extractors.xmp.lgr",
    "datalad.metadata.extractors.xmp.re",
    "datalad.metadata.extractors.xmp.xmp_field_re",
    "datalad.utils.assure_unicode",
    "isinstance",
    "len",
    "libxmp.utils.file_to_dict",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.extractors.xmp.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.xmp.file_to_dict": {
  "data": {
   "shadows": "libxmp.utils.file_to_dict"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.xmp.lgr": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.metadata.extractors.xmp.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.xmp.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.xmp.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.xmp.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.xmp.vocabulary_id": {
  "data": {
   "shadows": "datalad.metadata.definitions.vocabulary_id"
  },
  "type": "import"
 },
 "datalad.metadata.extractors.xmp.xmp_field_re": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.metadata.metadata": {
  "data": {
   "symbols_in_volume": [
    "datalad.metadata.metadata.logging"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.metadata.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.AnnotatePaths": {
  "data": {
   "shadows": "datalad.interface.annotate_paths.AnnotatePaths"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.Mapping": {
  "data": {
   "shadows": "collections.abc.Mapping"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.Metadata": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.recursion_flag",
    "datalad.interface.common_opts.reporton_opt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.metadata.Metadata.__call__": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.annotate_paths.AnnotatePaths.__call__",
    "datalad.interface.base.Interface.get_refds_path",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.metadata.metadata.aggregate_layout_version",
    "datalad.metadata.metadata.lgr",
    "datalad.metadata.metadata.load_ds_aggregate_db",
    "datalad.metadata.metadata.query_aggregated_metadata",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.utils.path_is_subpath",
    "dict",
    "os.path.curdir",
    "sorted",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata.Metadata.custom_result_renderer": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "datalad.support.ansi_colors.BOLD",
    "datalad.support.ansi_colors.MAGENTA",
    "datalad.support.ansi_colors.color_word",
    "datalad.ui.ui.message",
    "datalad.utils.assure_list",
    "len",
    "os.path.relpath",
    "sorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata.OLDMETADATA_DIR": {
  "data": {
   "shadows": "datalad.consts.OLDMETADATA_DIR"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.OLDMETADATA_FILENAME": {
  "data": {
   "shadows": "datalad.consts.OLDMETADATA_FILENAME"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.ReadOnlyDict": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "collections.abc.Mapping",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.metadata.ReadOnlyDict.__contains__": {
  "data": {
   "lineno": 737
  },
  "type": "function"
 },
 "datalad.metadata.metadata.ReadOnlyDict.__getitem__": {
  "data": {
   "lineno": 734
  },
  "type": "function"
 },
 "datalad.metadata.metadata.ReadOnlyDict.__hash__": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "datalad.metadata.metadata._val2hashable",
    "hash"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata.ReadOnlyDict.__init__": {
  "data": {
   "lineno": 730
  },
  "type": "function"
 },
 "datalad.metadata.metadata.ReadOnlyDict.__iter__": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata.ReadOnlyDict.__len__": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata.ReadOnlyDict.__repr__": {
  "data": {
   "lineno": 749
  },
  "type": "function"
 },
 "datalad.metadata.metadata.ReadOnlyDict.copy": {
  "data": {
   "lineno": 740
  },
  "type": "function"
 },
 "datalad.metadata.metadata.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.metadata.metadata._filter_metadata_fields": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "any",
    "bytes",
    "datalad.metadata.metadata.lgr",
    "isinstance",
    "len",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata._get_containingds_from_agginfo": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "datalad.metadata.metadata.os",
    "datalad.utils.path_is_subpath",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata._get_metadata": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "_ensure_serializable",
    "datalad.cfg.get",
    "datalad.dochelpers.exc_str",
    "datalad.dochelpers.single_or_plural",
    "datalad.log.log_progress",
    "datalad.metadata.definitions.version",
    "datalad.metadata.metadata._filter_metadata_fields",
    "datalad.metadata.metadata._ok_metadata",
    "datalad.metadata.metadata._val2hashable",
    "datalad.metadata.metadata.lgr",
    "datalad.metadata.metadata.re",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.constraints.EnsureBool",
    "datalad.utils.assure_list",
    "dict",
    "extractor_cls",
    "extractor_cls.NEEDS_CONTENT",
    "getattr",
    "isinstance",
    "len",
    "pkg_resources.iter_entry_points",
    "set",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata._get_metadata._ensure_serializable": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "_ensure_serializable",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata._get_metadatarelevant_paths": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "any",
    "datalad.metadata.metadata.exclude_from_metadata",
    "datalad.utils.path_startswith",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata._load_json_object": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "datalad.support.json_py.load",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata._load_xz_json_stream": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "datalad.support.json_py.load_xzstream",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata._ok_metadata": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.cfg.get",
    "datalad.metadata.metadata.lgr",
    "dict",
    "isinstance",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata._query_aggregated_metadata_singlepath": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "datalad.interface.results.get_status_dict",
    "datalad.metadata.metadata._load_xz_json_stream",
    "datalad.utils.path_startswith",
    "os.path.curdir",
    "os.path.join",
    "os.path.normpath",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata._unique_value_key": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "datalad.utils.as_unicode",
    "hash",
    "isinstance",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata._val2hashable": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "datalad.metadata.metadata.ReadOnlyDict",
    "dict",
    "isinstance",
    "list",
    "map",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata.ac": {
  "data": {
   "shadows": "datalad.support.ansi_colors"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.aggregate_layout_version": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "datalad.metadata.metadata.as_unicode": {
  "data": {
   "shadows": "datalad.utils.as_unicode"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.exclude_from_metadata": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "datalad.metadata.metadata.get": {
  "data": {
   "shadows": "datalad.coreapi.get"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.get_ds_aggregate_db_locations": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "datalad.consts.OLDMETADATA_DIR",
    "datalad.consts.OLDMETADATA_FILENAME",
    "datalad.metadata.definitions.version",
    "datalad.metadata.metadata.aggregate_layout_version",
    "datalad.metadata.metadata.glob",
    "datalad.metadata.metadata.lgr",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata.get_metadata_type": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "datalad.metadata.metadata.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.iter_entry_points": {
  "data": {
   "shadows": "pkg_resources.iter_entry_points"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.jsonload": {
  "data": {
   "shadows": "datalad.support.json_py.load"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.lgr": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "datalad.metadata.metadata.load_ds_aggregate_db": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "datalad.metadata.definitions.version",
    "datalad.metadata.metadata._load_json_object",
    "datalad.metadata.metadata.get_ds_aggregate_db_locations",
    "datalad.metadata.metadata.location_keys",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata.load_xzstream": {
  "data": {
   "shadows": "datalad.support.json_py.load_xzstream"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.location_keys": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "datalad.metadata.metadata.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.path_is_subpath": {
  "data": {
   "shadows": "datalad.utils.path_is_subpath"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.path_startswith": {
  "data": {
   "shadows": "datalad.utils.path_startswith"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.query_aggregated_metadata": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "datalad.coreapi.get",
    "datalad.interface.results.get_status_dict",
    "datalad.metadata.metadata._get_containingds_from_agginfo",
    "datalad.metadata.metadata._load_json_object",
    "datalad.metadata.metadata._query_aggregated_metadata_singlepath",
    "datalad.metadata.metadata.lgr",
    "datalad.metadata.metadata.load_ds_aggregate_db",
    "datalad.utils.path_is_subpath",
    "dict",
    "len",
    "os.path.curdir",
    "os.path.join",
    "os.path.normpath",
    "os.path.relpath",
    "set",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.metadata.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.recursion_flag": {
  "data": {
   "shadows": "datalad.interface.common_opts.recursion_flag"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.reporton_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.reporton_opt"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.single_or_plural": {
  "data": {
   "shadows": "datalad.dochelpers.single_or_plural"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.metadata.metadata.vocabulary_version": {
  "data": {
   "shadows": "datalad.metadata.definitions.version"
  },
  "type": "import"
 },
 "datalad.metadata.search": {
  "data": {
   "symbols_in_volume": [
    "datalad.metadata.search.logging",
    "datalad.utils.as_unicode",
    "dict",
    "float",
    "functools.partial",
    "int",
    "list",
    "tuple"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.search.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.search.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.metadata.search.EnsureInt": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureInt"
  },
  "type": "import"
 },
 "datalad.metadata.search.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.metadata.search.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.metadata.search.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.metadata.search.NoDatasetFound": {
  "data": {
   "shadows": "datalad.support.exceptions.NoDatasetFound"
  },
  "type": "import"
 },
 "datalad.metadata.search.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.metadata.search.SEARCH_INDEX_DOTGITDIR": {
  "data": {
   "shadows": "datalad.consts.SEARCH_INDEX_DOTGITDIR"
  },
  "type": "import"
 },
 "datalad.metadata.search.Search": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureInt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.search.Search.__call__": {
  "data": {
   "lineno": 1245,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.utils.eval_results",
    "datalad.metadata.search._AutofieldSearch",
    "datalad.metadata.search._BlobSearch",
    "datalad.metadata.search._EGrepCSSearch",
    "datalad.metadata.search._EGrepSearch",
    "datalad.metadata.search._search_from_virgin_install",
    "datalad.metadata.search.lgr",
    "datalad.support.exceptions.NoDatasetFound",
    "print",
    "repr",
    "searcher",
    "searcher.get_nohits_msg",
    "searcher.get_query",
    "searcher.show_keys",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search.SimpleAnalyzer": {
  "data": {
   "shadows": "whoosh.analysis.SimpleAnalyzer"
  },
  "type": "import"
 },
 "datalad.metadata.search.StandardAnalyzer": {
  "data": {
   "shadows": "whoosh.analysis.StandardAnalyzer"
  },
  "type": "import"
 },
 "datalad.metadata.search._AutofieldSearch": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "datalad.metadata.search._WhooshSearch"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.search._AutofieldSearch._meta2doc": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "datalad.metadata.search._meta2autofield_dict"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._AutofieldSearch._mk_parser": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "whoosh.qparser.FieldsPlugin",
    "whoosh.qparser.FuzzyTermPlugin",
    "whoosh.qparser.GtLtPlugin",
    "whoosh.qparser.MultifieldParser",
    "whoosh.qparser.SingleQuotePlugin"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._AutofieldSearch._mk_schema": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "datalad.log.log_progress",
    "datalad.metadata.metadata.query_aggregated_metadata",
    "datalad.metadata.search._meta2autofield_dict",
    "datalad.metadata.search.lgr",
    "dict",
    "len",
    "whoosh.analysis.SimpleAnalyzer",
    "whoosh.fields.ID",
    "whoosh.fields.Schema",
    "whoosh.fields.TEXT"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._BlobSearch": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "datalad.metadata.search._WhooshSearch"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.search._BlobSearch._meta2doc": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "datalad.metadata.search._meta2autofield_dict",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._BlobSearch._mk_parser": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "whoosh.qparser.FuzzyTermPlugin",
    "whoosh.qparser.PhrasePlugin",
    "whoosh.qparser.QueryParser",
    "whoosh.qparser.SequencePlugin"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._BlobSearch._mk_schema": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "whoosh.analysis.StandardAnalyzer",
    "whoosh.fields.ID",
    "whoosh.fields.Schema",
    "whoosh.fields.TEXT"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._EGrepCSSearch": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "datalad.metadata.search._Search"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.search._EGrepCSSearch.__call__": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "datalad.dochelpers.single_or_plural",
    "datalad.metadata.metadata.query_aggregated_metadata",
    "datalad.metadata.search._meta2autofield_dict",
    "datalad.metadata.search.lgr",
    "dict",
    "isinstance",
    "len",
    "set",
    "time.time"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._EGrepCSSearch.__init__": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "datalad.metadata.search._EGrepCSSearch",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._EGrepCSSearch._compile_query": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "ValueError",
    "datalad.metadata.search.re"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._EGrepCSSearch._get_keys": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "collections.defaultdict",
    "datalad.metadata.metadata.query_aggregated_metadata",
    "datalad.metadata.search._meta2autofield_dict",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._EGrepCSSearch._get_keys.key_stat": {
  "data": {
   "lineno": 839
  },
  "type": "class"
 },
 "datalad.metadata.search._EGrepCSSearch._get_keys.key_stat.__init__": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._EGrepCSSearch._xfm_query": {
  "data": {
   "lineno": 920
  },
  "type": "function"
 },
 "datalad.metadata.search._EGrepCSSearch.get_nohits_msg": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "datalad.metadata.search._EGrepCSSearch",
    "datalad.utils.get_suggestions_msg",
    "list",
    "set",
    "sorted",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._EGrepCSSearch.get_query": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "datalad.metadata.search.re",
    "datalad.utils.assure_list",
    "dict",
    "hasattr",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._EGrepCSSearch.get_repr_uvalues": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "bytes",
    "datalad.utils.shortened_repr",
    "hasattr",
    "isinstance",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._EGrepCSSearch.show_keys": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "ValueError",
    "datalad.dochelpers.single_or_plural",
    "datalad.metadata.search.lgr",
    "datalad.utils.assure_unicode",
    "len",
    "print",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._EGrepSearch": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "datalad.metadata.search._EGrepCSSearch"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.search._EGrepSearch._xfm_query": {
  "data": {
   "lineno": 973
  },
  "type": "function"
 },
 "datalad.metadata.search._Search": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.search._Search.__call__": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._Search.__init__": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "datalad.metadata.search._Search._key_matches": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "classmethod",
    "datalad.metadata.search.re"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._Search.get_nohits_msg": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "datalad.metadata.search._Search.get_query": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._Search.show_keys": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._WhooshSearch": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "datalad.metadata.search._Search"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.search._WhooshSearch.__call__": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "datalad.dochelpers.single_or_plural",
    "datalad.metadata.metadata.query_aggregated_metadata",
    "datalad.metadata.search.lgr",
    "datalad.utils.assure_unicode",
    "datalad.utils.unicode_srctypes",
    "dict",
    "enumerate",
    "isinstance",
    "os.path.join",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._WhooshSearch.__init__": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "datalad.consts.SEARCH_INDEX_DOTGITDIR",
    "datalad.metadata.search._WhooshSearch",
    "os.path.join",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._WhooshSearch._meta2doc": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._WhooshSearch._mk_parser": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._WhooshSearch._mk_schema": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._WhooshSearch._mk_search_index": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError",
    "datalad.cfg.obtain",
    "datalad.dochelpers.exc_str",
    "datalad.dochelpers.single_or_plural",
    "datalad.log.log_progress",
    "datalad.metadata.metadata.query_aggregated_metadata",
    "datalad.metadata.search.lgr",
    "datalad.metadata.search.os",
    "datalad.utils.assure_unicode",
    "dict",
    "get_ds_aggregate_db_locations",
    "len",
    "open",
    "os.path.exists",
    "os.path.join",
    "os.path.relpath",
    "str",
    "whoosh.index.EmptyIndexError",
    "whoosh.index.IndexError",
    "whoosh.index.IndexVersionError",
    "whoosh.index.LockError",
    "whoosh.index.OutOfDateError",
    "whoosh.index.create_in",
    "whoosh.index.open_dir"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._WhooshSearch.get_query": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "datalad.utils.assure_list"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._WhooshSearch.show_keys": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "NotImplementedError",
    "print"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.metadata.search._any2unicode": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "datalad.metadata.search._listdict2dictlist": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "all",
    "dict",
    "isinstance",
    "len",
    "list",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._meta2autofield_dict": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "_deep_kv",
    "datalad.metadata.search._any2unicode",
    "datalad.metadata.search._listdict2dictlist",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._meta2autofield_dict._deep_kv": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "_deep_kv",
    "datalad.metadata.search._listdict2dictlist",
    "datalad.metadata.search.os",
    "dict",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search._search_from_virgin_install": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "datalad.api.install",
    "datalad.cfg.obtain",
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.search.lgr",
    "datalad.metadata.search.os",
    "datalad.metadata.search.sys",
    "datalad.support.exceptions.NoDatasetFound",
    "datalad.ui.ui.is_interactive",
    "datalad.ui.ui.message",
    "datalad.ui.ui.yesno"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.search.as_unicode": {
  "data": {
   "shadows": "datalad.utils.as_unicode"
  },
  "type": "import"
 },
 "datalad.metadata.search.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.metadata.search.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.metadata.search.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.metadata.search.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.metadata.search.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "datalad.metadata.search.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.metadata.search.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "datalad.metadata.search.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.metadata.search.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.metadata.search.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.metadata.search.get_suggestions_msg": {
  "data": {
   "shadows": "datalad.utils.get_suggestions_msg"
  },
  "type": "import"
 },
 "datalad.metadata.search.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.metadata.search.lgr": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.metadata.search.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.metadata.search.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.search.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.metadata.search.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.search.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.metadata.search.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "datalad.metadata.search.qparse": {
  "data": {
   "shadows": "whoosh.qparser"
  },
  "type": "import"
 },
 "datalad.metadata.search.query_aggregated_metadata": {
  "data": {
   "shadows": "datalad.metadata.metadata.query_aggregated_metadata"
  },
  "type": "import"
 },
 "datalad.metadata.search.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.metadata.search.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.metadata.search.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.metadata.search.shortened_repr": {
  "data": {
   "shadows": "datalad.utils.shortened_repr"
  },
  "type": "import"
 },
 "datalad.metadata.search.single_or_plural": {
  "data": {
   "shadows": "datalad.dochelpers.single_or_plural"
  },
  "type": "import"
 },
 "datalad.metadata.search.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.metadata.search.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "datalad.metadata.search.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.metadata.search.unicode_srctypes": {
  "data": {
   "shadows": "datalad.utils.unicode_srctypes"
  },
  "type": "import"
 },
 "datalad.metadata.search.wf": {
  "data": {
   "shadows": "whoosh.fields"
  },
  "type": "import"
 },
 "datalad.metadata.search.widx": {
  "data": {
   "shadows": "whoosh.index"
  },
  "type": "import"
 },
 "datalad.metadata.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.tests.test_aggregation": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.tests.test_aggregation.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation._assert_metadata_empty": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_aggregation._dataset_hierarchy_template": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "datalad.metadata.tests.test_aggregation._get_contained_objs": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_aggregation._get_referenced_objs": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "os.path.relpath",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_aggregation.assert_dict_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_dict_equal"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.metadata": {
  "data": {
   "shadows": "datalad.api.metadata"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.test_aggregate_query": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "datalad.api.metadata",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_aggregation.test_aggregate_removal": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.tests.test_aggregation._dataset_hierarchy_template",
    "datalad.metadata.tests.test_aggregation._get_contained_objs",
    "datalad.metadata.tests.test_aggregation._get_referenced_objs",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tree",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_aggregation.test_aggregate_with_unavailable_objects_from_subds": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "all",
    "any",
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.tests.test_aggregation._dataset_hierarchy_template",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "len",
    "open",
    "os.path.join",
    "super",
    "super.aggregate_metadata",
    "super.install",
    "super.path"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_aggregation.test_basic_aggregate": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.tests.test_aggregation._dataset_hierarchy_template",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tree",
    "os.path.join",
    "print",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_aggregation.test_partial_aggregation": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tree",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_aggregation.test_publish_aggregated": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "all",
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.tests.test_aggregation._dataset_hierarchy_template",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tree",
    "list",
    "open",
    "os.path.join",
    "os.path.realpath",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_aggregation.test_reaggregate_with_unavailable_objects": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "all",
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.tests.test_aggregation._dataset_hierarchy_template",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tree",
    "len",
    "list",
    "open",
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_aggregation.test_update_strategy": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.metadata.tests.test_aggregation._dataset_hierarchy_template",
    "datalad.metadata.tests.test_aggregation._get_contained_objs",
    "datalad.metadata.tests.test_aggregation._get_referenced_objs",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tree",
    "len",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_aggregation.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_aggregation.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.tests.test_base.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.NoDatasetFound": {
  "data": {
   "shadows": "datalad.support.exceptions.NoDatasetFound"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base._compare_metadata_helper": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.eq_",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base._dataset_hierarchy_template": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "datalad.metadata.tests.test_base._get_containingds_from_agginfo": {
  "data": {
   "shadows": "datalad.metadata.metadata._get_containingds_from_agginfo"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.aggregate_metadata": {
  "data": {
   "shadows": "datalad.api.aggregate_metadata"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_dict_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_dict_equal"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.get_metadata_type": {
  "data": {
   "shadows": "datalad.metadata.metadata.get_metadata_type"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.install": {
  "data": {
   "shadows": "datalad.api.install"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.metadata": {
  "data": {
   "shadows": "datalad.api.metadata"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.query_aggregated_metadata": {
  "data": {
   "shadows": "datalad.metadata.metadata.query_aggregated_metadata"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.test_aggregation": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.api.aggregate_metadata",
    "datalad.api.install",
    "datalad.metadata.metadata.query_aggregated_metadata",
    "datalad.metadata.tests.test_base._compare_metadata_helper",
    "datalad.metadata.tests.test_base._dataset_hierarchy_template",
    "datalad.metadata.tests.test_base.logging",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_re_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tree",
    "datalad.utils.assure_unicode",
    "datalad.utils.chpwd",
    "len",
    "list",
    "os.path.join",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_bf2458": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.api.install",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_get_aggregates_fails": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.api.metadata",
    "datalad.support.exceptions.NoDatasetFound",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_get_containingds_from_agginfo": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ValueError",
    "datalad.metadata.metadata._get_containingds_from_agginfo",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "os.path.abspath",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_get_metadata_type": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.metadata.metadata.get_metadata_type",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_ignore_nondatasets": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "_kill_time",
    "cls",
    "datalad.api.Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_tempfile",
    "len",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.test_ignore_nondatasets._kill_time": {
  "data": {
   "lineno": 217
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_base.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_base.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_extract_metadata": {
  "data": {
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "datalad.metadata.tests.test_extract_metadata.Dataset": {
  "data": {
   "shadows": "datalad.coreapi.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_extract_metadata.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_extract_metadata.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_extract_metadata.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_extract_metadata.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_extract_metadata.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_extract_metadata.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_extract_metadata.copy": {
  "data": {
   "shadows": "shutil.copy"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_extract_metadata.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_extract_metadata.extract_metadata": {
  "data": {
   "shadows": "datalad.api.extract_metadata"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_extract_metadata.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_extract_metadata.libxmp": {
  "data": {
   "shadows": "libxmp"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_extract_metadata.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_extract_metadata.test_ds_extraction": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ImportError",
    "datalad.api.extract_metadata",
    "datalad.coreapi.Dataset",
    "datalad.metadata.tests.test_extract_metadata.testpath",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tempfile",
    "os.path.join",
    "shutil.copy"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_extract_metadata.test_error": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.extract_metadata",
    "datalad.metadata.tests.test_extract_metadata.testpath",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_extract_metadata.test_file_extraction": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "ImportError",
    "datalad.api.extract_metadata",
    "datalad.metadata.tests.test_extract_metadata.testpath",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_extract_metadata.testpath": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datalad.metadata.tests.test_extract_metadata.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search": {
  "data": {},
  "type": "module"
 },
 "datalad.metadata.tests.test_search.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.NoDatasetFound": {
  "data": {
   "shadows": "datalad.support.exceptions.NoDatasetFound"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search._check_mocked_install": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "datalad.api.search",
    "datalad.metadata.tests.test_search._mocked_search_results",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_is_generator",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search._mock_search": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.metadata.tests.test_search._mock_search.__call__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "datalad.metadata.tests.test_search._mocked_search_results"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search._mocked_search_results": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "datalad.metadata.tests.test_search.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.assert_is_generator": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_generator"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.copy": {
  "data": {
   "shadows": "shutil.copy"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.mutagen": {
  "data": {
   "shadows": "mutagen"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.ok_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_under_git"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.patch_config": {
  "data": {
   "shadows": "datalad.tests.utils.patch_config"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.search": {
  "data": {
   "shadows": "datalad.api.search"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.swallow_outputs": {
  "data": {
   "shadows": "datalad.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.test_listdict2dictlist": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "f"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search.test_meta2autofield_dict": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "_meta2autofield_dict",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search.test_search_non_dataset": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "datalad.api.search",
    "datalad.support.exceptions.NoDatasetFound",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search.test_search_outside1": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.search",
    "datalad.support.exceptions.NoDatasetFound",
    "datalad.tests.utils.assert_is_generator",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.patch_config",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "next"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search.test_search_outside1_install_default_ds": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.api.search",
    "datalad.metadata.tests.test_search._check_mocked_install",
    "datalad.support.exceptions.NoDatasetFound",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.patch_config",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testsui",
    "datalad.ui.ui.add_responses",
    "datalad.utils.chpwd",
    "list",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search.test_search_outside1_noninteractive_ui": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datalad.api.search",
    "datalad.support.exceptions.NoDatasetFound",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testsui",
    "datalad.utils.chpwd",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search.test_within_ds_file_search": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "datalad.api.Dataset",
    "datalad.metadata.tests.test_search.logging",
    "datalad.metadata.tests.test_search.os",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_re_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.swallow_logs",
    "datalad.utils.swallow_outputs",
    "os.makedirs",
    "os.path.dirname",
    "os.path.join",
    "shutil.copy",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.metadata.tests.test_search.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.metadata.tests.test_search.with_testsui": {
  "data": {
   "shadows": "datalad.tests.utils.with_testsui"
  },
  "type": "import"
 },
 "datalad.multiprocess": {
  "data": {
   "shadows": "nose.plugins.multiprocess"
  },
  "type": "import"
 },
 "datalad.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.plugin": {
  "data": {
   "symbols_in_volume": [
    "datalad.plugin.logging",
    "os.path.dirname"
   ]
  },
  "type": "module"
 },
 "datalad.plugin.BUILTIN_PLUGINS_PATH": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.plugin.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.plugin._get_plugins": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datalad.cfg.obtain",
    "datalad.plugin.BUILTIN_PLUGINS_PATH",
    "datalad.plugin.lgr",
    "glob.glob",
    "os.path.basename",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin._load_plugin": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "datalad.dochelpers.exc_str",
    "datalad.plugin.datalad",
    "datalad.plugin.lgr",
    "datalad.plugin.magic_plugin_symbol",
    "datalad.utils.import_module_from_file",
    "dir",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.add_readme": {
  "data": {
   "symbols_in_volume": [
    "datalad.plugin.add_readme.AddReadme"
   ]
  },
  "type": "module"
 },
 "datalad.plugin.add_readme.AddReadme": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.plugin.add_readme.AddReadme.__call__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.utils.eval_results",
    "datalad.plugin.add_readme.logging",
    "datalad.utils.assure_list",
    "dict",
    "io.open",
    "isinstance",
    "list",
    "os.path.join",
    "os.path.lexists",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.add_readme.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.__datalad_plugin__": {
  "data": {
   "lineno": 154
  },
  "type": "constant"
 },
 "datalad.plugin.add_readme.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.plugin.add_readme.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.open": {
  "data": {
   "shadows": "io.open"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.plugin.add_readme.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.plugin.addurls": {
  "data": {
   "symbols_in_volume": [
    "datalad.plugin.addurls.Addurls",
    "datalad.plugin.addurls.logging"
   ]
  },
  "type": "module"
 },
 "datalad.plugin.addurls.Addurls": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.interface.common_opts.nosave_opt",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.plugin.addurls.Addurls.__call__": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.distribution.dataset.resolve_path",
    "datalad.dochelpers.exc_str",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.log.log_progress",
    "datalad.plugin.addurls.add_meta",
    "datalad.plugin.addurls.add_urls",
    "datalad.plugin.addurls.extract",
    "datalad.plugin.addurls.lgr",
    "datalad.plugin.addurls.logging",
    "datalad.plugin.addurls.os",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.s3.get_versioned_url",
    "isinstance",
    "len",
    "open",
    "requests.exceptions.RequestException",
    "set",
    "sorted",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.AnnexBatchCommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.AnnexBatchCommandError"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.Formatter": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "datalad.plugin.addurls.string"
   ]
  },
  "type": "class"
 },
 "datalad.plugin.addurls.Formatter.__init__": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "datalad.plugin.addurls.Formatter.convert_field": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "datalad.plugin.addurls.Formatter",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.Formatter.format": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "collections.abc.Mapping",
    "datalad.plugin.addurls.Formatter",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.Formatter.get_value": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "datalad.plugin.addurls.Formatter",
    "int",
    "isinstance",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.Mapping": {
  "data": {
   "shadows": "collections.abc.Mapping"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.RepFormatter": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "datalad.plugin.addurls.Formatter"
   ]
  },
  "type": "class"
 },
 "datalad.plugin.addurls.RepFormatter.__init__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "datalad.plugin.addurls.RepFormatter",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.RepFormatter.format": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "datalad.plugin.addurls.RepFormatter",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.RepFormatter.get_value": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "datalad.plugin.addurls.RepFormatter",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.RequestException": {
  "data": {
   "shadows": "requests.exceptions.RequestException"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.__datalad_plugin__": {
  "data": {
   "lineno": 916
  },
  "type": "constant"
 },
 "datalad.plugin.addurls.__docformat__": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "datalad.plugin.addurls._format_filenames": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "KeyError",
    "datalad.plugin.addurls._get_placeholder_exception",
    "datalad.plugin.addurls.get_subpaths",
    "format_fn",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls._get_placeholder_exception": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "ValueError",
    "datalad.utils.get_suggestions_msg",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls._read": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "StopIteration",
    "ValueError",
    "datalad.dochelpers.exc_str",
    "datalad.plugin.addurls.csv",
    "datalad.plugin.addurls.json",
    "datalad.plugin.addurls.lgr",
    "dict",
    "enumerate",
    "len",
    "next",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.add_extra_filename_values": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "datalad.log.log_progress",
    "datalad.plugin.addurls.get_file_parts",
    "datalad.plugin.addurls.get_fmt_names",
    "datalad.plugin.addurls.get_url_parts",
    "datalad.plugin.addurls.lgr",
    "datalad.support.network.get_url_filename",
    "enumerate",
    "len",
    "list",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.add_meta": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "datalad.interface.results.annexjson2result",
    "datalad.log.with_result_progress",
    "datalad.plugin.addurls.lgr",
    "dict",
    "str",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.add_urls": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "datalad.dochelpers.exc_str",
    "datalad.interface.results.annexjson2result",
    "datalad.interface.results.get_status_dict",
    "datalad.log.with_result_progress",
    "datalad.plugin.addurls.lgr",
    "datalad.plugin.addurls.os",
    "datalad.support.exceptions.AnnexBatchCommandError",
    "datalad.utils.unlink"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.annexjson2result": {
  "data": {
   "shadows": "datalad.interface.results.annexjson2result"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.clean_meta_args": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.csv": {
  "data": {
   "shadows": "csv"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.extract": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "KeyError",
    "datalad.plugin.addurls.Formatter",
    "datalad.plugin.addurls.RepFormatter",
    "datalad.plugin.addurls._format_filenames",
    "datalad.plugin.addurls._get_placeholder_exception",
    "datalad.plugin.addurls._read",
    "datalad.plugin.addurls.add_extra_filename_values",
    "datalad.plugin.addurls.clean_meta_args",
    "datalad.plugin.addurls.filter_legal_metafield",
    "datalad.plugin.addurls.fmt_to_name",
    "datalad.plugin.addurls.lgr",
    "datalad.plugin.addurls.re",
    "datalad.plugin.addurls.sort_paths",
    "datalad.utils.assure_list",
    "fmt",
    "format_url",
    "functools.partial",
    "len",
    "list",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.filter_legal_metafield": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "datalad.plugin.addurls.is_legal_metafield",
    "datalad.plugin.addurls.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.fmt_to_name": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "datalad.plugin.addurls.string",
    "int",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.get_file_parts": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "datalad.plugin.addurls.os",
    "datalad.support.path.split_ext"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.get_fmt_names": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "datalad.plugin.addurls.string"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.get_subpaths": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "datalad.plugin.addurls.os"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.get_suggestions_msg": {
  "data": {
   "shadows": "datalad.utils.get_suggestions_msg"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.get_url_filename": {
  "data": {
   "shadows": "datalad.support.network.get_url_filename"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.get_url_parts": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "datalad.plugin.addurls.get_file_parts",
    "enumerate",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.get_versioned_url": {
  "data": {
   "shadows": "datalad.support.s3.get_versioned_url"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.is_legal_metafield": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "bool",
    "datalad.plugin.addurls.re"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.lgr": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "datalad.plugin.addurls.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.nosave_opt": {
  "data": {
   "shadows": "datalad.interface.common_opts.nosave_opt"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.resolve_path": {
  "data": {
   "shadows": "datalad.distribution.dataset.resolve_path"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.sort_paths": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.sort_paths.level_and_name": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "datalad.plugin.addurls.os"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.addurls.split_ext": {
  "data": {
   "shadows": "datalad.support.path.split_ext"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.unlink": {
  "data": {
   "shadows": "datalad.utils.unlink"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "datalad.plugin.addurls.with_result_progress": {
  "data": {
   "shadows": "datalad.log.with_result_progress"
  },
  "type": "import"
 },
 "datalad.plugin.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.plugin.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates": {
  "data": {
   "symbols_in_volume": [
    "datalad.plugin.check_dates.CheckDates",
    "datalad.plugin.check_dates.logging"
   ]
  },
  "type": "module"
 },
 "datalad.plugin.check_dates.CheckDates": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.plugin.check_dates.CheckDates.__call__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "datalad.dochelpers.exc_str",
    "datalad.interface.results.get_status_dict",
    "datalad.interface.utils.eval_results",
    "datalad.plugin.check_dates._git_repos",
    "datalad.plugin.check_dates._parse_date",
    "datalad.plugin.check_dates.lgr",
    "datalad.plugin.check_dates.os",
    "datalad.plugin.check_dates.time",
    "datalad.support.exceptions.InvalidGitRepositoryError",
    "datalad.support.repodates.check_dates",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.check_dates.CheckDates.custom_result_renderer": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "datalad.plugin.check_dates.json",
    "datalad.ui.ui.message",
    "dict",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.check_dates.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.InvalidGitRepositoryError": {
  "data": {
   "shadows": "datalad.support.exceptions.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.MissingExternalDependency": {
  "data": {
   "shadows": "datalad.support.exceptions.MissingExternalDependency"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.__datalad_plugin__": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "datalad.plugin.check_dates.__docformat__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.plugin.check_dates._git_repos": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "any",
    "datalad.plugin.check_dates.os"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.check_dates._parse_date": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ImportError",
    "TypeError",
    "ValueError",
    "calendar.timegm",
    "datalad.support.exceptions.MissingExternalDependency",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.check_dates.ac": {
  "data": {
   "shadows": "datalad.support.ansi_colors"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.check_dates": {
  "data": {
   "shadows": "datalad.support.repodates.check_dates"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.dateutil.parser": {
  "data": {
   "shadows": "dateutil.parser"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.lgr": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datalad.plugin.check_dates.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.timegm": {
  "data": {
   "shadows": "calendar.timegm"
  },
  "type": "import"
 },
 "datalad.plugin.check_dates.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.plugin.datalad": {
  "data": {
   "shadows": "datalad"
  },
  "type": "import"
 },
 "datalad.plugin.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.plugin.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive": {
  "data": {
   "symbols_in_volume": [
    "datalad.plugin.export_archive.ExportArchive"
   ]
  },
  "type": "module"
 },
 "datalad.plugin.export_archive.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.ExportArchive": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.plugin.export_archive.ExportArchive.__call__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "IOError",
    "add_method",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.utils.eval_results",
    "datalad.plugin.export_archive.logging",
    "datalad.plugin.export_archive.os",
    "datalad.plugin.export_archive.tarfile",
    "datalad.plugin.export_archive.zipfile",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path.exists",
    "datalad.support.path.isdir",
    "datalad.support.path.join",
    "datalad.utils.file_basename",
    "dict",
    "enumerate",
    "isinstance",
    "len",
    "os.path.dirname",
    "os.path.isabs",
    "os.path.islink",
    "os.path.join",
    "os.path.normpath",
    "sorted",
    "staticmethod",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.export_archive.ExportArchive.__call__._filter_tarinfo": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "datalad.plugin.export_archive.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.__datalad_plugin__": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "datalad.plugin.export_archive.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.plugin.export_archive.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.file_basename": {
  "data": {
   "shadows": "datalad.utils.file_basename"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.path": {
  "data": {
   "shadows": "datalad.support.path"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "datalad.plugin.export_archive.zipfile": {
  "data": {
   "shadows": "zipfile"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare": {
  "data": {
   "symbols_in_volume": [
    "datalad.plugin.export_to_figshare.ExportToFigshare",
    "datalad.plugin.export_to_figshare.logging"
   ]
  },
  "type": "module"
 },
 "datalad.plugin.export_to_figshare.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.EnsureChoice": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureChoice"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.EnsureInt": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureInt"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.EnsureStr": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureStr"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.ExportToFigshare": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureChoice",
    "datalad.support.constraints.EnsureInt",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.plugin.export_to_figshare.ExportToFigshare.__call__": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "datalad.api.add_archive_content",
    "datalad.api.export_archive",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.utils.eval_results",
    "datalad.plugin.export_to_figshare.FigshareRESTLaison",
    "datalad.plugin.export_to_figshare._enter_title",
    "datalad.plugin.export_to_figshare.lgr",
    "datalad.plugin.export_to_figshare.logging",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.ui.ui",
    "datalad.ui.ui.is_interactive",
    "datalad.ui.ui.question",
    "datalad.ui.ui.yesno",
    "datalad.utils.unlink",
    "dict",
    "int",
    "isinstance",
    "list",
    "map",
    "next",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.export_to_figshare.FigshareRESTLaison": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.plugin.export_to_figshare.FigshareRESTLaison.__call__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.plugin.export_to_figshare.json",
    "datalad.plugin.export_to_figshare.lgr",
    "locals",
    "m"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.export_to_figshare.FigshareRESTLaison.__init__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "datalad.ui.ui"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.export_to_figshare.FigshareRESTLaison.create_article": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "self.get",
    "self.post"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.export_to_figshare.FigshareRESTLaison.get": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "datalad.plugin.export_to_figshare.requests",
    "self"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.export_to_figshare.FigshareRESTLaison.get_article_ids": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "self.get",
    "self.ui.message"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.export_to_figshare.FigshareRESTLaison.post": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "datalad.plugin.export_to_figshare.requests",
    "self"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.export_to_figshare.FigshareRESTLaison.put": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "datalad.plugin.export_to_figshare.requests",
    "self"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.export_to_figshare.FigshareRESTLaison.token": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "credential",
    "datalad.downloaders.providers.Providers.from_config_files",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.export_to_figshare.FigshareRESTLaison.upload_file": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "datalad.plugin.export_to_figshare.os",
    "datalad.ui.ui.get_progressbar",
    "datalad.utils.md5sum",
    "dict",
    "open",
    "self.get",
    "self.post",
    "self.put"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.export_to_figshare.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.Providers": {
  "data": {
   "shadows": "datalad.downloaders.providers.Providers"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.__datalad_plugin__": {
  "data": {
   "lineno": 383
  },
  "type": "constant"
 },
 "datalad.plugin.export_to_figshare.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.plugin.export_to_figshare._enter_title": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "datalad.plugin.export_to_figshare._get_default_title",
    "datalad.ui.ui.error",
    "datalad.ui.ui.question",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.export_to_figshare._get_default_title": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "basename",
    "len",
    "locals"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.export_to_figshare.add_archive_content": {
  "data": {
   "shadows": "datalad.api.add_archive_content"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.export_archive": {
  "data": {
   "shadows": "datalad.api.export_archive"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.lgr": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "datalad.plugin.export_to_figshare.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.md5sum": {
  "data": {
   "shadows": "datalad.utils.md5sum"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.plugin.export_to_figshare.unlink": {
  "data": {
   "shadows": "datalad.utils.unlink"
  },
  "type": "import"
 },
 "datalad.plugin.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.plugin.import_module_from_file": {
  "data": {
   "shadows": "datalad.utils.import_module_from_file"
  },
  "type": "import"
 },
 "datalad.plugin.lgr": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "datalad.plugin.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.plugin.magic_plugin_symbol": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.plugin.no_annex": {
  "data": {
   "symbols_in_volume": [
    "datalad.plugin.no_annex.NoAnnex"
   ]
  },
  "type": "module"
 },
 "datalad.plugin.no_annex.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.EnsureDataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.EnsureDataset"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.EnsureNone": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureNone"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.NoAnnex": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "datalad.distribution.dataset.EnsureDataset",
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.constraints.EnsureNone",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.plugin.no_annex.NoAnnex.__call__": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "any",
    "datalad.distribution.dataset.datasetmethod",
    "datalad.distribution.dataset.require_dataset",
    "datalad.interface.utils.eval_results",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.utils.assure_list",
    "dict",
    "isinstance",
    "os.makedirs",
    "os.path.exists",
    "os.path.isabs",
    "os.path.join",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.no_annex.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.__datalad_plugin__": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "datalad.plugin.no_annex.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.plugin.no_annex.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.datasetmethod": {
  "data": {
   "shadows": "datalad.distribution.dataset.datasetmethod"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.eval_results": {
  "data": {
   "shadows": "datalad.interface.utils.eval_results"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.makedirsfx": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.plugin.no_annex.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.plugin.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.plugin.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.plugin.tests.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.plugin.tests.test_addurls": {
  "data": {},
  "type": "module"
 },
 "datalad.plugin.tests.test_addurls.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.HTTPPath": {
  "data": {
   "shadows": "datalad.tests.utils.HTTPPath"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.ST_DATA": {
  "data": {
   "lineno": 231
  },
  "type": "constant"
 },
 "datalad.plugin.tests.test_addurls.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.setup_class": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "classmethod",
    "datalad.plugin.tests.test_addurls.json",
    "datalad.plugin.tests.test_addurls.tempfile",
    "datalad.tests.utils.HTTPPath",
    "datalad.tests.utils.create_tree",
    "datalad.utils.get_tempfile_kwargs",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.teardown_class": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "classmethod",
    "datalad.utils.rmtemp"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.cfg.get",
    "datalad.plugin.tests.test_addurls.logging",
    "datalad.plugin.tests.test_addurls.os",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.on_windows",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "get_annex_commit_counts",
    "open",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls.get_annex_commit_counts": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_create_newdataset": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "datalad.api.addurls",
    "datalad.plugin.tests.test_addurls.os",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_deeper": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.plugin.tests.test_addurls.os",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.with_tempfile",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_dropped_urls": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.plugin.tests.test_addurls.logging",
    "datalad.tests.utils.assert_re_in",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_invalid_input": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tree",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_metafail": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_metafail.set_meta": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "fn"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_no_rows": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.plugin.tests.test_addurls.logging",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_repindex": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.with_tempfile",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_subdataset": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.api.subdatasets",
    "datalad.plugin.tests.test_addurls.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "dict",
    "os.path.join",
    "set",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_unbound_dataset": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "check",
    "datalad.api.Dataset",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_unbound_dataset.check": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "datalad.api.addurls",
    "datalad.plugin.tests.test_addurls.os",
    "datalad.plugin.tests.test_addurls.shutil",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.ok_exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_url_filename": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_url_filename_fail": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_url_parts": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_version": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.consts.WEB_SPECIAL_REMOTE_UUID",
    "datalad.plugin.tests.test_addurls.logging",
    "datalad.plugin.tests.test_addurls.os",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "str",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.TestAddurls.test_addurls_version.version_fn": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.WEB_SPECIAL_REMOTE_UUID": {
  "data": {
   "shadows": "datalad.consts.WEB_SPECIAL_REMOTE_UUID"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.addurls": {
  "data": {
   "shadows": "datalad.api.addurls"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.assert_dict_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_dict_equal"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.au": {
  "data": {
   "shadows": "datalad.plugin.addurls"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.dl_cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.get_tempfile_kwargs": {
  "data": {
   "shadows": "datalad.utils.get_tempfile_kwargs"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.json_stream": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "datalad.plugin.tests.test_addurls.json",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.ok_exists": {
  "data": {
   "shadows": "datalad.tests.utils.ok_exists"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.rmtemp": {
  "data": {
   "shadows": "datalad.utils.rmtemp"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.subdatasets": {
  "data": {
   "shadows": "datalad.api.subdatasets"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.test_addurls_dry_run": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.plugin.tests.test_addurls.json",
    "datalad.plugin.tests.test_addurls.logging",
    "datalad.plugin.tests.test_addurls.os",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_addurls_nonannex_repo": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_addurls_unknown_placeholder": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tree",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_clean_meta_args": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "datalad.plugin.addurls.clean_meta_args",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_extract": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "datalad.plugin.addurls.extract",
    "datalad.plugin.tests.test_addurls.ST_DATA",
    "datalad.plugin.tests.test_addurls.json_stream",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_extract_csv_json_equal": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "datalad.plugin.addurls.extract",
    "datalad.plugin.tests.test_addurls.ST_DATA",
    "datalad.plugin.tests.test_addurls.json_stream",
    "datalad.tests.utils.eq_",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_extract_disable_autometa": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "datalad.plugin.addurls.extract",
    "datalad.plugin.tests.test_addurls.ST_DATA",
    "datalad.plugin.tests.test_addurls.json_stream",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_extract_exclude_autometa_regexp": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "datalad.plugin.addurls.extract",
    "datalad.plugin.tests.test_addurls.ST_DATA",
    "datalad.plugin.tests.test_addurls.json_stream",
    "datalad.tests.utils.assert_dict_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_extract_wrong_input_type": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "ValueError",
    "datalad.plugin.addurls.extract",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_filter_legal_metafield": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "datalad.plugin.addurls.filter_legal_metafield",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_fmt_to_name": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "datalad.plugin.addurls.fmt_to_name",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_formatter": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "KeyError",
    "datalad.plugin.addurls.Formatter",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_formatter_lower_case": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datalad.plugin.addurls.Formatter",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_formatter_missing_arg": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "datalad.plugin.addurls.Formatter",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_formatter_no_idx_map": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "KeyError",
    "datalad.plugin.addurls.Formatter",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_formatter_no_mapping_arg": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "datalad.plugin.addurls.Formatter",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_formatter_placeholder_nonpermitted_chars": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "KeyError",
    "datalad.plugin.addurls.Formatter",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_formatter_placeholder_with_spaces": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "datalad.plugin.addurls.Formatter",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_get_file_parts": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "datalad.plugin.addurls.get_file_parts",
    "datalad.tests.utils.assert_dict_equal"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_get_subpaths": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "datalad.plugin.addurls.get_subpaths",
    "datalad.tests.utils.eq_",
    "os.path.join",
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_get_url_parts": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "datalad.plugin.addurls.get_url_parts",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_is_legal_metafield": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "datalad.plugin.addurls.is_legal_metafield",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_true"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_repformatter": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "datalad.plugin.addurls.RepFormatter",
    "datalad.tests.utils.eq_",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.test_sort_paths": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "datalad.plugin.addurls.sort_paths",
    "datalad.tests.utils.eq_",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_addurls.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_addurls.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates": {
  "data": {
   "symbols_in_volume": [
    "datalad.api.check_dates",
    "functools.partial"
   ]
  },
  "type": "module"
 },
 "datalad.plugin.tests.test_check_dates.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.assert_dict_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_dict_equal"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.call": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datalad.plugin.tests.test_check_dates.check_dates": {
  "data": {
   "shadows": "datalad.api.check_dates"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.set_date": {
  "data": {
   "shadows": "datalad.support.tests.test_repodates.set_date"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.skip_if_no_module": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_module"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.swallow_outputs": {
  "data": {
   "shadows": "datalad.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_check_dates.test_check_dates": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datalad.api.check_dates",
    "datalad.plugin.tests.test_check_dates.call",
    "datalad.plugin.tests.test_check_dates.json",
    "datalad.plugin.tests.test_check_dates.logging",
    "datalad.plugin.tests.test_check_dates.os",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.tests.test_repodates.set_date",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_no_module",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "datalad.utils.swallow_logs",
    "datalad.utils.swallow_outputs",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_check_dates.test_check_dates_invalid_date": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "datalad.api.check_dates",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.skip_if_no_module",
    "datalad.utils.swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_check_dates.test_check_dates_invalid_repo": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datalad.plugin.tests.test_check_dates.call",
    "datalad.plugin.tests.test_check_dates.logging",
    "datalad.tests.utils.with_tree",
    "datalad.utils.swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_check_dates.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive": {
  "data": {},
  "type": "module"
 },
 "datalad.plugin.tests.test_export_archive.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive._dataset_template": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "datalad.plugin.tests.test_export_archive.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.export_archive": {
  "data": {
   "shadows": "datalad.api.export_archive"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.md5sum": {
  "data": {
   "shadows": "datalad.utils.md5sum"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.test_archive": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "IOError",
    "check_contents",
    "datalad.api.Dataset",
    "datalad.plugin.tests.test_export_archive._dataset_template",
    "datalad.plugin.tests.test_export_archive.os",
    "datalad.plugin.tests.test_export_archive.time",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_not_equal",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "datalad.utils.md5sum",
    "list",
    "os.path.isabs",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_export_archive.test_archive.check_contents": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "datalad.plugin.tests.test_export_archive.tarfile",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.ok_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_export_archive.test_failure": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "datalad.api.Dataset",
    "datalad.api.export_archive",
    "datalad.plugin.tests.test_export_archive._dataset_template",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_export_archive.test_zip_archive": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.plugin.tests.test_export_archive._dataset_template",
    "datalad.plugin.tests.test_export_archive.os",
    "datalad.plugin.tests.test_export_archive.time",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "datalad.utils.md5sum",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_export_archive.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_archive.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare": {
  "data": {},
  "type": "module"
 },
 "datalad.plugin.tests.test_export_to_figshare.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.export_archive": {
  "data": {
   "shadows": "datalad.api.export_archive"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.md5sum": {
  "data": {
   "shadows": "datalad.utils.md5sum"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.op": {
  "data": {
   "shadows": "datalad.support.path"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_export_to_figshare.test_get_default_title": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "_get_default_title",
    "datalad.api.Dataset",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.path",
    "datalad.support.path.basename",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tree",
    "locals"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_export_to_figshare.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins": {
  "data": {},
  "type": "module"
 },
 "datalad.plugin.tests.test_plugins.Dataset": {
  "data": {
   "shadows": "datalad.coreapi.Dataset"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.OBSCURE_FILENAME": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_FILENAME"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins._HIDDEN": {
  "data": {
   "shadows": "datalad.plugin.wtf._HIDDEN"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.__version__": {
  "data": {
   "shadows": "datalad.version.__version__"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins._ds_template": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "datalad.plugin.tests.test_plugins.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.broken_plugin": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datalad.plugin.tests.test_plugins.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.dummy_plugin": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "datalad.plugin.tests.test_plugins.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.no_annex": {
  "data": {
   "shadows": "datalad.api.no_annex"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.nodocs_plugin": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datalad.plugin.tests.test_plugins.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.pyperclip": {
  "data": {
   "shadows": "pyperclip"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.skip_if_no_module": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_module"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.test_add_readme": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "datalad.coreapi.Dataset",
    "datalad.plugin.tests.test_plugins._ds_template",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tree",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_plugins.test_no_annex": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "Path",
    "datalad.api.create",
    "datalad.api.no_annex",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tempfile",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_plugins.test_wtf": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "AttributeError",
    "datalad.api.create",
    "datalad.api.wtf",
    "datalad.dochelpers.exc_str",
    "datalad.plugin.tests.test_plugins.pyperclip",
    "datalad.plugin.wtf._HIDDEN",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.skip_if_no_module",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tree",
    "datalad.utils.assure_unicode",
    "datalad.version.__version__",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.plugin.tests.test_plugins.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.plugin.tests.test_plugins.wtf": {
  "data": {
   "shadows": "datalad.api.wtf"
  },
  "type": "import"
 },
 "datalad.plugintest": {
  "data": {
   "shadows": "nose.plugins.plugintest"
  },
  "type": "import"
 },
 "datalad.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "datalad.resources.procedures.cfg_metadatatypes": {
  "data": {
   "symbols_in_volume": [
    "datalad.consts.DATASET_CONFIG_FILE",
    "datalad.distribution.dataset.require_dataset",
    "datalad.resources.procedures.cfg_metadatatypes.ds",
    "datalad.resources.procedures.cfg_metadatatypes.sys",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "datalad.resources.procedures.cfg_metadatatypes.DATASET_CONFIG_FILE": {
  "data": {
   "shadows": "datalad.consts.DATASET_CONFIG_FILE"
  },
  "type": "import"
 },
 "datalad.resources.procedures.cfg_metadatatypes.ds": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datalad.resources.procedures.cfg_metadatatypes.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.resources.procedures.cfg_metadatatypes.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.resources.procedures.cfg_metadatatypes.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.resources.procedures.cfg_text2git": {
  "data": {
   "symbols_in_volume": [
    "datalad.distribution.dataset.require_dataset",
    "datalad.resources.procedures.cfg_text2git.annex_largefiles",
    "datalad.resources.procedures.cfg_text2git.attrs",
    "datalad.resources.procedures.cfg_text2git.ds",
    "datalad.resources.procedures.cfg_text2git.git_attributes_file",
    "datalad.resources.procedures.cfg_text2git.sys",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "datalad.resources.procedures.cfg_text2git.annex_largefiles": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.resources.procedures.cfg_text2git.attrs": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "datalad.resources.procedures.cfg_text2git.ds": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "datalad.resources.procedures.cfg_text2git.git_attributes_file": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datalad.resources.procedures.cfg_text2git.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.resources.procedures.cfg_text2git.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.resources.procedures.cfg_text2git.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.resources.procedures.cfg_yoda": {
  "data": {
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.distribution.dataset.require_dataset",
    "datalad.resources.procedures.cfg_yoda.README_code",
    "datalad.resources.procedures.cfg_yoda.README_top",
    "datalad.resources.procedures.cfg_yoda.dirty",
    "datalad.resources.procedures.cfg_yoda.ds",
    "datalad.resources.procedures.cfg_yoda.force_in_git",
    "datalad.resources.procedures.cfg_yoda.sys",
    "datalad.resources.procedures.cfg_yoda.tmpl",
    "datalad.resources.procedures.cfg_yoda.to_modify",
    "datalad.utils.create_tree",
    "os.path.join"
   ]
  },
  "type": "module"
 },
 "datalad.resources.procedures.cfg_yoda.README_code": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "datalad.resources.procedures.cfg_yoda.README_top": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datalad.resources.procedures.cfg_yoda.create_tree": {
  "data": {
   "shadows": "datalad.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.resources.procedures.cfg_yoda.dirty": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "datalad.resources.procedures.cfg_yoda.ds": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.resources.procedures.cfg_yoda.force_in_git": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "datalad.resources.procedures.cfg_yoda.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.resources.procedures.cfg_yoda.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.resources.procedures.cfg_yoda.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.resources.procedures.cfg_yoda.tmpl": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "datalad.resources.procedures.cfg_yoda.to_modify": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "datalad.rmtemp": {
  "data": {
   "shadows": "datalad.tests.utils.rmtemp"
  },
  "type": "import"
 },
 "datalad.setup_package": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "datalad._test_states",
    "datalad.cfg",
    "datalad.consts.DATASETS_TOPURL",
    "datalad.os",
    "datalad.support.annexrepo.AnnexRepo._ALLOW_LOCAL_URLS",
    "datalad.tests._TEMP_PATHS_GENERATED.append",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.with_testrepos",
    "datalad.ui.ui.backend",
    "datalad.ui.ui.set_backend",
    "datalad.utils.make_tempfile",
    "io.StringIO",
    "nose.ext.dtcompat.StringIO",
    "nose.plugins.capture.StringIO",
    "nose.plugins.multiprocess.StringIO",
    "nose.plugins.plugintest.StringIO",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.setup_package.StringIO": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "io.StringIO"
   ]
  },
  "type": "class"
 },
 "datalad.ssh_manager": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "datalad.support": {
  "data": {},
  "type": "module"
 },
 "datalad.support.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.support.annexrepo": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.annexrepo.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.annexrepo.AnnexInitOutput": {
  "data": {
   "lineno": 3680,
   "symbols_in_volume": [
    "datalad.cmd.WitlessProtocol"
   ]
  },
  "type": "class"
 },
 "datalad.support.annexrepo.AnnexInitOutput.pipe_data_received": {
  "data": {
   "lineno": 3684,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexJsonProtocol": {
  "data": {
   "lineno": 3531,
   "symbols_in_volume": [
    "datalad.cmd.WitlessProtocol"
   ]
  },
  "type": "class"
 },
 "datalad.support.annexrepo.AnnexJsonProtocol.__init__": {
  "data": {
   "lineno": 3543,
   "symbols_in_volume": [
    "id",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexJsonProtocol._prepare_result": {
  "data": {
   "lineno": 3660,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexJsonProtocol._proc_json_record": {
  "data": {
   "lineno": 3587,
   "symbols_in_volume": [
    "datalad.log.log_progress",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.lgr",
    "float",
    "frozenset",
    "hash",
    "id"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexJsonProtocol.connection_made": {
  "data": {
   "lineno": 3549,
   "symbols_in_volume": [
    "datalad.log.log_progress",
    "datalad.support.annexrepo.lgr",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexJsonProtocol.pipe_data_received": {
  "data": {
   "lineno": 3567,
   "symbols_in_volume": [
    "Exception",
    "datalad.support.annexrepo.lgr",
    "datalad.support.json_py.json_loads",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexJsonProtocol.process_exited": {
  "data": {
   "lineno": 3669,
   "symbols_in_volume": [
    "datalad.log.log_progress",
    "datalad.support.annexrepo.lgr",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "datalad.consts.WEB_SPECIAL_REMOTE_UUID",
    "weakref.WeakValueDictionary"
   ]
  },
  "type": "class"
 },
 "datalad.support.annexrepo.AnnexRepo.__del__": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "TypeError",
    "datalad.support.annexrepo.AnnexRepo",
    "hasattr",
    "safe__del__debug",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.__del__.safe__del__debug": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "AttributeError",
    "NameError",
    "datalad.dochelpers.exc_str",
    "datalad.support.annexrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.__init__": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "DirectModeNoLongerSupportedError",
    "InvalidAnnexRepositoryError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.BatchedAnnexes",
    "datalad.support.annexrepo.lgr",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._allow_local_urls": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._annex_custom_command": {
  "data": {
   "lineno": 2803,
   "symbols_in_volume": [
    "datalad.utils.quote_cmdlinearg",
    "datalad.utils.split_cmdline",
    "isinstance",
    "normalize_paths",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._check_files": {
  "data": {
   "lineno": 1738,
   "symbols_in_volume": [
    "bool",
    "fn",
    "os.path.normpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._check_git_annex_version": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "MissingExternalDependency",
    "OutdatedExternalDependency",
    "classmethod",
    "datalad.utils.get_linux_distribution",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._check_version_kludges": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._flyweight_invalid": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._get_expected_files": {
  "data": {
   "lineno": 1362,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "int",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._init": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._is_annex_work_tree_message": {
  "data": {
   "lineno": 3239,
   "symbols_in_volume": [
    "datalad.support.annexrepo.re",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._is_direct_mode_from_config": {
  "data": {
   "lineno": 1140
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._mark_content_availability": {
  "data": {
   "lineno": 3248,
   "symbols_in_volume": [
    "GitRepo.get_git_dir",
    "datalad.utils.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._run_annex_command": {
  "data": {
   "lineno": 976,
   "symbols_in_volume": [
    "CommandNotAvailableError",
    "ValueError",
    "any",
    "callable",
    "datalad.cmd.GitWitlessRunner",
    "datalad.cmd.run_gitcommand_on_file_list_chunks",
    "datalad.support.annexrepo.lgr",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._run_annex_command._protocol": {
  "data": {
   "lineno": 1068,
   "symbols_in_volume": [
    "bool",
    "datalad.cmd.WitlessProtocol"
   ]
  },
  "type": "class"
 },
 "datalad.support.annexrepo.AnnexRepo._run_annex_command_json": {
  "data": {
   "lineno": 2178,
   "symbols_in_volume": [
    "BrokenExternalDependency",
    "OutOfSpaceError",
    "RemoteNotAvailableError",
    "RuntimeError",
    "_log",
    "all",
    "datalad.support.annexrepo.ProcessAnnexProgressIndicators",
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.re",
    "datalad.support.json_py.json_loads",
    "datalad.utils.partition",
    "dict",
    "len",
    "max",
    "min",
    "multiprocessing.cpu_count",
    "os.linesep",
    "os.linesep.join",
    "shorten"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._run_simple_annex_command": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.support.annexrepo.re",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._save_add": {
  "data": {
   "lineno": 3400,
   "symbols_in_volume": [
    "GitRepo._save_add",
    "datalad.interface.results.get_status_dict",
    "datalad.support.annexrepo.lgr",
    "datalad.ui.ui.is_interactive",
    "datalad.utils.PurePosixPath",
    "datalad.utils.on_windows",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._save_post": {
  "data": {
   "lineno": 3465,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._set_direct_mode": {
  "data": {
   "lineno": 1193,
   "symbols_in_volume": [
    "CommandNotAvailableError"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._set_shared_connection": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "datalad.ssh_manager.get_connection",
    "datalad.support.network.is_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo._whereis_json_to_dict": {
  "data": {
   "lineno": 2165,
   "symbols_in_volume": [
    "datalad.consts.WEB_SPECIAL_REMOTE_UUID"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.add": {
  "data": {
   "lineno": 1412,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.add_": {
  "data": {
   "lineno": 1449,
   "symbols_in_volume": [
    "InsufficientArgumentsError",
    "_get_to_be_added_recs",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.lgr",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.add_._get_to_be_added_recs": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "DirectModeNoLongerSupportedError",
    "datalad.dochelpers.exc_str",
    "datalad.support.annexrepo.AnnexRepo",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.add_remote": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.add_url_to_file": {
  "data": {
   "lineno": 1900,
   "symbols_in_volume": [
    "AnnexBatchCommandError",
    "AssertionError",
    "Exception",
    "bcmd",
    "datalad.dochelpers.exc_str",
    "datalad.support.annexrepo.lgr",
    "datalad.utils.unlink",
    "dict",
    "len",
    "os.path.join",
    "os.path.lexists",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.add_urls": {
  "data": {
   "lineno": 2006,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.adjust": {
  "data": {
   "lineno": 1638,
   "symbols_in_volume": [
    "CommandNotAvailableError",
    "to_options"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.annexstatus": {
  "data": {
   "lineno": 3384
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.check_direct_mode_support": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.check_repository_versions": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "classmethod",
    "datalad.cmd.Runner",
    "int",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.copy_to": {
  "data": {
   "lineno": 2956,
   "symbols_in_volume": [
    "IncompleteResultsError",
    "ValueError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.lgr",
    "datalad.utils.split_cmdline",
    "len",
    "list",
    "normalize_paths",
    "os.path.isdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.default_backends": {
  "data": {
   "lineno": 2889,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.drop": {
  "data": {
   "lineno": 2071,
   "symbols_in_volume": [
    "InsufficientArgumentsError",
    "any",
    "datalad.utils.assure_list",
    "len",
    "normalize_paths"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.drop_key": {
  "data": {
   "lineno": 2131,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.enable_remote": {
  "data": {
   "lineno": 1827,
   "symbols_in_volume": [
    "AccessDeniedError",
    "AccessFailedError",
    "datalad.support.annexrepo.re",
    "datalad.utils.ensure_list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.file_has_content": {
  "data": {
   "lineno": 1758,
   "symbols_in_volume": [
    "normalize_paths"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.find": {
  "data": {
   "lineno": 1690,
   "symbols_in_volume": [
    "any",
    "find",
    "len",
    "normalize_paths",
    "os.path.isdir",
    "os.path.join",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.fsck": {
  "data": {
   "lineno": 2901,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "RemoteNotAvailableError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.lgr",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_annexed_files": {
  "data": {
   "lineno": 2555,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_content_annexinfo": {
  "data": {
   "lineno": 3279,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.lgr",
    "datalad.utils.PurePosixPath",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_contentlocation": {
  "data": {
   "lineno": 2701,
   "symbols_in_volume": [
    "os.linesep"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_corresponding_branch": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "NotImplementedError",
    "datalad.support.annexrepo.lgr",
    "os.linesep"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_description": {
  "data": {
   "lineno": 3060,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "itertools.chain.from_iterable",
    "len",
    "list",
    "match",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_file_backend": {
  "data": {
   "lineno": 2869,
   "symbols_in_volume": [
    "normalize_paths"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_file_key": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "FileInGitError",
    "FileNotInAnnexError",
    "IOError",
    "datalad.support.annexrepo.lgr",
    "filter",
    "len",
    "list",
    "os.linesep",
    "os.path.exists",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_file_size": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "datalad.support.annexrepo.os",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_groupwanted": {
  "data": {
   "lineno": 2657
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_key_backend": {
  "data": {
   "lineno": 2864,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_metadata": {
  "data": {
   "lineno": 3099,
   "symbols_in_volume": [
    "_format_response",
    "datalad.support.annexrepo.json",
    "datalad.utils.assure_list",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_metadata._format_response": {
  "data": {
   "lineno": 3129,
   "symbols_in_volume": [
    "datalad.utils.Path",
    "datalad.utils.PurePosixPath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_preferred_content": {
  "data": {
   "lineno": 2591,
   "symbols_in_volume": [
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_remotes": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "GitRepo",
    "datalad.dochelpers.borrowkwargs",
    "datalad.support.annexrepo.AnnexRepo",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_size_from_key": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_special_remotes": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.re",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_toppath": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "OSError",
    "classmethod",
    "datalad.cmd.GitRunner",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.utils.Path",
    "os.pardir",
    "os.path.dirname",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_tracking_branch": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.get_urls": {
  "data": {
   "lineno": 2054,
   "symbols_in_volume": [
    "datalad.consts.WEB_SPECIAL_REMOTE_UUID"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.info": {
  "data": {
   "lineno": 2467,
   "symbols_in_volume": [
    "int",
    "normalize_paths",
    "os.path.normpath",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.init_remote": {
  "data": {
   "lineno": 1810
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_available": {
  "data": {
   "lineno": 2738,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "list",
    "normalize_paths"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_crippled_fs": {
  "data": {
   "lineno": 1168
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_direct_mode": {
  "data": {
   "lineno": 1154
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_initialized": {
  "data": {
   "lineno": 778
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_managed_branch": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_remote_annex_ignored": {
  "data": {
   "lineno": 867
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_special_annex_remote": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "RemoteNotAvailableError",
    "any",
    "datalad.support.annexrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_under_annex": {
  "data": {
   "lineno": 1777,
   "symbols_in_volume": [
    "normalize_paths",
    "os.path.curdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_under_annex.check": {
  "data": {
   "lineno": 1801,
   "symbols_in_volume": [
    "os.path.isdir"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_valid_annex": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "datalad.dochelpers.borrowdoc"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_valid_repo": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "GitRepo",
    "classmethod",
    "git_file_has_annex",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.is_valid_repo.git_file_has_annex": {
  "data": {
   "lineno": 804,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.os",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.localsync": {
  "data": {
   "lineno": 3472,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "datalad.utils.assure_list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.merge_annex": {
  "data": {
   "lineno": 1854
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.migrate_backend": {
  "data": {
   "lineno": 2837,
   "symbols_in_volume": [
    "CommandNotAvailableError",
    "normalize_paths"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.precommit": {
  "data": {
   "lineno": 2675,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.remove": {
  "data": {
   "lineno": 2684,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "normalize_paths",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.repo_info": {
  "data": {
   "lineno": 2516,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "int",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.rm_url": {
  "data": {
   "lineno": 2041
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_default_backend": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_groupwanted": {
  "data": {
   "lineno": 2669
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_metadata": {
  "data": {
   "lineno": 3157,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_metadata_": {
  "data": {
   "lineno": 3200,
   "symbols_in_volume": [
    "_genspec",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_metadata_._genspec": {
  "data": {
   "lineno": 3205,
   "symbols_in_volume": [
    "datalad.utils.assure_list"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_preferred_content": {
  "data": {
   "lineno": 2623,
   "symbols_in_volume": [
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_remote_dead": {
  "data": {
   "lineno": 862
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.set_remote_url": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.supports_unlocked_pointers": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "KeyError",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.sync": {
  "data": {
   "lineno": 1857,
   "symbols_in_volume": [
    "all",
    "datalad.utils.assure_list",
    "to_options"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.unannex": {
  "data": {
   "lineno": 1663
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.unlock": {
  "data": {
   "lineno": 1615
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.uuid": {
  "data": {
   "lineno": 3047,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.AnnexRepo.whereis": {
  "data": {
   "lineno": 2383,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.annexrepo.lgr",
    "datalad.utils.Path",
    "datalad.utils.PurePosixPath",
    "datalad.utils.assure_list",
    "datalad.utils.on_windows",
    "map",
    "normalize_paths",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnex": {
  "data": {
   "lineno": 3770,
   "symbols_in_volume": [
    "datalad.cmd.BatchedCommand",
    "datalad.utils.auto_repr"
   ]
  },
  "type": "class"
 },
 "datalad.support.annexrepo.BatchedAnnex.__init__": {
  "data": {
   "lineno": 3775,
   "symbols_in_volume": [
    "datalad.support.annexrepo.BatchedAnnex",
    "datalad.support.annexrepo.json",
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.readline_json",
    "isinstance",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnexes": {
  "data": {
   "lineno": 3696,
   "symbols_in_volume": [
    "datalad.cmd.SafeDelCloseMixin",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.support.annexrepo.BatchedAnnexes.__init__": {
  "data": {
   "lineno": 3700,
   "symbols_in_volume": [
    "datalad.support.annexrepo.BatchedAnnexes",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnexes.clear": {
  "data": {
   "lineno": 3732,
   "symbols_in_volume": [
    "datalad.support.annexrepo.BatchedAnnexes",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnexes.close": {
  "data": {
   "lineno": 3738
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedAnnexes.get": {
  "data": {
   "lineno": 3705,
   "symbols_in_volume": [
    "datalad.support.annexrepo.BatchedAnnex"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.BatchedCommand": {
  "data": {
   "shadows": "datalad.cmd.BatchedCommand"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.GitWitlessRunner": {
  "data": {
   "shadows": "datalad.cmd.GitWitlessRunner"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.N_AUTO_JOBS": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "datalad.support.annexrepo.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators": {
  "data": {
   "lineno": 3807,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators.__call__": {
  "data": {
   "lineno": 3881,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo._get_size_from_perc_complete",
    "datalad.support.annexrepo.json",
    "datalad.support.annexrepo.lgr",
    "datalad.support.json_py.json_loads",
    "datalad.ui.ui.get_progressbar",
    "datalad.ui.utils.get_console_width",
    "int",
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators.__getitem__": {
  "data": {
   "lineno": 3840
  },
  "type": "function"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators.__init__": {
  "data": {
   "lineno": 3814,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators._log_info": {
  "data": {
   "lineno": 3873,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators._update_pbar": {
  "data": {
   "lineno": 3849,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators.finish": {
  "data": {
   "lineno": 3997,
   "symbols_in_volume": [
    "datalad.support.annexrepo.lgr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.ProcessAnnexProgressIndicators.start": {
  "data": {
   "lineno": 3831,
   "symbols_in_volume": [
    "bool",
    "datalad.ui.ui.get_progressbar",
    "filter",
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.PurePosixPath": {
  "data": {
   "shadows": "datalad.utils.PurePosixPath"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.SafeDelCloseMixin": {
  "data": {
   "shadows": "datalad.cmd.SafeDelCloseMixin"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.WEB_SPECIAL_REMOTE_UUID": {
  "data": {
   "shadows": "datalad.consts.WEB_SPECIAL_REMOTE_UUID"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.WeakValueDictionary": {
  "data": {
   "shadows": "weakref.WeakValueDictionary"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.WitlessProtocol": {
  "data": {
   "shadows": "datalad.cmd.WitlessProtocol"
  },
  "type": "import"
 },
 "datalad.support.annexrepo._get_size_from_perc_complete": {
  "data": {
   "lineno": 3796,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.annexrepo.math",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.assure_list": {
  "data": {
   "shadows": "datalad.utils.assure_list"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.auto_repr": {
  "data": {
   "shadows": "datalad.utils.auto_repr"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.borrowdoc": {
  "data": {
   "shadows": "datalad.dochelpers.borrowdoc"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.borrowkwargs": {
  "data": {
   "shadows": "datalad.dochelpers.borrowkwargs"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.cpu_count": {
  "data": {
   "shadows": "multiprocessing.cpu_count"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.ensure_list": {
  "data": {
   "shadows": "datalad.utils.ensure_list"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.get_linux_distribution": {
  "data": {
   "shadows": "datalad.utils.get_linux_distribution"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.is_ssh": {
  "data": {
   "shadows": "datalad.support.network.is_ssh"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.islink": {
  "data": {
   "shadows": "os.path.islink"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.json_loads": {
  "data": {
   "shadows": "datalad.support.json_py.json_loads"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.lgr": {
  "data": {
   "lineno": 104
  },
  "type": "constant"
 },
 "datalad.support.annexrepo.linesep": {
  "data": {
   "shadows": "os.linesep"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.pardir": {
  "data": {
   "shadows": "os.pardir"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.partition": {
  "data": {
   "shadows": "datalad.utils.partition"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.quote_cmdlinearg": {
  "data": {
   "shadows": "datalad.utils.quote_cmdlinearg"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.readline_json": {
  "data": {
   "lineno": 3765,
   "symbols_in_volume": [
    "datalad.support.json_py.json_loads"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.readlines_until_ok_or_failed": {
  "data": {
   "lineno": 3747,
   "symbols_in_volume": [
    "IOError",
    "datalad.support.annexrepo.lgr",
    "datalad.support.annexrepo.re"
   ]
  },
  "type": "function"
 },
 "datalad.support.annexrepo.run_gitcommand_on_file_list_chunks": {
  "data": {
   "shadows": "datalad.cmd.run_gitcommand_on_file_list_chunks"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.split_cmdline": {
  "data": {
   "shadows": "datalad.utils.split_cmdline"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.ui_utils": {
  "data": {
   "shadows": "datalad.ui.utils"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.unlink": {
  "data": {
   "shadows": "datalad.utils.unlink"
  },
  "type": "import"
 },
 "datalad.support.annexrepo.ut": {
  "data": {
   "shadows": "datalad.utils"
  },
  "type": "import"
 },
 "datalad.support.ansi_colors": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.ansi_colors.BOLD",
    "datalad.support.ansi_colors.UNDERLINE",
    "range"
   ]
  },
  "type": "module"
 },
 "datalad.support.ansi_colors.BOLD": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.BOLD_SEQ": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.COLOR_SEQ": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.DATASET": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.FIELD": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.LOG_LEVEL_COLORS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.RESET_SEQ": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.RESULT_STATUS_COLORS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.UNDERLINE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.support.ansi_colors.color_enabled": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "datalad.support.ansi_colors.os"
   ]
  },
  "type": "function"
 },
 "datalad.support.ansi_colors.color_status": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datalad.support.ansi_colors.RESULT_STATUS_COLORS",
    "datalad.support.ansi_colors.color_word"
   ]
  },
  "type": "function"
 },
 "datalad.support.ansi_colors.color_word": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.support.ansi_colors.COLOR_SEQ",
    "datalad.support.ansi_colors.RESET_SEQ",
    "datalad.support.ansi_colors.color_enabled"
   ]
  },
  "type": "function"
 },
 "datalad.support.ansi_colors.format_msg": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datalad.support.ansi_colors.BOLD_SEQ",
    "datalad.support.ansi_colors.RESET_SEQ",
    "datalad.support.ansi_colors.color_enabled"
   ]
  },
  "type": "function"
 },
 "datalad.support.ansi_colors.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.archive_utils_7z": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.archive_utils_7z.logging",
    "datalad.support.external_versions.external_versions.check"
   ]
  },
  "type": "module"
 },
 "datalad.support.archive_utils_7z.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.support.archive_utils_7z.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.support.archive_utils_7z._normalize_fname_suffixes": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "datalad.support.archive_utils_7z.compress_files": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "datalad.cmd.Runner",
    "datalad.support.archive_utils_7z._normalize_fname_suffixes",
    "datalad.utils.Path",
    "datalad.utils.quote_cmdlinearg",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.archive_utils_7z.decompress_file": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.support.archive_utils_7z._normalize_fname_suffixes",
    "datalad.utils.Path",
    "datalad.utils.quote_cmdlinearg",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.archive_utils_7z.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.support.archive_utils_7z.lgr": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.support.archive_utils_7z.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.archive_utils_7z.quote_cmdlinearg": {
  "data": {
   "shadows": "datalad.utils.quote_cmdlinearg"
  },
  "type": "import"
 },
 "datalad.support.archive_utils_patool": {
  "data": {
   "symbols_in_volume": [
    "Runner",
    "datalad.support.archive_utils_patool._patool_run",
    "datalad.support.archive_utils_patool.logging",
    "datalad.support.archive_utils_patool.patoolib"
   ]
  },
  "type": "module"
 },
 "datalad.support.archive_utils_patool.DECOMPRESSORS": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "datalad.support.archive_utils_patool._patool_run": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Exception",
    "datalad.support.archive_utils_patool._runner",
    "datalad.support.archive_utils_patool.lgr",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.archive_utils_patool._runner": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "datalad.support.archive_utils_patool.assure_bytes": {
  "data": {
   "shadows": "datalad.utils.assure_bytes"
  },
  "type": "import"
 },
 "datalad.support.archive_utils_patool.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.support.archive_utils_patool.compress_files": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "datalad.support.archive_utils_patool.lgr",
    "datalad.support.archive_utils_patool.patoolib",
    "datalad.support.archive_utils_patool.unixify_path",
    "datalad.utils.chpwd",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.support.archive_utils_patool.decompress_file": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "MissingExternalDependency",
    "assure_unicode",
    "basename",
    "datalad.support.archive_utils_patool.lgr",
    "datalad.support.archive_utils_patool.os",
    "datalad.support.archive_utils_patool.patoolib",
    "datalad.support.archive_utils_patool.unixify_path",
    "datalad.utils.assure_bytes",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.support.archive_utils_patool.lgr": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "datalad.support.archive_utils_patool.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.archive_utils_patool.opj": {
  "data": {
   "shadows": "join"
  },
  "type": "import"
 },
 "datalad.support.archive_utils_patool.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.archive_utils_patool.patoolib": {
  "data": {
   "shadows": "patoolib"
  },
  "type": "import"
 },
 "datalad.support.archive_utils_patool.patoolib.util": {
  "data": {
   "shadows": "patoolib.util"
  },
  "type": "import"
 },
 "datalad.support.archive_utils_patool.rmdir": {
  "data": {
   "shadows": "datalad.utils.rmdir"
  },
  "type": "import"
 },
 "datalad.support.archive_utils_patool.unixify_path": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "datalad.support.archive_utils_patool.os"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives": {
  "data": {
   "symbols_in_volume": [
    "datalad.cfg.obtain",
    "datalad.config.anything2bool",
    "datalad.support.archives.logging",
    "datalad.support.external_versions.external_versions",
    "datalad.utils.on_windows"
   ]
  },
  "type": "module"
 },
 "datalad.support.archives.ARCHIVES_TEMP_DIR": {
  "data": {
   "shadows": "datalad.consts.ARCHIVES_TEMP_DIR"
  },
  "type": "import"
 },
 "datalad.support.archives.ArchivesCache": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.archives.ArchivesCache.__del__": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "datalad.support.archives.ArchivesCache.__delitem__": {
  "data": {
   "lineno": 222
  },
  "type": "function"
 },
 "datalad.support.archives.ArchivesCache.__getitem__": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "datalad.support.archives.ArchivesCache.__init__": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "datalad.consts.ARCHIVES_TEMP_DIR",
    "datalad.support.archives._get_random_id",
    "datalad.support.archives.lgr",
    "datalad.support.archives.os",
    "datalad.support.archives.tempfile",
    "datalad.support.path.exists",
    "datalad.support.path.join",
    "datalad.utils.get_tempfile_kwargs"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ArchivesCache._get_normalized_archive_path": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.support.path.isabs",
    "datalad.support.path.isdir",
    "datalad.support.path.join",
    "datalad.support.path.normpath",
    "datalad.support.path.pardir",
    "datalad.support.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ArchivesCache.clean": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "datalad.support.archives.lgr",
    "datalad.utils.rmtemp",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ArchivesCache.get_archive": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "datalad.support.archives.ExtractedArchive",
    "datalad.support.archives._get_cached_filename",
    "datalad.support.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ArchivesCache.path": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.archives.ExtractedArchive.__del__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.__init__": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.support.archives._get_cached_filename",
    "datalad.support.archives.tempfile",
    "datalad.support.path.exists",
    "datalad.utils.get_tempfile_kwargs"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.__repr__": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive._extract_archive": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "datalad.support.archive_utils_7z.decompress_file",
    "datalad.support.archives.lgr",
    "datalad.support.archives.os",
    "datalad.support.path.exists",
    "datalad.utils.ensure_bytes",
    "datalad.utils.rmtree",
    "locals",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.assure_extracted": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "datalad.support.locking.lock_if_check_fails"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.clean": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "datalad.support.archives.lgr",
    "datalad.support.path.exists",
    "datalad.support.path.isdir",
    "datalad.utils.rmtree",
    "datalad.utils.unlink"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.get_extracted_file": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "datalad.support.archives.lgr",
    "datalad.support.path.abspath",
    "datalad.support.path.exists",
    "locals"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.get_extracted_filename": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "datalad.support.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.get_extracted_files": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "datalad.support.archives.os",
    "datalad.support.path.join",
    "datalad.utils.ensure_unicode",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.get_leading_directory": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "datalad.support.path.join",
    "datalad.support.path.sep",
    "datalad.utils.any_re_search",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.is_extracted": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "datalad.support.archives.os",
    "datalad.support.path.exists",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.path": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ExtractedArchive.stamp_path": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.support.archives._decompress_file": {
  "data": {
   "shadows": "datalad.support.archive_utils_7z.decompress_file"
  },
  "type": "import"
 },
 "datalad.support.archives._get_cached_filename": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "datalad.support.archives.hashlib",
    "datalad.support.archives.lgr",
    "datalad.utils.Path",
    "datalad.utils.ensure_bytes",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives._get_random_id": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "datalad.support.archives.random",
    "datalad.support.archives.string",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.abspath": {
  "data": {
   "shadows": "datalad.support.path.abspath"
  },
  "type": "import"
 },
 "datalad.support.archives.any_re_search": {
  "data": {
   "shadows": "datalad.utils.any_re_search"
  },
  "type": "import"
 },
 "datalad.support.archives.anything2bool": {
  "data": {
   "shadows": "datalad.config.anything2bool"
  },
  "type": "import"
 },
 "datalad.support.archives.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.support.archives.compress_files": {
  "data": {
   "shadows": "datalad.support.archive_utils_7z.compress_files"
  },
  "type": "import"
 },
 "datalad.support.archives.decompress_file": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "NotImplementedError",
    "datalad.support.archive_utils_7z.decompress_file",
    "datalad.support.archives.lgr",
    "datalad.support.archives.os",
    "datalad.support.path.exists",
    "datalad.support.path.join",
    "datalad.utils.rmdir",
    "len",
    "next"
   ]
  },
  "type": "function"
 },
 "datalad.support.archives.ensure_bytes": {
  "data": {
   "shadows": "datalad.utils.ensure_bytes"
  },
  "type": "import"
 },
 "datalad.support.archives.ensure_unicode": {
  "data": {
   "shadows": "datalad.utils.ensure_unicode"
  },
  "type": "import"
 },
 "datalad.support.archives.exists": {
  "data": {
   "shadows": "datalad.support.path.exists"
  },
  "type": "import"
 },
 "datalad.support.archives.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.support.archives.get_tempfile_kwargs": {
  "data": {
   "shadows": "datalad.utils.get_tempfile_kwargs"
  },
  "type": "import"
 },
 "datalad.support.archives.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "datalad.support.archives.isabs": {
  "data": {
   "shadows": "datalad.support.path.isabs"
  },
  "type": "import"
 },
 "datalad.support.archives.isdir": {
  "data": {
   "shadows": "datalad.support.path.isdir"
  },
  "type": "import"
 },
 "datalad.support.archives.lgr": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "datalad.support.archives.lock_if_check_fails": {
  "data": {
   "shadows": "datalad.support.locking.lock_if_check_fails"
  },
  "type": "import"
 },
 "datalad.support.archives.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.archives.normpath": {
  "data": {
   "shadows": "datalad.support.path.normpath"
  },
  "type": "import"
 },
 "datalad.support.archives.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.support.archives.opj": {
  "data": {
   "shadows": "datalad.support.path.join"
  },
  "type": "import"
 },
 "datalad.support.archives.opsep": {
  "data": {
   "shadows": "datalad.support.path.sep"
  },
  "type": "import"
 },
 "datalad.support.archives.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.archives.pardir": {
  "data": {
   "shadows": "datalad.support.path.pardir"
  },
  "type": "import"
 },
 "datalad.support.archives.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "datalad.support.archives.relpath": {
  "data": {
   "shadows": "datalad.support.path.relpath"
  },
  "type": "import"
 },
 "datalad.support.archives.rmdir": {
  "data": {
   "shadows": "datalad.utils.rmdir"
  },
  "type": "import"
 },
 "datalad.support.archives.rmtemp": {
  "data": {
   "shadows": "datalad.utils.rmtemp"
  },
  "type": "import"
 },
 "datalad.support.archives.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.support.archives.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "datalad.support.archives.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.support.archives.unlink": {
  "data": {
   "shadows": "datalad.utils.unlink"
  },
  "type": "import"
 },
 "datalad.support.archives.urlunquote": {
  "data": {
   "shadows": "urllib.parse.unquote"
  },
  "type": "import"
 },
 "datalad.support.cache": {
  "data": {},
  "type": "module"
 },
 "datalad.support.cache.DictCache": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "class"
 },
 "datalad.support.cache.DictCache.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "collections.OrderedDict.__init__"
   ]
  },
  "type": "function"
 },
 "datalad.support.cache.DictCache.__setitem__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "collections.OrderedDict.__setitem__"
   ]
  },
  "type": "function"
 },
 "datalad.support.cache.DictCache._check_size_limit": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.cache.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.support.cache.lru_cache": {
  "data": {
   "shadows": "functools.lru_cache"
  },
  "type": "import"
 },
 "datalad.support.configparserinc": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "datalad.support.configparserinc.logging",
    "datalad.support.configparserinc.sys"
   ]
  },
  "type": "module"
 },
 "datalad.support.configparserinc.BasicInterpolation": {
  "data": {
   "shadows": "configparser.BasicInterpolation"
  },
  "type": "import"
 },
 "datalad.support.configparserinc.BasicInterpolationWithName": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "configparser.BasicInterpolation"
   ]
  },
  "type": "class"
 },
 "datalad.support.configparserinc.BasicInterpolationWithName._interpolate_some": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "__name__",
    "datalad.support.configparserinc.BasicInterpolationWithName",
    "map",
    "map.copy",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.configparserinc.SafeConfigParser": {
  "data": {
   "shadows": "ConfigParser.SafeConfigParser"
  },
  "type": "import"
 },
 "datalad.support.configparserinc.SafeConfigParserWithIncludes": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ConfigParser.SafeConfigParser",
    "datalad.support.configparserinc.sys",
    "staticmethod"
   ]
  },
  "type": "class"
 },
 "datalad.support.configparserinc.SafeConfigParserWithIncludes.__init__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datalad.support.configparserinc.BasicInterpolationWithName",
    "datalad.support.configparserinc.SafeConfigParserWithIncludes",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.configparserinc.SafeConfigParserWithIncludes.getIncludes": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ConfigParser.SafeConfigParser",
    "UnicodeDecodeError",
    "datalad.support.configparserinc.SafeConfigParserWithIncludes",
    "datalad.support.configparserinc.logSys",
    "datalad.support.configparserinc.os",
    "datalad.support.configparserinc.sys"
   ]
  },
  "type": "function"
 },
 "datalad.support.configparserinc.SafeConfigParserWithIncludes.read": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ConfigParser.SafeConfigParser.read",
    "datalad.support.configparserinc.SafeConfigParserWithIncludes",
    "datalad.support.configparserinc.logSys",
    "datalad.support.configparserinc.sys",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.configparserinc.__all__": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "datalad.support.configparserinc.logSys": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.support.configparserinc.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.configparserinc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.configparserinc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.constraints": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureBool",
    "datalad.support.constraints.EnsureFloat",
    "datalad.support.constraints.EnsureInt",
    "datalad.support.constraints.EnsureStr"
   ]
  },
  "type": "module"
 },
 "datalad.support.constraints.AltConstraints": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.AltConstraints.__call__": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "c"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.AltConstraints.__init__": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "datalad.support.constraints.AltConstraints",
    "datalad.support.constraints.EnsureNone",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.AltConstraints.__or__": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "datalad.support.constraints.AltConstraints",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.AltConstraints.long_description": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "c",
    "c.long_description",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.AltConstraints.short_description": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "c",
    "c.short_description",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraint": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.Constraint.__and__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraints"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraint.__call__": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraint.__or__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "datalad.support.constraints.AltConstraints"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraint.__repr__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraint.long_description": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraint.short_description": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraints": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.Constraints.__and__": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraints",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraints.__call__": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "c"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraints.__init__": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "c",
    "datalad.support.constraints.Constraints",
    "datalad.support.constraints.EnsureNone",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraints.long_description": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "c",
    "c.long_description",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.Constraints.short_description": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "c",
    "c.short_description",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureBool": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureBool.__call__": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "bytes",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureBool.long_description": {
  "data": {
   "lineno": 176
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureBool.short_description": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureCallable": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureCallable.__call__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureCallable.long_description": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureCallable.short_description": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureChoice": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureChoice.__call__": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureChoice.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureChoice",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureChoice.long_description": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureChoice.short_description": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureDType": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureDType.__call__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "bytes",
    "hasattr",
    "isinstance",
    "list",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureDType.__init__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureDType.long_description": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureDType.short_description": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "datalad.support.constraints._type_str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureFloat": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureDType"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureFloat.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureDType",
    "float"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureInt": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureDType"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureInt.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureDType",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureKeyChoice": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureChoice"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureKeyChoice.__call__": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.constraints.EnsureKeyChoice",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureKeyChoice.__init__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureKeyChoice",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureKeyChoice.long_description": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureKeyChoice.short_description": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureListOf": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureListOf.__call__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureListOf.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureListOf",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureListOf.long_description": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureListOf.short_description": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "datalad.support.constraints._type_str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureNone": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureNone.__call__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureNone.long_description": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureNone.short_description": {
  "data": {
   "lineno": 252
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureRange": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureRange.__call__": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureRange.__init__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureRange",
    "max",
    "min",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureRange.long_description": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureRange.short_description": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureStr": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureStr.__call__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "len",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureStr.__init__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureStr",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureStr.long_description": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureStr.short_description": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureStrPrefix": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureStr"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureStrPrefix.__call__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ValueError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureStrPrefix.__init__": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureStrPrefix.long_description": {
  "data": {
   "lineno": 237
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureStrPrefix.short_description": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureTupleOf": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "datalad.support.constraints.Constraint"
   ]
  },
  "type": "class"
 },
 "datalad.support.constraints.EnsureTupleOf.__call__": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "map",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureTupleOf.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "datalad.support.constraints.EnsureTupleOf",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureTupleOf.long_description": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "datalad.support.constraints.EnsureTupleOf.short_description": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "datalad.support.constraints._type_str"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.support.constraints._strip_typerepr": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "datalad.support.constraints.re"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints._type_str": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "datalad.support.constraints._strip_typerepr",
    "isinstance",
    "len",
    "map",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.constraint_spec_map": {
  "data": {
   "lineno": 467
  },
  "type": "constant"
 },
 "datalad.support.constraints.expand_constraint_spec": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "datalad.support.constraints.constraint_spec_map",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.support.constraints.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.cookies": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.cookies.CookiesDB",
    "datalad.support.cookies.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.cookies.CookiesDB": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.cookies.CookiesDB.__contains__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Exception",
    "datalad.dochelpers.exc_str",
    "datalad.support.cookies.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.cookies.CookiesDB.__getitem__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Exception",
    "datalad.dochelpers.exc_str",
    "datalad.support.cookies.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.cookies.CookiesDB.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "datalad.support.cookies.atexit"
   ]
  },
  "type": "function"
 },
 "datalad.support.cookies.CookiesDB.__setitem__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "Exception",
    "datalad.dochelpers.exc_str",
    "datalad.support.cookies.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.cookies.CookiesDB._get_provider": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "get_tld"
   ]
  },
  "type": "function"
 },
 "datalad.support.cookies.CookiesDB._load": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Exception",
    "datalad.dochelpers.exc_str",
    "datalad.support.cookies.appdirs",
    "datalad.support.cookies.lgr",
    "datalad.support.cookies.shelve"
   ]
  },
  "type": "function"
 },
 "datalad.support.cookies.CookiesDB.close": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "Exception",
    "datalad.dochelpers.exc_str",
    "datalad.support.cookies.lgr",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.cookies.CookiesDB.cookies_db": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.cookies.appdirs": {
  "data": {
   "shadows": "appdirs"
  },
  "type": "import"
 },
 "datalad.support.cookies.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "datalad.support.cookies.cookies_db": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "datalad.support.cookies.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.cookies.lgr": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.support.cookies.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.cookies.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.support.cookies.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "datalad.support.cookies.shelve": {
  "data": {
   "shadows": "shelve"
  },
  "type": "import"
 },
 "datalad.support.digests": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.digests.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.digests.Digester": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.digests.Digester.__call__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "datalad.support.digests.lgr",
    "open",
    "x",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.support.digests.Digester.__init__": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "datalad.support.digests.hashlib",
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.support.digests.Digester.digests": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.digests.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "datalad.support.digests.lgr": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.support.digests.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.due": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "datalad.support.due.InactiveDueCreditCollector",
    "datalad.support.due._donothing_func",
    "datalad.support.due.logging",
    "duecredit.BibTeX",
    "duecredit.Doi",
    "duecredit.Text",
    "duecredit.Url",
    "duecredit.due",
    "hasattr",
    "locals",
    "str",
    "type"
   ]
  },
  "type": "module"
 },
 "datalad.support.due.BibTeX": {
  "data": {
   "shadows": "duecredit.BibTeX"
  },
  "type": "import"
 },
 "datalad.support.due.Doi": {
  "data": {
   "shadows": "duecredit.Doi"
  },
  "type": "import"
 },
 "datalad.support.due.InactiveDueCreditCollector": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.due.InactiveDueCreditCollector.__repr__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "datalad.support.due.InactiveDueCreditCollector._donothing": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "datalad.support.due.InactiveDueCreditCollector.dcite": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "datalad.support.due.InactiveDueCreditCollector.dcite.nondecorating_decorator": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "datalad.support.due.Text": {
  "data": {
   "shadows": "duecredit.Text"
  },
  "type": "import"
 },
 "datalad.support.due.Url": {
  "data": {
   "shadows": "duecredit.Url"
  },
  "type": "import"
 },
 "datalad.support.due.__version__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datalad.support.due._donothing_func": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "datalad.support.due.due": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "datalad.support.due.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.due_utils": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.due_utils.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.due_utils.CITATION_CANDIDATES": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.support.due_utils.duecredit_dataset": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Exception",
    "datalad.support.due_utils.CITATION_CANDIDATES",
    "datalad.support.due_utils.lgr",
    "datalad.support.due_utils.logging",
    "dict",
    "exc_str",
    "get_field",
    "isinstance",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.support.due_utils.duecredit_dataset.get_field": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "first",
    "get_field",
    "isinstance",
    "list",
    "next",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.due_utils.lgr": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.support.due_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.exceptions": {
  "data": {},
  "type": "module"
 },
 "datalad.support.exceptions.AccessDeniedError": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "datalad.support.exceptions.DownloadError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.AccessDeniedError.__init__": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "datalad.support.exceptions.AccessDeniedError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.AccessFailedError": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "datalad.support.exceptions.DownloadError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.AccessPermissionExpiredError": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "datalad.support.exceptions.AccessDeniedError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.AnnexBatchCommandError": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.AnonymousAccessDeniedError": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "datalad.support.exceptions.AccessDeniedError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.BrokenExternalDependency": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.CommandError": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.CommandError.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "RuntimeError.__init__"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.CommandError.__str__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "datalad.support.exceptions.CommandError.to_str": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "datalad.utils.ensure_unicode",
    "datalad.utils.quote_cmdlinearg",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.CommandNotAvailableError": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.ConnectionOpenFailedError": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.CrawlerError": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.DataLadWarning": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.DeprecatedError": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.DeprecatedError.__init__": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "datalad.support.exceptions.DeprecatedError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.DeprecatedError.__str__": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "datalad.support.exceptions.DirectModeNoLongerSupportedError": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.DirectModeNoLongerSupportedError.__init__": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "datalad.support.exceptions.DirectModeNoLongerSupportedError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.DownloadError": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.FileInGitError": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "datalad.support.exceptions.FileNotInAnnexError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.FileNotInAnnexError": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "IOError",
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.FileNotInAnnexError.__init__": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "IOError.__init__",
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.FileNotInAnnexError.to_str": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "IOError.__str__",
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.FileNotInRepositoryError": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "datalad.support.exceptions.FileNotInAnnexError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.GitError": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.GitIgnoreError": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError",
    "datalad.support.exceptions.re"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.GitIgnoreError.__init__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "datalad.support.exceptions.GitIgnoreError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.GitIgnoreError.to_str": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "datalad.support.exceptions.IncompleteDownloadError": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "datalad.support.exceptions.DownloadError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.IncompleteResultsError": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.IncompleteResultsError.__init__": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "datalad.support.exceptions.IncompleteResultsError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.IncompleteResultsError.__str__": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "datalad.support.exceptions.IncompleteResultsError",
    "len",
    "os.linesep",
    "pprint.pformat",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.InstallFailedError": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.InsufficientArgumentsError": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.InvalidAnnexRepositoryError": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.InvalidGitReferenceError": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.InvalidGitReferenceError.__init__": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "datalad.support.exceptions.InvalidGitReferenceError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.InvalidGitReferenceError.__str__": {
  "data": {
   "lineno": 186
  },
  "type": "function"
 },
 "datalad.support.exceptions.InvalidGitRepositoryError": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "datalad.support.exceptions.GitError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.InvalidInstanceRequestError": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.InvalidInstanceRequestError.__init__": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "datalad.support.exceptions.InvalidInstanceRequestError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.MissingBranchError": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.MissingBranchError.__init__": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "datalad.support.exceptions.MissingBranchError.__str__": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "datalad.support.exceptions.MissingExternalDependency": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.MissingExternalDependency.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "datalad.support.exceptions.MissingExternalDependency",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.MissingExternalDependency.__str__": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.NoDatasetArgumentFound": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "datalad.support.exceptions.InsufficientArgumentsError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.NoDatasetFound": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "datalad.support.exceptions.NoDatasetArgumentFound"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.NoSuchPathError": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "OSError",
    "datalad.support.exceptions.GitError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.OutOfSpaceError": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.OutOfSpaceError.__init__": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "datalad.support.exceptions.OutOfSpaceError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.OutOfSpaceError.to_str": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "os.linesep",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.OutdatedExternalDependency": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "datalad.support.exceptions.MissingExternalDependency"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.OutdatedExternalDependency.__init__": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "datalad.support.exceptions.OutdatedExternalDependency",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.OutdatedExternalDependency.__str__": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "datalad.support.exceptions.OutdatedExternalDependency",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.OutdatedExternalDependencyWarning": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "datalad.support.exceptions.DataLadWarning"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.PathKnownToRepositoryError": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.PathOutsideRepositoryError": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.PathOutsideRepositoryError.__init__": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "datalad.support.exceptions.PathOutsideRepositoryError.__str__": {
  "data": {
   "lineno": 228
  },
  "type": "function"
 },
 "datalad.support.exceptions.PipelineNotSpecifiedError": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "datalad.support.exceptions.CrawlerError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.RemoteNotAvailableError": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.RemoteNotAvailableError.__init__": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "datalad.support.exceptions.RemoteNotAvailableError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.RemoteNotAvailableError.to_str": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "os.linesep",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.TargetFileAbsent": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "datalad.support.exceptions.DownloadError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.UnaccountedDownloadError": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "datalad.support.exceptions.IncompleteDownloadError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.UnhandledRedirectError": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "datalad.support.exceptions.DownloadError"
   ]
  },
  "type": "class"
 },
 "datalad.support.exceptions.UnhandledRedirectError.__init__": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "datalad.support.exceptions.UnhandledRedirectError",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.exceptions.ensure_unicode": {
  "data": {
   "shadows": "datalad.utils.ensure_unicode"
  },
  "type": "import"
 },
 "datalad.support.exceptions.linesep": {
  "data": {
   "shadows": "os.linesep"
  },
  "type": "import"
 },
 "datalad.support.exceptions.pformat": {
  "data": {
   "shadows": "pprint.pformat"
  },
  "type": "import"
 },
 "datalad.support.exceptions.quote_cmdlinearg": {
  "data": {
   "shadows": "datalad.utils.quote_cmdlinearg"
  },
  "type": "import"
 },
 "datalad.support.exceptions.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.external_versions": {
  "data": {
   "symbols_in_volume": [
    "datalad.cmd.GitRunner",
    "datalad.cmd.Runner",
    "datalad.support.external_versions.ExternalVersions"
   ]
  },
  "type": "module"
 },
 "datalad.support.external_versions.ExternalVersions": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "datalad.support.external_versions.UnknownVersion",
    "datalad.support.external_versions._get_annex_version",
    "datalad.support.external_versions._get_bundled_git_version",
    "datalad.support.external_versions._get_git_version",
    "datalad.support.external_versions._get_system_7z_version",
    "datalad.support.external_versions._get_system_git_version",
    "datalad.support.external_versions._get_system_ssh_version",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.external_versions.ExternalVersions.__contains__": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.ExternalVersions.__getitem__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "__import__",
    "datalad.dochelpers.exc_str",
    "datalad.log.lgr.debug",
    "datalad.log.lgr.log",
    "datalad.log.lgr.warning",
    "datalad.support.external_versions.sys",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.ExternalVersions.__init__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.ExternalVersions._deduce_version": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Exception",
    "bytes",
    "classmethod",
    "datalad.support.external_versions.pkg_resources",
    "distutils.version.LooseVersion",
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.ExternalVersions.add": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "datalad.log.lgr.debug"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.ExternalVersions.check": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "datalad.support.exceptions.MissingExternalDependency",
    "datalad.support.exceptions.OutdatedExternalDependency"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.ExternalVersions.dumps": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "os.linesep",
    "os.linesep.join",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.ExternalVersions.keys": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "itertools.chain"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.ExternalVersions.versions": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.support.external_versions.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datalad.support.external_versions.MissingExternalDependency": {
  "data": {
   "shadows": "datalad.support.exceptions.MissingExternalDependency"
  },
  "type": "import"
 },
 "datalad.support.external_versions.OutdatedExternalDependency": {
  "data": {
   "shadows": "datalad.support.exceptions.OutdatedExternalDependency"
  },
  "type": "import"
 },
 "datalad.support.external_versions.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.support.external_versions.UnknownVersion": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "datalad.support.external_versions.UnknownVersion.__cmp__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions.UnknownVersion.__str__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "datalad.support.external_versions.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.support.external_versions.__get_git_version": {
  "data": {
   "shadows": "datalad.config.get_git_version"
  },
  "type": "import"
 },
 "datalad.support.external_versions._get_annex_version": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "datalad.support.external_versions._runner"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions._get_bundled_git_version": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "datalad.support.external_versions._git_runner",
    "datalad.support.external_versions._runner",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions._get_git_version": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "datalad.config.get_git_version"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions._get_system_7z_version": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "datalad.log.lgr.debug",
    "datalad.support.external_versions._runner"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions._get_system_git_version": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.config.get_git_version",
    "datalad.support.external_versions._runner"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions._get_system_ssh_version": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "datalad.support.external_versions._runner"
   ]
  },
  "type": "function"
 },
 "datalad.support.external_versions._git_runner": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datalad.support.external_versions._runner": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "datalad.support.external_versions.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "datalad.support.external_versions.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.external_versions.external_versions": {
  "data": {
   "lineno": 363
  },
  "type": "constant"
 },
 "datalad.support.external_versions.lgr": {
  "data": {
   "shadows": "datalad.log.lgr"
  },
  "type": "import"
 },
 "datalad.support.external_versions.linesep": {
  "data": {
   "shadows": "os.linesep"
  },
  "type": "import"
 },
 "datalad.support.external_versions.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.support.external_versions.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "datalad.support.external_versions.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.github_": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "MissingExternalDependency",
    "datalad.support.github_.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.github_._gen_github_entity": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.github_._gen_github_ses",
    "datalad.support.github_.lgr",
    "exc_str",
    "github.BadCredentialsException",
    "github.UnknownObjectException"
   ]
  },
  "type": "function"
 },
 "datalad.support.github_._gen_github_ses": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "assure_list",
    "cred",
    "cred.enter_new",
    "datalad.support.github_._get_github_cred",
    "datalad.support.github_._get_tokens_for_login",
    "datalad.support.github_._token_str",
    "datalad.support.github_.lgr",
    "exc_str",
    "github.BadCredentialsException",
    "github.Github",
    "unique"
   ]
  },
  "type": "function"
 },
 "datalad.support.github_._get_github_cred": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Token"
   ]
  },
  "type": "function"
 },
 "datalad.support.github_._get_tokens_for_login": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "datalad.support.github_._token_str",
    "datalad.support.github_.lgr",
    "exc_str",
    "github.BadCredentialsException",
    "github.Github",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.github_._make_github_repo": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "datalad.support.github_.get_repo_url",
    "datalad.support.github_.lgr",
    "github.GithubException",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.github_._make_github_repos": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "AccessDeniedError",
    "RuntimeError",
    "assure_tuple_or_list",
    "datalad.support.github_._gen_github_entity",
    "datalad.support.github_._make_github_repo",
    "datalad.support.github_.lgr",
    "exc_str",
    "github.BadCredentialsException",
    "github.GithubException",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.github_._token_str": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.github_.get_repo_url": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "URL"
   ]
  },
  "type": "function"
 },
 "datalad.support.github_.gh": {
  "data": {
   "shadows": "github"
  },
  "type": "import"
 },
 "datalad.support.github_.lgr": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "datalad.support.github_.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.gitrepo": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "datalad.support.gitrepo.logging",
    "os.path.curdir",
    "os.path.pardir",
    "os.path.sep"
   ]
  },
  "type": "module"
 },
 "datalad.support.gitrepo.BatchedCommand": {
  "data": {
   "shadows": "datalad.cmd.BatchedCommand"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.ConfigManager": {
  "data": {
   "shadows": "datalad.config.ConfigManager"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.Doi": {
  "data": {
   "shadows": "datalad.support.due.Doi"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.FetchInfo": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "datalad.support.gitrepo.re",
    "dict",
    "range"
   ]
  },
  "type": "class"
 },
 "datalad.support.gitrepo.FetchInfo._from_line": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "classmethod",
    "cls",
    "cls._operation_map",
    "cls._operation_map.keys"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitProgress": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "datalad.cmd.WitlessProtocol",
    "datalad.support.gitrepo.re",
    "range"
   ]
  },
  "type": "class"
 },
 "datalad.support.gitrepo.GitProgress.__init__": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitProgress._parse_progress_line": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "bytes",
    "datalad.log.log_progress",
    "datalad.support.gitrepo.lgr",
    "datalad.support.gitrepo.logging",
    "enumerate",
    "float",
    "id",
    "isinstance",
    "len",
    "ord",
    "reversed"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitProgress.connection_made": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitProgress.pipe_data_received": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "datalad.support.gitrepo.lgr",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitProgress.process_exited": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "datalad.log.log_progress",
    "datalad.support.gitrepo.lgr",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "weakref.WeakValueDictionary"
   ]
  },
  "type": "class"
 },
 "datalad.support.gitrepo.GitRepo.__del__": {
  "data": {
   "lineno": 1153
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.__eq__": {
  "data": {
   "lineno": 1158
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.__hash__": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.__init__": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "DeprecatedError",
    "InvalidGitRepositoryError",
    "NoSuchPathError",
    "TypeError",
    "datalad.cmd.GitRunner",
    "datalad.ssh_manager",
    "datalad.ssh_manager.ensure_initialized",
    "datalad.support.due.Doi",
    "datalad.support.due.due.dcite",
    "datalad.support.gitrepo.os",
    "datalad.utils.Path",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._check_git_version": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "classmethod",
    "cls.git_version",
    "datalad.support.gitrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._create_empty_repo": {
  "data": {
   "lineno": 986,
   "symbols_in_volume": [
    "PathKnownToRepositoryError",
    "datalad.dochelpers.exc_str",
    "datalad.support.gitrepo.lgr",
    "datalad.support.gitrepo.os",
    "datalad.support.gitrepo.to_options",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._fetch_push_helper": {
  "data": {
   "lineno": 2418,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "datalad.cmd.GitWitlessRunner",
    "datalad.log.log_progress",
    "datalad.ssh_manager.get_connection",
    "datalad.support.gitrepo.lgr",
    "datalad.support.gitrepo.re",
    "datalad.utils.ensure_list",
    "getattr",
    "id",
    "is_ssh",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._flyweight_invalid": {
  "data": {
   "lineno": 802
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._flyweight_reject": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._get_content_info_line_helper": {
  "data": {
   "lineno": 3428,
   "symbols_in_volume": [
    "datalad.support.gitrepo.lgr",
    "datalad.utils.Path",
    "datalad.utils.PurePosixPath",
    "get_link_target",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._get_prefixed_commit_msg": {
  "data": {
   "lineno": 1457,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._git_custom_command": {
  "data": {
   "lineno": 2028,
   "symbols_in_volume": [
    "GitIgnoreError",
    "datalad.cmd.run_gitcommand_on_file_list_chunks",
    "datalad.support.gitrepo.lgr",
    "datalad.support.gitrepo.normalize_paths",
    "datalad.support.gitrepo.os",
    "datalad.support.gitrepo.re",
    "datalad.utils.split_cmdline",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._parse_gitmodules": {
  "data": {
   "lineno": 2696,
   "symbols_in_volume": [
    "datalad.config._parse_gitconfig_dump",
    "datalad.support.gitrepo.lgr",
    "datalad.utils.PurePosixPath"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._process_git_get_output": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "datalad.support.gitrepo.re",
    "datalad.utils.ensure_unicode",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._save_add": {
  "data": {
   "lineno": 4064,
   "symbols_in_volume": [
    "OSError",
    "datalad.interface.results.get_status_dict",
    "datalad.support.gitrepo.lgr",
    "datalad.utils.PurePosixPath",
    "datalad.utils.ensure_list",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._save_post": {
  "data": {
   "lineno": 3844,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo._save_pre": {
  "data": {
   "lineno": 3802,
   "symbols_in_volume": [
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.add": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.normalize_paths",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.add_": {
  "data": {
   "lineno": 1351,
   "symbols_in_volume": [
    "OSError",
    "datalad.support.gitrepo._normalize_path",
    "datalad.support.gitrepo.lgr",
    "datalad.support.gitrepo.to_options",
    "datalad.utils.ensure_list"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.add_fake_dates": {
  "data": {
   "lineno": 1550,
   "symbols_in_volume": [
    "datalad.support.gitrepo.lgr",
    "datalad.support.gitrepo.os",
    "datalad.support.gitrepo.time",
    "int",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.add_remote": {
  "data": {
   "lineno": 2222
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.add_submodule": {
  "data": {
   "lineno": 2806,
   "symbols_in_volume": [
    "InvalidGitRepositoryError",
    "datalad.core.local.repo.repo_from_path",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo._fixup_submodule_dotgit_setup",
    "datalad.support.gitrepo.posixpath",
    "datalad.utils.Path",
    "datalad.utils.posix_relpath",
    "os.path.curdir",
    "os.path.isabs",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.call_git": {
  "data": {
   "lineno": 2103
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.call_git_items_": {
  "data": {
   "lineno": 2136,
   "symbols_in_volume": [
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.call_git_oneline": {
  "data": {
   "lineno": 2166,
   "symbols_in_volume": [
    "AssertionError",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.call_git_success": {
  "data": {
   "lineno": 2194
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.checkout": {
  "data": {
   "lineno": 2610,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.cherry_pick": {
  "data": {
   "lineno": 2640
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.clone": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "KeyError",
    "RI",
    "TypeError",
    "ValueError",
    "classmethod",
    "cls",
    "cls._unique_instances",
    "datalad.cmd.GitWitlessRunner",
    "datalad.dochelpers.exc_str",
    "datalad.ssh_manager.get_connection",
    "datalad.support.gitrepo.GitProgress",
    "datalad.support.gitrepo.lgr",
    "datalad.support.gitrepo.os",
    "datalad.support.gitrepo.re",
    "datalad.support.gitrepo.to_options",
    "datalad.utils.on_windows",
    "hasattr",
    "is_ssh",
    "isinstance",
    "os.listdir",
    "os.path.exists",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.commit": {
  "data": {
   "lineno": 1593,
   "symbols_in_volume": [
    "FileNotInRepositoryError",
    "datalad.cmd.GitRunner.get_git_environ_adjusted",
    "datalad.cmd.GitWitlessRunner",
    "datalad.cmd.StdOutErrCapture",
    "datalad.support.gitrepo.lgr",
    "datalad.utils.ensure_list",
    "datalad.utils.generate_file_chunks",
    "enumerate",
    "os.linesep.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.commit_exists": {
  "data": {
   "lineno": 1831
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.config": {
  "data": {
   "lineno": 1250,
   "symbols_in_volume": [
    "datalad.config.ConfigManager",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.configure_fake_dates": {
  "data": {
   "lineno": 1535,
   "symbols_in_volume": [
    "datalad.support.gitrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.count_objects": {
  "data": {
   "lineno": 3127,
   "symbols_in_volume": [
    "int",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.deinit_submodule": {
  "data": {
   "lineno": 2873,
   "symbols_in_volume": [
    "datalad.support.gitrepo.to_options"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.describe": {
  "data": {
   "lineno": 3076,
   "symbols_in_volume": [
    "datalad.support.gitrepo.to_options"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.diff": {
  "data": {
   "lineno": 3536
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.diffstatus": {
  "data": {
   "lineno": 3583,
   "symbols_in_volume": [
    "_get_cache_key",
    "collections.OrderedDict",
    "datalad.support.gitrepo.GitRepo",
    "datalad.utils.Path",
    "datalad.utils.PurePosixPath",
    "dict",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.diffstatus._get_cache_key": {
  "data": {
   "lineno": 3593,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.dirty": {
  "data": {
   "lineno": 2651,
   "symbols_in_volume": [
    "bool",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.fake_dates_enabled": {
  "data": {
   "lineno": 1541,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.fetch": {
  "data": {
   "lineno": 2267,
   "symbols_in_volume": [
    "datalad.support.gitrepo.to_options",
    "datalad.utils.ensure_list",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.fetch_": {
  "data": {
   "lineno": 2299,
   "symbols_in_volume": [
    "datalad.support.gitrepo.FetchInfo",
    "datalad.support.gitrepo.GitProgress"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.for_each_ref_": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "datalad.utils.ensure_list",
    "dict",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.format_commit": {
  "data": {
   "lineno": 1706,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.gc": {
  "data": {
   "lineno": 2686
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_active_branch": {
  "data": {
   "lineno": 1922,
   "symbols_in_volume": [
    "datalad.support.gitrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_branch_commits_": {
  "data": {
   "lineno": 2580
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_branches": {
  "data": {
   "lineno": 1947
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_commit_date": {
  "data": {
   "lineno": 1899,
   "symbols_in_volume": [
    "ValueError",
    "format",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_content_info": {
  "data": {
   "lineno": 3249,
   "symbols_in_volume": [
    "InvalidGitReferenceError",
    "ValueError",
    "collections.OrderedDict",
    "datalad.cmd.BatchedCommand",
    "datalad.support.gitrepo.lgr",
    "datalad.support.gitrepo.re",
    "datalad.utils.PurePosixPath",
    "get_parent_paths",
    "list",
    "map",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_content_info._read_symlink_target_from_catfile": {
  "data": {
   "lineno": 3387
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_content_info.try_readlink": {
  "data": {
   "lineno": 3402,
   "symbols_in_volume": [
    "OSError",
    "datalad.support.gitrepo.os",
    "datalad.utils.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_corresponding_branch": {
  "data": {
   "lineno": 1943
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_files": {
  "data": {
   "lineno": 2007,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_git_attributes": {
  "data": {
   "lineno": 3140
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_git_dir": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.support.gitrepo.os",
    "hasattr",
    "open",
    "os.path.exists",
    "os.path.isdir",
    "os.path.isfile",
    "os.path.islink",
    "os.path.join",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_gitattributes": {
  "data": {
   "lineno": 3157,
   "symbols_in_volume": [
    "datalad.support.gitrepo._normalize_path",
    "datalad.utils.ensure_list",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_hexsha": {
  "data": {
   "lineno": 1744,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_indexed_files": {
  "data": {
   "lineno": 1691,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_last_commit_hexsha": {
  "data": {
   "lineno": 1779,
   "symbols_in_volume": [
    "datalad.support.gitrepo.normalize_paths"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_merge_base": {
  "data": {
   "lineno": 1849,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_remote_branches": {
  "data": {
   "lineno": 1961
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_remote_url": {
  "data": {
   "lineno": 2546
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_remotes": {
  "data": {
   "lineno": 1979,
   "symbols_in_volume": [
    "datalad.utils.unique"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_revisions": {
  "data": {
   "lineno": 1797,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_staged_paths": {
  "data": {
   "lineno": 3823,
   "symbols_in_volume": [
    "datalad.dochelpers.exc_str",
    "datalad.support.gitrepo.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_submodules": {
  "data": {
   "lineno": 2764,
   "symbols_in_volume": [
    "DeprecationWarning",
    "datalad.support.gitrepo.Submodule",
    "datalad.support.gitrepo.warnings",
    "list",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_submodules.key": {
  "data": {
   "lineno": 2801
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_submodules_": {
  "data": {
   "lineno": 2736
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_tags": {
  "data": {
   "lineno": 3042,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_toppath": {
  "data": {
   "lineno": 1275,
   "symbols_in_volume": [
    "OSError",
    "classmethod",
    "datalad.cmd.GitRunner",
    "datalad.support.gitrepo.GitRepo",
    "datalad.utils.Path",
    "os.path.dirname",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.get_tracking_branch": {
  "data": {
   "lineno": 3100
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.is_ancestor": {
  "data": {
   "lineno": 1884
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.is_valid_git": {
  "data": {
   "lineno": 1165
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.is_valid_repo": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "classmethod",
    "datalad.utils.Path",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.is_with_annex": {
  "data": {
   "lineno": 1267,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.merge": {
  "data": {
   "lineno": 2623
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.precommit": {
  "data": {
   "lineno": 1451
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.pull": {
  "data": {
   "lineno": 2316,
   "symbols_in_volume": [
    "ValueError",
    "datalad.cmd.GitWitlessRunner",
    "datalad.ssh_manager.get_connection",
    "datalad.support.gitrepo.StdOutCaptureWithGitProgress",
    "datalad.support.gitrepo.to_options",
    "datalad.utils.ensure_list",
    "is_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.push": {
  "data": {
   "lineno": 2369,
   "symbols_in_volume": [
    "datalad.support.gitrepo.to_options",
    "datalad.utils.ensure_list",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.push_": {
  "data": {
   "lineno": 2403,
   "symbols_in_volume": [
    "datalad.support.gitrepo.PushInfo",
    "datalad.support.gitrepo.StdOutCaptureWithGitProgress"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.remove": {
  "data": {
   "lineno": 1423,
   "symbols_in_volume": [
    "datalad.support.gitrepo.normalize_paths",
    "datalad.support.gitrepo.to_options"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.remove_branch": {
  "data": {
   "lineno": 2635
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.remove_remote": {
  "data": {
   "lineno": 2234,
   "symbols_in_volume": [
    "RemoteNotAvailableError"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.save": {
  "data": {
   "lineno": 3867,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.save_": {
  "data": {
   "lineno": 3905,
   "symbols_in_volume": [
    "InvalidGitRepositoryError",
    "any",
    "datalad.dochelpers.exc_str",
    "datalad.interface.results.get_status_dict",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo._prune_deeper_repos",
    "datalad.support.gitrepo.lgr",
    "datalad.utils.PurePosixPath",
    "dict",
    "hasattr",
    "len",
    "os.path.join",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.set_gitattributes": {
  "data": {
   "lineno": 3198,
   "symbols_in_volume": [
    "datalad.support.gitrepo._normalize_path",
    "datalad.support.gitrepo.os",
    "datalad.utils.Path",
    "open",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.set_remote_url": {
  "data": {
   "lineno": 2563
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.status": {
  "data": {
   "lineno": 3491,
   "symbols_in_volume": [
    "datalad.support.gitrepo.lgr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.tag": {
  "data": {
   "lineno": 3011
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.untracked_files": {
  "data": {
   "lineno": 2669,
   "symbols_in_volume": [
    "datalad.support.gitrepo.os",
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.update_ref": {
  "data": {
   "lineno": 2989
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.update_remote": {
  "data": {
   "lineno": 2257
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRepo.update_submodule": {
  "data": {
   "lineno": 2889,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.lgr",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.GitRunner": {
  "data": {
   "shadows": "datalad.cmd.GitRunner"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.GitWitlessRunner": {
  "data": {
   "shadows": "datalad.cmd.GitWitlessRunner"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.PurePosixPath": {
  "data": {
   "shadows": "datalad.utils.PurePosixPath"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.PushInfo": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "dict",
    "range"
   ]
  },
  "type": "class"
 },
 "datalad.support.gitrepo.PushInfo._from_line": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "classmethod",
    "cls",
    "cls.ERROR",
    "cls.NEW_HEAD",
    "cls.NEW_TAG",
    "cls.REJECTED",
    "cls.REMOTE_FAILURE",
    "cls.REMOTE_REJECTED",
    "cls._flag_map",
    "cls._operation_map",
    "cls._operation_map.keys"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.StdOutCaptureWithGitProgress": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitProgress"
   ]
  },
  "type": "class"
 },
 "datalad.support.gitrepo.StdOutErrCapture": {
  "data": {
   "shadows": "datalad.cmd.StdOutErrCapture"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.Submodule": {
  "data": {
   "lineno": 783
  },
  "type": "constant"
 },
 "datalad.support.gitrepo.WeakValueDictionary": {
  "data": {
   "shadows": "weakref.WeakValueDictionary"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.WitlessProtocol": {
  "data": {
   "shadows": "datalad.cmd.WitlessProtocol"
  },
  "type": "import"
 },
 "datalad.support.gitrepo._curdirsep": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "datalad.support.gitrepo._fixup_submodule_dotgit_setup": {
  "data": {
   "lineno": 4102,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.os",
    "datalad.utils.ensure_dir",
    "os.listdir",
    "os.path.join",
    "os.rename",
    "os.rmdir",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo._normalize_path": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "FileNotInRepositoryError",
    "datalad.support.gitrepo._curdirsep",
    "datalad.support.gitrepo._pardirsep",
    "datalad.utils.Path",
    "datalad.utils.getpwd",
    "os.path.commonprefix",
    "os.path.relpath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo._pardirsep": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "datalad.support.gitrepo._parse_gitconfig_dump": {
  "data": {
   "shadows": "datalad.config._parse_gitconfig_dump"
  },
  "type": "import"
 },
 "datalad.support.gitrepo._prune_deeper_repos": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "datalad.support.gitrepo.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.commonprefix": {
  "data": {
   "shadows": "os.path.commonprefix"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.due": {
  "data": {
   "shadows": "datalad.support.due.due"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.ensure_dir": {
  "data": {
   "shadows": "datalad.utils.ensure_dir"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.ensure_list": {
  "data": {
   "shadows": "datalad.utils.ensure_list"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.ensure_unicode": {
  "data": {
   "shadows": "datalad.utils.ensure_unicode"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.generate_file_chunks": {
  "data": {
   "shadows": "datalad.utils.generate_file_chunks"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.get_status_dict": {
  "data": {
   "shadows": "datalad.interface.results.get_status_dict"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.getpreferredencoding": {
  "data": {
   "shadows": "locale.getpreferredencoding"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.lgr": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "datalad.support.gitrepo.linesep": {
  "data": {
   "shadows": "os.linesep"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.listdir": {
  "data": {
   "shadows": "os.listdir"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.normalize_path": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "datalad.utils.optional_args"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.normalize_path._wrap_normalize_path": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "datalad.support.gitrepo._normalize_path",
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.normalize_paths": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "datalad.utils.optional_args"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.normalize_paths._wrap_normalize_paths": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "datalad.support.gitrepo._normalize_path",
    "dict",
    "func",
    "functools.wraps",
    "isinstance",
    "len",
    "list",
    "normalize",
    "remap_filenames",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.normalize_paths._wrap_normalize_paths.remap_filenames": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.optional_args": {
  "data": {
   "shadows": "datalad.utils.optional_args"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.posix_relpath": {
  "data": {
   "shadows": "datalad.utils.posix_relpath"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.quote_cmdlinearg": {
  "data": {
   "shadows": "datalad.utils.quote_cmdlinearg"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.rename": {
  "data": {
   "shadows": "os.rename"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.repo_from_path": {
  "data": {
   "shadows": "datalad.core.local.repo.repo_from_path"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.rmdir": {
  "data": {
   "shadows": "os.rmdir"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.run_gitcommand_on_file_list_chunks": {
  "data": {
   "shadows": "datalad.cmd.run_gitcommand_on_file_list_chunks"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.sep": {
  "data": {
   "shadows": "os.path.sep"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.split_cmdline": {
  "data": {
   "shadows": "datalad.utils.split_cmdline"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.to_options": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "isinstance",
    "list",
    "sorted",
    "transform_kwarg",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.to_options.dashify": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "datalad.support.gitrepo.to_options.transform_kwarg": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "dashify",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.gitrepo.unique": {
  "data": {
   "shadows": "datalad.utils.unique"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.ut": {
  "data": {
   "shadows": "datalad.utils"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "datalad.support.gitrepo.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "datalad.support.globbedpaths": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.globbedpaths.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.globbedpaths.GlobbedPaths": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.globbedpaths.GlobbedPaths.__bool__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "datalad.support.globbedpaths.GlobbedPaths.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "datalad.utils.assure_unicode",
    "datalad.utils.getpwd",
    "datalad.utils.partition",
    "list",
    "map",
    "os.path.isabs",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.globbedpaths.GlobbedPaths._expand_globs": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "datalad.support.globbedpaths.glob",
    "datalad.support.globbedpaths.lgr",
    "datalad.utils.chpwd",
    "map",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.support.globbedpaths.GlobbedPaths._expand_globs.normalize_hit": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "os.path.basename",
    "os.path.curdir",
    "os.path.relpath",
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "datalad.support.globbedpaths.GlobbedPaths._get_sub_patterns": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "datalad.support.globbedpaths.glob",
    "os.path.sep",
    "os.path.split"
   ]
  },
  "type": "function"
 },
 "datalad.support.globbedpaths.GlobbedPaths.expand": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.globbedpaths.GlobbedPaths.paths": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.globbedpaths.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.support.globbedpaths.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.support.globbedpaths.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.support.globbedpaths.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "datalad.support.globbedpaths.lgr": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.support.globbedpaths.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.globbedpaths.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.support.globbedpaths.partition": {
  "data": {
   "shadows": "datalad.utils.partition"
  },
  "type": "import"
 },
 "datalad.support.json_py": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.json_py.json_dump_kwargs",
    "dict"
   ]
  },
  "type": "module"
 },
 "datalad.support.json_py.JSONDecodeError": {
  "data": {
   "shadows": "simplejson.JSONDecodeError"
  },
  "type": "import"
 },
 "datalad.support.json_py.LZMAFile": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "datalad.support.json_py.lzma",
    "dir"
   ]
  },
  "type": "function"
 },
 "datalad.support.json_py.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "datalad.support.json_py.compressed_json_dump_kwargs": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.support.json_py.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.support.json_py.dump": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "_open",
    "datalad.support.json_py.compressed_json_dump_kwargs",
    "datalad.support.json_py.dump2fileobj",
    "datalad.support.json_py.io",
    "datalad.support.json_py.json_dump_kwargs",
    "datalad.support.json_py.os",
    "os.makedirs",
    "os.path.dirname",
    "os.path.exists",
    "os.path.lexists"
   ]
  },
  "type": "function"
 },
 "datalad.support.json_py.dump2fileobj": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "datalad.support.json_py.codecs",
    "simplejson.dump"
   ]
  },
  "type": "function"
 },
 "datalad.support.json_py.dump2stream": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "_open",
    "datalad.support.json_py.LZMAFile",
    "datalad.support.json_py.codecs",
    "datalad.support.json_py.compressed_json_dump_kwargs",
    "datalad.support.json_py.os",
    "open",
    "os.makedirs",
    "os.path.dirname",
    "os.path.exists",
    "os.path.lexists",
    "simplejson.dump"
   ]
  },
  "type": "function"
 },
 "datalad.support.json_py.dump2xzstream": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "datalad.support.json_py.dump2stream"
   ]
  },
  "type": "function"
 },
 "datalad.support.json_py.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.support.json_py.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "datalad.support.json_py.json_dump_kwargs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "datalad.support.json_py.json_loads": {
  "data": {
   "shadows": "simplejson.loads"
  },
  "type": "import"
 },
 "datalad.support.json_py.jsondump": {
  "data": {
   "shadows": "simplejson.dump"
  },
  "type": "import"
 },
 "datalad.support.json_py.jsonload": {
  "data": {
   "shadows": "simplejson.load"
  },
  "type": "import"
 },
 "datalad.support.json_py.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.support.json_py.load": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "_open",
    "datalad.support.json_py.LZMAFile",
    "datalad.support.json_py.codecs",
    "datalad.support.json_py.io",
    "exc_str",
    "simplejson.JSONDecodeError",
    "simplejson.load",
    "simplejson.loads"
   ]
  },
  "type": "function"
 },
 "datalad.support.json_py.load_stream": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "_open",
    "datalad.support.json_py.LZMAFile",
    "datalad.support.json_py.codecs",
    "datalad.support.json_py.io",
    "simplejson.loads"
   ]
  },
  "type": "function"
 },
 "datalad.support.json_py.load_xzstream": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "datalad.support.json_py.load_stream"
   ]
  },
  "type": "function"
 },
 "datalad.support.json_py.loads": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "simplejson.loads"
   ]
  },
  "type": "function"
 },
 "datalad.support.json_py.lzma": {
  "data": {
   "shadows": "lzma"
  },
  "type": "import"
 },
 "datalad.support.json_py.makedirs": {
  "data": {
   "shadows": "os.makedirs"
  },
  "type": "import"
 },
 "datalad.support.json_py.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.support.json_py.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.keyring_": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.keyring_.Keyring"
   ]
  },
  "type": "module"
 },
 "datalad.support.keyring_.Keyring": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.keyring_.Keyring.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "datalad.support.keyring_.Keyring._get_service_name": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.keyring_.Keyring._keyring": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datalad.log.lgr.debug",
    "datalad.log.lgr.getEffectiveLevel",
    "datalad.log.lgr.handlers",
    "datalad.support.keyring_.keyring",
    "datalad.support.keyring_.logging",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.keyring_.Keyring.delete": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.support.keyring_.Keyring.get": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "datalad.support.keyring_.os"
   ]
  },
  "type": "function"
 },
 "datalad.support.keyring_.Keyring.set": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "datalad.support.keyring_.MemoryKeyring": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.keyring_.MemoryKeyring.__init__": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "datalad.support.keyring_.MemoryKeyring.delete": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "datalad.support.keyring_.MemoryKeyring.get": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "datalad.support.keyring_.MemoryKeyring.set": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "datalad.support.keyring_.keyring": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "datalad.support.keyring_.lgr": {
  "data": {
   "shadows": "datalad.log.lgr"
  },
  "type": "import"
 },
 "datalad.support.keyring_.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.keyring_.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.locking": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.locking.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.locking.InterProcessLock": {
  "data": {
   "shadows": "fasteners.InterProcessLock"
  },
  "type": "import"
 },
 "datalad.support.locking._get": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "callable",
    "entry",
    "func",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.locking.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "datalad.support.locking.lgr": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.support.locking.lock_if_check_fails": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "datalad.support.locking._get",
    "datalad.support.locking.lgr",
    "exists",
    "fasteners.InterProcessLock",
    "unlink"
   ]
  },
  "type": "function"
 },
 "datalad.support.locking.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.locking.try_lock": {
  "data": {
   "shadows": "fasteners.try_lock"
  },
  "type": "import"
 },
 "datalad.support.nda_": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple",
    "datalad.support.nda_.image03_fields",
    "datalad.support.nda_.image03_file_fields",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.support.nda_.DEFAULT_SERVER": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "datalad.support.nda_.Providers": {
  "data": {
   "shadows": "datalad.downloaders.providers.Providers"
  },
  "type": "import"
 },
 "datalad.support.nda_.__docformat__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datalad.support.nda_.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.support.nda_.cx_Oracle": {
  "data": {
   "shadows": "cx_Oracle"
  },
  "type": "import"
 },
 "datalad.support.nda_.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.support.nda_.get_oracle_db": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "credential",
    "datalad.cfg.obtain",
    "datalad.downloaders.providers.Providers.from_config_files",
    "datalad.support.nda_.DEFAULT_SERVER",
    "datalad.support.nda_.cx_Oracle",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.nda_.image03_Record": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "datalad.support.nda_.image03_fields": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.support.nda_.image03_file_fields": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datalad.support.nda_.lgr": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.support.nda_.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "datalad.support.network": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.network.lgr",
    "datalad.support.network.logging",
    "datalad.support.network.sys",
    "urllib.parse.quote.__doc__"
   ]
  },
  "type": "module"
 },
 "datalad.support.network.DataLadRI": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "datalad.support.network.RegexBasedURLMixin",
    "datalad.support.network.re"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.DataLadRI.as_git_url": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "NotImplementedError",
    "datalad.consts.DATASETS_TOPURL",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.DataLadRI.as_str": {
  "data": {
   "lineno": 804
  },
  "type": "function"
 },
 "datalad.support.network.GitTransportRI": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "datalad.support.network.RegexBasedURLMixin",
    "datalad.support.network.re"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.GitTransportRI.as_str": {
  "data": {
   "lineno": 834
  },
  "type": "function"
 },
 "datalad.support.network.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.support.network.ParseResult": {
  "data": {
   "shadows": "urllib.parse.ParseResult"
  },
  "type": "import"
 },
 "datalad.support.network.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.support.network.PathRI": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "datalad.support.network.RI"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.PathRI._str_to_fields": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.PathRI.as_str": {
  "data": {
   "lineno": 705
  },
  "type": "function"
 },
 "datalad.support.network.PathRI.localpath": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.PathRI.posixpath": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "datalad.support.network.is_windows_path",
    "ntpath.splitdrive",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.Providers": {
  "data": {
   "shadows": "datalad.downloaders.providers.Providers"
  },
  "type": "import"
 },
 "datalad.support.network.PurePath": {
  "data": {
   "shadows": "datalad.utils.PurePath"
  },
  "type": "import"
 },
 "datalad.support.network.RI": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.RI.__bool__": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "any"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.__eq__": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.__getattribute__": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.__init__": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "datalad.support.network.lgr",
    "datalad.support.network.logging",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.__ne__": {
  "data": {
   "lineno": 550
  },
  "type": "function"
 },
 "datalad.support.network.RI.__new__": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.network.RI",
    "datalad.support.network._guess_ri_cls",
    "datalad.utils.PurePath",
    "isinstance",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.__repr__": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.__setattr__": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.__str__": {
  "data": {
   "lineno": 479
  },
  "type": "function"
 },
 "datalad.support.network.RI._get_blank_fields": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "classmethod",
    "collections.OrderedDict"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI._set_from_fields": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "ValueError",
    "datalad.utils.assure_bytes",
    "datalad.utils.map_items",
    "dict",
    "isinstance",
    "set",
    "str",
    "urllib.parse.urlencode"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.fields": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.from_str": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls._str_to_fields"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RI.localpath": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RegexBasedURLMixin": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.RegexBasedURLMixin._normalize_fields": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.RegexBasedURLMixin._str_to_fields": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "cls",
    "cls._REGEX.match",
    "cls._get_blank_fields",
    "cls._normalize_fields"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.Request": {
  "data": {
   "shadows": "urllib.request.Request"
  },
  "type": "import"
 },
 "datalad.support.network.SSHRI": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "datalad.support.network.RegexBasedURLMixin",
    "datalad.support.network.re"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.SSHRI._normalize_fields": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "classmethod",
    "datalad.support.network.unescape_ssh_path"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.SSHRI.as_str": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "datalad.support.network.escape_ssh_path"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.Session": {
  "data": {
   "shadows": "requests.Session"
  },
  "type": "import"
 },
 "datalad.support.network.SimpleURLStamper": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.SimpleURLStamper.__call__": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "datalad.support.network.get_url_response_stamp",
    "datalad.support.network.retry_urlopen",
    "dict",
    "urllib.request.Request"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.SimpleURLStamper.__init__": {
  "data": {
   "lineno": 280
  },
  "type": "function"
 },
 "datalad.support.network.URL": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "datalad.support.network.RI"
   ]
  },
  "type": "class"
 },
 "datalad.support.network.URL._fields_to_pr": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "classmethod",
    "cls._FIELDS",
    "urllib.parse.ParseResult",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL._parse_qs": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.utils.assure_unicode",
    "datalad.utils.map_items",
    "isinstance",
    "len",
    "list",
    "urllib.parse.parse_qsl"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL._pr_to_fields": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "_getattr",
    "classmethod",
    "cls._FIELDS",
    "datalad.support.network.lgr",
    "datalad.support.network.re",
    "getattr",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL._pr_to_fields._getattr": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL._str_to_fields": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "classmethod",
    "datalad.support.network.URL",
    "urllib.parse.unquote",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL.as_str": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "urllib.parse.urlunparse"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL.fragment_dict": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL.localpath": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "ValueError",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL.query_dict": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.URL.to_pr": {
  "data": {
   "lineno": 594
  },
  "type": "function"
 },
 "datalad.support.network.URLError": {
  "data": {
   "shadows": "urllib.error.URLError"
  },
  "type": "import"
 },
 "datalad.support.network._SSH_ESCAPED_CHARACTERS": {
  "data": {
   "lineno": 843
  },
  "type": "constant"
 },
 "datalad.support.network.__urlopen_requests": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "isinstance",
    "requests.Session",
    "urllib.request.Request"
   ]
  },
  "type": "function"
 },
 "datalad.support.network._guess_ri_cls": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "datalad.support.cache.lru_cache",
    "datalad.support.network._split_colon",
    "datalad.support.network.is_windows_path",
    "datalad.support.network.lgr",
    "datalad.utils.PurePath",
    "isinstance",
    "len",
    "set",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "datalad.support.network._split_colon": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "datalad.support.network.re"
   ]
  },
  "type": "function"
 },
 "datalad.support.network._urlquote": {
  "data": {
   "shadows": "urllib.parse.quote"
  },
  "type": "import"
 },
 "datalad.support.network.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.support.network.assure_bytes": {
  "data": {
   "shadows": "datalad.utils.assure_bytes"
  },
  "type": "import"
 },
 "datalad.support.network.assure_dir": {
  "data": {
   "shadows": "datalad.utils.assure_dir"
  },
  "type": "import"
 },
 "datalad.support.network.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.support.network.calendar": {
  "data": {
   "shadows": "calendar"
  },
  "type": "import"
 },
 "datalad.support.network.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.support.network.consts": {
  "data": {
   "shadows": "datalad.consts"
  },
  "type": "import"
 },
 "datalad.support.network.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.support.network.dlurljoin": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "datalad.support.network.os",
    "urllib.parse.urljoin",
    "urllib.parse.urlparse",
    "urllib.parse.urlunparse"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.download_url": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "datalad.downloaders.providers.Providers.from_config_files",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.email.utils": {
  "data": {
   "shadows": "email.utils"
  },
  "type": "import"
 },
 "datalad.support.network.escape_ssh_path": {
  "data": {
   "lineno": 847,
   "symbols_in_volume": [
    "datalad.support.network._SSH_ESCAPED_CHARACTERS"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.network.get_cached_url_content": {
  "data": {
   "lineno": 978,
   "symbols_in_volume": [
    "Exception",
    "datalad.cfg.get",
    "datalad.dochelpers.exc_str",
    "datalad.downloaders.providers.Providers.from_config_files",
    "datalad.support.network.get_url_cache_filename",
    "datalad.support.network.lgr",
    "datalad.support.network.os",
    "datalad.support.network.pickle",
    "datalad.support.network.time",
    "datalad.utils.assure_dir",
    "fetcher",
    "float",
    "open",
    "os.path.dirname"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_local_file_url": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "datalad.support.network.URL",
    "datalad.support.network.re",
    "datalad.utils.Path",
    "datalad.utils.on_windows",
    "str",
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_response_disposition_filename": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "dict",
    "map"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_tld": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_url_cache_filename": {
  "data": {
   "lineno": 963,
   "symbols_in_volume": [
    "datalad.cfg.obtain",
    "datalad.support.network.pickle",
    "hashlib.md5",
    "os.path.join",
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_url_disposition_filename": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "datalad.support.network.get_response_disposition_filename",
    "datalad.support.network.retry_urlopen",
    "str",
    "urllib.request.Request"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_url_filename": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "datalad.support.network.get_url_disposition_filename",
    "datalad.support.network.get_url_straight_filename"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_url_response_stamp": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "datalad.support.network.calendar",
    "dict",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.get_url_straight_filename": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "len",
    "urllib.parse.unquote",
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.is_datalad_compat_ri": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "datalad.support.network.DataLadRI",
    "datalad.support.network.RI",
    "datalad.support.network.SSHRI",
    "datalad.support.network.URL",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.is_ssh": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "datalad.support.network.SSHRI",
    "datalad.support.network.URL",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.is_url": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "datalad.support.network.SSHRI",
    "datalad.support.network.URL",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.is_url_quoted": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "urllib.parse.unquote"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.is_windows_path": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "ntpath.splitdrive"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.support.network.iso8601": {
  "data": {
   "shadows": "iso8601"
  },
  "type": "import"
 },
 "datalad.support.network.iso8601_to_epoch": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "datalad.support.network.calendar",
    "datalad.support.network.iso8601"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.lgr": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.support.network.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.network.lru_cache": {
  "data": {
   "shadows": "datalad.support.cache.lru_cache"
  },
  "type": "import"
 },
 "datalad.support.network.map_items": {
  "data": {
   "shadows": "datalad.utils.map_items"
  },
  "type": "import"
 },
 "datalad.support.network.md5": {
  "data": {
   "shadows": "hashlib.md5"
  },
  "type": "import"
 },
 "datalad.support.network.mktime_tz": {
  "data": {
   "shadows": "email.utils.mktime_tz"
  },
  "type": "import"
 },
 "datalad.support.network.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.support.network.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.network.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.network.parse_qsl": {
  "data": {
   "shadows": "urllib.parse.parse_qsl"
  },
  "type": "import"
 },
 "datalad.support.network.parse_url_opts": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "datalad.support.network.URL",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.parsedate_tz": {
  "data": {
   "shadows": "email.utils.parsedate_tz"
  },
  "type": "import"
 },
 "datalad.support.network.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "datalad.support.network.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.network.retry_urlopen": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "datalad.support.network.__urlopen_requests",
    "datalad.support.network.lgr",
    "range",
    "urllib.error.URLError"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.rfc2822_to_epoch": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "email.utils.mktime_tz",
    "email.utils.parsedate_tz"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.same_website": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "isinstance",
    "str",
    "urllib.parse.urlparse"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.network.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.support.network.unescape_ssh_path": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "datalad.support.network._SSH_ESCAPED_CHARACTERS"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.urlencode": {
  "data": {
   "shadows": "urllib.parse.urlencode"
  },
  "type": "import"
 },
 "datalad.support.network.urljoin": {
  "data": {
   "shadows": "urllib.parse.urljoin"
  },
  "type": "import"
 },
 "datalad.support.network.urlparse": {
  "data": {
   "shadows": "urllib.parse.urlparse"
  },
  "type": "import"
 },
 "datalad.support.network.urlquote": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "urllib.parse.quote"
   ]
  },
  "type": "function"
 },
 "datalad.support.network.urlsplit": {
  "data": {
   "shadows": "urllib.parse.urlsplit"
  },
  "type": "import"
 },
 "datalad.support.network.urlunparse": {
  "data": {
   "shadows": "urllib.parse.urlunparse"
  },
  "type": "import"
 },
 "datalad.support.network.urlunquote": {
  "data": {
   "shadows": "urllib.parse.unquote"
  },
  "type": "import"
 },
 "datalad.support.network.win_splitdrive": {
  "data": {
   "shadows": "ntpath.splitdrive"
  },
  "type": "import"
 },
 "datalad.support.param": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.param.re"
   ]
  },
  "type": "module"
 },
 "datalad.support.param.Parameter": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "datalad.support.param.argparse",
    "datalad.utils.getargspec",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.param.Parameter.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "expand_constraint_spec",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.param.Parameter.get_autodoc": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "datalad.support.param._whitespace_re",
    "datalad.support.param.textwrap",
    "int",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.param.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.support.param._whitespace_re": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datalad.support.param.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "datalad.support.param.getargspec": {
  "data": {
   "shadows": "datalad.utils.getargspec"
  },
  "type": "import"
 },
 "datalad.support.param.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.param.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "datalad.support.path": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.path._get_unicode_robust_version",
    "os.path.abspath",
    "os.path.basename",
    "os.path.curdir",
    "os.path.dirname",
    "os.path.exists",
    "os.path.isabs",
    "os.path.isdir",
    "os.path.join",
    "os.path.lexists",
    "os.path.normpath",
    "os.path.pardir",
    "os.path.pathsep",
    "os.path.realpath",
    "os.path.relpath",
    "os.path.sep"
   ]
  },
  "type": "module"
 },
 "datalad.support.path._defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "datalad.support.path._get_parent_paths_check": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.path.curdir",
    "datalad.support.path.isabs",
    "datalad.support.path.pardir",
    "datalad.support.path.sep"
   ]
  },
  "type": "function"
 },
 "datalad.support.path._get_unicode_robust_version": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "f",
    "getattr"
   ]
  },
  "type": "function"
 },
 "datalad.support.path._get_unicode_robust_version.wrapped": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "assure_bytes",
    "f",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.support.path.abspath": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "datalad.support.path.basename": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "datalad.support.path.curdir": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "datalad.support.path.dirname": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "datalad.support.path.dropwhile": {
  "data": {
   "shadows": "itertools.dropwhile"
  },
  "type": "import"
 },
 "datalad.support.path.exists": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "datalad.support.path.get_parent_paths": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "collections.defaultdict",
    "datalad.support.path._get_parent_paths_check",
    "len",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.support.path.isabs": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.support.path.isdir": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datalad.support.path.join": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datalad.support.path.lexists": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "datalad.support.path.normpath": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "datalad.support.path.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.support.path.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.path.pardir": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "datalad.support.path.pathsep": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "datalad.support.path.realpath": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "datalad.support.path.relpath": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "datalad.support.path.robust_abspath": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "OSError",
    "datalad.support.path.abspath",
    "datalad.support.path.isabs",
    "datalad.support.path.join",
    "datalad.support.path.normpath",
    "datalad.support.path.os",
    "getpwd"
   ]
  },
  "type": "function"
 },
 "datalad.support.path.sep": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "datalad.support.path.split_ext": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "itertools.dropwhile",
    "len",
    "list",
    "reversed"
   ]
  },
  "type": "function"
 },
 "datalad.support.path.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "datalad.support.protocol": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.protocol.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.protocol.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "datalad.support.protocol.DryRunExternalsProtocol": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "datalad.support.protocol.DryRunProtocol"
   ]
  },
  "type": "class"
 },
 "datalad.support.protocol.DryRunExternalsProtocol.__init__": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "datalad.support.protocol.DryRunExternalsProtocol",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunExternalsProtocol.do_execute_callables": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunExternalsProtocol.records_callables": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "datalad.support.protocol.ProtocolInterface"
   ]
  },
  "type": "class"
 },
 "datalad.support.protocol.DryRunProtocol.__init__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "datalad.support.protocol.DryRunProtocol",
    "os.linesep",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol.add_section": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol.do_execute_callables": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol.do_execute_ext_commands": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol.end_section": {
  "data": {
   "lineno": 226
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol.records_callables": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol.records_ext_commands": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.DryRunProtocol.start_section": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeExternalsProtocol": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "datalad.support.protocol.ExecutionTimeProtocol"
   ]
  },
  "type": "class"
 },
 "datalad.support.protocol.ExecutionTimeExternalsProtocol.records_callables": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "datalad.support.protocol.ProtocolInterface"
   ]
  },
  "type": "class"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.__init__": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "datalad.support.protocol.ExecutionTimeProtocol",
    "os.linesep",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.add_section": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.do_execute_callables": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.do_execute_ext_commands": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.end_section": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "datalad.support.protocol.time"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.records_callables": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.records_ext_commands": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ExecutionTimeProtocol.start_section": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "datalad.support.protocol.time",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "datalad.support.protocol.ProtocolInterface"
   ]
  },
  "type": "class"
 },
 "datalad.support.protocol.NullProtocol.__init__": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "datalad.support.protocol.NullProtocol",
    "os.linesep",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol.add_section": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol.do_execute_callables": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol.do_execute_ext_commands": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol.end_section": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol.records_callables": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol.records_ext_commands": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.NullProtocol.start_section": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.protocol.ProtocolInterface.__getitem__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.__init__": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.__iter__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.__len__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.__str__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "os.linesep"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.add_section": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.do_execute_callables": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.do_execute_ext_commands": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.end_section": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.records_callables": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.records_ext_commands": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.start_section": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.ProtocolInterface.write_to_file": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.support.protocol.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "datalad.support.protocol.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "datalad.support.protocol.lgr": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "datalad.support.protocol.linesep": {
  "data": {
   "shadows": "os.linesep"
  },
  "type": "import"
 },
 "datalad.support.protocol.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.protocol.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.support.repo": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.repo.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.repo.Flyweight": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "datalad.support.repo.Flyweight.__call__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "InvalidInstanceRequestError",
    "type.__call__"
   ]
  },
  "type": "function"
 },
 "datalad.support.repo.Flyweight._flyweight_id_from_args": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "datalad.support.repo.Flyweight._flyweight_reject": {
  "data": {
   "lineno": 119
  },
  "type": "function"
 },
 "datalad.support.repo.PathBasedFlyweight": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "datalad.support.repo.Flyweight"
   ]
  },
  "type": "class"
 },
 "datalad.support.repo.PathBasedFlyweight._flyweight_id_from_args": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "RI",
    "TypeError",
    "ValueError",
    "datalad.support.repo.lgr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.repo.PathBasedFlyweight._flyweight_postproc_path": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.repo.PathBasedFlyweight._flyweight_preproc_path": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "datalad.support.repo.RepoInterface": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.repo.lgr": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datalad.support.repo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.repo.op": {
  "data": {
   "shadows": "path"
  },
  "type": "import"
 },
 "datalad.support.repo.path_based_str_repr": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "datalad.support.repo.path_based_str_repr.__repr__": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "datalad.support.repo.path_based_str_repr.__str__": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "datalad.support.repo.ut": {
  "data": {
   "shadows": "utils"
  },
  "type": "import"
 },
 "datalad.support.repodates": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.repodates.logging",
    "datalad.support.repodates.re"
   ]
  },
  "type": "module"
 },
 "datalad.support.repodates.ANNEX_DATE_RE": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "datalad.support.repodates.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.support.repodates.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.support.repodates._cat_blob": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "function"
 },
 "datalad.support.repodates.annex_dates": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "blob_fn",
    "datalad.support.repodates.branch_blobs",
    "datalad.support.repodates.branch_blobs_in_tree",
    "datalad.support.repodates.search_annex_timestamps"
   ]
  },
  "type": "function"
 },
 "datalad.support.repodates.branch_blobs": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "datalad.log.log_progress",
    "datalad.support.repodates._cat_blob",
    "datalad.support.repodates.lgr",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.repodates.branch_blobs_in_tree": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "datalad.log.log_progress",
    "datalad.support.repodates._cat_blob",
    "datalad.support.repodates.lgr",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.repodates.check_dates": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ValueError",
    "cmp_fn",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.repodates.annex_dates",
    "datalad.support.repodates.lgr",
    "datalad.support.repodates.log_dates",
    "datalad.support.repodates.operator",
    "datalad.support.repodates.tag_dates",
    "datalad.support.repodates.time",
    "int",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.repodates.lgr": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.support.repodates.log_dates": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.support.repodates.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.support.repodates.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.repodates.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "datalad.support.repodates.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.repodates.search_annex_timestamps": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "datalad.support.repodates.ANNEX_DATE_RE",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.support.repodates.tag_dates": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.support.repodates.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.support.s3": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "ValueError",
    "__name__",
    "boto.exception.S3ResponseError",
    "boto.s3.connection.OrdinaryCallingFormat",
    "boto.s3.key.Key",
    "datalad.dochelpers.exc_str",
    "datalad.support.s3.boto",
    "datalad.support.s3.lgr",
    "datalad.support.s3.logging",
    "datalad.support.s3.name",
    "datalad.support.s3.sys",
    "isinstance",
    "len",
    "locals",
    "print"
   ]
  },
  "type": "module"
 },
 "datalad.support.s3.AWS_S3": {
  "data": {
   "shadows": "datalad.downloaders.credentials.AWS_S3"
  },
  "type": "import"
 },
 "datalad.support.s3.AccessDeniedError": {
  "data": {
   "shadows": "datalad.support.exceptions.AccessDeniedError"
  },
  "type": "import"
 },
 "datalad.support.s3.AccessPermissionExpiredError": {
  "data": {
   "shadows": "datalad.support.exceptions.AccessPermissionExpiredError"
  },
  "type": "import"
 },
 "datalad.support.s3.AnonymousAccessDeniedError": {
  "data": {
   "shadows": "datalad.support.exceptions.AnonymousAccessDeniedError"
  },
  "type": "import"
 },
 "datalad.support.s3.DownloadError": {
  "data": {
   "shadows": "datalad.support.exceptions.DownloadError"
  },
  "type": "import"
 },
 "datalad.support.s3.Key": {
  "data": {
   "shadows": "boto.s3.key.Key"
  },
  "type": "import"
 },
 "datalad.support.s3.OrdinaryCallingFormat": {
  "data": {
   "shadows": "boto.s3.connection.OrdinaryCallingFormat"
  },
  "type": "import"
 },
 "datalad.support.s3.Request": {
  "data": {
   "shadows": "urllib.request.Request"
  },
  "type": "import"
 },
 "datalad.support.s3.S3ResponseError": {
  "data": {
   "shadows": "boto.exception.S3ResponseError"
  },
  "type": "import"
 },
 "datalad.support.s3.S3_ADMIN_CREDENTIAL": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.support.s3.S3_TEST_CREDENTIAL": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datalad.support.s3.URL": {
  "data": {
   "shadows": "datalad.support.network.URL"
  },
  "type": "import"
 },
 "datalad.support.s3.VersionedFilesPool": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.s3.VersionedFilesPool.__call__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "boto.s3.key.Key",
    "datalad.support.s3.mimetypes",
    "os.path.splitext"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.VersionedFilesPool.__init__": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "datalad.support.s3.VersionedFilesPool.bucket": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.VersionedFilesPool.reset_version": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "datalad.support.s3.__docformat__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datalad.support.s3._check_S3ResponseError": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "datalad.dochelpers.exc_str",
    "datalad.support.exceptions.AccessPermissionExpiredError",
    "datalad.support.s3.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3._gen_bucket_test0": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "datalad.support.s3.VersionedFilesPool",
    "datalad.support.s3.gen_test_bucket",
    "datalad.support.s3.lgr",
    "datalad.support.s3.set_bucket_public_access_policy",
    "files",
    "files.reset_version",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3._get_bucket_connection": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "credential",
    "datalad.downloaders.credentials.AWS_S3",
    "datalad.support.s3.boto"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3._handle_exception": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.dochelpers.exc_str",
    "datalad.support.exceptions.AccessDeniedError",
    "datalad.support.exceptions.DownloadError"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.add_version_to_url": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "datalad.support.network.URL",
    "datalad.support.s3.re",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.boto": {
  "data": {
   "shadows": "boto"
  },
  "type": "import"
 },
 "datalad.support.s3.datalad.log": {
  "data": {
   "shadows": "datalad.log"
  },
  "type": "import"
 },
 "datalad.support.s3.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.s3.gen_bucket_test0_nonversioned": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "datalad.support.s3._gen_bucket_test0"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.gen_bucket_test0_versioned": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "datalad.support.s3._gen_bucket_test0"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.gen_bucket_test1_dirs": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "datalad.support.s3.VersionedFilesPool",
    "datalad.support.s3.gen_test_bucket",
    "datalad.support.s3.set_bucket_public_access_policy",
    "files"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.gen_bucket_test1_manydirs": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "datalad.support.s3.VersionedFilesPool",
    "datalad.support.s3.gen_test_bucket",
    "datalad.support.s3.set_bucket_public_access_policy",
    "files"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.gen_bucket_test2_obscurenames_versioned": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "datalad.support.s3.VersionedFilesPool",
    "datalad.support.s3.gen_test_bucket",
    "datalad.support.s3.set_bucket_public_access_policy",
    "files"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.gen_test_bucket": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "datalad.support.s3.S3_ADMIN_CREDENTIAL",
    "datalad.support.s3._get_bucket_connection",
    "datalad.support.s3.lgr",
    "datalad.support.s3.prune_and_delete_bucket"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.get_bucket": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "boto.exception.S3ResponseError",
    "datalad.dochelpers.exc_str",
    "datalad.support.exceptions.AnonymousAccessDeniedError",
    "datalad.support.s3._handle_exception",
    "datalad.support.s3.lgr",
    "datalad.support.s3.try_multiple_dec_s3"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.get_key_url": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.network.urlquote"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.get_versioned_url": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "S3Authenticator",
    "ValueError",
    "boto.exception.S3ResponseError",
    "boto.s3.key.Key",
    "datalad.support.network.URL",
    "datalad.support.s3.add_version_to_url",
    "isinstance",
    "len",
    "sorted",
    "urllib.request.Request",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.lgr": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datalad.support.s3.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.s3.mimetypes": {
  "data": {
   "shadows": "mimetypes"
  },
  "type": "import"
 },
 "datalad.support.s3.name": {
  "data": {
   "lineno": 551
  },
  "type": "constant"
 },
 "datalad.support.s3.prune_and_delete_bucket": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "datalad.support.s3.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.s3.set_bucket_public_access_policy": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "datalad.support.s3.splitext": {
  "data": {
   "shadows": "os.path.splitext"
  },
  "type": "import"
 },
 "datalad.support.s3.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.s3.try_multiple_dec": {
  "data": {
   "shadows": "datalad.utils.try_multiple_dec"
  },
  "type": "import"
 },
 "datalad.support.s3.try_multiple_dec_s3": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "boto.exception.S3ResponseError",
    "datalad.support.s3._check_S3ResponseError",
    "datalad.support.s3.lgr",
    "datalad.utils.try_multiple_dec"
   ]
  },
  "type": "function"
 },
 "datalad.support.s3.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "datalad.support.s3.urlquote": {
  "data": {
   "shadows": "datalad.support.network.urlquote"
  },
  "type": "import"
 },
 "datalad.support.sshrun": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.sshrun.logging"
   ]
  },
  "type": "module"
 },
 "datalad.support.sshrun.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.support.sshrun.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.support.sshrun.SSHRun": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "datalad.interface.base.Interface",
    "datalad.interface.base.build_doc",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.support.sshrun.SSHRun.__call__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "datalad.ssh_manager.get_connection",
    "datalad.support.sshrun.lgr",
    "datalad.support.sshrun.os",
    "datalad.support.sshrun.sys",
    "datalad.support.sshrun.tempfile",
    "datalad.utils.split_cmdline",
    "len",
    "repr",
    "ssh",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.sshrun.__docformat__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datalad.support.sshrun.build_doc": {
  "data": {
   "shadows": "datalad.interface.base.build_doc"
  },
  "type": "import"
 },
 "datalad.support.sshrun.lgr": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "datalad.support.sshrun.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.sshrun.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.sshrun.split_cmdline": {
  "data": {
   "shadows": "datalad.utils.split_cmdline"
  },
  "type": "import"
 },
 "datalad.support.sshrun.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.support.sshrun.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.sshrun.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.support.stats": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.stats.humanize"
   ]
  },
  "type": "module"
 },
 "datalad.support.stats.ActivityStats": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "datalad.support.stats._COUNTS",
    "datalad.support.stats._LISTS",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.stats.ActivityStats.__add__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "datalad.support.stats.ActivityStats"
   ]
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.__eq__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.__getattribute__": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datalad.support.stats.ActivityStats",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.__iadd__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.__ne__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.__repr__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.__setattr__": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "datalad.support.stats.ActivityStats",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats._get_updated_total": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats._reset_values": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "datalad.support.stats._COUNTS",
    "datalad.support.stats._LISTS"
   ]
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.as_dict": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.as_str": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.stats._FORMATTERS",
    "enumerate",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.get_total": {
  "data": {
   "lineno": 126
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.increment": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "datalad.support.stats.ActivityStats.reset": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "datalad.support.stats._COUNTS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "datalad.support.stats._FORMATTERS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "datalad.support.stats._LISTS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "datalad.support.stats.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.support.stats.humanize": {
  "data": {
   "shadows": "humanize"
  },
  "type": "import"
 },
 "datalad.support.status": {
  "data": {},
  "type": "module"
 },
 "datalad.support.status.FileStatus": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.status.FileStatus.__eq__": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NotImplemented",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.status.FileStatus.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "datalad.support.status.FileStatus.__ne__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "NotImplemented",
    "RuntimeError",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.status.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.support.strings": {
  "data": {},
  "type": "module"
 },
 "datalad.support.strings.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.support.strings.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.support.strings.apply_replacement_rules": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "datalad.support.strings.get_replacement_dict",
    "datalad.support.strings.re"
   ]
  },
  "type": "function"
 },
 "datalad.support.strings.get_replacement_dict": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "collections.OrderedDict",
    "isinstance",
    "len",
    "list",
    "repr",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.strings.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_annexrepo": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "f",
    "range"
   ]
  },
  "type": "module"
 },
 "datalad.support.tests.test_annexrepo.AnnexBatchCommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.AnnexBatchCommandError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.AnnexJsonProtocol": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexJsonProtocol"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.DEFAULT_BRANCH": {
  "data": {
   "shadows": "datalad.tests.utils.DEFAULT_BRANCH"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.DOTALL": {
  "data": {
   "shadows": "re.DOTALL"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.FileInGitError": {
  "data": {
   "shadows": "datalad.support.exceptions.FileInGitError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.FileNotInAnnexError": {
  "data": {
   "shadows": "datalad.support.exceptions.FileNotInAnnexError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.FileNotInRepositoryError": {
  "data": {
   "shadows": "datalad.support.exceptions.FileNotInRepositoryError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.IncompleteResultsError": {
  "data": {
   "shadows": "datalad.support.exceptions.IncompleteResultsError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.InsufficientArgumentsError": {
  "data": {
   "shadows": "datalad.support.exceptions.InsufficientArgumentsError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.Ls": {
  "data": {
   "shadows": "datalad.interface.ls.Ls"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.MissingExternalDependency": {
  "data": {
   "shadows": "datalad.support.exceptions.MissingExternalDependency"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.OBSCURE_FILENAME": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_FILENAME"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.OutOfSpaceError": {
  "data": {
   "shadows": "datalad.support.exceptions.OutOfSpaceError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.OutdatedExternalDependency": {
  "data": {
   "shadows": "datalad.support.exceptions.OutdatedExternalDependency"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ProcessAnnexProgressIndicators": {
  "data": {
   "shadows": "datalad.support.annexrepo.ProcessAnnexProgressIndicators"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.QuietConsoleLog": {
  "data": {
   "shadows": "datalad.ui.dialog.QuietConsoleLog"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.RemoteNotAvailableError": {
  "data": {
   "shadows": "datalad.support.exceptions.RemoteNotAvailableError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.WEB_SPECIAL_REMOTE_UUID": {
  "data": {
   "shadows": "datalad.consts.WEB_SPECIAL_REMOTE_UUID"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.WitlessRunner": {
  "data": {
   "shadows": "datalad.cmd.WitlessRunner"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo._HEAVY_TREE": {
  "data": {
   "lineno": 2223
  },
  "type": "constant"
 },
 "datalad.support.tests.test_annexrepo.__test_get_md5s": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.support.tests.test_annexrepo.tree1args",
    "datalad.tests.utils.find_files",
    "datalad.tests.utils.with_tree",
    "os.path.basename",
    "print"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo._get_size_from_perc_complete": {
  "data": {
   "shadows": "datalad.support.annexrepo._get_size_from_perc_complete"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo._test_AnnexRepo_get_contentlocation": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.chpwd",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo._test_add_under_subdir": {
  "data": {
   "lineno": 2061,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.path",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.join",
    "runner"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.assert_cwd_unchanged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_cwd_unchanged"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_is": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_is_instance": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_not_is_instance": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_is_instance"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.check_commit_annex_commit_changed": {
  "data": {
   "lineno": 2129,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.external_versions.external_versions",
    "datalad.support.path",
    "datalad.support.path.basename",
    "datalad.support.path.join",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.with_tree",
    "glob.glob"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.check_files_split": {
  "data": {
   "lineno": 2233,
   "symbols_in_volume": [
    "cls",
    "datalad.api.save",
    "datalad.support.path.join",
    "datalad.support.tests.test_annexrepo._HEAVY_TREE",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.with_tree",
    "f",
    "f.write",
    "glob.glob",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.check_files_split_exc": {
  "data": {
   "lineno": 2200,
   "symbols_in_volume": [
    "Exception",
    "cls",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "f",
    "isinstance",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.deq_": {
  "data": {
   "shadows": "datalad.tests.utils.assert_dict_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.dl": {
  "data": {
   "shadows": "datalad.api"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.dl_cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.find_files": {
  "data": {
   "shadows": "datalad.tests.utils.find_files"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.get_connection_hash": {
  "data": {
   "shadows": "datalad.support.sshconnector.get_connection_hash"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.get_linux_distribution": {
  "data": {
   "shadows": "datalad.utils.get_linux_distribution"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.get_most_obscure_supported_name": {
  "data": {
   "shadows": "datalad.tests.utils.get_most_obscure_supported_name"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.known_failure_v6": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_v6"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.local_testrepo_flavors": {
  "data": {
   "shadows": "datalad.tests.utils.local_testrepo_flavors"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.mkdir": {
  "data": {
   "shadows": "os.mkdir"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ok_annex_get": {
  "data": {
   "shadows": "datalad.tests.utils.ok_annex_get"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ok_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_under_git"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ok_git_config_not_empty": {
  "data": {
   "shadows": "datalad.tests.utils.ok_git_config_not_empty"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.op": {
  "data": {
   "shadows": "datalad.support.path"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.relpath": {
  "data": {
   "shadows": "os.path.relpath"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.set_annex_version": {
  "data": {
   "shadows": "datalad.tests.utils.set_annex_version"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.skip_if": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.skip_if_root": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_root"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.skip_nomultiplex_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_nomultiplex_ssh"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_add_submodule": {
  "data": {
   "lineno": 1722,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_add_to_annex": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_add_to_git": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.FileInGitError",
    "datalad.support.path",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_addurl_batched_and_set_metadata": {
  "data": {
   "lineno": 1937,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "dict",
    "urllib.parse.urljoin"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_addurl_to_file_batched": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "datalad.cfg.get",
    "datalad.consts.WEB_SPECIAL_REMOTE_UUID",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo._unique_instances.clear",
    "datalad.support.exceptions.AnnexBatchCommandError",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.unlink",
    "len",
    "os.path.join",
    "shutil.copyfile",
    "urllib.parse.urljoin",
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_always_commit": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "get_annex_commit_counts",
    "len",
    "open",
    "os.path.join",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_always_commit.get_annex_commit_counts": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_backend_option": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.support.tests.test_annexrepo.tree1args",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_commit": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datalad.support.exceptions.FileNotInRepositoryError",
    "datalad.support.path",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_crippled_filesystem": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_dirty": {
  "data": {
   "lineno": 1746,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.external_versions.external_versions",
    "datalad.support.path",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_file_has_content": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_annex_get",
    "datalad.tests.utils.with_parametric_batch",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_flyweight": {
  "data": {
   "lineno": 1672,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_not_is_instance",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get": {
  "data": {
   "lineno": 874,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.join",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get.check_run": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "orig_run"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_contentlocation": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "datalad.support.tests.test_annexrepo._test_AnnexRepo_get_contentlocation"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_corresponding_branch": {
  "data": {
   "lineno": 1962,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_file_backend": {
  "data": {
   "lineno": 675,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.ok_annex_get",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_file_key": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "IOError",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.exceptions.FileInGitError",
    "datalad.support.exceptions.FileNotInAnnexError",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_outofspace": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.OutOfSpaceError",
    "datalad.support.tests.test_annexrepo.re",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_re_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "str",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_outofspace.raise_cmderror": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_remote_na": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.RemoteNotAvailableError",
    "datalad.support.path",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_submodules": {
  "data": {
   "lineno": 1741,
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.known_failure_v6"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_toppath": {
  "data": {
   "lineno": 1702,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.get_toppath",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.Path",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_get_tracking_branch": {
  "data": {
   "lineno": 1981,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_instance_brand_new": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.path",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_instance_from_clone": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.tests.test_annexrepo.logging",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_instance_from_existing": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_is_direct_mode": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_is_direct_mode_gitrepo": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.path",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tempfile",
    "os.mkdir",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_is_managed_branch": {
  "data": {
   "lineno": 1990,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_is_under_annex": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_annex_get",
    "datalad.tests.utils.with_parametric_batch",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_metadata": {
  "data": {
   "lineno": 1856,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datalad.support.path",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tempfile",
    "dict",
    "len",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_migrating_backends": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.tests.test_annexrepo.gc",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.ok_annex_get",
    "datalad.tests.utils.ok_git_config_not_empty",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_on_uninited_annex": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.exists",
    "os.path.join",
    "runner"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_set_remote_url": {
  "data": {
   "lineno": 1806,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_update_submodule": {
  "data": {
   "lineno": 1737,
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_AnnexRepo_web_remote": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "datalad.consts.WEB_SPECIAL_REMOTE_UUID",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "isinstance",
    "len",
    "list",
    "os.path.curdir",
    "os.path.join",
    "os.path.pardir",
    "set",
    "urllib.parse.urljoin",
    "urllib.parse.urlsplit"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_ProcessAnnexProgressIndicators": {
  "data": {
   "lineno": 1572,
   "symbols_in_volume": [
    "datalad.support.annexrepo.ProcessAnnexProgressIndicators",
    "datalad.tests.utils.assert_is",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.swallow_outputs",
    "datalad.ui.dialog.QuietConsoleLog",
    "datalad.ui.ui.ui",
    "isinstance",
    "len",
    "proc",
    "proc.finish",
    "proc.pbars",
    "proc.total_pbar",
    "proc.total_pbar.current",
    "proc.total_pbar.total"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_add_no_dotfiles": {
  "data": {
   "lineno": 1484,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join",
    "print"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_backends": {
  "data": {
   "lineno": 1108,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.rmtree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_cmd_expect_fail": {
  "data": {
   "lineno": 2359,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.support.tests.test_annexrepo.logging",
    "datalad.tests.utils.assert_re_in",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "re.DOTALL"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_copy_to": {
  "data": {
   "lineno": 1287,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.exceptions.FileInGitError",
    "datalad.support.exceptions.IncompleteResultsError",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "orig_run",
    "os.path.join",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_copy_to.fail_to_copy": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError",
    "orig_run"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_copy_to.fail_to_copy_get_expected": {
  "data": {
   "lineno": 1356
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_copy_to.ok_copy": {
  "data": {
   "lineno": 1315,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_in"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_drop": {
  "data": {
   "lineno": 1369,
   "symbols_in_volume": [
    "TypeError",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.exceptions.CommandError",
    "datalad.support.exceptions.InsufficientArgumentsError",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_get_annexed_files": {
  "data": {
   "lineno": 1410,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tree",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_remove": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datalad.support.path",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_testrepos",
    "len",
    "list",
    "open",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_repo_sameas_special": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_sameas_remote",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_ssh": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "all",
    "any",
    "datalad.ssh_manager._connections",
    "datalad.ssh_manager.close",
    "datalad.ssh_manager.socket_dir",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo._unique_instances.clear",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.external_versions.external_versions",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.sshconnector.get_connection_hash",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_nomultiplex_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "list",
    "map",
    "os.path.exists",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_version_handling_at_min_version": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "OSError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.GIT_ANNEX_MIN_VERSION",
    "datalad.support.annexrepo.AnnexRepo._check_git_annex_version",
    "datalad.support.annexrepo.AnnexRepo.git_annex_version",
    "datalad.support.path",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.set_annex_version",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.rmtree",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annex_version_handling_bad_git_annex": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": [
    "OSError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.git_annex_version",
    "datalad.support.exceptions.MissingExternalDependency",
    "datalad.support.exceptions.OutdatedExternalDependency",
    "datalad.support.path",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.set_annex_version",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.get_linux_distribution",
    "datalad.utils.rmtree",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annexjson_protocol": {
  "data": {
   "lineno": 2093,
   "symbols_in_volume": [
    "all",
    "datalad.cmd.WitlessRunner",
    "datalad.support.annexrepo.AnnexJsonProtocol",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datalad.support.path",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tree",
    "len",
    "runner",
    "runner.run"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_annexrepo_fake_dates_disables_batched": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.tests.test_annexrepo.logging",
    "datalad.tests.utils.serve_path_via_http",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tree",
    "urllib.parse.urljoin"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_change_description": {
  "data": {
   "lineno": 1948,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_commit_annex_commit_changed": {
  "data": {
   "lineno": 2195,
   "symbols_in_volume": [
    "datalad.support.tests.test_annexrepo.check_commit_annex_commit_changed"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_dropkey": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.support.tests.test_annexrepo.tree1_md5e_keys",
    "datalad.support.tests.test_annexrepo.tree1args",
    "datalad.tests.utils.with_parametric_batch",
    "datalad.tests.utils.with_tree",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_error_reporting": {
  "data": {
   "lineno": 2078,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_fake_dates": {
  "data": {
   "lineno": 2034,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_fake_is_not_special": {
  "data": {
   "lineno": 2003,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.RemoteNotAvailableError",
    "datalad.support.path",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_files_split": {
  "data": {
   "lineno": 2253,
   "symbols_in_volume": [
    "cls",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.tests.test_annexrepo.check_files_split",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.slow"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_files_split_exc": {
  "data": {
   "lineno": 2217,
   "symbols_in_volume": [
    "cls",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.tests.test_annexrepo.check_files_split_exc",
    "datalad.tests.utils.slow"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_find_batch_equivalence": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tree",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_get_description": {
  "data": {
   "lineno": 1641,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_not_equal",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_get_size_from_key": {
  "data": {
   "lineno": 2378,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.annexrepo.AnnexRepo.get_size_from_key",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_get_size_from_perc_complete": {
  "data": {
   "lineno": 2045,
   "symbols_in_volume": [
    "datalad.support.annexrepo._get_size_from_perc_complete",
    "datalad.tests.utils.eq_",
    "f"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_get_urls_none": {
  "data": {
   "lineno": 1476,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_init_scanning_message": {
  "data": {
   "lineno": 1270,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.path",
    "datalad.support.tests.test_annexrepo.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_is_available": {
  "data": {
   "lineno": 1438,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_parametric_batch",
    "datalad.tests.utils.with_testrepos",
    "functools.partial",
    "is_available",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_is_special": {
  "data": {
   "lineno": 2011,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.path",
    "datalad.support.path.join",
    "datalad.support.tests.test_annexrepo.logging",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_repo_info": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "get_custom",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_repo_info.get_custom": {
  "data": {
   "lineno": 540
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_repo_version": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.check_repository_versions",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "int",
    "next",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_ro_operations": {
  "data": {
   "lineno": 2260,
   "symbols_in_volume": [
    "Exception",
    "datalad.cmd.Runner",
    "datalad.interface.ls.Ls.__call__",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.support.path.join",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_if_root",
    "datalad.tests.utils.with_tree",
    "run",
    "str",
    "sudochown"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_run_annex_gitwitless_invalid_callable": {
  "data": {
   "lineno": 2401,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_save_noperms": {
  "data": {
   "lineno": 2322,
   "symbols_in_volume": [
    "Exception",
    "datalad.cmd.Runner",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.path",
    "datalad.support.tests.test_annexrepo.os",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_if_root",
    "datalad.tests.utils.with_tree",
    "run",
    "str",
    "sudochown"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_v7_detached_get": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.external_versions.external_versions",
    "datalad.support.gitrepo.GitRepo.add",
    "datalad.support.path",
    "datalad.support.path.join",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.skip_if",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.test_wanted": {
  "data": {
   "lineno": 1829,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.support.path",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_annexrepo.tree1_md5e_keys": {
  "data": {
   "lineno": 609
  },
  "type": "constant"
 },
 "datalad.support.tests.test_annexrepo.tree1args": {
  "data": {
   "lineno": 600
  },
  "type": "constant"
 },
 "datalad.support.tests.test_annexrepo.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.unlink": {
  "data": {
   "shadows": "datalad.utils.unlink"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.urljoin": {
  "data": {
   "shadows": "urllib.parse.urljoin"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.urlsplit": {
  "data": {
   "shadows": "urllib.parse.urlsplit"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.with_parametric_batch": {
  "data": {
   "shadows": "datalad.tests.utils.with_parametric_batch"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.with_sameas_remote": {
  "data": {
   "shadows": "datalad.tests.utils.with_sameas_remote"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.support.tests.test_annexrepo.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_ansi_colors": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_ansi_colors.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_ansi_colors.colors": {
  "data": {
   "shadows": "datalad.support.ansi_colors"
  },
  "type": "import"
 },
 "datalad.support.tests.test_ansi_colors.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.tests.test_ansi_colors.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.support.tests.test_ansi_colors.patch_config": {
  "data": {
   "shadows": "datalad.tests.utils.patch_config"
  },
  "type": "import"
 },
 "datalad.support.tests.test_ansi_colors.test_color_enabled": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "datalad.support.ansi_colors.color_enabled",
    "datalad.support.ansi_colors.ui.is_interactive",
    "datalad.support.tests.test_ansi_colors.os",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.patch_config",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_ansi_colors.test_color_status": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "datalad.support.ansi_colors.color_status",
    "datalad.tests.utils.assert_equal",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_ansi_colors.test_color_word": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "datalad.support.ansi_colors.GREEN",
    "datalad.support.ansi_colors.color_word",
    "datalad.tests.utils.assert_equal",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_ansi_colors.test_format_msg": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datalad.support.ansi_colors.format_msg",
    "datalad.tests.utils.assert_equal",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_cache": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_cache.test_DictCache": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "DictCache",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_cookies": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_cookies.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_cookies.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.support.tests.test_cookies.op": {
  "data": {
   "shadows": "datalad.support.path"
  },
  "type": "import"
 },
 "datalad.support.tests.test_cookies.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_cookies.test_no_blows": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "CookiesDB",
    "OSError",
    "datalad.support.path.join",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.rmtree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_cookies.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_digests": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_digests.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_digests.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.tests.test_digests.test_digester": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "Digester",
    "chr",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.with_tree",
    "digester",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_digests.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_due_utils": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_due_utils.DueCreditEntry": {
  "data": {
   "shadows": "duecredit.entries.DueCreditEntry"
  },
  "type": "import"
 },
 "datalad.support.tests.test_due_utils.dataset_mod": {
  "data": {
   "shadows": "dataset"
  },
  "type": "import"
 },
 "datalad.support.tests.test_due_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.tests.test_due_utils.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.support.tests.test_due_utils.test_duecredit_dataset": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "Dataset",
    "Doi",
    "Text",
    "datalad.support.tests.test_due_utils.logging",
    "duecredit.entries.DueCreditEntry.__eq__",
    "duecredit_dataset",
    "swallow_logs",
    "unittest.mock.patch.object",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_due_utils.test_duecredit_dataset._entry_eq": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_external_versions.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.MissingExternalDependency": {
  "data": {
   "shadows": "datalad.support.exceptions.MissingExternalDependency"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.OutdatedExternalDependency": {
  "data": {
   "shadows": "datalad.support.exceptions.OutdatedExternalDependency"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.__version__": {
  "data": {
   "shadows": "datalad.version.__version__"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions._test_annex_version_comparison": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ExternalVersions",
    "_runner",
    "datalad.support.annexrepo.AnnexRepo.GIT_ANNEX_MIN_VERSION",
    "datalad.support.annexrepo.AnnexRepo._check_git_annex_version",
    "datalad.support.annexrepo.AnnexRepo.git_annex_version",
    "datalad.support.exceptions.OutdatedExternalDependency",
    "datalad.support.tests.test_external_versions.cmp",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.patch",
    "datalad.tests.utils.set_annex_version"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions._test_annex_version_comparison._runner": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.tests.test_external_versions._test_annex_version_comparison._runner.run": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions._test_external": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "datalad.dochelpers.exc_str",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_greater",
    "exec",
    "globals",
    "locals"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions._test_list_tuple": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ExternalVersions._deduce_version",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_greater"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.assert_greater": {
  "data": {
   "shadows": "datalad.tests.utils.assert_greater"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.assert_greater_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_greater_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.cmp": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.linesep": {
  "data": {
   "shadows": "os.linesep"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.mod": {
  "data": {
   "shadows": "datalad.tests.mod"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.patch": {
  "data": {
   "shadows": "datalad.tests.utils.patch"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.set_annex_version": {
  "data": {
   "shadows": "datalad.tests.utils.set_annex_version"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_external_versions.test_add": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "ExternalVersions",
    "ImportError",
    "datalad.support.tests.test_external_versions.numpy",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_ancient_annex": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "ExternalVersions",
    "_runner",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.patch"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_ancient_annex._runner": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.tests.test_external_versions.test_ancient_annex._runner.run": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_annex_version_comparison": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo.GIT_ANNEX_MIN_VERSION",
    "datalad.support.tests.test_external_versions._test_annex_version_comparison",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_check": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ExternalVersions",
    "datalad.support.exceptions.MissingExternalDependency",
    "datalad.support.exceptions.OutdatedExternalDependency",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.version.__version__",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_custom_versions": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ExternalVersions",
    "datalad.tests.utils.assert_equal",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_external_version_contains": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "ExternalVersions",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_true"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_external_versions_basic": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ExternalVersions",
    "TypeError",
    "datalad.support.tests.test_external_versions.cmp",
    "datalad.tests.mod",
    "datalad.tests.mod.__version__",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_greater",
    "datalad.tests.utils.assert_greater_equal",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_true",
    "datalad.version.__version__",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_external_versions_popular_packages": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ExternalVersions",
    "datalad.support.tests.test_external_versions._test_external",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_true",
    "os.linesep"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_external_versions_rogue_module": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ExternalVersions",
    "datalad.support.tests.test_external_versions.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.patch",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "os.linesep"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_external_versions_unknown": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ExternalVersions.UNKNOWN",
    "datalad.tests.utils.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_humanize": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "ExternalVersions"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_list_tuple": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "datalad.support.tests.test_external_versions._test_list_tuple"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_list_tuple.thing_with_list_version": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "datalad.version.__version__"
   ]
  },
  "type": "class"
 },
 "datalad.support.tests.test_external_versions.test_list_tuple.thing_with_tuple_version": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "datalad.version.__version__"
   ]
  },
  "type": "class"
 },
 "datalad.support.tests.test_external_versions.test_system_ssh_version": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ExternalVersions",
    "_runner",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.patch"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.test_system_ssh_version._runner": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.tests.test_external_versions.test_system_ssh_version._runner.run": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "datalad.support.tests.test_external_versions.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_fileinfo.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo.assert_dict_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_dict_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo.get_convoluted_situation": {
  "data": {
   "shadows": "datalad.tests.utils.get_convoluted_situation"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo.test_annexinfo_init": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.with_tempfile",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_fileinfo.test_compare_content_info": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_fileinfo.test_get_content_info": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.get_convoluted_situation",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "datalad.utils.PurePosixPath"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_fileinfo.test_get_content_info_dotgit": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_fileinfo.test_info_path_inside_submodule": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_fileinfo.test_report_absent_keys": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_fileinfo.test_subds_path": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.with_tempfile",
    "list",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_fileinfo.ut": {
  "data": {
   "shadows": "datalad.utils"
  },
  "type": "import"
 },
 "datalad.support.tests.test_fileinfo.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_": {
  "data": {
   "symbols_in_volume": [
    "_get_github_cred",
    "datalad.tests.utils.skip_if"
   ]
  },
  "type": "module"
 },
 "datalad.support.tests.test_github_.AccessDeniedError": {
  "data": {
   "shadows": "datalad.support.exceptions.AccessDeniedError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_.assert_greater": {
  "data": {
   "shadows": "datalad.tests.utils.assert_greater"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_.gh": {
  "data": {
   "shadows": "github"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_.patch_config": {
  "data": {
   "shadows": "datalad.tests.utils.patch_config"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_.skip_if": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_.skip_if_no_github_cred": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.support.tests.test_github_.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_github_.test__gen_github_entity_organization": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "_gen_github_entity",
    "datalad.support.tests.test_github_.skip_if_no_github_cred",
    "datalad.tests.utils.assert_greater",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.patch_config",
    "datalad.tests.utils.skip_if_no_network",
    "len",
    "list",
    "next"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_github_.test__make_github_repos": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "RuntimeError",
    "all",
    "datalad.support.exceptions.AccessDeniedError",
    "datalad.support.tests.test_github_.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.utils.swallow_logs",
    "len",
    "str",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_github_.test__make_github_repos._gen_github_entity": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "_token_str",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_github_.test__make_github_repos._make_github_repo": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "github.BadCredentialsException"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_github_.test_get_repo_url": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "FakeRepo",
    "collections.namedtuple",
    "datalad.tests.utils.assert_equal",
    "get_repo_url"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_gitrepo.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.DEFAULT_BRANCH": {
  "data": {
   "shadows": "datalad.tests.utils.DEFAULT_BRANCH"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.DeprecatedError": {
  "data": {
   "shadows": "datalad.support.exceptions.DeprecatedError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.ExecutionTimeProtocol": {
  "data": {
   "shadows": "datalad.support.protocol.ExecutionTimeProtocol"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.FileNotInRepositoryError": {
  "data": {
   "shadows": "datalad.support.exceptions.FileNotInRepositoryError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.InvalidGitRepositoryError": {
  "data": {
   "shadows": "datalad.support.exceptions.InvalidGitRepositoryError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.NoSuchPathError": {
  "data": {
   "shadows": "datalad.support.exceptions.NoSuchPathError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.PathKnownToRepositoryError": {
  "data": {
   "shadows": "datalad.support.exceptions.PathKnownToRepositoryError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo._get_remotes_having_commit": {
  "data": {
   "shadows": "datalad.distribution.get._get_remotes_having_commit"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo._normalize_path": {
  "data": {
   "shadows": "datalad.support.gitrepo._normalize_path"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo._path2localsshurl": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "datalad.utils.Path",
    "os.path.abspath"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo._test_protocols": {
  "data": {
   "lineno": 1577,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.assert_cwd_unchanged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_cwd_unchanged"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.assert_in_results": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in_results"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.assert_is_instance": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.check_update_submodule_init_adjust_branch": {
  "data": {
   "lineno": 987,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.get_connection_hash": {
  "data": {
   "shadows": "datalad.support.sshconnector.get_connection_hash"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.get_encoding_info": {
  "data": {
   "shadows": "datalad.get_encoding_info"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.get_local_file_url": {
  "data": {
   "shadows": "datalad.support.network.get_local_file_url"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.get_most_obscure_supported_name": {
  "data": {
   "shadows": "datalad.tests.utils.get_most_obscure_supported_name"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.integration": {
  "data": {
   "shadows": "datalad.tests.utils.integration"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.local_testrepo_flavors": {
  "data": {
   "shadows": "datalad.tests.utils.local_testrepo_flavors"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.neq_": {
  "data": {
   "shadows": "datalad.tests.utils.neq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.normalize_paths": {
  "data": {
   "shadows": "datalad.support.gitrepo.normalize_paths"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.skip_nomultiplex_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_nomultiplex_ssh"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.ssh_manager": {
  "data": {
   "shadows": "datalad.ssh_manager"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_add": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_add_submodule": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_commit": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError",
    "datalad.support.exceptions.FileNotInRepositoryError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.to_options",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_count_objects": {
  "data": {
   "lineno": 1113,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_dirty": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.tests.test_gitrepo.os",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_equals": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_fetch": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError",
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_files_decorator": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.exceptions.FileNotInRepositoryError",
    "datalad.support.gitrepo._normalize_path",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.utils.getpwd",
    "os.path.join",
    "testclass"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_files_decorator.testclass": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_files_decorator.testclass.__init__": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_files_decorator.testclass.decorated_many": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "datalad.support.gitrepo.normalize_paths"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_files_decorator.testclass.decorated_one": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "datalad.support.gitrepo.normalize_paths"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_flyweight": {
  "data": {
   "lineno": 1165,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.relpath"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_get_files": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.support.tests.test_gitrepo.os",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_get_indexed_files": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "bool",
    "datalad.cmd.Runner",
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "filter",
    "list",
    "runner"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_get_merge_base": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "len",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_get_remote_url": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_get_revisions": {
  "data": {
   "lineno": 1489,
   "symbols_in_volume": [
    "commit",
    "datalad.support.exceptions.CommandError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_get_revisions.commit": {
  "data": {
   "lineno": 1493
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_get_submodules": {
  "data": {
   "lineno": 1044,
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_get_toppath": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.GitRepo.get_toppath",
    "datalad.support.tests.test_gitrepo.os",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.utils.Path",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_git_get_branch_commits_": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "len",
    "list",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_gitignore": {
  "data": {
   "lineno": 1187,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tree",
    "open",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_init_options": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_instance_from_clone": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_instance_from_existing": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_testrepos",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_instance_from_not_existing": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "datalad.support.exceptions.InvalidGitRepositoryError",
    "datalad.support.exceptions.NoSuchPathError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.tests.test_gitrepo.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_invalid_path": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.chpwd",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_pull": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "datalad.distribution.get._get_remotes_having_commit",
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.exists",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_push_n_checkout": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_remote_add": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_remote_remove": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_remote_update": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_remove": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tree",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_set_remote_url": {
  "data": {
   "lineno": 1219,
   "symbols_in_volume": [
    "KeyError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_ssh_fetch": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "datalad.ssh_manager._connections",
    "datalad.ssh_manager.socket_dir",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.sshconnector.get_connection_hash",
    "datalad.support.tests.test_gitrepo._path2localsshurl",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_nomultiplex_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "list",
    "map",
    "os.path.exists",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_ssh_pull": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "datalad.ssh_manager._connections",
    "datalad.ssh_manager.socket_dir",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.sshconnector.get_connection_hash",
    "datalad.support.tests.test_gitrepo._path2localsshurl",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_nomultiplex_ssh",
    "datalad.tests.utils.with_tempfile",
    "list",
    "map",
    "open",
    "os.path.exists",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_ssh_push": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "datalad.ssh_manager._connections",
    "datalad.ssh_manager.socket_dir",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.sshconnector.get_connection_hash",
    "datalad.support.tests.test_gitrepo._path2localsshurl",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_in_results",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_nomultiplex_ssh",
    "datalad.tests.utils.with_tempfile",
    "list",
    "map",
    "open",
    "os.path.exists",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_update_submodule": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_GitRepo_update_submodule_init_adjust_branch": {
  "data": {
   "lineno": 1026,
   "symbols_in_volume": [
    "datalad.support.tests.test_gitrepo.check_update_submodule_init_adjust_branch"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_custom_runner_protocol": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "all",
    "check",
    "datalad.cmd.Runner",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.protocol.ExecutionTimeProtocol",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tree",
    "len"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_custom_runner_protocol.check": {
  "data": {
   "lineno": 1433,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.ok_",
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_duecredit": {
  "data": {
   "lineno": 1452,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.support.external_versions.external_versions",
    "datalad.support.tests.test_gitrepo.os",
    "datalad.support.tests.test_gitrepo.sys",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile",
    "run"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_fake_dates": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tree",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_get_commit_date": {
  "data": {
   "lineno": 1373,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.DEFAULT_BRANCH",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_get_hexsha_tag": {
  "data": {
   "lineno": 1297,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_get_submodules_parent_on_unborn_branch": {
  "data": {
   "lineno": 1048,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_get_tags": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "datalad.support.exceptions.CommandError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_get_tracking_branch": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_gitattributes": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "datalad.get_encoding_info",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.on_windows",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_gitrepo_add_to_git_with_annex_v7": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_gitrepo_call_git_methods": {
  "data": {
   "lineno": 1542,
   "symbols_in_volume": [
    "AssertionError",
    "check",
    "datalad.support.exceptions.CommandError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.tests.test_gitrepo.logging",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tree",
    "list",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_init_fail_under_known_subdir": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "datalad.support.exceptions.PathKnownToRepositoryError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tree",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_normalize_path": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "datalad.support.exceptions.FileNotInRepositoryError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo._normalize_path",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tree",
    "datalad.utils.chpwd",
    "datalad.utils.getpwd",
    "os.path.curdir",
    "os.path.join",
    "os.path.pardir"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_optimized_cloning": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "_get_inodes",
    "datalad.support.exceptions.DeprecatedError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.support.network.get_local_file_url",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.rmtree",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_optimized_cloning._get_inodes": {
  "data": {
   "lineno": 1140,
   "symbols_in_volume": [
    "datalad.support.tests.test_gitrepo.os",
    "dict",
    "glob.glob"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_protocols": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "datalad.support.tests.test_gitrepo._test_protocols",
    "datalad.tests.utils.integration"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_submodule_deinit": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "all",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.exceptions.CommandError",
    "datalad.support.gitrepo.GitRepo.is_valid_repo",
    "datalad.support.tests.test_gitrepo.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_testrepos",
    "open",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_to_options": {
  "data": {
   "lineno": 1058,
   "symbols_in_volume": [
    "Some",
    "datalad.support.gitrepo.to_options",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_to_options.Some": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.tests.test_gitrepo.test_to_options.Some.cmd_func": {
  "data": {
   "lineno": 1062
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_to_options_from_gitpython": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "datalad.support.gitrepo.to_options",
    "datalad.tests.utils.eq_",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.test_update_submodules_sub_on_unborn_branch": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_gitrepo.to_options": {
  "data": {
   "shadows": "datalad.support.gitrepo.to_options"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.support.tests.test_gitrepo.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_globbedpaths": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_globbedpaths.GlobbedPaths": {
  "data": {
   "shadows": "datalad.support.globbedpaths.GlobbedPaths"
  },
  "type": "import"
 },
 "datalad.support.tests.test_globbedpaths.__docformat__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "datalad.support.tests.test_globbedpaths.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_globbedpaths.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_globbedpaths.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.support.tests.test_globbedpaths.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.tests.test_globbedpaths.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.support.tests.test_globbedpaths.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.support.tests.test_globbedpaths.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_globbedpaths.test_globbedpaths": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "datalad.support.globbedpaths.GlobbedPaths",
    "datalad.support.tests.test_globbedpaths.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tree",
    "os.path.curdir",
    "os.path.join",
    "os.path.pardir",
    "os.path.sep",
    "set",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_globbedpaths.test_globbedpaths_get_sub_patterns": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "datalad.support.globbedpaths.GlobbedPaths",
    "datalad.tests.utils.eq_",
    "os.path.join",
    "os.path.sep"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_globbedpaths.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_json_py.JSONDecodeError": {
  "data": {
   "shadows": "datalad.support.json_py.JSONDecodeError"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.dump": {
  "data": {
   "shadows": "datalad.support.json_py.dump"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.dump2stream": {
  "data": {
   "shadows": "datalad.support.json_py.dump2stream"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.dump2xzstream": {
  "data": {
   "shadows": "datalad.support.json_py.dump2xzstream"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.load": {
  "data": {
   "shadows": "datalad.support.json_py.load"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.load_stream": {
  "data": {
   "shadows": "datalad.support.json_py.load_stream"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.load_xzstream": {
  "data": {
   "shadows": "datalad.support.json_py.load_xzstream"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.loads": {
  "data": {
   "shadows": "datalad.support.json_py.loads"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_json_py.test_compression": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "Exception",
    "datalad.support.json_py.dump",
    "datalad.support.json_py.load",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_json_py.test_dump": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "datalad.support.json_py.dump",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_json_py.test_dump2stream": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "datalad.support.json_py.dump2stream",
    "datalad.support.json_py.dump2xzstream",
    "datalad.support.json_py.load_stream",
    "datalad.support.json_py.load_xzstream",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "dict",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_json_py.test_load_screwy_unicode": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "datalad.support.json_py.JSONDecodeError",
    "datalad.support.json_py.load",
    "datalad.support.tests.test_json_py.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_json_py.test_load_unicode_line_separator": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "datalad.support.json_py.load_stream",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_json_py.test_loads": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datalad.support.json_py.JSONDecodeError",
    "datalad.support.json_py.loads",
    "datalad.support.tests.test_json_py.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_json_py.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_locking.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking.Queue": {
  "data": {
   "shadows": "multiprocessing.Queue"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking.ok_exists": {
  "data": {
   "shadows": "datalad.tests.utils.ok_exists"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.support.tests.test_locking.test_lock_if_check_fails": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.with_tempfile",
    "lock_if_check_fails",
    "multiprocessing.Process",
    "multiprocessing.Queue",
    "open",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_locking.test_lock_if_check_fails.subproc": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "lock_if_check_fails"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_locking.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_network.DataLadRI": {
  "data": {
   "shadows": "datalad.support.network.DataLadRI"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.GitTransportRI": {
  "data": {
   "shadows": "datalad.support.network.GitTransportRI"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.PathRI": {
  "data": {
   "shadows": "datalad.support.network.PathRI"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.PurePosixPath": {
  "data": {
   "shadows": "datalad.utils.PurePosixPath"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.RI": {
  "data": {
   "shadows": "datalad.support.network.RI"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.SSHRI": {
  "data": {
   "shadows": "datalad.support.network.SSHRI"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.URL": {
  "data": {
   "shadows": "datalad.support.network.URL"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network._check_ri": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "cls",
    "cls._FIELDS",
    "datalad.support.network.GitTransportRI",
    "datalad.support.network.RI",
    "datalad.support.tests.test_network.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.nok_",
    "datalad.tests.utils.swallow_logs",
    "eval",
    "getattr",
    "isinstance",
    "os.path.join",
    "repr",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network._split_colon": {
  "data": {
   "shadows": "datalad.support.network._split_colon"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network._test_get_url_straight_filename": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "datalad.support.network.get_url_straight_filename",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network._test_url_quote_path": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "cls",
    "datalad.support.network.PathRI",
    "datalad.support.network.RI",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.assert_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_status"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.dlurljoin": {
  "data": {
   "shadows": "datalad.support.network.dlurljoin"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.get_local_file_url": {
  "data": {
   "shadows": "datalad.support.network.get_local_file_url"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.get_most_obscure_supported_name": {
  "data": {
   "shadows": "datalad.tests.utils.get_most_obscure_supported_name"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.get_response_disposition_filename": {
  "data": {
   "shadows": "datalad.support.network.get_response_disposition_filename"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.get_tld": {
  "data": {
   "shadows": "datalad.support.network.get_tld"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.get_url_straight_filename": {
  "data": {
   "shadows": "datalad.support.network.get_url_straight_filename"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.is_datalad_compat_ri": {
  "data": {
   "shadows": "datalad.support.network.is_datalad_compat_ri"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.is_ssh": {
  "data": {
   "shadows": "datalad.support.network.is_ssh"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.is_url": {
  "data": {
   "shadows": "datalad.support.network.is_url"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.iso8601_to_epoch": {
  "data": {
   "shadows": "datalad.support.network.iso8601_to_epoch"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.neq_": {
  "data": {
   "shadows": "datalad.tests.utils.neq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.nok_": {
  "data": {
   "shadows": "datalad.tests.utils.nok_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.parse_url_opts": {
  "data": {
   "shadows": "datalad.support.network.parse_url_opts"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.same_website": {
  "data": {
   "shadows": "datalad.support.network.same_website"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.tests.test_network.test_dlurljoin": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "datalad.support.network.dlurljoin",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_get_local_file_url": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "datalad.support.network.get_local_file_url",
    "datalad.support.tests.test_network.os",
    "datalad.support.tests.test_network.sys",
    "datalad.tests.utils.eq_",
    "datalad.utils.on_windows",
    "os.path.isabs",
    "print"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_get_local_file_url_compatibility": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.support.network.get_local_file_url",
    "datalad.tests.utils.assert_status",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_get_response_disposition_filename": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "datalad.support.network.get_response_disposition_filename",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_get_tld": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.network.get_tld",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_get_url_path_on_fileurls": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "datalad.support.network.URL",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.skip_if_on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_get_url_straight_filename": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "datalad.support.tests.test_network._test_get_url_straight_filename"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_git_transport_ri": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "datalad.support.network.GitTransportRI",
    "datalad.support.tests.test_network._check_ri"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_is_datalad_compat_ri": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "datalad.support.network.is_datalad_compat_ri",
    "datalad.tests.utils.nok_",
    "datalad.tests.utils.ok_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_is_ssh": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "datalad.support.network.is_ssh",
    "datalad.tests.utils.ok_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_is_url": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "datalad.support.network.RI",
    "datalad.support.network.is_url",
    "datalad.tests.utils.nok_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_iso8601_to_epoch": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "datalad.support.network.iso8601_to_epoch",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_parse_url_opts": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "datalad.support.network.parse_url_opts",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_rfc2822_to_epoch": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "rfc2822_to_epoch"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_same_website": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "datalad.support.network.same_website",
    "datalad.tests.utils.ok_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_split_colon": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "datalad.support.network._split_colon",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_url_base": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "datalad.support.network.URL",
    "datalad.support.tests.test_network.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.nok_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_logs",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_url_compose_archive_one": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.support.network.URL",
    "datalad.tests.utils.eq_",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_url_dicts": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "datalad.support.network.URL",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_url_eq": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "datalad.support.network.PathRI",
    "datalad.support.network.SSHRI",
    "datalad.support.network.URL",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.neq_",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_url_fragments_and_query": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.support.network.URL",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_url_quote_path": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "datalad.support.network.PathRI",
    "datalad.support.network.SSHRI",
    "datalad.support.network.URL",
    "datalad.support.tests.test_network._test_url_quote_path"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.test_url_samples": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "datalad.support.network.DataLadRI",
    "datalad.support.network.PathRI",
    "datalad.support.network.RI",
    "datalad.support.network.SSHRI",
    "datalad.support.network.URL",
    "datalad.support.tests.test_network._check_ri",
    "datalad.support.tests.test_network.logging",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.neq_",
    "datalad.tests.utils.swallow_logs",
    "datalad.utils.PurePosixPath",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_network.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_path": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_path.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.tests.test_path.test_get_parent_paths": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "eq_",
    "gpp"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_path.test_robust_abspath": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Exception",
    "OSError",
    "SkipTest",
    "assert_raises",
    "chpwd",
    "datalad.support.tests.test_path.os",
    "eq_",
    "exc_str",
    "rmtree",
    "robust_abspath",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_path.test_split_ext": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "eq_",
    "split_ext"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_repo_save": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_repo_save.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repo_save.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repo_save.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repo_save._test_save_all": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_convoluted_situation",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_repo_save.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repo_save.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repo_save.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repo_save.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repo_save.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repo_save.get_convoluted_situation": {
  "data": {
   "shadows": "datalad.tests.utils.get_convoluted_situation"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repo_save.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repo_save.slow": {
  "data": {
   "shadows": "datalad.tests.utils.slow"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repo_save.test_annexrepo_save_all": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.tests.test_repo_save._test_save_all",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_repo_save.test_gitrepo_save_all": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.tests.test_repo_save._test_save_all",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.slow",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_repo_save.test_save_basics": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_repo_save.test_save_to_git": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.create_tree",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_repo_save.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repodates": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_repodates.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repodates.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repodates.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repodates.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repodates.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repodates.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repodates.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repodates.check_dates": {
  "data": {
   "shadows": "datalad.support.repodates.check_dates"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repodates.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repodates.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repodates.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repodates.set_date": {
  "data": {
   "shadows": "datalad.tests.utils.set_date"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repodates.test_check_dates": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.repodates.check_dates",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.set_date",
    "datalad.tests.utils.with_tree",
    "num_logs",
    "tag_object",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_repodates.test_check_dates.is_annex_log_blob": {
  "data": {
   "lineno": 79
  },
  "type": "function"
 },
 "datalad.support.tests.test_repodates.test_check_dates.num_logs": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "map",
    "sum"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_repodates.test_check_dates.tag_object": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "datalad.support.tests.test_repodates.test_check_dates_empty_repo": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.repodates.check_dates",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_repodates.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_repodates.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_sshconnector.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector._ssh_manager_is_multiplex": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "datalad.support.tests.test_sshconnector.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.assert_is_instance": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.dl_cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.get_most_obscure_supported_name": {
  "data": {
   "shadows": "datalad.tests.utils.get_most_obscure_supported_name"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.get_ssh_port": {
  "data": {
   "shadows": "datalad.tests.utils.get_ssh_port"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.getmtime": {
  "data": {
   "shadows": "os.path.getmtime"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.isdir": {
  "data": {
   "shadows": "os.path.isdir"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.patch_config": {
  "data": {
   "shadows": "datalad.tests.utils.patch_config"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.skip_nomultiplex_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_nomultiplex_ssh"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.test_bundle_invariance": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "SSHManager",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "ssh",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_close_target": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "SSHManager",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_nomultiplex_ssh",
    "get_connection_hash",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_compound_cmds": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "SSHManager",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "ssh",
    "ssh.close"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_copy": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "SSHManager",
    "datalad.support.tests.test_sshconnector._ssh_manager_is_multiplex",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.get_ssh_port",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "int",
    "open",
    "os.path.exists",
    "os.path.getmtime",
    "os.path.isdir",
    "os.path.join",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_custom_identity_file": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "SSHManager",
    "datalad.support.tests.test_sshconnector._ssh_manager_is_multiplex",
    "datalad.support.tests.test_sshconnector.logging",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.patch_config",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.swallow_logs",
    "get_connection_hash",
    "os.path.exists",
    "os.path.join",
    "ssh",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_get_connection": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "SSHManager",
    "ValueError",
    "datalad.support.tests.test_sshconnector._ssh_manager_is_multiplex",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_ssh",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_git_props": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "SSHManager",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "ssh",
    "ssh.get_annex_version",
    "ssh.get_git_version"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_manager_close": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "SSHManager",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_nomultiplex_ssh",
    "get_connection_hash",
    "os.path.exists",
    "os.path.join",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_manager_close_no_throw": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "Exception",
    "MultiplexSSHManager",
    "bogus",
    "datalad.support.tests.test_sshconnector.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_manager_close_no_throw.bogus": {
  "data": {
   "lineno": 183
  },
  "type": "class"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_manager_close_no_throw.bogus.close": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_manager_close_no_throw.bogus.ctrl_path": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "datalad.utils.Path",
    "open",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.test_ssh_open_close": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "SSHManager",
    "c1",
    "c1.close",
    "datalad.support.tests.test_sshconnector._ssh_manager_is_multiplex",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "get_connection_hash",
    "os.path.exists",
    "os.path.join",
    "os.path.realpath",
    "set",
    "sh_quote",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshconnector.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshconnector.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_sshrun.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.main": {
  "data": {
   "shadows": "datalad.cmdline.main.main"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.sshrun": {
  "data": {
   "shadows": "datalad.api.sshrun"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.tests.test_sshrun.test_exit_code": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "SystemExit",
    "datalad.cmdline.main.main",
    "datalad.support.tests.test_sshrun.sys",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.swallow_outputs",
    "io.StringIO",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshrun.test_fancy_quotes": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshrun.test_no_stdin_swallow": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.with_tempfile",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshrun.test_ssh_ipv4_6": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.api.sshrun",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshrun.test_ssh_ipv4_6_incompatible": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "SystemExit",
    "datalad.cmdline.main.main",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshrun.test_ssh_option": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "datalad.cmdline.main.main",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.skip_ssh",
    "datalad.tests.utils.swallow_outputs",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_sshrun.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.support.tests.test_stats": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_stats.test_ActivityStats_basic": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ActivityStats",
    "AttributeError",
    "assert_equal",
    "assert_in",
    "assert_raises",
    "getattr",
    "len",
    "repr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_stats.test_ActivityStats_comparisons": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ActivityStats",
    "assert_equal",
    "assert_not_equal"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_stats.test_add": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ActivityStats",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_status": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_status.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_status.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_status.test_FileStatus_basic": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "FileStatus",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_not_equal"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_vcr_": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_vcr_.test_use_cassette_if_no_vcr": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ImportError",
    "SkipTest",
    "checker",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_vcr_.test_use_cassette_if_no_vcr.checker": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_vcr_.vcr": {
  "data": {
   "shadows": "vcr"
  },
  "type": "import"
 },
 "datalad.support.tests.test_versions": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.test_versions.FileStatus": {
  "data": {
   "shadows": "datalad.support.status.FileStatus"
  },
  "type": "import"
 },
 "datalad.support.tests.test_versions.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.support.tests.test_versions.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.support.tests.test_versions.od": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.support.tests.test_versions.test_get_versions": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "get_versions"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_versions.test_get_versions_default_version": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "datalad.support.status.FileStatus",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "get_versions"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_versions.test_get_versions_openfmri_dropped_models": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.tests.utils.assert_equal",
    "get_versions"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.test_versions.test_get_versions_regex": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "get_versions"
   ]
  },
  "type": "function"
 },
 "datalad.support.tests.utils": {
  "data": {},
  "type": "module"
 },
 "datalad.support.tests.utils.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.support.third": {
  "data": {},
  "type": "module"
 },
 "datalad.support.third.loris_token_generator": {
  "data": {},
  "type": "module"
 },
 "datalad.support.third.loris_token_generator.AccessDeniedError": {
  "data": {
   "shadows": "datalad.support.exceptions.AccessDeniedError"
  },
  "type": "import"
 },
 "datalad.support.third.loris_token_generator.AccessFailedError": {
  "data": {
   "shadows": "datalad.support.exceptions.AccessFailedError"
  },
  "type": "import"
 },
 "datalad.support.third.loris_token_generator.HTTPError": {
  "data": {
   "shadows": "urllib.error.HTTPError"
  },
  "type": "import"
 },
 "datalad.support.third.loris_token_generator.LORISTokenGenerator": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.loris_token_generator.LORISTokenGenerator.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "datalad.support.third.loris_token_generator.LORISTokenGenerator.generate_token": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "datalad.support.exceptions.AccessDeniedError",
    "datalad.support.third.loris_token_generator.json",
    "datalad.utils.assure_unicode",
    "urllib.error.HTTPError",
    "urllib.request.Request",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.loris_token_generator.Request": {
  "data": {
   "shadows": "urllib.request.Request"
  },
  "type": "import"
 },
 "datalad.support.third.loris_token_generator.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.support.third.loris_token_generator.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "datalad.support.third.loris_token_generator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.third.loris_token_generator.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "datalad.support.third.nda_aws_token_generator": {
  "data": {
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.sys"
   ]
  },
  "type": "module"
 },
 "datalad.support.third.nda_aws_token_generator.NDATokenGenerator": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.nda_aws_token_generator.NDATokenGenerator.__construct_request_xml": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.logging",
    "xml.etree.ElementTree.Element",
    "xml.etree.ElementTree.SubElement",
    "xml.etree.ElementTree.tostring"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.NDATokenGenerator.__encode_password": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.binascii",
    "datalad.support.third.nda_aws_token_generator.hashlib",
    "datalad.support.third.nda_aws_token_generator.logging"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.NDATokenGenerator.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.logging"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.NDATokenGenerator.__make_request": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.logging",
    "urllib.request",
    "urllib.request.Request",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.NDATokenGenerator.__parse_response": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "Exception",
    "datalad.support.third.nda_aws_token_generator.Token",
    "datalad.support.third.nda_aws_token_generator.logging",
    "xml.etree.ElementTree.fromstring"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.NDATokenGenerator.generate_token": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.logging"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.Token": {
  "data": {
   "lineno": 99
  },
  "type": "class"
 },
 "datalad.support.third.nda_aws_token_generator.Token.__init__": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "datalad.support.third.nda_aws_token_generator.logging"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.Token.access_key": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.Token.expiration": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.Token.secret_key": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.Token.session": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nda_aws_token_generator.binascii": {
  "data": {
   "shadows": "binascii"
  },
  "type": "import"
 },
 "datalad.support.third.nda_aws_token_generator.etree": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "datalad.support.third.nda_aws_token_generator.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "datalad.support.third.nda_aws_token_generator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.third.nda_aws_token_generator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.third.nda_aws_token_generator.urllib_request": {
  "data": {
   "shadows": "urllib.request"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses": {
  "data": {},
  "type": "module"
 },
 "datalad.support.third.noseclasses.ErrorClass": {
  "data": {
   "shadows": "nose.plugins.errorclass.ErrorClass"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.ErrorClassPlugin": {
  "data": {
   "shadows": "nose.plugins.errorclass.ErrorClassPlugin"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.NumpyDocTestCase": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "nose.plugins.doctests.DocTestCase"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.noseclasses.NumpyDocTestCase.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.doctest"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDocTestFinder": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.doctest"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.noseclasses.NumpyDocTestFinder._find": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "classmethod",
    "datalad.support.third.noseclasses.doctest",
    "getattr",
    "inspect.isclass",
    "inspect.isfunction",
    "inspect.ismethod",
    "inspect.ismodule",
    "inspect.isroutine",
    "isinstance",
    "property",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDocTestFinder._from_module": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.third.noseclasses.inspect",
    "hasattr",
    "isinstance",
    "object",
    "object.__globals__",
    "object.__module__",
    "object.__self__.__class__.__module__",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDoctest": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.NumpyDocTestCase",
    "datalad.support.third.noseclasses.NumpyDocTestFinder",
    "datalad.support.third.noseclasses.NumpyOutputChecker",
    "datalad.support.third.noseclasses.doctest",
    "nose.plugins.doctests.Doctest"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.noseclasses.NumpyDoctest.afterContext": {
  "data": {
   "lineno": 257
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDoctest.configure": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.doctest",
    "nose.plugins.base.Plugin.configure"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDoctest.loadTestsFromModule": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "AttributeError",
    "nose.plugins.doctests.log.debug",
    "nose.util.src"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDoctest.options": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.os",
    "nose.plugins.base.Plugin.options"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDoctest.set_test_context": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "__import__",
    "datalad.support.third.noseclasses.os",
    "get_package_name"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyDoctest.wantFile": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.os",
    "nose.plugins.doctests.Doctest.wantFile"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyOutputChecker": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.doctest"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.noseclasses.NumpyOutputChecker.check_output": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.doctest"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.NumpyTestProgram": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.nose"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.noseclasses.NumpyTestProgram.runTests": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "datalad.support.third.noseclasses.nose"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.Plugin": {
  "data": {
   "shadows": "nose.plugins.base.Plugin"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.Unplugger": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.noseclasses.Unplugger.__init__": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.Unplugger.configure": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.Unplugger.options": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "datalad.support.third.noseclasses.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.isclass": {
  "data": {
   "shadows": "inspect.isclass"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.isfunction": {
  "data": {
   "shadows": "inspect.isfunction"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.ismethod": {
  "data": {
   "shadows": "inspect.ismethod"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.ismodule": {
  "data": {
   "shadows": "inspect.ismodule"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.isroutine": {
  "data": {
   "shadows": "inspect.isroutine"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.npd": {
  "data": {
   "shadows": "nose.plugins.doctests"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datalad.support.third.noseclasses.src": {
  "data": {
   "shadows": "nose.util.src"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester": {
  "data": {},
  "type": "module"
 },
 "datalad.support.third.nosetester.EntryPointPluginManager": {
  "data": {
   "shadows": "nose.plugins.EntryPointPluginManager"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.NoseTester": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.support.third.nosetester.NoseTester.__init__": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.support.third.nosetester.get_package_name",
    "datalad.support.third.nosetester.os",
    "datalad.support.third.nosetester.sys",
    "getattr",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.NoseTester._get_custom_doctester": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "NumpyDoctest"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.NoseTester._show_system_info": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "datalad.support.third.nosetester.nose",
    "datalad.support.third.nosetester.sys",
    "print"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.NoseTester._test_argv": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.NoseTester.bench": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "Unplugger",
    "datalad.support.third.nosetester.nose",
    "datalad.support.third.nosetester.os",
    "print"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.NoseTester.prepare_test_args": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "ImportError",
    "Unplugger",
    "datalad.support.third.nosetester.nose",
    "int",
    "isinstance",
    "nose.plugins.EntryPointPluginManager",
    "p",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.NoseTester.test": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "DeprecationWarning",
    "NumpyTestProgram",
    "Warning",
    "datalad.support.third.nosetester.doctest",
    "datalad.support.third.nosetester.warnings",
    "dict",
    "isinstance",
    "min",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datalad.support.third.nosetester.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.get_package_name": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "datalad.support.third.nosetester.os"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.nose.plugins.builtin": {
  "data": {
   "shadows": "nose.plugins.builtin"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.run_module_suite": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.support.third.nosetester.nose",
    "datalad.support.third.nosetester.sys"
   ]
  },
  "type": "function"
 },
 "datalad.support.third.nosetester.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.support.third.nosetester.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "datalad.support.vcr_": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "datalad.dochelpers.exc_str",
    "datalad.support.vcr_.lgr",
    "datalad.support.vcr_.logging",
    "datalad.support.vcr_.returnnothing",
    "datalad.support.vcr_.vcr_lgr",
    "isinstance",
    "vcr.patch.CassettePatcherBuilder._requests"
   ]
  },
  "type": "module"
 },
 "datalad.support.vcr_.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.support.vcr_.SkipTest": {
  "data": {
   "shadows": "unittest.SkipTest"
  },
  "type": "import"
 },
 "datalad.support.vcr_._": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "datalad.support.vcr_._VCR": {
  "data": {
   "shadows": "vcr.VCR"
  },
  "type": "import"
 },
 "datalad.support.vcr_._a": {
  "data": {
   "shadows": "requests.packages.urllib3.connectionpool.HTTPConnection"
  },
  "type": "import"
 },
 "datalad.support.vcr_._b": {
  "data": {
   "shadows": "requests.packages.urllib3.connectionpool.VerifiedHTTPSConnection"
  },
  "type": "import"
 },
 "datalad.support.vcr_._get_cassette_path": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "os.path.isabs"
   ]
  },
  "type": "function"
 },
 "datalad.support.vcr_._use_cassette": {
  "data": {
   "shadows": "vcr.use_cassette"
  },
  "type": "import"
 },
 "datalad.support.vcr_._vcrp": {
  "data": {
   "shadows": "vcr.patch"
  },
  "type": "import"
 },
 "datalad.support.vcr_.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "datalad.support.vcr_.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.support.vcr_.externals_use_cassette": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "contextlib.contextmanager",
    "datalad.support.vcr_._get_cassette_path",
    "datalad.utils.Path",
    "str",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.support.vcr_.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.support.vcr_.lgr": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "datalad.support.vcr_.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.support.vcr_.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.support.vcr_.returnnothing": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "datalad.support.vcr_.use_cassette": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "datalad.support.vcr_.use_cassette.do_nothing_decorator": {
  "data": {
   "lineno": 86
  },
  "type": "function"
 },
 "datalad.support.vcr_.use_cassette.do_nothing_decorator.wrapper": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "datalad.support.vcr_.lgr",
    "functools.wraps",
    "t"
   ]
  },
  "type": "function"
 },
 "datalad.support.vcr_.use_cassette.skip_decorator": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "datalad.support.vcr_.use_cassette.skip_decorator.wrapper": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "functools.wraps",
    "unittest.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.support.vcr_.vcr_lgr": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "datalad.support.vcr_.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "datalad.support.versions": {
  "data": {
   "symbols_in_volume": [
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.support.versions.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datalad.support.versions.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.support.versions._get_default_version": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.versions.time"
   ]
  },
  "type": "function"
 },
 "datalad.support.versions.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.support.versions.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "datalad.support.versions.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.support.versions.get_versions": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "collections.OrderedDict",
    "collections.defaultdict",
    "datalad.support.versions._get_default_version",
    "datalad.support.versions.lgr",
    "datalad.support.versions.re",
    "dict",
    "distutils.version.LooseVersion",
    "isinstance",
    "len",
    "list",
    "map",
    "os.path.basename",
    "sorted",
    "str",
    "tuple",
    "versioneer"
   ]
  },
  "type": "function"
 },
 "datalad.support.versions.lgr": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "datalad.support.versions.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.support.versions.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.teardown_package": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "datalad._test_states",
    "datalad.cfg",
    "datalad.consts.DATASETS_TOPURL",
    "datalad.os",
    "datalad.support.annexrepo.AnnexRepo._ALLOW_LOCAL_URLS",
    "datalad.support.cookies.cookies_db.close",
    "datalad.support.external_versions.external_versions.dumps",
    "datalad.tests._TEMP_PATHS_GENERATED",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.OBSCURE_FILENAME.encode",
    "datalad.tests.utils.rmtemp",
    "datalad.ui.ui.set_backend",
    "datalad.utils.get_encoding_info",
    "datalad.utils.get_envvars_info",
    "exc_str",
    "len",
    "print",
    "print_dict"
   ]
  },
  "type": "function"
 },
 "datalad.teardown_package.print_dict": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "datalad.test": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "datalad.support.third.nosetester.NoseTester"
   ]
  },
  "type": "function"
 },
 "datalad.tests": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.os",
    "datalad.tests.tempfile",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.tests._TEMP_PATHS_GENERATED": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "datalad.tests.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.tests.heavyoutput": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "datalad.tests.heavyoutput.s",
    "datalad.tests.heavyoutput.sys",
    "datalad.tests.heavyoutput.x",
    "list",
    "range",
    "str"
   ]
  },
  "type": "module"
 },
 "datalad.tests.heavyoutput.s": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "datalad.tests.heavyoutput.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.tests.heavyoutput.x": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "datalad.tests.lgr": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "datalad.tests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.tests.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test__main__": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test__main__.NamedTemporaryFile": {
  "data": {
   "shadows": "tempfile.NamedTemporaryFile"
  },
  "type": "import"
 },
 "datalad.tests.test__main__.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "datalad.tests.test__main__.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test__main__.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test__main__.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.tests.test__main__.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test__main__.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.tests.test__main__.test_main_help": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "SystemExit",
    "datalad.tests.test__main__.sys",
    "datalad.tests.utils.assert_raises",
    "io.StringIO",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test__main__.test_main_run_a_script": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.known_failure_githubci_win",
    "io.StringIO",
    "tempfile.NamedTemporaryFile",
    "unittest.mock.patch",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test__main__.test_main_version": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "SystemExit",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "io.StringIO",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_api": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_api.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.tests.test_api._test_consistent_order_of_args": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.eq_",
    "datalad.utils.getargspec",
    "getattr",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_api.api": {
  "data": {
   "shadows": "datalad.api"
  },
  "type": "import"
 },
 "datalad.tests.test_api.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.tests.test_api.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_api.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_api.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.tests.test_api.get_interface_groups": {
  "data": {
   "shadows": "datalad.interface.base.get_interface_groups"
  },
  "type": "import"
 },
 "datalad.tests.test_api.getargspec": {
  "data": {
   "shadows": "datalad.utils.getargspec"
  },
  "type": "import"
 },
 "datalad.tests.test_api.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "datalad.tests.test_api.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.tests.test_api.test_basic_setup": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "datalad.api",
    "datalad.api.Dataset.create.__doc__",
    "datalad.api.Dataset.install.__doc__",
    "datalad.tests.test_api.re",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_true",
    "dir",
    "filter",
    "hasattr",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_api.test_consistent_order_of_args": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datalad.interface.base.get_interface_groups",
    "datalad.tests.test_api._test_consistent_order_of_args",
    "dict",
    "getattr",
    "importlib.import_module"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.test_archives.fn_archive_obscure",
    "datalad.tests.test_archives.fn_archive_obscure_ext",
    "datalad.tests.test_archives.fn_in_archive_obscure",
    "datalad.tests.test_archives.mimedb",
    "datalad.tests.test_archives.mimetypes",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.on_windows",
    "dict"
   ]
  },
  "type": "module"
 },
 "datalad.tests.test_archives.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.ArchivesCache": {
  "data": {
   "shadows": "datalad.support.archives.ArchivesCache"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.ExtractedArchive": {
  "data": {
   "shadows": "datalad.support.archives.ExtractedArchive"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.MissingExternalDependency": {
  "data": {
   "shadows": "datalad.support.exceptions.MissingExternalDependency"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.OBSCURE_FILENAME": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_FILENAME"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.tests.test_archives._filename": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "datalad.tests.test_archives._test_get_leading_directory": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "datalad.support.archives.ExtractedArchive",
    "datalad.tests.utils.eq_",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.check_compress_dir": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "datalad.support.archives.compress_files",
    "datalad.support.archives.decompress_file",
    "datalad.support.path",
    "datalad.support.path.exists",
    "datalad.support.path.join",
    "datalad.tests.test_archives.os",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.check_compress_file": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "datalad.dochelpers.exc_str",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.archives.compress_files",
    "datalad.support.archives.decompress_file",
    "datalad.support.exceptions.MissingExternalDependency",
    "datalad.support.external_versions.external_versions",
    "datalad.support.path",
    "datalad.support.path.exists",
    "datalad.support.path.join",
    "datalad.tests.test_archives._filename",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.skip_if",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.check_decompress_file": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "NotImplementedError",
    "datalad.support.archives.decompress_file",
    "datalad.support.path",
    "datalad.support.path.exists",
    "datalad.support.path.join",
    "datalad.tests.test_archives.fn_archive_obscure",
    "datalad.tests.test_archives.fn_archive_obscure_ext",
    "datalad.tests.test_archives.fn_in_archive_obscure",
    "datalad.tests.test_archives.tree_simplearchive",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tree",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.compress_files": {
  "data": {
   "shadows": "datalad.support.archives.compress_files"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.decompress_file": {
  "data": {
   "shadows": "datalad.support.archives.decompress_file"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.dl_cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.exc_str": {
  "data": {
   "shadows": "datalad.dochelpers.exc_str"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.fn_archive_obscure": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "datalad.tests.test_archives.fn_archive_obscure_ext": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "datalad.tests.test_archives.fn_in_archive_obscure": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.tests.test_archives.mimedb": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "datalad.tests.test_archives.mimetypes": {
  "data": {
   "shadows": "mimetypes"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.ok_generator": {
  "data": {
   "shadows": "datalad.tests.utils.ok_generator"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.op": {
  "data": {
   "shadows": "datalad.support.path"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.skip_if": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.test_ArchivesCache": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.archives.ArchivesCache",
    "datalad.support.path.exists",
    "datalad.support.path.join",
    "datalad.tests.test_archives.fn_archive_obscure_ext",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_true"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.test_ExtractedArchive": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "datalad.cfg.get",
    "datalad.support.archives.ExtractedArchive",
    "datalad.support.path",
    "datalad.support.path.exists",
    "datalad.support.path.join",
    "datalad.tests.test_archives.fn_archive_obscure",
    "datalad.tests.test_archives.fn_archive_obscure_ext",
    "datalad.tests.test_archives.fn_in_archive_obscure",
    "datalad.tests.test_archives.tree_simplearchive",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_generator",
    "datalad.tests.utils.with_tree",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.test_compress_dir": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "datalad.tests.test_archives.check_compress_dir"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.test_compress_file": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "datalad.tests.test_archives.check_compress_file"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.test_decompress_file": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "NotImplementedError",
    "datalad.tests.test_archives.check_decompress_file",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.test_get_leading_directory": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "datalad.support.archives.ExtractedArchive",
    "datalad.support.path.join",
    "datalad.tests.test_archives._test_get_leading_directory"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.test_unixify_path": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "datalad.support.archive_utils_patool.unixify_path",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_archives.tree_simplearchive": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "datalad.tests.test_archives.unixify_path": {
  "data": {
   "shadows": "datalad.support.archive_utils_patool.unixify_path"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test_archives.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.tests.test_auto": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "nibabel"
   ]
  },
  "type": "module"
 },
 "datalad.tests.test_auto.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.LZMAFile": {
  "data": {
   "shadows": "datalad.support.json_py.LZMAFile"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "datalad.tests.test_auto._test_proxying_open": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "AutomagicIO",
    "IOError",
    "OSError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.tests.test_auto.os",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_tempfile",
    "generate_load",
    "open",
    "os.path.dirname",
    "os.path.join",
    "unittest.mock.patch",
    "verify_load"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto._test_proxying_open.StringIOfileno": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "io.StringIO"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_auto._test_proxying_open.StringIOfileno.fileno": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.h5py": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "datalad.tests.test_auto.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.known_failure_windows": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_windows"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.nib": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "datalad.tests.test_auto.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.test_proxying_io_open_regular": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "datalad.tests.test_auto._test_proxying_open",
    "datalad.tests.utils.known_failure_githubci_win"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_io_open_regular.generate_dat": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "datalad.tests.test_auto.io"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_io_open_regular.verify_dat": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "datalad.tests.test_auto.io",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_lzma_LZMAFile": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "datalad.tests.test_auto._test_proxying_open",
    "datalad.tests.utils.known_failure_githubci_win"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_lzma_LZMAFile.generate_dat": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "datalad.support.json_py.LZMAFile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_lzma_LZMAFile.verify_dat": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "datalad.support.json_py.LZMAFile",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_h5py": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "datalad.tests.test_auto._test_proxying_open",
    "datalad.tests.test_auto.h5py",
    "datalad.tests.utils.SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_h5py.generate_hdf5": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "datalad.tests.test_auto.h5py"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_h5py.verify_hdf5": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "datalad.tests.test_auto.h5py",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_nibabel": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "datalad.tests.test_auto._test_proxying_open",
    "datalad.tests.utils.SkipTest",
    "nibabel",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_nibabel.generate_nii": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "nibabel.Nifti1Image",
    "numpy.eye"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_nibabel.verify_nii": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "nibabel.load",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_regular": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "datalad.tests.test_auto._test_proxying_open",
    "datalad.tests.utils.known_failure_githubci_win"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_regular.generate_dat": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_regular.verify_dat": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_open_testrepobased": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "AutomagicIO",
    "IOError",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.test_auto.os",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_windows",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_testrepos",
    "isinstance",
    "open",
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_os_stat": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "datalad.tests.test_auto._test_proxying_open",
    "datalad.tests.utils.known_failure_githubci_win"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_os_stat.generate_dat": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "datalad.tests.test_auto.io"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.test_proxying_os_stat.verify_dat": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "datalad.tests.test_auto.os"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_auto.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test_auto.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_base.ConfigManager": {
  "data": {
   "shadows": "datalad.config.ConfigManager"
  },
  "type": "import"
 },
 "datalad.tests.test_base.Dataset": {
  "data": {
   "shadows": "datalad.api.Dataset"
  },
  "type": "import"
 },
 "datalad.tests.test_base.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.tests.test_base.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_base.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_base.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.tests.test_base.get_dataset_root": {
  "data": {
   "shadows": "datalad.tests.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.tests.test_base.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.tests.test_base.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.tests.test_base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_base.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_base.require_dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.require_dataset"
  },
  "type": "import"
 },
 "datalad.tests.test_base.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.tests.test_base.test_git_config_warning": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.api.Dataset",
    "datalad.config.ConfigManager._checked_git_identity",
    "datalad.tests.test_base.os",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tree",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_base.test_no_empty_http_proxy": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "datalad.tests.test_base.os"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_base.test_not_under_git": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Exception",
    "datalad.distribution.dataset.require_dataset",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.get_dataset_root",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_base.test_paths_with_forward_slashes": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tree",
    "os.path.join",
    "os.path.sep",
    "print"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_base.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_cmd.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.DryRunProtocol": {
  "data": {
   "shadows": "datalad.support.protocol.DryRunProtocol"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.OBSCURE_FILENAME": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_FILENAME"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.assert_cwd_unchanged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_cwd_unchanged"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.assert_greater": {
  "data": {
   "shadows": "datalad.tests.utils.assert_greater"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.assert_is": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.check_runner_heavy_output": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "Runner",
    "datalad.tests.test_cmd.logging",
    "datalad.tests.test_cmd.sys",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_greater",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.lgr.getEffectiveLevel",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.swallow_outputs",
    "len",
    "os.path.dirname",
    "os.path.join",
    "runner",
    "runner.run"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.check_runner_heavy_output.process_stdout": {
  "data": {
   "lineno": 244
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.lgr": {
  "data": {
   "shadows": "datalad.tests.utils.lgr"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.ok_exists": {
  "data": {
   "shadows": "datalad.tests.utils.ok_exists"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.split_cmdline": {
  "data": {
   "shadows": "datalad.utils.split_cmdline"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.test_git_path": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "GitRepo",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_process_remaining_output": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "Runner",
    "datalad.tests.test_cmd.os",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "runner",
    "runner._process_remaining_output"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Runner",
    "datalad.tests.test_cmd.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_cwd_encoding": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "Runner",
    "datalad.tests.test_cmd.os",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.ok_exists",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_dry": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "Runner",
    "datalad.support.protocol.DryRunProtocol",
    "datalad.tests.test_cmd.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_is",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.split_cmdline"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_failure": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "AnnexRepo",
    "Runner",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "runner",
    "runner.run"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_failure_unicode": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "Runner",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "runner",
    "runner.run"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_fix_PWD": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "Runner",
    "datalad.tests.test_cmd.os",
    "datalad.tests.test_cmd.sys",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.skip_if_on_windows",
    "datalad.tests.utils.with_tempfile",
    "runner",
    "runner.run"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_heavy_output": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "datalad.tests.test_cmd.check_runner_heavy_output",
    "datalad.tests.utils.skip_if_on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_instance_callable_dry": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "Runner",
    "datalad.support.protocol.DryRunProtocol",
    "datalad.tests.test_cmd.os",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.eq_",
    "runner"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_instance_callable_wet": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Runner",
    "datalad.tests.test_cmd.os",
    "datalad.tests.test_cmd.sys",
    "datalad.tests.utils.eq_",
    "runner"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_log_stderr": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "AssertionError",
    "Runner",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.on_windows",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.swallow_outputs",
    "runner",
    "runner.run"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_log_stdout": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "Runner",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.on_windows",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.swallow_outputs",
    "isinstance",
    "list",
    "runner",
    "runner.run"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_remaining_output_two_pipes": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "GitRepo",
    "GitRunner",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.on_windows",
    "datalad.tests.utils.with_tree",
    "map",
    "open",
    "os.path.join",
    "range",
    "runner",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.test_runner_stdin": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "Runner",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils.with_tempfile",
    "open",
    "os.path.join",
    "runner",
    "runner.run"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_cmd.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test_cmd.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.tests.test_config": {
  "data": {
   "symbols_in_volume": [
    "datalad.tests.test_config._config_file_content"
   ]
  },
  "type": "module"
 },
 "datalad.tests.test_config.CommandError": {
  "data": {
   "shadows": "datalad.cmd.CommandError"
  },
  "type": "import"
 },
 "datalad.tests.test_config.ConfigManager": {
  "data": {
   "shadows": "datalad.config.ConfigManager"
  },
  "type": "import"
 },
 "datalad.tests.test_config.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.tests.test_config.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_config.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.tests.test_config._config_file_content": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "datalad.tests.test_config._dataset_config_template": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "datalad.tests.test_config.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_config.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.tests.test_config.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_config.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_config.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.tests.test_config.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_config.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_config.cfg_defs": {
  "data": {
   "shadows": "datalad.interface.common_cfg.definitions"
  },
  "type": "import"
 },
 "datalad.tests.test_config.chpwd": {
  "data": {
   "shadows": "datalad.tests.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.tests.test_config.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.tests.test_config.dl_cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.tests.test_config.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.tests.test_config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.tests.test_config.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.tests.test_config.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.test_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_config.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_config.rewrite_url": {
  "data": {
   "shadows": "datalad.config.rewrite_url"
  },
  "type": "import"
 },
 "datalad.tests.test_config.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.tests.test_config.test_bare": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_crazy_cfg": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "datalad.cfg",
    "datalad.config.ConfigManager",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tree",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_dataset_local_mode": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.cfg",
    "datalad.config.ConfigManager",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_dataset_systemglobal_mode": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.cfg",
    "datalad.config.ConfigManager",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_from_env": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "datalad.cfg",
    "datalad.cfg.reload",
    "datalad.cfg.set",
    "datalad.config.ConfigManager",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.test_config.os",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_global_config": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "any",
    "datalad.cfg._cfgfiles",
    "datalad.cfg.get",
    "datalad.tests.test_config.os",
    "datalad.tests.utils.assert_equal",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_no_leaks": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.with_tempfile",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_no_local_write_if_no_dataset": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "datalad.cfg",
    "datalad.cfg.set",
    "datalad.cmd.CommandError",
    "datalad.config.ConfigManager",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.chpwd",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_obtain": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "ask",
    "datalad.api.create",
    "datalad.cfg",
    "datalad.cfg.add",
    "datalad.cfg.obtain",
    "datalad.cfg.unset",
    "datalad.config.ConfigManager",
    "datalad.interface.common_cfg.definitions",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "dict",
    "float",
    "int"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_obtain.ask": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "datalad.cfg.obtain",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_overrides": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "datalad.cfg",
    "datalad.cfg._cfgfiles",
    "datalad.cfg._store",
    "datalad.cfg.add",
    "datalad.cfg.overrides",
    "datalad.cfg.remove_section",
    "datalad.cfg.rename_section",
    "datalad.cfg.set",
    "datalad.cfg.unset",
    "datalad.config.ConfigManager",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_equal",
    "datalad.tests.utils.assert_not_in",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_rewrite_url": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "datalad.cfg",
    "datalad.config.rewrite_url",
    "datalad.tests.test_config.logging",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.utils.swallow_logs",
    "input",
    "input.startswith"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.test_something": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "datalad.cfg",
    "datalad.cfg.__getitem__",
    "datalad.cfg.add",
    "datalad.cfg.get",
    "datalad.cfg.get_value",
    "datalad.cfg.getbool",
    "datalad.cfg.getfloat",
    "datalad.cfg.getint",
    "datalad.cfg.has_option",
    "datalad.cfg.has_section",
    "datalad.cfg.items",
    "datalad.cfg.options",
    "datalad.cfg.rename_section",
    "datalad.cfg.sections",
    "datalad.cfg.set",
    "datalad.cfg.unset",
    "datalad.cmd.CommandError",
    "datalad.config.ConfigManager",
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.test_config._dataset_config_template",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_tree",
    "datalad.utils.swallow_logs",
    "len",
    "os.path.exists",
    "os.path.join",
    "sorted",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_config.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test_config.with_testsui": {
  "data": {
   "shadows": "datalad.tests.utils.with_testsui"
  },
  "type": "import"
 },
 "datalad.tests.test_config.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_constraints.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.ct": {
  "data": {
   "shadows": "constraints"
  },
  "type": "import"
 },
 "datalad.tests.test_constraints.test_altconstraints": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "c.short_description",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_bool": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_both": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_callable": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_choice": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_constraints": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_float": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_int": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "c.short_description",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_keychoice": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_listof": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "c",
    "datalad.tests.utils.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_none": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_range": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "c",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_str": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "c.short_description",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_str_min_len": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "c",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_raises"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_tupleof": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "c",
    "datalad.tests.utils.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_constraints.test_type_str": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_equal",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_direct_mode": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_direct_mode.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.DirectModeNoLongerSupportedError": {
  "data": {
   "shadows": "datalad.support.exceptions.DirectModeNoLongerSupportedError"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.op": {
  "data": {
   "shadows": "datalad.support.path"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_direct_mode.test_direct_cfg": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo._unique_instances.clear",
    "datalad.support.annexrepo.AnnexRepo.clone",
    "datalad.support.exceptions.DirectModeNoLongerSupportedError",
    "datalad.support.path",
    "datalad.support.path.join",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.with_tempfile",
    "list",
    "str",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_direct_mode.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test_dochelpers": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_dochelpers.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_dochelpers.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.tests.test_dochelpers.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_dochelpers.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_dochelpers.test_basic": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_equal",
    "single_or_plural"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_doc": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_doc.A": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_dochelpers.test_borrow_doc.A.met1": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_doc.A.met2": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_doc.B": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_dochelpers.test_borrow_doc.B.met1": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "borrowdoc"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_doc.B.met2": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "borrowdoc"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_true"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.A": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.A.met1": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.A.met2": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.B": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.B.met1": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "borrowkwargs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.B.met_anothermet": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "borrowkwargs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.B.met_excludes": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "borrowkwargs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.B.met_nodoc": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "borrowkwargs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_borrow_kwargs.B.met_nodockwargs": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "borrowkwargs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_exc_str": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_re_in",
    "exc_str",
    "f",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_exc_str.f": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "f2"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_dochelpers.test_exc_str.f.f2": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_installed": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_installed.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.tests.test_installed.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.tests.test_installed.assert_cwd_unchanged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_cwd_unchanged"
  },
  "type": "import"
 },
 "datalad.tests.test_installed.check_run_and_get_output": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.cmd.Runner",
    "datalad.support.exceptions.CommandError",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_installed.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.tests.test_installed.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.tests.test_installed.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_installed.test_run_datalad_help": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "datalad.tests.test_installed.check_run_and_get_output",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_interface": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_interface.Demo": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "datalad.interface.base.Interface",
    "datalad.support.constraints.EnsureInt",
    "datalad.support.param.Parameter",
    "dict"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_interface.Demo.__call__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "datalad.tests.test_interface.Interface": {
  "data": {
   "shadows": "datalad.interface.base.Interface"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.Parameter": {
  "data": {
   "shadows": "datalad.support.param.Parameter"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.assert_is": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.cnstr": {
  "data": {
   "shadows": "datalad.support.constraints"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.get_api_name": {
  "data": {
   "shadows": "datalad.interface.base.get_api_name"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.get_cmdline_command_name": {
  "data": {
   "shadows": "datalad.interface.base.get_cmdline_command_name"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.tests.test_interface.test_interface": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "SystemExit",
    "datalad.tests.test_interface.Demo",
    "datalad.tests.test_interface.argparse",
    "datalad.tests.test_interface.re",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_is",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_re_in",
    "datalad.tests.utils.swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_interface.test_name_generation": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "datalad.interface.base.get_api_name",
    "datalad.interface.base.get_cmdline_command_name",
    "datalad.tests.utils.assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_interface.test_param": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "datalad.support.constraints.EnsureInt",
    "datalad.support.constraints.EnsureStr",
    "datalad.support.param.Parameter",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_true",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_log.ColorFormatter": {
  "data": {
   "shadows": "datalad.log.ColorFormatter"
  },
  "type": "import"
 },
 "datalad.tests.test_log.EnsureBool": {
  "data": {
   "shadows": "datalad.support.constraints.EnsureBool"
  },
  "type": "import"
 },
 "datalad.tests.test_log.LoggerHelper": {
  "data": {
   "shadows": "datalad.log.LoggerHelper"
  },
  "type": "import"
 },
 "datalad.tests.test_log.TraceBack": {
  "data": {
   "shadows": "datalad.log.TraceBack"
  },
  "type": "import"
 },
 "datalad.tests.test_log.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_log.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_log.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.tests.test_log.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.tests.test_log.check_filters": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "datalad.tests.test_log.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.colors": {
  "data": {
   "shadows": "datalad.support.ansi_colors"
  },
  "type": "import"
 },
 "datalad.tests.test_log.currentframe": {
  "data": {
   "shadows": "inspect.currentframe"
  },
  "type": "import"
 },
 "datalad.tests.test_log.dl_cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.tests.test_log.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.tests.test_log.getframeinfo": {
  "data": {
   "shadows": "inspect.getframeinfo"
  },
  "type": "import"
 },
 "datalad.tests.test_log.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.tests.test_log.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.tests.test_log.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.tests.test_log.makeLogRecord": {
  "data": {
   "shadows": "logging.makeLogRecord"
  },
  "type": "import"
 },
 "datalad.tests.test_log.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.tests.test_log.ok_endswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_endswith"
  },
  "type": "import"
 },
 "datalad.tests.test_log.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.tests.test_log.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_log.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.tests.test_log.test_color_formatter": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "datalad.log.ColorFormatter",
    "datalad.support.ansi_colors.RESET_SEQ",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.known_failure_githubci_win",
    "dict",
    "logging.makeLogRecord",
    "rec"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_filters": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "datalad.log.LoggerHelper",
    "datalad.tests.test_log.check_filters",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_filters._mock_names": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_filters._mock_namesre": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_log_progress_noninteractive_filter": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "datalad.log.LoggerHelper",
    "datalad.log.log_progress",
    "datalad.tests.test_log.logging",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.swallow_logs",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_logging_to_a_file": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "datalad.cfg.get",
    "datalad.log.LoggerHelper",
    "datalad.support.constraints.EnsureBool",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_re_in",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "len",
    "open",
    "os.path.exists",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_logtarget_via_env_variable": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "datalad.log.LoggerHelper",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "os.path.exists",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_mutliple_targets": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "datalad.log.LoggerHelper",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "len",
    "open",
    "os.path.exists"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_traceback": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "datalad.log.TraceBack",
    "datalad.tests.utils.ok_endswith",
    "inspect.currentframe",
    "inspect.getframeinfo",
    "rec",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.test_traceback.rec": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "rec",
    "tb"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_log.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_misc.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datalad.tests.test_misc.datalad": {
  "data": {
   "shadows": "datalad"
  },
  "type": "import"
 },
 "datalad.tests.test_misc.get_url_response_stamp": {
  "data": {
   "shadows": "datalad.support.network.get_url_response_stamp"
  },
  "type": "import"
 },
 "datalad.tests.test_misc.is_url_quoted": {
  "data": {
   "shadows": "datalad.support.network.is_url_quoted"
  },
  "type": "import"
 },
 "datalad.tests.test_misc.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datalad.tests.test_misc.test_get_response_stamp": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "datalad.support.network.get_url_response_stamp",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_misc.test_is_url_quoted": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "datalad.support.network.is_url_quoted",
    "ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_misc.test_test": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "SkipTest",
    "datalad.tests.test_misc.datalad",
    "datalad.tests.test_misc.numpy",
    "distutils.version.LooseVersion"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_protocols": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_protocols.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.assert_is": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.assert_is_instance": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.tests.test_protocols.test_DryRunExternalsProtocol": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "AssertionError",
    "DryRunExternalsProtocol",
    "Exception",
    "Runner",
    "datalad.tests.test_protocols.os",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.with_tempfile",
    "len",
    "runner",
    "runner.run"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_protocols.test_DryRunProtocol": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "AssertionError",
    "DryRunProtocol",
    "Exception",
    "Runner",
    "datalad.tests.test_protocols.os",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "len",
    "runner"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_protocols.test_ExecutionTimeExternalsProtocol": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "Exception",
    "ExecutionTimeExternalsProtocol",
    "Runner",
    "datalad.tests.test_protocols.os",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_is",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "len",
    "new_runner",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_protocols.test_ExecutionTimeProtocol": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Exception",
    "ExecutionTimeProtocol",
    "Runner",
    "datalad.tests.test_protocols.os",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_is",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.swallow_logs",
    "datalad.tests.utils.with_tempfile",
    "len",
    "new_runner",
    "os.path.normpath",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_protocols.test_protocol_commons": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "TypeError",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.with_tempfile",
    "dict",
    "iter",
    "len",
    "open",
    "protocol_class",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_protocols.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test_s3": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_s3.URL": {
  "data": {
   "shadows": "datalad.support.network.URL"
  },
  "type": "import"
 },
 "datalad.tests.test_s3.add_version_to_url": {
  "data": {
   "shadows": "datalad.support.s3.add_version_to_url"
  },
  "type": "import"
 },
 "datalad.tests.test_s3.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_s3.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.tests.test_s3.get_test_providers": {
  "data": {
   "shadows": "datalad.downloaders.tests.utils.get_test_providers"
  },
  "type": "import"
 },
 "datalad.tests.test_s3.get_versioned_url": {
  "data": {
   "shadows": "datalad.support.s3.get_versioned_url"
  },
  "type": "import"
 },
 "datalad.tests.test_s3.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.tests.test_s3.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.tests.test_s3.test_add_version_to_url": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "datalad.support.network.URL",
    "datalad.support.s3.add_version_to_url",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_s3.test_get_versioned_url": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "datalad.downloaders.tests.utils.get_test_providers",
    "datalad.support.s3.get_versioned_url",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.use_cassette",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_s3.test_get_versioned_url_anon": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datalad.support.s3.get_versioned_url",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_s3.test_version_url_deleted": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "datalad.downloaders.tests.utils.get_test_providers",
    "datalad.support.s3.get_versioned_url",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.use_cassette"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_s3.use_cassette": {
  "data": {
   "shadows": "datalad.tests.utils.use_cassette"
  },
  "type": "import"
 },
 "datalad.tests.test_strings": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_strings.test_apply_replacement_rules": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "apply_replacement_rules",
    "assert_raises",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_testrepos": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_testrepos.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_testrepos.Runner": {
  "data": {
   "shadows": "datalad.cmd.Runner"
  },
  "type": "import"
 },
 "datalad.tests.test_testrepos.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.tests.test_testrepos.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_testrepos.test_clone": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "datalad.cmd.Runner",
    "datalad.tests.test_testrepos.os",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_testrepos.test_having_annex": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.test_testrepos.os",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_testrepos.test_make_studyforrest_mockup": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "datalad.tests.utils.usecase",
    "datalad.tests.utils.with_tempfile",
    "make_studyforrest_mockup"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_testrepos.test_point_to_github": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_testrepos.usecase": {
  "data": {
   "shadows": "datalad.tests.utils.usecase"
  },
  "type": "import"
 },
 "datalad.tests.test_testrepos.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test_testrepos.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "datalad.tests.test_tests_utils.DATASETS_TOPURL": {
  "data": {
   "shadows": "datalad.consts.DATASETS_TOPURL"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.OBSCURE_FILENAMES": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_FILENAMES"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.OBSCURE_PREFIX": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_PREFIX"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils._get_resolved_flavors": {
  "data": {
   "shadows": "datalad.tests.utils._get_resolved_flavors"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils._test_assert_Xwd_unchanged": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.utils.getpwd",
    "do_chdir"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils._test_assert_Xwd_unchanged.do_chdir": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "func"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils._test_assert_Xwd_unchanged_ok_chdir": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.swallow_logs",
    "datalad.utils.getpwd",
    "do_chdir_value_error"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils._test_assert_Xwd_unchanged_ok_chdir.do_chdir_value_error": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "func"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils._test_serve_path_via_http": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "datalad.tests.test_tests_utils.bs4",
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.test_tests_utils.random",
    "datalad.tests.test_tests_utils.sys",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.with_tempfile",
    "open",
    "str",
    "test_path_and_url"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils._test_serve_path_via_http.test_path_and_url": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.bs4",
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.serve_path_via_http",
    "len",
    "urllib.request.urlopen"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils._with_tempfile_decorated_dummy": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "datalad.support.path",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.assert_cwd_unchanged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_cwd_unchanged"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.assert_dict_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_dict_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.assert_re_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_re_in"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.assert_str_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_str_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.bs4": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "datalad.tests.test_tests_utils.check_nested_with_tempfile_parametrized_surrounded": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.local_testrepo_flavors",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils.with_testrepos",
    "datalad.tests.utils.with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.dl_cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.get_datasets_topdir": {
  "data": {
   "shadows": "datalad.tests.utils.get_datasets_topdir"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.get_most_obscure_supported_name": {
  "data": {
   "shadows": "datalad.tests.utils.get_most_obscure_supported_name"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.glob": {
  "data": {
   "shadows": "glob.glob"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.ignore_nose_capturing_stdout": {
  "data": {
   "shadows": "datalad.tests.utils.ignore_nose_capturing_stdout"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.known_failure_githubci_win": {
  "data": {
   "shadows": "datalad.tests.utils.known_failure_githubci_win"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.local_testrepo_flavors": {
  "data": {
   "shadows": "datalad.tests.utils.local_testrepo_flavors"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.nok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.nok_startswith"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.ok_broken_symlink": {
  "data": {
   "shadows": "datalad.tests.utils.ok_broken_symlink"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.ok_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_under_git"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.ok_generator": {
  "data": {
   "shadows": "datalad.tests.utils.ok_generator"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.ok_good_symlink": {
  "data": {
   "shadows": "datalad.tests.utils.ok_good_symlink"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.ok_startswith": {
  "data": {
   "shadows": "datalad.tests.utils.ok_startswith"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.ok_symlink": {
  "data": {
   "shadows": "datalad.tests.utils.ok_symlink"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.op": {
  "data": {
   "shadows": "datalad.support.path"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.patch_config": {
  "data": {
   "shadows": "datalad.tests.utils.patch_config"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.probe_known_failure": {
  "data": {
   "shadows": "datalad.tests.utils.probe_known_failure"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.rmtemp": {
  "data": {
   "shadows": "datalad.tests.utils.rmtemp"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.run_under_dir": {
  "data": {
   "shadows": "datalad.tests.utils.run_under_dir"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.serve_path_via_http": {
  "data": {
   "shadows": "datalad.tests.utils.serve_path_via_http"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.skip_if": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.skip_if_no_module": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_module"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.skip_ssh": {
  "data": {
   "shadows": "datalad.tests.utils.skip_ssh"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.skip_wo_symlink_capability": {
  "data": {
   "shadows": "datalad.tests.utils.skip_wo_symlink_capability"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.swallow_logs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.test_assert_Xwd_unchanged": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils._test_assert_Xwd_unchanged",
    "datalad.tests.test_tests_utils.os",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_assert_Xwd_unchanged_ok_chdir": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils._test_assert_Xwd_unchanged_ok_chdir",
    "datalad.tests.test_tests_utils.os",
    "datalad.utils.chpwd"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_assert_cwd_unchanged_not_masking_exceptions": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "ValueError",
    "datalad.tests.test_tests_utils.logging",
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.swallow_logs",
    "do_chdir_value_error"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_assert_cwd_unchanged_not_masking_exceptions.do_chdir_value_error": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "ValueError",
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.assert_cwd_unchanged"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_assert_dict_equal": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_dict_equal",
    "datalad.tests.utils.assert_raises",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_assert_re_in": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_re_in"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_assert_str_equal": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.assert_str_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_get_most_obscure_supported_name": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "datalad.tests.utils.OBSCURE_FILENAMES",
    "datalad.tests.utils.OBSCURE_PREFIX",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.known_failure_githubci_win",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_startswith",
    "len",
    "print",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_get_resolved_values": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "datalad.cfg.get",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils._get_resolved_flavors",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.patch_config"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_get_resolved_values.magical": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_ignore_nose_capturing_stdout": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "AttributeError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ignore_nose_capturing_stdout"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_ignore_nose_capturing_stdout.raise_exc": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_keeptemp_via_env_variable": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "check",
    "datalad.cfg.get",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.rmtemp",
    "len",
    "os.path.exists",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_keeptemp_via_env_variable.check": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "datalad.tests.utils.with_tempfile",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_nested_with_tempfile_basic": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_nested_with_tempfile_parametrized_surrounded": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.check_nested_with_tempfile_parametrized_surrounded"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_nok_startswith": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.nok_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_ok_file_under_git_symlinks": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.path",
    "datalad.support.path.join",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.ok_symlink",
    "datalad.tests.utils.skip_wo_symlink_capability",
    "datalad.tests.utils.with_tree",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_ok_generator": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_generator",
    "func",
    "gen",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_ok_generator.func": {
  "data": {
   "lineno": 303
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_ok_generator.gen": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_ok_startswith": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_ok_symlink_helpers": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_broken_symlink",
    "datalad.tests.utils.ok_good_symlink",
    "datalad.tests.utils.ok_symlink",
    "datalad.tests.utils.skip_wo_symlink_capability",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_probe_known_failure": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.patch_config",
    "datalad.tests.utils.probe_known_failure"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_run_under_dir": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.getpwd",
    "f"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_run_under_dir.f": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.run_under_dir",
    "datalad.utils.getpwd"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_serve_path_via_http": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils._test_serve_path_via_http",
    "datalad.tests.utils.get_most_obscure_supported_name",
    "datalad.tests.utils.known_failure_githubci_win",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_setup": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "datalad.consts.DATASETS_TOPURL",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.get_datasets_topdir"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_if": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "f"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_if.f": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "datalad.tests.utils.skip_if"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_if_no_module": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "testish2"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_if_no_module.testish": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "ValueError",
    "datalad.tests.utils.skip_if_no_module"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_if_no_module.testish2": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "datalad.tests.utils.skip_if_no_module"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_if_no_network": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.patch_config",
    "datalad.tests.utils.skip_if_no_network",
    "hasattr",
    "somefunc",
    "unittest.mock.patch",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_if_no_network.somefunc": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "datalad.tests.utils.skip_if_no_network"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_skip_ssh": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.patch_config",
    "datalad.tests.utils.skip_ssh"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_testsui": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "ValueError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "func2",
    "func3"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_testsui.func2": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_testsui",
    "datalad.ui.ui.question",
    "datalad.ui.ui.yesno"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_testsui.func3": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.with_testsui",
    "datalad.ui.ui.is_interactive"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_testsui.some_func": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "datalad.tests.utils.with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_content": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_content_raises_on_mkdir": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "datalad.tests.utils.assert_raises",
    "t"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_content_raises_on_mkdir.t": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_default_prefix": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "datalad.tests.utils.nok_startswith",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.on_windows",
    "datalad.tests.utils.with_tempfile",
    "os.path.basename"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_dir_via_env_variable": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils._with_tempfile_decorated_dummy",
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.patch_config"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_mkdir": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "check_mkdir",
    "datalad.cfg.get",
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_mkdir.check_mkdir": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.with_tempfile",
    "glob.glob",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_tempfile_specified_prefix": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_startswith",
    "datalad.tests.utils.with_tempfile",
    "os.path.basename"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_testrepos": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "check_with_testrepos",
    "datalad.cfg.get",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.on_windows",
    "len",
    "os.path.exists",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_with_testrepos.check_with_testrepos": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "datalad.tests.utils.with_testrepos"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_without_http_proxy": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "AssertionError",
    "check",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.known_failure_githubci_win",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.test_without_http_proxy.check": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "datalad.tests.test_tests_utils.os",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.without_http_proxy"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_tests_utils.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.urlopen": {
  "data": {
   "shadows": "urllib.request.urlopen"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.with_testsui": {
  "data": {
   "shadows": "datalad.tests.utils.with_testsui"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.with_tree": {
  "data": {
   "shadows": "datalad.tests.utils.with_tree"
  },
  "type": "import"
 },
 "datalad.tests.test_tests_utils.without_http_proxy": {
  "data": {
   "shadows": "datalad.tests.utils.without_http_proxy"
  },
  "type": "import"
 },
 "datalad.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_utils.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.CMD_MAX_ARG": {
  "data": {
   "shadows": "datalad.utils.CMD_MAX_ARG"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "datalad.tests.test_utils._check_setup_exceptionhook": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "SkipTest",
    "assert_equal",
    "assert_in",
    "datalad.tests.test_utils.sys",
    "datalad.utils.setup_exceptionhook",
    "datalad.utils.swallow_logs",
    "datalad.utils.swallow_outputs",
    "eq_",
    "ok_",
    "our_exceptionhook",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils._check_setup_exceptionhook.our_post_mortem": {
  "data": {
   "lineno": 289
  },
  "type": "function"
 },
 "datalad.tests.test_utils._get_testm_tree": {
  "data": {
   "lineno": 1084
  },
  "type": "function"
 },
 "datalad.tests.test_utils._path_": {
  "data": {
   "shadows": "datalad.utils._path_"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.abspath": {
  "data": {
   "shadows": "os.path.abspath"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.all_same": {
  "data": {
   "shadows": "datalad.utils.all_same"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.any_re_search": {
  "data": {
   "shadows": "datalad.utils.any_re_search"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.auto_repr": {
  "data": {
   "shadows": "datalad.utils.auto_repr"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.basename": {
  "data": {
   "shadows": "os.path.basename"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.better_wraps": {
  "data": {
   "shadows": "datalad.utils.better_wraps"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.chpwd": {
  "data": {
   "shadows": "datalad.utils.chpwd"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.create_tree": {
  "data": {
   "shadows": "datalad.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.disable_logger": {
  "data": {
   "shadows": "datalad.utils.disable_logger"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.dl_cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.dlabspath": {
  "data": {
   "shadows": "datalad.utils.dlabspath"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.dltestm2": {
  "data": {
   "shadows": "dltestm2"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.expandpath": {
  "data": {
   "shadows": "datalad.utils.expandpath"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.expanduser": {
  "data": {
   "shadows": "os.path.expanduser"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.expandvars": {
  "data": {
   "shadows": "os.path.expandvars"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.file_basename": {
  "data": {
   "shadows": "datalad.utils.file_basename"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.find_files": {
  "data": {
   "shadows": "datalad.utils.find_files"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.generate_chunks": {
  "data": {
   "shadows": "datalad.utils.generate_chunks"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.get_dataset_root": {
  "data": {
   "shadows": "datalad.utils.get_dataset_root"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.get_func_kwargs_doc": {
  "data": {
   "shadows": "datalad.utils.get_func_kwargs_doc"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.get_open_files": {
  "data": {
   "shadows": "datalad.utils.get_open_files"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.get_path_prefix": {
  "data": {
   "shadows": "datalad.utils.get_path_prefix"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.get_timestamp_suffix": {
  "data": {
   "shadows": "datalad.utils.get_timestamp_suffix"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.get_trace": {
  "data": {
   "shadows": "datalad.utils.get_trace"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.getargspec": {
  "data": {
   "shadows": "datalad.utils.getargspec"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.getpwd": {
  "data": {
   "shadows": "datalad.utils.getpwd"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.import_module_from_file": {
  "data": {
   "shadows": "datalad.utils.import_module_from_file"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.import_modules": {
  "data": {
   "shadows": "datalad.utils.import_modules"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.is_explicit_path": {
  "data": {
   "shadows": "datalad.utils.is_explicit_path"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.isabs": {
  "data": {
   "shadows": "os.path.isabs"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.knows_annex": {
  "data": {
   "shadows": "datalad.utils.knows_annex"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.line_profile": {
  "data": {
   "shadows": "datalad.utils.line_profile"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.make_tempfile": {
  "data": {
   "shadows": "datalad.utils.make_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.map_items": {
  "data": {
   "shadows": "datalad.utils.map_items"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.md5sum": {
  "data": {
   "shadows": "datalad.utils.md5sum"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.never_fail": {
  "data": {
   "shadows": "datalad.utils.never_fail"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.normpath": {
  "data": {
   "shadows": "os.path.normpath"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.not_supported_on_windows": {
  "data": {
   "shadows": "datalad.utils.not_supported_on_windows"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.pardir": {
  "data": {
   "shadows": "os.path.pardir"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.partition": {
  "data": {
   "shadows": "datalad.utils.partition"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.path_is_subpath": {
  "data": {
   "shadows": "datalad.utils.path_is_subpath"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.path_startswith": {
  "data": {
   "shadows": "datalad.utils.path_startswith"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.read_csv_lines": {
  "data": {
   "shadows": "datalad.utils.read_csv_lines"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.rotree": {
  "data": {
   "shadows": "datalad.utils.rotree"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.safe_print": {
  "data": {
   "shadows": "datalad.utils.safe_print"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.setup_exceptionhook": {
  "data": {
   "shadows": "datalad.utils.setup_exceptionhook"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.swallow_outputs": {
  "data": {
   "shadows": "datalad.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.test_CMD_MAX_ARG": {
  "data": {
   "lineno": 1239,
   "symbols_in_volume": [
    "assert_greater",
    "datalad.utils.CMD_MAX_ARG"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_all_same": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "datalad.utils.all_same",
    "gen1",
    "never_get_to_not_needed",
    "ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_all_same.gen1": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_all_same.never_get_to_not_needed": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_any_re_search": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "assert_false",
    "assert_true",
    "datalad.utils.any_re_search"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_as_unicode": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "TypeError",
    "as_unicode",
    "assert_in",
    "assert_raises",
    "eq_",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_assure_bool": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "assure_bool",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_assure_dict_from_str": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "assert_equal",
    "assure_dict_from_str",
    "dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_assure_iter": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "assure_iter",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_assure_list_copy": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "assure_list"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_assure_list_from_str": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "assert_equal",
    "assure_list_from_str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_assure_unicode": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "datalad.utils.assure_unicode",
    "eq_",
    "isinstance",
    "ok_",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_auto_repr": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "assert_equal",
    "buga",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_auto_repr.WithoutReprClass": {
  "data": {
   "lineno": 438
  },
  "type": "class"
 },
 "datalad.tests.test_utils.test_auto_repr.WithoutReprClass.__init__": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_auto_repr.buga": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "datalad.utils.auto_repr"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_utils.test_auto_repr.buga.__init__": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "WithoutReprClass",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_auto_repr.buga.some": {
  "data": {
   "lineno": 450
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_better_wraps": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "datalad.utils.getargspec",
    "eq_",
    "function1",
    "function2"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_better_wraps.better_decorator": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_better_wraps.better_decorator._wrap_better_decorator": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "datalad.utils.better_wraps",
    "func"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_better_wraps.function1": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_better_wraps.function2": {
  "data": {
   "lineno": 154
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_better_wraps.wraps_decorator": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_better_wraps.wraps_decorator._wrap_wraps_decorator": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "func",
    "functools.wraps"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_chpwd_obscure_name": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "datalad.tests.test_utils.os",
    "datalad.utils.chpwd",
    "os.path.join",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_create_tree": {
  "data": {
   "lineno": 1246,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.utils.create_tree",
    "os.path.join",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_disable_logger": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.tests.test_utils.logging",
    "datalad.utils.disable_logger",
    "datalad.utils.swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_dlabspath": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "SkipTest",
    "datalad.tests.test_utils.os",
    "datalad.utils.chpwd",
    "datalad.utils.dlabspath",
    "eq_",
    "has_symlink_capability",
    "os.path.join",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_expandpath": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "assert_true",
    "datalad.utils.expandpath",
    "eq_",
    "os.path.expanduser",
    "os.path.expandvars",
    "os.path.isabs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_file_basename": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "datalad.utils.file_basename",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_find_files": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "assert_in",
    "assert_not_in",
    "datalad.utils.find_files",
    "datalad.utils.on_windows",
    "len",
    "list",
    "ok_generator",
    "ok_startswith",
    "os.path.basename",
    "os.path.dirname",
    "os.path.join",
    "os.path.normpath",
    "os.path.pardir"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_find_files_exclude_vcs": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "assert_equal",
    "assert_in",
    "assert_not_in",
    "datalad.utils.find_files",
    "list",
    "os.path.basename",
    "os.path.join",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_generate_chunks": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.utils.generate_chunks",
    "eq_",
    "list",
    "ok_generator"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_get_dataset_root": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.test_utils.os",
    "datalad.utils.chpwd",
    "datalad.utils.get_dataset_root",
    "eq_",
    "open",
    "os.path.abspath",
    "os.path.join",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_get_func_kwargs_doc": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "datalad.utils.get_func_kwargs_doc",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_get_func_kwargs_doc.some_func": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_get_local_file_url_windows": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "SkipTest"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_get_open_files": {
  "data": {
   "lineno": 1176,
   "symbols_in_volume": [
    "assert_equal",
    "datalad.tests.test_utils.os",
    "datalad.tests.test_utils.sys",
    "datalad.utils.Path",
    "datalad.utils.assure_unicode",
    "datalad.utils.get_open_files",
    "datalad.utils.on_windows",
    "eq_",
    "f",
    "skip_if_no_module",
    "str",
    "subprocess.PIPE",
    "subprocess.Popen",
    "time.time",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_get_timestamp_suffix": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": [
    "assert_equal",
    "datalad.utils.get_timestamp_suffix",
    "datalad.utils.on_windows",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_get_trace": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "datalad.utils.get_trace",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_getpwd_basic": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "assert_false",
    "datalad.tests.test_utils.os",
    "datalad.utils.chpwd",
    "datalad.utils.getpwd",
    "eq_",
    "ok_",
    "os.path.abspath",
    "os.path.isabs",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_getpwd_change_mode": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "SkipTest",
    "assert_cwd_unchanged",
    "assert_in",
    "datalad.tests.test_utils.logging",
    "datalad.tests.test_utils.os",
    "datalad.utils.Path",
    "datalad.utils._pwd_mode",
    "datalad.utils.getpwd",
    "datalad.utils.swallow_logs",
    "eq_",
    "str",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_getpwd_symlink": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "OSError",
    "assert_cwd_unchanged",
    "assert_false",
    "assert_raises",
    "datalad.utils.Path",
    "datalad.utils.chpwd",
    "datalad.utils.getpwd",
    "eq_",
    "ok_",
    "os.path.exists",
    "os.path.join",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_import_module_from_file": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "AssertionError",
    "assert_in",
    "assert_raises",
    "datalad.tests.test_utils._get_testm_tree",
    "datalad.tests.test_utils.dltestm2",
    "datalad.tests.test_utils.sys",
    "datalad.utils.import_module_from_file",
    "eq_",
    "os.path.join",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_import_modules": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "datalad.tests.test_utils._get_testm_tree",
    "datalad.tests.test_utils.sys",
    "datalad.utils.import_modules",
    "eq_",
    "len",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_import_modules_fail": {
  "data": {
   "lineno": 1130,
   "symbols_in_volume": [
    "datalad.utils.import_modules",
    "eq_",
    "len",
    "ok_startswith"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_is_explicit_path": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "assert_false",
    "assert_true",
    "datalad.utils.expandpath",
    "datalad.utils.is_explicit_path"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_is_interactive": {
  "data": {
   "lineno": 1286,
   "symbols_in_volume": [
    "eq_",
    "get_interactive",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_is_interactive.get_interactive": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "Runner",
    "assert_in",
    "bool",
    "datalad.tests.test_utils.sys",
    "f",
    "f.read",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_known_failure": {
  "data": {
   "lineno": 980,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.cfg.obtain",
    "failing"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_known_failure.failing": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_known_failure_direct_mode": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "AssertionError",
    "assert_in",
    "assert_raises",
    "datalad.tests.test_utils.logging",
    "datalad.utils.swallow_logs",
    "eq_",
    "failing"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_known_failure_direct_mode.failing": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_known_failure_v6": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.cfg.obtain",
    "failing"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_known_failure_v6.failing": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_knows_annex": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "assert_false",
    "assert_true",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.support.gitrepo.GitRepo.clone",
    "datalad.utils.knows_annex",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_line_profile": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "assert_equal",
    "assert_in",
    "datalad.utils.swallow_outputs",
    "f",
    "skip_if_no_module"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_line_profile.f": {
  "data": {
   "lineno": 1142,
   "symbols_in_volume": [
    "datalad.utils.line_profile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_make_tempfile": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "datalad.utils.make_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_map_items": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "Custom",
    "datalad.utils.map_items",
    "eq_",
    "type"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_map_items.Custom": {
  "data": {
   "lineno": 1225,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_utils.test_map_items.Custom.__init__": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_map_items.Custom.items": {
  "data": {
   "lineno": 1230
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_map_items.add10": {
  "data": {
   "lineno": 1221
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_md5sum": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "datalad.utils.md5sum"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_md5sum_archive": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "datalad.utils.md5sum",
    "os.path.join",
    "with_tree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_memoized_generator": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "eq_",
    "g1",
    "list",
    "ok_generator",
    "saved_generator"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_memoized_generator.g1": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_never_fail": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "eq_",
    "iamok",
    "ifail",
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_never_fail.iamok": {
  "data": {
   "lineno": 1266,
   "symbols_in_volume": [
    "datalad.utils.never_fail"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_never_fail.ifail": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "ValueError",
    "datalad.utils.never_fail"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_never_fail.ifail2": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "ValueError",
    "datalad.utils.never_fail"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_not_supported_on_windows": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "NotImplementedError",
    "assert_equal",
    "assert_raises",
    "datalad.utils.not_supported_on_windows",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_partition": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "eq_",
    "fn"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_partition.fn": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "datalad.utils.partition",
    "list"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_path_": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "datalad.utils._path_",
    "datalad.utils.on_windows",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_path_is_subpath": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "datalad.utils.path_is_subpath",
    "nok_",
    "ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_path_prefix": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "datalad.utils.chpwd",
    "datalad.utils.get_path_prefix",
    "eq_",
    "os.path.join",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_path_startswith": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "ValueError",
    "assert_raises",
    "datalad.utils.path_startswith",
    "nok_",
    "ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_pathlib_unicode": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "datalad.utils.Path",
    "eq_",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_probe_known_failure": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.cfg.obtain",
    "failing",
    "not_failing"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_probe_known_failure.failing": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_probe_known_failure.not_failing": {
  "data": {
   "lineno": 919
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_read_csv_lines_basic": {
  "data": {
   "lineno": 1045,
   "symbols_in_volume": [
    "datalad.utils.read_csv_lines",
    "eq_",
    "list",
    "ok_generator",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_read_csv_lines_one_column": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "datalad.utils.read_csv_lines",
    "eq_",
    "list",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_read_csv_lines_tsv_unicode": {
  "data": {
   "lineno": 1059,
   "symbols_in_volume": [
    "datalad.utils.read_csv_lines",
    "eq_",
    "list",
    "ok_generator",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_rotree": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "OSError",
    "assert_raises",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.tests.test_utils.os",
    "datalad.tests.test_utils.shutil",
    "datalad.utils.rotree",
    "datalad.utils.swallow_logs",
    "datalad.utils.unlink",
    "eq_",
    "open",
    "os.path.join",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_safe_print": {
  "data": {
   "lineno": 896,
   "symbols_in_volume": [
    "assert_equal",
    "datalad.tests.test_utils.builtins",
    "datalad.utils.safe_print",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_safe_print._print": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "UnicodeEncodeError",
    "assert_equal"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_setup_exceptionhook": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "datalad.tests.test_utils._check_setup_exceptionhook"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_skip_if": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "AssertionError",
    "SkipTest",
    "assert_raises",
    "skip_if"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_skip_if.dummy": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_skip_known_failure": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.cfg.obtain",
    "failing"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_skip_known_failure.failing": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_swallow_logs": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "datalad.tests.test_utils.logging",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.utils.swallow_logs",
    "eq_",
    "with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_swallow_logs_assert": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "AssertionError",
    "assert_raises",
    "datalad.tests.test_utils.logging",
    "datalad.utils.swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_swallow_outputs": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "datalad.tests.test_utils.sys",
    "datalad.utils.swallow_outputs",
    "eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_unique": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "datalad.utils.unique",
    "eq_",
    "operator.itemgetter",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.test_updated": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datalad.utils.updated",
    "eq_",
    "isinstance",
    "ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils.time": {
  "data": {
   "shadows": "time.time"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.unique": {
  "data": {
   "shadows": "datalad.utils.unique"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.unlink": {
  "data": {
   "shadows": "datalad.utils.unlink"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.updated": {
  "data": {
   "shadows": "datalad.utils.updated"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.utils": {
  "data": {
   "shadows": "datalad.utils"
  },
  "type": "import"
 },
 "datalad.tests.test_utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_utils_cached_dataset.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.CACHE_PATCH_STR": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.tests.test_utils_cached_dataset.CLONE_PATCH_STR": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "datalad.tests.test_utils_cached_dataset.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.GitRepo": {
  "data": {
   "shadows": "datalad.support.gitrepo.GitRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.assert_false": {
  "data": {
   "shadows": "datalad.tests.utils.assert_false"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.assert_is": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.assert_is_instance": {
  "data": {
   "shadows": "datalad.tests.utils.assert_is_instance"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.assert_not_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.assert_result_count": {
  "data": {
   "shadows": "datalad.tests.utils.assert_result_count"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.assert_true": {
  "data": {
   "shadows": "datalad.tests.utils.assert_true"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.cached_dataset": {
  "data": {
   "shadows": "datalad.tests.utils_cached_dataset.cached_dataset"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.cached_url": {
  "data": {
   "shadows": "datalad.tests.utils_cached_dataset.cached_url"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.ensure_list": {
  "data": {
   "shadows": "datalad.utils.ensure_list"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.get_cached_dataset": {
  "data": {
   "shadows": "datalad.tests.utils_cached_dataset.get_cached_dataset"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.opj": {
  "data": {
   "shadows": "datalad.utils.opj"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.skip_if_no_network": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_no_network"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.test_cached_dataset": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "datalad.tests.test_utils_cached_dataset.CACHE_PATCH_STR",
    "datalad.tests.utils.assert_not_equal",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils_cached_dataset.url2filename",
    "datalad.utils.Path",
    "decorated_test1",
    "decorated_test2",
    "decorated_test3",
    "decorated_test4",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_cached_dataset.test_cached_dataset.decorated_test1": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils_cached_dataset.cached_dataset",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_cached_dataset.test_cached_dataset.decorated_test2": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils_cached_dataset.cached_dataset",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_cached_dataset.test_cached_dataset.decorated_test3": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils_cached_dataset.cached_dataset",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_cached_dataset.test_cached_dataset.decorated_test4": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_not_in",
    "datalad.tests.utils.assert_result_count",
    "datalad.tests.utils_cached_dataset.cached_dataset",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_cached_dataset.test_cached_url": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "datalad.tests.test_utils_cached_dataset.CACHE_PATCH_STR",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils_cached_dataset.url2filename",
    "datalad.utils.Path",
    "decorated_test1",
    "decorated_test2",
    "decorated_test3",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_cached_dataset.test_cached_url.decorated_test1": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils_cached_dataset.cached_url",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_cached_dataset.test_cached_url.decorated_test2": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "datalad.distribution.dataset.Dataset",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils_cached_dataset.cached_url",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_cached_dataset.test_cached_url.decorated_test3": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils_cached_dataset.cached_url"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_cached_dataset.test_get_cached_dataset": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "AssertionError",
    "all",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo",
    "datalad.support.annexrepo.AnnexRepo.is_valid_repo",
    "datalad.support.gitrepo.GitRepo",
    "datalad.tests.test_utils_cached_dataset.CACHE_PATCH_STR",
    "datalad.tests.test_utils_cached_dataset.CLONE_PATCH_STR",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_false",
    "datalad.tests.utils.assert_is",
    "datalad.tests.utils.assert_is_instance",
    "datalad.tests.utils.assert_true",
    "datalad.tests.utils.skip_if_no_network",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils_cached_dataset.get_cached_dataset",
    "datalad.tests.utils_cached_dataset.url2filename",
    "datalad.utils.Path",
    "datalad.utils.ensure_list",
    "datalad.utils.opj",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_cached_dataset.url2filename": {
  "data": {
   "shadows": "datalad.tests.utils_cached_dataset.url2filename"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_cached_dataset.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_testrepos": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_utils_testrepos.BasicAnnexTestRepo": {
  "data": {
   "shadows": "datalad.tests.utils_testrepos.BasicAnnexTestRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_testrepos.BasicGitTestRepo": {
  "data": {
   "shadows": "datalad.tests.utils_testrepos.BasicGitTestRepo"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_testrepos._test_BasicAnnexTestRepo": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.swallow_outputs",
    "datalad.tests.utils_testrepos.BasicAnnexTestRepo"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_testrepos.assert_repo_status": {
  "data": {
   "shadows": "datalad.tests.utils.assert_repo_status"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_testrepos.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_testrepos.ok_file_under_git": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_under_git"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_testrepos.skip_if_on_windows": {
  "data": {
   "shadows": "datalad.tests.utils.skip_if_on_windows"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_testrepos.swallow_outputs": {
  "data": {
   "shadows": "datalad.tests.utils.swallow_outputs"
  },
  "type": "import"
 },
 "datalad.tests.test_utils_testrepos.test_BasicAnnexTestRepo": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "datalad.tests.test_utils_testrepos._test_BasicAnnexTestRepo",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_testrepos.test_BasicAnnexTestRepo_random_location_generated": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "datalad.tests.test_utils_testrepos._test_BasicAnnexTestRepo",
    "datalad.tests.utils.skip_if_on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_testrepos.test_BasicGitTestRepo": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "datalad.tests.utils.assert_repo_status",
    "datalad.tests.utils.ok_file_under_git",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils_testrepos.BasicGitTestRepo"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_utils_testrepos.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.test_version": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_version.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "datalad.tests.test_version.SkipTest": {
  "data": {
   "shadows": "datalad.tests.utils.SkipTest"
  },
  "type": "import"
 },
 "datalad.tests.test_version.assert_equal": {
  "data": {
   "shadows": "datalad.tests.utils.assert_equal"
  },
  "type": "import"
 },
 "datalad.tests.test_version.assert_greater": {
  "data": {
   "shadows": "datalad.tests.utils.assert_greater"
  },
  "type": "import"
 },
 "datalad.tests.test_version.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_version.assert_not_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_not_in"
  },
  "type": "import"
 },
 "datalad.tests.test_version.assure_unicode": {
  "data": {
   "shadows": "datalad.utils.assure_unicode"
  },
  "type": "import"
 },
 "datalad.tests.test_version.op": {
  "data": {
   "shadows": "datalad.support.path"
  },
  "type": "import"
 },
 "datalad.tests.test_version.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "datalad.tests.test_version.test__version__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "AssertionError",
    "datalad.support.path.dirname",
    "datalad.support.path.exists",
    "datalad.support.path.join",
    "datalad.support.path.pardir",
    "datalad.tests.test_version.re",
    "datalad.tests.utils.SkipTest",
    "datalad.tests.utils.assert_equal",
    "datalad.tests.utils.assert_greater",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.assert_not_in",
    "datalad.utils.assure_unicode",
    "distutils.version.LooseVersion",
    "open"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_witless_runner": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.test_witless_runner.CommandError": {
  "data": {
   "shadows": "datalad.support.exceptions.CommandError"
  },
  "type": "import"
 },
 "datalad.tests.test_witless_runner.OBSCURE_FILENAME": {
  "data": {
   "shadows": "datalad.tests.utils.OBSCURE_FILENAME"
  },
  "type": "import"
 },
 "datalad.tests.test_witless_runner.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.tests.test_witless_runner.Runner": {
  "data": {
   "shadows": "datalad.cmd.WitlessRunner"
  },
  "type": "import"
 },
 "datalad.tests.test_witless_runner.StdOutCapture": {
  "data": {
   "shadows": "datalad.cmd.StdOutCapture"
  },
  "type": "import"
 },
 "datalad.tests.test_witless_runner.StdOutErrCapture": {
  "data": {
   "shadows": "datalad.cmd.StdOutErrCapture"
  },
  "type": "import"
 },
 "datalad.tests.test_witless_runner.assert_cwd_unchanged": {
  "data": {
   "shadows": "datalad.tests.utils.assert_cwd_unchanged"
  },
  "type": "import"
 },
 "datalad.tests.test_witless_runner.assert_in": {
  "data": {
   "shadows": "datalad.tests.utils.assert_in"
  },
  "type": "import"
 },
 "datalad.tests.test_witless_runner.assert_raises": {
  "data": {
   "shadows": "datalad.tests.utils.assert_raises"
  },
  "type": "import"
 },
 "datalad.tests.test_witless_runner.eq_": {
  "data": {
   "shadows": "datalad.tests.utils.eq_"
  },
  "type": "import"
 },
 "datalad.tests.test_witless_runner.ok_": {
  "data": {
   "shadows": "datalad.tests.utils.ok_"
  },
  "type": "import"
 },
 "datalad.tests.test_witless_runner.ok_file_has_content": {
  "data": {
   "shadows": "datalad.tests.utils.ok_file_has_content"
  },
  "type": "import"
 },
 "datalad.tests.test_witless_runner.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.test_witless_runner.py2cmd": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "datalad.tests.test_witless_runner.sys"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_witless_runner.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.tests.test_witless_runner.test_runner": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "datalad.cmd.WitlessRunner",
    "datalad.tests.test_witless_runner.os",
    "datalad.tests.utils.assert_cwd_unchanged",
    "datalad.tests.utils.ok_",
    "datalad.tests.utils.ok_file_has_content",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_witless_runner.test_runner_cwd_encoding": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "datalad.cmd.WitlessRunner",
    "datalad.tests.test_witless_runner.os",
    "datalad.tests.test_witless_runner.py2cmd",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_witless_runner.test_runner_failure": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "datalad.cmd.WitlessRunner",
    "datalad.support.exceptions.CommandError",
    "datalad.tests.test_witless_runner.py2cmd",
    "datalad.tests.utils.assert_raises",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_witless_runner.test_runner_fix_PWD": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "datalad.cmd.StdOutCapture",
    "datalad.cmd.WitlessRunner",
    "datalad.tests.test_witless_runner.os",
    "datalad.tests.test_witless_runner.py2cmd",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.with_tempfile"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_witless_runner.test_runner_parametrized_protocol": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "datalad.cmd.WitlessRunner",
    "datalad.tests.test_witless_runner.py2cmd",
    "datalad.tests.utils.eq_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_witless_runner.test_runner_parametrized_protocol.ProtocolInt": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "datalad.cmd.StdOutCapture"
   ]
  },
  "type": "class"
 },
 "datalad.tests.test_witless_runner.test_runner_parametrized_protocol.ProtocolInt.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_witless_runner.test_runner_parametrized_protocol.ProtocolInt.pipe_data_received": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_witless_runner.test_runner_stderr_capture": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "datalad.cmd.StdOutErrCapture",
    "datalad.cmd.WitlessRunner",
    "datalad.tests.test_witless_runner.py2cmd",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_witless_runner.test_runner_stdin": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "datalad.cmd.StdOutCapture",
    "datalad.cmd.WitlessRunner",
    "datalad.tests.test_witless_runner.py2cmd",
    "datalad.tests.utils.OBSCURE_FILENAME",
    "datalad.tests.utils.assert_in",
    "datalad.tests.utils.with_tempfile",
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_witless_runner.test_runner_stdout_capture": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "datalad.cmd.StdOutErrCapture",
    "datalad.cmd.WitlessRunner",
    "datalad.tests.test_witless_runner.py2cmd",
    "datalad.tests.utils.eq_",
    "datalad.tests.utils.ok_"
   ]
  },
  "type": "function"
 },
 "datalad.tests.test_witless_runner.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.utils_cached_dataset": {
  "data": {
   "symbols_in_volume": [
    "datalad.cfg.obtain"
   ]
  },
  "type": "module"
 },
 "datalad.tests.utils_cached_dataset.AnnexRepo": {
  "data": {
   "shadows": "datalad.support.annexrepo.AnnexRepo"
  },
  "type": "import"
 },
 "datalad.tests.utils_cached_dataset.Clone": {
  "data": {
   "shadows": "datalad.core.distributed.clone.Clone"
  },
  "type": "import"
 },
 "datalad.tests.utils_cached_dataset.DATALAD_TESTS_CACHE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "datalad.tests.utils_cached_dataset.Dataset": {
  "data": {
   "shadows": "datalad.distribution.dataset.Dataset"
  },
  "type": "import"
 },
 "datalad.tests.utils_cached_dataset.Path": {
  "data": {
   "shadows": "datalad.utils.Path"
  },
  "type": "import"
 },
 "datalad.tests.utils_cached_dataset.better_wraps": {
  "data": {
   "shadows": "datalad.utils.better_wraps"
  },
  "type": "import"
 },
 "datalad.tests.utils_cached_dataset.cached_dataset": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "datalad.utils.optional_args"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_cached_dataset.cached_dataset._wrap_cached_dataset": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "datalad.core.distributed.clone.Clone",
    "datalad.support.annexrepo.AnnexRepo.is_valid_repo",
    "datalad.tests.utils.with_tempfile",
    "datalad.tests.utils_cached_dataset.DATALAD_TESTS_CACHE",
    "datalad.tests.utils_cached_dataset.get_cached_dataset",
    "datalad.utils.better_wraps",
    "f"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_cached_dataset.cached_url": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "datalad.utils.optional_args"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_cached_dataset.cached_url._wrap_cached_url": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "datalad.tests.utils_cached_dataset.DATALAD_TESTS_CACHE",
    "datalad.tests.utils_cached_dataset.get_cached_dataset",
    "datalad.utils.better_wraps",
    "f"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_cached_dataset.cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.tests.utils_cached_dataset.ensure_list": {
  "data": {
   "shadows": "datalad.utils.ensure_list"
  },
  "type": "import"
 },
 "datalad.tests.utils_cached_dataset.get_cached_dataset": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "datalad.core.distributed.clone.Clone",
    "datalad.distribution.dataset.Dataset",
    "datalad.support.annexrepo.AnnexRepo.is_valid_repo",
    "datalad.tests.utils_cached_dataset.DATALAD_TESTS_CACHE",
    "datalad.tests.utils_cached_dataset.url2filename",
    "datalad.utils.rmtree"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_cached_dataset.optional_args": {
  "data": {
   "shadows": "datalad.utils.optional_args"
  },
  "type": "import"
 },
 "datalad.tests.utils_cached_dataset.rmtree": {
  "data": {
   "shadows": "datalad.utils.rmtree"
  },
  "type": "import"
 },
 "datalad.tests.utils_cached_dataset.url2filename": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "datalad.utils.Path"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_cached_dataset.with_tempfile": {
  "data": {
   "shadows": "datalad.tests.utils.with_tempfile"
  },
  "type": "import"
 },
 "datalad.tests.utils_testdatasets": {
  "data": {},
  "type": "module"
 },
 "datalad.tests.utils_testdatasets.create": {
  "data": {
   "shadows": "datalad.api.create"
  },
  "type": "import"
 },
 "datalad.tests.utils_testdatasets.create_tree": {
  "data": {
   "shadows": "datalad.tests.utils.create_tree"
  },
  "type": "import"
 },
 "datalad.tests.utils_testdatasets.make_studyforrest_mockup": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "datalad.api.create",
    "datalad.tests.utils.create_tree",
    "os.path.join",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testdatasets.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos": {
  "data": {
   "symbols_in_volume": [
    "datalad.cfg.get",
    "datalad.tests.utils_testrepos.os",
    "datalad.tests.utils_testrepos.tempfile",
    "get_tempfile_kwargs",
    "open"
   ]
  },
  "type": "module"
 },
 "datalad.tests.utils_testrepos.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.BasicAnnexTestRepo": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "datalad.tests.utils_testrepos.TestRepo"
   ]
  },
  "type": "class"
 },
 "datalad.tests.utils_testrepos.BasicAnnexTestRepo.create_info_file": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.BasicAnnexTestRepo.populate": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "get_local_file_url"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.BasicGitTestRepo": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "datalad.tests.utils_testrepos.TestRepo"
   ]
  },
  "type": "class"
 },
 "datalad.tests.utils_testrepos.BasicGitTestRepo.create_info_file": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.BasicGitTestRepo.populate": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.InnerSubmodule": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.tests.utils_testrepos.InnerSubmodule.__init__": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "datalad.tests.utils_testrepos.NestedDataset"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.InnerSubmodule.create": {
  "data": {
   "lineno": 215
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.InnerSubmodule.path": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "os.path.join",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.InnerSubmodule.url": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "get_local_file_url",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.NestedDataset": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "datalad.tests.utils_testrepos.BasicAnnexTestRepo"
   ]
  },
  "type": "class"
 },
 "datalad.tests.utils_testrepos.NestedDataset.populate": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "AnnexRepo",
    "GitRepo",
    "datalad.tests.utils_testrepos.NestedDataset",
    "datalad.tests.utils_testrepos.SubmoduleDataset",
    "dict",
    "os.path.join",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.SubmoduleDataset": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "datalad.tests.utils_testrepos.BasicAnnexTestRepo"
   ]
  },
  "type": "class"
 },
 "datalad.tests.utils_testrepos.SubmoduleDataset.populate": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "AnnexRepo",
    "datalad.tests.utils_testrepos.BasicAnnexTestRepo",
    "datalad.tests.utils_testrepos.SubmoduleDataset",
    "dict",
    "os.path.join",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.TestRepo": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.tests.utils_testrepos.TestRepo.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "RuntimeError",
    "datalad.cfg.get",
    "datalad.customremotes.base.init_datalad_remote",
    "datalad.tests.utils_testrepos.os",
    "datalad.tests.utils_testrepos.tempfile",
    "get_tempfile_kwargs",
    "os.path.exists",
    "swallow_logs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.TestRepo.create": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "os.path.exists",
    "swallow_outputs"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.TestRepo.create_file": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "open",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.TestRepo.path": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.TestRepo.populate": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.TestRepo.url": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "get_local_file_url",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.tests.utils_testrepos.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.dl_cfg": {
  "data": {
   "shadows": "datalad.cfg"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.exists": {
  "data": {
   "shadows": "os.path.exists"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.init_datalad_remote": {
  "data": {
   "shadows": "datalad.customremotes.base.init_datalad_remote"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.tests.utils_testrepos.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "datalad.ui": {
  "data": {
   "symbols_in_volume": [
    "datalad.ui._UI_Switcher",
    "datalad.ui.lgr",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.ui.KNOWN_BACKENDS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "datalad.ui._UI_Switcher": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.ui._UI_Switcher.__getattribute__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "datalad.ui._UI_Switcher",
    "getattr",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui._UI_Switcher.__init__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "datalad.ui._UI_Switcher.__setattr__": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "datalad.ui._UI_Switcher",
    "setattr",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui._UI_Switcher.backend": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.ui._UI_Switcher.set_backend": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "datalad.ui.KNOWN_BACKENDS",
    "datalad.ui.lgr",
    "get_ipython_shell",
    "is_interactive"
   ]
  },
  "type": "function"
 },
 "datalad.ui._UI_Switcher.ui": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.ui.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.ui.base": {
  "data": {},
  "type": "module"
 },
 "datalad.ui.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "datalad.ui.base.InteractiveUI": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.ui.base.InteractiveUI.question": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "datalad.ui.base.InteractiveUI.yesno": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "datalad.ui.base.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.ui.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "datalad.ui.dialog": {
  "data": {
   "symbols_in_volume": [
    "datalad.ui.dialog.lgr",
    "logging.getLogger"
   ]
  },
  "type": "module"
 },
 "datalad.ui.dialog.ConsoleLog": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.ui.dialog.ConsoleLog.__init__": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "datalad.ui.dialog.sys"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.ConsoleLog.error": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "datalad.ui.dialog.ConsoleLog.get_progressbar": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "KeyError",
    "datalad.ui.dialog.ConsoleLog",
    "pbar"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.ConsoleLog.is_interactive": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "isinstance",
    "property"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.ConsoleLog.message": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "datalad.log.log_progress",
    "datalad.ui.dialog.lgr"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.DialogUI": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "datalad.ui.dialog.ConsoleLog"
   ]
  },
  "type": "class"
 },
 "datalad.ui.dialog.DialogUI.__init__": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "datalad.ui.dialog.DialogUI",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.DialogUI.input": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "datalad.ui.dialog.getpass",
    "datalad.ui.dialog.getpass_echo"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.DialogUI.question": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "RuntimeError",
    "ValueError",
    "datalad.ui.dialog._get_value",
    "datalad.ui.dialog.os",
    "datalad.ui.dialog.time",
    "map"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.DialogUI.question.mark_default": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "datalad.ui.dialog.IPythonUI": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "datalad.ui.dialog.DialogUI"
   ]
  },
  "type": "class"
 },
 "datalad.ui.dialog.IPythonUI.get_progressbar": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "Exception",
    "datalad.ui.dialog.IPythonUI",
    "datalad.ui.dialog.lgr",
    "exc_str",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.IPythonUI.input": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "datalad.ui.dialog.getpass",
    "input"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.QuietConsoleLog": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "datalad.ui.dialog.ConsoleLog"
   ]
  },
  "type": "class"
 },
 "datalad.ui.dialog.QuietConsoleLog.get_progressbar": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "LogProgressBar"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.SilentConsoleLog": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "datalad.ui.dialog.ConsoleLog"
   ]
  },
  "type": "class"
 },
 "datalad.ui.dialog.SilentConsoleLog.get_progressbar": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "SilentProgressBar"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.SilentConsoleLog.question": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderAnnexUI": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "datalad.ui.dialog.DialogUI"
   ]
  },
  "type": "class"
 },
 "datalad.ui.dialog.UnderAnnexUI.__init__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "datalad.ui.dialog.UnderAnnexUI",
    "datalad.ui.dialog.sys",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderAnnexUI.get_progressbar": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "datalad.ui.dialog.UnderAnnexUI",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderAnnexUI.set_specialremote": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderTestsUI": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "datalad.ui.dialog.DialogUI"
   ]
  },
  "type": "class"
 },
 "datalad.ui.dialog.UnderTestsUI.__enter__": {
  "data": {
   "lineno": 387
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderTestsUI.__exit__": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "copy.copy",
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderTestsUI.__init__": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "collections.deque",
    "datalad.ui.dialog.UnderTestsUI",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderTestsUI.add_responses": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderTestsUI.clear_responses": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderTestsUI.get_responses": {
  "data": {
   "lineno": 372
  },
  "type": "function"
 },
 "datalad.ui.dialog.UnderTestsUI.question": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.ui.dialog._get_value": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "datalad.ui.dialog.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "datalad.ui.dialog.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "datalad.ui.dialog.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.ui.dialog.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "datalad.ui.dialog.getpass_echo": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "datalad.ui.dialog.getpass",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.ui.dialog.lgr": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datalad.ui.dialog.log_progress": {
  "data": {
   "shadows": "datalad.log.log_progress"
  },
  "type": "import"
 },
 "datalad.ui.dialog.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "datalad.ui.dialog.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.ui.dialog.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.ui.dialog.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.ui.dialog.tqdm_notebook": {
  "data": {
   "shadows": "tqdm.tqdm_notebook"
  },
  "type": "import"
 },
 "datalad.ui.getLogger": {
  "data": {
   "shadows": "logging.getLogger"
  },
  "type": "import"
 },
 "datalad.ui.lgr": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "datalad.ui.progressbars": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "datalad.ui.progressbars.AnnexSpecialRemoteProgressBar",
    "datalad.ui.progressbars.LogProgressBar",
    "datalad.ui.progressbars.SilentProgressBar",
    "datalad.ui.progressbars.progressbars",
    "datalad.ui.progressbars.tqdmProgressBar",
    "len"
   ]
  },
  "type": "module"
 },
 "datalad.ui.progressbars.AnnexSpecialRemoteProgressBar": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "datalad.ui.progressbars.ProgressBarBase"
   ]
  },
  "type": "class"
 },
 "datalad.ui.progressbars.AnnexSpecialRemoteProgressBar.__init__": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "datalad.ui.progressbars.AnnexSpecialRemoteProgressBar",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.AnnexSpecialRemoteProgressBar.update": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "datalad.ui.progressbars.AnnexSpecialRemoteProgressBar",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.LogProgressBar": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "datalad.ui.progressbars.ProgressBarBase"
   ]
  },
  "type": "class"
 },
 "datalad.ui.progressbars.LogProgressBar.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "datalad.ui.progressbars.LogProgressBar",
    "datalad.ui.progressbars.time",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.LogProgressBar._naturaldelta": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "datalad.ui.progressbars.LogProgressBar",
    "datalad.ui.progressbars.humanize",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.LogProgressBar._naturalfloat": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "abs",
    "int",
    "round",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.LogProgressBar._naturalsize": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "datalad.ui.progressbars.humanize"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.LogProgressBar.finish": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "datalad.ui.progressbars.time",
    "float"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.ui.progressbars.ProgressBarBase.__init__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase.clear": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase.current": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase.finish": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase.refresh": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase.set_desc": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase.start": {
  "data": {
   "lineno": 60
  },
  "type": "function"
 },
 "datalad.ui.progressbars.ProgressBarBase.update": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "datalad.ui.progressbars.SilentProgressBar": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "datalad.ui.progressbars.ProgressBarBase"
   ]
  },
  "type": "class"
 },
 "datalad.ui.progressbars.SilentProgressBar.__init__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "datalad.ui.progressbars.SilentProgressBar",
    "datalad.ui.progressbars.sys",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.external_versions": {
  "data": {
   "shadows": "datalad.support.external_versions.external_versions"
  },
  "type": "import"
 },
 "datalad.ui.progressbars.humanize": {
  "data": {
   "shadows": "humanize"
  },
  "type": "import"
 },
 "datalad.ui.progressbars.progressbars": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "datalad.ui.progressbars.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.ui.progressbars.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "datalad.ui.progressbars.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "datalad.ui.progressbars.tqdmProgressBar": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "datalad.support.external_versions.external_versions",
    "datalad.ui.progressbars.ProgressBarBase",
    "dict",
    "tqdm.tqdm"
   ]
  },
  "type": "class"
 },
 "datalad.ui.progressbars.tqdmProgressBar.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "ValueError",
    "datalad.ui.progressbars.sys",
    "datalad.ui.progressbars.tqdmProgressBar",
    "datalad.utils.updated",
    "dict",
    "map",
    "str",
    "super",
    "tqdm.tqdm_notebook"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar._create": {
  "data": {
   "lineno": 263
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar._reset_kludge": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar.clear": {
  "data": {
   "lineno": 356
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar.finish": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "Exception",
    "datalad.ui.progressbars.tqdmProgressBar",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar.refresh": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "datalad.ui.progressbars.tqdmProgressBar",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar.set_desc": {
  "data": {
   "lineno": 364
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar.start": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "datalad.ui.progressbars.tqdmProgressBar",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdmProgressBar.update": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "datalad.ui.progressbars.tqdmProgressBar",
    "super"
   ]
  },
  "type": "function"
 },
 "datalad.ui.progressbars.tqdm_notebook": {
  "data": {
   "shadows": "tqdm.tqdm_notebook"
  },
  "type": "import"
 },
 "datalad.ui.progressbars.updated": {
  "data": {
   "shadows": "datalad.utils.updated"
  },
  "type": "import"
 },
 "datalad.ui.tests": {
  "data": {},
  "type": "module"
 },
 "datalad.ui.tests.__docformat__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "datalad.ui.tests.test_base": {
  "data": {},
  "type": "module"
 },
 "datalad.ui.tests.test_base.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.ui.tests.test_base.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_base.test_tests_ui": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "AssertionError",
    "_UI_Switcher",
    "assert_equal",
    "assert_false",
    "assert_raises",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_base.test_ui_switcher": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "AttributeError",
    "ZMQInteractiveShell",
    "_UI_Switcher",
    "assert_equal",
    "assert_not_equal",
    "assert_raises",
    "isinstance",
    "str",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_base.test_ui_switcher.ZMQInteractiveShell": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "datalad.ui.tests.test_base.test_with_testsui": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "AssertionError",
    "ask",
    "assert_raises",
    "nothing"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_base.test_with_testsui.ask": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "assert_equal",
    "datalad.ui.ui.question",
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_base.test_with_testsui.nothing": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "assert_equal",
    "with_testsui"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_base.ui": {
  "data": {
   "shadows": "datalad.ui.ui"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_dialog": {
  "data": {},
  "type": "module"
 },
 "datalad.ui.tests.test_dialog.LoggerHelper": {
  "data": {
   "shadows": "datalad.log.LoggerHelper"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_dialog.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_dialog.__docformat__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "datalad.ui.tests.test_dialog._test_progress_bar": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "DialogUI",
    "assert_in",
    "assert_re_in",
    "io.StringIO",
    "len",
    "ok_endswith",
    "ok_startswith",
    "range"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_dialog.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_dialog.call": {
  "data": {
   "shadows": "unittest.mock.call"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_dialog.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_dialog.patch_getpass": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_dialog.patch_input": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "datalad.ui.tests.test_dialog.builtins",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_dialog.progressbars": {
  "data": {
   "shadows": "datalad.ui.progressbars.progressbars"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_dialog.swallow_logs": {
  "data": {
   "shadows": "datalad.utils.swallow_logs"
  },
  "type": "import"
 },
 "datalad.ui.tests.test_dialog.test_IPythonUI": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "IPythonUI",
    "assert_in",
    "datalad.ui.tests.test_dialog.patch_input",
    "eq_",
    "io.StringIO",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_dialog.test_hidden_doubleentry": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "DialogUI",
    "datalad.ui.tests.test_dialog.patch_getpass",
    "eq_",
    "io.StringIO",
    "unittest.mock.call"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_dialog.test_message_pbar_state_logging_is_demoted": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "ConsoleLog",
    "assert_in",
    "assert_not_in",
    "datalad.log.LoggerHelper",
    "datalad.utils.swallow_logs",
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_dialog.test_progress_bar": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "datalad.ui.progressbars.progressbars",
    "datalad.ui.tests.test_dialog._test_progress_bar"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_dialog.test_question_choices": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "DialogUI",
    "RuntimeError",
    "ValueError",
    "assert_raises",
    "assert_re_in",
    "datalad.ui.tests.test_dialog.patch_getpass",
    "eq_",
    "io.StringIO",
    "sorted"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_dialog.test_silent_question": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "RuntimeError",
    "SilentConsoleLog",
    "assert_in",
    "assert_not_in",
    "assert_raises",
    "str"
   ]
  },
  "type": "function"
 },
 "datalad.ui.tests.test_dialog.test_yesno": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "DialogUI",
    "datalad.ui.tests.test_dialog.patch_getpass",
    "eq_",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "datalad.ui.ui": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "datalad.ui.utils": {
  "data": {},
  "type": "module"
 },
 "datalad.ui.utils.create_string_buffer": {
  "data": {
   "shadows": "ctypes.create_string_buffer"
  },
  "type": "import"
 },
 "datalad.ui.utils.fcntl": {
  "data": {
   "shadows": "fcntl"
  },
  "type": "import"
 },
 "datalad.ui.utils.get_console_width": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "datalad.ui.utils.get_terminal_size"
   ]
  },
  "type": "function"
 },
 "datalad.ui.utils.get_terminal_size": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ctypes.create_string_buffer",
    "ctypes.windll.kernel32.GetConsoleScreenBufferInfo",
    "ctypes.windll.kernel32.GetStdHandle",
    "datalad.ui.utils.fcntl",
    "datalad.ui.utils.struct",
    "datalad.ui.utils.termios",
    "datalad.utils.on_windows"
   ]
  },
  "type": "function"
 },
 "datalad.ui.utils.on_windows": {
  "data": {
   "shadows": "datalad.utils.on_windows"
  },
  "type": "import"
 },
 "datalad.ui.utils.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "datalad.ui.utils.termios": {
  "data": {
   "shadows": "termios"
  },
  "type": "import"
 },
 "datalad.ui.utils.windll": {
  "data": {
   "shadows": "ctypes.windll"
  },
  "type": "import"
 },
 "datalad.version": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "IndexError",
    "OSError",
    "SyntaxError",
    "datalad.version.__full_version__",
    "datalad.version.__version__",
    "datalad.version.git",
    "datalad.version.line",
    "datalad.version.moddir",
    "datalad.version.projdir",
    "os.path.curdir",
    "os.path.dirname",
    "os.path.join",
    "os.path.lexists",
    "subprocess.PIPE",
    "subprocess.Popen"
   ]
  },
  "type": "module"
 },
 "datalad.version.PIPE": {
  "data": {
   "shadows": "subprocess.PIPE"
  },
  "type": "import"
 },
 "datalad.version.Popen": {
  "data": {
   "shadows": "subprocess.Popen"
  },
  "type": "import"
 },
 "datalad.version._": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "datalad.version.__full_version__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "datalad.version.__hardcoded_version__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "datalad.version.__version__": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "datalad.version.curdir": {
  "data": {
   "shadows": "os.path.curdir"
  },
  "type": "import"
 },
 "datalad.version.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "datalad.version.git": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "datalad.version.lexists": {
  "data": {
   "shadows": "os.path.lexists"
  },
  "type": "import"
 },
 "datalad.version.line": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "datalad.version.moddir": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "datalad.version.opj": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "datalad.version.projdir": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "datalad.version.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "datalad.with_testrepos": {
  "data": {
   "shadows": "datalad.tests.utils.with_testrepos"
  },
  "type": "import"
 }
}