{
 "conda_lock": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "conda_lock.pkg_resources"
   ]
  },
  "type": "module"
 },
 "conda_lock.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "conda_lock.__main__": {
  "data": {
   "symbols_in_volume": [
    "main"
   ]
  },
  "type": "module"
 },
 "conda_lock.__version__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "conda_lock.common": {
  "data": {},
  "type": "module"
 },
 "conda_lock.common.get_in": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "conda_lock.common.operator",
    "functools.reduce"
   ]
  },
  "type": "function"
 },
 "conda_lock.common.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "conda_lock.common.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "conda_lock.conda_lock": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "conda_lock.conda_lock.main",
    "conda_lock.conda_lock.pathlib",
    "conda_lock.conda_lock.sys",
    "print",
    "str",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "conda_lock.conda_lock.CONDA_PKGS_DIRS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "conda_lock.conda_lock.DEFAULT_PLATFORMS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "conda_lock.conda_lock.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.LockSpecification": {
  "data": {
   "shadows": "conda_lock.src_parser.LockSpecification"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.MutableSequence": {
  "data": {
   "shadows": "typing.MutableSequence"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.PathLike": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "conda_lock.conda_lock.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "conda_lock.conda_lock._determine_conda_executable": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "bool",
    "conda_lock.conda_lock.ensureconda",
    "conda_lock.conda_lock.pathlib",
    "conda_lock.conda_lock.shutil",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.conda_env_override": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "conda_lock.conda_lock.conda_pkgs_dir",
    "conda_lock.conda_lock.os",
    "dict",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.conda_pkgs_dir": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "conda_lock.conda_lock.CONDA_PKGS_DIRS",
    "conda_lock.conda_lock.atexit",
    "conda_lock.conda_lock.tempfile"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.create_lockfile_from_spec": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "conda_lock.conda_lock.PathLike",
    "conda_lock.conda_lock.fn_to_dist_name",
    "conda_lock.conda_lock.search_for_md5s",
    "conda_lock.conda_lock.solve_specs_for_arch",
    "conda_lock.src_parser.LockSpecification",
    "len",
    "set",
    "str",
    "typing.List",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.determine_conda_executable": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "conda_lock.conda_lock._determine_conda_executable",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.ensureconda": {
  "data": {
   "shadows": "ensureconda"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.fn_to_dist_name": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "RuntimeError",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.main": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "conda_lock.conda_lock.parser",
    "conda_lock.conda_lock.run_lock"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.main_on_docker": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "conda_lock.conda_lock.pathlib",
    "conda_lock.conda_lock.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.make_lock_files": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "bool",
    "conda_lock.conda_lock.PathLike",
    "conda_lock.conda_lock.pathlib",
    "conda_lock.conda_lock.sys",
    "create_lockfile_from_spec",
    "open",
    "parse_source_file",
    "print",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.parse_environment_file": {
  "data": {
   "shadows": "conda_lock.src_parser.environment_yaml.parse_environment_file"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.parse_meta_yaml_file": {
  "data": {
   "shadows": "conda_lock.src_parser.meta_yaml.parse_meta_yaml_file"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.parse_pyproject_toml": {
  "data": {
   "shadows": "conda_lock.src_parser.pyproject_toml.parse_pyproject_toml"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.parse_source_file": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "bool",
    "conda_lock.conda_lock.pathlib",
    "conda_lock.src_parser.LockSpecification",
    "conda_lock.src_parser.environment_yaml.parse_environment_file",
    "conda_lock.src_parser.meta_yaml.parse_meta_yaml_file",
    "conda_lock.src_parser.pyproject_toml.parse_pyproject_toml",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.parser": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "conda_lock.conda_lock.argparse",
    "conda_lock.conda_lock.pathlib"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.run_lock": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "bool",
    "conda_lock.conda_lock.DEFAULT_PLATFORMS",
    "conda_lock.conda_lock.determine_conda_executable",
    "conda_lock.conda_lock.make_lock_files",
    "conda_lock.conda_lock.pathlib",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.search_for_md5s": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "conda_lock.conda_lock.PathLike",
    "conda_lock.conda_lock.conda_env_override",
    "conda_lock.conda_lock.json",
    "conda_lock.conda_lock.subprocess",
    "dict",
    "len",
    "set",
    "str",
    "typing.List",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.solve_specs_for_arch": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "conda_lock.conda_lock.PathLike",
    "conda_lock.conda_lock.conda_env_override",
    "conda_lock.conda_lock.conda_pkgs_dir",
    "conda_lock.conda_lock.json",
    "conda_lock.conda_lock.os",
    "conda_lock.conda_lock.subprocess",
    "conda_lock.conda_lock.sys",
    "dict",
    "print",
    "print_proc",
    "str",
    "typing.List",
    "typing.MutableSequence",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.solve_specs_for_arch.print_proc": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "conda_lock.main": {
  "data": {
   "shadows": "conda_lock.conda_lock.main"
  },
  "type": "import"
 },
 "conda_lock.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "conda_lock.src_parser": {
  "data": {},
  "type": "module"
 },
 "conda_lock.src_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "conda_lock.src_parser.LockSpecification": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "conda_lock.src_parser.LockSpecification.__init__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.LockSpecification.env_hash": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "conda_lock.src_parser.hashlib",
    "conda_lock.src_parser.json",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.environment_yaml": {
  "data": {},
  "type": "module"
 },
 "conda_lock.src_parser.environment_yaml.LockSpecification": {
  "data": {
   "shadows": "conda_lock.src_parser.LockSpecification"
  },
  "type": "import"
 },
 "conda_lock.src_parser.environment_yaml.filter_platform_selectors": {
  "data": {
   "shadows": "conda_lock.src_parser.selectors.filter_platform_selectors"
  },
  "type": "import"
 },
 "conda_lock.src_parser.environment_yaml.parse_environment_file": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "FileNotFoundError",
    "conda_lock.src_parser.LockSpecification",
    "conda_lock.src_parser.environment_yaml.pathlib",
    "conda_lock.src_parser.environment_yaml.sys",
    "conda_lock.src_parser.environment_yaml.yaml",
    "conda_lock.src_parser.selectors.filter_platform_selectors",
    "isinstance",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.environment_yaml.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "conda_lock.src_parser.environment_yaml.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "conda_lock.src_parser.environment_yaml.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "conda_lock.src_parser.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "conda_lock.src_parser.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "conda_lock.src_parser.meta_yaml": {
  "data": {},
  "type": "module"
 },
 "conda_lock.src_parser.meta_yaml.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "conda_lock.src_parser.meta_yaml.LockSpecification": {
  "data": {
   "shadows": "conda_lock.src_parser.LockSpecification"
  },
  "type": "import"
 },
 "conda_lock.src_parser.meta_yaml.UndefinedNeverFail": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "conda_lock.src_parser.meta_yaml.jinja2",
    "str",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "conda_lock.src_parser.meta_yaml.UndefinedNeverFail.__getattr__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "AttributeError",
    "object.__getattr__"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.meta_yaml.UndefinedNeverFail.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "conda_lock.src_parser.meta_yaml.jinja2"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.meta_yaml.UndefinedNeverFail._return_undefined": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "conda_lock.src_parser.meta_yaml.UndefinedNeverFail"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.meta_yaml.UndefinedNeverFail._return_value": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "conda_lock.src_parser.meta_yaml.UndefinedNeverFail"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.meta_yaml.filter_platform_selectors": {
  "data": {
   "shadows": "conda_lock.src_parser.selectors.filter_platform_selectors"
  },
  "type": "import"
 },
 "conda_lock.src_parser.meta_yaml.get_in": {
  "data": {
   "shadows": "conda_lock.common.get_in"
  },
  "type": "import"
 },
 "conda_lock.src_parser.meta_yaml.jinja2": {
  "data": {
   "shadows": "jinja2"
  },
  "type": "import"
 },
 "conda_lock.src_parser.meta_yaml.parse_meta_yaml_file": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "FileNotFoundError",
    "add_spec",
    "bool",
    "conda_lock.common.get_in",
    "conda_lock.src_parser.LockSpecification",
    "conda_lock.src_parser.meta_yaml.UndefinedNeverFail",
    "conda_lock.src_parser.meta_yaml.jinja2",
    "conda_lock.src_parser.meta_yaml.pathlib",
    "conda_lock.src_parser.meta_yaml.yaml",
    "conda_lock.src_parser.selectors.filter_platform_selectors",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.meta_yaml.parse_meta_yaml_file.add_spec": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "conda_lock.src_parser.meta_yaml.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "conda_lock.src_parser.meta_yaml.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "conda_lock.src_parser.pyproject_toml": {
  "data": {
   "symbols_in_volume": [
    "dict",
    "typing.Optional"
   ]
  },
  "type": "module"
 },
 "conda_lock.src_parser.pyproject_toml.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "conda_lock.src_parser.pyproject_toml.LockSpecification": {
  "data": {
   "shadows": "conda_lock.src_parser.LockSpecification"
  },
  "type": "import"
 },
 "conda_lock.src_parser.pyproject_toml.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "conda_lock.src_parser.pyproject_toml.PYPI_TO_CONDA_NAME_LOOKUP": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "conda_lock.src_parser.pyproject_toml.Requirement": {
  "data": {
   "shadows": "pkg_resources.Requirement"
  },
  "type": "import"
 },
 "conda_lock.src_parser.pyproject_toml.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "conda_lock.src_parser.pyproject_toml.collections.abc": {
  "data": {
   "shadows": "collections.abc"
  },
  "type": "import"
 },
 "conda_lock.src_parser.pyproject_toml.get_in": {
  "data": {
   "shadows": "conda_lock.common.get_in"
  },
  "type": "import"
 },
 "conda_lock.src_parser.pyproject_toml.get_lookup": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "conda_lock.src_parser.pyproject_toml.PYPI_TO_CONDA_NAME_LOOKUP",
    "conda_lock.src_parser.pyproject_toml.requests",
    "conda_lock.src_parser.pyproject_toml.yaml"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.pyproject_toml.join_version_components": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.pyproject_toml.normalize_pypi_name": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "conda_lock.src_parser.pyproject_toml.get_lookup",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.pyproject_toml.parse_flit_pyproject_toml": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "bool",
    "conda_lock.common.get_in",
    "conda_lock.src_parser.LockSpecification",
    "conda_lock.src_parser.pyproject_toml.pathlib",
    "conda_lock.src_parser.pyproject_toml.python_requirement_to_conda_spec",
    "conda_lock.src_parser.pyproject_toml.toml",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.pyproject_toml.parse_poetry_pyproject_toml": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "TypeError",
    "bool",
    "conda_lock.common.get_in",
    "conda_lock.src_parser.LockSpecification",
    "conda_lock.src_parser.pyproject_toml.collections",
    "conda_lock.src_parser.pyproject_toml.normalize_pypi_name",
    "conda_lock.src_parser.pyproject_toml.pathlib",
    "conda_lock.src_parser.pyproject_toml.poetry_version_to_conda_version",
    "conda_lock.src_parser.pyproject_toml.toml",
    "isinstance",
    "str",
    "to_match_spec",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.pyproject_toml.parse_pyproject_toml": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "bool",
    "conda_lock.common.get_in",
    "conda_lock.src_parser.pyproject_toml.parse_poetry_pyproject_toml",
    "conda_lock.src_parser.pyproject_toml.pathlib",
    "conda_lock.src_parser.pyproject_toml.toml",
    "conda_lock.src_parser.pyproject_toml.warnings",
    "parse",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.pyproject_toml.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "conda_lock.src_parser.pyproject_toml.poetry_version_to_conda_version": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "conda_lock.src_parser.pyproject_toml.join_version_components",
    "int",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.pyproject_toml.python_requirement_to_conda_spec": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "conda_lock.src_parser.pyproject_toml.normalize_pypi_name",
    "conda_lock.src_parser.pyproject_toml.poetry_version_to_conda_version",
    "conda_lock.src_parser.pyproject_toml.to_match_spec",
    "pkg_resources.Requirement.parse",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.pyproject_toml.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "conda_lock.src_parser.pyproject_toml.to_match_spec": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "conda_lock.src_parser.pyproject_toml.toml": {
  "data": {
   "shadows": "toml"
  },
  "type": "import"
 },
 "conda_lock.src_parser.pyproject_toml.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "conda_lock.src_parser.pyproject_toml.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "conda_lock.src_parser.selectors": {
  "data": {},
  "type": "module"
 },
 "conda_lock.src_parser.selectors.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "conda_lock.src_parser.selectors.filter_platform_selectors": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "conda_lock.src_parser.selectors.re",
    "str",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.selectors.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 }
}