{
 "conda_lock": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "conda_lock.pkg_resources"
   ]
  },
  "type": "module"
 },
 "conda_lock.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "conda_lock.__version__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "conda_lock.conda_lock": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "conda_lock.conda_lock.main",
    "conda_lock.conda_lock.pathlib",
    "conda_lock.conda_lock.sys",
    "print",
    "str",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "conda_lock.conda_lock.CONDA_PKGS_DIRS": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "conda_lock.conda_lock.DEFAULT_PLATFORMS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "conda_lock.conda_lock.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.LockSpecification": {
  "data": {
   "shadows": "conda_lock.src_parser.LockSpecification"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.MutableSequence": {
  "data": {
   "shadows": "typing.MutableSequence"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.PathLike": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "conda_lock.conda_lock.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.candidate_executables": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bool",
    "conda_lock.conda_lock.pathlib",
    "conda_lock.conda_lock.shutil",
    "str",
    "typing.Iterable",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.conda_env_override": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "conda_lock.conda_lock.conda_pkgs_dir",
    "conda_lock.conda_lock.os",
    "conda_lock.conda_lock.platform",
    "dict",
    "str",
    "typing.Dict"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.conda_pkgs_dir": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "conda_lock.conda_lock.CONDA_PKGS_DIRS",
    "conda_lock.conda_lock.atexit",
    "conda_lock.conda_lock.tempfile"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.ensure_conda": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "bool",
    "conda_lock.conda_lock.candidate_executables",
    "conda_lock.conda_lock.install_conda_exe",
    "conda_lock.conda_lock.logging",
    "conda_lock.conda_lock.pathlib",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.fn_to_dist_name": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "RuntimeError",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.install_conda_exe": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "conda_lock.conda_lock.new_executable",
    "conda_lock.conda_lock.os",
    "conda_lock.conda_lock.pathlib",
    "conda_lock.conda_lock.platform",
    "conda_lock.conda_lock.requests",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.install_micromamba_exe": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "conda_lock.conda_lock.io",
    "conda_lock.conda_lock.new_executable",
    "conda_lock.conda_lock.os",
    "conda_lock.conda_lock.pathlib",
    "conda_lock.conda_lock.platform",
    "conda_lock.conda_lock.requests",
    "conda_lock.conda_lock.tarfile",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.main": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "conda_lock.conda_lock.parser",
    "conda_lock.conda_lock.run_lock"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.main_on_docker": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "conda_lock.conda_lock.pathlib",
    "conda_lock.conda_lock.subprocess",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.make_lock_files": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "conda_lock.conda_lock.PathLike",
    "conda_lock.conda_lock.fn_to_dist_name",
    "conda_lock.conda_lock.parse_source_file",
    "conda_lock.conda_lock.pathlib",
    "conda_lock.conda_lock.search_for_md5s",
    "conda_lock.conda_lock.solve_specs_for_arch",
    "conda_lock.conda_lock.sys",
    "len",
    "open",
    "print",
    "set",
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.new_executable": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "bytes",
    "conda_lock.conda_lock.PathLike",
    "conda_lock.conda_lock.contextlib",
    "conda_lock.conda_lock.os",
    "conda_lock.conda_lock.stat",
    "open",
    "typing.IO",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.parse_environment_file": {
  "data": {
   "shadows": "conda_lock.src_parser.environment_yaml.parse_environment_file"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.parse_meta_yaml_file": {
  "data": {
   "shadows": "conda_lock.src_parser.meta_yaml.parse_meta_yaml_file"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.parse_source_file": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "conda_lock.conda_lock.pathlib",
    "conda_lock.conda_lock.platform",
    "conda_lock.src_parser.LockSpecification",
    "conda_lock.src_parser.environment_yaml.parse_environment_file",
    "conda_lock.src_parser.meta_yaml.parse_meta_yaml_file",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.parser": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "conda_lock.conda_lock.argparse",
    "conda_lock.conda_lock.pathlib"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.run_lock": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "bool",
    "conda_lock.conda_lock.DEFAULT_PLATFORMS",
    "conda_lock.conda_lock.ensure_conda",
    "conda_lock.conda_lock.make_lock_files",
    "conda_lock.conda_lock.pathlib",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.search_for_md5s": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "conda_lock.conda_lock.PathLike",
    "conda_lock.conda_lock.conda_env_override",
    "conda_lock.conda_lock.json",
    "conda_lock.conda_lock.platform",
    "conda_lock.conda_lock.subprocess",
    "dict",
    "len",
    "set",
    "str",
    "typing.List",
    "typing.Set",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.solve_specs_for_arch": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "conda_lock.conda_lock.PathLike",
    "conda_lock.conda_lock.conda_env_override",
    "conda_lock.conda_lock.conda_pkgs_dir",
    "conda_lock.conda_lock.json",
    "conda_lock.conda_lock.pathlib",
    "conda_lock.conda_lock.platform",
    "conda_lock.conda_lock.subprocess",
    "conda_lock.conda_lock.sys",
    "dict",
    "print",
    "str",
    "typing.List",
    "typing.MutableSequence"
   ]
  },
  "type": "function"
 },
 "conda_lock.conda_lock.stat": {
  "data": {
   "shadows": "stat"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.tarfile": {
  "data": {
   "shadows": "tarfile"
  },
  "type": "import"
 },
 "conda_lock.conda_lock.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "conda_lock.main": {
  "data": {
   "shadows": "conda_lock.conda_lock.main"
  },
  "type": "import"
 },
 "conda_lock.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "conda_lock.src_parser": {
  "data": {},
  "type": "module"
 },
 "conda_lock.src_parser.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "conda_lock.src_parser.LockSpecification": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "conda_lock.src_parser.LockSpecification.__init__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "str",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.LockSpecification.env_hash": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "conda_lock.src_parser.hashlib",
    "conda_lock.src_parser.json",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.environment_yaml": {
  "data": {},
  "type": "module"
 },
 "conda_lock.src_parser.environment_yaml.LockSpecification": {
  "data": {
   "shadows": "conda_lock.src_parser.LockSpecification"
  },
  "type": "import"
 },
 "conda_lock.src_parser.environment_yaml.filter_platform_selectors": {
  "data": {
   "shadows": "conda_lock.src_parser.selectors.filter_platform_selectors"
  },
  "type": "import"
 },
 "conda_lock.src_parser.environment_yaml.parse_environment_file": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "FileNotFoundError",
    "conda_lock.src_parser.LockSpecification",
    "conda_lock.src_parser.environment_yaml.pathlib",
    "conda_lock.src_parser.environment_yaml.sys",
    "conda_lock.src_parser.environment_yaml.yaml",
    "conda_lock.src_parser.selectors.filter_platform_selectors",
    "isinstance",
    "print",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.environment_yaml.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "conda_lock.src_parser.environment_yaml.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "conda_lock.src_parser.environment_yaml.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "conda_lock.src_parser.hashlib": {
  "data": {
   "shadows": "hashlib"
  },
  "type": "import"
 },
 "conda_lock.src_parser.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "conda_lock.src_parser.meta_yaml": {
  "data": {},
  "type": "module"
 },
 "conda_lock.src_parser.meta_yaml.LockSpecification": {
  "data": {
   "shadows": "conda_lock.src_parser.LockSpecification"
  },
  "type": "import"
 },
 "conda_lock.src_parser.meta_yaml.NullUndefined": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "conda_lock.src_parser.meta_yaml.jinja2"
   ]
  },
  "type": "class"
 },
 "conda_lock.src_parser.meta_yaml.NullUndefined.__getattr__": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "conda_lock.src_parser.meta_yaml.NullUndefined._return_undefined": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "conda_lock.src_parser.meta_yaml.NullUndefined"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.meta_yaml.filter_platform_selectors": {
  "data": {
   "shadows": "conda_lock.src_parser.selectors.filter_platform_selectors"
  },
  "type": "import"
 },
 "conda_lock.src_parser.meta_yaml.jinja2": {
  "data": {
   "shadows": "jinja2"
  },
  "type": "import"
 },
 "conda_lock.src_parser.meta_yaml.parse_meta_yaml_file": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "FileNotFoundError",
    "add_spec",
    "conda_lock.src_parser.LockSpecification",
    "conda_lock.src_parser.meta_yaml.NullUndefined",
    "conda_lock.src_parser.meta_yaml.jinja2",
    "conda_lock.src_parser.meta_yaml.pathlib",
    "conda_lock.src_parser.meta_yaml.yaml",
    "conda_lock.src_parser.selectors.filter_platform_selectors",
    "str"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.meta_yaml.parse_meta_yaml_file.add_spec": {
  "data": {
   "lineno": 90
  },
  "type": "function"
 },
 "conda_lock.src_parser.meta_yaml.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "conda_lock.src_parser.meta_yaml.yaml": {
  "data": {
   "shadows": "yaml"
  },
  "type": "import"
 },
 "conda_lock.src_parser.selectors": {
  "data": {},
  "type": "module"
 },
 "conda_lock.src_parser.selectors.Iterator": {
  "data": {
   "shadows": "typing.Iterator"
  },
  "type": "import"
 },
 "conda_lock.src_parser.selectors.filter_platform_selectors": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "conda_lock.src_parser.selectors.re",
    "str",
    "typing.Iterator"
   ]
  },
  "type": "function"
 },
 "conda_lock.src_parser.selectors.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 }
}