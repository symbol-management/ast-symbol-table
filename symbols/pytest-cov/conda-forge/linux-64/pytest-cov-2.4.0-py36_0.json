{
 "pytest_cov": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_cov.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "io.StringIO",
   "pytest",
   "pytest.hookimpl",
   "pytest.mark.hookwrapper"
  ],
  "type": "module"
 },
 "pytest_cov.compat.SessionWrapper": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cov.compat.SessionWrapper.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.compat.SessionWrapper.testsfailed": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.embed": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_cov.embed.init": {
  "lineno": 38,
  "symbols_in_volume": [
   "coverage.coverage",
   "os.environ.get",
   "os.pathsep"
  ],
  "type": "function"
 },
 "pytest_cov.embed.multiprocessing_finish": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.embed.multiprocessing_start": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.engine": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_cov.engine.Central": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cov.engine.Central.finish": {
  "lineno": 145,
  "symbols_in_volume": [
   "sys.platform",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pytest_cov.engine.Central.start": {
  "lineno": 133,
  "symbols_in_volume": [
   "coverage.coverage"
  ],
  "type": "function"
 },
 "pytest_cov.engine.CovController": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cov.engine.CovController.__init__": {
  "lineno": 17,
  "symbols_in_volume": [
   "os.getcwd"
  ],
  "type": "function"
 },
 "pytest_cov.engine.CovController.get_node_desc": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.engine.CovController.sep": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.engine.CovController.set_env": {
  "lineno": 31,
  "symbols_in_volume": [
   "os.environ",
   "os.path.abspath",
   "os.path.exists",
   "os.pathsep.join"
  ],
  "type": "function"
 },
 "pytest_cov.engine.CovController.summary": {
  "lineno": 68,
  "symbols_in_volume": [
   "coverage",
   "coverage.version_info",
   "os.devnull"
  ],
  "type": "function"
 },
 "pytest_cov.engine.CovController.unset_env": {
  "lineno": 44,
  "symbols_in_volume": [
   "os.environ.pop"
  ],
  "type": "function"
 },
 "pytest_cov.engine.DistMaster": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cov.engine.DistMaster.configure_node": {
  "lineno": 174,
  "symbols_in_volume": [
   "socket.gethostname"
  ],
  "type": "function"
 },
 "pytest_cov.engine.DistMaster.finish": {
  "lineno": 219,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.engine.DistMaster.start": {
  "lineno": 159,
  "symbols_in_volume": [
   "coverage.coverage",
   "os.path.exists"
  ],
  "type": "function"
 },
 "pytest_cov.engine.DistMaster.testnodedown": {
  "lineno": 181,
  "symbols_in_volume": [
   "coverage.coverage",
   "coverage.data.CoverageData",
   "os.getpid",
   "random.randint",
   "socket.gethostname"
  ],
  "type": "function"
 },
 "pytest_cov.engine.DistSlave": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cov.engine.DistSlave.finish": {
  "lineno": 257,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.engine.DistSlave.start": {
  "lineno": 231,
  "symbols_in_volume": [
   "coverage.coverage",
   "socket.gethostname"
  ],
  "type": "function"
 },
 "pytest_cov.engine.DistSlave.summary": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.plugin": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pytest_cov.plugin.CovPlugin": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cov.plugin.CovPlugin.__init__": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.plugin.CovPlugin._failed_cov_total": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.plugin.CovPlugin._is_slave": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.plugin.CovPlugin._should_report": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.plugin.CovPlugin.pytest_configure_node": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.plugin.CovPlugin.pytest_runtest_setup": {
  "lineno": 270,
  "symbols_in_volume": [
   "os.getpid"
  ],
  "type": "function"
 },
 "pytest_cov.plugin.CovPlugin.pytest_runtest_teardown": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.plugin.CovPlugin.pytest_runtestloop": {
  "lineno": 221,
  "symbols_in_volume": [
   "coverage.misc.CoverageException",
   "pytest.UsageError"
  ],
  "type": "function"
 },
 "pytest_cov.plugin.CovPlugin.pytest_sessionstart": {
  "lineno": 180,
  "symbols_in_volume": [
   "os.getpid"
  ],
  "type": "function"
 },
 "pytest_cov.plugin.CovPlugin.pytest_terminal_summary": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.plugin.CovPlugin.pytest_testnodedown": {
  "lineno": 204,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.plugin.CovPlugin.start": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.plugin.CovPlugin.start.Config": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cov.plugin.CoverageError": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pytest_cov.plugin.StoreReport": {
  "lineno": 43,
  "symbols_in_volume": [
   "argparse.Action"
  ],
  "type": "class"
 },
 "pytest_cov.plugin.StoreReport.__call__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.plugin.cov": {
  "lineno": 282,
  "symbols_in_volume": [
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pytest_cov.plugin.pytest_addoption": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.plugin.pytest_configure": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pytest_cov.plugin.pytest_load_initial_conftests": {
  "lineno": 81,
  "symbols_in_volume": [
   "pytest.mark.tryfirst"
  ],
  "type": "function"
 },
 "pytest_cov.plugin.validate_report": {
  "lineno": 17,
  "symbols_in_volume": [
   "argparse.ArgumentTypeError"
  ],
  "type": "function"
 }
}