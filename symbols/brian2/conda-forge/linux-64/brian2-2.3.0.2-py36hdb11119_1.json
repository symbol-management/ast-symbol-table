{
 "*": {
  "data": {
   "imports": [
    "brian2"
   ]
  },
  "type": "star-import"
 },
 "brian2": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian2._check_caches",
    "brian2._check_dependencies",
    "brian2._check_dependency_versions",
    "get_logger",
    "globals"
   ]
  },
  "type": "module"
 },
 "brian2.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "brian2.__docformat__": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "brian2.__release_date__": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "brian2.__version__": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "brian2._cache_dirs_and_extensions": {
  "data": {
   "lineno": 126
  },
  "type": "constant"
 },
 "brian2._check_caches": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "brian2._cache_dirs_and_extensions",
    "brian2.check_cache",
    "brian2.codegen.runtime.cython_rt.extension_manager.get_cython_cache_dir",
    "brian2.codegen.runtime.cython_rt.extension_manager.get_cython_extensions",
    "brian2.codegen.runtime.weave_rt.weave_rt.get_weave_cache_dir",
    "brian2.codegen.runtime.weave_rt.weave_rt.get_weave_extensions"
   ]
  },
  "type": "function"
 },
 "brian2._check_dependencies": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ImportError",
    "brian2.sys",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2._check_dependency_version": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian2.sys",
    "distutils.version.LooseVersion",
    "get_logger",
    "isinstance",
    "past.builtins.basestring"
   ]
  },
  "type": "function"
 },
 "brian2._check_dependency_versions": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "brian2._check_dependency_version"
   ]
  },
  "type": "function"
 },
 "brian2._get_size_recursively": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "brian2.os"
   ]
  },
  "type": "function"
 },
 "brian2._setuptools": {
  "data": {
   "shadows": "setuptools"
  },
  "type": "import"
 },
 "brian2.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.check_cache": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "brian2._cache_dirs_and_extensions",
    "brian2._get_size_recursively",
    "brian2.logger",
    "int",
    "round"
   ]
  },
  "type": "function"
 },
 "brian2.clear_cache": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "brian2._cache_dirs_and_extensions",
    "brian2.logger",
    "brian2.os",
    "brian2.shutil"
   ]
  },
  "type": "function"
 },
 "brian2.codegen": {
  "data": {},
  "type": "module"
 },
 "brian2.codegen.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "brian2.codegen._cpp_prefs": {
  "data": {
   "shadows": "cpp_prefs"
  },
  "type": "import"
 },
 "brian2.codegen._prefs": {
  "data": {
   "symbols_in_volume": [
    "brian2.core.preferences.BrianPreference",
    "brian2.core.preferences.prefs.register_preferences",
    "isinstance",
    "issubclass",
    "past.builtins.basestring"
   ]
  },
  "type": "module"
 },
 "brian2.codegen._prefs.BrianPreference": {
  "data": {
   "shadows": "brian2.core.preferences.BrianPreference"
  },
  "type": "import"
 },
 "brian2.codegen._prefs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen._prefs.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.codegen._prefs.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.codegen.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.codeobject": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.codegen.codeobject.platform",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.codeobject.CodeObject": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "brian2.core.names.Nameable"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.codeobject.CodeObject.__call__": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "brian2.codegen.codeobject.CodeObject.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "TypeError",
    "brian2.codegen.codeobject.weakref",
    "brian2.core.names.Nameable.__init__"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.codeobject.CodeObject.compile": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "brian2.codegen.codeobject.CodeObject.is_available": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "NotImplementedError",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.codeobject.CodeObject.run": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.codeobject.CodeObject.update_namespace": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "brian2.codegen.codeobject.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.codegen.codeobject.Nameable": {
  "data": {
   "shadows": "brian2.core.names.Nameable"
  },
  "type": "import"
 },
 "brian2.codegen.codeobject.NumpyCodeObject": {
  "data": {
   "shadows": "brian2.codegen.runtime.numpy_rt.NumpyCodeObject"
  },
  "type": "import"
 },
 "brian2.codegen.codeobject.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "brian2.codegen.codeobject._error_msg": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.codeobject._gather_compiler_kwds": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "brian2.codegen.codeobject._merge_compiler_kwds"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.codeobject._merge_compiler_kwds": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "TypeError",
    "brian2.codegen.codeobject.collections",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.codeobject.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.codeobject.check_compiler_kwds": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.codeobject.check_units_statements": {
  "data": {
   "shadows": "brian2.equations.unitcheck.check_units_statements"
  },
  "type": "import"
 },
 "brian2.codegen.codeobject.code_representation": {
  "data": {
   "shadows": "brian2.utils.stringtools.code_representation"
  },
  "type": "import"
 },
 "brian2.codegen.codeobject.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "brian2.codegen.codeobject.constant_or_scalar": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "brian2.devices.device.get_device"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.codeobject.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "brian2.codegen.codeobject.create_runner_codeobj": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "NotImplementedError",
    "SyntaxError",
    "ValueError",
    "analyse_identifiers",
    "brian2.codegen.codeobject._error_msg",
    "brian2.codegen.codeobject._gather_compiler_kwds",
    "brian2.codegen.codeobject._merge_compiler_kwds",
    "brian2.codegen.codeobject.copy",
    "brian2.codegen.codeobject.logger",
    "brian2.codegen.runtime.numpy_rt.NumpyCodeObject",
    "brian2.core.functions.Function",
    "brian2.devices.get_device",
    "brian2.equations.unitcheck.check_units_statements",
    "brian2.utils.stringtools.code_representation",
    "brian2.utils.stringtools.indent",
    "dict",
    "getattr",
    "isinstance",
    "list",
    "set",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.codeobject.get_device": {
  "data": {
   "shadows": "brian2.devices.get_device"
  },
  "type": "import"
 },
 "brian2.codegen.codeobject.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.codegen.codeobject.indent": {
  "data": {
   "shadows": "brian2.utils.stringtools.indent"
  },
  "type": "import"
 },
 "brian2.codegen.codeobject.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "brian2.codegen.codeobject.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "brian2.codegen.codeobject.sys_info": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "brian2.codegen.codeobject.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs": {
  "data": {
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "__name__",
    "brian2.codegen.cpp_prefs.flag_file",
    "brian2.codegen.cpp_prefs.flags",
    "brian2.codegen.cpp_prefs.get_cpu_flags_script",
    "brian2.codegen.cpp_prefs.hostname",
    "brian2.codegen.cpp_prefs.json",
    "brian2.codegen.cpp_prefs.logger",
    "brian2.codegen.cpp_prefs.msvc_arch_flag",
    "brian2.codegen.cpp_prefs.os",
    "brian2.codegen.cpp_prefs.output",
    "brian2.codegen.cpp_prefs.platform",
    "brian2.codegen.cpp_prefs.previously_stored_flags",
    "brian2.codegen.cpp_prefs.socket",
    "brian2.codegen.cpp_prefs.subprocess",
    "brian2.codegen.cpp_prefs.sys",
    "brian2.codegen.cpp_prefs.to_store",
    "brian2.codegen.cpp_prefs.user_dir",
    "brian2.core.preferences.BrianPreference",
    "brian2.core.preferences.prefs.register_preferences",
    "brian2.utils.logger.get_logger",
    "open",
    "str"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.cpp_prefs.BrianPreference": {
  "data": {
   "shadows": "brian2.core.preferences.BrianPreference"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.C99Check": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.cpp_prefs.C99Check.__call__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.codegen.cpp_prefs.compiler_supports_c99"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.cpp_prefs.C99Check.__init__": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "brian2.codegen.cpp_prefs.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "brian2.codegen.cpp_prefs._compiler_supports_c99": {
  "data": {
   "lineno": 287
  },
  "type": "constant"
 },
 "brian2.codegen.cpp_prefs._msvc_env": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "brian2.codegen.cpp_prefs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.compiler_supports_c99": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "brian2.codegen.cpp_prefs._compiler_supports_c99",
    "brian2.codegen.cpp_prefs.get_msvc_env",
    "brian2.codegen.cpp_prefs.os",
    "brian2.codegen.cpp_prefs.platform",
    "brian2.codegen.cpp_prefs.tempfile"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.cpp_prefs.distutils": {
  "data": {
   "shadows": "distutils"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.flag_file": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "brian2.codegen.cpp_prefs.flags": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "brian2.codegen.cpp_prefs.get_compiler_and_args": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "brian2.core.preferences.prefs",
    "distutils.ccompiler.get_default_compiler"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.cpp_prefs.get_cpu_flags_script": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "brian2.codegen.cpp_prefs.get_default_compiler": {
  "data": {
   "shadows": "distutils.ccompiler.get_default_compiler"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.get_msvc_env": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "AttributeError",
    "IOError",
    "brian2.codegen.cpp_prefs._msvc_env",
    "brian2.codegen.cpp_prefs.distutils",
    "brian2.codegen.cpp_prefs.struct",
    "brian2.core.preferences.prefs",
    "range",
    "setuptools.msvc.msvc14_get_vc_env",
    "setuptools.msvc.msvc9_find_vcvarsall"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.cpp_prefs.hostname": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "brian2.codegen.cpp_prefs.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.logger": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "brian2.codegen.cpp_prefs.msvc": {
  "data": {
   "shadows": "setuptools.msvc"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.msvc_arch_flag": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "brian2.codegen.cpp_prefs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.output": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "brian2.codegen.cpp_prefs.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.previously_stored_flags": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "brian2.codegen.cpp_prefs.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "brian2.codegen.cpp_prefs.to_store": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "brian2.codegen.cpp_prefs.update_for_cross_compilation": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "brian2.codegen.cpp_prefs.logger"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.cpp_prefs.user_dir": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "brian2.codegen.generators": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "brian2.core.preferences.prefs.register_preferences"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.generators.GSL_generator": {
  "data": {
   "symbols_in_volume": [
    "brian2.codegen.generators.GSL_generator.valid_gsl_dir",
    "brian2.core.preferences.BrianPreference",
    "brian2.core.preferences.prefs.register_preferences"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.generators.GSL_generator.ArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.ArrayVariable"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.AuxiliaryVariable": {
  "data": {
   "shadows": "brian2.core.variables.AuxiliaryVariable"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.BrianPreference": {
  "data": {
   "shadows": "brian2.core.preferences.BrianPreference"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.CPPStandaloneDevice": {
  "data": {
   "shadows": "brian2.devices.cpp_standalone.device.CPPStandaloneDevice"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.Constant": {
  "data": {
   "shadows": "brian2.core.variables.Constant"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.CythonCodeGenerator": {
  "data": {
   "shadows": "brian2.codegen.generators.cython_generator.CythonCodeGenerator"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.__getattr__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.add_gsl_variables_as_non_scalar": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "brian2.core.variables.AuxiliaryVariable",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.add_meta_variables": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "KeyError",
    "int",
    "numpy.float64",
    "numpy.int32",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.c_data_type": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.diff_var_to_replace": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.find_differential_variables": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "ValueError",
    "brian2.codegen.generators.GSL_generator.re",
    "brian2.parsing.statements.parse_statement"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.find_function_names": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "brian2.core.functions.Function",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.find_undefined_variables": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": [
    "brian2.core.variables.AuxiliaryVariable"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.find_used_variables": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "KeyError",
    "brian2.utils.stringtools.get_identifiers"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.get_dimension_code": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.initialize_array": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.is_constant_and_cpp_standalone": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "brian2.core.variables.Constant",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.is_cpp_standalone": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "brian2.devices.cpp_standalone.device.CPPStandaloneDevice",
    "brian2.devices.device.get_device",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.make_function_code": {
  "data": {
   "lineno": 348
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.scale_array_code": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
    "dict",
    "float",
    "isinstance",
    "list",
    "sorted",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.to_replace_vector_vars": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "brian2.core.variables.ArrayVariable",
    "frozenset",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.translate": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "any",
    "brian2.codegen.generators.GSL_generator.re",
    "brian2.codegen.permutation_analysis.OrderDependenceError",
    "brian2.codegen.permutation_analysis.check_for_order_independence",
    "brian2.codegen.translation.make_statements",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "dict",
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.translate_scalar_code": {
  "data": {
   "lineno": 694,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "KeyError",
    "ValueError",
    "brian2.codegen.generators.GSL_generator.re",
    "brian2.parsing.statements.parse_statement",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.translate_vector_code": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "AssertionError",
    "brian2.codegen.generators.GSL_generator.re",
    "brian2.utils.stringtools.word_substitute",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.unpack_namespace": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "frozenset",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.unpack_namespace_single": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.var_init_lhs": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.write_dataholder": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.write_dataholder_single": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "AttributeError",
    "brian2.core.variables.ArrayVariable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.yvector_code": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "int",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCythonCodeGenerator": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "brian2.codegen.generators.GSL_generator.GSLCodeGenerator"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.generators.GSL_generator.GSLCythonCodeGenerator.c_data_type": {
  "data": {
   "lineno": 958,
   "symbols_in_volume": [
    "brian2.codegen.generators.c_data_type"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCythonCodeGenerator.get_array_name": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "brian2.codegen.generators.cython_generator.CythonCodeGenerator.get_array_name",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCythonCodeGenerator.initialize_array": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "len",
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCythonCodeGenerator.unpack_namespace_single": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "brian2.core.variables.ArrayVariable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCythonCodeGenerator.var_init_lhs": {
  "data": {
   "lineno": 972
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCythonCodeGenerator.var_replace_diff_var_lhs": {
  "data": {
   "lineno": 968
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "brian2.codegen.generators.GSL_generator.GSLCodeGenerator"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator.__getattr__": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator.c_data_type": {
  "data": {
   "lineno": 1016
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator.get_array_name": {
  "data": {
   "lineno": 1056,
   "symbols_in_volume": [
    "brian2.codegen.runtime.weave_rt.WeaveCodeGenerator.get_array_name",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator.initialize_array": {
  "data": {
   "lineno": 1019,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator.unpack_namespace_single": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": [
    "brian2.core.variables.ArrayVariable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator.var_init_lhs": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator.var_replace_diff_var_lhs": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "KeyError",
    "brian2.core.preferences.prefs.core.default_float_dtype"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.OrderDependenceError": {
  "data": {
   "shadows": "brian2.codegen.permutation_analysis.OrderDependenceError"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.PreferenceError": {
  "data": {
   "shadows": "brian2.core.preferences.PreferenceError"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.UnsupportedEquationsException": {
  "data": {
   "shadows": "brian2.stateupdaters.base.UnsupportedEquationsException"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.WeaveCodeGenerator": {
  "data": {
   "shadows": "brian2.codegen.runtime.weave_rt.WeaveCodeGenerator"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "brian2.codegen.generators.GSL_generator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.c_data_type": {
  "data": {
   "shadows": "brian2.codegen.generators.c_data_type"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.check_for_order_independence": {
  "data": {
   "shadows": "brian2.codegen.permutation_analysis.check_for_order_independence"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.fail_for_dimension_mismatch": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.fail_for_dimension_mismatch"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.make_statements": {
  "data": {
   "shadows": "brian2.codegen.translation.make_statements"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.parse_statement": {
  "data": {
   "shadows": "brian2.parsing.statements.parse_statement"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.codegen.generators.GSL_generator.valid_gsl_dir": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "any",
    "brian2.codegen.generators.GSL_generator.os",
    "brian2.core.preferences.PreferenceError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.word_substitute": {
  "data": {
   "shadows": "brian2.utils.stringtools.word_substitute"
  },
  "type": "import"
 },
 "brian2.codegen.generators.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.generators.base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.generators.base.ArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.ArrayVariable"
  },
  "type": "import"
 },
 "brian2.codegen.generators.base.CodeGenerator": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.generators.base.CodeGenerator.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "brian2.core.functions.Function",
    "brian2.devices.device.get_device",
    "getattr",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.array_read_write": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.core.variables.ArrayVariable",
    "brian2.utils.stringtools.get_identifiers",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.arrays_helper": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.determine_keywords": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.get_array_name": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "brian2.devices.device.get_device",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.get_conditional_write_vars": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "getattr",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.has_repeated_indices": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "all",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.translate": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "brian2.codegen.generators.base.logger",
    "brian2.codegen.permutation_analysis.OrderDependenceError",
    "brian2.codegen.permutation_analysis.check_for_order_independence",
    "brian2.codegen.translation.make_statements",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.translate_expression": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.translate_one_statement_sequence": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.translate_statement": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.translate_statement_sequence": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "brian2.codegen.generators.base.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.codegen.generators.base.OrderDependenceError": {
  "data": {
   "shadows": "brian2.codegen.permutation_analysis.OrderDependenceError"
  },
  "type": "import"
 },
 "brian2.codegen.generators.base.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "brian2.codegen.generators.base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.generators.base.check_for_order_independence": {
  "data": {
   "shadows": "brian2.codegen.permutation_analysis.check_for_order_independence"
  },
  "type": "import"
 },
 "brian2.codegen.generators.base.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.codegen.generators.base.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.codegen.generators.base.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.codegen.generators.base.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "brian2.codegen.generators.base.make_statements": {
  "data": {
   "shadows": "brian2.codegen.translation.make_statements"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.codegen.cpp_prefs.C99Check",
    "brian2.codegen.generators.cpp_generator.CPPCodeGenerator",
    "brian2.codegen.generators.cpp_generator.abs_code",
    "brian2.codegen.generators.cpp_generator.clip_code",
    "brian2.codegen.generators.cpp_generator.exprel_code",
    "brian2.codegen.generators.cpp_generator.floordiv_support_code",
    "brian2.codegen.generators.cpp_generator.hightype",
    "brian2.codegen.generators.cpp_generator.hightype_support_code",
    "brian2.codegen.generators.cpp_generator.mod_support_code",
    "brian2.codegen.generators.cpp_generator.poisson_code",
    "brian2.codegen.generators.cpp_generator.pow_support_code",
    "brian2.codegen.generators.cpp_generator.sign_code",
    "brian2.codegen.generators.cpp_generator.timestep_code",
    "brian2.codegen.generators.cpp_generator.typestrs",
    "brian2.core.functions.DEFAULT_FUNCTIONS",
    "brian2.core.functions.DEFAULT_FUNCTIONS.implementations.add_implementation",
    "brian2.core.preferences.BrianPreference",
    "brian2.core.preferences.prefs.register_preferences",
    "brian2.utils.logger.get_logger",
    "enumerate",
    "max"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.generators.cpp_generator.ArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.ArrayVariable"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator.BrianPreference": {
  "data": {
   "shadows": "brian2.core.preferences.BrianPreference"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator.C99Check": {
  "data": {
   "shadows": "brian2.codegen.cpp_prefs.C99Check"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "brian2.codegen.generators.cpp_generator._universal_support_code"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.__init__": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "brian2.codegen.generators.cpp_generator.CPPCodeGenerator",
    "brian2.codegen.generators.cpp_generator.c_data_type",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator._add_user_function": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.utils.stringtools.deindent",
    "brian2.utils.stringtools.word_substitute",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.denormals_to_zero_code": {
  "data": {
   "lineno": 351
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.determine_keywords": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "brian2.core.functions.Function",
    "brian2.core.variables.ArrayVariable",
    "brian2.devices.device.get_device",
    "brian2.utils.stringtools.stripped_deindented_lines",
    "getattr",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.flush_denormals": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "brian2.core.preferences.prefs",
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.get_array_name": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "brian2.devices.device.get_device",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.restrict": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "brian2.core.preferences.prefs",
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_expression": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "brian2.parsing.rendering.CPPNodeRenderer",
    "brian2.utils.stringtools.word_substitute"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_one_statement_sequence": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "brian2.utils.stringtools.stripped_deindented_lines"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_statement": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_statement_sequence": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "brian2.utils.stringtools.stripped_deindented_lines",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_to_declarations": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_to_read_arrays": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "brian2.codegen.generators.cpp_generator.itertools"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_to_statements": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_to_write_arrays": {
  "data": {
   "lineno": 279
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPNodeRenderer": {
  "data": {
   "shadows": "brian2.parsing.rendering.CPPNodeRenderer"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator._universal_support_code": {
  "data": {
   "lineno": 131
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.abs_code": {
  "data": {
   "lineno": 512
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator.c_data_type": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "brian2.codegen.generators.cpp_generator.numpy",
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.clip_code": {
  "data": {
   "lineno": 519
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.deindent": {
  "data": {
   "shadows": "brian2.utils.stringtools.deindent"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator.exprel_code": {
  "data": {
   "lineno": 497
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.floattypestrs": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.floordiv_support_code": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator.hightype": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.hightype_support_code": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.mod_support_code": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator.poisson_code": {
  "data": {
   "lineno": 553
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.pow_support_code": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator.sign_code": {
  "data": {
   "lineno": 534
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.stripped_deindented_lines": {
  "data": {
   "shadows": "brian2.utils.stringtools.stripped_deindented_lines"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cpp_generator.timestep_code": {
  "data": {
   "lineno": 543
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.typestrs": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cpp_generator.word_substitute": {
  "data": {
   "shadows": "brian2.utils.stringtools.word_substitute"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator": {
  "data": {
   "symbols_in_volume": [
    "brian2.codegen.cpp_prefs.C99Check",
    "brian2.codegen.generators.cython_generator.CythonCodeGenerator",
    "brian2.codegen.generators.cython_generator._BUFFER_SIZE",
    "brian2.codegen.generators.cython_generator.clip_code",
    "brian2.codegen.generators.cython_generator.data_type_conversion_table",
    "brian2.codegen.generators.cython_generator.device",
    "brian2.codegen.generators.cython_generator.exprel_code",
    "brian2.codegen.generators.cython_generator.poisson_code",
    "brian2.codegen.generators.cython_generator.rand_code",
    "brian2.codegen.generators.cython_generator.randn_code",
    "brian2.codegen.generators.cython_generator.sign_code",
    "brian2.codegen.generators.cython_generator.timestep_code",
    "brian2.core.functions.DEFAULT_FUNCTIONS",
    "brian2.core.functions.DEFAULT_FUNCTIONS.implementations.add_implementation",
    "brian2.devices.device.all_devices",
    "dict",
    "str"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.generators.cython_generator.AuxiliaryVariable": {
  "data": {
   "shadows": "brian2.core.variables.AuxiliaryVariable"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.C99Check": {
  "data": {
   "shadows": "brian2.codegen.cpp_prefs.C99Check"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.Constant": {
  "data": {
   "shadows": "brian2.core.variables.Constant"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator": {
  "data": {
   "lineno": 57
  },
  "type": "class"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "brian2.codegen.generators.cython_generator.CythonCodeGenerator",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator._add_user_function": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "brian2.codegen.generators.cython_generator.get_cpp_dtype",
    "brian2.codegen.generators.cython_generator.get_numpy_dtype",
    "brian2.utils.stringtools.deindent",
    "brian2.utils.stringtools.word_substitute",
    "callable",
    "hasattr",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.determine_keywords": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "brian2.codegen.generators.cython_generator.cpp_dtype",
    "brian2.codegen.generators.cython_generator.get_cpp_dtype",
    "brian2.codegen.generators.cython_generator.get_numpy_dtype",
    "brian2.core.functions.Function",
    "brian2.core.variables.AuxiliaryVariable",
    "brian2.core.variables.Constant",
    "brian2.core.variables.Subexpression",
    "brian2.core.variables.Variable",
    "brian2.core.variables.get_dtype_str",
    "brian2.devices.device.get_device",
    "getattr",
    "isinstance",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.translate_expression": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "brian2.codegen.generators.cython_generator.CythonNodeRenderer",
    "brian2.utils.stringtools.word_substitute"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.translate_one_statement_sequence": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.translate_statement": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "brian2.parsing.bast.brian_dtype_from_dtype",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.translate_statement_sequence": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.translate_to_read_arrays": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "brian2.codegen.generators.cython_generator.itertools"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.translate_to_statements": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "brian2.utils.stringtools.indent"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.translate_to_write_arrays": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonNodeRenderer": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "brian2.parsing.rendering.NodeRenderer"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.generators.cython_generator.CythonNodeRenderer.render_BinOp": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "brian2.codegen.generators.cython_generator.CythonNodeRenderer",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonNodeRenderer.render_Name": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonNodeRenderer.render_NameConstant": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.NodeRenderer": {
  "data": {
   "shadows": "brian2.parsing.rendering.NodeRenderer"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.Subexpression": {
  "data": {
   "shadows": "brian2.core.variables.Subexpression"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.Variable": {
  "data": {
   "shadows": "brian2.core.variables.Variable"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator._BUFFER_SIZE": {
  "data": {
   "lineno": 411
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cython_generator.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cython_generator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.all_devices": {
  "data": {
   "shadows": "brian2.devices.device.all_devices"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.brian_dtype_from_dtype": {
  "data": {
   "shadows": "brian2.parsing.bast.brian_dtype_from_dtype"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.clip_code": {
  "data": {
   "lineno": 550
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cython_generator.cpp_dtype": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cython_generator.data_type_conversion_table": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cython_generator.deindent": {
  "data": {
   "shadows": "brian2.utils.stringtools.deindent"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.device": {
  "data": {
   "lineno": 516
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cython_generator.exprel_code": {
  "data": {
   "lineno": 398
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cython_generator.get_cpp_dtype": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "brian2.codegen.generators.cython_generator.cpp_dtype",
    "brian2.core.variables.get_dtype_str"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.get_dtype_str": {
  "data": {
   "shadows": "brian2.core.variables.get_dtype_str"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.get_numpy_dtype": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "brian2.codegen.generators.cython_generator.numpy_dtype",
    "brian2.core.variables.get_dtype_str"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.indent": {
  "data": {
   "shadows": "brian2.utils.stringtools.indent"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "brian2.codegen.generators.cython_generator.numpy_dtype": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cython_generator.poisson_code": {
  "data": {
   "lineno": 436
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cython_generator.rand_code": {
  "data": {
   "lineno": 413
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cython_generator.randn_code": {
  "data": {
   "lineno": 434
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cython_generator.sign_code": {
  "data": {
   "lineno": 534
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cython_generator.timestep_code": {
  "data": {
   "lineno": 570
  },
  "type": "constant"
 },
 "brian2.codegen.generators.cython_generator.word_substitute": {
  "data": {
   "shadows": "brian2.utils.stringtools.word_substitute"
  },
  "type": "import"
 },
 "brian2.codegen.generators.numpy_generator": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator",
    "brian2.codegen.generators.numpy_generator.ceil_func",
    "brian2.codegen.generators.numpy_generator.clip_func",
    "brian2.codegen.generators.numpy_generator.floor_func",
    "brian2.codegen.generators.numpy_generator.int_func",
    "brian2.codegen.generators.numpy_generator.poisson_func",
    "brian2.codegen.generators.numpy_generator.rand_func",
    "brian2.codegen.generators.numpy_generator.randn_func",
    "brian2.core.functions.DEFAULT_FUNCTIONS.implementations.add_implementation",
    "brian2.core.functions.timestep",
    "brian2.utils.logger.get_logger",
    "numpy.abs",
    "numpy.arccos",
    "numpy.arcsin",
    "numpy.arctan",
    "numpy.ceil",
    "numpy.clip",
    "numpy.cos",
    "numpy.cosh",
    "numpy.exp",
    "numpy.floor",
    "numpy.int32",
    "numpy.log",
    "numpy.log10",
    "numpy.sign",
    "numpy.sin",
    "numpy.sinh",
    "numpy.sqrt",
    "numpy.tan",
    "numpy.tanh"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.generators.numpy_generator.ArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.ArrayVariable"
  },
  "type": "import"
 },
 "brian2.codegen.generators.numpy_generator.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.conditional_write": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "brian2.core.variables.ArrayVariable",
    "brian2.utils.stringtools.word_substitute",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.determine_keywords": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.read_arrays": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "brian2.codegen.generators.numpy_generator.itertools"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.translate_expression": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "brian2.parsing.rendering.NumpyNodeRenderer",
    "brian2.utils.stringtools.word_substitute"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.translate_one_statement_sequence": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.translate_statement": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "brian2.parsing.bast.brian_dtype_from_dtype",
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.ufunc_at_vectorisation": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "brian2.codegen.generators.numpy_generator.VectorisationError",
    "brian2.devices.device.device.get_array_name",
    "brian2.parsing.rendering.NumpyNodeRenderer",
    "brian2.utils.stringtools.get_identifiers",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.vectorise_code": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "brian2.codegen.generators.numpy_generator.VectorisationError",
    "brian2.codegen.generators.numpy_generator.logger",
    "brian2.utils.stringtools.get_identifiers",
    "brian2.utils.stringtools.indent",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.write_arrays": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyNodeRenderer": {
  "data": {
   "shadows": "brian2.parsing.rendering.NumpyNodeRenderer"
  },
  "type": "import"
 },
 "brian2.codegen.generators.numpy_generator.VectorisationError": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.generators.numpy_generator.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "brian2.codegen.generators.numpy_generator.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.generators.numpy_generator.brian_dtype_from_dtype": {
  "data": {
   "shadows": "brian2.parsing.bast.brian_dtype_from_dtype"
  },
  "type": "import"
 },
 "brian2.codegen.generators.numpy_generator.ceil_func": {
  "data": {
   "lineno": 340
  },
  "type": "constant"
 },
 "brian2.codegen.generators.numpy_generator.clip_func": {
  "data": {
   "lineno": 334
  },
  "type": "constant"
 },
 "brian2.codegen.generators.numpy_generator.device": {
  "data": {
   "shadows": "brian2.devices.device.device"
  },
  "type": "import"
 },
 "brian2.codegen.generators.numpy_generator.floor_func": {
  "data": {
   "lineno": 343
  },
  "type": "constant"
 },
 "brian2.codegen.generators.numpy_generator.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.codegen.generators.numpy_generator.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.codegen.generators.numpy_generator.indent": {
  "data": {
   "shadows": "brian2.utils.stringtools.indent"
  },
  "type": "import"
 },
 "brian2.codegen.generators.numpy_generator.int_func": {
  "data": {
   "lineno": 337
  },
  "type": "constant"
 },
 "brian2.codegen.generators.numpy_generator.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "brian2.codegen.generators.numpy_generator.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "brian2.codegen.generators.numpy_generator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.codegen.generators.numpy_generator.poisson_func": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.random.poisson"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.rand_func": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.randn_func": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "numpy.random.randn"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "brian2.codegen.generators.numpy_generator.timestep": {
  "data": {
   "shadows": "brian2.core.functions.timestep"
  },
  "type": "import"
 },
 "brian2.codegen.generators.numpy_generator.word_substitute": {
  "data": {
   "shadows": "brian2.utils.stringtools.word_substitute"
  },
  "type": "import"
 },
 "brian2.codegen.generators.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.codegen.get_cpu_flags": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.codegen.get_cpu_flags.cpuinfo",
    "brian2.codegen.get_cpu_flags.flags",
    "brian2.codegen.get_cpu_flags.json",
    "print"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.get_cpu_flags.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.get_cpu_flags.cpuinfo": {
  "data": {
   "shadows": "cpuinfo"
  },
  "type": "import"
 },
 "brian2.codegen.get_cpu_flags.flags": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "brian2.codegen.get_cpu_flags.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "brian2.codegen.get_cpu_flags.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation": {
  "data": {
   "symbols_in_volume": [
    "brian2.codegen.optimisation.defaults_ns",
    "brian2.core.functions.DEFAULT_CONSTANTS.items",
    "brian2.core.functions.DEFAULT_FUNCTIONS.items",
    "dict"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.optimisation.ArithmeticSimplifier": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "brian2.parsing.bast.BrianASTRenderer"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.optimisation.ArithmeticSimplifier.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "brian2.codegen.optimisation.defaults_ns",
    "brian2.parsing.bast.BrianASTRenderer",
    "brian2.parsing.bast.BrianASTRenderer.__init__",
    "dict"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.optimisation.ArithmeticSimplifier.render_BinOp": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "brian2.codegen.optimisation.ArithmeticSimplifier",
    "brian2.codegen.optimisation._replace_with_zero",
    "brian2.codegen.optimisation.collect",
    "brian2.core.preferences.prefs.core.default_float_dtype",
    "brian2.parsing.bast.dtype_hierarchy",
    "brian2.parsing.rendering.get_node_value",
    "hasattr",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.optimisation.ArithmeticSimplifier.render_node": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "bool",
    "brian2.codegen.optimisation.ArithmeticSimplifier",
    "brian2.codegen.optimisation.ast",
    "brian2.codegen.optimisation.evaluate_expr",
    "brian2.core.preferences.prefs.core.default_float_dtype",
    "brian2.parsing.rendering.NodeRenderer",
    "hasattr",
    "int",
    "repr",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.optimisation.AuxiliaryVariable": {
  "data": {
   "shadows": "brian2.core.variables.AuxiliaryVariable"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.BrianASTRenderer": {
  "data": {
   "shadows": "brian2.parsing.bast.BrianASTRenderer"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.DEFAULT_CONSTANTS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_CONSTANTS"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.DIMENSIONLESS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DIMENSIONLESS"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.NodeRenderer": {
  "data": {
   "shadows": "brian2.parsing.rendering.NodeRenderer"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.Simplifier": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "brian2.parsing.bast.BrianASTRenderer"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.optimisation.Simplifier.__init__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "brian2.codegen.optimisation.ArithmeticSimplifier",
    "brian2.parsing.bast.BrianASTRenderer.__init__",
    "brian2.parsing.rendering.NodeRenderer",
    "collections.OrderedDict",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.optimisation.Simplifier.render_expr": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "brian2.parsing.bast.brian_ast"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.optimisation.Simplifier.render_node": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "bool",
    "brian2.codegen.optimisation.Simplifier",
    "brian2.codegen.optimisation.ast",
    "brian2.core.preferences.prefs.core.default_float_dtype",
    "brian2.core.variables.AuxiliaryVariable",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.optimisation.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "brian2.codegen.optimisation._replace_with_zero": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "brian2.core.preferences.prefs.core.default_float_dtype"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.optimisation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.brian_ast": {
  "data": {
   "shadows": "brian2.parsing.bast.brian_ast"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.brian_dtype_from_dtype": {
  "data": {
   "shadows": "brian2.parsing.bast.brian_dtype_from_dtype"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.brian_dtype_from_value": {
  "data": {
   "shadows": "brian2.parsing.bast.brian_dtype_from_value"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.cancel_identical_terms": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "brian2.parsing.rendering.NodeRenderer",
    "dict"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.optimisation.collect": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "brian2.codegen.optimisation.ast",
    "brian2.codegen.optimisation.cancel_identical_terms",
    "brian2.codegen.optimisation.collect_commutative",
    "brian2.codegen.optimisation.reduced_node",
    "brian2.core.preferences.prefs.core.default_float_dtype",
    "brian2.parsing.bast.dtype_hierarchy",
    "hasattr",
    "int",
    "op_inverted",
    "op_primary",
    "op_py_inverted",
    "op_py_primary"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.optimisation.collect_commutative": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "hasattr",
    "op_primary"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.optimisation.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.defaults_ns": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "brian2.codegen.optimisation.dtype_hierarchy": {
  "data": {
   "shadows": "brian2.parsing.bast.dtype_hierarchy"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.evaluate_expr": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "NameError",
    "eval"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.optimisation.expression_complexity": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "brian2.parsing.bast.brian_ast"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.optimisation.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.get_node_value": {
  "data": {
   "shadows": "brian2.parsing.rendering.get_node_value"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.optimise_statements": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Statement",
    "bool",
    "brian2.codegen.optimisation.Simplifier",
    "brian2.codegen.optimisation.copy",
    "brian2.codegen.optimisation.expression_complexity",
    "brian2.codegen.optimisation.itertools",
    "brian2.core.preferences.prefs.core.default_float_dtype",
    "brian2.parsing.bast.brian_dtype_from_dtype",
    "brian2.utils.stringtools.get_identifiers",
    "brian2.utils.stringtools.word_substitute",
    "dict",
    "hasattr",
    "int",
    "len",
    "str",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.optimisation.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "brian2.codegen.optimisation.reduced_node": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "brian2.codegen.optimisation.ast",
    "functools.reduce",
    "len",
    "op"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.optimisation.word_substitute": {
  "data": {
   "shadows": "brian2.utils.stringtools.word_substitute"
  },
  "type": "import"
 },
 "brian2.codegen.permutation_analysis": {
  "data": {},
  "type": "module"
 },
 "brian2.codegen.permutation_analysis.Constant": {
  "data": {
   "shadows": "brian2.core.variables.Constant"
  },
  "type": "import"
 },
 "brian2.codegen.permutation_analysis.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.codegen.permutation_analysis.OrderDependenceError": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.permutation_analysis.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "brian2.codegen.permutation_analysis.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.permutation_analysis.check_for_order_independence": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "AssertionError",
    "any",
    "brian2.codegen.permutation_analysis.OrderDependenceError",
    "brian2.core.functions.Function",
    "brian2.core.variables.Constant",
    "brian2.utils.stringtools.get_identifiers",
    "getattr",
    "isinstance",
    "list",
    "set",
    "unique_index"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.permutation_analysis.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.codegen.runtime": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian2.core.preferences.prefs.register_preferences",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.runtime.GSLcython_rt": {
  "data": {},
  "type": "module"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt": {
  "data": {},
  "type": "module"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.CompileError": {
  "data": {
   "shadows": "distutils.errors.CompileError"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.GSLCompileError": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.GSLCythonCodeObject": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.GSLCythonCodeObject.compile": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.GSLCompileError",
    "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.GSLCythonCodeObject",
    "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.sys",
    "brian2.core.preferences.prefs.GSL.directory",
    "distutils.errors.CompileError",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.IntegrationError": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.GSLweave_rt": {
  "data": {},
  "type": "module"
 },
 "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "weave.build_tools.CompileError"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt.CompileError": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt.GSLCompileError": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt.GSLWeaveCodeObject": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt.GSLWeaveCodeObject.run": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ImportError",
    "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt.GSLCompileError",
    "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt.GSLWeaveCodeObject",
    "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt.sys",
    "brian2.core.preferences.prefs.GSL.directory",
    "super",
    "weave.build_tools.CompileError"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt": {
  "data": {},
  "type": "module"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject",
    "brian2.core.preferences.BrianPreference",
    "brian2.core.preferences.prefs.register_preferences",
    "brian2.utils.logger.get_logger",
    "isinstance",
    "str"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.ArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.ArrayVariable"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.AuxiliaryVariable": {
  "data": {
   "shadows": "brian2.core.variables.AuxiliaryVariable"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.BrianPreference": {
  "data": {
   "shadows": "brian2.core.preferences.BrianPreference"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Templater",
    "brian2.codegen.runtime.cython_rt.cython_rt.numpy"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject",
    "brian2.codegen.runtime.cython_rt.cython_rt.os",
    "brian2.codegen.runtime.cython_rt.cython_rt.sys",
    "brian2.core.preferences.prefs",
    "check_compiler_kwds",
    "get_compiler_and_args",
    "list",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject._insert_func_namespace": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject.compile": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject.is_available": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "Exception",
    "brian2.codegen.runtime.cython_rt.cython_rt.logger",
    "brian2.core.preferences.prefs",
    "classmethod",
    "get_compiler_and_args",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject.run": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject.update_namespace": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject.variables_to_namespace": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "brian2.core.functions.Function",
    "brian2.core.variables.ArrayVariable",
    "brian2.core.variables.AuxiliaryVariable",
    "brian2.core.variables.DynamicArrayVariable",
    "brian2.core.variables.Subexpression",
    "brian2.utils.stringtools.get_identifiers",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.DynamicArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.DynamicArrayVariable"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.Subexpression": {
  "data": {
   "shadows": "brian2.core.variables.Subexpression"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.logger": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian2.codegen.runtime.cython_rt.extension_manager.CythonExtensionManager",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.Cython": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.CythonExtensionManager": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.CythonExtensionManager.__init__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.CythonExtensionManager._clear_distutils_mkpath_cache": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ImportError",
    "distutils.dir_util._path_created.clear"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.CythonExtensionManager._get_build_extension": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ValueError",
    "distutils.command.build_ext.build_ext",
    "distutils.core.Distribution"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.CythonExtensionManager._load_module": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "Cython.Build.cythonize",
    "Cython.Compiler.Errors.CompileError",
    "IOError",
    "OSError",
    "ValueError",
    "brian2.codegen.cpp_prefs.update_for_cross_compilation",
    "brian2.codegen.runtime.cython_rt.extension_manager.glob",
    "brian2.codegen.runtime.cython_rt.extension_manager.imp",
    "brian2.codegen.runtime.cython_rt.extension_manager.logger",
    "brian2.codegen.runtime.cython_rt.extension_manager.numpy",
    "brian2.codegen.runtime.cython_rt.extension_manager.os",
    "brian2.codegen.runtime.cython_rt.extension_manager.shutil",
    "brian2.codegen.runtime.cython_rt.extension_manager.sys",
    "brian2.core.preferences.prefs",
    "brian2.synapses.__file__",
    "brian2.utils.logger.std_silent",
    "dict",
    "distutils.core.Extension",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.CythonExtensionManager._simplify_paths": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "brian2.codegen.runtime.cython_rt.extension_manager.os",
    "brian2.codegen.runtime.cython_rt.extension_manager.simplify_path_env_var"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.CythonExtensionManager.create_extension": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "Cython.Utils.get_cython_cache_dir",
    "IOError",
    "ImportError",
    "OSError",
    "brian2.codegen.runtime.cython_rt.extension_manager.Cython",
    "brian2.codegen.runtime.cython_rt.extension_manager.fcntl",
    "brian2.codegen.runtime.cython_rt.extension_manager.logger",
    "brian2.codegen.runtime.cython_rt.extension_manager.msvcrt",
    "brian2.codegen.runtime.cython_rt.extension_manager.numpy",
    "brian2.codegen.runtime.cython_rt.extension_manager.os",
    "brian2.codegen.runtime.cython_rt.extension_manager.sys",
    "brian2.codegen.runtime.cython_rt.extension_manager.time",
    "brian2.core.preferences.prefs",
    "brian2.utils.stringtools.deindent",
    "md5.md5",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.CythonExtensionManager.so_ext": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.Cython_Build": {
  "data": {
   "shadows": "Cython.Build"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.Cython_Compiler": {
  "data": {
   "shadows": "Cython.Compiler"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.Distribution": {
  "data": {
   "shadows": "distutils.core.Distribution"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.Extension": {
  "data": {
   "shadows": "distutils.core.Extension"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager._path_created": {
  "data": {
   "shadows": "distutils.dir_util._path_created"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.base_cython_cache_dir": {
  "data": {
   "shadows": "Cython.Utils.get_cython_cache_dir"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.build_ext": {
  "data": {
   "shadows": "distutils.command.build_ext.build_ext"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.cython_extension_manager": {
  "data": {
   "lineno": 313
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.deindent": {
  "data": {
   "shadows": "brian2.utils.stringtools.deindent"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.fcntl": {
  "data": {
   "shadows": "fcntl"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.get_cython_cache_dir": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "Cython.Utils.get_cython_cache_dir",
    "brian2.codegen.runtime.cython_rt.extension_manager.Cython",
    "brian2.codegen.runtime.cython_rt.extension_manager.os",
    "brian2.core.preferences.prefs.codegen.runtime.cython.cache_dir"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.get_cython_extensions": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.hashlib": {
  "data": {
   "shadows": "md5"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.imp": {
  "data": {
   "shadows": "imp"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.msvcrt": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.simplify_path_env_var": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "brian2.codegen.runtime.cython_rt.extension_manager.os",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.std_silent": {
  "data": {
   "shadows": "brian2.utils.logger.std_silent"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.synapses": {
  "data": {
   "shadows": "brian2.synapses"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.cython_rt.extension_manager.update_for_cross_compilation": {
  "data": {
   "shadows": "brian2.codegen.cpp_prefs.update_for_cross_compilation"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.numpy_rt": {
  "data": {},
  "type": "module"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "brian2.codegen.runtime.numpy_rt.numpy_rt.NumpyCodeObject",
    "brian2.core.preferences.BrianPreference",
    "brian2.core.preferences.prefs.register_preferences"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.ArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.ArrayVariable"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.AuxiliaryVariable": {
  "data": {
   "shadows": "brian2.core.variables.AuxiliaryVariable"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.BrianPreference": {
  "data": {
   "shadows": "brian2.core.preferences.BrianPreference"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.DynamicArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.DynamicArrayVariable"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.LazyArange": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "collections.Iterable"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.LazyArange.__add__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "NotImplemented",
    "brian2.codegen.runtime.numpy_rt.numpy_rt.LazyArange",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.LazyArange.__array__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.LazyArange.__getitem__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "IndexError",
    "NotImplementedError",
    "TypeError",
    "bool",
    "brian2.codegen.runtime.numpy_rt.numpy_rt.LazyArange",
    "int",
    "isinstance",
    "len",
    "min",
    "numpy.array",
    "numpy.dtype",
    "numpy.int32",
    "numpy.max",
    "numpy.min",
    "numpy.ndarray",
    "numpy.nonzero",
    "slice"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.LazyArange.__init__": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.LazyArange.__iter__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "iter",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.LazyArange.__len__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.LazyArange.__radd__": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.LazyArange.__sub__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "NotImplemented",
    "brian2.codegen.runtime.numpy_rt.numpy_rt.LazyArange",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.NumpyCodeObject": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "Templater"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.NumpyCodeObject.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "brian2.devices.device.get_device",
    "check_compiler_kwds",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.NumpyCodeObject.compile": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "brian2.codegen.runtime.numpy_rt.numpy_rt.NumpyCodeObject",
    "compile",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.NumpyCodeObject.is_available": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.NumpyCodeObject.run": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "Exception",
    "brian2.codegen.runtime.numpy_rt.numpy_rt.sys",
    "brian2.core.base.brian_object_exception",
    "exec"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.NumpyCodeObject.update_namespace": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.NumpyCodeObject.variables_to_namespace": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "TypeError",
    "brian2.core.functions.Function",
    "brian2.core.variables.ArrayVariable",
    "brian2.core.variables.AuxiliaryVariable",
    "brian2.core.variables.DynamicArrayVariable",
    "brian2.core.variables.Subexpression",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.Subexpression": {
  "data": {
   "shadows": "brian2.core.variables.Subexpression"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.brian_object_exception": {
  "data": {
   "shadows": "brian2.core.base.brian_object_exception"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.numpy_rt.numpy_rt.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt": {
  "data": {},
  "type": "module"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian2.codegen.runtime.weave_rt.weave_rt.WeaveCodeObject",
    "brian2.codegen.runtime.weave_rt.weave_rt.device",
    "brian2.codegen.runtime.weave_rt.weave_rt.numpy",
    "brian2.codegen.runtime.weave_rt.weave_rt.rand_code",
    "brian2.codegen.runtime.weave_rt.weave_rt.randn_code",
    "brian2.core.functions.DEFAULT_FUNCTIONS.implementations.add_implementation",
    "brian2.devices.device.all_devices",
    "brian2.utils.logger.get_logger",
    "scipy.weave"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.ArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.ArrayVariable"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.AuxiliaryVariable": {
  "data": {
   "shadows": "brian2.core.variables.AuxiliaryVariable"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.DynamicArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.DynamicArrayVariable"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.Subexpression": {
  "data": {
   "shadows": "brian2.core.variables.Subexpression"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.WeaveCodeGenerator": {
  "data": {
   "lineno": 78
  },
  "type": "class"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.WeaveCodeGenerator.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "brian2.codegen.runtime.weave_rt.weave_rt.WeaveCodeGenerator",
    "brian2.codegen.runtime.weave_rt.weave_rt.weave_data_type",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.WeaveCodeObject": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "Templater",
    "brian2.codegen.runtime.weave_rt.weave_rt.WeaveCodeGenerator",
    "brian2.codegen.runtime.weave_rt.weave_rt.numpy",
    "brian2.codegen.runtime.weave_rt.weave_rt.weave_data_type"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.WeaveCodeObject.__init__": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "brian2.codegen.codeobject.check_compiler_kwds",
    "brian2.codegen.runtime.weave_rt.weave_rt.WeaveCodeObject",
    "brian2.codegen.runtime.weave_rt.weave_rt.logger",
    "brian2.codegen.runtime.weave_rt.weave_rt.numpy",
    "brian2.codegen.runtime.weave_rt.weave_rt.os",
    "brian2.codegen.runtime.weave_rt.weave_rt.sys",
    "brian2.core.preferences.prefs",
    "brian2.devices.device.get_device",
    "brian2.synapses.__file__",
    "get_compiler_and_args",
    "list",
    "super",
    "update_for_cross_compilation"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.WeaveCodeObject._insert_func_namespace": {
  "data": {
   "lineno": 208
  },
  "type": "function"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.WeaveCodeObject.compile": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "compile",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.WeaveCodeObject.is_available": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "Exception",
    "brian2.codegen.runtime.weave_rt.weave_rt.logger",
    "brian2.core.preferences.prefs",
    "brian2.utils.logger.std_silent",
    "classmethod",
    "get_compiler_and_args",
    "scipy.weave.inline",
    "str",
    "update_for_cross_compilation"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.WeaveCodeObject.run": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "brian2.utils.logger.std_silent",
    "dict",
    "exec",
    "list",
    "scipy.weave.inline",
    "weave.inline_tools.function_cache"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.WeaveCodeObject.update_namespace": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "func"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.WeaveCodeObject.variables_to_namespace": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "brian2.core.functions.Function",
    "brian2.core.variables.ArrayVariable",
    "brian2.core.variables.AuxiliaryVariable",
    "brian2.core.variables.DynamicArrayVariable",
    "brian2.core.variables.Subexpression",
    "brian2.utils.stringtools.get_identifiers",
    "functools.reduce",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.__all__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.all_devices": {
  "data": {
   "shadows": "brian2.devices.device.all_devices"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.check_compiler_kwds": {
  "data": {
   "shadows": "brian2.codegen.codeobject.check_compiler_kwds"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.default_dir": {
  "data": {
   "shadows": "weave.catalog.default_dir"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.device": {
  "data": {
   "lineno": 336
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.function_cache": {
  "data": {
   "shadows": "weave.inline_tools.function_cache"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.get_weave_cache_dir": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "scipy.weave",
    "weave.catalog.default_dir"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.get_weave_extensions": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.num_to_c_types": {
  "data": {
   "shadows": "weave.c_spec.num_to_c_types"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.rand_code": {
  "data": {
   "lineno": 384
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.randn_code": {
  "data": {
   "lineno": 338
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.std_silent": {
  "data": {
   "shadows": "brian2.utils.logger.std_silent"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.synapses": {
  "data": {
   "shadows": "brian2.synapses"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.weave": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "brian2.codegen.runtime.weave_rt.weave_rt.weave_data_type": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "TypeError",
    "brian2.codegen.runtime.weave_rt.weave_rt.numpy",
    "float",
    "int",
    "weave.c_spec.num_to_c_types"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.statements": {
  "data": {},
  "type": "module"
 },
 "brian2.codegen.statements.Statement": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.statements.Statement.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.statements.Statement.__str__": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.targets": {
  "data": {
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.targets.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "brian2.codegen.targets.codegen_targets": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "brian2.codegen.templates": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.templates.AUTOINDENT_END": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "brian2.codegen.templates.AUTOINDENT_START": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "brian2.codegen.templates.ChoiceLoader": {
  "data": {
   "shadows": "jinja2.ChoiceLoader"
  },
  "type": "import"
 },
 "brian2.codegen.templates.CodeObjectTemplate": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.templates.CodeObjectTemplate.__call__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "brian2.codegen.templates.MultiTemplate",
    "brian2.codegen.templates.autoindent_postfilter",
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.templates.CodeObjectTemplate.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "brian2.codegen.templates.re",
    "brian2.utils.stringtools.get_identifiers",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.templates.Environment": {
  "data": {
   "shadows": "jinja2.Environment"
  },
  "type": "import"
 },
 "brian2.codegen.templates.LazyTemplateLoader": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.templates.LazyTemplateLoader.__init__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "brian2.codegen.templates.LazyTemplateLoader.get_template": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "KeyError",
    "brian2.codegen.templates.CodeObjectTemplate",
    "jinja2.TemplateNotFound"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.templates.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "brian2.codegen.templates.MultiTemplate": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "collections.Mapping"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.templates.MultiTemplate.__getitem__": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "brian2.codegen.templates.MultiTemplate.__init__": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "brian2.codegen.templates.autoindent_postfilter",
    "f",
    "setattr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.templates.MultiTemplate.__iter__": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.templates.MultiTemplate.__len__": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.templates.MultiTemplate.__str__": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "brian2.utils.stringtools.indent",
    "brian2.utils.stringtools.strip_empty_lines",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.templates.PackageLoader": {
  "data": {
   "shadows": "jinja2.PackageLoader"
  },
  "type": "import"
 },
 "brian2.codegen.templates.StrictUndefined": {
  "data": {
   "shadows": "jinja2.StrictUndefined"
  },
  "type": "import"
 },
 "brian2.codegen.templates.TemplateNotFound": {
  "data": {
   "shadows": "jinja2.TemplateNotFound"
  },
  "type": "import"
 },
 "brian2.codegen.templates.Templater": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.templates.Templater.__getattr__": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "brian2.codegen.templates.Templater.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "brian2.codegen.templates.LazyTemplateLoader",
    "brian2.codegen.templates.autoindent",
    "brian2.codegen.templates.variables_to_array_names",
    "isinstance",
    "jinja2.ChoiceLoader",
    "jinja2.Environment",
    "jinja2.PackageLoader",
    "jinja2.StrictUndefined",
    "past.builtins.basestring"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.templates.Templater.derive": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "brian2.codegen.templates.Templater",
    "isinstance",
    "past.builtins.basestring"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.templates.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "brian2.codegen.templates.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.templates.autoindent": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "brian2.codegen.templates.AUTOINDENT_END",
    "brian2.codegen.templates.AUTOINDENT_START",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.templates.autoindent_postfilter": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.codegen.templates.AUTOINDENT_END",
    "brian2.codegen.templates.AUTOINDENT_START"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.templates.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.codegen.templates.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.codegen.templates.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.codegen.templates.indent": {
  "data": {
   "shadows": "brian2.utils.stringtools.indent"
  },
  "type": "import"
 },
 "brian2.codegen.templates.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.codegen.templates.strip_empty_lines": {
  "data": {
   "shadows": "brian2.utils.stringtools.strip_empty_lines"
  },
  "type": "import"
 },
 "brian2.codegen.templates.variables_to_array_names": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "brian2.devices.device.get_device"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.translation": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "brian2.codegen.translation.AuxiliaryVariable": {
  "data": {
   "shadows": "brian2.core.variables.AuxiliaryVariable"
  },
  "type": "import"
 },
 "brian2.codegen.translation.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.codegen.translation.LineInfo": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.codegen.translation.LineInfo.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.translation.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "brian2.codegen.translation.STANDARD_IDENTIFIERS": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "brian2.codegen.translation.Subexpression": {
  "data": {
   "shadows": "brian2.core.variables.Subexpression"
  },
  "type": "import"
 },
 "brian2.codegen.translation.Variable": {
  "data": {
   "shadows": "brian2.core.variables.Variable"
  },
  "type": "import"
 },
 "brian2.codegen.translation.__all__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "brian2.codegen.translation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.codegen.translation.analyse_identifiers": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "TypeError",
    "brian2.codegen.translation.STANDARD_IDENTIFIERS",
    "brian2.codegen.translation.get_identifiers_recursively",
    "brian2.codegen.translation.make_statements",
    "brian2.core.variables.AuxiliaryVariable",
    "brian2.core.variables.Variable",
    "brian2.utils.stringtools.get_identifiers",
    "collections.Mapping",
    "dict",
    "isinstance",
    "len",
    "numpy.float64",
    "set",
    "set.union"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.translation.brian_ast": {
  "data": {
   "shadows": "brian2.parsing.bast.brian_ast"
  },
  "type": "import"
 },
 "brian2.codegen.translation.cached": {
  "data": {
   "shadows": "brian2.utils.caching.cached"
  },
  "type": "import"
 },
 "brian2.codegen.translation.deindent": {
  "data": {
   "shadows": "brian2.utils.stringtools.deindent"
  },
  "type": "import"
 },
 "brian2.codegen.translation.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.codegen.translation.get_identifiers_recursively": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "brian2.core.variables.Subexpression",
    "brian2.utils.stringtools.get_identifiers",
    "isinstance",
    "len",
    "set",
    "set.union"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.translation.is_scalar_expression": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "all",
    "brian2.codegen.translation.get_identifiers_recursively",
    "brian2.core.functions.Function",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.translation.make_statements": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "AttributeError",
    "Statement",
    "SyntaxError",
    "all",
    "bool",
    "brian2.codegen.translation.LineInfo",
    "brian2.codegen.translation.get_identifiers_recursively",
    "brian2.codegen.translation.re",
    "brian2.codegen.translation.sympy",
    "brian2.core.preferences.prefs.codegen.loop_invariant_optimisations",
    "brian2.core.variables.AuxiliaryVariable",
    "brian2.core.variables.Subexpression",
    "brian2.parsing.bast.brian_ast",
    "brian2.parsing.statements.parse_statement",
    "brian2.parsing.sympytools.str_to_sympy",
    "brian2.parsing.sympytools.sympy_to_str",
    "brian2.utils.caching.cached",
    "brian2.utils.stringtools.deindent",
    "brian2.utils.stringtools.get_identifiers",
    "brian2.utils.stringtools.strip_empty_lines",
    "brian2.utils.topsort.topsort",
    "dict",
    "getattr",
    "int",
    "isinstance",
    "len",
    "optimise_statements",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.codegen.translation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.codegen.translation.parse_statement": {
  "data": {
   "shadows": "brian2.parsing.statements.parse_statement"
  },
  "type": "import"
 },
 "brian2.codegen.translation.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.codegen.translation.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.codegen.translation.str_to_sympy": {
  "data": {
   "shadows": "brian2.parsing.sympytools.str_to_sympy"
  },
  "type": "import"
 },
 "brian2.codegen.translation.strip_empty_lines": {
  "data": {
   "shadows": "brian2.utils.stringtools.strip_empty_lines"
  },
  "type": "import"
 },
 "brian2.codegen.translation.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.codegen.translation.sympy_to_str": {
  "data": {
   "shadows": "brian2.parsing.sympytools.sympy_to_str"
  },
  "type": "import"
 },
 "brian2.codegen.translation.topsort": {
  "data": {
   "shadows": "brian2.utils.topsort.topsort"
  },
  "type": "import"
 },
 "brian2.conftest": {
  "data": {
   "symbols_in_volume": [
    "brian2.conftest.fake_randn",
    "brian2.core.functions.Function"
   ]
  },
  "type": "module"
 },
 "brian2.conftest.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.conftest.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.conftest.brian2": {
  "data": {
   "shadows": "brian2"
  },
  "type": "import"
 },
 "brian2.conftest.defaultclock": {
  "data": {
   "shadows": "brian2.core.clocks.defaultclock"
  },
  "type": "import"
 },
 "brian2.conftest.fake_randn": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "brian2.conftest.fake_randn_randn_fixture": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "brian2.conftest.fake_randn",
    "brian2.conftest.pytest",
    "brian2.core.functions.DEFAULT_FUNCTIONS"
   ]
  },
  "type": "function"
 },
 "brian2.conftest.ms": {
  "data": {
   "shadows": "brian2.units.ms"
  },
  "type": "import"
 },
 "brian2.conftest.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.conftest.pytest_ignore_collect": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.conftest.pytest_runtest_makereport": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.conftest.pytest",
    "brian2.devices.device.reinit_and_delete",
    "brian2.devices.reinit_devices",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.conftest.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.conftest.reinit_and_delete": {
  "data": {
   "shadows": "brian2.devices.device.reinit_and_delete"
  },
  "type": "import"
 },
 "brian2.conftest.reinit_devices": {
  "data": {
   "shadows": "brian2.devices.reinit_devices"
  },
  "type": "import"
 },
 "brian2.conftest.set_device": {
  "data": {
   "shadows": "brian2.devices.device.set_device"
  },
  "type": "import"
 },
 "brian2.conftest.setup_and_teardown": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "TypeError",
    "brian2.conftest.brian2",
    "brian2.conftest.pytest",
    "brian2.conftest.re",
    "brian2.core.clocks.defaultclock.dt",
    "brian2.devices.device.set_device",
    "brian2.units.ms",
    "hasattr",
    "isinstance",
    "len",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.set_printoptions",
    "tuple"
   ]
  },
  "type": "function"
 },
 "brian2.core": {
  "data": {},
  "type": "module"
 },
 "brian2.core.base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.core.base.BrianObject": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "brian2.core.names.Nameable",
    "brian2.core.names.Nameable.name",
    "property"
   ]
  },
  "type": "class"
 },
 "brian2.core.base.BrianObject.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "brian2.core.base.logger",
    "brian2.core.base.os",
    "brian2.core.base.sys",
    "brian2.core.base.traceback",
    "brian2.core.clocks.Clock",
    "brian2.core.clocks.defaultclock",
    "brian2.core.names.Nameable.__init__",
    "brian2.devices.device.get_device",
    "brian2.units.allunits.second",
    "brian2.units.fundamentalunits.check_units",
    "getattr",
    "isinstance",
    "past.builtins.basestring",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "brian2.core.base.BrianObject.__repr__": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.core.base.BrianObject._set_active": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "bool"
   ]
  },
  "type": "function"
 },
 "brian2.core.base.BrianObject.add_dependency": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "brian2.groups.subgroup.Subgroup",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.core.base.BrianObject.after_run": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "brian2.core.base.BrianObject.before_run": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "brian2.core.base.BrianObject.run": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "codeobj"
   ]
  },
  "type": "function"
 },
 "brian2.core.base.BrianObjectException": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "brian2.core.base.BrianObjectException.__init__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "brian2.core.base.logger",
    "brian2.core.base.traceback",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.core.base.BrianObjectException.__str__": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "brian2.core.base.Clock": {
  "data": {
   "shadows": "brian2.core.clocks.Clock"
  },
  "type": "import"
 },
 "brian2.core.base.Nameable": {
  "data": {
   "shadows": "brian2.core.names.Nameable"
  },
  "type": "import"
 },
 "brian2.core.base.Subgroup": {
  "data": {
   "shadows": "brian2.groups.subgroup.Subgroup"
  },
  "type": "import"
 },
 "brian2.core.base.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "brian2.core.base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.core.base.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.core.base.brian_object_exception": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "AttributeError",
    "DerivedBrianObjectException",
    "brian2.core.base.BrianObjectException",
    "dir",
    "getattr",
    "setattr",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.core.base.check_units": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.check_units"
  },
  "type": "import"
 },
 "brian2.core.base.defaultclock": {
  "data": {
   "shadows": "brian2.core.clocks.defaultclock"
  },
  "type": "import"
 },
 "brian2.core.base.device_override": {
  "data": {
   "lineno": 264
  },
  "type": "function"
 },
 "brian2.core.base.device_override.device_override_decorator": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "func",
    "func.__doc__"
   ]
  },
  "type": "function"
 },
 "brian2.core.base.device_override.device_override_decorator.device_override_decorated_function": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "brian2.devices.device.get_device",
    "func",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "brian2.core.base.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.core.base.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.core.base.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "brian2.core.base.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.core.base.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.core.base.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.core.base.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "brian2.core.base.weakproxy_with_fallback": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "TypeError",
    "brian2.core.base.weakref"
   ]
  },
  "type": "function"
 },
 "brian2.core.base.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "brian2.core.clocks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.core.clocks.DefaultClockProxy",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.core.clocks.Clock": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "brian2.groups.group.VariableOwner",
    "brian2.units.allunits.second.dim",
    "brian2.units.fundamentalunits.Quantity",
    "property"
   ]
  },
  "type": "class"
 },
 "brian2.core.clocks.Clock.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "brian2.core.clocks.logger",
    "brian2.core.names.Nameable.__init__",
    "brian2.core.variables.Variables",
    "brian2.units.allunits.second.dim",
    "float",
    "numpy.double",
    "numpy.float",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "brian2.core.clocks.Clock.__repr__": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "brian2.core.clocks.Clock._calc_timestep": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "brian2.core.clocks.Clock",
    "numpy.abs",
    "numpy.ceil",
    "numpy.int64",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "brian2.core.clocks.Clock._get_dt_": {
  "data": {
   "lineno": 149
  },
  "type": "function"
 },
 "brian2.core.clocks.Clock._set_dt": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "brian2.units.allunits.second",
    "brian2.units.fundamentalunits.check_units",
    "float"
   ]
  },
  "type": "function"
 },
 "brian2.core.clocks.Clock._set_dt_": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "brian2.units.fundamentalunits.check_units"
   ]
  },
  "type": "function"
 },
 "brian2.core.clocks.Clock._set_t_update_dt": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "brian2.core.clocks.check_dt",
    "brian2.core.clocks.logger",
    "brian2.units.allunits.second",
    "brian2.units.fundamentalunits.check_units",
    "float"
   ]
  },
  "type": "function"
 },
 "brian2.core.clocks.Clock.set_interval": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "brian2.core.clocks.logger",
    "brian2.units.allunits.second",
    "brian2.units.fundamentalunits.check_units",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.core.clocks.DIMENSIONLESS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DIMENSIONLESS"
  },
  "type": "import"
 },
 "brian2.core.clocks.DefaultClockProxy": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.core.clocks.DefaultClockProxy.__getattr__": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "brian2.devices.device.active_device.defaultclock",
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.core.clocks.DefaultClockProxy.__setattr__": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "brian2.devices.device.active_device.defaultclock",
    "setattr"
   ]
  },
  "type": "function"
 },
 "brian2.core.clocks.Nameable": {
  "data": {
   "shadows": "brian2.core.names.Nameable"
  },
  "type": "import"
 },
 "brian2.core.clocks.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.core.clocks.VariableOwner": {
  "data": {
   "shadows": "brian2.groups.group.VariableOwner"
  },
  "type": "import"
 },
 "brian2.core.clocks.Variables": {
  "data": {
   "shadows": "brian2.core.variables.Variables"
  },
  "type": "import"
 },
 "brian2.core.clocks.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "brian2.core.clocks.__docformat__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "brian2.core.clocks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.core.clocks.active_device": {
  "data": {
   "shadows": "brian2.devices.device.active_device"
  },
  "type": "import"
 },
 "brian2.core.clocks.check_dt": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "brian2.units.allunits.second",
    "numpy.int64",
    "numpy.round",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.core.clocks.check_units": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.check_units"
  },
  "type": "import"
 },
 "brian2.core.clocks.defaultclock": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "brian2.core.clocks.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.core.clocks.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "brian2.core.clocks.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.core.clocks.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.core.core_preferences": {
  "data": {
   "symbols_in_volume": [
    "brian2.core.core_preferences.default_float_dtype_validator",
    "brian2.core.core_preferences.dtype_repr",
    "brian2.core.preferences.BrianPreference",
    "brian2.core.preferences.prefs.register_preferences",
    "numpy.float64",
    "numpy.int32"
   ]
  },
  "type": "module"
 },
 "brian2.core.core_preferences.BrianPreference": {
  "data": {
   "shadows": "brian2.core.preferences.BrianPreference"
  },
  "type": "import"
 },
 "brian2.core.core_preferences.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "brian2.core.core_preferences.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.core.core_preferences.default_float_dtype_validator": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "brian2.core.core_preferences.dtype_repr": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "brian2.core.core_preferences.float32": {
  "data": {
   "shadows": "numpy.float32"
  },
  "type": "import"
 },
 "brian2.core.core_preferences.float64": {
  "data": {
   "shadows": "numpy.float64"
  },
  "type": "import"
 },
 "brian2.core.core_preferences.int32": {
  "data": {
   "shadows": "numpy.int32"
  },
  "type": "import"
 },
 "brian2.core.core_preferences.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.core.functions": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "brian2.core.functions.BRIAN_DTYPES",
    "brian2.core.functions.SymbolicConstant",
    "brian2.core.functions.exprel",
    "brian2.core.functions.sympy",
    "brian2.core.functions.timestep",
    "brian2.units.allunits.second",
    "brian2.units.unitsafefunctions.arccos",
    "brian2.units.unitsafefunctions.arcsin",
    "brian2.units.unitsafefunctions.arctan",
    "brian2.units.unitsafefunctions.cos",
    "brian2.units.unitsafefunctions.cosh",
    "brian2.units.unitsafefunctions.exp",
    "brian2.units.unitsafefunctions.expm1",
    "brian2.units.unitsafefunctions.exprel",
    "brian2.units.unitsafefunctions.log",
    "brian2.units.unitsafefunctions.log10",
    "brian2.units.unitsafefunctions.log1p",
    "brian2.units.unitsafefunctions.sin",
    "brian2.units.unitsafefunctions.sinh",
    "brian2.units.unitsafefunctions.tan",
    "brian2.units.unitsafefunctions.tanh",
    "numpy.abs",
    "numpy.ceil",
    "numpy.clip",
    "numpy.e",
    "numpy.floor",
    "numpy.inf",
    "numpy.int_",
    "numpy.pi",
    "numpy.random.poisson",
    "numpy.random.rand",
    "numpy.random.randn",
    "numpy.sign",
    "numpy.sqrt",
    "sympy.Function",
    "sympy.S.Infinity",
    "sympy.S.NegativeInfinity",
    "sympy.codegen.cfunctions.expm1",
    "sympy.codegen.cfunctions.log10",
    "sympy.codegen.cfunctions.log1p"
   ]
  },
  "type": "module"
 },
 "brian2.core.functions.BRIAN_DTYPES": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "brian2.core.functions.Constant": {
  "data": {
   "shadows": "brian2.core.variables.Constant"
  },
  "type": "import"
 },
 "brian2.core.functions.DEFAULT_CONSTANTS": {
  "data": {
   "lineno": 739
  },
  "type": "constant"
 },
 "brian2.core.functions.DEFAULT_FUNCTIONS": {
  "data": {
   "lineno": 678
  },
  "type": "constant"
 },
 "brian2.core.functions.DIMENSIONLESS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DIMENSIONLESS"
  },
  "type": "import"
 },
 "brian2.core.functions.Function": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.core.functions.Function.__call__": {
  "data": {
   "lineno": 221
  },
  "type": "function"
 },
 "brian2.core.functions.Function.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "brian2.core.functions.FunctionImplementationContainer",
    "brian2.core.functions.VALID_ARG_TYPES",
    "brian2.core.functions.VALID_RETURN_TYPES",
    "brian2.units.fundamentalunits.is_dimensionless",
    "getattr",
    "hasattr",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.Function.is_locally_constant": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementation": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.core.functions.FunctionImplementation.__init__": {
  "data": {
   "lineno": 255
  },
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementation.get_code": {
  "data": {
   "lineno": 270
  },
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementation.get_namespace": {
  "data": {
   "lineno": 278
  },
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "collections.Mapping"
   ]
  },
  "type": "class"
 },
 "brian2.core.functions.FunctionImplementationContainer.__getitem__": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "KeyError",
    "brian2.core.functions.inspect",
    "getattr",
    "hasattr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer.__init__": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer.__iter__": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer.__len__": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer.add_dynamic_implementation": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "TypeError",
    "brian2.core.functions.FunctionImplementation",
    "callable",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer.add_implementation": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "brian2.core.functions.FunctionImplementation"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer.add_numpy_implementation": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "brian2.core.functions.FunctionImplementation",
    "brian2.core.functions.types",
    "brian2.core.preferences.prefs",
    "brian2.units.fundamentalunits.Quantity",
    "dict",
    "hasattr",
    "isinstance",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer.add_numpy_implementation.wrapper_function": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "brian2.units.fundamentalunits.DIMENSIONLESS",
    "brian2.units.fundamentalunits.Quantity.with_dimensions",
    "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
    "brian2.units.fundamentalunits.get_dimensions",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "orig_func",
    "orig_func.__name__",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "brian2.core.functions.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.core.functions.S": {
  "data": {
   "shadows": "sympy.S"
  },
  "type": "import"
 },
 "brian2.core.functions.SymbolicConstant": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "brian2.core.variables.Constant"
   ]
  },
  "type": "class"
 },
 "brian2.core.functions.SymbolicConstant.__init__": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "brian2.core.functions.SymbolicConstant",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.VALID_ARG_TYPES": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "brian2.core.functions.VALID_RETURN_TYPES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "brian2.core.functions.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "brian2.core.functions._exprel": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "brian2.core.functions.sympy",
    "sympy.S.One"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions._infinity_int": {
  "data": {
   "lineno": 642
  },
  "type": "constant"
 },
 "brian2.core.functions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.core.functions.declare_types": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "brian2.core.functions.declare_types.annotate_function_with_types": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "brian2.core.functions.VALID_ARG_TYPES",
    "brian2.core.functions.VALID_RETURN_TYPES",
    "brian2.core.functions.types",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.exprel": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "sympy.Function"
   ]
  },
  "type": "class"
 },
 "brian2.core.functions.exprel._eval_expand_func": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "brian2.core.functions._exprel"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.exprel._eval_is_finite": {
  "data": {
   "lineno": 639
  },
  "type": "function"
 },
 "brian2.core.functions.exprel._eval_is_real": {
  "data": {
   "lineno": 636
  },
  "type": "function"
 },
 "brian2.core.functions.exprel._eval_rewrite_as_exp": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "brian2.core.functions.sympy",
    "sympy.S.One"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.exprel.eval": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "brian2.core.functions.sympy",
    "classmethod",
    "sympy.S.One"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.exprel.fdiff": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "brian2.core.functions.sympy",
    "sympy.S.One"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.fail_for_dimension_mismatch": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.fail_for_dimension_mismatch"
  },
  "type": "import"
 },
 "brian2.core.functions.get_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_dimensions"
  },
  "type": "import"
 },
 "brian2.core.functions.implementation": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "brian2.core.functions.implementation.do_user_implementation": {
  "data": {
   "lineno": 543,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "sympy.Function"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "brian2.core.functions.is_dimensionless": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.is_dimensionless"
  },
  "type": "import"
 },
 "brian2.core.functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.core.functions.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.core.functions.rand": {
  "data": {
   "shadows": "numpy.random.rand"
  },
  "type": "import"
 },
 "brian2.core.functions.randn": {
  "data": {
   "shadows": "numpy.random.randn"
  },
  "type": "import"
 },
 "brian2.core.functions.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.core.functions.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.core.functions.sympy_Function": {
  "data": {
   "shadows": "sympy.Function"
  },
  "type": "import"
 },
 "brian2.core.functions.sympy_cfunctions": {
  "data": {
   "shadows": "sympy.codegen.cfunctions"
  },
  "type": "import"
 },
 "brian2.core.functions.timestep": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "brian2.core.functions.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "brian2.core.functions.unitsafe": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions"
  },
  "type": "import"
 },
 "brian2.core.magic": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.core.magic.MagicNetwork",
    "brian2.core.magic.run",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.core.magic.MagicError": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "brian2.core.magic.MagicNetwork": {
  "data": {
   "lineno": 86
  },
  "type": "class"
 },
 "brian2.core.magic.MagicNetwork.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "brian2.core.magic.MagicNetwork",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.__str__": {
  "data": {
   "lineno": 273
  },
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork._update_magic_objects": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "brian2.core.magic.MagicError",
    "brian2.core.magic._get_contained_objects",
    "brian2.core.magic.collect",
    "brian2.core.magic.logger",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.add": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "brian2.core.magic.MagicError"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.after_run": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "brian2.core.magic.gc"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.check_dependencies": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "brian2.core.magic.logger"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.get_states": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "brian2.core.magic.MagicNetwork",
    "format",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.remove": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "brian2.core.magic.MagicError"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.restore": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "brian2.core.magic.MagicNetwork",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.run": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "brian2.units.allunits.second"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.set_states": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "brian2.core.magic.MagicNetwork",
    "format",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.store": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "brian2.core.magic.MagicNetwork",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "brian2.core.magic._get_contained_objects": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.core.magic.check_units": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.check_units"
  },
  "type": "import"
 },
 "brian2.core.magic.collect": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "brian2.core.magic.get_objects_in_namespace",
    "obj",
    "obj._scope_key",
    "obj.add_to_magic_network",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "brian2.core.magic.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.core.magic.get_objects_in_namespace": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "brian2.core.magic.inspect",
    "brian2.core.magic.itertools",
    "brian2.core.magic.weakref",
    "isinstance",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "brian2.core.magic.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "brian2.core.magic.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "brian2.core.magic.magic_network": {
  "data": {
   "lineno": 279
  },
  "type": "constant"
 },
 "brian2.core.magic.restore": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "brian2.core.magic.magic_network"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.run": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "brian2.core.magic.magic_network",
    "brian2.units.allunits.second",
    "brian2.units.fundamentalunits.check_units"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.core.magic.start_scope": {
  "data": {
   "lineno": 441
  },
  "type": "function"
 },
 "brian2.core.magic.stop": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "brian2.core.magic.store": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "brian2.core.magic.magic_network"
   ]
  },
  "type": "function"
 },
 "brian2.core.magic.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "brian2.core.names": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.core.names.Nameable": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "brian2.core.tracking.Trackable",
    "id",
    "property"
   ]
  },
  "type": "class"
 },
 "brian2.core.names.Nameable.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.core.names.find_name",
    "brian2.core.names.logger",
    "brian2.core.names.re",
    "getattr",
    "isinstance",
    "past.builtins.basestring",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.core.names.Nameable.assign_id": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "brian2.core.names.uuid"
   ]
  },
  "type": "function"
 },
 "brian2.core.names.Trackable": {
  "data": {
   "shadows": "brian2.core.tracking.Trackable"
  },
  "type": "import"
 },
 "brian2.core.names.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "brian2.core.names.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.core.names.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.core.names.find_name": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "hasattr",
    "obj",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.core.names.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.core.names.logger": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "brian2.core.names.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.core.names.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "brian2.core.namespace": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.core.namespace._get_default_unit_namespace",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.core.namespace.DEFAULT_CONSTANTS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_CONSTANTS"
  },
  "type": "import"
 },
 "brian2.core.namespace.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.core.namespace.DEFAULT_UNITS": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "brian2.core.namespace.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "brian2.core.namespace._get_default_unit_namespace": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "brian2.core.namespace.collections",
    "brian2.units.fundamentalunits.additional_unit_register.units.items",
    "brian2.units.fundamentalunits.standard_unit_register.units",
    "brian2.units.stdunits.stdunits",
    "dict"
   ]
  },
  "type": "function"
 },
 "brian2.core.namespace.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.core.namespace.additional_unit_register": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.additional_unit_register"
  },
  "type": "import"
 },
 "brian2.core.namespace.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "brian2.core.namespace.get_local_namespace": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "brian2.core.namespace.inspect",
    "brian2.core.namespace.itertools",
    "dict",
    "range"
   ]
  },
  "type": "function"
 },
 "brian2.core.namespace.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.core.namespace.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "brian2.core.namespace.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "brian2.core.namespace.logger": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "brian2.core.namespace.standard_unit_register": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.standard_unit_register"
  },
  "type": "import"
 },
 "brian2.core.namespace.stdunits": {
  "data": {
   "shadows": "brian2.units.stdunits.stdunits"
  },
  "type": "import"
 },
 "brian2.core.network": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian2.core.preferences.BrianPreference",
    "brian2.core.preferences.prefs.register_preferences",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.core.network.BrianObject": {
  "data": {
   "shadows": "brian2.core.base.BrianObject"
  },
  "type": "import"
 },
 "brian2.core.network.BrianPreference": {
  "data": {
   "shadows": "brian2.core.preferences.BrianPreference"
  },
  "type": "import"
 },
 "brian2.core.network.Clock": {
  "data": {
   "shadows": "brian2.core.clocks.Clock"
  },
  "type": "import"
 },
 "brian2.core.network.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "brian2.core.network.Group": {
  "data": {
   "shadows": "brian2.groups.group.Group"
  },
  "type": "import"
 },
 "brian2.core.network.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "brian2.core.network.Nameable": {
  "data": {
   "shadows": "brian2.core.names.Nameable"
  },
  "type": "import"
 },
 "brian2.core.network.Network": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "brian2.core.names.Nameable",
    "brian2.units.allunits.second.dim",
    "brian2.units.fundamentalunits.Quantity",
    "property"
   ]
  },
  "type": "class"
 },
 "brian2.core.network.Network.__contains__": {
  "data": {
   "lineno": 449
  },
  "type": "function"
 },
 "brian2.core.network.Network.__delitem__": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.__getitem__": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "isinstance",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.__init__": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "TypeError",
    "brian2.core.names.Nameable.__init__",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.__iter__": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.__len__": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.__repr__": {
  "data": {
   "lineno": 1154,
   "symbols_in_volume": [
    "brian2.core.network._get_all_objects",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network._full_state": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "brian2.core.network._get_all_objects",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network._get_schedule": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "brian2.core.preferences.prefs.core.network.default_schedule",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network._nextclocks": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "abs",
    "brian2.core.clocks.Clock.epsilon_dt",
    "brian2.core.network.time",
    "min"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network._set_schedule": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "any",
    "brian2.core.network.logger",
    "collections.Sequence",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.add": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "brian2.core.base.BrianObject",
    "collections.Mapping",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.after_run": {
  "data": {
   "lineno": 923,
   "symbols_in_volume": [
    "device_override"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.before_run": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "ValueError",
    "brian2.core.base.brian_object_exception",
    "brian2.core.network.Network",
    "brian2.core.network._check_multiple_summed_updaters",
    "brian2.core.network.logger",
    "brian2.core.preferences.prefs.check_all_validated",
    "brian2.devices.device.all_devices.keys",
    "brian2.devices.device.all_devices.values",
    "brian2.devices.device.get_device",
    "collections.Counter",
    "device_override",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.check_dependencies": {
  "data": {
   "lineno": 824,
   "symbols_in_volume": [
    "ValueError",
    "brian2.core.network._get_all_objects"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.get_profiling_info": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "ValueError",
    "device_override",
    "sorted"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.get_states": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "dict",
    "format",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.profiling_info": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.remove": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "TypeError",
    "brian2.core.base.BrianObject",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.restore": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "KeyError",
    "brian2.core.network._get_all_objects",
    "brian2.core.network.pickle",
    "brian2.devices.device.get_device",
    "device_override",
    "hasattr",
    "len",
    "open",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.run": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.core.namespace.get_local_namespace",
    "brian2.core.network.Network",
    "brian2.core.network.TextReport",
    "brian2.core.network.logger",
    "brian2.core.network.profiling_summary",
    "brian2.core.network.sys",
    "brian2.core.network.time",
    "brian2.devices.device.get_device",
    "brian2.groups.group.Group",
    "brian2.units.allunits.second",
    "brian2.units.fundamentalunits.check_units",
    "callable",
    "collections.defaultdict",
    "device_override",
    "float",
    "isinstance",
    "len",
    "list",
    "report_callback",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.scheduling_summary": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "brian2.core.network.SchedulingSummary"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.set_states": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "KeyError",
    "format"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.sorted_objects": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "brian2.core.network._get_all_objects",
    "dict",
    "enumerate",
    "property",
    "sorted"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.stop": {
  "data": {
   "lineno": 1145,
   "symbols_in_volume": [
    "device_override"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Network.store": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "brian2.core.network._get_all_objects",
    "brian2.core.network.os",
    "brian2.core.network.pickle",
    "brian2.devices.device.get_device",
    "device_override",
    "open"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.ProfilingSummary": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.core.network.ProfilingSummary.__init__": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "brian2.core.network.time",
    "brian2.units.allunits.msecond",
    "brian2.units.allunits.second",
    "len",
    "list",
    "max",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.ProfilingSummary.__repr__": {
  "data": {
   "lineno": 1201,
   "symbols_in_volume": [
    "brian2.core.network.time",
    "len",
    "max",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.ProfilingSummary._repr_html_": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "brian2.core.network.time",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.core.network.RuntimeDevice": {
  "data": {
   "shadows": "brian2.devices.device.RuntimeDevice"
  },
  "type": "import"
 },
 "brian2.core.network.SchedulingSummary": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.core.network.SchedulingSummary.__init__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ScheduleEntry",
    "collections.namedtuple",
    "dict",
    "enumerate",
    "float",
    "getattr",
    "int",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.SchedulingSummary.__repr__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "brian2.core.network._format_table",
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.SchedulingSummary._repr_html_": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "float",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.Sequence": {
  "data": {
   "shadows": "collections.Sequence"
  },
  "type": "import"
 },
 "brian2.core.network.SummedVariableUpdater": {
  "data": {
   "shadows": "brian2.synapses.synapses.SummedVariableUpdater"
  },
  "type": "import"
 },
 "brian2.core.network.TextReport": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.core.network.TextReport.__call__": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "brian2.core.network._format_time",
    "float",
    "int",
    "round",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.TextReport.__init__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "brian2.core.network.__all__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "brian2.core.network._check_multiple_summed_updaters": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.synapses.synapses.SummedVariableUpdater",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.core.network._format_table": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "format",
    "format.format",
    "len",
    "list",
    "max",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.core.network._format_time": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "int",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.core.network._get_all_objects": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.core.network.all_devices": {
  "data": {
   "shadows": "brian2.devices.device.all_devices"
  },
  "type": "import"
 },
 "brian2.core.network.brian_object_exception": {
  "data": {
   "shadows": "brian2.core.base.brian_object_exception"
  },
  "type": "import"
 },
 "brian2.core.network.check_units": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.check_units"
  },
  "type": "import"
 },
 "brian2.core.network.defaultclock": {
  "data": {
   "shadows": "brian2.core.clocks.defaultclock"
  },
  "type": "import"
 },
 "brian2.core.network.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "brian2.core.network.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.core.network.get_local_namespace": {
  "data": {
   "shadows": "brian2.core.namespace.get_local_namespace"
  },
  "type": "import"
 },
 "brian2.core.network.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.core.network.logger": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "brian2.core.network.magic_network": {
  "data": {
   "shadows": "brian2.core.magic.magic_network"
  },
  "type": "import"
 },
 "brian2.core.network.msecond": {
  "data": {
   "shadows": "brian2.units.allunits.msecond"
  },
  "type": "import"
 },
 "brian2.core.network.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "brian2.core.network.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.core.network.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "brian2.core.network.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.core.network.profiling_summary": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "brian2.core.network.ProfilingSummary"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.schedule_propagation_offset": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.magic.magic_network",
    "brian2.devices.device.get_device",
    "brian2.units.allunits.second"
   ]
  },
  "type": "function"
 },
 "brian2.core.network.scheduling_summary": {
  "data": {
   "lineno": 1252
  },
  "type": "function"
 },
 "brian2.core.network.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.core.network.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.core.network.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "brian2.core.operations": {
  "data": {},
  "type": "module"
 },
 "brian2.core.operations.BrianObject": {
  "data": {
   "shadows": "brian2.core.base.BrianObject"
  },
  "type": "import"
 },
 "brian2.core.operations.NetworkOperation": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "brian2.core.base.BrianObject"
   ]
  },
  "type": "class"
 },
 "brian2.core.operations.NetworkOperation.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError",
    "brian2.core.base.BrianObject.__init__",
    "brian2.core.operations.inspect",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "brian2.core.operations.NetworkOperation.run": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "brian2.core.operations.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "brian2.core.operations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.core.operations.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "brian2.core.operations.network_operation": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "callable",
    "do_network_operation",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.core.operations.network_operation.do_network_operation": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.core.operations.network_operation.do_network_operation.__call__": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "brian2.core.operations.NetworkOperation"
   ]
  },
  "type": "function"
 },
 "brian2.core.operations.network_operation.do_network_operation.__init__": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "brian2.core.spikesource": {
  "data": {},
  "type": "module"
 },
 "brian2.core.spikesource.SpikeSource": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.core.spikesource.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "brian2.core.tracking": {
  "data": {},
  "type": "module"
 },
 "brian2.core.tracking.InstanceFollower": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "brian2.core.tracking.InstanceTrackerSet",
    "collections.defaultdict",
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.core.tracking.InstanceFollower.add": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "brian2.core.tracking.InstanceFollower.get": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "brian2.core.tracking.InstanceTrackerSet": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "class"
 },
 "brian2.core.tracking.InstanceTrackerSet.add": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "set.add",
    "weakref.ref"
   ]
  },
  "type": "function"
 },
 "brian2.core.tracking.InstanceTrackerSet.remove": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "KeyError",
    "set.remove"
   ]
  },
  "type": "function"
 },
 "brian2.core.tracking.Trackable": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "brian2.core.tracking.InstanceFollower",
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.core.tracking.Trackable.__instances__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "brian2.core.tracking.Trackable.__new__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object.__new__"
   ]
  },
  "type": "function"
 },
 "brian2.core.tracking.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "brian2.core.tracking.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.core.tracking.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "brian2.core.tracking.ref": {
  "data": {
   "shadows": "weakref.ref"
  },
  "type": "import"
 },
 "brian2.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "brian2.devices": {
  "data": {},
  "type": "module"
 },
 "brian2.devices.cpp_standalone": {
  "data": {},
  "type": "module"
 },
 "brian2.devices.cpp_standalone.GSLcodeobject": {
  "data": {},
  "type": "module"
 },
 "brian2.devices.cpp_standalone.GSLcodeobject.CPPCodeGenerator": {
  "data": {
   "shadows": "brian2.codegen.generators.cpp_generator.CPPCodeGenerator"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.GSLcodeobject.CPPStandaloneCodeObject": {
  "data": {
   "shadows": "brian2.devices.cpp_standalone.CPPStandaloneCodeObject"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.GSLcodeobject.CodeObject": {
  "data": {
   "shadows": "brian2.codegen.codeobject.CodeObject"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.GSLcodeobject.GSLCPPStandaloneCodeObject": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "brian2.codegen.codeobject.CodeObject",
    "brian2.codegen.generators.GSLWeaveCodeGenerator",
    "brian2.codegen.generators.cpp_generator.CPPCodeGenerator",
    "brian2.devices.cpp_standalone.CPPStandaloneCodeObject.templater.derive"
   ]
  },
  "type": "class"
 },
 "brian2.devices.cpp_standalone.GSLcodeobject.GSLWeaveCodeGenerator": {
  "data": {
   "shadows": "brian2.codegen.generators.GSLWeaveCodeGenerator"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.GSLcodeobject.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.codeobject": {
  "data": {
   "symbols_in_volume": [
    "brian2.codegen.targets.codegen_targets.add",
    "brian2.core.functions.DEFAULT_FUNCTIONS.implementations",
    "brian2.devices.cpp_standalone.codeobject.CPPStandaloneCodeObject",
    "brian2.devices.cpp_standalone.codeobject.generate_rand_code",
    "brian2.devices.cpp_standalone.codeobject.rand_impls",
    "brian2.devices.cpp_standalone.codeobject.randn_impls"
   ]
  },
  "type": "module"
 },
 "brian2.devices.cpp_standalone.codeobject.CPPCodeGenerator": {
  "data": {
   "shadows": "brian2.codegen.generators.cpp_generator.CPPCodeGenerator"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.codeobject.CPPStandaloneCodeObject": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "brian2.codegen.codeobject.CodeObject",
    "brian2.codegen.codeobject.constant_or_scalar",
    "brian2.codegen.generators.cpp_generator.CPPCodeGenerator",
    "brian2.codegen.generators.cpp_generator.c_data_type",
    "brian2.codegen.templates.Templater",
    "brian2.core.preferences.prefs",
    "brian2.devices.cpp_standalone.codeobject.openmp_pragma",
    "zip"
   ]
  },
  "type": "class"
 },
 "brian2.devices.cpp_standalone.codeobject.CPPStandaloneCodeObject.__call__": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.codeobject.CPPStandaloneCodeObject.run": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "brian2.devices.device.get_device"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.codeobject.CodeObject": {
  "data": {
   "shadows": "brian2.codegen.codeobject.CodeObject"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.codeobject.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.codeobject.Templater": {
  "data": {
   "shadows": "brian2.codegen.templates.Templater"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.codeobject.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "brian2.devices.cpp_standalone.codeobject.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.codeobject.c_data_type": {
  "data": {
   "shadows": "brian2.codegen.generators.cpp_generator.c_data_type"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.codeobject.codegen_targets": {
  "data": {
   "shadows": "brian2.codegen.targets.codegen_targets"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.codeobject.constant_or_scalar": {
  "data": {
   "shadows": "brian2.codegen.codeobject.constant_or_scalar"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.codeobject.generate_rand_code": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "AssertionError",
    "brian2.core.preferences.prefs.devices.cpp_standalone.openmp_threads",
    "brian2.utils.stringtools.replace"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.codeobject.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.codeobject.openmp_pragma": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "brian2.core.preferences.prefs.devices.cpp_standalone.openmp_threads"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.codeobject.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.codeobject.rand_impls": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "brian2.devices.cpp_standalone.codeobject.randn_impls": {
  "data": {
   "lineno": 144
  },
  "type": "constant"
 },
 "brian2.devices.cpp_standalone.codeobject.replace": {
  "data": {
   "shadows": "brian2.utils.stringtools.replace"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.core.preferences.BrianPreference",
    "brian2.core.preferences.prefs.register_preferences",
    "brian2.devices.cpp_standalone.device.CPPStandaloneDevice",
    "brian2.devices.cpp_standalone.device.cpp_standalone_device",
    "brian2.devices.device.all_devices",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.devices.cpp_standalone.device.BrianObject": {
  "data": {
   "shadows": "brian2.core.base.BrianObject"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.BrianPreference": {
  "data": {
   "shadows": "brian2.core.preferences.BrianPreference"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.CPPNodeRenderer": {
  "data": {
   "shadows": "brian2.parsing.rendering.CPPNodeRenderer"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "brian2.devices.device.Device"
   ]
  },
  "type": "class"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "brian2.devices.cpp_standalone.device.CPPStandaloneDevice",
    "brian2.devices.cpp_standalone.device.os",
    "brian2.devices.cpp_standalone.device.sys",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice._insert_func_namespace": {
  "data": {
   "lineno": 895
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.add_array": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "AssertionError",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.build": {
  "data": {
   "lineno": 1091,
   "symbols_in_volume": [
    "RuntimeError",
    "TypeError",
    "ValueError",
    "brian2.codegen.cpp_prefs.get_compiler_and_args",
    "brian2.core.preferences.prefs",
    "brian2.core.preferences.prefs.devices.cpp_standalone.openmp_threads",
    "brian2.devices.cpp_standalone.device.CPPWriter",
    "brian2.devices.cpp_standalone.device.logger",
    "brian2.devices.cpp_standalone.device.os",
    "brian2.devices.cpp_standalone.device.tempfile",
    "brian2.utils.filetools.ensure_directory",
    "collections.Counter",
    "compile",
    "distutils.ccompiler.gen_lib_options",
    "distutils.ccompiler.gen_preprocess_options",
    "distutils.ccompiler.new_compiler",
    "len",
    "net",
    "net.after_run",
    "net.objects"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.check_openmp_compatible": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "brian2.core.preferences.prefs.devices.cpp_standalone.openmp_spatialneuron_strategy",
    "brian2.devices.cpp_standalone.device.logger"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.code_object": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "brian2.codegen.codeobject.check_compiler_kwds",
    "brian2.core.preferences.prefs",
    "brian2.devices.cpp_standalone.device.CPPStandaloneDevice",
    "dict",
    "getattr",
    "isinstance",
    "set",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.code_object_class": {
  "data": {
   "lineno": 539
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.compile_source": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "AttributeError",
    "IOError",
    "RuntimeError",
    "brian2.codegen.cpp_prefs.get_msvc_env",
    "brian2.core.preferences.prefs",
    "brian2.core.preferences.prefs.devices.cpp_standalone.extra_make_args_unix",
    "brian2.core.preferences.prefs.devices.cpp_standalone.extra_make_args_windows",
    "brian2.core.preferences.prefs.devices.cpp_standalone.openmp_threads",
    "brian2.devices.cpp_standalone.device.CPPStandaloneDevice",
    "brian2.devices.cpp_standalone.device.distutils",
    "brian2.devices.cpp_standalone.device.os",
    "brian2.devices.cpp_standalone.device.struct",
    "brian2.utils.filetools.in_directory",
    "brian2.utils.logger.std_silent",
    "open",
    "print",
    "range",
    "setuptools.msvc.msvc14_get_vc_env",
    "setuptools.msvc.msvc9_find_vcvarsall"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.copy_source_files": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "brian2.devices.cpp_standalone.device.brian2",
    "brian2.devices.cpp_standalone.device.inspect",
    "brian2.devices.cpp_standalone.device.os",
    "brian2.devices.cpp_standalone.device.shutil",
    "brian2.synapses.synapses.Synapses",
    "brian2.utils.filetools.copy_directory"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.delete": {
  "data": {
   "lineno": 1288,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "ValueError",
    "brian2.devices.cpp_standalone.device.logger",
    "brian2.devices.cpp_standalone.device.os",
    "brian2.devices.cpp_standalone.device.shutil",
    "brian2.devices.cpp_standalone.device.sys",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.fill_with_array": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "brian2.parsing.rendering.CPPNodeRenderer",
    "isinstance",
    "numpy.asarray",
    "numpy.empty",
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.find_synapses": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "brian2.core.network.Network.__instances__",
    "brian2.synapses.synapses.Synapses",
    "isinstance",
    "net",
    "net.objects"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.freeze": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.core.preferences.prefs.core.default_float_dtype",
    "brian2.devices.cpp_standalone.device.numbers",
    "brian2.parsing.rendering.CPPNodeRenderer",
    "brian2.utils.stringtools.word_substitute",
    "float",
    "isinstance",
    "numpy.float32",
    "numpy.float64",
    "past.builtins.basestring",
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.generate_codeobj_source": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "TypeError",
    "brian2.codegen.generators.cpp_generator.c_data_type",
    "collections.defaultdict",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.generate_main_source": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.core.preferences.prefs",
    "brian2.core.preferences.prefs.devices.cpp_standalone.openmp_threads",
    "brian2.parsing.rendering.CPPNodeRenderer",
    "float",
    "hasattr",
    "list",
    "openmp_pragma",
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.generate_makefile": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "brian2.devices.cpp_standalone.device.os",
    "open"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.generate_network_source": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.generate_objects_source": {
  "data": {
   "lineno": 632,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.generate_run_source": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.generate_synapses_classes_source": {
  "data": {
   "lineno": 799
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.get_array_filename": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "brian2.devices.cpp_standalone.device.os",
    "hash",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.get_array_name": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.get_value": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "IndexError",
    "NotImplementedError",
    "brian2.devices.cpp_standalone.device.os",
    "isinstance",
    "len",
    "numpy.fromfile",
    "open",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.init_with_arange": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "isinstance",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.init_with_zeros": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "isinstance",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.insert_code": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "brian2.devices.cpp_standalone.device.logger"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.network_get_profiling_info": {
  "data": {
   "lineno": 1524,
   "symbols_in_volume": [
    "ValueError",
    "brian2.devices.cpp_standalone.device.os",
    "brian2.units.second",
    "float",
    "net._profiling_info",
    "net._profiling_info.append",
    "open",
    "sorted"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.network_restore": {
  "data": {
   "lineno": 1520,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.network_run": {
  "data": {
   "lineno": 1387,
   "symbols_in_volume": [
    "NotImplementedError",
    "RuntimeError",
    "TypeError",
    "brian2.core.namespace.get_local_namespace",
    "brian2.devices.cpp_standalone.device.logger",
    "brian2.units.second",
    "float",
    "isinstance",
    "net",
    "net._clocks",
    "net.before_run",
    "net.sorted_objects",
    "net.t",
    "net.t_",
    "numpy.array",
    "past.builtins.basestring",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.network_store": {
  "data": {
   "lineno": 1516,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.reinit": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "brian2.devices.cpp_standalone.device.CPPStandaloneDevice",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.resize": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.run": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "ReferenceError",
    "RuntimeError",
    "brian2.core.preferences.prefs.items",
    "brian2.devices.cpp_standalone.device.itertools",
    "brian2.devices.cpp_standalone.device.logger",
    "brian2.devices.cpp_standalone.device.os",
    "brian2.devices.cpp_standalone.device.subprocess",
    "brian2.groups.group.Group",
    "brian2.utils.filetools.in_directory",
    "float",
    "isinstance",
    "open",
    "print",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.run_function": {
  "data": {
   "lineno": 1537,
   "symbols_in_volume": [
    "brian2.devices.cpp_standalone.device.RunFunctionContext"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.seed": {
  "data": {
   "lineno": 1025
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.static_array": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "len",
    "numpy.atleast_1d",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.variableview_get_subexpression_with_index_array": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.devices.device.reset_device",
    "brian2.devices.device.set_device"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.variableview_get_with_expression": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.variableview_set_with_index_array": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "brian2.parsing.rendering.CPPNodeRenderer",
    "brian2.units.fundamentalunits.Quantity",
    "int",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.repeat",
    "repr",
    "slice"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPStandaloneDevice.write_static_arrays": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "brian2.codegen.generators.cpp_generator.c_data_type",
    "brian2.core.functions.Function",
    "brian2.devices.cpp_standalone.device.logger",
    "brian2.devices.cpp_standalone.device.os",
    "isinstance",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPWriter": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.devices.cpp_standalone.device.CPPWriter.__init__": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.CPPWriter.write": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "brian2.devices.cpp_standalone.device.logger",
    "brian2.devices.cpp_standalone.device.os",
    "open"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.Device": {
  "data": {
   "shadows": "brian2.devices.device.Device"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.Group": {
  "data": {
   "shadows": "brian2.groups.group.Group"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.Network": {
  "data": {
   "shadows": "brian2.core.network.Network"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.RunFunctionContext": {
  "data": {
   "lineno": 1553,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.devices.cpp_standalone.device.RunFunctionContext.__enter__": {
  "data": {
   "lineno": 1557
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.RunFunctionContext.__exit__": {
  "data": {
   "lineno": 1559
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.RunFunctionContext.__init__": {
  "data": {
   "lineno": 1554
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.Synapses": {
  "data": {
   "shadows": "brian2.synapses.synapses.Synapses"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.__all__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "brian2.devices.cpp_standalone.device.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.all_devices": {
  "data": {
   "shadows": "brian2.devices.device.all_devices"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.brian2": {
  "data": {
   "shadows": "brian2"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.c_data_type": {
  "data": {
   "shadows": "brian2.codegen.generators.cpp_generator.c_data_type"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.ccompiler": {
  "data": {
   "shadows": "distutils.ccompiler"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.check_compiler_kwds": {
  "data": {
   "shadows": "brian2.codegen.codeobject.check_compiler_kwds"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.copy_directory": {
  "data": {
   "shadows": "brian2.utils.filetools.copy_directory"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.cpp_standalone_device": {
  "data": {
   "lineno": 1562
  },
  "type": "constant"
 },
 "brian2.devices.cpp_standalone.device.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.distutils": {
  "data": {
   "shadows": "distutils"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.ensure_directory": {
  "data": {
   "shadows": "brian2.utils.filetools.ensure_directory"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.get_compiler_and_args": {
  "data": {
   "shadows": "brian2.codegen.cpp_prefs.get_compiler_and_args"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.get_local_namespace": {
  "data": {
   "shadows": "brian2.core.namespace.get_local_namespace"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.get_msvc_env": {
  "data": {
   "shadows": "brian2.codegen.cpp_prefs.get_msvc_env"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.in_directory": {
  "data": {
   "shadows": "brian2.utils.filetools.in_directory"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.invert_dict": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "brian2.devices.cpp_standalone.device.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.logger": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "brian2.devices.cpp_standalone.device.msvc": {
  "data": {
   "shadows": "setuptools.msvc"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.reset_device": {
  "data": {
   "shadows": "brian2.devices.device.reset_device"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.second": {
  "data": {
   "shadows": "brian2.units.second"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.set_device": {
  "data": {
   "shadows": "brian2.devices.device.set_device"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.std_silent": {
  "data": {
   "shadows": "brian2.utils.logger.std_silent"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "brian2.devices.cpp_standalone.device.word_substitute": {
  "data": {
   "shadows": "brian2.utils.stringtools.word_substitute"
  },
  "type": "import"
 },
 "brian2.devices.device": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.core.preferences.prefs.register_preferences",
    "brian2.devices.device.CurrentDeviceProxy",
    "brian2.devices.device.RuntimeDevice",
    "brian2.devices.device.all_devices",
    "brian2.devices.device.runtime_device",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.devices.device.ArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.ArrayVariable"
  },
  "type": "import"
 },
 "brian2.devices.device.Clock": {
  "data": {
   "shadows": "brian2.core.clocks.Clock"
  },
  "type": "import"
 },
 "brian2.devices.device.CurrentDeviceProxy": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.devices.device.CurrentDeviceProxy.__getattr__": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "AttributeError",
    "brian2.devices.device.Dummy",
    "brian2.devices.device.logger",
    "getattr",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.devices.device.Device.__init__": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "brian2.devices.device.Device._set_maximum_run_time": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "brian2.devices.device.Device.activate": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "brian2.core.clocks.Clock",
    "brian2.units.ms",
    "dict"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.add_array": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.build": {
  "data": {
   "lineno": 355
  },
  "type": "function"
 },
 "brian2.devices.device.Device.code_object": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "brian2.core.names.find_name",
    "brian2.core.preferences.prefs",
    "brian2.core.variables.ArrayVariable",
    "brian2.devices.device.logger",
    "brian2.utils.stringtools.code_representation",
    "brian2.utils.stringtools.indent",
    "codeobj_class",
    "dict",
    "getattr",
    "hasattr",
    "isinstance",
    "template",
    "template.template_source"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.code_object_class": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.codegen.targets.codegen_targets",
    "brian2.core.preferences.prefs",
    "brian2.devices.device.auto_target",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.delete": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "brian2.devices.device.Device.fill_with_array": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.get_array_name": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.get_len": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.get_random_state": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.init_with_arange": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.init_with_zeros": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.insert_code": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "brian2.devices.device.logger"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.insert_device_code": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.reinit": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "brian2.devices.device.Device.resize": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.resize_along_first": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "brian2.devices.device.Device.seed": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.set_random_state": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Device.spike_queue": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Dummy": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.devices.device.Dummy.__call__": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "brian2.devices.device.Dummy"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Dummy.__enter__": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "brian2.devices.device.Dummy"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Dummy.__exit__": {
  "data": {
   "lineno": 548
  },
  "type": "function"
 },
 "brian2.devices.device.Dummy.__getattr__": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "brian2.devices.device.Dummy"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Dummy.__getitem__": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "brian2.devices.device.Dummy"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.Dummy.__setitem__": {
  "data": {
   "lineno": 552
  },
  "type": "function"
 },
 "brian2.devices.device.DynamicArray": {
  "data": {
   "shadows": "brian2.memory.dynamicarray.DynamicArray"
  },
  "type": "import"
 },
 "brian2.devices.device.DynamicArray1D": {
  "data": {
   "shadows": "brian2.memory.dynamicarray.DynamicArray1D"
  },
  "type": "import"
 },
 "brian2.devices.device.DynamicArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.DynamicArrayVariable"
  },
  "type": "import"
 },
 "brian2.devices.device.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.devices.device.NumpyCodeObject": {
  "data": {
   "shadows": "brian2.codegen.runtime.numpy_rt.NumpyCodeObject"
  },
  "type": "import"
 },
 "brian2.devices.device.RuntimeDevice": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "brian2.devices.device.Device"
   ]
  },
  "type": "class"
 },
 "brian2.devices.device.RuntimeDevice.__init__": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "brian2.devices.device.RuntimeDevice",
    "numpy.int32",
    "numpy.intp",
    "numpy.zeros",
    "super",
    "weakref.WeakKeyDictionary"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.add_array": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "brian2.core.variables.DynamicArrayVariable",
    "brian2.memory.dynamicarray.DynamicArray",
    "brian2.memory.dynamicarray.DynamicArray1D",
    "isinstance",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.fill_with_array": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.get_array_name": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "TypeError",
    "brian2.core.variables.ArrayVariable",
    "brian2.core.variables.DynamicArrayVariable",
    "getattr",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.get_random_state": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.get_state"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.get_value": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "brian2.core.variables.DynamicArrayVariable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.init_with_arange": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.init_with_zeros": {
  "data": {
   "lineno": 487
  },
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.resize": {
  "data": {
   "lineno": 481
  },
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.resize_along_first": {
  "data": {
   "lineno": 484
  },
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.seed": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "numpy.random.seed"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.set_random_state": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "numpy.random.set_state"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.set_value": {
  "data": {
   "lineno": 478
  },
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.spike_queue": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "ImportError",
    "brian2.devices.device.logger",
    "brian2.synapses.spikequeue.SpikeQueue"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.SpikeQueue": {
  "data": {
   "shadows": "brian2.synapses.spikequeue.SpikeQueue"
  },
  "type": "import"
 },
 "brian2.devices.device.WeakKeyDictionary": {
  "data": {
   "shadows": "weakref.WeakKeyDictionary"
  },
  "type": "import"
 },
 "brian2.devices.device.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "brian2.devices.device._auto_target": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "brian2.devices.device._do_set_device": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "brian2.devices.device.active_device",
    "brian2.devices.device.all_devices",
    "brian2.devices.device.device",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.devices.device.active_device": {
  "data": {
   "lineno": 577
  },
  "type": "constant"
 },
 "brian2.devices.device.all_devices": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "brian2.devices.device.auto_target": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "brian2.codegen.targets.codegen_targets",
    "brian2.devices.device._auto_target",
    "brian2.devices.device.logger",
    "dict"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.code_representation": {
  "data": {
   "shadows": "brian2.utils.stringtools.code_representation"
  },
  "type": "import"
 },
 "brian2.devices.device.codegen_targets": {
  "data": {
   "shadows": "brian2.codegen.targets.codegen_targets"
  },
  "type": "import"
 },
 "brian2.devices.device.device": {
  "data": {
   "lineno": 575
  },
  "type": "constant"
 },
 "brian2.devices.device.find_name": {
  "data": {
   "shadows": "brian2.core.names.find_name"
  },
  "type": "import"
 },
 "brian2.devices.device.get_device": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "brian2.devices.device.active_device"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.devices.device.indent": {
  "data": {
   "shadows": "brian2.utils.stringtools.indent"
  },
  "type": "import"
 },
 "brian2.devices.device.logger": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "brian2.devices.device.ms": {
  "data": {
   "shadows": "brian2.units.ms"
  },
  "type": "import"
 },
 "brian2.devices.device.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.devices.device.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "brian2.devices.device.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.devices.device.previous_devices": {
  "data": {
   "lineno": 589
  },
  "type": "constant"
 },
 "brian2.devices.device.reinit_and_delete": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "brian2.devices.device.device",
    "brian2.devices.device.reinit_devices"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.reinit_devices": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "brian2.devices.device.active_device",
    "brian2.devices.device.all_devices",
    "brian2.devices.device.device",
    "brian2.devices.device.reset_device",
    "brian2.restore_initial_state"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.reset_device": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "brian2.devices.device._do_set_device",
    "brian2.devices.device.all_devices",
    "brian2.devices.device.device",
    "brian2.devices.device.previous_devices",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.restore_initial_state": {
  "data": {
   "shadows": "brian2.restore_initial_state"
  },
  "type": "import"
 },
 "brian2.devices.device.runtime_device": {
  "data": {
   "lineno": 721
  },
  "type": "constant"
 },
 "brian2.devices.device.seed": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "TypeError",
    "brian2.devices.device.get_device",
    "brian2.devices.device.numbers",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device.set_device": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "brian2.devices.device._do_set_device",
    "brian2.devices.device.active_device",
    "brian2.devices.device.device",
    "brian2.devices.device.previous_devices",
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.devices.device_module": {
  "data": {
   "shadows": "device"
  },
  "type": "import"
 },
 "brian2.equations": {
  "data": {},
  "type": "module"
 },
 "brian2.equations.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "brian2.equations.codestrings": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.equations.codestrings.CodeString": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "collections.Hashable",
    "property"
   ]
  },
  "type": "class"
 },
 "brian2.equations.codestrings.CodeString.__eq__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "NotImplemented",
    "brian2.equations.codestrings.CodeString",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.equations.codestrings.CodeString.__hash__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "brian2.equations.codestrings.CodeString.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "brian2.utils.stringtools.get_identifiers"
   ]
  },
  "type": "function"
 },
 "brian2.equations.codestrings.CodeString.__ne__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "brian2.equations.codestrings.CodeString.__repr__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "brian2.equations.codestrings.CodeString.__str__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "brian2.equations.codestrings.Expression": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "brian2.equations.codestrings.CodeString",
    "property",
    "set"
   ]
  },
  "type": "class"
 },
 "brian2.equations.codestrings.Expression.__eq__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "NotImplemented",
    "brian2.equations.codestrings.Expression",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.equations.codestrings.Expression.__hash__": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "brian2.equations.codestrings.Expression.__init__": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "TypeError",
    "brian2.equations.codestrings.Expression",
    "brian2.parsing.sympytools.str_to_sympy",
    "brian2.parsing.sympytools.sympy_to_str",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.equations.codestrings.Expression.__ne__": {
  "data": {
   "lineno": 193
  },
  "type": "function"
 },
 "brian2.equations.codestrings.Expression._repr_pretty_": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "AssertionError",
    "brian2.parsing.sympytools.str_to_sympy"
   ]
  },
  "type": "function"
 },
 "brian2.equations.codestrings.Expression.split_stochastic": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "AssertionError",
    "ValueError",
    "any",
    "brian2.equations.codestrings.Expression",
    "brian2.equations.codestrings.sympy",
    "brian2.parsing.sympytools.str_to_sympy",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.equations.codestrings.Hashable": {
  "data": {
   "shadows": "collections.Hashable"
  },
  "type": "import"
 },
 "brian2.equations.codestrings.Statements": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "brian2.equations.codestrings.CodeString"
   ]
  },
  "type": "class"
 },
 "brian2.equations.codestrings.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "brian2.equations.codestrings.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.equations.codestrings.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.equations.codestrings.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.equations.codestrings.is_constant_over_dt": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "brian2.equations.codestrings.sympy",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.equations.codestrings.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "brian2.equations.codestrings.str_to_sympy": {
  "data": {
   "shadows": "brian2.parsing.sympytools.str_to_sympy"
  },
  "type": "import"
 },
 "brian2.equations.codestrings.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.equations.codestrings.sympy_to_str": {
  "data": {
   "shadows": "brian2.parsing.sympytools.sympy_to_str"
  },
  "type": "import"
 },
 "brian2.equations.equations": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.DIFF_EQ",
    "brian2.equations.equations.DIFF_OP",
    "brian2.equations.equations.EQUATION",
    "brian2.equations.equations.EXPRESSION",
    "brian2.equations.equations.FLAG",
    "brian2.equations.equations.FLAGS",
    "brian2.equations.equations.IDENTIFIER",
    "brian2.equations.equations.PARAMETER",
    "brian2.equations.equations.PARAMETER_EQ",
    "brian2.equations.equations.STATIC_EQ",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.equations.equations.UNIT",
    "brian2.equations.equations.string",
    "brian2.utils.logger.get_logger",
    "pyparsing.CharsNotIn",
    "pyparsing.Combine",
    "pyparsing.Group",
    "pyparsing.LineEnd",
    "pyparsing.OneOrMore",
    "pyparsing.Optional",
    "pyparsing.Suppress",
    "pyparsing.Word",
    "pyparsing.ZeroOrMore",
    "pyparsing.restOfLine"
   ]
  },
  "type": "module"
 },
 "brian2.equations.equations.BOOLEAN": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "brian2.equations.equations.CacheKey": {
  "data": {
   "shadows": "brian2.utils.caching.CacheKey"
  },
  "type": "import"
 },
 "brian2.equations.equations.CharsNotIn": {
  "data": {
   "shadows": "pyparsing.CharsNotIn"
  },
  "type": "import"
 },
 "brian2.equations.equations.Combine": {
  "data": {
   "shadows": "pyparsing.Combine"
  },
  "type": "import"
 },
 "brian2.equations.equations.DEFAULT_CONSTANTS": {
  "data": {
   "shadows": "brian2.core.namespace.DEFAULT_CONSTANTS"
  },
  "type": "import"
 },
 "brian2.equations.equations.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.namespace.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.equations.equations.DEFAULT_UNITS": {
  "data": {
   "shadows": "brian2.core.namespace.DEFAULT_UNITS"
  },
  "type": "import"
 },
 "brian2.equations.equations.DIFFERENTIAL_EQUATION": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "brian2.equations.equations.DIFF_EQ": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "brian2.equations.equations.DIFF_OP": {
  "data": {
   "lineno": 108
  },
  "type": "constant"
 },
 "brian2.equations.equations.DIMENSIONLESS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DIMENSIONLESS"
  },
  "type": "import"
 },
 "brian2.equations.equations.Dimension": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Dimension"
  },
  "type": "import"
 },
 "brian2.equations.equations.DimensionMismatchError": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DimensionMismatchError"
  },
  "type": "import"
 },
 "brian2.equations.equations.EQUATION": {
  "data": {
   "lineno": 113
  },
  "type": "constant"
 },
 "brian2.equations.equations.EQUATIONS": {
  "data": {
   "lineno": 114
  },
  "type": "constant"
 },
 "brian2.equations.equations.EXPRESSION": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "brian2.equations.equations.EquationError": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "brian2.equations.equations.Equations": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.PARAMETER",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.equations.equations.check_identifier_basic",
    "brian2.equations.equations.check_identifier_constants",
    "brian2.equations.equations.check_identifier_functions",
    "brian2.equations.equations.check_identifier_reserved",
    "brian2.equations.equations.check_identifier_units",
    "collections.Hashable",
    "collections.Mapping",
    "dict",
    "len",
    "property",
    "set",
    "sorted"
   ]
  },
  "type": "class"
 },
 "brian2.equations.equations.Equations.__add__": {
  "data": {
   "lineno": 668,
   "symbols_in_volume": [
    "NotImplemented",
    "brian2.equations.equations.Equations",
    "brian2.equations.equations.parse_string_equations",
    "isinstance",
    "list",
    "past.builtins.basestring"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations.__getitem__": {
  "data": {
   "lineno": 665
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations.__hash__": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "frozenset",
    "hash"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations.__init__": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "TypeError",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.EquationError",
    "brian2.equations.equations.SingleEquation",
    "brian2.equations.equations.parse_string_equations",
    "isinstance",
    "past.builtins.basestring",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations.__iter__": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "iter"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations.__len__": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations.__repr__": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations.__str__": {
  "data": {
   "lineno": 1032,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations._get_stochastic_type": {
  "data": {
   "lineno": 789
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations._latex": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.PARAMETER",
    "brian2.equations.equations.sympy",
    "brian2.parsing.sympytools.str_to_sympy",
    "brian2.units.fundamentalunits.get_unit",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations._repr_latex_": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "brian2.equations.equations.sympy"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations._repr_pretty_": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations._sort_subexpressions": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "ValueError",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.PARAMETER",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.utils.topsort.topsort",
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations._substitute": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "Expression",
    "ValueError",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.EquationError",
    "brian2.equations.equations.Equations",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.equations.equations.SingleEquation",
    "brian2.equations.equations.re",
    "isinstance",
    "len",
    "past.builtins.basestring",
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations.check_flags": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations.check_identifier": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "brian2.equations.equations.Equations",
    "check_func",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations.check_identifiers": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "brian2.equations.equations.Equations"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations.check_units": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "AssertionError",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.PARAMETER",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.units.allunits.second.dim",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "check_dimensions",
    "dict",
    "frozenset",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations.get_substituted_expressions": {
  "data": {
   "lineno": 740,
   "symbols_in_volume": [
    "AssertionError",
    "Expression",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.equations.equations.sympy",
    "brian2.parsing.sympytools.str_to_sympy",
    "brian2.parsing.sympytools.sympy_to_str"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations.register_identifier_check": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "ValueError",
    "brian2.equations.equations.Equations",
    "hasattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Equations.substitute": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "brian2.equations.equations.Equations",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.FLAG": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "brian2.equations.equations.FLAGS": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "brian2.equations.equations.FLOAT": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "brian2.equations.equations.Group": {
  "data": {
   "shadows": "pyparsing.Group"
  },
  "type": "import"
 },
 "brian2.equations.equations.Hashable": {
  "data": {
   "shadows": "collections.Hashable"
  },
  "type": "import"
 },
 "brian2.equations.equations.IDENTIFIER": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "brian2.equations.equations.INTEGER": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "brian2.equations.equations.LineEnd": {
  "data": {
   "shadows": "pyparsing.LineEnd"
  },
  "type": "import"
 },
 "brian2.equations.equations.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "brian2.equations.equations.OneOrMore": {
  "data": {
   "shadows": "pyparsing.OneOrMore"
  },
  "type": "import"
 },
 "brian2.equations.equations.Optional": {
  "data": {
   "shadows": "pyparsing.Optional"
  },
  "type": "import"
 },
 "brian2.equations.equations.PARAMETER": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "brian2.equations.equations.PARAMETER_EQ": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "brian2.equations.equations.ParseException": {
  "data": {
   "shadows": "pyparsing.ParseException"
  },
  "type": "import"
 },
 "brian2.equations.equations.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.equations.equations.STATIC_EQ": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "brian2.equations.equations.SUBEXPRESSION": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "brian2.equations.equations.SingleEquation": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "brian2.units.fundamentalunits.get_unit",
    "brian2.utils.caching.CacheKey",
    "collections.Hashable",
    "property",
    "set"
   ]
  },
  "type": "class"
 },
 "brian2.equations.equations.SingleEquation.__eq__": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "NotImplemented",
    "brian2.equations.equations.SingleEquation",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation.__hash__": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation.__init__": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "TypeError",
    "brian2.equations.equations.BOOLEAN",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.FLOAT",
    "brian2.equations.equations.INTEGER",
    "brian2.units.fundamentalunits.DIMENSIONLESS",
    "brian2.units.fundamentalunits.get_dimensions",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation.__ne__": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation.__repr__": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "brian2.units.fundamentalunits.get_unit_for_display",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation.__str__": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.units.fundamentalunits.get_unit_for_display",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation._latex": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.PARAMETER",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.equations.equations.sympy",
    "brian2.parsing.sympytools.str_to_sympy"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation._repr_latex_": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "brian2.equations.equations.sympy"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation._repr_pretty_": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "AssertionError",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.units.fundamentalunits.get_unit",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.Suppress": {
  "data": {
   "shadows": "pyparsing.Suppress"
  },
  "type": "import"
 },
 "brian2.equations.equations.UNIT": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "brian2.equations.equations.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.equations.equations.Word": {
  "data": {
   "shadows": "pyparsing.Word"
  },
  "type": "import"
 },
 "brian2.equations.equations.ZeroOrMore": {
  "data": {
   "shadows": "pyparsing.ZeroOrMore"
  },
  "type": "import"
 },
 "brian2.equations.equations.__all__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "brian2.equations.equations._base_units": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "brian2.equations.equations._base_units_with_alternatives": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "brian2.equations.equations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.equations.equations.amp": {
  "data": {
   "shadows": "brian2.units.allunits.amp"
  },
  "type": "import"
 },
 "brian2.equations.equations.ampere": {
  "data": {
   "shadows": "brian2.units.allunits.ampere"
  },
  "type": "import"
 },
 "brian2.equations.equations.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.equations.equations.becquerel": {
  "data": {
   "shadows": "brian2.units.allunits.becquerel"
  },
  "type": "import"
 },
 "brian2.equations.equations.cached": {
  "data": {
   "shadows": "brian2.utils.caching.cached"
  },
  "type": "import"
 },
 "brian2.equations.equations.candle": {
  "data": {
   "shadows": "brian2.units.allunits.candle"
  },
  "type": "import"
 },
 "brian2.equations.equations.check_identifier_basic": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.equations.equations.IDENTIFIER",
    "brian2.equations.equations.keyword",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.check_identifier_constants": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.core.namespace.DEFAULT_CONSTANTS"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.check_identifier_functions": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.core.namespace.DEFAULT_FUNCTIONS"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.check_identifier_reserved": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.check_identifier_units": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.core.namespace.DEFAULT_UNITS"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.check_subexpressions": {
  "data": {
   "lineno": 1111,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.equations.equations.is_stateful",
    "brian2.parsing.sympytools.str_to_sympy",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.coulomb": {
  "data": {
   "shadows": "brian2.units.allunits.coulomb"
  },
  "type": "import"
 },
 "brian2.equations.equations.dimensions_and_type_from_string": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "brian2.core.namespace.DEFAULT_UNITS",
    "brian2.core.namespace.DEFAULT_UNITS.dim",
    "brian2.core.namespace.DEFAULT_UNITS.items",
    "brian2.equations.equations.BOOLEAN",
    "brian2.equations.equations.FLOAT",
    "brian2.equations.equations.INTEGER",
    "brian2.equations.equations._base_units",
    "brian2.equations.equations._base_units_with_alternatives",
    "brian2.equations.equations.string",
    "brian2.units.fundamentalunits.DIMENSIONLESS",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.Unit",
    "brian2.units.fundamentalunits.get_unit",
    "brian2.utils.stringtools.get_identifiers",
    "dict",
    "eval",
    "float",
    "isinstance",
    "len",
    "repr",
    "reversed",
    "sorted",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.extract_constant_subexpressions": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "brian2.equations.equations.Equations",
    "brian2.equations.equations.PARAMETER",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.equations.equations.SingleEquation"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.farad": {
  "data": {
   "shadows": "brian2.units.allunits.farad"
  },
  "type": "import"
 },
 "brian2.equations.equations.get_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_dimensions"
  },
  "type": "import"
 },
 "brian2.equations.equations.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.equations.equations.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.equations.equations.get_unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_unit"
  },
  "type": "import"
 },
 "brian2.equations.equations.get_unit_for_display": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_unit_for_display"
  },
  "type": "import"
 },
 "brian2.equations.equations.gray": {
  "data": {
   "shadows": "brian2.units.allunits.gray"
  },
  "type": "import"
 },
 "brian2.equations.equations.henry": {
  "data": {
   "shadows": "brian2.units.allunits.henry"
  },
  "type": "import"
 },
 "brian2.equations.equations.hertz": {
  "data": {
   "shadows": "brian2.units.allunits.hertz"
  },
  "type": "import"
 },
 "brian2.equations.equations.is_stateful": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.joule": {
  "data": {
   "shadows": "brian2.units.allunits.joule"
  },
  "type": "import"
 },
 "brian2.equations.equations.katal": {
  "data": {
   "shadows": "brian2.units.allunits.katal"
  },
  "type": "import"
 },
 "brian2.equations.equations.kelvin": {
  "data": {
   "shadows": "brian2.units.allunits.kelvin"
  },
  "type": "import"
 },
 "brian2.equations.equations.keyword": {
  "data": {
   "shadows": "keyword"
  },
  "type": "import"
 },
 "brian2.equations.equations.kgram": {
  "data": {
   "shadows": "brian2.units.allunits.kgram"
  },
  "type": "import"
 },
 "brian2.equations.equations.kgramme": {
  "data": {
   "shadows": "brian2.units.allunits.kgramme"
  },
  "type": "import"
 },
 "brian2.equations.equations.kilogram": {
  "data": {
   "shadows": "brian2.units.allunits.kilogram"
  },
  "type": "import"
 },
 "brian2.equations.equations.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "brian2.equations.equations.lumen": {
  "data": {
   "shadows": "brian2.units.allunits.lumen"
  },
  "type": "import"
 },
 "brian2.equations.equations.lux": {
  "data": {
   "shadows": "brian2.units.allunits.lux"
  },
  "type": "import"
 },
 "brian2.equations.equations.meter": {
  "data": {
   "shadows": "brian2.units.allunits.meter"
  },
  "type": "import"
 },
 "brian2.equations.equations.metre": {
  "data": {
   "shadows": "brian2.units.allunits.metre"
  },
  "type": "import"
 },
 "brian2.equations.equations.mole": {
  "data": {
   "shadows": "brian2.units.allunits.mole"
  },
  "type": "import"
 },
 "brian2.equations.equations.newton": {
  "data": {
   "shadows": "brian2.units.allunits.newton"
  },
  "type": "import"
 },
 "brian2.equations.equations.ohm": {
  "data": {
   "shadows": "brian2.units.allunits.ohm"
  },
  "type": "import"
 },
 "brian2.equations.equations.parse_string_equations": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "Expression",
    "ValueError",
    "brian2.equations.equations.EQUATIONS",
    "brian2.equations.equations.EquationError",
    "brian2.equations.equations.SingleEquation",
    "brian2.equations.equations.dimensions_and_type_from_string",
    "brian2.equations.equations.re",
    "brian2.utils.caching.cached",
    "dict",
    "list",
    "pyparsing.ParseException",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.equations.equations.pascal": {
  "data": {
   "shadows": "brian2.units.allunits.pascal"
  },
  "type": "import"
 },
 "brian2.equations.equations.radian": {
  "data": {
   "shadows": "brian2.units.allunits.radian"
  },
  "type": "import"
 },
 "brian2.equations.equations.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.equations.equations.restOfLine": {
  "data": {
   "shadows": "pyparsing.restOfLine"
  },
  "type": "import"
 },
 "brian2.equations.equations.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.equations.equations.siemens": {
  "data": {
   "shadows": "brian2.units.allunits.siemens"
  },
  "type": "import"
 },
 "brian2.equations.equations.sievert": {
  "data": {
   "shadows": "brian2.units.allunits.sievert"
  },
  "type": "import"
 },
 "brian2.equations.equations.steradian": {
  "data": {
   "shadows": "brian2.units.allunits.steradian"
  },
  "type": "import"
 },
 "brian2.equations.equations.str_to_sympy": {
  "data": {
   "shadows": "brian2.parsing.sympytools.str_to_sympy"
  },
  "type": "import"
 },
 "brian2.equations.equations.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "brian2.equations.equations.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.equations.equations.sympy_to_str": {
  "data": {
   "shadows": "brian2.parsing.sympytools.sympy_to_str"
  },
  "type": "import"
 },
 "brian2.equations.equations.tesla": {
  "data": {
   "shadows": "brian2.units.allunits.tesla"
  },
  "type": "import"
 },
 "brian2.equations.equations.topsort": {
  "data": {
   "shadows": "brian2.utils.topsort.topsort"
  },
  "type": "import"
 },
 "brian2.equations.equations.volt": {
  "data": {
   "shadows": "brian2.units.allunits.volt"
  },
  "type": "import"
 },
 "brian2.equations.equations.watt": {
  "data": {
   "shadows": "brian2.units.allunits.watt"
  },
  "type": "import"
 },
 "brian2.equations.equations.weber": {
  "data": {
   "shadows": "brian2.units.allunits.weber"
  },
  "type": "import"
 },
 "brian2.equations.refractory": {
  "data": {
   "symbols_in_volume": [
    "brian2.equations.refractory.check_identifier_refractory"
   ]
  },
  "type": "module"
 },
 "brian2.equations.refractory.DIMENSIONLESS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DIMENSIONLESS"
  },
  "type": "import"
 },
 "brian2.equations.refractory.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.equations.refractory.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "brian2.equations.refractory.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.equations.refractory.add_refractoriness": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "Equations",
    "Expression",
    "SingleEquation",
    "brian2.units.allunits.second.dim",
    "brian2.units.fundamentalunits.DIMENSIONLESS"
   ]
  },
  "type": "function"
 },
 "brian2.equations.refractory.check_identifier_refractory": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "brian2.equations.refractory.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.equations.unitcheck": {
  "data": {},
  "type": "module"
 },
 "brian2.equations.unitcheck.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.equations.unitcheck.Variable": {
  "data": {
   "shadows": "brian2.core.variables.Variable"
  },
  "type": "import"
 },
 "brian2.equations.unitcheck.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "brian2.equations.unitcheck.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.equations.unitcheck.analyse_identifiers": {
  "data": {
   "shadows": "brian2.codegen.translation.analyse_identifiers"
  },
  "type": "import"
 },
 "brian2.equations.unitcheck.check_dimensions": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "brian2.parsing.expressions.parse_expression_dimensions",
    "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
    "brian2.units.fundamentalunits.get_unit",
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.equations.unitcheck.check_units_statements": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "AssertionError",
    "brian2.codegen.translation.analyse_identifiers",
    "brian2.core.variables.Variable",
    "brian2.equations.unitcheck.re",
    "brian2.parsing.expressions.parse_expression_dimensions",
    "brian2.parsing.statements.parse_statement",
    "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
    "brian2.units.fundamentalunits.get_dimensions",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.equations.unitcheck.fail_for_dimension_mismatch": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.fail_for_dimension_mismatch"
  },
  "type": "import"
 },
 "brian2.equations.unitcheck.get_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_dimensions"
  },
  "type": "import"
 },
 "brian2.equations.unitcheck.get_unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_unit"
  },
  "type": "import"
 },
 "brian2.equations.unitcheck.parse_expression_dimensions": {
  "data": {
   "shadows": "brian2.parsing.expressions.parse_expression_dimensions"
  },
  "type": "import"
 },
 "brian2.equations.unitcheck.parse_statement": {
  "data": {
   "shadows": "brian2.parsing.statements.parse_statement"
  },
  "type": "import"
 },
 "brian2.equations.unitcheck.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.get_cython_cache_dir": {
  "data": {
   "shadows": "brian2.codegen.runtime.cython_rt.extension_manager.get_cython_cache_dir"
  },
  "type": "import"
 },
 "brian2.get_cython_extensions": {
  "data": {
   "shadows": "brian2.codegen.runtime.cython_rt.extension_manager.get_cython_extensions"
  },
  "type": "import"
 },
 "brian2.get_weave_cache_dir": {
  "data": {
   "shadows": "brian2.codegen.runtime.weave_rt.weave_rt.get_weave_cache_dir"
  },
  "type": "import"
 },
 "brian2.get_weave_extensions": {
  "data": {
   "shadows": "brian2.codegen.runtime.weave_rt.weave_rt.get_weave_extensions"
  },
  "type": "import"
 },
 "brian2.groups": {
  "data": {},
  "type": "module"
 },
 "brian2.groups.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "brian2.groups.group": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.groups.group.ArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.ArrayVariable"
  },
  "type": "import"
 },
 "brian2.groups.group.AuxiliaryVariable": {
  "data": {
   "shadows": "brian2.core.variables.AuxiliaryVariable"
  },
  "type": "import"
 },
 "brian2.groups.group.BOOLEAN": {
  "data": {
   "shadows": "brian2.equations.equations.BOOLEAN"
  },
  "type": "import"
 },
 "brian2.groups.group.BrianObject": {
  "data": {
   "shadows": "brian2.core.base.BrianObject"
  },
  "type": "import"
 },
 "brian2.groups.group.CodeRunner": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "brian2.core.base.BrianObject"
   ]
  },
  "type": "class"
 },
 "brian2.groups.group.CodeRunner.__init__": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "brian2.core.base.BrianObject.__init__",
    "brian2.core.base.weakproxy_with_fallback"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.CodeRunner.before_run": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "brian2.codegen.codeobject.create_runner_codeobj",
    "brian2.groups.group.weakref",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.CodeRunner.update_abstract_code": {
  "data": {
   "lineno": 1100
  },
  "type": "function"
 },
 "brian2.groups.group.Constant": {
  "data": {
   "shadows": "brian2.core.variables.Constant"
  },
  "type": "import"
 },
 "brian2.groups.group.DEFAULT_CONSTANTS": {
  "data": {
   "shadows": "brian2.core.namespace.DEFAULT_CONSTANTS"
  },
  "type": "import"
 },
 "brian2.groups.group.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.namespace.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.groups.group.DEFAULT_UNITS": {
  "data": {
   "shadows": "brian2.core.namespace.DEFAULT_UNITS"
  },
  "type": "import"
 },
 "brian2.groups.group.DIMENSIONLESS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DIMENSIONLESS"
  },
  "type": "import"
 },
 "brian2.groups.group.DynamicArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.DynamicArrayVariable"
  },
  "type": "import"
 },
 "brian2.groups.group.Equations": {
  "data": {
   "shadows": "brian2.equations.equations.Equations"
  },
  "type": "import"
 },
 "brian2.groups.group.FLOAT": {
  "data": {
   "shadows": "brian2.equations.equations.FLOAT"
  },
  "type": "import"
 },
 "brian2.groups.group.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.groups.group.Group": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "brian2.core.base.BrianObject",
    "brian2.groups.group.VariableOwner"
   ]
  },
  "type": "class"
 },
 "brian2.groups.group.Group._check_for_invalid_states": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "brian2.equations.equations.Equations",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.Group._check_for_invalid_values": {
  "data": {
   "lineno": 993,
   "symbols_in_volume": [
    "brian2.groups.group.logger",
    "numpy.abs",
    "numpy.asarray",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.Group._resolve": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.Group._resolve_external": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "brian2.core.functions.Function",
    "brian2.core.namespace.DEFAULT_CONSTANTS",
    "brian2.core.namespace.DEFAULT_FUNCTIONS",
    "brian2.core.namespace.DEFAULT_UNITS",
    "brian2.core.variables.Constant",
    "brian2.core.variables.Variable",
    "brian2.groups.group._conflict_warning",
    "brian2.groups.group._display_value",
    "brian2.groups.group._same_function",
    "brian2.groups.group._same_value",
    "brian2.groups.group.inspect",
    "brian2.groups.group.logger",
    "brian2.groups.group.numbers",
    "brian2.groups.group.weakref",
    "brian2.units.fundamentalunits.DIMENSIONLESS",
    "callable",
    "collections.OrderedDict",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.ndarray",
    "numpy.number"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.Group.custom_operation": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.Group.resolve_all": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "collections.Mapping",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.Group.run_regularly": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "brian2.groups.group.CodeRunner",
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.Group.runner": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.INTEGER": {
  "data": {
   "shadows": "brian2.equations.equations.INTEGER"
  },
  "type": "import"
 },
 "brian2.groups.group.ImportExport": {
  "data": {
   "shadows": "brian2.importexport.importexport.ImportExport"
  },
  "type": "import"
 },
 "brian2.groups.group.IndexWrapper": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.groups.group.IndexWrapper.__getitem__": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "brian2.codegen.codeobject.create_runner_codeobj",
    "brian2.core.namespace.get_local_namespace",
    "brian2.core.variables.Variables",
    "brian2.devices.device.get_device",
    "codeobj",
    "isinstance",
    "numpy.bool",
    "numpy.int32",
    "past.builtins.basestring"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.IndexWrapper.__init__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "brian2.groups.group.weakref"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.Indexing": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.groups.group.Indexing.__call__": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.bool",
    "numpy.int32",
    "numpy.issubdtype",
    "numpy.nonzero",
    "numpy.signedinteger",
    "past.builtins.basestring",
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.Indexing.__init__": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "brian2.groups.group.weakref"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "brian2.groups.group.Nameable": {
  "data": {
   "shadows": "brian2.core.names.Nameable"
  },
  "type": "import"
 },
 "brian2.groups.group.NumpyCodeGenerator": {
  "data": {
   "shadows": "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator"
  },
  "type": "import"
 },
 "brian2.groups.group.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "brian2.groups.group.SpellChecker": {
  "data": {
   "shadows": "brian2.utils.stringtools.SpellChecker"
  },
  "type": "import"
 },
 "brian2.groups.group.Subexpression": {
  "data": {
   "shadows": "brian2.core.variables.Subexpression"
  },
  "type": "import"
 },
 "brian2.groups.group.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.groups.group.Variable": {
  "data": {
   "shadows": "brian2.core.variables.Variable"
  },
  "type": "import"
 },
 "brian2.groups.group.VariableOwner": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "brian2.core.names.Nameable"
   ]
  },
  "type": "class"
 },
 "brian2.groups.group.VariableOwner.__getattr__": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "object.__getattribute__"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.VariableOwner.__len__": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.VariableOwner.__setattr__": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "brian2.units.fundamentalunits.DIMENSIONLESS",
    "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
    "brian2.units.fundamentalunits.get_unit",
    "brian2.utils.stringtools.SpellChecker",
    "hasattr",
    "isinstance",
    "len",
    "object.__setattr__",
    "past.builtins.basestring",
    "slice"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.VariableOwner._check_expression_scalar": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "ValueError",
    "brian2.utils.stringtools.get_identifiers",
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.VariableOwner._enable_group_attributes": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ValueError",
    "brian2.groups.group.IndexWrapper",
    "brian2.groups.group.Indexing",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.VariableOwner._full_state": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "brian2.core.variables.ArrayVariable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.VariableOwner._restore_from_full_state": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "brian2.core.variables.DynamicArrayVariable",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.VariableOwner.add_attribute": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "AttributeError",
    "hasattr",
    "object.__setattr__"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.VariableOwner.check_variable_write": {
  "data": {
   "lineno": 566
  },
  "type": "function"
 },
 "brian2.groups.group.VariableOwner.get_states": {
  "data": {
   "lineno": 490,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.core.variables.AuxiliaryVariable",
    "brian2.core.variables.Subexpression",
    "brian2.importexport.importexport.ImportExport.methods",
    "brian2.importexport.importexport.ImportExport.methods.export_data",
    "format",
    "format.export_data",
    "getattr",
    "isinstance",
    "vars",
    "vars.append"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.VariableOwner.set_states": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.importexport.importexport.ImportExport.methods",
    "brian2.importexport.importexport.ImportExport.methods.import_data",
    "format",
    "format.import_data"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.VariableOwner.state": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.Variables": {
  "data": {
   "shadows": "brian2.core.variables.Variables"
  },
  "type": "import"
 },
 "brian2.groups.group.__all__": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "brian2.groups.group._conflict_warning": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "brian2.groups.group._display_value",
    "brian2.groups.group.logger",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group._display_value": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "brian2.core.functions.Function",
    "isinstance",
    "numpy.get_printoptions",
    "numpy.set_printoptions",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group._same_function": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group._same_value": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.groups.group.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.groups.group.create_runner_codeobj": {
  "data": {
   "shadows": "brian2.codegen.codeobject.create_runner_codeobj"
  },
  "type": "import"
 },
 "brian2.groups.group.fail_for_dimension_mismatch": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.fail_for_dimension_mismatch"
  },
  "type": "import"
 },
 "brian2.groups.group.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.groups.group.get_dtype": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.core.preferences.prefs",
    "brian2.equations.equations.BOOLEAN",
    "brian2.equations.equations.FLOAT",
    "brian2.equations.equations.INTEGER",
    "collections.Mapping",
    "isinstance",
    "numpy.bool",
    "numpy.dtype"
   ]
  },
  "type": "function"
 },
 "brian2.groups.group.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.groups.group.get_local_namespace": {
  "data": {
   "shadows": "brian2.core.namespace.get_local_namespace"
  },
  "type": "import"
 },
 "brian2.groups.group.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.groups.group.get_unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_unit"
  },
  "type": "import"
 },
 "brian2.groups.group.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "brian2.groups.group.logger": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "brian2.groups.group.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.groups.group.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "brian2.groups.group.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.groups.group.weakproxy_with_fallback": {
  "data": {
   "shadows": "brian2.core.base.weakproxy_with_fallback"
  },
  "type": "import"
 },
 "brian2.groups.group.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian2.groups.neurongroup.string",
    "brian2.utils.logger.get_logger",
    "pyparsing.Word"
   ]
  },
  "type": "module"
 },
 "brian2.groups.neurongroup.DIFFERENTIAL_EQUATION": {
  "data": {
   "shadows": "brian2.equations.equations.DIFFERENTIAL_EQUATION"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.DIMENSIONLESS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DIMENSIONLESS"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.DimensionMismatchError": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DimensionMismatchError"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.DynamicArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.DynamicArrayVariable"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.Equations": {
  "data": {
   "shadows": "brian2.equations.equations.Equations"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.IDENTIFIER": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "brian2.groups.neurongroup.LinkedVariable": {
  "data": {
   "shadows": "brian2.core.variables.LinkedVariable"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.NeuronGroup": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "brian2.core.spikesource.SpikeSource"
   ]
  },
  "type": "class"
 },
 "brian2.groups.neurongroup.NeuronGroup.__getitem__": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "Subgroup",
    "brian2.groups.neurongroup.to_start_stop"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup.__init__": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.Equations",
    "brian2.equations.equations.PARAMETER",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.equations.equations.extract_constant_subexpressions",
    "brian2.equations.refractory.add_refractoriness",
    "brian2.groups.neurongroup.StateUpdater",
    "brian2.groups.neurongroup.SubexpressionUpdater",
    "brian2.groups.neurongroup.Thresholder",
    "brian2.groups.neurongroup._valid_event_name",
    "brian2.groups.neurongroup.logger",
    "brian2.units.allunits.second",
    "collections.MutableMapping",
    "events",
    "events.keys",
    "int",
    "isinstance",
    "len",
    "list",
    "past.builtins.basestring",
    "set",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup.__setattr__": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "brian2.core.variables.DynamicArrayVariable",
    "brian2.core.variables.LinkedVariable",
    "brian2.core.variables.Subexpression",
    "brian2.groups.neurongroup.logger",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "hasattr",
    "isinstance",
    "len",
    "max",
    "min",
    "numpy.asarray",
    "numpy.int",
    "numpy.issubsctype",
    "object.__setattr__",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup._create_variables": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "AssertionError",
    "SyntaxError",
    "brian2.core.variables.Variables",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.PARAMETER",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.groups.neurongroup.check_identifier_pre_post",
    "brian2.units.allunits.second.dim",
    "events",
    "get_dtype",
    "len",
    "numpy.int32",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup._repr_html_": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "add_event_to_text",
    "brian2.groups.neurongroup.sympy"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup._repr_html_.add_event_to_text": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup.before_run": {
  "data": {
   "lineno": 886,
   "symbols_in_volume": [
    "brian2.equations.equations.check_subexpressions",
    "brian2.groups.neurongroup.NeuronGroup",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup.run_on_event": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "ValueError",
    "brian2.groups.neurongroup.Resetter"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup.set_event_schedule": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup.spikes": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup.state": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "KeyError",
    "TypeError"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.PARAMETER": {
  "data": {
   "shadows": "brian2.equations.equations.PARAMETER"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.Resetter": {
  "data": {
   "lineno": 361
  },
  "type": "class"
 },
 "brian2.groups.neurongroup.Resetter.__init__": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.Resetter.update_abstract_code": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "TypeError",
    "brian2.groups.neurongroup._guess_membrane_potential",
    "brian2.units.fundamentalunits.Quantity",
    "isinstance",
    "past.builtins.basestring",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.SUBEXPRESSION": {
  "data": {
   "shadows": "brian2.equations.equations.SUBEXPRESSION"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.Sequence": {
  "data": {
   "shadows": "collections.Sequence"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.SpikeSource": {
  "data": {
   "shadows": "brian2.core.spikesource.SpikeSource"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.StateUpdateMethod": {
  "data": {
   "shadows": "brian2.stateupdaters.base.StateUpdateMethod"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.StateUpdater": {
  "data": {
   "lineno": 176
  },
  "type": "class"
 },
 "brian2.groups.neurongroup.StateUpdater.__init__": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.StateUpdater._get_refractory_code": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "TypeError",
    "brian2.core.preferences.prefs.legacy.refractory_timing",
    "brian2.parsing.expressions.is_boolean_expression",
    "brian2.parsing.expressions.parse_expression_dimensions",
    "brian2.units.allunits.second",
    "brian2.units.allunits.second.dim",
    "brian2.units.fundamentalunits.DIMENSIONLESS",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
    "brian2.utils.stringtools.get_identifiers",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.StateUpdater.update_abstract_code": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "brian2.codegen.translation.analyse_identifiers",
    "brian2.stateupdaters.base.StateUpdateMethod.apply_stateupdater",
    "isinstance",
    "len",
    "past.builtins.basestring",
    "set",
    "stateupdate_output"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.Subexpression": {
  "data": {
   "shadows": "brian2.core.variables.Subexpression"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.SubexpressionUpdater": {
  "data": {
   "lineno": 276
  },
  "type": "class"
 },
 "brian2.groups.neurongroup.SubexpressionUpdater.__init__": {
  "data": {
   "lineno": 281
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.Thresholder": {
  "data": {
   "lineno": 296
  },
  "type": "class"
 },
 "brian2.groups.neurongroup.Thresholder.__init__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "brian2.core.variables.Variables",
    "numpy.bool"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.Thresholder.update_abstract_code": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "brian2.groups.neurongroup._guess_membrane_potential",
    "brian2.parsing.expressions.is_boolean_expression",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.utils.stringtools.get_identifiers",
    "isinstance",
    "past.builtins.basestring",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.Variables": {
  "data": {
   "shadows": "brian2.core.variables.Variables"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.Word": {
  "data": {
   "shadows": "pyparsing.Word"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.__all__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "brian2.groups.neurongroup._guess_membrane_potential": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup._valid_event_name": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "brian2.groups.neurongroup.IDENTIFIER",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.add_refractoriness": {
  "data": {
   "shadows": "brian2.equations.refractory.add_refractoriness"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.analyse_identifiers": {
  "data": {
   "shadows": "brian2.codegen.translation.analyse_identifiers"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.check_identifier_pre_post": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "brian2.groups.neurongroup.check_subexpressions": {
  "data": {
   "shadows": "brian2.equations.equations.check_subexpressions"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.extract_constant_subexpressions": {
  "data": {
   "shadows": "brian2.equations.equations.extract_constant_subexpressions"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.fail_for_dimension_mismatch": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.fail_for_dimension_mismatch"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.have_same_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.have_same_dimensions"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.is_boolean_expression": {
  "data": {
   "shadows": "brian2.parsing.expressions.is_boolean_expression"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.logger": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "brian2.groups.neurongroup.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.parse_expression_dimensions": {
  "data": {
   "shadows": "brian2.parsing.expressions.parse_expression_dimensions"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.groups.neurongroup.to_start_stop": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "brian2.groups.neurongroup.numbers",
    "collections.Sequence",
    "int",
    "isinstance",
    "len",
    "numpy.all",
    "numpy.asarray",
    "numpy.diff",
    "numpy.integer",
    "numpy.issubdtype",
    "numpy.ndarray",
    "past.builtins.basestring",
    "slice"
   ]
  },
  "type": "function"
 },
 "brian2.groups.subgroup": {
  "data": {},
  "type": "module"
 },
 "brian2.groups.subgroup.SpikeSource": {
  "data": {
   "shadows": "brian2.core.spikesource.SpikeSource"
  },
  "type": "import"
 },
 "brian2.groups.subgroup.Subgroup": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "brian2.core.spikesource.SpikeSource",
    "property"
   ]
  },
  "type": "class"
 },
 "brian2.groups.subgroup.Subgroup.__getitem__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "brian2.groups.subgroup.Subgroup",
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "brian2.groups.subgroup.Subgroup.__init__": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Indexing",
    "ValueError",
    "brian2.core.base.weakproxy_with_fallback",
    "brian2.core.variables.Variables",
    "brian2.groups.subgroup.Subgroup",
    "hasattr",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.groups.subgroup.Subgroup.__repr__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.groups.subgroup.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.groups.subgroup.Variables": {
  "data": {
   "shadows": "brian2.core.variables.Variables"
  },
  "type": "import"
 },
 "brian2.groups.subgroup.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "brian2.groups.subgroup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.groups.subgroup.weakproxy_with_fallback": {
  "data": {
   "shadows": "brian2.core.base.weakproxy_with_fallback"
  },
  "type": "import"
 },
 "brian2.hears": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian.hears",
    "brian.hears.Sound",
    "brian.hears.__dict__",
    "brian2.hears.BridgeSound",
    "brian2.hears.__all__",
    "brian2.hears.curobj",
    "brian2.hears.handled_explicitly",
    "brian2.hears.logger",
    "brian2.hears.wrap_units",
    "brian2.hears.wrap_units_class",
    "brian2.utils.logger.get_logger",
    "callable",
    "exec",
    "getattr",
    "inspect.isclass"
   ]
  },
  "type": "module"
 },
 "brian2.hears.BridgeSound": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "brian2.hears.WrappedSound"
   ]
  },
  "type": "class"
 },
 "brian2.hears.BridgeSound.slice": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "slice"
   ]
  },
  "type": "function"
 },
 "brian2.hears.Clock": {
  "data": {
   "shadows": "brian2.core.clocks.Clock"
  },
  "type": "import"
 },
 "brian2.hears.FilterbankGroup": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "brian2.groups.neurongroup.NeuronGroup"
   ]
  },
  "type": "class"
 },
 "brian2.hears.FilterbankGroup.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "brian2.core.clocks.Clock",
    "brian2.groups.neurongroup.NeuronGroup.__init__",
    "brian2.units.second",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.hears.FilterbankGroup.__init__.apply_filterbank_output": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "brian2.core.operations.network_operation",
    "setattr"
   ]
  },
  "type": "function"
 },
 "brian2.hears.FilterbankGroup.reinit": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "brian2.groups.neurongroup.NeuronGroup.reinit"
   ]
  },
  "type": "function"
 },
 "brian2.hears.NeuronGroup": {
  "data": {
   "shadows": "brian2.groups.neurongroup.NeuronGroup"
  },
  "type": "import"
 },
 "brian2.hears.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.hears.Sound": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "brian2.hears.WrappedSound": {
  "data": {
   "lineno": 127
  },
  "type": "constant"
 },
 "brian2.hears.__all__": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "brian2.hears.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.hears.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "brian2.hears.asarray": {
  "data": {
   "shadows": "numpy.asarray"
  },
  "type": "import"
 },
 "brian2.hears.b1": {
  "data": {
   "shadows": "brian"
  },
  "type": "import"
 },
 "brian2.hears.b1h": {
  "data": {
   "shadows": "brian.hears"
  },
  "type": "import"
 },
 "brian2.hears.convert_unit_b1_to_b2": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "brian2.units.fundamentalunits.Quantity.with_dimensions",
    "float"
   ]
  },
  "type": "function"
 },
 "brian2.hears.convert_unit_b2_to_b1": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "brian.Quantity.with_dimensions",
    "float"
   ]
  },
  "type": "function"
 },
 "brian2.hears.curobj": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "brian2.hears.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.hears.handled_explicitly": {
  "data": {
   "lineno": 178
  },
  "type": "constant"
 },
 "brian2.hears.isclass": {
  "data": {
   "shadows": "inspect.isclass"
  },
  "type": "import"
 },
 "brian2.hears.ismethod": {
  "data": {
   "shadows": "inspect.ismethod"
  },
  "type": "import"
 },
 "brian2.hears.logger": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "brian2.hears.modify_arg": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "brian.Quantity.with_dimensions",
    "brian2.units.fundamentalunits.Quantity",
    "float",
    "isinstance",
    "len",
    "numpy.asarray",
    "slice"
   ]
  },
  "type": "function"
 },
 "brian2.hears.ndarray": {
  "data": {
   "shadows": "numpy.ndarray"
  },
  "type": "import"
 },
 "brian2.hears.network_operation": {
  "data": {
   "shadows": "brian2.core.operations.network_operation"
  },
  "type": "import"
 },
 "brian2.hears.second": {
  "data": {
   "shadows": "brian2.units.second"
  },
  "type": "import"
 },
 "brian2.hears.wrap_units": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "brian2.hears.wrap_units.new_f": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "brian.Quantity",
    "brian.hears.Sound",
    "brian2.hears.modify_arg",
    "brian2.units.fundamentalunits.Quantity.with_dimensions",
    "f",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.hears.wrap_units_class": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "brian2.hears.wrap_units_class.new_class": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "brian2.hears.wrap_units",
    "brian2.hears.wrap_units_property",
    "exec",
    "getattr",
    "hasattr",
    "inspect.ismethod",
    "isinstance",
    "numpy.ndarray",
    "property"
   ]
  },
  "type": "class"
 },
 "brian2.hears.wrap_units_property": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "brian2.hears.wrap_units",
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.importexport": {
  "data": {
   "symbols_in_volume": [
    "DictImportExport",
    "PandasImportExport"
   ]
  },
  "type": "module"
 },
 "brian2.importexport.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "brian2.importexport.dictlike": {
  "data": {},
  "type": "module"
 },
 "brian2.importexport.dictlike.DictImportExport": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "brian2.importexport.dictlike.DictImportExport.export_data": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.array",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.importexport.dictlike.DictImportExport.import_data": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "TypeError",
    "getattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.importexport.dictlike.DictImportExport.name": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.importexport.dictlike.PandasImportExport": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "brian2.importexport.dictlike.PandasImportExport.export_data": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ImportError",
    "NotImplementedError",
    "brian2.importexport.dictlike.DictImportExport",
    "pandas.DataFrame",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.importexport.dictlike.PandasImportExport.import_data": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ImportError",
    "NotImplementedError",
    "TypeError",
    "enumerate",
    "getattr",
    "numpy.squeeze",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.importexport.dictlike.PandasImportExport.name": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.importexport.dictlike.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.importexport.dictlike.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.importexport.dictlike.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "brian2.importexport.importexport": {
  "data": {},
  "type": "module"
 },
 "brian2.importexport.importexport.ImportExport": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "brian2.importexport.importexport.abc",
    "dict",
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.importexport.importexport.ImportExport.export_data": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.importexport.importexport.ImportExport.import_data": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "NotImplementedError",
    "abc.abstractmethod",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.importexport.importexport.ImportExport.name": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "abc.abstractproperty"
   ]
  },
  "type": "function"
 },
 "brian2.importexport.importexport.ImportExport.register": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "brian2.importexport.importexport.ImportExport",
    "isinstance",
    "staticmethod",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.importexport.importexport.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "brian2.importexport.importexport.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.importexport.importexport.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "brian2.importexport.importexport.abstractproperty": {
  "data": {
   "shadows": "abc.abstractproperty"
  },
  "type": "import"
 },
 "brian2.input": {
  "data": {},
  "type": "module"
 },
 "brian2.input.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "brian2.input.binomial": {
  "data": {},
  "type": "module"
 },
 "brian2.input.binomial.BinomialFunction": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "brian2.core.base.Nameable",
    "brian2.core.functions.Function",
    "brian2.input.binomial._generate_cpp_code",
    "brian2.input.binomial._generate_cython_code"
   ]
  },
  "type": "class"
 },
 "brian2.input.binomial.BinomialFunction.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "brian2.core.base.Nameable.__init__",
    "brian2.core.functions.Function.__init__",
    "brian2.input.binomial.BinomialFunction",
    "brian2.units.fundamentalunits.check_units",
    "func",
    "numpy.sqrt",
    "sample_function"
   ]
  },
  "type": "function"
 },
 "brian2.input.binomial.BinomialFunction.__init__.sample_function": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "len",
    "numpy.random.binomial"
   ]
  },
  "type": "function"
 },
 "brian2.input.binomial.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.input.binomial.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.input.binomial.Nameable": {
  "data": {
   "shadows": "brian2.core.base.Nameable"
  },
  "type": "import"
 },
 "brian2.input.binomial.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "brian2.input.binomial._generate_cpp_code": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "brian2.core.functions.DEFAULT_FUNCTIONS",
    "brian2.input.binomial._pre_calc_constants",
    "brian2.input.binomial._pre_calc_constants_approximated",
    "brian2.utils.stringtools.replace",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "brian2.input.binomial._generate_cython_code": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "brian2.core.functions.DEFAULT_FUNCTIONS",
    "brian2.input.binomial._pre_calc_constants",
    "brian2.input.binomial._pre_calc_constants_approximated",
    "brian2.utils.stringtools.replace"
   ]
  },
  "type": "function"
 },
 "brian2.input.binomial._pre_calc_constants": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "min",
    "numpy.exp",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "brian2.input.binomial._pre_calc_constants_approximated": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "brian2.input.binomial.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.input.binomial.check_units": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.check_units"
  },
  "type": "import"
 },
 "brian2.input.binomial.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.input.binomial.replace": {
  "data": {
   "shadows": "brian2.utils.stringtools.replace"
  },
  "type": "import"
 },
 "brian2.input.poissongroup": {
  "data": {},
  "type": "module"
 },
 "brian2.input.poissongroup.Group": {
  "data": {
   "shadows": "brian2.groups.group.Group"
  },
  "type": "import"
 },
 "brian2.input.poissongroup.Hz": {
  "data": {
   "shadows": "brian2.units.stdunits.Hz"
  },
  "type": "import"
 },
 "brian2.input.poissongroup.PoissonGroup": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "brian2.core.spikesource.SpikeSource",
    "brian2.groups.group.Group"
   ]
  },
  "type": "class"
 },
 "brian2.input.poissongroup.PoissonGroup.__getitem__": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "brian2.groups.subgroup.Subgroup",
    "isinstance",
    "slice"
   ]
  },
  "type": "function"
 },
 "brian2.input.poissongroup.PoissonGroup.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "brian2.core.variables.Variables",
    "brian2.groups.group.Group.__init__",
    "brian2.groups.neurongroup.Thresholder",
    "brian2.units.fundamentalunits.check_units",
    "brian2.units.stdunits.Hz",
    "brian2.units.stdunits.Hz.dim",
    "int",
    "isinstance",
    "numpy.int32",
    "past.builtins.basestring"
   ]
  },
  "type": "function"
 },
 "brian2.input.poissongroup.PoissonGroup.__repr__": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.input.poissongroup.PoissonGroup.before_run": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "brian2.core.variables.Subexpression",
    "brian2.input.poissongroup.PoissonGroup",
    "brian2.parsing.expressions.parse_expression_dimensions",
    "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
    "brian2.units.stdunits.Hz",
    "brian2.utils.stringtools.get_identifiers",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.input.poissongroup.PoissonGroup.spikes": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.input.poissongroup.SpikeSource": {
  "data": {
   "shadows": "brian2.core.spikesource.SpikeSource"
  },
  "type": "import"
 },
 "brian2.input.poissongroup.Subexpression": {
  "data": {
   "shadows": "brian2.core.variables.Subexpression"
  },
  "type": "import"
 },
 "brian2.input.poissongroup.Subgroup": {
  "data": {
   "shadows": "brian2.groups.subgroup.Subgroup"
  },
  "type": "import"
 },
 "brian2.input.poissongroup.Thresholder": {
  "data": {
   "shadows": "brian2.groups.neurongroup.Thresholder"
  },
  "type": "import"
 },
 "brian2.input.poissongroup.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.input.poissongroup.Variables": {
  "data": {
   "shadows": "brian2.core.variables.Variables"
  },
  "type": "import"
 },
 "brian2.input.poissongroup.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "brian2.input.poissongroup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.input.poissongroup.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.input.poissongroup.check_units": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.check_units"
  },
  "type": "import"
 },
 "brian2.input.poissongroup.fail_for_dimension_mismatch": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.fail_for_dimension_mismatch"
  },
  "type": "import"
 },
 "brian2.input.poissongroup.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.input.poissongroup.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.input.poissongroup.parse_expression_dimensions": {
  "data": {
   "shadows": "brian2.parsing.expressions.parse_expression_dimensions"
  },
  "type": "import"
 },
 "brian2.input.poissoninput": {
  "data": {},
  "type": "module"
 },
 "brian2.input.poissoninput.CodeRunner": {
  "data": {
   "shadows": "brian2.groups.group.CodeRunner"
  },
  "type": "import"
 },
 "brian2.input.poissoninput.DimensionMismatchError": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DimensionMismatchError"
  },
  "type": "import"
 },
 "brian2.input.poissoninput.Hz": {
  "data": {
   "shadows": "brian2.units.stdunits.Hz"
  },
  "type": "import"
 },
 "brian2.input.poissoninput.PoissonInput": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "brian2.groups.group.CodeRunner",
    "property"
   ]
  },
  "type": "class"
 },
 "brian2.input.poissoninput.PoissonInput.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "BinomialFunction",
    "KeyError",
    "brian2.core.variables.Variables",
    "brian2.groups.group.CodeRunner.__init__",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.fundamentalunits.check_units",
    "brian2.units.fundamentalunits.get_dimensions",
    "brian2.units.fundamentalunits.have_same_dimensions",
    "brian2.units.stdunits.Hz",
    "isinstance",
    "past.builtins.basestring",
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.input.poissoninput.PoissonInput.before_run": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.groups.group.CodeRunner.before_run"
   ]
  },
  "type": "function"
 },
 "brian2.input.poissoninput.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.input.poissoninput.Variables": {
  "data": {
   "shadows": "brian2.core.variables.Variables"
  },
  "type": "import"
 },
 "brian2.input.poissoninput.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "brian2.input.poissoninput.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.input.poissoninput.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.input.poissoninput.check_units": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.check_units"
  },
  "type": "import"
 },
 "brian2.input.poissoninput.get_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_dimensions"
  },
  "type": "import"
 },
 "brian2.input.poissoninput.get_unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_unit"
  },
  "type": "import"
 },
 "brian2.input.poissoninput.have_same_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.have_same_dimensions"
  },
  "type": "import"
 },
 "brian2.input.spikegeneratorgroup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.input.spikegeneratorgroup.CodeRunner": {
  "data": {
   "shadows": "brian2.groups.group.CodeRunner"
  },
  "type": "import"
 },
 "brian2.input.spikegeneratorgroup.Group": {
  "data": {
   "shadows": "brian2.groups.group.Group"
  },
  "type": "import"
 },
 "brian2.input.spikegeneratorgroup.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "brian2.core.spikesource.SpikeSource",
    "brian2.groups.group.CodeRunner",
    "brian2.groups.group.Group"
   ]
  },
  "type": "class"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "TypeError",
    "brian2.core.variables.Variables",
    "brian2.groups.group.CodeRunner.__init__",
    "brian2.groups.group.Group.__init__",
    "brian2.units.allunits.second",
    "brian2.units.allunits.second.dim",
    "brian2.units.fundamentalunits.check_units",
    "int",
    "len",
    "numpy.arange",
    "numpy.int32",
    "sorted"
   ]
  },
  "type": "function"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup.__repr__": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup._check_args": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "brian2.core.functions.timestep",
    "brian2.units.allunits.second",
    "brian2.units.fundamentalunits.Quantity",
    "len",
    "numpy.asarray",
    "numpy.lexsort",
    "numpy.max",
    "numpy.min",
    "numpy.round",
    "sorted"
   ]
  },
  "type": "function"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup._full_state": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup._restore_from_full_state": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup.before_run": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "brian2.core.functions.timestep",
    "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup",
    "brian2.input.spikegeneratorgroup.logger",
    "brian2.units.allunits.second",
    "len",
    "numpy.abs",
    "numpy.asarray",
    "numpy.diff",
    "numpy.finfo",
    "numpy.iinfo",
    "numpy.inf",
    "numpy.int32",
    "numpy.logical_and",
    "numpy.nonzero",
    "numpy.round",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup.set_spikes": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "brian2.units.allunits.second",
    "brian2.units.fundamentalunits.check_units",
    "len",
    "numpy.arange",
    "sorted"
   ]
  },
  "type": "function"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup.spikes": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.input.spikegeneratorgroup.SpikeSource": {
  "data": {
   "shadows": "brian2.core.spikesource.SpikeSource"
  },
  "type": "import"
 },
 "brian2.input.spikegeneratorgroup.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.input.spikegeneratorgroup.Variables": {
  "data": {
   "shadows": "brian2.core.variables.Variables"
  },
  "type": "import"
 },
 "brian2.input.spikegeneratorgroup.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "brian2.input.spikegeneratorgroup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.input.spikegeneratorgroup.check_units": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.check_units"
  },
  "type": "import"
 },
 "brian2.input.spikegeneratorgroup.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.input.spikegeneratorgroup.logger": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "brian2.input.spikegeneratorgroup.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.input.spikegeneratorgroup.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.input.spikegeneratorgroup.timestep": {
  "data": {
   "shadows": "brian2.core.functions.timestep"
  },
  "type": "import"
 },
 "brian2.input.timedarray": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.input.timedarray.CacheKey": {
  "data": {
   "shadows": "brian2.utils.caching.CacheKey"
  },
  "type": "import"
 },
 "brian2.input.timedarray.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.input.timedarray.Nameable": {
  "data": {
   "shadows": "brian2.core.names.Nameable"
  },
  "type": "import"
 },
 "brian2.input.timedarray.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.input.timedarray.TimedArray": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "brian2.core.functions.Function",
    "brian2.core.names.Nameable",
    "brian2.utils.caching.CacheKey"
   ]
  },
  "type": "class"
 },
 "brian2.input.timedarray.TimedArray.__init__": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.core.names.Nameable.__init__",
    "brian2.units.allunits.second",
    "brian2.units.fundamentalunits.check_units",
    "brian2.units.fundamentalunits.get_dimensions",
    "float",
    "numpy.asarray",
    "numpy.double"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "brian2.core.functions.Function.__init__",
    "brian2.units.fundamentalunits.get_unit"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d.create_cpp_implementation": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "brian2.input.timedarray._find_K",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d.create_cpp_namespace": {
  "data": {
   "lineno": 167
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d.create_cython_implementation": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "brian2.input.timedarray._find_K",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d.create_cython_namespace": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d.create_numpy_implementation": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "brian2.input.timedarray._find_K",
    "brian2.units.allunits.second",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d.create_numpy_implementation.unitless_timed_array_func": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.int_",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d.timed_array_func": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.input.timedarray._find_K",
    "brian2.units.allunits.second",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.check_units",
    "float",
    "len",
    "numpy.asarray",
    "numpy.clip",
    "numpy.int_",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "brian2.core.functions.Function.__init__",
    "brian2.units.fundamentalunits.get_unit"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d.create_cpp_implementation": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "brian2.input.timedarray._find_K",
    "brian2.utils.stringtools.replace",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d.create_cpp_namespace": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "numpy.double"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d.create_cython_implementation": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "brian2.input.timedarray._find_K",
    "brian2.utils.stringtools.replace",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d.create_cython_namespace": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.double"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d.create_numpy_implementation": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "brian2.input.timedarray._find_K",
    "brian2.units.allunits.second",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d.create_numpy_implementation.unitless_timed_array_func": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "numpy.clip",
    "numpy.int_",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d.timed_array_func": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.input.timedarray._find_K",
    "brian2.units.allunits.second",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.check_units",
    "float",
    "len",
    "numpy.asarray",
    "numpy.clip",
    "numpy.int_",
    "numpy.round"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray.is_locally_constant": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "brian2.input.timedarray.logger",
    "float",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "brian2.input.timedarray._find_K": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "brian2.input.timedarray.logger",
    "brian2.units.allunits.second",
    "int",
    "max",
    "numpy.ceil",
    "numpy.floor",
    "numpy.log2"
   ]
  },
  "type": "function"
 },
 "brian2.input.timedarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.input.timedarray.check_units": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.check_units"
  },
  "type": "import"
 },
 "brian2.input.timedarray.defaultclock": {
  "data": {
   "shadows": "brian2.core.clocks.defaultclock"
  },
  "type": "import"
 },
 "brian2.input.timedarray.get_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_dimensions"
  },
  "type": "import"
 },
 "brian2.input.timedarray.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.input.timedarray.get_unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_unit"
  },
  "type": "import"
 },
 "brian2.input.timedarray.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "brian2.input.timedarray.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.input.timedarray.replace": {
  "data": {
   "shadows": "brian2.utils.stringtools.replace"
  },
  "type": "import"
 },
 "brian2.input.timedarray.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.jinja2": {
  "data": {
   "shadows": "jinja2"
  },
  "type": "import"
 },
 "brian2.logger": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "brian2.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "brian2.memory": {
  "data": {},
  "type": "module"
 },
 "brian2.memory.dynamicarray": {
  "data": {},
  "type": "module"
 },
 "brian2.memory.dynamicarray.DynamicArray": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.memory.dynamicarray.DynamicArray.__getitem__": {
  "data": {
   "lineno": 174
  },
  "type": "function"
 },
 "brian2.memory.dynamicarray.DynamicArray.__getslice__": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "brian2.memory.dynamicarray.DynamicArray.__init__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "zeros"
   ]
  },
  "type": "function"
 },
 "brian2.memory.dynamicarray.DynamicArray.__len__": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.memory.dynamicarray.DynamicArray.__repr__": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "brian2.memory.dynamicarray.DynamicArray.__setitem__": {
  "data": {
   "lineno": 180
  },
  "type": "function"
 },
 "brian2.memory.dynamicarray.DynamicArray.__setslice__": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "brian2.memory.dynamicarray.DynamicArray.__str__": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "brian2.memory.dynamicarray.DynamicArray.resize": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "array",
    "brian2.memory.dynamicarray.getslices",
    "int",
    "maximum",
    "sum",
    "tuple",
    "zeros"
   ]
  },
  "type": "function"
 },
 "brian2.memory.dynamicarray.DynamicArray.resize_along_first": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "array",
    "brian2.memory.dynamicarray.getslices",
    "maximum",
    "tuple",
    "zeros"
   ]
  },
  "type": "function"
 },
 "brian2.memory.dynamicarray.DynamicArray.shrink": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "array",
    "brian2.memory.dynamicarray.getslices",
    "int",
    "isinstance",
    "tuple",
    "zeros"
   ]
  },
  "type": "function"
 },
 "brian2.memory.dynamicarray.DynamicArray1D": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "brian2.memory.dynamicarray.DynamicArray"
   ]
  },
  "type": "class"
 },
 "brian2.memory.dynamicarray.DynamicArray1D.resize": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "int",
    "max",
    "zeros"
   ]
  },
  "type": "function"
 },
 "brian2.memory.dynamicarray.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "brian2.memory.dynamicarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.memory.dynamicarray.getslices": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "slice",
    "tuple"
   ]
  },
  "type": "function"
 },
 "brian2.monitors": {
  "data": {},
  "type": "module"
 },
 "brian2.monitors.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "brian2.monitors.ratemonitor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.monitors.ratemonitor.CodeRunner": {
  "data": {
   "shadows": "brian2.groups.group.CodeRunner"
  },
  "type": "import"
 },
 "brian2.monitors.ratemonitor.Group": {
  "data": {
   "shadows": "brian2.groups.group.Group"
  },
  "type": "import"
 },
 "brian2.monitors.ratemonitor.PopulationRateMonitor": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "brian2.groups.group.CodeRunner",
    "brian2.groups.group.Group"
   ]
  },
  "type": "class"
 },
 "brian2.monitors.ratemonitor.PopulationRateMonitor.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "brian2.core.variables.Variables",
    "brian2.groups.group.CodeRunner.__init__",
    "brian2.units.allunits.hertz.dim",
    "brian2.units.allunits.second.dim",
    "getattr",
    "len",
    "numpy.float64",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.ratemonitor.PopulationRateMonitor.__repr__": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "brian2.monitors.ratemonitor.PopulationRateMonitor.reinit": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.ratemonitor.PopulationRateMonitor.resize": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "brian2.monitors.ratemonitor.PopulationRateMonitor.smooth_rate": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "abs",
    "brian2.monitors.ratemonitor.logger",
    "brian2.units.allunits.hertz.dim",
    "brian2.units.allunits.second",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.check_units",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.convolve",
    "numpy.exp",
    "numpy.ones",
    "numpy.round",
    "past.builtins.basestring",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.ratemonitor.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.monitors.ratemonitor.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.monitors.ratemonitor.Variables": {
  "data": {
   "shadows": "brian2.core.variables.Variables"
  },
  "type": "import"
 },
 "brian2.monitors.ratemonitor.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "brian2.monitors.ratemonitor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.monitors.ratemonitor.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.monitors.ratemonitor.check_units": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.check_units"
  },
  "type": "import"
 },
 "brian2.monitors.ratemonitor.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.monitors.ratemonitor.hertz": {
  "data": {
   "shadows": "brian2.units.allunits.hertz"
  },
  "type": "import"
 },
 "brian2.monitors.ratemonitor.logger": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "brian2.monitors.ratemonitor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.monitors.ratemonitor.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.monitors.spikemonitor": {
  "data": {},
  "type": "module"
 },
 "brian2.monitors.spikemonitor.CodeRunner": {
  "data": {
   "shadows": "brian2.groups.group.CodeRunner"
  },
  "type": "import"
 },
 "brian2.monitors.spikemonitor.DIMENSIONLESS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DIMENSIONLESS"
  },
  "type": "import"
 },
 "brian2.monitors.spikemonitor.EventMonitor": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "brian2.groups.group.CodeRunner",
    "brian2.groups.group.Group"
   ]
  },
  "type": "class"
 },
 "brian2.monitors.spikemonitor.EventMonitor.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.core.names.Nameable.__init__",
    "brian2.core.spikesource.SpikeSource",
    "brian2.core.variables.Variables",
    "brian2.groups.group.CodeRunner.__init__",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "numpy.int32",
    "past.builtins.basestring",
    "set",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.__repr__": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor._values_dict": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "brian2.units.fundamentalunits.Quantity",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.all_values": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.argsort",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.event_trains": {
  "data": {
   "lineno": 322
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.it": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.it_": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "AttributeError",
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.num_events": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.reinit": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.resize": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.values": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.argsort",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.Group": {
  "data": {
   "shadows": "brian2.groups.group.Group"
  },
  "type": "import"
 },
 "brian2.monitors.spikemonitor.Nameable": {
  "data": {
   "shadows": "brian2.core.names.Nameable"
  },
  "type": "import"
 },
 "brian2.monitors.spikemonitor.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.monitors.spikemonitor.SpikeMonitor": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "brian2.monitors.spikemonitor.EventMonitor"
   ]
  },
  "type": "class"
 },
 "brian2.monitors.spikemonitor.SpikeMonitor.__init__": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "brian2.monitors.spikemonitor.SpikeMonitor",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.SpikeMonitor.__repr__": {
  "data": {
   "lineno": 533
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.SpikeMonitor.all_values": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "brian2.monitors.spikemonitor.SpikeMonitor",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.SpikeMonitor.num_spikes": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.SpikeMonitor.spike_trains": {
  "data": {
   "lineno": 438
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.SpikeMonitor.values": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "brian2.monitors.spikemonitor.SpikeMonitor",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.spikemonitor.SpikeSource": {
  "data": {
   "shadows": "brian2.core.spikesource.SpikeSource"
  },
  "type": "import"
 },
 "brian2.monitors.spikemonitor.Variables": {
  "data": {
   "shadows": "brian2.core.variables.Variables"
  },
  "type": "import"
 },
 "brian2.monitors.spikemonitor.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "brian2.monitors.spikemonitor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.monitors.spikemonitor.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.monitors.spikemonitor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.monitors.statemonitor": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.monitors.statemonitor.CodeRunner": {
  "data": {
   "shadows": "brian2.groups.group.CodeRunner"
  },
  "type": "import"
 },
 "brian2.monitors.statemonitor.Group": {
  "data": {
   "shadows": "brian2.groups.group.Group"
  },
  "type": "import"
 },
 "brian2.monitors.statemonitor.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.monitors.statemonitor.Sequence": {
  "data": {
   "shadows": "collections.Sequence"
  },
  "type": "import"
 },
 "brian2.monitors.statemonitor.StateMonitor": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "brian2.groups.group.CodeRunner",
    "brian2.groups.group.Group"
   ]
  },
  "type": "class"
 },
 "brian2.monitors.statemonitor.StateMonitor.__getattr__": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "AttributeError",
    "brian2.groups.group.Group.__getattr__",
    "brian2.units.fundamentalunits.Quantity",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitor.__getitem__": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "TypeError",
    "brian2.core.variables.get_dtype",
    "brian2.monitors.statemonitor.StateMonitorView",
    "collections.Sequence",
    "getattr",
    "hasattr",
    "isinstance",
    "numpy.array",
    "numpy.issubdtype",
    "numpy.signedinteger",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitor.__init__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.core.variables.Variables",
    "brian2.groups.group.CodeRunner.__init__",
    "brian2.monitors.statemonitor.logger",
    "brian2.monitors.statemonitor.numbers",
    "brian2.units.allunits.second.dim",
    "dict",
    "getattr",
    "hasattr",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.int32",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitor.__repr__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitor.record_single_timestep": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitor.reinit": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitor.resize": {
  "data": {
   "lineno": 283
  },
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitorView": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.monitors.statemonitor.StateMonitorView.__getattr__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "AttributeError",
    "brian2.units.allunits.second.dim",
    "brian2.units.fundamentalunits.Quantity",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitorView.__init__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitorView.__repr__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitorView._calc_indices": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "IndexError",
    "brian2.core.variables.get_dtype",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.issubdtype",
    "numpy.ndarray",
    "numpy.nonzero",
    "numpy.signedinteger"
   ]
  },
  "type": "function"
 },
 "brian2.monitors.statemonitor.Subexpression": {
  "data": {
   "shadows": "brian2.core.variables.Subexpression"
  },
  "type": "import"
 },
 "brian2.monitors.statemonitor.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.monitors.statemonitor.Variables": {
  "data": {
   "shadows": "brian2.core.variables.Variables"
  },
  "type": "import"
 },
 "brian2.monitors.statemonitor.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "brian2.monitors.statemonitor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.monitors.statemonitor.get_dtype": {
  "data": {
   "shadows": "brian2.core.variables.get_dtype"
  },
  "type": "import"
 },
 "brian2.monitors.statemonitor.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.monitors.statemonitor.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "brian2.monitors.statemonitor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.monitors.statemonitor.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "brian2.monitors.statemonitor.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.np": {
  "data": {
   "shadows": "brian2.numpy_"
  },
  "type": "import"
 },
 "brian2.numpy": {
  "data": {
   "shadows": "brian2.numpy_"
  },
  "type": "import"
 },
 "brian2.numpy_": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "brian2.numpy_.__all__",
    "brian2.numpy_.numpy",
    "brian2.units.unitsafefunctions.__all__"
   ]
  },
  "type": "module"
 },
 "brian2.numpy_.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "brian2.numpy_.abs": {
  "data": {
   "shadows": "numpy.core.abs"
  },
  "type": "import"
 },
 "brian2.numpy_.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.numpy_.bool": {
  "data": {
   "shadows": "builtins.bool"
  },
  "type": "import"
 },
 "brian2.numpy_.brian2_functions": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions"
  },
  "type": "import"
 },
 "brian2.numpy_.bytes": {
  "data": {
   "shadows": "builtins.bytes"
  },
  "type": "import"
 },
 "brian2.numpy_.complex": {
  "data": {
   "shadows": "builtins.complex"
  },
  "type": "import"
 },
 "brian2.numpy_.float": {
  "data": {
   "shadows": "builtins.float"
  },
  "type": "import"
 },
 "brian2.numpy_.int": {
  "data": {
   "shadows": "builtins.int"
  },
  "type": "import"
 },
 "brian2.numpy_.long": {
  "data": {
   "shadows": "__builtin__.long"
  },
  "type": "import"
 },
 "brian2.numpy_.max": {
  "data": {
   "shadows": "numpy.core.max"
  },
  "type": "import"
 },
 "brian2.numpy_.min": {
  "data": {
   "shadows": "numpy.core.min"
  },
  "type": "import"
 },
 "brian2.numpy_.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.numpy_.object": {
  "data": {
   "shadows": "builtins.object"
  },
  "type": "import"
 },
 "brian2.numpy_.round": {
  "data": {
   "shadows": "numpy.core.round"
  },
  "type": "import"
 },
 "brian2.numpy_.str": {
  "data": {
   "shadows": "builtins.str"
  },
  "type": "import"
 },
 "brian2.numpy_.unicode": {
  "data": {
   "shadows": "__builtin__.unicode"
  },
  "type": "import"
 },
 "brian2.only": {
  "data": {
   "symbols_in_volume": [
    "brian2.devices.all_devices",
    "brian2.devices.set_device",
    "brian2.units.__all__",
    "brian2.units.__all__.extend"
   ]
  },
  "type": "module"
 },
 "brian2.only.__all__": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "brian2.only._all_units": {
  "data": {
   "shadows": "brian2.units.__all__"
  },
  "type": "import"
 },
 "brian2.only._core_preferences": {
  "data": {
   "shadows": "brian2.core.core_preferences"
  },
  "type": "import"
 },
 "brian2.only._cpp_standalone": {
  "data": {
   "shadows": "brian2.devices.cpp_standalone"
  },
  "type": "import"
 },
 "brian2.only.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.only.all_devices": {
  "data": {
   "shadows": "brian2.devices.all_devices"
  },
  "type": "import"
 },
 "brian2.only.device": {
  "data": {
   "shadows": "brian2.devices.device"
  },
  "type": "import"
 },
 "brian2.only.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "brian2.only.get_device": {
  "data": {
   "shadows": "brian2.devices.get_device"
  },
  "type": "import"
 },
 "brian2.only.linked_var": {
  "data": {
   "shadows": "brian2.core.variables.linked_var"
  },
  "type": "import"
 },
 "brian2.only.restore_initial_state": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "brian2.only.gc"
   ]
  },
  "type": "function"
 },
 "brian2.only.seed": {
  "data": {
   "shadows": "brian2.devices.seed"
  },
  "type": "import"
 },
 "brian2.only.set_device": {
  "data": {
   "shadows": "brian2.devices.set_device"
  },
  "type": "import"
 },
 "brian2.only.test": {
  "data": {
   "shadows": "brian2.tests.run"
  },
  "type": "import"
 },
 "brian2.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.parsing": {
  "data": {},
  "type": "module"
 },
 "brian2.parsing.bast": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.parsing.bast.dtype_hierarchy",
    "brian2.parsing.bast.numpy",
    "brian2.utils.logger.get_logger",
    "dict"
   ]
  },
  "type": "module"
 },
 "brian2.parsing.bast.BrianASTRenderer": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.parsing.bast.BrianASTRenderer.__init__": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "brian2.parsing.bast.BrianASTRenderer.render_BinOp": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "brian2.parsing.bast.dtype_hierarchy",
    "brian2.parsing.bast.logger",
    "brian2.parsing.bast.weakref",
    "brian2.parsing.rendering.NodeRenderer",
    "hasattr",
    "max"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.BrianASTRenderer.render_BoolOp": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "TypeError",
    "builtins.all",
    "sum"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.BrianASTRenderer.render_Call": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.parsing.bast.dtype_hierarchy",
    "brian2.parsing.bast.weakref",
    "builtins.all",
    "getattr",
    "len",
    "max",
    "sum",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.BrianASTRenderer.render_Compare": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "builtins.all",
    "sum"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.BrianASTRenderer.render_Constant": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "brian2.parsing.bast.BrianASTRenderer.render_Name": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "brian2.parsing.bast.brian_dtype_from_dtype"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.BrianASTRenderer.render_NameConstant": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "SyntaxError",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.BrianASTRenderer.render_Num": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "brian2.parsing.bast.brian_dtype_from_value",
    "brian2.parsing.rendering.get_node_value"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.BrianASTRenderer.render_UnaryOp": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.BrianASTRenderer.render_node": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "AttributeError",
    "SyntaxError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.NodeRenderer": {
  "data": {
   "shadows": "brian2.parsing.rendering.NodeRenderer"
  },
  "type": "import"
 },
 "brian2.parsing.bast.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "brian2.parsing.bast.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.parsing.bast.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "brian2.parsing.bast.bool_dtype": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "brian2.parsing.bast.brian_ast": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "brian2.parsing.bast.BrianASTRenderer",
    "brian2.parsing.bast.ast"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.brian_dtype_from_dtype": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "TypeError",
    "brian2.parsing.bast.is_boolean_dtype",
    "brian2.parsing.bast.is_float_dtype",
    "brian2.parsing.bast.is_integer_dtype",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.brian_dtype_from_value": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "TypeError",
    "brian2.parsing.bast.is_boolean",
    "brian2.parsing.bast.is_float",
    "brian2.parsing.bast.is_integer",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.dtype_hierarchy": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "brian2.parsing.bast.float_dtypes": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "brian2.parsing.bast.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.parsing.bast.get_node_value": {
  "data": {
   "shadows": "brian2.parsing.rendering.get_node_value"
  },
  "type": "import"
 },
 "brian2.parsing.bast.integer_dtypes": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "brian2.parsing.bast.is_boolean": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.is_boolean_dtype": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "brian2.parsing.bast.bool_dtype",
    "brian2.parsing.bast.numpy"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.is_float": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "brian2.parsing.bast.numpy",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.is_float_dtype": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "brian2.parsing.bast.float_dtypes",
    "brian2.parsing.bast.numpy"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.is_integer": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "brian2.parsing.bast.numpy",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.is_integer_dtype": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "brian2.parsing.bast.integer_dtypes",
    "brian2.parsing.bast.numpy"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.bast.logger": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "brian2.parsing.bast.logical_all": {
  "data": {
   "shadows": "builtins.all"
  },
  "type": "import"
 },
 "brian2.parsing.bast.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.parsing.bast.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "brian2.parsing.dependencies": {
  "data": {},
  "type": "module"
 },
 "brian2.parsing.dependencies.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "brian2.parsing.dependencies.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.parsing.dependencies.abstract_code_dependencies": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "brian2.parsing.dependencies.ast",
    "brian2.parsing.dependencies.get_read_write_funcs",
    "brian2.utils.stringtools.deindent",
    "collections.namedtuple",
    "dict",
    "isinstance",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.dependencies.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "brian2.parsing.dependencies.deindent": {
  "data": {
   "shadows": "brian2.utils.stringtools.deindent"
  },
  "type": "import"
 },
 "brian2.parsing.dependencies.get_read_write_funcs": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.parsing.dependencies.ast",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.dependencies.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "brian2.parsing.expressions": {
  "data": {},
  "type": "module"
 },
 "brian2.parsing.expressions.DIMENSIONLESS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DIMENSIONLESS"
  },
  "type": "import"
 },
 "brian2.parsing.expressions.DimensionMismatchError": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DimensionMismatchError"
  },
  "type": "import"
 },
 "brian2.parsing.expressions.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.parsing.expressions.NodeRenderer": {
  "data": {
   "shadows": "brian2.parsing.rendering.NodeRenderer"
  },
  "type": "import"
 },
 "brian2.parsing.expressions.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.parsing.expressions.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "brian2.parsing.expressions._get_value_from_expression": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "SyntaxError",
    "ValueError",
    "brian2.parsing.expressions.ast",
    "float",
    "getattr",
    "isinstance",
    "past.builtins.basestring",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.expressions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.parsing.expressions.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "brian2.parsing.expressions.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.parsing.expressions.fail_for_dimension_mismatch": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.fail_for_dimension_mismatch"
  },
  "type": "import"
 },
 "brian2.parsing.expressions.get_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_dimensions"
  },
  "type": "import"
 },
 "brian2.parsing.expressions.get_unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_unit"
  },
  "type": "import"
 },
 "brian2.parsing.expressions.get_unit_for_display": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_unit_for_display"
  },
  "type": "import"
 },
 "brian2.parsing.expressions.have_same_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.have_same_dimensions"
  },
  "type": "import"
 },
 "brian2.parsing.expressions.is_boolean_expression": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "SyntaxError",
    "ValueError",
    "all",
    "brian2.parsing.expressions.ast",
    "getattr",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.expressions.parse_expression_dimensions": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "KeyError",
    "SyntaxError",
    "TypeError",
    "ValueError",
    "bool",
    "brian2.core.functions.Function",
    "brian2.parsing.expressions._get_value_from_expression",
    "brian2.parsing.expressions.ast",
    "brian2.parsing.expressions.is_boolean_expression",
    "brian2.parsing.rendering.NodeRenderer",
    "brian2.units.fundamentalunits.DIMENSIONLESS",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.fundamentalunits.Unit",
    "brian2.units.fundamentalunits.get_dimensions",
    "brian2.units.fundamentalunits.get_unit_for_display",
    "brian2.units.fundamentalunits.have_same_dimensions",
    "enumerate",
    "getattr",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "past.builtins.basestring",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.functions": {
  "data": {},
  "type": "module"
 },
 "brian2.parsing.functions.AbstractCodeFunction": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.parsing.functions.AbstractCodeFunction.__init__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "brian2.parsing.functions.AbstractCodeFunction.__str__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "brian2.utils.stringtools.indent"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.functions.FunctionRewriter": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "brian2.parsing.functions.ast"
   ]
  },
  "type": "class"
 },
 "brian2.parsing.functions.FunctionRewriter.__init__": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "brian2.parsing.functions.FunctionRewriter.visit_Call": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "brian2.parsing.functions.VarRewriter",
    "brian2.parsing.functions.ast",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.functions.VarRewriter": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "brian2.parsing.functions.ast"
   ]
  },
  "type": "class"
 },
 "brian2.parsing.functions.VarRewriter.__init__": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "brian2.parsing.functions.VarRewriter.visit_Call": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "brian2.parsing.functions.ast"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.functions.VarRewriter.visit_Name": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "brian2.parsing.functions.ast"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.functions.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "brian2.parsing.functions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.parsing.functions.abstract_code_from_function": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "AttributeError",
    "NodeRenderer",
    "SyntaxError",
    "TypeError",
    "brian2.parsing.functions.AbstractCodeFunction",
    "brian2.parsing.functions.ast",
    "brian2.parsing.functions.inspect",
    "brian2.utils.stringtools.deindent",
    "callable",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.functions.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "brian2.parsing.functions.deindent": {
  "data": {
   "shadows": "brian2.utils.stringtools.deindent"
  },
  "type": "import"
 },
 "brian2.parsing.functions.extract_abstract_code_functions": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "brian2.parsing.functions.abstract_code_from_function",
    "brian2.parsing.functions.ast",
    "brian2.utils.stringtools.deindent"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.functions.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.parsing.functions.indent": {
  "data": {
   "shadows": "brian2.utils.stringtools.indent"
  },
  "type": "import"
 },
 "brian2.parsing.functions.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "brian2.parsing.functions.substitute_abstract_code_functions": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "NodeRenderer",
    "brian2.parsing.functions.FunctionRewriter",
    "brian2.parsing.functions.ast",
    "brian2.utils.stringtools.deindent",
    "brian2.utils.stringtools.get_identifiers",
    "dict",
    "id",
    "id.replace",
    "id.startswith",
    "int",
    "isinstance",
    "len",
    "list",
    "max",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering": {
  "data": {},
  "type": "module"
 },
 "brian2.parsing.rendering.CPPNodeRenderer": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "brian2.parsing.rendering.NodeRenderer"
   ]
  },
  "type": "class"
 },
 "brian2.parsing.rendering.CPPNodeRenderer.render_Assign": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "brian2.parsing.rendering.NodeRenderer"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.CPPNodeRenderer.render_BinOp": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "brian2.parsing.rendering.NodeRenderer"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.CPPNodeRenderer.render_Name": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "brian2.parsing.rendering.CPPNodeRenderer.render_NameConstant": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "brian2.parsing.rendering.DEFAULT_CONSTANTS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_CONSTANTS"
  },
  "type": "import"
 },
 "brian2.parsing.rendering.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.parsing.rendering.NodeRenderer": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.parsing.rendering.NodeRenderer.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_Assign": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "SyntaxError",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_AugAssign": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_BinOp": {
  "data": {
   "lineno": 150
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_BinOp_parentheses": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_BoolOp": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_Call": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "brian2.parsing.rendering.ast",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_Compare": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "SyntaxError",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_Constant": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_Name": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_NameConstant": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_Num": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "brian2.parsing.rendering.get_node_value",
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_UnaryOp": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_code": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "brian2.parsing.rendering.ast"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_element_parentheses": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "brian2.parsing.rendering.get_node_value"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_expr": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "brian2.parsing.rendering.ast"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_func": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_node": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AttributeError",
    "SyntaxError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.NumpyNodeRenderer": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "brian2.parsing.rendering.NodeRenderer"
   ]
  },
  "type": "class"
 },
 "brian2.parsing.rendering.NumpyNodeRenderer.render_UnaryOp": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "brian2.parsing.rendering.NodeRenderer"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "brian2.parsing.rendering.NodeRenderer",
    "brian2.parsing.rendering.sympy"
   ]
  },
  "type": "class"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_BinOp": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "brian2.parsing.rendering.sympy",
    "op"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_BoolOp": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "op"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_Call": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "ValueError",
    "brian2.parsing.rendering.sympy",
    "getattr",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_Compare": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "SyntaxError",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_Name": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "brian2.core.functions.DEFAULT_CONSTANTS",
    "brian2.parsing.rendering.sympy"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_NameConstant": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_Num": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "brian2.parsing.rendering.sympy"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_UnaryOp": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "ValueError",
    "brian2.parsing.rendering.sympy"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_func": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "brian2.core.functions.DEFAULT_FUNCTIONS",
    "brian2.parsing.rendering.sympy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "brian2.parsing.rendering.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.parsing.rendering.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "brian2.parsing.rendering.get_node_value": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "AttributeError",
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.rendering.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.parsing.statements": {
  "data": {
   "symbols_in_volume": [
    "brian2.parsing.statements.COMMENT",
    "brian2.parsing.statements.EXPR",
    "brian2.parsing.statements.OP",
    "brian2.parsing.statements.VARIABLE",
    "pyparsing.CharsNotIn",
    "pyparsing.Optional",
    "pyparsing.Regex",
    "pyparsing.Suppress",
    "pyparsing.Word",
    "pyparsing.alphas",
    "pyparsing.nums"
   ]
  },
  "type": "module"
 },
 "brian2.parsing.statements.COMMENT": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "brian2.parsing.statements.CharsNotIn": {
  "data": {
   "shadows": "pyparsing.CharsNotIn"
  },
  "type": "import"
 },
 "brian2.parsing.statements.EXPR": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "brian2.parsing.statements.OP": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "brian2.parsing.statements.Optional": {
  "data": {
   "shadows": "pyparsing.Optional"
  },
  "type": "import"
 },
 "brian2.parsing.statements.ParseException": {
  "data": {
   "shadows": "pyparsing.ParseException"
  },
  "type": "import"
 },
 "brian2.parsing.statements.Regex": {
  "data": {
   "shadows": "pyparsing.Regex"
  },
  "type": "import"
 },
 "brian2.parsing.statements.STATEMENT": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "brian2.parsing.statements.Suppress": {
  "data": {
   "shadows": "pyparsing.Suppress"
  },
  "type": "import"
 },
 "brian2.parsing.statements.VARIABLE": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "brian2.parsing.statements.Word": {
  "data": {
   "shadows": "pyparsing.Word"
  },
  "type": "import"
 },
 "brian2.parsing.statements.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.parsing.statements.alphas": {
  "data": {
   "shadows": "pyparsing.alphas"
  },
  "type": "import"
 },
 "brian2.parsing.statements.cached": {
  "data": {
   "shadows": "brian2.utils.caching.cached"
  },
  "type": "import"
 },
 "brian2.parsing.statements.nums": {
  "data": {
   "shadows": "pyparsing.nums"
  },
  "type": "import"
 },
 "brian2.parsing.statements.parse_statement": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ValueError",
    "brian2.parsing.statements.STATEMENT",
    "brian2.utils.caching.cached",
    "len",
    "pyparsing.ParseException",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.sympytools": {
  "data": {
   "symbols_in_volume": [
    "brian2.parsing.sympytools.CustomSympyPrinter"
   ]
  },
  "type": "module"
 },
 "brian2.parsing.sympytools.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "brian2.parsing.sympytools.CustomSympyPrinter": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "sympy.printing.str.StrPrinter"
   ]
  },
  "type": "class"
 },
 "brian2.parsing.sympytools.CustomSympyPrinter._print_And": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "brian2.parsing.sympytools.CustomSympyPrinter._print_Function": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "brian2.parsing.sympytools.CustomSympyPrinter._print_Not": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "AssertionError",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.sympytools.CustomSympyPrinter._print_Or": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "brian2.parsing.sympytools.CustomSympyPrinter._print_Relational": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "sympy.printing.precedence.precedence"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.sympytools.DEFAULT_CONSTANTS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_CONSTANTS"
  },
  "type": "import"
 },
 "brian2.parsing.sympytools.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.parsing.sympytools.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.parsing.sympytools.PRINTER": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "brian2.parsing.sympytools.StrPrinter": {
  "data": {
   "shadows": "sympy.printing.str.StrPrinter"
  },
  "type": "import"
 },
 "brian2.parsing.sympytools.SympyNodeRenderer": {
  "data": {
   "shadows": "brian2.parsing.rendering.SympyNodeRenderer"
  },
  "type": "import"
 },
 "brian2.parsing.sympytools._str_to_sympy": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "NameError",
    "SyntaxError",
    "TypeError",
    "ValueError",
    "brian2.parsing.rendering.SympyNodeRenderer",
    "brian2.utils.caching.cached",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.sympytools.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.parsing.sympytools.cached": {
  "data": {
   "shadows": "brian2.utils.caching.cached"
  },
  "type": "import"
 },
 "brian2.parsing.sympytools.check_expression_for_multiple_stateful_functions": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.core.functions.Function",
    "brian2.parsing.sympytools.re",
    "collections.Counter",
    "isinstance",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.sympytools.expression_complexity": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "brian2.parsing.sympytools.sympy",
    "hasattr",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.sympytools.precedence": {
  "data": {
   "shadows": "sympy.printing.precedence.precedence"
  },
  "type": "import"
 },
 "brian2.parsing.sympytools.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.parsing.sympytools.str_to_sympy": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "brian2.parsing.sympytools._str_to_sympy",
    "brian2.parsing.sympytools.check_expression_for_multiple_stateful_functions"
   ]
  },
  "type": "function"
 },
 "brian2.parsing.sympytools.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.parsing.sympytools.sympy_to_str": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "brian2.core.functions.DEFAULT_CONSTANTS.items",
    "brian2.core.functions.DEFAULT_FUNCTIONS.items",
    "brian2.parsing.sympytools.PRINTER",
    "brian2.parsing.sympytools.sympy",
    "brian2.utils.caching.cached",
    "dict",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.pyparsing": {
  "data": {
   "shadows": "pyparsing"
  },
  "type": "import"
 },
 "brian2.random": {
  "data": {},
  "type": "module"
 },
 "brian2.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "brian2.spatialneuron": {
  "data": {},
  "type": "module"
 },
 "brian2.spatialneuron.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "brian2.spatialneuron.spatialneuron": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.spatialneuron.spatialneuron.CodeRunner": {
  "data": {
   "shadows": "brian2.groups.group.CodeRunner"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.DIFFERENTIAL_EQUATION": {
  "data": {
   "shadows": "brian2.equations.equations.DIFFERENTIAL_EQUATION"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.DimensionMismatchError": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DimensionMismatchError"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.Equations": {
  "data": {
   "shadows": "brian2.equations.equations.Equations"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.Expression": {
  "data": {
   "shadows": "brian2.equations.codestrings.Expression"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.FlatMorphology": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.spatialneuron.spatialneuron.FlatMorphology.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "brian2.spatialneuron.spatialneuron.logger",
    "enumerate",
    "len",
    "max",
    "numpy.array",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.FlatMorphology._insert_data": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "len",
    "numpy.asarray",
    "numpy.nan",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.Group": {
  "data": {
   "shadows": "brian2.groups.group.Group"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.NeuronGroup": {
  "data": {
   "shadows": "brian2.groups.neurongroup.NeuronGroup"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.NumpyCodeObject": {
  "data": {
   "shadows": "brian2.codegen.runtime.numpy_rt.numpy_rt.NumpyCodeObject"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.PARAMETER": {
  "data": {
   "shadows": "brian2.equations.equations.PARAMETER"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.SUBEXPRESSION": {
  "data": {
   "shadows": "brian2.equations.equations.SUBEXPRESSION"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.SingleEquation": {
  "data": {
   "shadows": "brian2.equations.equations.SingleEquation"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.SpatialNeuron": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "brian2.groups.neurongroup.NeuronGroup"
   ]
  },
  "type": "class"
 },
 "brian2.spatialneuron.spatialneuron.SpatialNeuron.__getattr__": {
  "data": {
   "lineno": 421
  },
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialNeuron.__getitem__": {
  "data": {
   "lineno": 427
  },
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialNeuron.__init__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "AssertionError",
    "AttributeError",
    "TypeError",
    "brian2.equations.codestrings.Expression",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.Equations",
    "brian2.equations.equations.PARAMETER",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.equations.equations.SingleEquation",
    "brian2.equations.equations.extract_constant_subexpressions",
    "brian2.groups.neurongroup.NeuronGroup.__init__",
    "brian2.groups.neurongroup.SubexpressionUpdater",
    "brian2.parsing.sympytools.str_to_sympy",
    "brian2.parsing.sympytools.sympy_to_str",
    "brian2.spatialneuron.spatialneuron.FlatMorphology",
    "brian2.spatialneuron.spatialneuron.SpatialStateUpdater",
    "brian2.spatialneuron.spatialneuron.copy",
    "brian2.units.allunits.amp",
    "brian2.units.allunits.amp.dim",
    "brian2.units.allunits.meter.dim",
    "brian2.units.allunits.ohm",
    "brian2.units.allunits.volt.dim",
    "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
    "brian2.units.stdunits.cm",
    "brian2.units.stdunits.uF",
    "events",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "past.builtins.basestring",
    "set",
    "str",
    "sympy.Derivative",
    "sympy.Symbol",
    "sympy.diff",
    "sympy.simplify",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialNeuron._find_subtree_end": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "brian2.spatialneuron.spatialneuron.SpatialNeuron",
    "max",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialNeuron.spatialneuron_attribute": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "all",
    "brian2.groups.group.Group.__getattr__",
    "brian2.spatialneuron.spatialneuron.SpatialNeuron",
    "brian2.spatialneuron.spatialneuron.SpatialSubgroup",
    "getattr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialNeuron.spatialneuron_segment": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "brian2.groups.neurongroup.to_start_stop",
    "brian2.groups.subgroup.Subgroup",
    "brian2.units.allunits.meter",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.have_same_dimensions",
    "hasattr",
    "isinstance",
    "slice",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialStateUpdater": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "brian2.groups.group.CodeRunner",
    "brian2.groups.group.Group"
   ]
  },
  "type": "class"
 },
 "brian2.spatialneuron.spatialneuron.SpatialStateUpdater.__init__": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "brian2.core.variables.Variables",
    "brian2.groups.group.CodeRunner.__init__",
    "brian2.spatialneuron.spatialneuron.weakref",
    "brian2.units.allunits.siemens.dim",
    "len",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialStateUpdater.before_run": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": [
    "ImportError",
    "brian2.codegen.runtime.numpy_rt.numpy_rt.NumpyCodeObject",
    "brian2.groups.group.CodeRunner.before_run",
    "brian2.groups.group.create_runner_codeobj",
    "brian2.spatialneuron.spatialneuron.logger",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialSubgroup": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "brian2.groups.subgroup.Subgroup"
   ]
  },
  "type": "class"
 },
 "brian2.spatialneuron.spatialneuron.SpatialSubgroup.__getattr__": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "brian2.spatialneuron.spatialneuron.SpatialNeuron"
   ]
  },
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialSubgroup.__getitem__": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "brian2.spatialneuron.spatialneuron.SpatialNeuron"
   ]
  },
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialSubgroup.__init__": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "brian2.groups.subgroup.Subgroup.__init__"
   ]
  },
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SubexpressionUpdater": {
  "data": {
   "shadows": "brian2.groups.neurongroup.SubexpressionUpdater"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.Subgroup": {
  "data": {
   "shadows": "brian2.groups.subgroup.Subgroup"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.Variables": {
  "data": {
   "shadows": "brian2.core.variables.Variables"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "brian2.spatialneuron.spatialneuron.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.amp": {
  "data": {
   "shadows": "brian2.units.allunits.amp"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.cm": {
  "data": {
   "shadows": "brian2.units.stdunits.cm"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.create_runner_codeobj": {
  "data": {
   "shadows": "brian2.groups.group.create_runner_codeobj"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.extract_constant_subexpressions": {
  "data": {
   "shadows": "brian2.equations.equations.extract_constant_subexpressions"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.fail_for_dimension_mismatch": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.fail_for_dimension_mismatch"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.have_same_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.have_same_dimensions"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.logger": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "brian2.spatialneuron.spatialneuron.meter": {
  "data": {
   "shadows": "brian2.units.allunits.meter"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.ohm": {
  "data": {
   "shadows": "brian2.units.allunits.ohm"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.siemens": {
  "data": {
   "shadows": "brian2.units.allunits.siemens"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.sp": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.str_to_sympy": {
  "data": {
   "shadows": "brian2.parsing.sympytools.str_to_sympy"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.sympy_to_str": {
  "data": {
   "shadows": "brian2.parsing.sympytools.sympy_to_str"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.to_start_stop": {
  "data": {
   "shadows": "brian2.groups.neurongroup.to_start_stop"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.uF": {
  "data": {
   "shadows": "brian2.units.stdunits.uF"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.volt": {
  "data": {
   "shadows": "brian2.units.allunits.volt"
  },
  "type": "import"
 },
 "brian2.spatialneuron.spatialneuron.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "brian2.sphinxext": {
  "data": {},
  "type": "module"
 },
 "brian2.sphinxext.briandoc": {
  "data": {
   "symbols_in_volume": [
    "RuntimeError",
    "brian2.sphinxext.briandoc.sphinx"
   ]
  },
  "type": "module"
 },
 "brian2.sphinxext.briandoc.BrianPrefsDirective": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "docutils.parsers.rst.Directive",
    "docutils.parsers.rst.directives.flag"
   ]
  },
  "type": "class"
 },
 "brian2.sphinxext.briandoc.BrianPrefsDirective.run": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "brian2.core.preferences.prefs.get_documentation",
    "docutils.statemachine.string2lines",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.briandoc.CDomain": {
  "data": {
   "shadows": "sphinx.domains.c.CDomain"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.Directive": {
  "data": {
   "shadows": "docutils.parsers.rst.Directive"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.ManglingDomainBase": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.sphinxext.briandoc.ManglingDomainBase.__init__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "brian2.sphinxext.briandoc.ManglingDomainBase",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.briandoc.ManglingDomainBase.wrap_mangling_directives": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "brian2.sphinxext.briandoc.wrap_mangling_directive"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.briandoc.NumpyCDomain": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "brian2.sphinxext.briandoc.ManglingDomainBase",
    "sphinx.domains.c.CDomain"
   ]
  },
  "type": "class"
 },
 "brian2.sphinxext.briandoc.NumpyPythonDomain": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "brian2.sphinxext.briandoc.ManglingDomainBase",
    "sphinx.domains.python.PythonDomain"
   ]
  },
  "type": "class"
 },
 "brian2.sphinxext.briandoc.PyXRefRole": {
  "data": {
   "shadows": "sphinx.domains.python.PyXRefRole"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.PythonDomain": {
  "data": {
   "shadows": "sphinx.domains.python.PythonDomain"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.ViewList": {
  "data": {
   "shadows": "docutils.statemachine.ViewList"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.XRefRole": {
  "data": {
   "shadows": "sphinx.roles.XRefRole"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.brianobj_role": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "brian2.core.preferences.prefs",
    "brian2.sphinxext.briandoc.inspect",
    "getattr",
    "hasattr",
    "len",
    "py_role",
    "sphinx.domains.python.PyXRefRole",
    "sphinx.roles.XRefRole",
    "str",
    "xref"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.briandoc.directives": {
  "data": {
   "shadows": "docutils.parsers.rst.directives"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.mangle_docstrings": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "brian2.sphinxext.briandoc.re",
    "dict",
    "enumerate",
    "get_doc_object",
    "getattr",
    "int",
    "len",
    "past.builtins.unicode"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.briandoc.mangle_signature": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "SphinxDocString",
    "brian2.sphinxext.briandoc.inspect",
    "brian2.sphinxext.briandoc.pydoc",
    "brian2.sphinxext.briandoc.re",
    "callable",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.briandoc.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.pydoc": {
  "data": {
   "shadows": "pydoc"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.setup": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "brian2.sphinxext.briandoc.BrianPrefsDirective",
    "brian2.sphinxext.briandoc.brianobj_role",
    "brian2.sphinxext.briandoc.mangle_docstrings",
    "brian2.sphinxext.briandoc.mangle_signature",
    "docutils.parsers.rst.directives.register_directive",
    "get_doc_object"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.briandoc.sphinx": {
  "data": {
   "shadows": "sphinx"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.statemachine": {
  "data": {
   "shadows": "docutils.statemachine"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.unicode": {
  "data": {
   "shadows": "past.builtins.unicode"
  },
  "type": "import"
 },
 "brian2.sphinxext.briandoc.wrap_mangling_directive": {
  "data": {
   "lineno": 258
  },
  "type": "function"
 },
 "brian2.sphinxext.briandoc.wrap_mangling_directive.directive": {
  "data": {
   "lineno": 259
  },
  "type": "class"
 },
 "brian2.sphinxext.briandoc.wrap_mangling_directive.directive.run": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "brian2.sphinxext.briandoc.mangle_docstrings",
    "brian2.sphinxext.briandoc.re",
    "docutils.statemachine.ViewList",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape": {
  "data": {},
  "type": "module"
 },
 "brian2.sphinxext.docscrape.ClassDoc": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape.NumpyDocString"
   ]
  },
  "type": "class"
 },
 "brian2.sphinxext.docscrape.ClassDoc.__init__": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "ValueError",
    "brian2.sphinxext.docscrape.FunctionDoc",
    "brian2.sphinxext.docscrape.NumpyDocString",
    "brian2.sphinxext.docscrape.inspect",
    "brian2.sphinxext.docscrape.pydoc",
    "sorted"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.ClassDoc.methods": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape.inspect",
    "callable",
    "getattr",
    "isinstance",
    "property",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.ClassDoc.properties": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape.inspect",
    "getattr",
    "property",
    "set",
    "sphinx.pycode.ModuleAnalyzer.for_module"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.FunctionDoc": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape.NumpyDocString"
   ]
  },
  "type": "class"
 },
 "brian2.sphinxext.docscrape.FunctionDoc.__init__": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.sphinxext.docscrape.NumpyDocString",
    "brian2.sphinxext.docscrape.inspect"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.FunctionDoc.__str__": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape.FunctionDoc",
    "print",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.FunctionDoc.get_func": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape.inspect",
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.ModuleAnalyzer": {
  "data": {
   "shadows": "sphinx.pycode.ModuleAnalyzer"
  },
  "type": "import"
 },
 "brian2.sphinxext.docscrape.NumpyDocString": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape.re",
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.sphinxext.docscrape.NumpyDocString.__getitem__": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape.Reader",
    "brian2.sphinxext.docscrape.textwrap"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString.__setitem__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString.__str__": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._is_at_section": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._parse": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._parse_index": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "len",
    "strip_each_in"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._parse_index.strip_each_in": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._parse_param_list": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape.Reader",
    "brian2.sphinxext.docscrape.dedent_lines"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._parse_see_also": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "push_item"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._parse_see_also.parse_item_name": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._parse_see_also.push_item": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "list",
    "parse_item_name"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._parse_summary": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape.re"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._read_sections": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "StopIteration",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._read_to_next_section": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._str_extended_summary": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._str_header": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._str_indent": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._str_index": {
  "data": {
   "lineno": 376
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._str_param_list": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._str_section": {
  "data": {
   "lineno": 342
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._str_see_also": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._str_signature": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._str_summary": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.NumpyDocString._strip": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.Reader": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.sphinxext.docscrape.Reader.__getitem__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.Reader.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.Reader.eof": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.Reader.is_empty": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.Reader.peek": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.Reader.read": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.Reader.read_to_condition": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "condition_func"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.Reader.read_to_next_empty_line": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.Reader.read_to_next_empty_line.is_empty": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.Reader.read_to_next_unindented_line": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.Reader.read_to_next_unindented_line.is_unindented": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.Reader.reset": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.Reader.seek_next_non_empty_line": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.sphinxext.docscrape.dedent_lines": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape.textwrap"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.header": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.indent": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "str",
    "str.split"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "brian2.sphinxext.docscrape.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "brian2.sphinxext.docscrape.pydoc": {
  "data": {
   "shadows": "pydoc"
  },
  "type": "import"
 },
 "brian2.sphinxext.docscrape.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.sphinxext.docscrape.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "brian2.sphinxext.docscrape.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "brian2.sphinxext.docscrape_sphinx": {
  "data": {},
  "type": "module"
 },
 "brian2.sphinxext.docscrape_sphinx.ModuleAnalyzer": {
  "data": {
   "shadows": "sphinx.pycode.ModuleAnalyzer"
  },
  "type": "import"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxClassDoc": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape_sphinx.SphinxDocString"
   ]
  },
  "type": "class"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxClassDoc.__init__": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString": {
  "data": {
   "lineno": 8
  },
  "type": "class"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString.__init__": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString.__str__": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._obj": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_examples": {
  "data": {
   "lineno": 203
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_extended_summary": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_field_list": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_header": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_indent": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_index": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_member_docs": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_member_list": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "callable",
    "getattr",
    "hasattr",
    "len",
    "property",
    "setattr",
    "sphinx.pycode.ModuleAnalyzer.for_module"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_param_list": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_raises": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_references": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape_sphinx.re",
    "brian2.sphinxext.docscrape_sphinx.sphinx",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_section": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape_sphinx.textwrap"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_see_also": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape_sphinx.SphinxDocString",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_summary": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_warnings": {
  "data": {
   "lineno": 158
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxFunctionDoc": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape_sphinx.SphinxDocString"
   ]
  },
  "type": "class"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxFunctionDoc.__init__": {
  "data": {
   "lineno": 229
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxObjDoc": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape_sphinx.SphinxDocString"
   ]
  },
  "type": "class"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxObjDoc.__init__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape_sphinx.SphinxDocString"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.sphinxext.docscrape_sphinx.get_doc_object": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "brian2.sphinxext.docscrape_sphinx.SphinxClassDoc",
    "brian2.sphinxext.docscrape_sphinx.SphinxFunctionDoc",
    "brian2.sphinxext.docscrape_sphinx.SphinxObjDoc",
    "brian2.sphinxext.docscrape_sphinx.inspect",
    "brian2.sphinxext.docscrape_sphinx.pydoc",
    "callable"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "brian2.sphinxext.docscrape_sphinx.pydoc": {
  "data": {
   "shadows": "pydoc"
  },
  "type": "import"
 },
 "brian2.sphinxext.docscrape_sphinx.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.sphinxext.docscrape_sphinx.sphinx": {
  "data": {
   "shadows": "sphinx"
  },
  "type": "import"
 },
 "brian2.sphinxext.docscrape_sphinx.textwrap": {
  "data": {
   "shadows": "textwrap"
  },
  "type": "import"
 },
 "brian2.sphinxext.examplefinder": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.NeuronGroup",
    "brian2.sphinxext.examplefinder.auto_find_examples",
    "collections.defaultdict",
    "list",
    "print"
   ]
  },
  "type": "module"
 },
 "brian2.sphinxext.examplefinder.NeuronGroup": {
  "data": {
   "shadows": "brian2.NeuronGroup"
  },
  "type": "import"
 },
 "brian2.sphinxext.examplefinder.SpatialNeuron": {
  "data": {
   "shadows": "brian2.SpatialNeuron"
  },
  "type": "import"
 },
 "brian2.sphinxext.examplefinder.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "brian2.sphinxext.examplefinder.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.sphinxext.examplefinder.auto_find_examples": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "brian2.sphinxext.examplefinder.get_examples_map",
    "brian2.sphinxext.examplefinder.get_tutorials_map",
    "brian2.sphinxext.examplefinder.the_examples_map",
    "brian2.sphinxext.examplefinder.the_tutorials_map",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.examplefinder.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "brian2.sphinxext.examplefinder.get_examples_map": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "brian2.sphinxext.examplefinder.get_map",
    "brian2.sphinxext.examplefinder.the_examples_map"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.examplefinder.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.sphinxext.examplefinder.get_map": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "GlobDirectoryWalker",
    "brian2.sphinxext.examplefinder.os",
    "brian2.utils.stringtools.get_identifiers",
    "id",
    "id.append",
    "open",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.examplefinder.get_tutorials_map": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "brian2.sphinxext.examplefinder.get_map",
    "brian2.sphinxext.examplefinder.the_tutorials_map"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.examplefinder.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.sphinxext.examplefinder.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "brian2.sphinxext.examplefinder.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.sphinxext.examplefinder.the_examples_map": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "brian2.sphinxext.examplefinder.the_tutorials_map": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "brian2.sphinxext.generate_examples": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.sphinxext.generate_examples.main"
   ]
  },
  "type": "module"
 },
 "brian2.sphinxext.generate_examples.GlobDirectoryWalker": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "brian2.sphinxext.generate_examples.GlobDirectoryWalker.__getitem__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "IndexError",
    "brian2.sphinxext.generate_examples.fnmatch",
    "brian2.sphinxext.generate_examples.os"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.generate_examples.GlobDirectoryWalker.__init__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "brian2.sphinxext.generate_examples.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.sphinxext.generate_examples.codecs": {
  "data": {
   "shadows": "codecs"
  },
  "type": "import"
 },
 "brian2.sphinxext.generate_examples.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "brian2.sphinxext.generate_examples.fnmatch": {
  "data": {
   "shadows": "fnmatch"
  },
  "type": "import"
 },
 "brian2.sphinxext.generate_examples.glob": {
  "data": {
   "shadows": "glob"
  },
  "type": "import"
 },
 "brian2.sphinxext.generate_examples.main": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "brian2.sphinxext.generate_examples.GlobDirectoryWalker",
    "brian2.sphinxext.generate_examples.codecs",
    "brian2.sphinxext.generate_examples.glob",
    "brian2.sphinxext.generate_examples.os",
    "brian2.sphinxext.generate_examples.shutil",
    "collections.defaultdict",
    "insert_category",
    "len",
    "list",
    "open",
    "print",
    "range",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.generate_examples.main.insert_category": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "brian2.sphinxext.generate_examples.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.sphinxext.generate_examples.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "brian2.sphinxext.generate_examples.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "brian2.stateupdaters": {
  "data": {},
  "type": "module"
 },
 "brian2.stateupdaters.GSL": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.stateupdaters.GSL.GSLStateUpdater",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.stateupdaters.GSL.CPPStandaloneDevice": {
  "data": {
   "shadows": "brian2.devices.cpp_standalone.device.CPPStandaloneDevice"
  },
  "type": "import"
 },
 "brian2.stateupdaters.GSL.GSLContainer": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.stateupdaters.GSL.GSLContainer.__call__": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "brian2.stateupdaters.GSL.GSLContainer.__init__": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "brian2.stateupdaters.GSL.GSLContainer.get_codeobj_class": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "NotImplementedError",
    "auto_target",
    "brian2.devices.cpp_standalone.device.CPPStandaloneDevice",
    "brian2.devices.device.get_device",
    "brian2.stateupdaters.GSL.sys",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.GSL.GSLStateUpdater": {
  "data": {
   "lineno": 145
  },
  "type": "class"
 },
 "brian2.stateupdaters.GSL.GSLStateUpdater.__call__": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "UnsupportedEquationsException",
    "brian2.stateupdaters.GSL.GSLContainer",
    "brian2.stateupdaters.GSL.default_method_options",
    "brian2.stateupdaters.GSL.logger",
    "extract_method_options",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.GSL.GSLStateUpdater.__init__": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "brian2.stateupdaters.GSL.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "brian2.stateupdaters.GSL.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.stateupdaters.GSL.default_method_options": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "brian2.stateupdaters.GSL.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.stateupdaters.GSL.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.stateupdaters.GSL.gsl_rk2": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "brian2.stateupdaters.GSL.gsl_rk4": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "brian2.stateupdaters.GSL.gsl_rk8pd": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "brian2.stateupdaters.GSL.gsl_rkck": {
  "data": {
   "lineno": 216
  },
  "type": "constant"
 },
 "brian2.stateupdaters.GSL.gsl_rkf45": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "brian2.stateupdaters.GSL.logger": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "brian2.stateupdaters.GSL.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.stateupdaters.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "brian2.stateupdaters.base": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.stateupdaters.base.ABCMeta": {
  "data": {
   "shadows": "abc.ABCMeta"
  },
  "type": "import"
 },
 "brian2.stateupdaters.base.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "brian2.stateupdaters.base.StateUpdateMethod": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "abc.ABCMeta",
    "dict",
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.stateupdaters.base.StateUpdateMethod.__call__": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.base.StateUpdateMethod.apply_stateupdater": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.stateupdaters.base.StateUpdateMethod",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "brian2.stateupdaters.base.logger",
    "brian2.stateupdaters.base.time",
    "brian2.utils.caching.cached",
    "collections.Iterable",
    "getattr",
    "hasattr",
    "isinstance",
    "past.builtins.basestring",
    "repr",
    "stateupdater",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.base.StateUpdateMethod.register": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "brian2.stateupdaters.base.StateUpdateMethod",
    "isinstance",
    "staticmethod",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.base.UnsupportedEquationsException": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "brian2.stateupdaters.base.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "brian2.stateupdaters.base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.stateupdaters.base.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "brian2.stateupdaters.base.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.stateupdaters.base.cached": {
  "data": {
   "shadows": "brian2.utils.caching.cached"
  },
  "type": "import"
 },
 "brian2.stateupdaters.base.extract_method_options": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "KeyError",
    "dict",
    "len",
    "sorted"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.base.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.stateupdaters.base.logger": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "brian2.stateupdaters.base.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.stateupdaters.exact.IndependentStateUpdater",
    "brian2.stateupdaters.exact.LinearStateUpdater",
    "brian2.stateupdaters.exact.linear",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.stateupdaters.exact.I": {
  "data": {
   "shadows": "sympy.I"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact.IndependentStateUpdater": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "brian2.stateupdaters.base.StateUpdateMethod"
   ]
  },
  "type": "class"
 },
 "brian2.stateupdaters.exact.IndependentStateUpdater.__call__": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "RuntimeError",
    "ValueError",
    "brian2.parsing.sympytools.str_to_sympy",
    "brian2.parsing.sympytools.sympy_to_str",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "brian2.stateupdaters.base.extract_method_options",
    "brian2.stateupdaters.exact.logger",
    "f",
    "getattr",
    "len",
    "str",
    "sympy.Derivative",
    "sympy.Eq",
    "sympy.Function",
    "sympy.Symbol",
    "sympy.dsolve",
    "sympy.solve"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.exact.LinearStateUpdater": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "brian2.stateupdaters.base.StateUpdateMethod"
   ]
  },
  "type": "class"
 },
 "brian2.stateupdaters.exact.LinearStateUpdater.__call__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.equations.codestrings.is_constant_over_dt",
    "brian2.parsing.sympytools.sympy_to_str",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "brian2.stateupdaters.base.extract_method_options",
    "brian2.stateupdaters.exact.get_linear_system",
    "brian2.stateupdaters.exact.itertools",
    "enumerate",
    "len",
    "set",
    "sympy.I",
    "sympy.ImmutableMatrix",
    "sympy.MatrixSymbol",
    "sympy.Symbol",
    "sympy.cancel",
    "sympy.factor_terms",
    "sympy.im",
    "sympy.re",
    "sympy.signsimp",
    "sympy.solve_linear_system",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.exact.LinearStateUpdater.__repr__": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "brian2.stateupdaters.exact.StateUpdateMethod": {
  "data": {
   "shadows": "brian2.stateupdaters.base.StateUpdateMethod"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact.Symbol": {
  "data": {
   "shadows": "sympy.Symbol"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact.UnsupportedEquationsException": {
  "data": {
   "shadows": "brian2.stateupdaters.base.UnsupportedEquationsException"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact.Wild": {
  "data": {
   "shadows": "sympy.Wild"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "brian2.stateupdaters.exact.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact.exact": {
  "data": {
   "lineno": 246
  },
  "type": "constant"
 },
 "brian2.stateupdaters.exact.extract_method_options": {
  "data": {
   "shadows": "brian2.stateupdaters.base.extract_method_options"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact.get_linear_system": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "brian2.parsing.sympytools.str_to_sympy",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "enumerate",
    "len",
    "sympy.Symbol",
    "sympy.Wild",
    "sympy.zeros"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.exact.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact.im": {
  "data": {
   "shadows": "sympy.im"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact.independent": {
  "data": {
   "lineno": 244
  },
  "type": "constant"
 },
 "brian2.stateupdaters.exact.is_constant_over_dt": {
  "data": {
   "shadows": "brian2.equations.codestrings.is_constant_over_dt"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact.linear": {
  "data": {
   "lineno": 245
  },
  "type": "constant"
 },
 "brian2.stateupdaters.exact.logger": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "brian2.stateupdaters.exact.re": {
  "data": {
   "shadows": "sympy.re"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact.sp": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact.str_to_sympy": {
  "data": {
   "shadows": "brian2.parsing.sympytools.str_to_sympy"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exact.sympy_to_str": {
  "data": {
   "shadows": "brian2.parsing.sympytools.sympy_to_str"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit": {
  "data": {
   "symbols_in_volume": [
    "brian2.stateupdaters.explicit.ExplicitStateUpdater",
    "brian2.stateupdaters.explicit._symbol",
    "brian2.stateupdaters.explicit.diagonal_noise",
    "brian2.stateupdaters.explicit.sympy"
   ]
  },
  "type": "module"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "brian2.stateupdaters.explicit.string",
    "pyparsing.Group",
    "pyparsing.Literal",
    "pyparsing.Suppress",
    "pyparsing.Word",
    "pyparsing.ZeroOrMore",
    "pyparsing.restOfLine.setResultsName"
   ]
  },
  "type": "class"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater.__call__": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "UnsupportedEquationsException",
    "brian2.equations.codestrings.is_constant_over_dt",
    "brian2.parsing.sympytools.str_to_sympy",
    "brian2.stateupdaters.explicit._symbol",
    "brian2.stateupdaters.explicit.split_expression",
    "dict",
    "extract_method_options",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater.__init__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "AssertionError",
    "SyntaxError",
    "brian2.parsing.sympytools.str_to_sympy",
    "brian2.stateupdaters.explicit.ExplicitStateUpdater",
    "brian2.stateupdaters.explicit.SYMBOLS",
    "brian2.stateupdaters.explicit._symbol",
    "brian2.stateupdaters.explicit.sympy",
    "dict",
    "list",
    "pyparsing.ParseException",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater.__repr__": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "len",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater.__str__": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "brian2.parsing.sympytools.sympy_to_str",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater._generate_RHS": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "brian2.parsing.sympytools.sympy_to_str",
    "brian2.stateupdaters.explicit.sympy"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater._latex": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "sympy.Symbol",
    "sympy.latex"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater._non_stochastic_part": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "brian2.stateupdaters.explicit._symbol",
    "brian2.stateupdaters.explicit.operator",
    "dict",
    "functools.reduce",
    "isinstance",
    "len",
    "past.builtins.basestring"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater._repr_latex_": {
  "data": {
   "lineno": 308
  },
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater._stochastic_part": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "brian2.stateupdaters.explicit._symbol",
    "dict",
    "isinstance",
    "past.builtins.basestring"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater.replace_func": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "ValueError",
    "brian2.parsing.sympytools.str_to_sympy",
    "brian2.stateupdaters.explicit.SYMBOLS",
    "brian2.stateupdaters.explicit._symbol",
    "dict",
    "str",
    "sympy.core.sympify.SympifyError"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.explicit.Group": {
  "data": {
   "shadows": "pyparsing.Group"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.Literal": {
  "data": {
   "shadows": "pyparsing.Literal"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.ParseException": {
  "data": {
   "shadows": "pyparsing.ParseException"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.SYMBOLS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "brian2.stateupdaters.explicit.Suppress": {
  "data": {
   "shadows": "pyparsing.Suppress"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.Symbol": {
  "data": {
   "shadows": "sympy.Symbol"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.SympifyError": {
  "data": {
   "shadows": "sympy.core.sympify.SympifyError"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.Word": {
  "data": {
   "shadows": "pyparsing.Word"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.ZeroOrMore": {
  "data": {
   "shadows": "pyparsing.ZeroOrMore"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "brian2.stateupdaters.explicit._symbol": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "brian2.stateupdaters.explicit.sympy"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.explicit.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.diagonal_noise": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "UnsupportedEquationsException",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.explicit.euler": {
  "data": {
   "lineno": 682
  },
  "type": "constant"
 },
 "brian2.stateupdaters.explicit.heun": {
  "data": {
   "lineno": 741
  },
  "type": "constant"
 },
 "brian2.stateupdaters.explicit.is_constant_over_dt": {
  "data": {
   "shadows": "brian2.equations.codestrings.is_constant_over_dt"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.latex": {
  "data": {
   "shadows": "sympy.latex"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.milstein": {
  "data": {
   "lineno": 732
  },
  "type": "constant"
 },
 "brian2.stateupdaters.explicit.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.restOfLine": {
  "data": {
   "shadows": "pyparsing.restOfLine"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.rk2": {
  "data": {
   "lineno": 686
  },
  "type": "constant"
 },
 "brian2.stateupdaters.explicit.rk4": {
  "data": {
   "lineno": 691
  },
  "type": "constant"
 },
 "brian2.stateupdaters.explicit.split_expression": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "brian2.stateupdaters.explicit.SYMBOLS",
    "brian2.stateupdaters.explicit.sympy",
    "f",
    "g"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.explicit.str_to_sympy": {
  "data": {
   "shadows": "brian2.parsing.sympytools.str_to_sympy"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.stateupdaters.explicit.sympy_to_str": {
  "data": {
   "shadows": "brian2.parsing.sympytools.sympy_to_str"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exponential_euler": {
  "data": {
   "symbols_in_volume": [
    "brian2.stateupdaters.exponential_euler.ExponentialEulerStateUpdater"
   ]
  },
  "type": "module"
 },
 "brian2.stateupdaters.exponential_euler.ExponentialEulerStateUpdater": {
  "data": {
   "lineno": 70
  },
  "type": "class"
 },
 "brian2.stateupdaters.exponential_euler.ExponentialEulerStateUpdater.__call__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "UnsupportedEquationsException",
    "ValueError",
    "brian2.parsing.sympytools.sympy_to_str",
    "brian2.stateupdaters.exponential_euler.get_conditionally_linear_system",
    "extract_method_options",
    "sympy.Symbol",
    "sympy.exp"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.exponential_euler.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "brian2.stateupdaters.exponential_euler.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exponential_euler.exponential_euler": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "brian2.stateupdaters.exponential_euler.get_conditionally_linear_system": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "brian2.parsing.sympytools.str_to_sympy",
    "len",
    "sympy.Symbol",
    "sympy.collect"
   ]
  },
  "type": "function"
 },
 "brian2.stateupdaters.exponential_euler.sp": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exponential_euler.str_to_sympy": {
  "data": {
   "shadows": "brian2.parsing.sympytools.str_to_sympy"
  },
  "type": "import"
 },
 "brian2.stateupdaters.exponential_euler.sympy_to_str": {
  "data": {
   "shadows": "brian2.parsing.sympytools.sympy_to_str"
  },
  "type": "import"
 },
 "brian2.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.synapses": {
  "data": {},
  "type": "module"
 },
 "brian2.synapses.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "brian2.synapses.parse_synaptic_generator_syntax": {
  "data": {
   "symbols_in_volume": [
    "brian2.synapses.parse_synaptic_generator_syntax.handle_range",
    "brian2.synapses.parse_synaptic_generator_syntax.handle_sample"
   ]
  },
  "type": "module"
 },
 "brian2.synapses.parse_synaptic_generator_syntax.NodeRenderer": {
  "data": {
   "shadows": "brian2.parsing.rendering.NodeRenderer"
  },
  "type": "import"
 },
 "brian2.synapses.parse_synaptic_generator_syntax.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "brian2.synapses.parse_synaptic_generator_syntax._cname": {
  "data": {
   "lineno": 9
  },
  "type": "function"
 },
 "brian2.synapses.parse_synaptic_generator_syntax.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.synapses.parse_synaptic_generator_syntax.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "brian2.synapses.parse_synaptic_generator_syntax.handle_range": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "SyntaxError",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.parse_synaptic_generator_syntax.handle_sample": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "SyntaxError",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.parse_synaptic_generator_syntax.iterator_function_handlers": {
  "data": {
   "lineno": 77
  },
  "type": "constant"
 },
 "brian2.synapses.parse_synaptic_generator_syntax.parse_synapse_generator": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "Exception",
    "SyntaxError",
    "brian2.parsing.rendering.NodeRenderer",
    "brian2.synapses.parse_synaptic_generator_syntax._cname",
    "brian2.synapses.parse_synaptic_generator_syntax.ast",
    "brian2.synapses.parse_synaptic_generator_syntax.iterator_function_handlers",
    "getattr",
    "iterator_handler",
    "len",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.spikequeue": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.synapses.spikequeue.INITIAL_MAXSPIKESPER_DT": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "brian2.synapses.spikequeue.SpikeQueue": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.synapses.spikequeue.SpikeQueue.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "int",
    "numpy.int32",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue._extract_spikes": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "enumerate",
    "int",
    "len",
    "numpy.array",
    "numpy.sum",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue._full_state": {
  "data": {
   "lineno": 171
  },
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue._insert": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "brian2.utils.arrays.calc_repeats",
    "int",
    "len",
    "max",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue._insert_homogeneous": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue._resize": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "int",
    "numpy.ceil",
    "numpy.log2",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue._restore_from_full_state": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "int",
    "numpy.empty",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue._store_spikes": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue.advance": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue.peek": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue.prepare": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "int",
    "len",
    "map",
    "max",
    "min",
    "numpy.arange",
    "numpy.argsort",
    "numpy.array",
    "numpy.int",
    "numpy.ravel",
    "numpy.round",
    "numpy.searchsorted",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue.push": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "brian2.synapses.spikequeue.bisect",
    "len",
    "numpy.concatenate",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.spikequeue.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "brian2.synapses.spikequeue.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.synapses.spikequeue.bisect": {
  "data": {
   "shadows": "bisect"
  },
  "type": "import"
 },
 "brian2.synapses.spikequeue.calc_repeats": {
  "data": {
   "shadows": "brian2.utils.arrays.calc_repeats"
  },
  "type": "import"
 },
 "brian2.synapses.spikequeue.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.synapses.spikequeue.logger": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "brian2.synapses.spikequeue.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.synapses.synapses": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian2.utils.logger.get_logger"
   ]
  },
  "type": "module"
 },
 "brian2.synapses.synapses.CodeRunner": {
  "data": {
   "shadows": "brian2.groups.group.CodeRunner"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.DIFFERENTIAL_EQUATION": {
  "data": {
   "shadows": "brian2.equations.equations.DIFFERENTIAL_EQUATION"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.DIMENSIONLESS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DIMENSIONLESS"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.DynamicArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.DynamicArrayVariable"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.Equations": {
  "data": {
   "shadows": "brian2.equations.equations.Equations"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.Group": {
  "data": {
   "shadows": "brian2.groups.group.Group"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.INTEGER": {
  "data": {
   "shadows": "brian2.equations.equations.INTEGER"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.MAX_SYNAPSES": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "brian2.synapses.synapses.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.MutableMapping": {
  "data": {
   "shadows": "collections.MutableMapping"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.NodeRenderer": {
  "data": {
   "shadows": "brian2.parsing.rendering.NodeRenderer"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.PARAMETER": {
  "data": {
   "shadows": "brian2.equations.equations.PARAMETER"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.SUBEXPRESSION": {
  "data": {
   "shadows": "brian2.equations.equations.SUBEXPRESSION"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.Sequence": {
  "data": {
   "shadows": "collections.Sequence"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.SingleEquation": {
  "data": {
   "shadows": "brian2.equations.equations.SingleEquation"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.SpikeSource": {
  "data": {
   "shadows": "brian2.core.spikesource.SpikeSource"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.StateUpdateMethod": {
  "data": {
   "shadows": "brian2.stateupdaters.base.StateUpdateMethod"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.StateUpdater": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "brian2.groups.group.CodeRunner"
   ]
  },
  "type": "class"
 },
 "brian2.synapses.synapses.StateUpdater.__init__": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "brian2.groups.group.CodeRunner.__init__"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.StateUpdater.update_abstract_code": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "brian2.stateupdaters.base.StateUpdateMethod.apply_stateupdater",
    "isinstance",
    "len",
    "past.builtins.basestring",
    "stateupdate_output"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.SubexpressionUpdater": {
  "data": {
   "shadows": "brian2.groups.neurongroup.SubexpressionUpdater"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.SummedVariableUpdater": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "brian2.groups.group.CodeRunner"
   ]
  },
  "type": "class"
 },
 "brian2.synapses.synapses.SummedVariableUpdater.__init__": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "brian2.groups.group.CodeRunner.__init__",
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "brian2.groups.group.Group",
    "brian2.synapses.synapses.functools",
    "property"
   ]
  },
  "type": "class"
 },
 "brian2.synapses.synapses.Synapses.__getitem__": {
  "data": {
   "lineno": 948,
   "symbols_in_volume": [
    "brian2.synapses.synapses.SynapticSubgroup"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses.__init__": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "SyntaxError",
    "TypeError",
    "ValueError",
    "brian2.core.variables.DynamicArrayVariable",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.Equations",
    "brian2.equations.equations.PARAMETER",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.groups.group.Group.__init__",
    "brian2.groups.neurongroup.SubexpressionUpdater",
    "brian2.groups.neurongroup.extract_constant_subexpressions",
    "brian2.synapses.synapses.StateUpdater",
    "brian2.synapses.synapses.SummedVariableUpdater",
    "brian2.synapses.synapses.SynapticIndexing",
    "brian2.synapses.synapses.logger",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
    "collections.Mapping",
    "collections.MutableMapping",
    "collections.defaultdict",
    "getattr",
    "isinstance",
    "len",
    "past.builtins.basestring",
    "set",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._add_synapses_from_arrays": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "IndexError",
    "brian2.codegen.codeobject.create_runner_codeobj",
    "brian2.core.variables.Variables",
    "brian2.synapses.synapses.logger",
    "codeobj",
    "len",
    "numpy.atleast_1d",
    "numpy.int32",
    "numpy.max",
    "numpy.min",
    "numpy.random.rand"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._add_synapses_generator": {
  "data": {
   "lineno": 1600,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "brian2.codegen.codeobject.create_runner_codeobj",
    "brian2.core.namespace.get_local_namespace",
    "brian2.core.variables.Variables",
    "brian2.synapses.parse_synaptic_generator_syntax.parse_synapse_generator",
    "brian2.synapses.synapses.logger",
    "codeobj",
    "collections.defaultdict",
    "numpy.bool",
    "numpy.int32",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._add_updater": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "ValueError",
    "brian2.core.spikesource.SpikeSource",
    "brian2.synapses.synapses.SynapticPathway",
    "hasattr",
    "isinstance",
    "setattr",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._check_parsed_synapses_generator": {
  "data": {
   "lineno": 1727,
   "symbols_in_volume": [
    "TypeError",
    "brian2.parsing.bast.brian_ast",
    "brian2.utils.stringtools.get_identifiers"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._create_variables": {
  "data": {
   "lineno": 1040,
   "symbols_in_volume": [
    "AssertionError",
    "SyntaxError",
    "TypeError",
    "ValueError",
    "brian2.core.variables.Variables",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.PARAMETER",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.groups.group.get_dtype",
    "brian2.groups.neurongroup.check_identifier_pre_post",
    "brian2.synapses.synapses.logger",
    "brian2.units.allunits.second.dim",
    "getattr",
    "numpy.int32",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._expression_index_dependence": {
  "data": {
   "lineno": 1567,
   "symbols_in_volume": [
    "any",
    "brian2.codegen.translation.get_identifiers_recursively",
    "brian2.parsing.rendering.NodeRenderer",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._get_delay": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._get_multisynaptic_indices": {
  "data": {
   "lineno": 1496
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._resize": {
  "data": {
   "lineno": 1432,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.synapses.synapses.numbers",
    "isinstance",
    "len",
    "numpy.integer",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._set_delay": {
  "data": {
   "lineno": 952,
   "symbols_in_volume": [
    "AttributeError"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._update_synapse_numbers": {
  "data": {
   "lineno": 1445,
   "symbols_in_volume": [
    "brian2.utils.arrays.calc_repeats",
    "int",
    "len",
    "numpy.bincount"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses.before_run": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "brian2.equations.equations.check_subexpressions",
    "brian2.synapses.synapses.Synapses",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses.check_variable_write": {
  "data": {
   "lineno": 1413,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses.connect": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "IndexError",
    "SyntaxError",
    "TypeError",
    "ValueError",
    "bool",
    "brian2.core.base.device_override",
    "brian2.core.namespace.get_local_namespace",
    "brian2.synapses.synapses.numbers",
    "brian2.synapses.synapses.re",
    "brian2.utils.stringtools.word_substitute",
    "collections.Sequence",
    "float",
    "hasattr",
    "int",
    "isinstance",
    "len",
    "numpy.asarray",
    "numpy.broadcast_arrays",
    "numpy.issubdtype",
    "numpy.ndarray",
    "numpy.signedinteger",
    "past.builtins.basestring",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses.register_variable": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses.unregister_variable": {
  "data": {
   "lineno": 1490
  },
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticIndexing": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.synapses.synapses.SynapticIndexing.__call__": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "IndexError",
    "NotImplementedError",
    "brian2.synapses.synapses.find_synapses",
    "brian2.synapses.synapses.numbers",
    "brian2.synapses.synapses.slice_to_test",
    "collections.Sequence",
    "hasattr",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.flatnonzero",
    "numpy.int32",
    "numpy.intersect1d",
    "numpy.ndarray",
    "past.builtins.basestring",
    "slice",
    "test_k",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticIndexing.__init__": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "brian2.core.base.weakproxy_with_fallback",
    "brian2.synapses.synapses.weakref"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "brian2.groups.group.CodeRunner",
    "brian2.groups.group.Group"
   ]
  },
  "type": "class"
 },
 "brian2.synapses.synapses.SynapticPathway.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.core.variables.Variables",
    "brian2.groups.group.CodeRunner.__init__",
    "brian2.synapses.synapses.weakref",
    "brian2.units.allunits.second",
    "brian2.units.allunits.second.dim",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
    "getattr",
    "isinstance",
    "len",
    "list",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway._full_state": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "brian2.synapses.synapses.SynapticPathway",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway._restore_from_full_state": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "brian2.devices.device.get_device",
    "brian2.synapses.synapses.SynapticPathway",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway.before_run": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "brian2.codegen.codeobject.create_runner_codeobj",
    "brian2.core.base.device_override",
    "brian2.groups.group.CodeRunner.before_run",
    "brian2.synapses.synapses.weakref"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway.check_variable_write": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway.initialise_queue": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "TypeError",
    "brian2.devices.device.get_device",
    "brian2.synapses.synapses.logger",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway.push_spikes": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "events",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway.update_abstract_code": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "brian2.core.base.device_override",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "brian2.stateupdaters.exact.independent",
    "brian2.stateupdaters.exact.linear",
    "brian2.synapses.synapses.re"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticSubgroup": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.synapses.synapses.SynapticSubgroup.__init__": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "brian2.core.base.weakproxy_with_fallback"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticSubgroup.__repr__": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticSubgroup._indices": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.UnsupportedEquationsException": {
  "data": {
   "shadows": "brian2.stateupdaters.base.UnsupportedEquationsException"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.Variables": {
  "data": {
   "shadows": "brian2.core.variables.Variables"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.__all__": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "brian2.synapses.synapses.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.brian_ast": {
  "data": {
   "shadows": "brian2.parsing.bast.brian_ast"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.calc_repeats": {
  "data": {
   "shadows": "brian2.utils.arrays.calc_repeats"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.check_identifier_pre_post": {
  "data": {
   "shadows": "brian2.groups.neurongroup.check_identifier_pre_post"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.check_subexpressions": {
  "data": {
   "shadows": "brian2.equations.equations.check_subexpressions"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.create_runner_codeobj": {
  "data": {
   "shadows": "brian2.codegen.codeobject.create_runner_codeobj"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.device_override": {
  "data": {
   "shadows": "brian2.core.base.device_override"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.extract_constant_subexpressions": {
  "data": {
   "shadows": "brian2.groups.neurongroup.extract_constant_subexpressions"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.fail_for_dimension_mismatch": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.fail_for_dimension_mismatch"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.find_synapses": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "TypeError",
    "brian2.synapses.synapses.slice_to_test",
    "int",
    "isinstance",
    "numpy.array",
    "numpy.flatnonzero",
    "numpy.int32",
    "slice",
    "test"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.get_dtype": {
  "data": {
   "shadows": "brian2.groups.group.get_dtype"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.get_identifiers_recursively": {
  "data": {
   "shadows": "brian2.codegen.translation.get_identifiers_recursively"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.get_local_namespace": {
  "data": {
   "shadows": "brian2.core.namespace.get_local_namespace"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.get_logger": {
  "data": {
   "shadows": "brian2.utils.logger.get_logger"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.independent": {
  "data": {
   "shadows": "brian2.stateupdaters.exact.independent"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.linear": {
  "data": {
   "shadows": "brian2.stateupdaters.exact.linear"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.logger": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "brian2.synapses.synapses.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.parse_synapse_generator": {
  "data": {
   "shadows": "brian2.synapses.parse_synaptic_generator_syntax.parse_synapse_generator"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.slice_to_test": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "isinstance",
    "len",
    "numpy.repeat",
    "slice",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.synapses.synapses.weakproxy_with_fallback": {
  "data": {
   "shadows": "brian2.core.base.weakproxy_with_fallback"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "brian2.synapses.synapses.word_substitute": {
  "data": {
   "shadows": "brian2.utils.stringtools.word_substitute"
  },
  "type": "import"
 },
 "brian2.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.test": {
  "data": {
   "shadows": "brian2.only.test"
  },
  "type": "import"
 },
 "brian2.tests": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "_pytest.doctest.DoctestModule",
    "brian2.tests.OurDoctestModule",
    "brian2.tests.run"
   ]
  },
  "type": "module"
 },
 "brian2.tests.BrianLogger": {
  "data": {
   "shadows": "brian2.utils.logger.BrianLogger"
  },
  "type": "import"
 },
 "brian2.tests.Cython": {
  "data": {
   "shadows": "Cython"
  },
  "type": "import"
 },
 "brian2.tests.LOG_LEVELS": {
  "data": {
   "shadows": "brian2.utils.logger.LOG_LEVELS"
  },
  "type": "import"
 },
 "brian2.tests.OurDoctestModule": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "_pytest.doctest.DoctestModule"
   ]
  },
  "type": "class"
 },
 "brian2.tests.OurDoctestModule.collect": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "brian2.tests.OurDoctestModule",
    "brian2.tests.os",
    "getattr",
    "reversed",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.tests.PreferencePlugin": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.tests.PreferencePlugin.__init__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "brian2.core.preferences.prefs"
   ]
  },
  "type": "function"
 },
 "brian2.tests.PreferencePlugin.pytest_configure": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "brian2.tests.XDistPreferencePlugin",
    "dict"
   ]
  },
  "type": "function"
 },
 "brian2.tests.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "brian2.tests.XDistPreferencePlugin": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.tests.XDistPreferencePlugin.__init__": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "brian2.tests.XDistPreferencePlugin.pytest_configure_node": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "brian2.core.preferences.prefs",
    "brian2.core.preferences.prefs.items",
    "dict",
    "isinstance",
    "repr",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.tests.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.all_devices": {
  "data": {
   "shadows": "brian2.devices.device.all_devices"
  },
  "type": "import"
 },
 "brian2.tests.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.tests.brian2": {
  "data": {
   "shadows": "brian2"
  },
  "type": "import"
 },
 "brian2.tests.clear_caches": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "brian2.codegen.translation.make_statements._cache.clear",
    "brian2.utils.logger.BrianLogger._log_messages.clear"
   ]
  },
  "type": "function"
 },
 "brian2.tests.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "brian2.tests.features": {
  "data": {},
  "type": "module"
 },
 "brian2.tests.features.__all__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "brian2.tests.features.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.features.input": {
  "data": {},
  "type": "module"
 },
 "brian2.tests.features.input.FeatureTest": {
  "data": {
   "shadows": "brian2.tests.features.FeatureTest"
  },
  "type": "import"
 },
 "brian2.tests.features.input.InaccuracyError": {
  "data": {
   "shadows": "brian2.tests.features.InaccuracyError"
  },
  "type": "import"
 },
 "brian2.tests.features.input.SpikeGeneratorGroupTest": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "brian2.tests.features.FeatureTest",
    "brian2.tests.features.FeatureTest.compare_arrays"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.input.SpikeGeneratorGroupTest.results": {
  "data": {
   "lineno": 25
  },
  "type": "function"
 },
 "brian2.tests.features.input.SpikeGeneratorGroupTest.run": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "SpikeGeneratorGroup",
    "SpikeMonitor",
    "arange",
    "linspace",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.input.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.features.monitors": {
  "data": {},
  "type": "module"
 },
 "brian2.tests.features.monitors.FeatureTest": {
  "data": {
   "shadows": "brian2.tests.features.FeatureTest"
  },
  "type": "import"
 },
 "brian2.tests.features.monitors.InaccuracyError": {
  "data": {
   "shadows": "brian2.tests.features.InaccuracyError"
  },
  "type": "import"
 },
 "brian2.tests.features.monitors.SpikeMonitorTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "brian2.tests.features.FeatureTest",
    "brian2.tests.features.FeatureTest.compare_arrays"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.monitors.SpikeMonitorTest.results": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "brian2.tests.features.monitors.SpikeMonitorTest.run": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "linspace",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.monitors.StateMonitorTest": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "brian2.tests.features.FeatureTest",
    "brian2.tests.features.FeatureTest.compare_arrays"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.monitors.StateMonitorTest.results": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "brian2.tests.features.monitors.StateMonitorTest.run": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "linspace",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.monitors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.features.neurongroup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.features.neurongroup.NeuronGroupIntegrationEuler",
    "brian2.tests.features.neurongroup.ft"
   ]
  },
  "type": "module"
 },
 "brian2.tests.features.neurongroup.FeatureTest": {
  "data": {
   "shadows": "brian2.tests.features.FeatureTest"
  },
  "type": "import"
 },
 "brian2.tests.features.neurongroup.InaccuracyError": {
  "data": {
   "shadows": "brian2.tests.features.InaccuracyError"
  },
  "type": "import"
 },
 "brian2.tests.features.neurongroup.NeuronGroupIntegrationEuler": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "brian2.tests.features.FeatureTest",
    "brian2.tests.features.FeatureTest.compare_arrays"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.neurongroup.NeuronGroupIntegrationEuler.results": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "brian2.tests.features.neurongroup.NeuronGroupIntegrationEuler.run": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "NeuronGroup",
    "linspace",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.neurongroup.NeuronGroupIntegrationLinear": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "brian2.tests.features.FeatureTest"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.neurongroup.NeuronGroupIntegrationLinear.check": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "abs",
    "amax",
    "brian2.tests.features.InaccuracyError"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.neurongroup.NeuronGroupIntegrationLinear.results": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "exp"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.neurongroup.NeuronGroupIntegrationLinear.run": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "NeuronGroup",
    "linspace",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.neurongroup.NeuronGroupLIF": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "brian2.tests.features.FeatureTest",
    "brian2.tests.features.FeatureTest.compare_arrays"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.neurongroup.NeuronGroupLIF.results": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "brian2.tests.features.neurongroup.NeuronGroupLIF.run": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.neurongroup.NeuronGroupLIFRefractory": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "brian2.tests.features.FeatureTest",
    "brian2.tests.features.FeatureTest.compare_arrays"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.neurongroup.NeuronGroupLIFRefractory.results": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "brian2.tests.features.neurongroup.NeuronGroupLIFRefractory.run": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.neurongroup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.features.neurongroup.ft": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "brian2.tests.features.neurongroup.res": {
  "data": {
   "lineno": 105
  },
  "type": "constant"
 },
 "brian2.tests.features.speed": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.features.speed.VerySparseMediumRateSynapsesOnly",
    "show"
   ]
  },
  "type": "module"
 },
 "brian2.tests.features.speed.COBAHHFixedConnectivity": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "brian2.tests.features.SpeedTest"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.speed.COBAHHFixedConnectivity.run": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "Equations",
    "NeuronGroup",
    "SpikeMonitor",
    "Synapses",
    "int"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.speed.CUBAFixedConnectivity": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "brian2.tests.features.SpeedTest"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.speed.CUBAFixedConnectivity.run": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "Synapses",
    "int"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.speed.DenseMediumRateSynapsesOnly": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "brian2.tests.features.SpeedTest",
    "brian2.tests.features.speed.SynapsesOnly"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.speed.HHNeuronsOnly": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "brian2.tests.features.SpeedTest"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.speed.HHNeuronsOnly.run": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Equations",
    "NeuronGroup"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.speed.LinearNeuronsOnly": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "brian2.tests.features.SpeedTest"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.speed.LinearNeuronsOnly.run": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "NeuronGroup",
    "linspace"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.speed.STDP": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "brian2.tests.features.SpeedTest"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.speed.STDP.run": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "NeuronGroup",
    "PoissonGroup",
    "SpikeMonitor",
    "Synapses",
    "input"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.speed.SparseHighRateSynapsesOnly": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "brian2.tests.features.SpeedTest",
    "brian2.tests.features.speed.SynapsesOnly"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.speed.SparseLowRateSynapsesOnly": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "brian2.tests.features.SpeedTest",
    "brian2.tests.features.speed.SynapsesOnly"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.speed.SparseMediumRateSynapsesOnly": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "brian2.tests.features.SpeedTest",
    "brian2.tests.features.speed.SynapsesOnly"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.speed.SpeedTest": {
  "data": {
   "shadows": "brian2.tests.features.SpeedTest"
  },
  "type": "import"
 },
 "brian2.tests.features.speed.SynapsesOnly": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.speed.SynapsesOnly.run": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "int"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.speed.VerySparseMediumRateSynapsesOnly": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "brian2.tests.features.SpeedTest",
    "brian2.tests.features.speed.SynapsesOnly"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.speed.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "brian2.tests.features.speed.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.features.synapses": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.features.synapses.SynapsesPost",
    "brian2.tests.features.synapses.SynapsesPre",
    "brian2.tests.features.synapses.ft",
    "ftc",
    "print"
   ]
  },
  "type": "module"
 },
 "brian2.tests.features.synapses.FeatureTest": {
  "data": {
   "shadows": "brian2.tests.features.FeatureTest"
  },
  "type": "import"
 },
 "brian2.tests.features.synapses.InaccuracyError": {
  "data": {
   "shadows": "brian2.tests.features.InaccuracyError"
  },
  "type": "import"
 },
 "brian2.tests.features.synapses.SynapsesPost": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "brian2.tests.features.FeatureTest",
    "brian2.tests.features.FeatureTest.compare_arrays"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.synapses.SynapsesPost.results": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "brian2.tests.features.synapses.SynapsesPost.run": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "len",
    "linspace",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.synapses.SynapsesPre": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "brian2.tests.features.FeatureTest",
    "brian2.tests.features.FeatureTest.compare_arrays"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.synapses.SynapsesPre.results": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "brian2.tests.features.synapses.SynapsesPre.run": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "len",
    "linspace",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.synapses.SynapsesSTDP": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "brian2.tests.features.FeatureTest"
   ]
  },
  "type": "class"
 },
 "brian2.tests.features.synapses.SynapsesSTDP.compare": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "array",
    "brian2.tests.features.FeatureTest.compare_arrays",
    "float"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.synapses.SynapsesSTDP.results": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "brian2.tests.features.synapses.SynapsesSTDP.run": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Equations",
    "NeuronGroup",
    "SpikeGeneratorGroup",
    "SpikeMonitor",
    "StateMonitor",
    "Synapses",
    "brian2.tests.features.synapses.numpy",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.features.synapses.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.features.synapses.ft": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "brian2.tests.features.synapses.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.features.synapses.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "brian2.tests.fundamentalunits": {
  "data": {
   "shadows": "brian2.units.fundamentalunits"
  },
  "type": "import"
 },
 "brian2.tests.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.tests.importlib": {
  "data": {
   "shadows": "importlib"
  },
  "type": "import"
 },
 "brian2.tests.make_argv": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "TypeError",
    "brian2.tests.os",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.make_statements": {
  "data": {
   "shadows": "brian2.codegen.translation.make_statements"
  },
  "type": "import"
 },
 "brian2.tests.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.tests.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.tests.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "brian2.tests.pytest": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "brian2.tests.pytest_doctest": {
  "data": {
   "shadows": "_pytest.doctest"
  },
  "type": "import"
 },
 "brian2.tests.reinit_and_delete": {
  "data": {
   "shadows": "brian2.devices.device.reinit_and_delete"
  },
  "type": "import"
 },
 "brian2.tests.reset_device": {
  "data": {
   "shadows": "brian2.devices.device.reset_device"
  },
  "type": "import"
 },
 "brian2.tests.run": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "all",
    "brian2.core.preferences.prefs",
    "brian2.core.preferences.prefs._backup",
    "brian2.core.preferences.prefs.as_file",
    "brian2.core.preferences.prefs.defaults_as_file",
    "brian2.core.preferences.prefs.extend",
    "brian2.core.preferences.prefs.read_preference_file",
    "brian2.devices.device.all_devices",
    "brian2.devices.device.reset_device",
    "brian2.tests.PreferencePlugin",
    "brian2.tests.brian2",
    "brian2.tests.clear_caches",
    "brian2.tests.copy",
    "brian2.tests.make_argv",
    "brian2.tests.os",
    "brian2.tests.pytest",
    "brian2.units.fundamentalunits.UnitRegistry",
    "brian2.units.fundamentalunits.user_unit_register",
    "brian2.utils.logger.BrianLogger.console_handler.level",
    "brian2.utils.logger.BrianLogger.console_handler.setLevel",
    "brian2.utils.logger.LOG_LEVELS",
    "io.StringIO",
    "isinstance",
    "len",
    "numpy.float64",
    "past.builtins.basestring",
    "print",
    "repr",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "brian2.tests.scipy.weave": {
  "data": {
   "shadows": "scipy.weave"
  },
  "type": "import"
 },
 "brian2.tests.set_device": {
  "data": {
   "shadows": "brian2.devices.device.set_device"
  },
  "type": "import"
 },
 "brian2.tests.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.tests.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "brian2.tests.test_GSL": {
  "data": {
   "symbols_in_volume": [
    "Equations",
    "__name__",
    "_pytest.outcomes.Skipped",
    "brian2.tests.test_GSL.test_GSL_default_function",
    "brian2.tests.test_GSL.test_GSL_different_clocks",
    "brian2.tests.test_GSL.test_GSL_error_bounds",
    "brian2.tests.test_GSL.test_GSL_error_dimension_mismatch_dimensionless1",
    "brian2.tests.test_GSL.test_GSL_error_dimension_mismatch_dimensionless2",
    "brian2.tests.test_GSL.test_GSL_error_dimension_mismatch_unit",
    "brian2.tests.test_GSL.test_GSL_error_incorrect_error_format",
    "brian2.tests.test_GSL.test_GSL_error_nonODE_variable",
    "brian2.tests.test_GSL.test_GSL_error_nonexisting_variable",
    "brian2.tests.test_GSL.test_GSL_failing_directory",
    "brian2.tests.test_GSL.test_GSL_fixed_timestep_big_dt_small_error",
    "brian2.tests.test_GSL.test_GSL_method_options_neurongroup",
    "brian2.tests.test_GSL.test_GSL_method_options_spatialneuron",
    "brian2.tests.test_GSL.test_GSL_method_options_synapses",
    "brian2.tests.test_GSL.test_GSL_non_autonomous",
    "brian2.tests.test_GSL.test_GSL_refractory",
    "brian2.tests.test_GSL.test_GSL_save_step_count",
    "brian2.tests.test_GSL.test_GSL_stateupdater_basic",
    "brian2.tests.test_GSL.test_GSL_stochastic",
    "brian2.tests.test_GSL.test_GSL_user_defined_function",
    "brian2.tests.test_GSL.test_GSL_x_variable",
    "print",
    "str",
    "t",
    "t.__name__"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_GSL.HH_eqs": {
  "data": {
   "lineno": 389
  },
  "type": "constant"
 },
 "brian2.tests.test_GSL.HH_namespace": {
  "data": {
   "lineno": 378
  },
  "type": "constant"
 },
 "brian2.tests.test_GSL.IntegrationError": {
  "data": {
   "shadows": "brian2.codegen.runtime.GSLcython_rt.IntegrationError"
  },
  "type": "import"
 },
 "brian2.tests.test_GSL.PreferenceError": {
  "data": {
   "shadows": "brian2.core.preferences.PreferenceError"
  },
  "type": "import"
 },
 "brian2.tests.test_GSL.Skipped": {
  "data": {
   "shadows": "_pytest.outcomes.Skipped"
  },
  "type": "import"
 },
 "brian2.tests.test_GSL.UnsupportedEquationsException": {
  "data": {
   "shadows": "brian2.stateupdaters.base.UnsupportedEquationsException"
  },
  "type": "import"
 },
 "brian2.tests.test_GSL.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_GSL.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "brian2.tests.test_GSL.max_difference": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "brian2.tests.test_GSL.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "brian2.tests.test_GSL.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_GSL.skip_if_not_implemented": {
  "data": {
   "lineno": 17
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.skip_if_not_implemented.wrapped": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.tests.test_GSL.functools",
    "brian2.tests.test_GSL.pytest",
    "func"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_default_function": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_GSL.max_difference",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented",
    "max",
    "rand"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_different_clocks": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_error_bounds": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "TimedArray",
    "abs",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented",
    "int",
    "max",
    "rand",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_error_dimension_mismatch_dimensionless1": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_error_dimension_mismatch_dimensionless2": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_error_dimension_mismatch_unit": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_error_incorrect_error_format": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "TypeError",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented",
    "object"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_error_nonODE_variable": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "KeyError",
    "Network",
    "NeuronGroup",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_error_nonexisting_variable": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "KeyError",
    "Network",
    "NeuronGroup",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_failing_directory": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "brian2.core.preferences.PreferenceError",
    "brian2.tests.test_GSL.pytest",
    "set_dir"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_failing_directory.set_dir": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_fixed_timestep_big_dt_small_error": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "RuntimeError",
    "brian2.codegen.runtime.GSLcython_rt.IntegrationError",
    "brian2.tests.test_GSL.HH_eqs",
    "brian2.tests.test_GSL.HH_namespace",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_internal_variable": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "Equations",
    "SyntaxError",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_method_options_neurongroup": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_method_options_spatialneuron": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "Soma",
    "SpatialNeuron",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_method_options_synapses": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "NeuronGroup",
    "PoissonGroup",
    "Synapses",
    "brian2.tests.test_GSL.skip_if_not_implemented",
    "input",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_non_autonomous": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_refractory": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_save_step_count": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_GSL.skip_if_not_implemented",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_stateupdater_basic": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "SpikeGeneratorGroup",
    "SpikeMonitor",
    "Synapses",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_stochastic": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_user_defined_function": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_GSL.max_difference",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented",
    "max",
    "rand"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_user_defined_function.user_sin": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "Exception",
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_x_variable": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.tests.test_GSL.pytest",
    "brian2.tests.test_GSL.skip_if_not_implemented",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_base": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_base.test_active_flag",
    "brian2.tests.test_base.test_base",
    "brian2.tests.test_base.test_duplicate_names",
    "brian2.tests.test_base.test_names"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_base.DerivedBrianObject": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "brian2.tests.test_base.DerivedBrianObject.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "brian2.tests.test_base.DerivedBrianObject",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_base.DerivedBrianObject.__str__": {
  "data": {
   "lineno": 13
  },
  "type": "function"
 },
 "brian2.tests.test_base.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_base.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_base.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_base.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_base.reinit_and_delete": {
  "data": {
   "shadows": "brian2.devices.device.reinit_and_delete"
  },
  "type": "import"
 },
 "brian2.tests.test_base.test_active_flag": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_base.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_base.test_base": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "AttributeError",
    "brian2.tests.test_base.DerivedBrianObject",
    "brian2.tests.test_base.pytest",
    "len",
    "numpy.testing.assert_equal",
    "setattr"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_base.test_duplicate_names": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "BrianObject",
    "Network",
    "ValueError",
    "brian2.tests.test_base.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_base.test_names": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "BrianObject",
    "brian2.tests.test_base.DerivedBrianObject",
    "brian2.tests.test_base.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_clocks": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_clocks.test_clock_attributes",
    "brian2.tests.test_clocks.test_clock_dt_change",
    "brian2.tests.test_clocks.test_defaultclock",
    "brian2.tests.test_clocks.test_set_interval_warning",
    "restore_initial_state"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_clocks.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_clocks.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_clocks.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_clocks.catch_logs": {
  "data": {
   "shadows": "brian2.utils.logger.catch_logs"
  },
  "type": "import"
 },
 "brian2.tests.test_clocks.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_clocks.test_clock_attributes": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "Clock",
    "brian2.tests.test_clocks.pytest",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_clocks.test_clock_dt_change": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Clock",
    "ValueError",
    "brian2.tests.test_clocks.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_clocks.test_defaultclock": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "brian2.tests.test_clocks.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_clocks.test_set_interval_warning": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Clock",
    "brian2.tests.test_clocks.pytest",
    "brian2.utils.logger.catch_logs",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codegen": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_codegen.test_analyse_identifiers",
    "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation",
    "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_boolean",
    "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_constant_evaluation",
    "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_integer",
    "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_no_optimisation",
    "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_simplification",
    "brian2.tests.test_codegen.test_auto_target",
    "brian2.tests.test_codegen.test_automatic_augmented_assignments",
    "brian2.tests.test_codegen.test_clear_cache",
    "brian2.tests.test_codegen.test_get_identifiers_recursively",
    "brian2.tests.test_codegen.test_nested_subexpressions",
    "brian2.tests.test_codegen.test_repeated_subexpressions",
    "brian2.tests.test_codegen.test_write_to_subexpression",
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_codegen.ArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.ArrayVariable"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.CodeObject": {
  "data": {
   "shadows": "brian2.codegen.codeobject.CodeObject"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.Constant": {
  "data": {
   "shadows": "brian2.core.variables.Constant"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.DEFAULT_CONSTANTS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_CONSTANTS"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.FakeGroup": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "brian2.tests.test_codegen.Function": {
  "data": {
   "shadows": "brian2.core.functions.Function"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.Statement": {
  "data": {
   "shadows": "brian2.codegen.statements.Statement"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.Subexpression": {
  "data": {
   "shadows": "brian2.core.variables.Subexpression"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.Variable": {
  "data": {
   "shadows": "brian2.core.variables.Variable"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen._cache_dirs_and_extensions": {
  "data": {
   "shadows": "brian2._cache_dirs_and_extensions"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.analyse_identifiers": {
  "data": {
   "shadows": "brian2.codegen.translation.analyse_identifiers"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.auto_target": {
  "data": {
   "shadows": "brian2.devices.device.auto_target"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.clear_cache": {
  "data": {
   "shadows": "brian2.clear_cache"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.device": {
  "data": {
   "shadows": "brian2.devices.device.device"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.get_identifiers_recursively": {
  "data": {
   "shadows": "brian2.codegen.translation.get_identifiers_recursively"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.make_statements": {
  "data": {
   "shadows": "brian2.codegen.translation.make_statements"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.ms": {
  "data": {
   "shadows": "brian2.units.ms"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.optimise_statements": {
  "data": {
   "shadows": "brian2.codegen.optimisation.optimise_statements"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.parse_statement": {
  "data": {
   "shadows": "brian2.codegen.translation.parse_statement"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.prefs": {
  "data": {
   "shadows": "brian2.prefs"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.second": {
  "data": {
   "shadows": "brian2.units.second"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.str_to_sympy": {
  "data": {
   "shadows": "brian2.parsing.sympytools.str_to_sympy"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.sympy_to_str": {
  "data": {
   "shadows": "brian2.parsing.sympytools.sympy_to_str"
  },
  "type": "import"
 },
 "brian2.tests.test_codegen.test_analyse_identifiers": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "brian2.codegen.translation.analyse_identifiers",
    "brian2.core.variables.Variable",
    "brian2.tests.test_codegen.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "all",
    "brian2.codegen.optimisation.optimise_statements",
    "brian2.codegen.statements.Statement",
    "brian2.core.functions.DEFAULT_FUNCTIONS",
    "brian2.core.variables.Constant",
    "brian2.core.variables.Variable",
    "brian2.tests.test_codegen.pytest",
    "brian2.units.ms",
    "brian2.units.second.dim",
    "len",
    "numpy.float32",
    "numpy.floating",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_boolean": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "bool",
    "brian2.codegen.optimisation.optimise_statements",
    "brian2.codegen.statements.Statement",
    "brian2.core.functions.DEFAULT_FUNCTIONS",
    "brian2.core.functions.Function",
    "brian2.core.variables.Constant",
    "brian2.core.variables.Variable",
    "brian2.tests.test_codegen.pytest",
    "brian2.units.fundamentalunits.Unit",
    "len",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_constant_evaluation": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "brian2.codegen.optimisation.optimise_statements",
    "brian2.codegen.statements.Statement",
    "brian2.core.functions.DEFAULT_FUNCTIONS",
    "brian2.core.variables.Constant",
    "brian2.core.variables.Variable",
    "brian2.tests.test_codegen.pytest",
    "float",
    "int",
    "len",
    "numpy.float"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_integer": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "brian2.codegen.optimisation.optimise_statements",
    "brian2.codegen.statements.Statement",
    "brian2.core.variables.Constant",
    "brian2.core.variables.Variable",
    "brian2.tests.test_codegen.pytest",
    "float",
    "int",
    "len",
    "numpy.float32",
    "numpy.floating",
    "numpy.issubdtype",
    "numpy.signedinteger"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_no_optimisation": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "brian2.codegen.optimisation.optimise_statements",
    "brian2.codegen.statements.Statement",
    "brian2.core.functions.DEFAULT_FUNCTIONS",
    "brian2.core.variables.Constant",
    "brian2.core.variables.Variable",
    "brian2.tests.test_codegen.pytest",
    "float",
    "numpy.float",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_simplification": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "brian2.codegen.optimisation.optimise_statements",
    "brian2.codegen.statements.Statement",
    "brian2.core.variables.Constant",
    "brian2.core.variables.Variable",
    "brian2.tests.test_codegen.pytest",
    "float",
    "int",
    "len",
    "numpy.float",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codegen.test_auto_target": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "brian2.codegen.codeobject.CodeObject",
    "brian2.devices.device.auto_target",
    "brian2.tests.test_codegen.pytest",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codegen.test_automatic_augmented_assignments": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "AssertionError",
    "brian2.codegen.translation.make_statements",
    "brian2.codegen.translation.parse_statement",
    "brian2.core.functions.DEFAULT_CONSTANTS",
    "brian2.core.functions.DEFAULT_FUNCTIONS",
    "brian2.core.variables.ArrayVariable",
    "brian2.devices.device.device",
    "brian2.parsing.sympytools.str_to_sympy",
    "brian2.parsing.sympytools.sympy_to_str",
    "brian2.tests.test_codegen.pytest",
    "len",
    "numpy.bool",
    "numpy.float32",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codegen.test_clear_cache": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "brian2._cache_dirs_and_extensions",
    "brian2.clear_cache",
    "brian2.prefs.codegen.target",
    "brian2.tests.test_codegen.os",
    "brian2.tests.test_codegen.pytest",
    "open"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codegen.test_get_identifiers_recursively": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "brian2.codegen.translation.get_identifiers_recursively",
    "brian2.core.variables.Subexpression",
    "brian2.core.variables.Variable",
    "brian2.tests.test_codegen.FakeGroup",
    "brian2.tests.test_codegen.pytest",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codegen.test_nested_subexpressions": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "brian2.codegen.translation.make_statements",
    "brian2.core.variables.Subexpression",
    "brian2.core.variables.Variable",
    "brian2.tests.test_codegen.FakeGroup",
    "brian2.tests.test_codegen.pytest",
    "len",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codegen.test_repeated_subexpressions": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "any",
    "brian2.codegen.translation.make_statements",
    "brian2.core.variables.Subexpression",
    "brian2.core.variables.Variable",
    "brian2.tests.test_codegen.FakeGroup",
    "brian2.tests.test_codegen.pytest",
    "len",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codegen.test_write_to_subexpression": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.codegen.translation.make_statements",
    "brian2.core.variables.Subexpression",
    "brian2.core.variables.Variable",
    "brian2.tests.test_codegen.FakeGroup",
    "brian2.tests.test_codegen.pytest",
    "numpy.float32"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codestrings": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_codestrings.test_expr_creation",
    "brian2.tests.test_codestrings.test_split_stochastic",
    "brian2.tests.test_codestrings.test_str_repr"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_codestrings.DimensionMismatchError": {
  "data": {
   "shadows": "brian2.DimensionMismatchError"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.Expression": {
  "data": {
   "shadows": "brian2.Expression"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.Hz": {
  "data": {
   "shadows": "brian2.Hz"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.Statements": {
  "data": {
   "shadows": "brian2.Statements"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.brian2": {
  "data": {
   "shadows": "brian2"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.catch_logs": {
  "data": {
   "shadows": "brian2.utils.logger.catch_logs"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.get_dimensions": {
  "data": {
   "shadows": "brian2.get_dimensions"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.mV": {
  "data": {
   "shadows": "brian2.mV"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.ms": {
  "data": {
   "shadows": "brian2.ms"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.second": {
  "data": {
   "shadows": "brian2.second"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.tests.test_codestrings.sympy_equals": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "brian2.tests.test_codestrings.sympy"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codestrings.test_expr_creation": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.Expression",
    "brian2.tests.test_codestrings.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codestrings.test_split_stochastic": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "brian2.Expression",
    "brian2.ms",
    "brian2.tests.test_codestrings.pytest",
    "brian2.tests.test_codestrings.sympy_equals",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codestrings.test_str_repr": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "brian2.Expression",
    "brian2.Statements",
    "brian2.tests.test_codestrings.pytest",
    "brian2.tests.test_codestrings.sympy_equals",
    "eval",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_codestrings.volt": {
  "data": {
   "shadows": "brian2.volt"
  },
  "type": "import"
 },
 "brian2.tests.test_complex_examples": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_complex_examples.test_cuba"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_complex_examples.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_complex_examples.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_complex_examples.reinit_and_delete": {
  "data": {
   "shadows": "brian2.devices.device.reinit_and_delete"
  },
  "type": "import"
 },
 "brian2.tests.test_complex_examples.test_cuba": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "Synapses",
    "brian2.tests.test_complex_examples.pytest",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.devices.device.reinit_and_delete",
    "brian2.tests.test_cpp_standalone.test_array_cache",
    "brian2.tests.test_cpp_standalone.test_changing_profile_arg",
    "brian2.tests.test_cpp_standalone.test_cpp_standalone",
    "brian2.tests.test_cpp_standalone.test_delete_code_data",
    "brian2.tests.test_cpp_standalone.test_delete_directory",
    "brian2.tests.test_cpp_standalone.test_duplicate_names_across_nets",
    "brian2.tests.test_cpp_standalone.test_multiple_connects",
    "brian2.tests.test_cpp_standalone.test_openmp_consistency",
    "brian2.tests.test_cpp_standalone.test_openmp_scalar_writes",
    "brian2.tests.test_cpp_standalone.test_run_with_debug",
    "brian2.tests.test_cpp_standalone.test_storing_loading",
    "brian2.tests.test_cpp_standalone.test_time_after_run",
    "t"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_cpp_standalone.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_cpp_standalone.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_cpp_standalone.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_cpp_standalone.catch_logs": {
  "data": {
   "shadows": "brian2.utils.logger.catch_logs"
  },
  "type": "import"
 },
 "brian2.tests.test_cpp_standalone.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.tests.test_cpp_standalone.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_cpp_standalone.reinit_and_delete": {
  "data": {
   "shadows": "brian2.devices.device.reinit_and_delete"
  },
  "type": "import"
 },
 "brian2.tests.test_cpp_standalone.reset_device": {
  "data": {
   "shadows": "brian2.devices.device.reset_device"
  },
  "type": "import"
 },
 "brian2.tests.test_cpp_standalone.set_device": {
  "data": {
   "shadows": "brian2.devices.device.set_device"
  },
  "type": "import"
 },
 "brian2.tests.test_cpp_standalone.test_array_cache": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "NeuronGroup",
    "NotImplementedError",
    "Synapses",
    "ValueError",
    "all",
    "brian2.devices.device.set_device",
    "brian2.tests.test_cpp_standalone.pytest",
    "brian2.tests.utils.assert_allclose",
    "run",
    "setattr",
    "slice"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_changing_profile_arg": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.devices.device.set_device",
    "brian2.tests.test_cpp_standalone.pytest",
    "dict",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_cpp_standalone": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "SpikeMonitor",
    "Synapses",
    "brian2.devices.device.reset_device",
    "brian2.devices.device.set_device",
    "brian2.tests.test_cpp_standalone.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_delete_code_data": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.devices.device.set_device",
    "brian2.tests.test_cpp_standalone.os",
    "brian2.tests.test_cpp_standalone.pytest",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_delete_directory": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.devices.device.set_device",
    "brian2.tests.test_cpp_standalone.os",
    "brian2.tests.test_cpp_standalone.pytest",
    "brian2.utils.logger.catch_logs",
    "len",
    "open",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_duplicate_names_across_nets": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "BrianObject",
    "Network",
    "ValueError",
    "brian2.devices.device.reset_device",
    "brian2.devices.device.set_device",
    "brian2.tests.test_cpp_standalone.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_multiple_connects": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.devices.device.reset_device",
    "brian2.devices.device.set_device",
    "brian2.tests.test_cpp_standalone.pytest",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_openmp_consistency": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "Equations",
    "NeuronGroup",
    "PopulationRateMonitor",
    "SpikeGeneratorGroup",
    "SpikeMonitor",
    "StateMonitor",
    "Synapses",
    "Synapses.__instances__",
    "brian2.devices.device.reinit_and_delete",
    "brian2.devices.device.reset_device",
    "brian2.devices.device.set_device",
    "brian2.tests.test_cpp_standalone.pytest",
    "brian2.tests.utils.assert_allclose",
    "get_device",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_openmp_scalar_writes": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.devices.device.reset_device",
    "brian2.devices.device.set_device",
    "brian2.tests.test_cpp_standalone.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_run_with_debug": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "Synapses",
    "brian2.devices.device.set_device",
    "brian2.tests.test_cpp_standalone.pytest",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_storing_loading": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.devices.device.reset_device",
    "brian2.devices.device.set_device",
    "brian2.tests.test_cpp_standalone.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_time_after_run": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "brian2.devices.device.reset_device",
    "brian2.devices.device.set_device",
    "brian2.tests.test_cpp_standalone.pytest",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_devices": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_devices.test_get_set_random_generator_state",
    "brian2.tests.test_devices.test_set_reset_device_explicit",
    "brian2.tests.test_devices.test_set_reset_device_implicit"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_devices.ATestDevice": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "brian2.devices.device.Device"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_devices.ATestDevice.activate": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "brian2.tests.test_devices.ATestDevice",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_devices.ATestDevice.add_array": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "brian2.tests.test_devices.ATestDevice.fill_with_array": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "brian2.tests.test_devices.ATestDevice.get_value": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_devices.ATestDevice.init_with_zeros": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "brian2.tests.test_devices.Device": {
  "data": {
   "shadows": "brian2.devices.device.Device"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.NeuronGroup": {
  "data": {
   "shadows": "brian2.groups.neurongroup.NeuronGroup"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.RuntimeDevice": {
  "data": {
   "shadows": "brian2.devices.device.RuntimeDevice"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.all_devices": {
  "data": {
   "shadows": "brian2.devices.device.all_devices"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.device_module": {
  "data": {
   "shadows": "brian2.devices.device_module"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.ms": {
  "data": {
   "shadows": "brian2.units.ms"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.reset_device": {
  "data": {
   "shadows": "brian2.devices.device.reset_device"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.run": {
  "data": {
   "shadows": "brian2.core.magic.run"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.runtime_device": {
  "data": {
   "shadows": "brian2.devices.device.runtime_device"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.set_device": {
  "data": {
   "shadows": "brian2.devices.device.set_device"
  },
  "type": "import"
 },
 "brian2.tests.test_devices.test_get_set_random_generator_state": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "brian2.core.magic.run",
    "brian2.devices.device.RuntimeDevice",
    "brian2.devices.device.get_device",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_devices.pytest",
    "brian2.units.ms",
    "isinstance",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_devices.test_set_reset_device_explicit": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "brian2.devices.device.all_devices",
    "brian2.devices.device.get_device",
    "brian2.devices.device.reset_device",
    "brian2.devices.device.set_device",
    "brian2.tests.test_devices.ATestDevice",
    "brian2.tests.test_devices.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_devices.test_set_reset_device_implicit": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "brian2.devices.device.all_devices",
    "brian2.devices.device.get_device",
    "brian2.devices.device.reset_device",
    "brian2.devices.device.runtime_device",
    "brian2.devices.device.set_device",
    "brian2.devices.device_module.previous_devices",
    "brian2.tests.test_devices.ATestDevice",
    "brian2.tests.test_devices.pytest",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations": {
  "data": {
   "symbols_in_volume": [
    "IPython.lib.pretty.pprint",
    "ImportError",
    "__name__",
    "brian2.tests.test_equations.test_concatenation",
    "brian2.tests.test_equations.test_construction_errors",
    "brian2.tests.test_equations.test_correct_replacements",
    "brian2.tests.test_equations.test_extract_subexpressions",
    "brian2.tests.test_equations.test_identifier_checks",
    "brian2.tests.test_equations.test_parse_equations",
    "brian2.tests.test_equations.test_properties",
    "brian2.tests.test_equations.test_repeated_construction",
    "brian2.tests.test_equations.test_str_repr",
    "brian2.tests.test_equations.test_substitute",
    "brian2.tests.test_equations.test_unit_checking",
    "brian2.tests.test_equations.test_utility_functions",
    "brian2.tests.test_equations.test_wrong_replacements"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_equations.BOOLEAN": {
  "data": {
   "shadows": "brian2.equations.equations.BOOLEAN"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.DEFAULT_UNITS": {
  "data": {
   "shadows": "brian2.core.namespace.DEFAULT_UNITS"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.DIFFERENTIAL_EQUATION": {
  "data": {
   "shadows": "brian2.equations.equations.DIFFERENTIAL_EQUATION"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.DIMENSIONLESS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DIMENSIONLESS"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.DimensionMismatchError": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DimensionMismatchError"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.EquationError": {
  "data": {
   "shadows": "brian2.equations.equations.EquationError"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.Equations": {
  "data": {
   "shadows": "brian2.Equations"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.Expression": {
  "data": {
   "shadows": "brian2.Expression"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.FLOAT": {
  "data": {
   "shadows": "brian2.equations.equations.FLOAT"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.Group": {
  "data": {
   "shadows": "brian2.groups.group.Group"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.Hz": {
  "data": {
   "shadows": "brian2.Hz"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.INTEGER": {
  "data": {
   "shadows": "brian2.equations.equations.INTEGER"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.PARAMETER": {
  "data": {
   "shadows": "brian2.equations.equations.PARAMETER"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.SUBEXPRESSION": {
  "data": {
   "shadows": "brian2.equations.equations.SUBEXPRESSION"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.SimpleGroup": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "brian2.groups.group.Group"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_equations.SimpleGroup.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "brian2.tests.test_equations.SingleEquation": {
  "data": {
   "shadows": "brian2.equations.equations.SingleEquation"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.Unit": {
  "data": {
   "shadows": "brian2.Unit"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.check_identifier_basic": {
  "data": {
   "shadows": "brian2.equations.equations.check_identifier_basic"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.check_identifier_constants": {
  "data": {
   "shadows": "brian2.equations.equations.check_identifier_constants"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.check_identifier_functions": {
  "data": {
   "shadows": "brian2.equations.equations.check_identifier_functions"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.check_identifier_refractory": {
  "data": {
   "shadows": "brian2.equations.refractory.check_identifier_refractory"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.check_identifier_reserved": {
  "data": {
   "shadows": "brian2.equations.equations.check_identifier_reserved"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.check_identifier_units": {
  "data": {
   "shadows": "brian2.equations.equations.check_identifier_units"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.dimensions_and_type_from_string": {
  "data": {
   "shadows": "brian2.equations.equations.dimensions_and_type_from_string"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.extract_constant_subexpressions": {
  "data": {
   "shadows": "brian2.equations.equations.extract_constant_subexpressions"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.farad": {
  "data": {
   "shadows": "brian2.farad"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.get_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_dimensions"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.mV": {
  "data": {
   "shadows": "brian2.mV"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.metre": {
  "data": {
   "shadows": "brian2.metre"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.ms": {
  "data": {
   "shadows": "brian2.ms"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.parse_string_equations": {
  "data": {
   "shadows": "brian2.equations.equations.parse_string_equations"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.pprint": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "brian2.tests.test_equations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.second": {
  "data": {
   "shadows": "brian2.second"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.tests.test_equations.test_concatenation": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "TypeError",
    "brian2.Equations",
    "brian2.tests.test_equations.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_construction_errors": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "SyntaxError",
    "TypeError",
    "ValueError",
    "brian2.Equations",
    "brian2.Expression",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.EquationError",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.equations.equations.SingleEquation",
    "brian2.tests.test_equations.pytest",
    "brian2.volt.dim"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_correct_replacements": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "brian2.Equations",
    "brian2.ms",
    "brian2.tests.test_equations.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_extract_subexpressions": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "brian2.Equations",
    "brian2.equations.equations.PARAMETER",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.equations.equations.extract_constant_subexpressions",
    "brian2.tests.test_equations.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_identifier_checks": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "AssertionError",
    "SyntaxError",
    "ValueError",
    "brian2.Equations.check_identifier",
    "brian2.Equations.identifier_checks",
    "brian2.Equations.register_identifier_check",
    "brian2.equations.equations.check_identifier_basic",
    "brian2.equations.equations.check_identifier_constants",
    "brian2.equations.equations.check_identifier_functions",
    "brian2.equations.equations.check_identifier_reserved",
    "brian2.equations.equations.check_identifier_units",
    "brian2.equations.refractory.check_identifier_refractory",
    "brian2.tests.test_equations.pytest",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_identifier_checks.disallow_gaba_123": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "SyntaxError"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_ipython_pprint": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "IPython.lib.pretty.pprint",
    "ImportError",
    "brian2.Equations",
    "brian2.tests.test_equations.pytest",
    "brian2.tests.test_equations.sys",
    "io.StringIO",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_parse_equations": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.Hz.dim",
    "brian2.equations.equations.BOOLEAN",
    "brian2.equations.equations.DIFFERENTIAL_EQUATION",
    "brian2.equations.equations.EquationError",
    "brian2.equations.equations.FLOAT",
    "brian2.equations.equations.INTEGER",
    "brian2.equations.equations.PARAMETER",
    "brian2.equations.equations.SUBEXPRESSION",
    "brian2.equations.equations.parse_string_equations",
    "brian2.tests.test_equations.pytest",
    "brian2.units.fundamentalunits.DIMENSIONLESS",
    "brian2.volt.dim",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_properties": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "all",
    "brian2.Equations",
    "brian2.Expression",
    "brian2.Hz",
    "brian2.Hz.dim",
    "brian2.equations.equations.SingleEquation",
    "brian2.ms",
    "brian2.tests.test_equations.pytest",
    "brian2.units.fundamentalunits.DIMENSIONLESS",
    "brian2.volt",
    "brian2.volt.dim",
    "isinstance",
    "len",
    "past.builtins.basestring",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_repeated_construction": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "brian2.Equations",
    "brian2.Expression",
    "brian2.tests.test_equations.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_str_repr": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "brian2.Equations",
    "brian2.ms",
    "brian2.tests.test_equations.pytest",
    "len",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_substitute": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "brian2.Equations",
    "brian2.Expression",
    "brian2.tests.test_equations.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_unit_checking": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "S",
    "brian2.Equations",
    "brian2.mV",
    "brian2.second",
    "brian2.tests.test_equations.SimpleGroup",
    "brian2.tests.test_equations.pytest",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.volt"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_unit_checking.S": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_equations.test_unit_checking.S.__init__": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "brian2.units.fundamentalunits.get_dimensions"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_utility_functions": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "brian2.Hz.dim",
    "brian2.Unit",
    "brian2.core.namespace.DEFAULT_UNITS",
    "brian2.equations.equations.BOOLEAN",
    "brian2.equations.equations.FLOAT",
    "brian2.equations.equations.INTEGER",
    "brian2.equations.equations.dimensions_and_type_from_string",
    "brian2.farad.dim",
    "brian2.metre.dim",
    "brian2.ms",
    "brian2.second.dim",
    "brian2.tests.test_equations.pytest",
    "brian2.units.fundamentalunits.DIMENSIONLESS",
    "brian2.volt.dim",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.test_wrong_replacements": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "SyntaxError",
    "ValueError",
    "brian2.Equations",
    "brian2.equations.equations.EquationError",
    "brian2.mV",
    "brian2.tests.test_equations.pytest",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_equations.volt": {
  "data": {
   "shadows": "brian2.volt"
  },
  "type": "import"
 },
 "brian2.tests.test_functions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "_pytest.outcomes.Skipped",
    "brian2.tests.test_functions.int_",
    "brian2.tests.test_functions.start",
    "brian2.tests.test_functions.test_binomial",
    "brian2.tests.test_functions.test_bool_to_int",
    "brian2.tests.test_functions.test_clip",
    "brian2.tests.test_functions.test_constants_sympy",
    "brian2.tests.test_functions.test_constants_values",
    "brian2.tests.test_functions.test_declare_types",
    "brian2.tests.test_functions.test_external_function_cython",
    "brian2.tests.test_functions.test_external_function_weave",
    "brian2.tests.test_functions.test_function_dependencies_cython",
    "brian2.tests.test_functions.test_function_dependencies_cython_rename",
    "brian2.tests.test_functions.test_function_dependencies_numpy",
    "brian2.tests.test_functions.test_function_dependencies_weave",
    "brian2.tests.test_functions.test_function_dependencies_weave_rename",
    "brian2.tests.test_functions.test_function_implementation_container",
    "brian2.tests.test_functions.test_manual_user_defined_function",
    "brian2.tests.test_functions.test_manual_user_defined_function_weave",
    "brian2.tests.test_functions.test_math_functions",
    "brian2.tests.test_functions.test_multiple_stateless_function_calls",
    "brian2.tests.test_functions.test_poisson",
    "brian2.tests.test_functions.test_repeated_function_dependencies",
    "brian2.tests.test_functions.test_simple_user_defined_function",
    "brian2.tests.test_functions.test_timestep_function",
    "brian2.tests.test_functions.test_timestep_function_during_run",
    "brian2.tests.test_functions.test_user_defined_function",
    "brian2.tests.test_functions.test_user_defined_function_discarding_units",
    "brian2.tests.test_functions.test_user_defined_function_discarding_units_2",
    "brian2.tests.test_functions.test_user_defined_function_units",
    "brian2.tests.test_functions.time",
    "f",
    "f.__name__",
    "print"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_functions.CodeGenerator": {
  "data": {
   "shadows": "brian2.codegen.generators.CodeGenerator"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.CodeObject": {
  "data": {
   "shadows": "brian2.codegen.codeobject.CodeObject"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.RuntimeDevice": {
  "data": {
   "shadows": "brian2.devices.RuntimeDevice"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.Skipped": {
  "data": {
   "shadows": "_pytest.outcomes.Skipped"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.catch_logs": {
  "data": {
   "shadows": "brian2.utils.logger.catch_logs"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.compiler_supports_c99": {
  "data": {
   "shadows": "brian2.codegen.cpp_prefs.compiler_supports_c99"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.int_": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "array",
    "int"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.prefs": {
  "data": {
   "shadows": "brian2.prefs"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.scipy.weave": {
  "data": {
   "shadows": "scipy.weave"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.start": {
  "data": {
   "lineno": 1104
  },
  "type": "constant"
 },
 "brian2.tests.test_functions.str_to_sympy": {
  "data": {
   "shadows": "brian2.parsing.sympytools.str_to_sympy"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.sympy_to_str": {
  "data": {
   "shadows": "brian2.parsing.sympytools.sympy_to_str"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.targets": {
  "data": {
   "shadows": "brian2.codegen.targets"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.test_binomial": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "BinomialFunction",
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_functions.pytest",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_bool_to_int": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_functions.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_clip": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_functions.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_constants_sympy": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "brian2.parsing.sympytools.str_to_sympy",
    "brian2.parsing.sympytools.sympy_to_str",
    "brian2.tests.test_functions.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_constants_values": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.tests.test_functions.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_declare_types": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bad_argname",
    "bad_argtype",
    "bad_type",
    "bad_units",
    "brian2.tests.test_functions.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_declare_types.bad_argname": {
  "data": {
   "lineno": 1005
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_declare_types.bad_argname.f": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "declare_types"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_declare_types.bad_argtype": {
  "data": {
   "lineno": 998
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_declare_types.bad_argtype.f": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "declare_types"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_declare_types.bad_type": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_declare_types.bad_type.f": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "check_units",
    "declare_types",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_declare_types.bad_units": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_declare_types.bad_units.f": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "check_units",
    "declare_types"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_declare_types.f": {
  "data": {
   "lineno": 1017,
   "symbols_in_volume": [
    "check_units",
    "declare_types"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_external_function_cpp_standalone": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_functions.os",
    "brian2.tests.test_functions.pytest",
    "set_device"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_external_function_cpp_standalone.foo": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "brian2.tests.test_functions.os",
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_external_function_cython": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_functions.os",
    "brian2.tests.test_functions.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_external_function_cython.foo": {
  "data": {
   "lineno": 603,
   "symbols_in_volume": [
    "brian2.tests.test_functions.os",
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_external_function_weave": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_functions.os",
    "brian2.tests.test_functions.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_external_function_weave.foo": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "brian2.tests.test_functions.os",
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_cython": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "brian2.tests.test_functions.pytest",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_cython.bar": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "check_units",
    "foo",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_cython.foo": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_cython_rename": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "brian2.tests.test_functions.pytest",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_cython_rename.bar": {
  "data": {
   "lineno": 882,
   "symbols_in_volume": [
    "check_units",
    "foo",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_cython_rename.foo": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_numpy": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "brian2.tests.test_functions.pytest",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_numpy.bar": {
  "data": {
   "lineno": 917,
   "symbols_in_volume": [
    "check_units",
    "foo",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_numpy.foo": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_weave": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "brian2.tests.test_functions.pytest",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_weave.bar": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "check_units",
    "foo",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_weave.foo": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_weave_rename": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "brian2.tests.test_functions.pytest",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_weave_rename.bar": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "check_units",
    "foo",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_dependencies_weave_rename.foo": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_implementation_container": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "Function",
    "KeyError",
    "brian2.codegen.targets.codegen_targets",
    "brian2.tests.test_functions.pytest",
    "foo",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_function_implementation_container.A2CodeObject": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "brian2.codegen.codeobject.CodeObject"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_functions.test_function_implementation_container.ACodeGenerator": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "brian2.codegen.generators.CodeGenerator"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_functions.test_function_implementation_container.ACodeObject": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "brian2.codegen.codeobject.CodeObject"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_functions.test_function_implementation_container.BCodeGenerator": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": [
    "brian2.codegen.generators.CodeGenerator"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_functions.test_function_implementation_container.BCodeObject": {
  "data": {
   "lineno": 723,
   "symbols_in_volume": [
    "brian2.codegen.codeobject.CodeObject"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_functions.test_function_implementation_container.foo": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "check_units"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "Function",
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "ValueError",
    "brian2.tests.test_functions.pytest",
    "foo",
    "foo.implementations.add_numpy_implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function.foo": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_cpp_standalone_compiler_args": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_functions.pytest",
    "set_device"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_cpp_standalone_compiler_args.foo": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_cpp_standalone_wrong_compiler_args1": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "ValueError",
    "brian2.tests.test_functions.pytest",
    "foo",
    "set_device"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_cpp_standalone_wrong_compiler_args1.foo": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_cpp_standalone_wrong_compiler_args2": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "TypeError",
    "brian2.tests.test_functions.pytest",
    "foo",
    "set_device"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_cpp_standalone_wrong_compiler_args2.foo": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_cython_compiler_args": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_functions.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_cython_compiler_args.foo": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_cython_wrong_compiler_args1": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "ValueError",
    "brian2.tests.test_functions.pytest",
    "foo"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_cython_wrong_compiler_args1.foo": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_cython_wrong_compiler_args2": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "TypeError",
    "brian2.tests.test_functions.pytest",
    "foo"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_cython_wrong_compiler_args2.foo": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_weave": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "Function",
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_functions.pytest",
    "foo",
    "foo.implementations.add_implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_weave.foo": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_weave_compiler_args": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_functions.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_weave_compiler_args.foo": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_weave_wrong_compiler_args1": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "ValueError",
    "brian2.tests.test_functions.pytest",
    "foo"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_weave_wrong_compiler_args1.foo": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_weave_wrong_compiler_args2": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "TypeError",
    "brian2.tests.test_functions.pytest",
    "foo"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_manual_user_defined_function_weave_wrong_compiler_args2.foo": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_math_functions": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "brian2.codegen.cpp_prefs.compiler_supports_c99",
    "brian2.devices.RuntimeDevice",
    "brian2.tests.test_functions.int_",
    "brian2.tests.test_functions.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.utils.logger.catch_logs",
    "func",
    "func.__name__",
    "get_device",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_math_operators": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_functions.pytest",
    "brian2.tests.utils.assert_allclose",
    "func",
    "func.__name__",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_multiple_stateless_function_calls": {
  "data": {
   "lineno": 1051,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "NotImplementedError",
    "brian2.tests.test_functions.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_poisson": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "all",
    "brian2.tests.test_functions.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_repeated_function_dependencies": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "BinomialFunction",
    "NeuronGroup",
    "brian2.tests.test_functions.pytest",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_simple_user_defined_function": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "ImportError",
    "Network",
    "NeuronGroup",
    "NotImplementedError",
    "StateMonitor",
    "brian2.tests.test_functions.pytest",
    "brian2.tests.utils.assert_allclose",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_simple_user_defined_function.usersin": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "check_units"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_timestep_function": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "brian2.core.functions.timestep",
    "brian2.tests.test_functions.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_timestep_function_during_run": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "all",
    "brian2.tests.test_functions.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_user_defined_function": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_functions.pytest",
    "brian2.tests.utils.assert_allclose",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_user_defined_function.usersin": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_user_defined_function_discarding_units": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "brian2.tests.test_functions.pytest",
    "foo",
    "foo.implementations.get_code"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_user_defined_function_discarding_units.foo": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "check_units",
    "implementation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_user_defined_function_discarding_units_2": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "Function",
    "brian2.tests.test_functions.pytest",
    "foo",
    "foo.implementations.add_implementation",
    "foo.implementations.get_code"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_user_defined_function_discarding_units_2.foo": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "check_units"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_user_defined_function_discarding_units_2.unitless_foo": {
  "data": {
   "lineno": 694
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_user_defined_function_units": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "KeyError",
    "Network",
    "NeuronGroup",
    "ValueError",
    "brian2.tests.test_functions.pytest",
    "check_units",
    "setattr"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_functions.test_user_defined_function_units.nothing_specified": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "brian2.tests.test_functions.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "brian2.tests.test_functions.timestep": {
  "data": {
   "shadows": "brian2.core.functions.timestep"
  },
  "type": "import"
 },
 "brian2.tests.test_memory": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_memory.test_dynamic_array_1d_access",
    "brian2.tests.test_memory.test_dynamic_array_1d_resize_down_up",
    "brian2.tests.test_memory.test_dynamic_array_1d_resize_up_down",
    "brian2.tests.test_memory.test_dynamic_array_1d_shrink",
    "brian2.tests.test_memory.test_dynamic_array_2d_access",
    "brian2.tests.test_memory.test_dynamic_array_2d_resize_down_up",
    "brian2.tests.test_memory.test_dynamic_array_2d_resize_up_down",
    "brian2.tests.test_memory.test_dynamic_array_2d_shrink"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_memory.DynamicArray": {
  "data": {
   "shadows": "brian2.memory.dynamicarray.DynamicArray"
  },
  "type": "import"
 },
 "brian2.tests.test_memory.DynamicArray1D": {
  "data": {
   "shadows": "brian2.memory.dynamicarray.DynamicArray1D"
  },
  "type": "import"
 },
 "brian2.tests.test_memory.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_memory.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_memory.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.test_memory.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_memory.test_dynamic_array_1d_access": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "all",
    "brian2.memory.dynamicarray.DynamicArray1D",
    "brian2.tests.test_memory.pytest",
    "len",
    "numpy.arange",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_memory.test_dynamic_array_1d_resize_down_up": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "all",
    "brian2.memory.dynamicarray.DynamicArray1D",
    "brian2.tests.test_memory.pytest",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_memory.test_dynamic_array_1d_resize_up_down": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "all",
    "brian2.memory.dynamicarray.DynamicArray1D",
    "brian2.tests.test_memory.pytest",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_memory.test_dynamic_array_1d_shrink": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "all",
    "brian2.memory.dynamicarray.DynamicArray1D",
    "brian2.tests.test_memory.pytest",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_memory.test_dynamic_array_2d_access": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "brian2.memory.dynamicarray.DynamicArray1D",
    "brian2.tests.test_memory.pytest",
    "len",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_memory.test_dynamic_array_2d_resize_down_up": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "brian2.memory.dynamicarray.DynamicArray",
    "brian2.tests.test_memory.pytest",
    "enumerate",
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_memory.test_dynamic_array_2d_resize_up_down": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "brian2.memory.dynamicarray.DynamicArray",
    "brian2.tests.test_memory.pytest",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_memory.test_dynamic_array_2d_shrink": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "brian2.memory.dynamicarray.DynamicArray",
    "brian2.tests.test_memory.pytest",
    "numpy.arange",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "_pytest.outcomes.Skipped",
    "brian2.tests.test_monitor.test_event_monitor",
    "brian2.tests.test_monitor.test_event_monitor_no_record",
    "brian2.tests.test_monitor.test_rate_monitor_1",
    "brian2.tests.test_monitor.test_rate_monitor_2",
    "brian2.tests.test_monitor.test_rate_monitor_get_states",
    "brian2.tests.test_monitor.test_rate_monitor_smoothed_rate",
    "brian2.tests.test_monitor.test_rate_monitor_smoothed_rate_incorrect",
    "brian2.tests.test_monitor.test_rate_monitor_subgroups",
    "brian2.tests.test_monitor.test_rate_monitor_subgroups_2",
    "brian2.tests.test_monitor.test_spike_monitor",
    "brian2.tests.test_monitor.test_spike_monitor_bug_824",
    "brian2.tests.test_monitor.test_spike_monitor_get_states",
    "brian2.tests.test_monitor.test_spike_monitor_indexing",
    "brian2.tests.test_monitor.test_spike_monitor_subgroups",
    "brian2.tests.test_monitor.test_spike_monitor_variables",
    "brian2.tests.test_monitor.test_spike_trains",
    "brian2.tests.test_monitor.test_state_monitor",
    "brian2.tests.test_monitor.test_state_monitor_get_states",
    "brian2.tests.test_monitor.test_state_monitor_indexing",
    "brian2.tests.test_monitor.test_state_monitor_record_single_timestep",
    "brian2.tests.test_monitor.test_state_monitor_resize",
    "brian2.tests.test_monitor.test_synapses_state_monitor"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_monitor.Skipped": {
  "data": {
   "shadows": "_pytest.outcomes.Skipped"
  },
  "type": "import"
 },
 "brian2.tests.test_monitor.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_monitor.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_monitor.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_monitor.catch_logs": {
  "data": {
   "shadows": "brian2.utils.logger.catch_logs"
  },
  "type": "import"
 },
 "brian2.tests.test_monitor.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "brian2.tests.test_monitor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_monitor.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "brian2.tests.test_monitor.test_event_monitor": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "EventMonitor",
    "KeyError",
    "Network",
    "NeuronGroup",
    "brian2.tests.test_monitor.pytest",
    "brian2.tests.utils.assert_allclose",
    "float",
    "len",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_event_monitor_no_record": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "EventMonitor",
    "Network",
    "NeuronGroup",
    "SpikeMonitor",
    "brian2.tests.test_monitor.pytest",
    "len",
    "numpy.testing.assert_array_equal",
    "sum"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_rate_monitor_1": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "NeuronGroup",
    "PopulationRateMonitor",
    "brian2.tests.test_monitor.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_rate_monitor_2": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "PopulationRateMonitor",
    "brian2.tests.test_monitor.pytest",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_rate_monitor_get_states": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "NeuronGroup",
    "PopulationRateMonitor",
    "brian2.tests.test_monitor.pytest",
    "numpy.testing.assert_array_equal",
    "run",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_rate_monitor_smoothed_rate": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "PopulationRateMonitor",
    "SpikeGeneratorGroup",
    "brian2.tests.test_monitor.logging",
    "brian2.tests.test_monitor.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.utils.logger.catch_logs",
    "int",
    "len",
    "numpy.testing.assert_array_equal",
    "range",
    "run",
    "sum"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_rate_monitor_smoothed_rate_incorrect": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "NotImplementedError",
    "PopulationRateMonitor",
    "SpikeGeneratorGroup",
    "TypeError",
    "brian2.tests.test_monitor.pytest",
    "object",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_rate_monitor_subgroups": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "NeuronGroup",
    "PopulationRateMonitor",
    "brian2.tests.test_monitor.pytest",
    "brian2.tests.utils.assert_allclose",
    "mean",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_rate_monitor_subgroups_2": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "NeuronGroup",
    "PopulationRateMonitor",
    "brian2.tests.test_monitor.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_spike_monitor": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "KeyError",
    "NeuronGroup",
    "SpikeMonitor",
    "Synapses",
    "TypeError",
    "ValueError",
    "brian2.tests.test_monitor.pytest",
    "brian2.tests.utils.assert_allclose",
    "float",
    "len",
    "numpy.testing.assert_array_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_spike_monitor_bug_824": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "brian2.tests.test_monitor.pytest",
    "numpy.testing.assert_array_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_spike_monitor_get_states": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "brian2.tests.test_monitor.pytest",
    "numpy.testing.assert_array_equal",
    "run",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_spike_monitor_indexing": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "SpikeGeneratorGroup",
    "SpikeMonitor",
    "numpy.testing.assert_array_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_spike_monitor_subgroups": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "brian2.tests.test_monitor.pytest",
    "brian2.tests.utils.assert_allclose",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_spike_monitor_variables": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "brian2.tests.test_monitor.pytest",
    "numpy.testing.assert_array_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_spike_trains": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "SpikeGeneratorGroup",
    "SpikeMonitor",
    "all",
    "brian2.tests.test_monitor.pytest",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_state_monitor": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "Synapses",
    "all",
    "brian2.tests.test_monitor.pytest",
    "brian2.tests.test_monitor.uuid",
    "brian2.tests.utils.assert_allclose",
    "float",
    "len",
    "numpy.testing.assert_array_equal",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_state_monitor_get_states": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_monitor.pytest",
    "numpy.testing.assert_array_equal",
    "run",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_state_monitor_indexing": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "IndexError",
    "NeuronGroup",
    "Quantity",
    "StateMonitor",
    "TypeError",
    "brian2.tests.test_monitor.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.testing.assert_array_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_state_monitor_record_single_timestep": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "TypeError",
    "brian2.tests.test_monitor.pytest",
    "brian2.tests.utils.assert_allclose",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_state_monitor_resize": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_monitor.pytest",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.test_synapses_state_monitor": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "Synapses",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_monitor.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "brian2.tests.test_morphology": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_morphology.test_attributes_cylinder",
    "brian2.tests.test_morphology.test_attributes_cylinder_coordinates",
    "brian2.tests.test_morphology.test_attributes_section",
    "brian2.tests.test_morphology.test_attributes_section_coordinates_all",
    "brian2.tests.test_morphology.test_attributes_section_coordinates_single",
    "brian2.tests.test_morphology.test_attributes_soma",
    "brian2.tests.test_morphology.test_attributes_soma_coordinates",
    "brian2.tests.test_morphology.test_construction_incorrect_arguments",
    "brian2.tests.test_morphology.test_copy_section_cylinder",
    "brian2.tests.test_morphology.test_copy_section_section",
    "brian2.tests.test_morphology.test_copy_section_soma",
    "brian2.tests.test_morphology.test_from_points_incorrect",
    "brian2.tests.test_morphology.test_from_points_minimal",
    "brian2.tests.test_morphology.test_generate_coordinates_deterministic",
    "brian2.tests.test_morphology.test_generate_coordinates_mixed_overwrite",
    "brian2.tests.test_morphology.test_generate_coordinates_no_overwrite",
    "brian2.tests.test_morphology.test_generate_coordinates_overwrite",
    "brian2.tests.test_morphology.test_generate_coordinates_random_all",
    "brian2.tests.test_morphology.test_generate_coordinates_random_compartments",
    "brian2.tests.test_morphology.test_generate_coordinates_random_sections",
    "brian2.tests.test_morphology.test_str_repr",
    "brian2.tests.test_morphology.test_subgroup_attributes",
    "brian2.tests.test_morphology.test_subgroup_incorrect",
    "brian2.tests.test_morphology.test_subgroup_indices",
    "brian2.tests.test_morphology.test_subtree_deletion",
    "brian2.tests.test_morphology.test_topology",
    "brian2.tests.test_morphology.test_tree_cables_coordinates",
    "brian2.tests.test_morphology.test_tree_cables_from_points",
    "brian2.tests.test_morphology.test_tree_cables_from_swc",
    "brian2.tests.test_morphology.test_tree_cables_schematic",
    "brian2.tests.test_morphology.test_tree_soma_coordinates",
    "brian2.tests.test_morphology.test_tree_soma_from_points",
    "brian2.tests.test_morphology.test_tree_soma_from_points_3_point_soma",
    "brian2.tests.test_morphology.test_tree_soma_from_points_3_point_soma_incorrect",
    "brian2.tests.test_morphology.test_tree_soma_from_swc",
    "brian2.tests.test_morphology.test_tree_soma_from_swc_3_point_soma",
    "brian2.tests.test_morphology.test_tree_soma_schematic"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_morphology.DimensionMismatchError": {
  "data": {
   "shadows": "brian2.units.DimensionMismatchError"
  },
  "type": "import"
 },
 "brian2.tests.test_morphology._check_length_coord_consistency": {
  "data": {
   "lineno": 1115,
   "symbols_in_volume": [
    "Soma",
    "brian2.numpy.diff",
    "brian2.numpy.sqrt",
    "brian2.numpy.sum",
    "brian2.tests.utils.assert_allclose",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology._check_tree_cables": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "brian2.numpy.arange",
    "brian2.numpy.ones",
    "brian2.numpy.sqrt",
    "brian2.numpy.zeros",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology._check_tree_soma": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "brian2.numpy.arange",
    "brian2.numpy.ones",
    "brian2.numpy.sqrt",
    "brian2.numpy.zeros",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_morphology.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_morphology.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_morphology.cm": {
  "data": {
   "shadows": "brian2.units.cm"
  },
  "type": "import"
 },
 "brian2.tests.test_morphology.np": {
  "data": {
   "shadows": "brian2.numpy"
  },
  "type": "import"
 },
 "brian2.tests.test_morphology.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.tests.test_morphology.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_morphology.second": {
  "data": {
   "shadows": "brian2.units.second"
  },
  "type": "import"
 },
 "brian2.tests.test_morphology.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "brian2.tests.test_morphology.test_attributes_cylinder": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "Cylinder",
    "TypeError",
    "brian2.numpy.arange",
    "brian2.numpy.ones",
    "brian2.numpy.pi",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um",
    "isinstance",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_attributes_cylinder_coordinates": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Cylinder",
    "brian2.numpy.arange",
    "brian2.numpy.ones",
    "brian2.numpy.sqrt",
    "brian2.numpy.zeros",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um",
    "getattr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_attributes_section": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "TypeError",
    "brian2.numpy.arange",
    "brian2.numpy.ones",
    "brian2.numpy.pi",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_attributes_section_coordinates_all": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "Section",
    "brian2.numpy.arange",
    "brian2.numpy.ones",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_attributes_section_coordinates_single": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "brian2.numpy.arange",
    "brian2.numpy.linspace",
    "brian2.numpy.ones",
    "brian2.numpy.sqrt",
    "brian2.numpy.zeros",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um",
    "getattr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_attributes_soma": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Soma",
    "TypeError",
    "brian2.numpy.pi",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.cm",
    "brian2.units.um",
    "isinstance",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_attributes_soma_coordinates": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "Soma",
    "brian2.tests.test_morphology.pytest",
    "brian2.units.um",
    "getattr",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_construction_incorrect_arguments": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "Soma",
    "TypeError",
    "ValueError",
    "brian2.numpy.ones",
    "brian2.tests.test_morphology.pytest",
    "brian2.units.DimensionMismatchError",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_copy_section_cylinder": {
  "data": {
   "lineno": 1087,
   "symbols_in_volume": [
    "Section",
    "brian2.numpy.ones",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_copy_section_section": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "Section",
    "brian2.numpy.ones",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_copy_section_soma": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "Soma",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_from_points_incorrect": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "ValueError",
    "brian2.tests.test_morphology.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_from_points_minimal": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_generate_coordinates_deterministic": {
  "data": {
   "lineno": 1124,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "Soma",
    "brian2.numpy.ones",
    "brian2.tests.test_morphology._check_length_coord_consistency",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_generate_coordinates_mixed_overwrite": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "Soma",
    "brian2.numpy.ones",
    "brian2.tests.test_morphology._check_length_coord_consistency",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_generate_coordinates_no_overwrite": {
  "data": {
   "lineno": 1231,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "Soma",
    "brian2.numpy.ones",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_generate_coordinates_overwrite": {
  "data": {
   "lineno": 1259,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "Soma",
    "all",
    "brian2.numpy.abs",
    "brian2.numpy.ones",
    "brian2.tests.test_morphology._check_length_coord_consistency",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_generate_coordinates_random_all": {
  "data": {
   "lineno": 1204,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "Soma",
    "brian2.numpy.ones",
    "brian2.tests.test_morphology._check_length_coord_consistency",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_generate_coordinates_random_compartments": {
  "data": {
   "lineno": 1178,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "Soma",
    "brian2.numpy.ones",
    "brian2.tests.test_morphology._check_length_coord_consistency",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_generate_coordinates_random_sections": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "Soma",
    "brian2.numpy.ones",
    "brian2.tests.test_morphology._check_length_coord_consistency",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_str_repr": {
  "data": {
   "lineno": 1327,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "Soma",
    "brian2.tests.test_morphology.pytest",
    "brian2.units.um",
    "len",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_subgroup_attributes": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "Cylinder",
    "Soma",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.um",
    "brian2.units.um.area",
    "brian2.units.um.diameter",
    "brian2.units.um.distance",
    "brian2.units.um.end_x",
    "brian2.units.um.end_y",
    "brian2.units.um.end_z",
    "brian2.units.um.length",
    "brian2.units.um.r_length_1",
    "brian2.units.um.r_length_2",
    "brian2.units.um.start_x",
    "brian2.units.um.start_y",
    "brian2.units.um.start_z",
    "brian2.units.um.volume",
    "brian2.units.um.x",
    "brian2.units.um.y",
    "brian2.units.um.z"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_subgroup_incorrect": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "AttributeError",
    "Cylinder",
    "IndexError",
    "Soma",
    "TypeError",
    "brian2.tests.test_morphology.pytest",
    "brian2.units.second",
    "brian2.units.um",
    "object"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_subgroup_indices": {
  "data": {
   "lineno": 894,
   "symbols_in_volume": [
    "Cylinder",
    "Soma",
    "brian2.tests.test_morphology.pytest",
    "brian2.units.um",
    "brian2.units.um.indices",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_subtree_deletion": {
  "data": {
   "lineno": 855,
   "symbols_in_volume": [
    "AttributeError",
    "Cylinder",
    "Soma",
    "brian2.tests.test_morphology.pytest",
    "brian2.units.um",
    "delattr"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_topology": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "Soma",
    "brian2.numpy.ones",
    "brian2.tests.test_morphology.pytest",
    "brian2.units.um",
    "len",
    "str",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_cables_coordinates": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "brian2.numpy.linspace",
    "brian2.numpy.sqrt",
    "brian2.tests.test_morphology._check_tree_cables",
    "brian2.tests.test_morphology.pytest",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_cables_from_points": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "brian2.numpy.sqrt",
    "brian2.tests.test_morphology._check_tree_cables",
    "brian2.tests.test_morphology.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_cables_from_swc": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "brian2.tests.test_morphology._check_tree_cables",
    "brian2.tests.test_morphology.os",
    "brian2.tests.test_morphology.tempfile",
    "open"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_cables_schematic": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "brian2.numpy.ones",
    "brian2.tests.test_morphology._check_tree_cables",
    "brian2.tests.test_morphology.pytest",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_soma_coordinates": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "Soma",
    "brian2.numpy.linspace",
    "brian2.numpy.sqrt",
    "brian2.tests.test_morphology._check_tree_soma",
    "brian2.tests.test_morphology.pytest",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_soma_from_points": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "brian2.numpy.sqrt",
    "brian2.tests.test_morphology._check_tree_soma",
    "brian2.tests.test_morphology.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_soma_from_points_3_point_soma": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "Soma",
    "brian2.numpy.sqrt",
    "brian2.tests.test_morphology._check_tree_soma",
    "brian2.tests.test_morphology.pytest",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_soma_from_points_3_point_soma_incorrect": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "ValueError",
    "brian2.numpy.sqrt",
    "brian2.tests.test_morphology.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_soma_from_swc": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "brian2.tests.test_morphology._check_tree_soma",
    "brian2.tests.test_morphology.os",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.test_morphology.tempfile",
    "open"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_soma_from_swc_3_point_soma": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "brian2.tests.test_morphology._check_tree_soma",
    "brian2.tests.test_morphology.os",
    "brian2.tests.test_morphology.pytest",
    "brian2.tests.test_morphology.tempfile",
    "open"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_soma_schematic": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "Soma",
    "brian2.numpy.ones",
    "brian2.tests.test_morphology._check_tree_soma",
    "brian2.tests.test_morphology.pytest",
    "brian2.units.um"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_morphology.um": {
  "data": {
   "shadows": "brian2.units.um"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_namespaces.test_default_content",
    "brian2.tests.test_namespaces.test_errors",
    "brian2.tests.test_namespaces.test_explicit_namespace",
    "brian2.tests.test_namespaces.test_resolution",
    "brian2.tests.test_namespaces.test_warning",
    "brian2.tests.test_namespaces.test_warning_internal_variables"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_namespaces.Constant": {
  "data": {
   "shadows": "brian2.core.variables.Constant"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.Group": {
  "data": {
   "shadows": "brian2.groups.group.Group"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.Hz": {
  "data": {
   "shadows": "brian2.units.stdunits.Hz"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.SimpleGroup": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "brian2.groups.group.Group"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_namespaces.SimpleGroup.__init__": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "brian2.groups.group.Group.__init__",
    "brian2.tests.test_namespaces.uuid",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_namespaces.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces._assert_one_warning": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_namespaces.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.brian_cm": {
  "data": {
   "shadows": "brian2.units.stdunits.cm"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.catch_logs": {
  "data": {
   "shadows": "brian2.utils.logger.catch_logs"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.exp": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.exp"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.get_local_namespace": {
  "data": {
   "shadows": "brian2.core.namespace.get_local_namespace"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.log": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.log"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.mV": {
  "data": {
   "shadows": "brian2.units.stdunits.mV"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.ms": {
  "data": {
   "shadows": "brian2.units.stdunits.ms"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.second": {
  "data": {
   "shadows": "brian2.units.second"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.sin": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.sin"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.test_default_content": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "brian2.groups.group.Group",
    "brian2.tests.test_namespaces.numpy",
    "brian2.tests.test_namespaces.pytest",
    "brian2.tests.test_namespaces.sympy",
    "brian2.units.second",
    "brian2.units.stdunits.Hz",
    "brian2.units.stdunits.mV",
    "brian2.units.stdunits.ms",
    "brian2.units.unitsafefunctions.exp",
    "brian2.units.unitsafefunctions.log",
    "brian2.units.unitsafefunctions.sin",
    "brian2.units.volt"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_namespaces.test_errors": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "KeyError",
    "brian2.tests.test_namespaces.SimpleGroup",
    "brian2.tests.test_namespaces.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_namespaces.test_explicit_namespace": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "brian2.tests.test_namespaces.SimpleGroup",
    "brian2.tests.test_namespaces.pytest",
    "brian2.utils.logger.catch_logs",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_namespaces.test_resolution": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "brian2.core.namespace.get_local_namespace",
    "brian2.tests.test_namespaces.SimpleGroup",
    "brian2.tests.test_namespaces.pytest",
    "brian2.units.stdunits.ms",
    "dict",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_namespaces.test_warning": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "brian2.core.functions.DEFAULT_FUNCTIONS",
    "brian2.core.namespace.get_local_namespace",
    "brian2.tests.test_namespaces.SimpleGroup",
    "brian2.tests.test_namespaces.pytest",
    "brian2.units.stdunits.cm",
    "brian2.units.unitsafefunctions.exp",
    "brian2.utils.logger.catch_logs",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_namespaces.test_warning_internal_variables": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "brian2.core.variables.Constant",
    "brian2.tests.test_namespaces.SimpleGroup",
    "brian2.tests.test_namespaces.pytest",
    "brian2.utils.logger.catch_logs",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_namespaces.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "brian2.tests.test_namespaces.volt": {
  "data": {
   "shadows": "brian2.units.volt"
  },
  "type": "import"
 },
 "brian2.tests.test_network": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.BrianLogger.log_level_warn",
    "brian2.devices.device.all_devices",
    "brian2.devices.device.reinit_and_delete",
    "brian2.devices.device.set_device",
    "brian2.tests.test_network.test_both_equal",
    "brian2.tests.test_network.test_continuation",
    "brian2.tests.test_network.test_defaultclock_dt_changes",
    "brian2.tests.test_network.test_dt_changes_between_runs",
    "brian2.tests.test_network.test_dt_restore",
    "brian2.tests.test_network.test_empty_network",
    "brian2.tests.test_network.test_get_set_states",
    "brian2.tests.test_network.test_incorrect_dt_custom_clock",
    "brian2.tests.test_network.test_incorrect_dt_defaultclock",
    "brian2.tests.test_network.test_incorrect_network_operations",
    "brian2.tests.test_network.test_incorrect_network_use",
    "brian2.tests.test_network.test_invalid_magic_network",
    "brian2.tests.test_network.test_long_run_dt_change",
    "brian2.tests.test_network.test_loop",
    "brian2.tests.test_network.test_magic_collect",
    "brian2.tests.test_network.test_magic_network",
    "brian2.tests.test_network.test_magic_scope",
    "brian2.tests.test_network.test_magic_unused_object",
    "brian2.tests.test_network.test_magic_weak_reference",
    "brian2.tests.test_network.test_multiple_networks_invalid",
    "brian2.tests.test_network.test_multiple_runs_constant_change",
    "brian2.tests.test_network.test_multiple_runs_defaultclock",
    "brian2.tests.test_network.test_multiple_runs_defaultclock_incorrect",
    "brian2.tests.test_network.test_multiple_runs_function_change",
    "brian2.tests.test_network.test_multiple_runs_report_standalone",
    "brian2.tests.test_network.test_multiple_runs_report_standalone_2",
    "brian2.tests.test_network.test_multiple_runs_report_standalone_3",
    "brian2.tests.test_network.test_multiple_runs_report_standalone_incorrect",
    "brian2.tests.test_network.test_network_access",
    "brian2.tests.test_network.test_network_active_flag",
    "brian2.tests.test_network.test_network_before_after_schedule",
    "brian2.tests.test_network.test_network_contains",
    "brian2.tests.test_network.test_network_custom_slots",
    "brian2.tests.test_network.test_network_default_schedule",
    "brian2.tests.test_network.test_network_different_clocks",
    "brian2.tests.test_network.test_network_different_when",
    "brian2.tests.test_network.test_network_from_dict",
    "brian2.tests.test_network.test_network_incorrect_schedule",
    "brian2.tests.test_network.test_network_operations",
    "brian2.tests.test_network.test_network_operations_name",
    "brian2.tests.test_network.test_network_remove",
    "brian2.tests.test_network.test_network_schedule_change",
    "brian2.tests.test_network.test_network_single_object",
    "brian2.tests.test_network.test_network_stop",
    "brian2.tests.test_network.test_network_t",
    "brian2.tests.test_network.test_network_two_objects",
    "brian2.tests.test_network.test_profile",
    "brian2.tests.test_network.test_profile_ipython_html",
    "brian2.tests.test_network.test_profile_off",
    "brian2.tests.test_network.test_progress_report",
    "brian2.tests.test_network.test_progress_report_incorrect",
    "brian2.tests.test_network.test_runtime_rounding",
    "brian2.tests.test_network.test_schedule_warning",
    "brian2.tests.test_network.test_scheduling_summary",
    "brian2.tests.test_network.test_scheduling_summary_magic",
    "brian2.tests.test_network.test_small_runs",
    "brian2.tests.test_network.test_store_restore",
    "brian2.tests.test_network.test_store_restore_magic",
    "brian2.tests.test_network.test_store_restore_magic_to_file",
    "brian2.tests.test_network.test_store_restore_spikequeue",
    "brian2.tests.test_network.test_store_restore_to_file",
    "brian2.tests.test_network.test_store_restore_to_file_differing_nets",
    "brian2.tests.test_network.test_store_restore_to_file_new_objects",
    "t"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_network.BrianLogger": {
  "data": {
   "shadows": "brian2.BrianLogger"
  },
  "type": "import"
 },
 "brian2.tests.test_network.BrianObject": {
  "data": {
   "shadows": "brian2.BrianObject"
  },
  "type": "import"
 },
 "brian2.tests.test_network.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "brian2.tests.test_network.Clock": {
  "data": {
   "shadows": "brian2.Clock"
  },
  "type": "import"
 },
 "brian2.tests.test_network.Counter": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "brian2.BrianObject"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_network.Counter.__init__": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "brian2.tests.test_network.Counter",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.Counter.run": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "brian2.tests.test_network.Device": {
  "data": {
   "shadows": "brian2.devices.device.Device"
  },
  "type": "import"
 },
 "brian2.tests.test_network.Hz": {
  "data": {
   "shadows": "brian2.Hz"
  },
  "type": "import"
 },
 "brian2.tests.test_network.MagicError": {
  "data": {
   "shadows": "brian2.MagicError"
  },
  "type": "import"
 },
 "brian2.tests.test_network.MagicNetwork": {
  "data": {
   "shadows": "brian2.MagicNetwork"
  },
  "type": "import"
 },
 "brian2.tests.test_network.NameLister": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "brian2.BrianObject"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_network.NameLister.__init__": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "brian2.tests.test_network.NameLister",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.NameLister.run": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "brian2.tests.test_network.NameLister"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.Network": {
  "data": {
   "shadows": "brian2.Network"
  },
  "type": "import"
 },
 "brian2.tests.test_network.NetworkOperation": {
  "data": {
   "shadows": "brian2.NetworkOperation"
  },
  "type": "import"
 },
 "brian2.tests.test_network.NeuronGroup": {
  "data": {
   "shadows": "brian2.NeuronGroup"
  },
  "type": "import"
 },
 "brian2.tests.test_network.NoninvalidatingCounter": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "brian2.tests.test_network.Counter"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_network.PoissonGroup": {
  "data": {
   "shadows": "brian2.PoissonGroup"
  },
  "type": "import"
 },
 "brian2.tests.test_network.PopulationRateMonitor": {
  "data": {
   "shadows": "brian2.PopulationRateMonitor"
  },
  "type": "import"
 },
 "brian2.tests.test_network.Preparer": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "brian2.BrianObject"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_network.Preparer.__init__": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "brian2.tests.test_network.Preparer",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.Preparer.after_run": {
  "data": {
   "lineno": 379
  },
  "type": "function"
 },
 "brian2.tests.test_network.Preparer.before_run": {
  "data": {
   "lineno": 377
  },
  "type": "function"
 },
 "brian2.tests.test_network.Preparer.reinit": {
  "data": {
   "lineno": 375
  },
  "type": "function"
 },
 "brian2.tests.test_network.Quantity": {
  "data": {
   "shadows": "brian2.Quantity"
  },
  "type": "import"
 },
 "brian2.tests.test_network.RuntimeDevice": {
  "data": {
   "shadows": "brian2.devices.device.RuntimeDevice"
  },
  "type": "import"
 },
 "brian2.tests.test_network.SpikeGeneratorGroup": {
  "data": {
   "shadows": "brian2.SpikeGeneratorGroup"
  },
  "type": "import"
 },
 "brian2.tests.test_network.SpikeMonitor": {
  "data": {
   "shadows": "brian2.SpikeMonitor"
  },
  "type": "import"
 },
 "brian2.tests.test_network.StateMonitor": {
  "data": {
   "shadows": "brian2.StateMonitor"
  },
  "type": "import"
 },
 "brian2.tests.test_network.Stopper": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "brian2.BrianObject"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_network.Stopper.__init__": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "brian2.tests.test_network.Stopper",
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.Stopper.run": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "brian2.tests.test_network.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "brian2.tests.test_network.Synapses": {
  "data": {
   "shadows": "brian2.Synapses"
  },
  "type": "import"
 },
 "brian2.tests.test_network.TimedArray": {
  "data": {
   "shadows": "brian2.TimedArray"
  },
  "type": "import"
 },
 "brian2.tests.test_network.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_network.all_devices": {
  "data": {
   "shadows": "brian2.devices.device.all_devices"
  },
  "type": "import"
 },
 "brian2.tests.test_network.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_network.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_network.captured_output": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "brian2.tests.test_network.sys",
    "contextlib.contextmanager",
    "io.BytesIO",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.catch_logs": {
  "data": {
   "shadows": "brian2.utils.logger.catch_logs"
  },
  "type": "import"
 },
 "brian2.tests.test_network.collect": {
  "data": {
   "shadows": "brian2.collect"
  },
  "type": "import"
 },
 "brian2.tests.test_network.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "brian2.tests.test_network.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "brian2.tests.test_network.defaultclock": {
  "data": {
   "shadows": "brian2.defaultclock"
  },
  "type": "import"
 },
 "brian2.tests.test_network.device": {
  "data": {
   "shadows": "brian2.devices.device.device"
  },
  "type": "import"
 },
 "brian2.tests.test_network.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.tests.test_network.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "brian2.tests.test_network.magic_network": {
  "data": {
   "shadows": "brian2.magic_network"
  },
  "type": "import"
 },
 "brian2.tests.test_network.ms": {
  "data": {
   "shadows": "brian2.ms"
  },
  "type": "import"
 },
 "brian2.tests.test_network.network_operation": {
  "data": {
   "shadows": "brian2.network_operation"
  },
  "type": "import"
 },
 "brian2.tests.test_network.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.test_network.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.tests.test_network.prefs": {
  "data": {
   "shadows": "brian2.prefs"
  },
  "type": "import"
 },
 "brian2.tests.test_network.profiling_summary": {
  "data": {
   "shadows": "brian2.profiling_summary"
  },
  "type": "import"
 },
 "brian2.tests.test_network.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_network.reinit_and_delete": {
  "data": {
   "shadows": "brian2.devices.device.reinit_and_delete"
  },
  "type": "import"
 },
 "brian2.tests.test_network.reset_device": {
  "data": {
   "shadows": "brian2.devices.device.reset_device"
  },
  "type": "import"
 },
 "brian2.tests.test_network.restore": {
  "data": {
   "shadows": "brian2.restore"
  },
  "type": "import"
 },
 "brian2.tests.test_network.run": {
  "data": {
   "shadows": "brian2.run"
  },
  "type": "import"
 },
 "brian2.tests.test_network.schedule_propagation_offset": {
  "data": {
   "shadows": "brian2.core.network.schedule_propagation_offset"
  },
  "type": "import"
 },
 "brian2.tests.test_network.scheduling_summary": {
  "data": {
   "shadows": "brian2.core.network.scheduling_summary"
  },
  "type": "import"
 },
 "brian2.tests.test_network.second": {
  "data": {
   "shadows": "brian2.second"
  },
  "type": "import"
 },
 "brian2.tests.test_network.set_device": {
  "data": {
   "shadows": "brian2.devices.device.set_device"
  },
  "type": "import"
 },
 "brian2.tests.test_network.start_scope": {
  "data": {
   "shadows": "brian2.start_scope"
  },
  "type": "import"
 },
 "brian2.tests.test_network.stop": {
  "data": {
   "shadows": "brian2.stop"
  },
  "type": "import"
 },
 "brian2.tests.test_network.store": {
  "data": {
   "shadows": "brian2.store"
  },
  "type": "import"
 },
 "brian2.tests.test_network.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.tests.test_network.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "brian2.tests.test_network.test_both_equal": {
  "data": {
   "lineno": 1426,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.StateMonitor",
    "brian2.ms",
    "brian2.run",
    "brian2.start_scope",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_continuation": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.StateMonitor",
    "brian2.defaultclock.dt",
    "brian2.ms",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_defaultclock_dt_changes": {
  "data": {
   "lineno": 1216,
   "symbols_in_volume": [
    "brian2.BrianLogger.suppress_name",
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.StateMonitor",
    "brian2.defaultclock.dt",
    "brian2.ms",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_dependency_check": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "brian2.Network",
    "brian2.ms",
    "brian2.run",
    "brian2.tests.test_network.pytest",
    "brian2.utils.logger.catch_logs",
    "create_net",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_dependency_check.create_net": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.PopulationRateMonitor",
    "brian2.SpikeMonitor",
    "brian2.StateMonitor",
    "brian2.Synapses"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_dt_changes_between_runs": {
  "data": {
   "lineno": 1227,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.StateMonitor",
    "brian2.defaultclock.dt",
    "brian2.devices.device.device.build",
    "brian2.devices.device.device.build_options",
    "brian2.ms",
    "brian2.run",
    "brian2.tests.test_network.pytest",
    "brian2.tests.utils.assert_allclose",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_dt_restore": {
  "data": {
   "lineno": 1243,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.StateMonitor",
    "brian2.defaultclock.dt",
    "brian2.ms",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_empty_network": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.second",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_get_set_states": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.magic_network.get_states",
    "brian2.tests.test_network.pytest",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_incorrect_dt_custom_clock": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "ValueError",
    "brian2.Clock",
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.ms",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_incorrect_dt_defaultclock": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "ValueError",
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.defaultclock.dt",
    "brian2.ms",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_incorrect_network_operations": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "AssertionError",
    "Container",
    "TypeError",
    "brian2.NetworkOperation",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_incorrect_network_operations.Container": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_network.test_incorrect_network_operations.Container.func": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "brian2.network_operation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_incorrect_network_operations.func": {
  "data": {
   "lineno": 460
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_incorrect_network_use": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.MagicError",
    "brian2.MagicNetwork",
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.magic_network.add",
    "brian2.magic_network.remove",
    "brian2.tests.test_network.pytest",
    "object"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_invalid_magic_network": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "AssertionError",
    "brian2.MagicError",
    "brian2.magic_network.t",
    "brian2.ms",
    "brian2.run",
    "brian2.tests.test_network.Counter",
    "brian2.tests.test_network.NoninvalidatingCounter",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_long_run_dt_change": {
  "data": {
   "lineno": 1448,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.defaultclock.dt",
    "brian2.ms",
    "brian2.run",
    "brian2.second",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_loop": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "brian2.tests.test_network.logging",
    "brian2.utils.logger.catch_logs",
    "run_simulation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_loop.run_simulation": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.ms",
    "brian2.run",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_magic_collect": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "brian2.Hz",
    "brian2.NeuronGroup",
    "brian2.PoissonGroup",
    "brian2.PopulationRateMonitor",
    "brian2.SpikeMonitor",
    "brian2.StateMonitor",
    "brian2.Synapses",
    "brian2.collect",
    "brian2.tests.test_network.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_magic_network": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "brian2.magic_network",
    "brian2.ms",
    "brian2.run",
    "brian2.tests.test_network.Counter",
    "brian2.tests.test_network.pytest",
    "len",
    "numpy.testing.assert_equal",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_magic_scope": {
  "data": {
   "lineno": 1376,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.collect",
    "brian2.start_scope",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_magic_unused_object": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "brian2.ms",
    "brian2.run",
    "brian2.tests.test_network.logging",
    "brian2.tests.test_network.pytest",
    "brian2.utils.logger.catch_logs",
    "create_group"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_magic_unused_object.create_group": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "brian2.NeuronGroup"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_magic_weak_reference": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.ms",
    "brian2.run",
    "brian2.tests.test_network.logging",
    "brian2.tests.test_network.pytest",
    "brian2.tests.test_network.weakref",
    "brian2.utils.logger.catch_logs"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_networks_invalid": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "AssertionError",
    "RuntimeError",
    "brian2.Network",
    "brian2.ms",
    "brian2.run",
    "brian2.tests.test_network.Counter",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_constant_change": {
  "data": {
   "lineno": 1458,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.StateMonitor",
    "brian2.defaultclock.dt",
    "brian2.devices.device.device.build",
    "brian2.devices.device.device.build_options",
    "brian2.run",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_defaultclock": {
  "data": {
   "lineno": 1304,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.defaultclock.dt",
    "brian2.ms",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_defaultclock_incorrect": {
  "data": {
   "lineno": 1319,
   "symbols_in_volume": [
    "ValueError",
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.defaultclock.dt",
    "brian2.ms",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_function_change": {
  "data": {
   "lineno": 1471,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.StateMonitor",
    "brian2.TimedArray",
    "brian2.defaultclock.dt",
    "brian2.devices.device.device.build",
    "brian2.devices.device.device.build_options",
    "brian2.run",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_report_standalone": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.devices.device.device.build",
    "brian2.devices.device.device.build_options",
    "brian2.ms",
    "brian2.run",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_report_standalone_2": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.devices.device.device.build",
    "brian2.devices.device.device.build_options",
    "brian2.ms",
    "brian2.run",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_report_standalone_3": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.devices.device.device.build",
    "brian2.devices.device.device.build_options",
    "brian2.ms",
    "brian2.run",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_report_standalone_incorrect": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.NeuronGroup",
    "brian2.devices.device.set_device",
    "brian2.ms",
    "brian2.run",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_access": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "brian2.Network",
    "brian2.tests.test_network.Counter",
    "brian2.tests.test_network.pytest",
    "len",
    "repr",
    "set",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_active_flag": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "brian2.ms",
    "brian2.run",
    "brian2.tests.test_network.Counter",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_before_after_schedule": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.ms",
    "brian2.tests.test_network.NameLister",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_contains": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_custom_slots": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.ms",
    "brian2.tests.test_network.NameLister",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_default_schedule": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.prefs.core.network.default_schedule",
    "brian2.tests.test_network.pytest",
    "list",
    "reversed"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_different_clocks": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.defaultclock.dt",
    "brian2.ms",
    "brian2.second",
    "brian2.tests.test_network.NameLister",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_different_when": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.ms",
    "brian2.tests.test_network.NameLister",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_from_dict": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.ms",
    "brian2.tests.test_network.Counter",
    "brian2.tests.test_network.pytest",
    "dict",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_incorrect_schedule": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.Network",
    "brian2.tests.test_network.pytest",
    "object",
    "setattr"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "Container",
    "brian2.Network",
    "brian2.NetworkOperation",
    "brian2.ms",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations.Container": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_network.test_network_operations.Container.__init__": {
  "data": {
   "lineno": 439
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations.Container.g1": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations.Container.g2": {
  "data": {
   "lineno": 446
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations.f1": {
  "data": {
   "lineno": 426
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations.f2": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "brian2.network_operation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations.f3": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "brian2.network_operation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations_name": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.NetworkOperation",
    "brian2.ms",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations_name.f1": {
  "data": {
   "lineno": 488
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations_name.f2": {
  "data": {
   "lineno": 491
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations_name.x": {
  "data": {
   "lineno": 494
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_remove": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.ms",
    "brian2.tests.test_network.Counter",
    "brian2.tests.test_network.copy",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_schedule_change": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.ms",
    "brian2.tests.test_network.NameLister",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_single_object": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.ms",
    "brian2.tests.test_network.Counter",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_stop": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.defaultclock.t",
    "brian2.ms",
    "brian2.stop",
    "brian2.tests.test_network.Stopper",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_t": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.magic_network.t",
    "brian2.ms",
    "brian2.run",
    "brian2.tests.test_network.Counter",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_network_two_objects": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.ms",
    "brian2.tests.test_network.Counter",
    "brian2.tests.test_network.pytest",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_profile": {
  "data": {
   "lineno": 1333,
   "symbols_in_volume": [
    "all",
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.ms",
    "brian2.second",
    "brian2.tests.test_network.pytest",
    "dict",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_profile_ipython_html": {
  "data": {
   "lineno": 1365,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.ms",
    "brian2.profiling_summary",
    "brian2.tests.test_network.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_profile_off": {
  "data": {
   "lineno": 1355,
   "symbols_in_volume": [
    "ValueError",
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.ms",
    "brian2.profiling_summary",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_progress_report": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.ms",
    "brian2.tests.test_network.captured_output",
    "brian2.tests.test_network.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_progress_report.capture_progress": {
  "data": {
   "lineno": 874
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_progress_report_incorrect": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.ms",
    "brian2.tests.test_network.pytest",
    "object"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_restore_with_random_state": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.StateMonitor",
    "brian2.devices.device.RuntimeDevice",
    "brian2.devices.device.get_device",
    "brian2.ms",
    "brian2.restore",
    "brian2.run",
    "brian2.store",
    "brian2.tests.test_network.pytest",
    "isinstance",
    "numpy.array",
    "numpy.testing.assert_equal",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_runtime_rounding": {
  "data": {
   "lineno": 1392,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.StateMonitor",
    "brian2.defaultclock.dt",
    "brian2.run",
    "brian2.tests.test_network.pytest",
    "brian2.us",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_schedule_warning": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "TestDevice1",
    "TestDevice2",
    "brian2.Network",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.defaultclock.dt",
    "brian2.devices.device.all_devices",
    "brian2.devices.device.get_device",
    "brian2.devices.device.reset_device",
    "brian2.devices.device.set_device",
    "brian2.ms",
    "brian2.tests.test_network.pytest",
    "brian2.utils.logger.catch_logs",
    "len",
    "list",
    "reversed",
    "str",
    "uuid.uuid4"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_schedule_warning.TestDevice1": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "brian2.devices.device.Device"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_network.test_schedule_warning.TestDevice1.add_array": {
  "data": {
   "lineno": 223
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_schedule_warning.TestDevice1.fill_with_array": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_schedule_warning.TestDevice1.get_value": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_schedule_warning.TestDevice1.init_with_zeros": {
  "data": {
   "lineno": 225
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_schedule_warning.TestDevice2": {
  "data": {
   "lineno": 229
  },
  "type": "class"
 },
 "brian2.tests.test_network.test_schedule_warning.TestDevice2.__init__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_scheduling_summary": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.StateMonitor",
    "brian2.core.network.scheduling_summary",
    "brian2.defaultclock.dt",
    "brian2.run",
    "brian2.tests.test_network.pytest",
    "brian2.tests.test_network.uuid",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_scheduling_summary.foo": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "brian2.network_operation"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_scheduling_summary_magic": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.StateMonitor",
    "brian2.core.network.scheduling_summary",
    "brian2.defaultclock.dt",
    "brian2.run",
    "brian2.tests.test_network.pytest",
    "brian2.tests.test_network.uuid",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_small_runs": {
  "data": {
   "lineno": 1402,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.StateMonitor",
    "brian2.ms",
    "brian2.second",
    "brian2.tests.test_network.pytest",
    "brian2.tests.utils.assert_allclose",
    "min"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore": {
  "data": {
   "lineno": 937,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.SpikeMonitor",
    "brian2.StateMonitor",
    "brian2.Synapses",
    "brian2.defaultclock.t",
    "brian2.ms",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore_magic": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.SpikeMonitor",
    "brian2.StateMonitor",
    "brian2.Synapses",
    "brian2.defaultclock.t",
    "brian2.magic_network.t",
    "brian2.ms",
    "brian2.restore",
    "brian2.run",
    "brian2.store",
    "brian2.tests.test_network.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore_magic_to_file": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": [
    "OSError",
    "brian2.NeuronGroup",
    "brian2.SpikeMonitor",
    "brian2.StateMonitor",
    "brian2.Synapses",
    "brian2.defaultclock.t",
    "brian2.magic_network.t",
    "brian2.ms",
    "brian2.restore",
    "brian2.run",
    "brian2.store",
    "brian2.tests.test_network.os",
    "brian2.tests.test_network.pytest",
    "brian2.tests.test_network.tempfile",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore_spikequeue": {
  "data": {
   "lineno": 1177,
   "symbols_in_volume": [
    "brian2.NeuronGroup",
    "brian2.SpikeGeneratorGroup",
    "brian2.Synapses",
    "brian2.defaultclock.dt",
    "brian2.ms",
    "brian2.restore",
    "brian2.run",
    "brian2.store",
    "brian2.tests.test_network.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore_to_file": {
  "data": {
   "lineno": 979,
   "symbols_in_volume": [
    "OSError",
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.SpikeMonitor",
    "brian2.StateMonitor",
    "brian2.Synapses",
    "brian2.defaultclock.t",
    "brian2.ms",
    "brian2.tests.test_network.os",
    "brian2.tests.test_network.pytest",
    "brian2.tests.test_network.tempfile",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore_to_file_differing_nets": {
  "data": {
   "lineno": 1075,
   "symbols_in_volume": [
    "KeyError",
    "brian2.Network",
    "brian2.SpikeGeneratorGroup",
    "brian2.SpikeMonitor",
    "brian2.ms",
    "brian2.tests.test_network.pytest",
    "brian2.tests.test_network.tempfile"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore_to_file_new_objects": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "OSError",
    "brian2.Quantity",
    "brian2.ms",
    "brian2.tests.test_network.os",
    "brian2.tests.test_network.pytest",
    "brian2.tests.test_network.tempfile",
    "create_net",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore_to_file_new_objects.create_net": {
  "data": {
   "lineno": 1025,
   "symbols_in_volume": [
    "brian2.Network",
    "brian2.NeuronGroup",
    "brian2.SpikeGeneratorGroup",
    "brian2.SpikeMonitor",
    "brian2.StateMonitor",
    "brian2.Synapses",
    "brian2.ms",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_network.us": {
  "data": {
   "shadows": "brian2.us"
  },
  "type": "import"
 },
 "brian2.tests.test_network.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "brian2.tests.test_network.uuid4": {
  "data": {
   "shadows": "uuid.uuid4"
  },
  "type": "import"
 },
 "brian2.tests.test_network.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.core.preferences.prefs.codegen.target",
    "brian2.tests.test_neurongroup.test_aliasing_in_statements",
    "brian2.tests.test_neurongroup.test_constant_subexpression_order",
    "brian2.tests.test_neurongroup.test_constant_variable_subexpression",
    "brian2.tests.test_neurongroup.test_creation",
    "brian2.tests.test_neurongroup.test_custom_events",
    "brian2.tests.test_neurongroup.test_custom_events_schedule",
    "brian2.tests.test_neurongroup.test_get_dtype",
    "brian2.tests.test_neurongroup.test_get_states",
    "brian2.tests.test_neurongroup.test_get_states_pandas",
    "brian2.tests.test_neurongroup.test_incomplete_namespace",
    "brian2.tests.test_neurongroup.test_incorrect_custom_event_definition",
    "brian2.tests.test_neurongroup.test_indices",
    "brian2.tests.test_neurongroup.test_integer_variables_and_mod",
    "brian2.tests.test_neurongroup.test_ipython_html",
    "brian2.tests.test_neurongroup.test_linked_double_linked1",
    "brian2.tests.test_neurongroup.test_linked_double_linked2",
    "brian2.tests.test_neurongroup.test_linked_double_linked3",
    "brian2.tests.test_neurongroup.test_linked_double_linked4",
    "brian2.tests.test_neurongroup.test_linked_subexpression",
    "brian2.tests.test_neurongroup.test_linked_subexpression_2",
    "brian2.tests.test_neurongroup.test_linked_subexpression_3",
    "brian2.tests.test_neurongroup.test_linked_subexpression_synapse",
    "brian2.tests.test_neurongroup.test_linked_subgroup",
    "brian2.tests.test_neurongroup.test_linked_subgroup2",
    "brian2.tests.test_neurongroup.test_linked_synapses",
    "brian2.tests.test_neurongroup.test_linked_triple_linked",
    "brian2.tests.test_neurongroup.test_linked_var_in_reset",
    "brian2.tests.test_neurongroup.test_linked_var_in_reset_incorrect",
    "brian2.tests.test_neurongroup.test_linked_var_in_reset_size_1",
    "brian2.tests.test_neurongroup.test_linked_variable_correct",
    "brian2.tests.test_neurongroup.test_linked_variable_incorrect",
    "brian2.tests.test_neurongroup.test_linked_variable_indexed",
    "brian2.tests.test_neurongroup.test_linked_variable_indexed_incorrect",
    "brian2.tests.test_neurongroup.test_linked_variable_repeat",
    "brian2.tests.test_neurongroup.test_linked_variable_scalar",
    "brian2.tests.test_neurongroup.test_namespace_errors",
    "brian2.tests.test_neurongroup.test_namespace_warnings",
    "brian2.tests.test_neurongroup.test_no_code",
    "brian2.tests.test_neurongroup.test_random_values_fixed_and_random",
    "brian2.tests.test_neurongroup.test_random_values_fixed_seed",
    "brian2.tests.test_neurongroup.test_random_values_random_seed",
    "brian2.tests.test_neurongroup.test_random_vector_values",
    "brian2.tests.test_neurongroup.test_referred_scalar_variable",
    "brian2.tests.test_neurongroup.test_repr",
    "brian2.tests.test_neurongroup.test_run_regularly_dt",
    "brian2.tests.test_neurongroup.test_run_regularly_scheduling",
    "brian2.tests.test_neurongroup.test_run_regularly_scheduling_2",
    "brian2.tests.test_neurongroup.test_scalar_parameter_access",
    "brian2.tests.test_neurongroup.test_scalar_subexpression",
    "brian2.tests.test_neurongroup.test_scalar_variable",
    "brian2.tests.test_neurongroup.test_semantics_floating_point_division",
    "brian2.tests.test_neurongroup.test_semantics_floor_division",
    "brian2.tests.test_neurongroup.test_semantics_mod",
    "brian2.tests.test_neurongroup.test_set_states",
    "brian2.tests.test_neurongroup.test_set_states_pandas",
    "brian2.tests.test_neurongroup.test_sim_with_scalar_subexpression",
    "brian2.tests.test_neurongroup.test_sim_with_scalar_variable",
    "brian2.tests.test_neurongroup.test_state_variable_access",
    "brian2.tests.test_neurongroup.test_state_variable_access_strings",
    "brian2.tests.test_neurongroup.test_state_variable_set_strings",
    "brian2.tests.test_neurongroup.test_state_variables",
    "brian2.tests.test_neurongroup.test_stochastic_variable",
    "brian2.tests.test_neurongroup.test_stochastic_variable_multiplicative",
    "brian2.tests.test_neurongroup.test_subexpression",
    "brian2.tests.test_neurongroup.test_subexpression_checks",
    "brian2.tests.test_neurongroup.test_subexpression_with_constant",
    "brian2.tests.test_neurongroup.test_syntax_errors",
    "brian2.tests.test_neurongroup.test_threshold_reset",
    "brian2.tests.test_neurongroup.test_unit_errors_threshold_reset",
    "brian2.tests.test_neurongroup.test_unknown_state_variables",
    "brian2.tests.test_neurongroup.test_variables",
    "brian2.tests.test_neurongroup.test_variableview_calculations"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_neurongroup.DimensionMismatchError": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DimensionMismatchError"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.Equations": {
  "data": {
   "shadows": "brian2.equations.equations.Equations"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.Hz": {
  "data": {
   "shadows": "brian2.units.stdunits.Hz"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.Network": {
  "data": {
   "shadows": "brian2.core.network.Network"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.NeuronGroup": {
  "data": {
   "shadows": "brian2.groups.neurongroup.NeuronGroup"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.StateMonitor": {
  "data": {
   "shadows": "brian2.monitors.statemonitor.StateMonitor"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.Synapses": {
  "data": {
   "shadows": "brian2.synapses.synapses.Synapses"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.catch_logs": {
  "data": {
   "shadows": "brian2.utils.logger.catch_logs"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.defaultclock": {
  "data": {
   "shadows": "brian2.core.clocks.defaultclock"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.get_dtype": {
  "data": {
   "shadows": "brian2.groups.group.get_dtype"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.have_same_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.have_same_dimensions"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.linked_var": {
  "data": {
   "shadows": "brian2.core.variables.linked_var"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.linspace": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.linspace"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.mV": {
  "data": {
   "shadows": "brian2.units.stdunits.mV"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.ms": {
  "data": {
   "shadows": "brian2.units.stdunits.ms"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.run": {
  "data": {
   "shadows": "brian2.core.magic.run"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.seed": {
  "data": {
   "shadows": "brian2.devices.device.seed"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.test_aliasing_in_statements": {
  "data": {
   "lineno": 1360,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.network.Network",
    "brian2.core.preferences.prefs.codegen.target",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_constant_subexpression_order": {
  "data": {
   "lineno": 1240,
   "symbols_in_volume": [
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_constant_variable_subexpression": {
  "data": {
   "lineno": 1215,
   "symbols_in_volume": [
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.stdunits.ms",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_creation": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "len",
    "object"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_custom_events": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "brian2.core.network.Network",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_custom_events_schedule": {
  "data": {
   "lineno": 755,
   "symbols_in_volume": [
    "brian2.core.network.Network",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_get_dtype": {
  "data": {
   "lineno": 1314,
   "symbols_in_volume": [
    "TypeError",
    "brian2.core.preferences.prefs",
    "brian2.equations.equations.Equations",
    "brian2.groups.group.get_dtype",
    "brian2.tests.test_neurongroup.pytest",
    "numpy.bool",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_get_states": {
  "data": {
   "lineno": 1378,
   "symbols_in_volume": [
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.allunits.volt",
    "len",
    "numpy.arange",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_get_states_pandas": {
  "data": {
   "lineno": 1434,
   "symbols_in_volume": [
    "ImportError",
    "NotImplementedError",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.arange",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_incomplete_namespace": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "brian2.core.network.Network",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_incorrect_custom_event_definition": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.core.network.Network",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.mV",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_indices": {
  "data": {
   "lineno": 1294,
   "symbols_in_volume": [
    "TypeError",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_integer_variables_and_mod": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.ms",
    "len",
    "numpy.random.rand",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_ipython_html": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_double_linked1": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_double_linked2": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_double_linked3": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_double_linked4": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_subexpression": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "all",
    "brian2.core.magic.run",
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.monitors.statemonitor.StateMonitor",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.ms",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_subexpression_2": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "all",
    "brian2.core.magic.run",
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.monitors.statemonitor.StateMonitor",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_subexpression_3": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "all",
    "brian2.core.magic.run",
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.monitors.statemonitor.StateMonitor",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.ms",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_subexpression_synapse": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.synapses.synapses.Synapses",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_subgroup": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_subgroup2": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_synapses": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "NotImplementedError",
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.synapses.synapses.Synapses",
    "brian2.tests.test_neurongroup.pytest",
    "setattr"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_triple_linked": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_var_in_reset": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.magic.run",
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_var_in_reset_incorrect": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.core.network.Network",
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_var_in_reset_size_1": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.magic.run",
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_variable_correct": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "brian2.core.magic.run",
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.monitors.statemonitor.StateMonitor",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.stdunits.mV",
    "brian2.units.stdunits.ms",
    "brian2.units.unitsafefunctions.linspace",
    "len",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_variable_incorrect": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "setattr"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_variable_indexed": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_variable_indexed_incorrect": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "numpy.arange",
    "setattr"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_variable_repeat": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_variable_scalar": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.magic.run",
    "brian2.core.variables.linked_var",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.monitors.statemonitor.StateMonitor",
    "brian2.tests.test_neurongroup.pytest",
    "len",
    "numpy.isscalar",
    "numpy.linspace",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_namespace_errors": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "KeyError",
    "brian2.core.network.Network",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_namespace_warnings": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "brian2.core.network.Network",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.test_neurongroup.uuid",
    "brian2.units.stdunits.Hz",
    "brian2.units.stdunits.ms",
    "brian2.utils.logger.catch_logs",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_no_code": {
  "data": {
   "lineno": 1554,
   "symbols_in_volume": [
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.ms",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_random_values_fixed_and_random": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.magic.run",
    "brian2.devices.device.seed",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.monitors.statemonitor.StateMonitor",
    "brian2.tests.utils.assert_allclose",
    "numpy.array",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_random_values_fixed_seed": {
  "data": {
   "lineno": 1518,
   "symbols_in_volume": [
    "brian2.core.magic.run",
    "brian2.devices.device.seed",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.stdunits.ms",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_random_values_random_seed": {
  "data": {
   "lineno": 1504,
   "symbols_in_volume": [
    "brian2.core.magic.run",
    "brian2.devices.device.seed",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.ms",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_random_vector_values": {
  "data": {
   "lineno": 1490,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.network.Network",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.units.stdunits.ms",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_referred_scalar_variable": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.allunits.second",
    "brian2.units.stdunits.Hz",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_repr": {
  "data": {
   "lineno": 1271,
   "symbols_in_volume": [
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.test_neurongroup.sympy",
    "func",
    "len",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_run_regularly_dt": {
  "data": {
   "lineno": 1616,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.monitors.statemonitor.StateMonitor",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.diff",
    "numpy.tile"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_run_regularly_scheduling": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_run_regularly_scheduling_2": {
  "data": {
   "lineno": 1583,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.monitors.statemonitor.StateMonitor",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_scalar_parameter_access": {
  "data": {
   "lineno": 1131,
   "symbols_in_volume": [
    "IndexError",
    "ValueError",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.stdunits.Hz",
    "numpy.asanyarray",
    "slice"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_scalar_subexpression": {
  "data": {
   "lineno": 1171,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.core.network.Network",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.Hz",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_scalar_variable": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.network.Network",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.stdunits.mV",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_semantics_floating_point_division": {
  "data": {
   "lineno": 1656,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.utils.logger.catch_logs",
    "len",
    "numpy.arange",
    "numpy.double",
    "numpy.float",
    "numpy.int32",
    "numpy.int64"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_semantics_floor_division": {
  "data": {
   "lineno": 1626,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.utils.logger.catch_logs",
    "len",
    "numpy.arange",
    "numpy.double",
    "numpy.float",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_semantics_mod": {
  "data": {
   "lineno": 1690,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.utils.logger.catch_logs",
    "len",
    "numpy.arange",
    "numpy.double",
    "numpy.float",
    "numpy.int32",
    "numpy.int64",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_set_states": {
  "data": {
   "lineno": 1407,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.allunits.volt",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_set_states_pandas": {
  "data": {
   "lineno": 1462,
   "symbols_in_volume": [
    "ImportError",
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.allunits.volt",
    "numpy.arange",
    "numpy.array",
    "numpy.vstack",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_sim_with_scalar_subexpression": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.stdunits.ms",
    "numpy.exp",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_sim_with_scalar_variable": {
  "data": {
   "lineno": 1196,
   "symbols_in_volume": [
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.stdunits.ms",
    "numpy.exp",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_state_variable_access": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "IndexError",
    "TypeError",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.allunits.volt",
    "brian2.units.fundamentalunits.have_same_dimensions",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "object",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_state_variable_access_strings": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.allunits.volt",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.stdunits.ms",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_state_variable_set_strings": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "all",
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.allunits.volt",
    "brian2.units.stdunits.mV",
    "brian2.units.stdunits.ms",
    "numpy.arange",
    "numpy.isinf",
    "numpy.var",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_state_variables": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "all",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.allunits.second",
    "brian2.units.allunits.volt",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.stdunits.mV",
    "float",
    "numpy.arange",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_stochastic_variable": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_stochastic_variable_multiplicative": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.allunits.second"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_subexpression": {
  "data": {
   "lineno": 1072,
   "symbols_in_volume": [
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.stdunits.Hz",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_subexpression_checks": {
  "data": {
   "lineno": 1253,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.core.network.Network",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_subexpression_with_constant": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "KeyError",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "len",
    "numpy.array",
    "numpy.mean",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_syntax_errors": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "Exception",
    "brian2.core.network.Network",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_threshold_reset": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "brian2.core.clocks.defaultclock.dt",
    "brian2.core.magic.run",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_unit_errors_threshold_reset": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "brian2.core.magic.run",
    "brian2.core.network.Network",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_unknown_state_variables": {
  "data": {
   "lineno": 1055,
   "symbols_in_volume": [
    "AttributeError",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "setattr"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_variables": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "all",
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.units.stdunits.ms"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_variableview_calculations": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "brian2.groups.neurongroup.NeuronGroup",
    "brian2.tests.test_neurongroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.stdunits.mV",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_neurongroup.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "brian2.tests.test_neurongroup.volt": {
  "data": {
   "shadows": "brian2.units.allunits.volt"
  },
  "type": "import"
 },
 "brian2.tests.test_numpy_codegen": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_numpy_codegen.test_error_message"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_numpy_codegen.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_numpy_codegen.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_numpy_codegen.test_error_message": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "AssertionError",
    "NeuronGroup",
    "ValueError",
    "brian2.tests.test_numpy_codegen.pytest",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_numpy_codegen.test_error_message.foo": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "check_units"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "_pytest.outcomes.Skipped",
    "brian2.tests.test_parsing.test_abstract_code_dependencies",
    "brian2.tests.test_parsing.test_abstract_code_from_function",
    "brian2.tests.test_parsing.test_error_messages",
    "brian2.tests.test_parsing.test_extract_abstract_code_functions",
    "brian2.tests.test_parsing.test_is_boolean_expression",
    "brian2.tests.test_parsing.test_parse_expression_unit",
    "brian2.tests.test_parsing.test_parse_expressions_cpp",
    "brian2.tests.test_parsing.test_parse_expressions_numpy",
    "brian2.tests.test_parsing.test_parse_expressions_python",
    "brian2.tests.test_parsing.test_parse_expressions_sympy",
    "brian2.tests.test_parsing.test_substitute_abstract_code_functions",
    "brian2.tests.test_parsing.test_sympy_infinity",
    "brian2.tests.test_parsing.test_sympytools",
    "brian2.tests.test_parsing.test_value_from_expression",
    "scipy.weave"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_parsing.CPPCodeGenerator": {
  "data": {
   "shadows": "brian2.codegen.generators.cpp_generator.CPPCodeGenerator"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.CPPNodeRenderer": {
  "data": {
   "shadows": "brian2.parsing.rendering.CPPNodeRenderer"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.Constant": {
  "data": {
   "shadows": "brian2.core.variables.Constant"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.DimensionMismatchError": {
  "data": {
   "shadows": "brian2.units.DimensionMismatchError"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.Group": {
  "data": {
   "shadows": "brian2.groups.group.Group"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.NodeRenderer": {
  "data": {
   "shadows": "brian2.parsing.rendering.NodeRenderer"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.NumpyNodeRenderer": {
  "data": {
   "shadows": "brian2.parsing.rendering.NumpyNodeRenderer"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.SimpleGroup": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "brian2.groups.group.Group"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_parsing.SimpleGroup.__init__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.Skipped": {
  "data": {
   "shadows": "_pytest.outcomes.Skipped"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.TEST_EXPRESSIONS": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "brian2.tests.test_parsing.Unit": {
  "data": {
   "shadows": "brian2.units.Unit"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing._get_value_from_expression": {
  "data": {
   "shadows": "brian2.parsing.expressions._get_value_from_expression"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.abstract_code_dependencies": {
  "data": {
   "shadows": "brian2.parsing.dependencies.abstract_code_dependencies"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.abstract_code_from_function": {
  "data": {
   "shadows": "brian2.parsing.functions.abstract_code_from_function"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.amp": {
  "data": {
   "shadows": "brian2.units.amp"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.cpp_evaluator": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "brian2.codegen.cpp_prefs.update_for_cross_compilation",
    "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.universal_support_code",
    "brian2.codegen.runtime.weave_rt.weave_rt.get_compiler_and_args",
    "brian2.core.preferences.prefs",
    "brian2.utils.logger.std_silent",
    "list",
    "scipy.weave.inline"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.deindent": {
  "data": {
   "shadows": "brian2.utils.stringtools.deindent"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.extract_abstract_code_functions": {
  "data": {
   "shadows": "brian2.parsing.functions.extract_abstract_code_functions"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.get_compiler_and_args": {
  "data": {
   "shadows": "brian2.codegen.runtime.weave_rt.weave_rt.get_compiler_and_args"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.get_unit": {
  "data": {
   "shadows": "brian2.units.get_unit"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.have_same_dimensions": {
  "data": {
   "shadows": "brian2.units.have_same_dimensions"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.is_boolean_expression": {
  "data": {
   "shadows": "brian2.parsing.expressions.is_boolean_expression"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.numpy_evaluator": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "eval",
    "isinstance",
    "numpy.array",
    "numpy.logical_not",
    "numpy.ndarray",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.parse_expression_dimensions": {
  "data": {
   "shadows": "brian2.parsing.expressions.parse_expression_dimensions"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.parse_expressions": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "AssertionError",
    "brian2.tests.test_parsing.TEST_EXPRESSIONS",
    "brian2.tests.utils.assert_allclose",
    "brian2.utils.stringtools.get_identifiers",
    "eval",
    "evaluator",
    "float",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.std_silent": {
  "data": {
   "shadows": "brian2.utils.logger.std_silent"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.str_to_sympy": {
  "data": {
   "shadows": "brian2.parsing.sympytools.str_to_sympy"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.substitute_abstract_code_functions": {
  "data": {
   "shadows": "brian2.parsing.functions.substitute_abstract_code_functions"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.sympy_to_str": {
  "data": {
   "shadows": "brian2.parsing.sympytools.sympy_to_str"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.test_abstract_code_dependencies": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "AssertionError",
    "brian2.parsing.dependencies.abstract_code_dependencies",
    "brian2.tests.test_parsing.pytest",
    "dict",
    "getattr",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_abstract_code_from_function": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.parsing.functions.abstract_code_from_function",
    "brian2.tests.test_parsing.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_abstract_code_from_function.f": {
  "data": {
   "lineno": 398
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_error_messages": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "AssertionError",
    "SyntaxError",
    "brian2.parsing.rendering.NodeRenderer",
    "brian2.tests.test_parsing.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_extract_abstract_code_functions": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "brian2.parsing.functions.extract_abstract_code_functions",
    "brian2.tests.test_parsing.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_is_boolean_expression": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "AssertionError",
    "Func",
    "SyntaxError",
    "Var",
    "brian2.core.variables.Constant",
    "brian2.parsing.expressions.is_boolean_expression",
    "brian2.tests.test_parsing.pytest",
    "collections.namedtuple"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_is_boolean_expression.Func": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_parsing.test_is_boolean_expression.Func.__init__": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_parse_expression_unit": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "Exception",
    "SyntaxError",
    "Var",
    "brian2.parsing.expressions.parse_expression_dimensions",
    "brian2.tests.test_parsing.SimpleGroup",
    "brian2.tests.test_parsing.pytest",
    "brian2.units.DimensionMismatchError",
    "brian2.units.amp",
    "brian2.units.amp.dim",
    "brian2.units.have_same_dimensions",
    "brian2.units.volt",
    "brian2.units.volt.dim",
    "brian2.utils.stringtools.get_identifiers",
    "collections.namedtuple",
    "isinstance",
    "issubclass",
    "numpy.float64",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_parse_expressions_cpp": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "brian2.core.preferences.prefs.codegen.target",
    "brian2.parsing.rendering.CPPNodeRenderer",
    "brian2.tests.test_parsing.cpp_evaluator",
    "brian2.tests.test_parsing.parse_expressions",
    "brian2.tests.test_parsing.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_parse_expressions_numpy": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "brian2.parsing.rendering.NumpyNodeRenderer",
    "brian2.tests.test_parsing.numpy_evaluator",
    "brian2.tests.test_parsing.parse_expressions",
    "brian2.tests.test_parsing.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_parse_expressions_python": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "brian2.parsing.rendering.NodeRenderer",
    "brian2.tests.test_parsing.parse_expressions",
    "brian2.tests.test_parsing.pytest",
    "eval"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_parse_expressions_sympy": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "SympyRenderer",
    "brian2.tests.test_parsing.parse_expressions",
    "brian2.tests.test_parsing.pytest",
    "evaluator"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_parse_expressions_sympy.SympyRenderer": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_parsing.test_parse_expressions_sympy.SympyRenderer.render_expr": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "brian2.parsing.sympytools.str_to_sympy"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_parse_expressions_sympy.evaluator": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "brian2.core.functions.DEFAULT_FUNCTIONS",
    "brian2.parsing.sympytools.sympy_to_str",
    "dict",
    "eval"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_substitute_abstract_code_functions": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "brian2.parsing.functions.abstract_code_from_function",
    "brian2.parsing.functions.substitute_abstract_code_functions",
    "brian2.tests.test_parsing.pytest",
    "brian2.utils.stringtools.deindent",
    "exec",
    "f"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_substitute_abstract_code_functions.f": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_substitute_abstract_code_functions.g": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "f"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_sympy_infinity": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "brian2.parsing.sympytools.str_to_sympy",
    "brian2.parsing.sympytools.sympy_to_str",
    "brian2.tests.test_parsing.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_sympytools": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "brian2.parsing.sympytools.str_to_sympy",
    "brian2.parsing.sympytools.sympy_to_str",
    "brian2.tests.test_parsing.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_value_from_expression": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "C",
    "SyntaxError",
    "brian2.core.variables.Constant",
    "brian2.parsing.expressions._get_value_from_expression",
    "brian2.tests.test_parsing.pytest",
    "eval",
    "float"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_parsing.test_value_from_expression.C": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.tests.test_parsing.update_for_cross_compilation": {
  "data": {
   "shadows": "brian2.codegen.cpp_prefs.update_for_cross_compilation"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.volt": {
  "data": {
   "shadows": "brian2.units.volt"
  },
  "type": "import"
 },
 "brian2.tests.test_parsing.weave": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "brian2.tests.test_poissongroup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_poissongroup.test_poissongroup_namespace",
    "brian2.tests.test_poissongroup.test_poissongroup_subgroup",
    "brian2.tests.test_poissongroup.test_propagation",
    "brian2.tests.test_poissongroup.test_rate_arrays",
    "brian2.tests.test_poissongroup.test_rate_unit_check",
    "brian2.tests.test_poissongroup.test_single_rates",
    "brian2.tests.test_poissongroup.test_time_dependent_rate"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_poissongroup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_poissongroup.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_poissongroup.catch_logs": {
  "data": {
   "shadows": "brian2.utils.logger.catch_logs"
  },
  "type": "import"
 },
 "brian2.tests.test_poissongroup.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_poissongroup.reinit_and_delete": {
  "data": {
   "shadows": "brian2.devices.device.reinit_and_delete"
  },
  "type": "import"
 },
 "brian2.tests.test_poissongroup.schedule_propagation_offset": {
  "data": {
   "shadows": "brian2.core.network.schedule_propagation_offset"
  },
  "type": "import"
 },
 "brian2.tests.test_poissongroup.test_poissongroup_namespace": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "PoissonGroup",
    "SpikeMonitor",
    "brian2.tests.test_poissongroup.pytest",
    "brian2.tests.test_poissongroup.uuid",
    "brian2.utils.logger.catch_logs",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_poissongroup.test_poissongroup_subgroup": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NeuronGroup",
    "PoissonGroup",
    "Synapses",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_poissongroup.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_poissongroup.test_propagation": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "NeuronGroup",
    "PoissonGroup",
    "Synapses",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_poissongroup.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_poissongroup.test_rate_arrays": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "PoissonGroup",
    "SpikeMonitor",
    "brian2.tests.test_poissongroup.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_poissongroup.test_rate_unit_check": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "Network",
    "PoissonGroup",
    "brian2.tests.test_poissongroup.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_poissongroup.test_single_rates": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "PoissonGroup",
    "SpikeMonitor",
    "brian2.tests.test_poissongroup.pytest",
    "len",
    "numpy.testing.assert_equal",
    "repr",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_poissongroup.test_time_dependent_rate": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "PoissonGroup",
    "SpikeMonitor",
    "TimedArray",
    "brian2.tests.test_poissongroup.pytest",
    "int",
    "numpy.testing.assert_equal",
    "round",
    "run",
    "sum"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_poissongroup.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "brian2.tests.test_poissoninput": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.devices.device.reinit_and_delete",
    "brian2.tests.test_poissoninput.test_poissoninput",
    "brian2.tests.test_poissoninput.test_poissoninput_errors",
    "brian2.tests.test_poissoninput.test_poissoninput_refractory"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_poissoninput.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_poissoninput.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_poissoninput.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_poissoninput.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_poissoninput.reinit_and_delete": {
  "data": {
   "shadows": "brian2.devices.device.reinit_and_delete"
  },
  "type": "import"
 },
 "brian2.tests.test_poissoninput.schedule_propagation_offset": {
  "data": {
   "shadows": "brian2.core.network.schedule_propagation_offset"
  },
  "type": "import"
 },
 "brian2.tests.test_poissoninput.test_poissoninput": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "NeuronGroup",
    "PoissonInput",
    "StateMonitor",
    "all",
    "brian2.tests.test_poissoninput.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_poissoninput.test_poissoninput_errors": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "KeyError",
    "Network",
    "NeuronGroup",
    "NotImplementedError",
    "PoissonInput",
    "brian2.tests.test_poissoninput.pytest",
    "collect"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_poissoninput.test_poissoninput_refractory": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "NeuronGroup",
    "PoissonInput",
    "StateMonitor",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_poissoninput.pytest",
    "brian2.tests.utils.assert_allclose",
    "int",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_preferences": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.restore_initial_state",
    "brian2.tests.test_preferences.test_brianglobalpreferences",
    "brian2.tests.test_preferences.test_brianpreference",
    "brian2.tests.test_preferences.test_defaultvalidator",
    "brian2.tests.test_preferences.test_preference_name_access",
    "brian2.tests.test_preferences.test_preference_name_checking",
    "t"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_preferences.BrianGlobalPreferences": {
  "data": {
   "shadows": "brian2.core.preferences.BrianGlobalPreferences"
  },
  "type": "import"
 },
 "brian2.tests.test_preferences.BrianGlobalPreferencesView": {
  "data": {
   "shadows": "brian2.core.preferences.BrianGlobalPreferencesView"
  },
  "type": "import"
 },
 "brian2.tests.test_preferences.BrianPreference": {
  "data": {
   "shadows": "brian2.core.preferences.BrianPreference"
  },
  "type": "import"
 },
 "brian2.tests.test_preferences.DefaultValidator": {
  "data": {
   "shadows": "brian2.core.preferences.DefaultValidator"
  },
  "type": "import"
 },
 "brian2.tests.test_preferences.PreferenceError": {
  "data": {
   "shadows": "brian2.core.preferences.PreferenceError"
  },
  "type": "import"
 },
 "brian2.tests.test_preferences.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "brian2.tests.test_preferences.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_preferences.amp": {
  "data": {
   "shadows": "brian2.amp"
  },
  "type": "import"
 },
 "brian2.tests.test_preferences.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_preferences.float32": {
  "data": {
   "shadows": "numpy.float32"
  },
  "type": "import"
 },
 "brian2.tests.test_preferences.float64": {
  "data": {
   "shadows": "numpy.float64"
  },
  "type": "import"
 },
 "brian2.tests.test_preferences.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_preferences.restore_initial_state": {
  "data": {
   "shadows": "brian2.restore_initial_state"
  },
  "type": "import"
 },
 "brian2.tests.test_preferences.test_brianglobalpreferences": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "brian2.amp",
    "brian2.core.preferences.BrianGlobalPreferences",
    "brian2.core.preferences.BrianPreference",
    "brian2.core.preferences.PreferenceError",
    "brian2.tests.test_preferences.pytest",
    "brian2.volt",
    "io.StringIO",
    "len",
    "numpy.float32",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_preferences.test_brianpreference": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "brian2.core.preferences.BrianPreference",
    "brian2.tests.test_preferences.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_preferences.test_defaultvalidator": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "brian2.amp",
    "brian2.core.preferences.DefaultValidator",
    "brian2.tests.test_preferences.pytest",
    "brian2.volt",
    "validator"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_preferences.test_preference_name_access": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "KeyError",
    "brian2.core.preferences.BrianGlobalPreferences",
    "brian2.core.preferences.BrianGlobalPreferencesView",
    "brian2.core.preferences.BrianPreference",
    "brian2.core.preferences.PreferenceError",
    "brian2.tests.test_preferences.pytest",
    "dir",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_preferences.test_preference_name_checking": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "brian2.core.preferences.BrianGlobalPreferences",
    "brian2.core.preferences.BrianPreference",
    "brian2.core.preferences.PreferenceError",
    "brian2.tests.test_preferences.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_preferences.test_str_repr": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "brian2.core.preferences.BrianGlobalPreferences",
    "brian2.core.preferences.BrianPreference",
    "brian2.tests.test_preferences.pytest",
    "len",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_preferences.volt": {
  "data": {
   "shadows": "brian2.volt"
  },
  "type": "import"
 },
 "brian2.tests.test_refractory": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_refractory.test_add_refractoriness",
    "brian2.tests.test_refractory.test_conditional_write_automatic_and_manual",
    "brian2.tests.test_refractory.test_conditional_write_behaviour",
    "brian2.tests.test_refractory.test_conditional_write_set",
    "brian2.tests.test_refractory.test_missing_refractory_warning",
    "brian2.tests.test_refractory.test_refractoriness_basic",
    "brian2.tests.test_refractory.test_refractoriness_repeated",
    "brian2.tests.test_refractory.test_refractoriness_repeated_legacy",
    "brian2.tests.test_refractory.test_refractoriness_threshold",
    "brian2.tests.test_refractory.test_refractoriness_threshold_basic",
    "brian2.tests.test_refractory.test_refractoriness_types",
    "brian2.tests.test_refractory.test_refractoriness_variables"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_refractory.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "brian2.tests.test_refractory.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_refractory.add_refractoriness": {
  "data": {
   "shadows": "brian2.equations.refractory.add_refractoriness"
  },
  "type": "import"
 },
 "brian2.tests.test_refractory.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_refractory.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_refractory.catch_logs": {
  "data": {
   "shadows": "brian2.utils.logger.catch_logs"
  },
  "type": "import"
 },
 "brian2.tests.test_refractory.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_refractory.reinit_and_delete": {
  "data": {
   "shadows": "brian2.devices.device.reinit_and_delete"
  },
  "type": "import"
 },
 "brian2.tests.test_refractory.test_add_refractoriness": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "Equations",
    "brian2.equations.refractory.add_refractoriness",
    "brian2.tests.test_refractory.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_refractory.test_conditional_write_automatic_and_manual": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "Synapses",
    "brian2.tests.test_refractory.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_refractory.test_conditional_write_behaviour": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "Synapses",
    "brian2.tests.test_refractory.pytest",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_refractory.test_conditional_write_set": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.tests.test_refractory.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_refractory.test_missing_refractory_warning": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.tests.test_refractory.pytest",
    "brian2.utils.logger.catch_logs",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_refractory.test_refractoriness_basic": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "brian2.core.functions.timestep",
    "brian2.tests.test_refractory.pytest",
    "brian2.tests.utils.assert_allclose",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_refractory.test_refractoriness_repeated": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "brian2.tests.test_refractory.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_refractory.test_refractoriness_repeated_legacy": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "brian2.tests.test_refractory.pytest",
    "brian2.tests.utils.assert_allclose",
    "collections.Counter",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_refractory.test_refractoriness_threshold": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "brian2.devices.device.reinit_and_delete",
    "brian2.tests.test_refractory.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_refractory.test_refractoriness_threshold_basic": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "brian2.tests.test_refractory.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_refractory.test_refractoriness_types": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "TypeError",
    "brian2.tests.test_refractory.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_refractory.test_refractoriness_variables": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "AssertionError",
    "NeuronGroup",
    "StateMonitor",
    "brian2.core.functions.timestep",
    "brian2.devices.device.reinit_and_delete",
    "brian2.tests.test_refractory.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_refractory.timestep": {
  "data": {
   "shadows": "brian2.core.functions.timestep"
  },
  "type": "import"
 },
 "brian2.tests.test_spatialneuron": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_spatialneuron.test_allowed_integration",
    "brian2.tests.test_spatialneuron.test_basic_diffusion",
    "brian2.tests.test_spatialneuron.test_construction",
    "brian2.tests.test_spatialneuron.test_construction_coordinates",
    "brian2.tests.test_spatialneuron.test_custom_events",
    "brian2.tests.test_spatialneuron.test_finitecable",
    "brian2.tests.test_spatialneuron.test_infinitecable",
    "brian2.tests.test_spatialneuron.test_rall",
    "brian2.tests.test_spatialneuron.test_rallpack1",
    "brian2.tests.test_spatialneuron.test_rallpack2",
    "brian2.tests.test_spatialneuron.test_rallpack3",
    "brian2.tests.test_spatialneuron.test_spatialneuron_capacitive_currents",
    "brian2.tests.test_spatialneuron.test_spatialneuron_indexing",
    "brian2.tests.test_spatialneuron.test_spatialneuron_morphology_assignment",
    "brian2.tests.test_spatialneuron.test_spatialneuron_subtree_assignment",
    "brian2.tests.test_spatialneuron.test_tree_index_consistency"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_spatialneuron.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_spatialneuron.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_spatialneuron.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_spatialneuron.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "brian2.tests.test_spatialneuron.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.tests.test_spatialneuron.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_spatialneuron.reinit_and_delete": {
  "data": {
   "shadows": "brian2.devices.device.reinit_and_delete"
  },
  "type": "import"
 },
 "brian2.tests.test_spatialneuron.test_allowed_integration": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "Soma",
    "SpatialNeuron",
    "TypeError",
    "brian2.tests.test_spatialneuron.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_allowed_integration.user_fun": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "check_units"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_basic_diffusion": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "Cylinder",
    "Section",
    "Soma",
    "SpatialNeuron",
    "StateMonitor",
    "abs",
    "all",
    "brian2.tests.test_spatialneuron.pytest",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_construction": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Cylinder",
    "Quantity",
    "Soma",
    "SpatialNeuron",
    "all",
    "brian2.tests.test_spatialneuron.pytest",
    "brian2.tests.utils.assert_allclose",
    "sum"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_construction_coordinates": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Cylinder",
    "Quantity",
    "Soma",
    "SpatialNeuron",
    "all",
    "brian2.tests.test_spatialneuron.pytest",
    "brian2.tests.utils.assert_allclose",
    "sqrt",
    "sum"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_custom_events": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "Cylinder",
    "Soma",
    "SpatialNeuron",
    "brian2.tests.test_spatialneuron.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_finitecable": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "Cylinder",
    "SpatialNeuron",
    "brian2.tests.test_spatialneuron.pytest",
    "brian2.tests.utils.assert_allclose",
    "cosh",
    "run",
    "sinh"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_infinitecable": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "Cylinder",
    "SpatialNeuron",
    "StateMonitor",
    "brian2.tests.test_spatialneuron.pytest",
    "brian2.tests.utils.assert_allclose",
    "exp",
    "len",
    "run",
    "sqrt"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_rall": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "Cylinder",
    "SpatialNeuron",
    "brian2.tests.test_spatialneuron.pytest",
    "brian2.tests.utils.assert_allclose",
    "cosh",
    "run",
    "sinh",
    "sqrt"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_rallpack1": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "Cylinder",
    "SpatialNeuron",
    "StateMonitor",
    "brian2.tests.test_spatialneuron.os",
    "brian2.tests.test_spatialneuron.pytest",
    "brian2.tests.utils.assert_allclose",
    "max",
    "mean",
    "min",
    "run",
    "sqrt"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_rallpack2": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "Cylinder",
    "SpatialNeuron",
    "StateMonitor",
    "brian2.tests.test_spatialneuron.os",
    "brian2.tests.test_spatialneuron.pytest",
    "brian2.tests.utils.assert_allclose",
    "float",
    "max",
    "mean",
    "min",
    "range",
    "run",
    "set",
    "sqrt"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_rallpack3": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "Cylinder",
    "SpatialNeuron",
    "StateMonitor",
    "brian2.tests.test_spatialneuron.os",
    "brian2.tests.test_spatialneuron.pytest",
    "brian2.tests.utils.assert_allclose",
    "max",
    "mean",
    "min",
    "run",
    "sqrt"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_spatialneuron_capacitive_currents": {
  "data": {
   "lineno": 768,
   "symbols_in_volume": [
    "Cylinder",
    "SpatialNeuron",
    "StateMonitor",
    "brian2.tests.test_spatialneuron.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_spatialneuron_indexing": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "Cylinder",
    "SpatialNeuron",
    "brian2.tests.test_spatialneuron.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_spatialneuron_morphology_assignment": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "Cylinder",
    "SpatialNeuron",
    "brian2.tests.test_spatialneuron.pytest",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_spatialneuron_subtree_assignment": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "Cylinder",
    "SpatialNeuron",
    "brian2.tests.test_spatialneuron.pytest",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_tree_index_consistency": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "Cylinder",
    "SpatialNeuron",
    "all",
    "brian2.tests.test_spatialneuron.itertools",
    "brian2.tests.test_spatialneuron.pytest",
    "getattr",
    "len",
    "numpy.testing.assert_equal",
    "range",
    "set",
    "setattr"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spikequeue": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_spikequeue.test_spikequeue"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_spikequeue.DynamicArray1D": {
  "data": {
   "shadows": "brian2.memory.dynamicarray.DynamicArray1D"
  },
  "type": "import"
 },
 "brian2.tests.test_spikequeue.SpikeQueue": {
  "data": {
   "shadows": "brian2.synapses.spikequeue.SpikeQueue"
  },
  "type": "import"
 },
 "brian2.tests.test_spikequeue.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_spikequeue.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_spikequeue.create_all_to_all": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "brian2.memory.dynamicarray.DynamicArray1D",
    "numpy.arange",
    "numpy.float64",
    "numpy.int32",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spikequeue.create_one_to_one": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "brian2.memory.dynamicarray.DynamicArray1D",
    "numpy.arange",
    "numpy.float64",
    "numpy.int32"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_spikequeue.ms": {
  "data": {
   "shadows": "brian2.units.stdunits.ms"
  },
  "type": "import"
 },
 "brian2.tests.test_spikequeue.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.test_spikequeue.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_spikequeue.test_spikequeue": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "brian2.synapses.spikequeue.SpikeQueue",
    "brian2.tests.test_spikequeue.create_all_to_all",
    "brian2.tests.test_spikequeue.create_one_to_one",
    "brian2.tests.test_spikequeue.pytest",
    "brian2.units.stdunits.ms",
    "float",
    "numpy.arange",
    "numpy.array",
    "numpy.int32",
    "numpy.testing.assert_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_stateupdaters.start",
    "brian2.tests.test_stateupdaters.test_check_for_invalid_values_linear_integrator",
    "brian2.tests.test_stateupdaters.test_determination",
    "brian2.tests.test_stateupdaters.test_explicit_stateupdater_parsing",
    "brian2.tests.test_stateupdaters.test_illegal_calls",
    "brian2.tests.test_stateupdaters.test_integrator_code",
    "brian2.tests.test_stateupdaters.test_integrator_code2",
    "brian2.tests.test_stateupdaters.test_locally_constant_check",
    "brian2.tests.test_stateupdaters.test_multiple_noise_variables_basic",
    "brian2.tests.test_stateupdaters.test_multiple_noise_variables_extended",
    "brian2.tests.test_stateupdaters.test_multiplicative_noise",
    "brian2.tests.test_stateupdaters.test_non_autonomous_equations",
    "brian2.tests.test_stateupdaters.test_priority",
    "brian2.tests.test_stateupdaters.test_refractory",
    "brian2.tests.test_stateupdaters.test_registration",
    "brian2.tests.test_stateupdaters.test_str_repr",
    "brian2.tests.test_stateupdaters.test_subexpressions",
    "brian2.tests.test_stateupdaters.test_temporary_variables",
    "brian2.tests.test_stateupdaters.test_temporary_variables2",
    "brian2.tests.test_stateupdaters.time",
    "print"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_stateupdaters.ArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.ArrayVariable"
  },
  "type": "import"
 },
 "brian2.tests.test_stateupdaters.Constant": {
  "data": {
   "shadows": "brian2.core.variables.Constant"
  },
  "type": "import"
 },
 "brian2.tests.test_stateupdaters.UnsupportedEquationsException": {
  "data": {
   "shadows": "brian2.stateupdaters.base.UnsupportedEquationsException"
  },
  "type": "import"
 },
 "brian2.tests.test_stateupdaters.Variable": {
  "data": {
   "shadows": "brian2.core.variables.Variable"
  },
  "type": "import"
 },
 "brian2.tests.test_stateupdaters.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_stateupdaters.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_stateupdaters.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_stateupdaters.catch_logs": {
  "data": {
   "shadows": "brian2.utils.logger.catch_logs"
  },
  "type": "import"
 },
 "brian2.tests.test_stateupdaters.check_integration": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "AssertionError",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "integrator",
    "integrator.__class__.__name__"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "brian2.tests.test_stateupdaters.prefs": {
  "data": {
   "shadows": "brian2.prefs"
  },
  "type": "import"
 },
 "brian2.tests.test_stateupdaters.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "brian2.tests.test_stateupdaters.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_stateupdaters.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.tests.test_stateupdaters.start": {
  "data": {
   "lineno": 765
  },
  "type": "constant"
 },
 "brian2.tests.test_stateupdaters.test_check_for_invalid_values_linear_integrator": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "brian2.tests.test_stateupdaters.pytest",
    "brian2.utils.logger.catch_logs",
    "repr",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_determination": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "Equations",
    "ValueError",
    "apply_stateupdater",
    "brian2.core.variables.Variable",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "brian2.tests.test_stateupdaters.logging",
    "brian2.tests.test_stateupdaters.pytest",
    "brian2.utils.logger.catch_logs",
    "euler",
    "integrator",
    "len",
    "milstein",
    "rk4",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_explicit_stateupdater_parsing": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "Equations",
    "ExplicitStateUpdater",
    "SyntaxError",
    "ValueError",
    "brian2.tests.test_stateupdaters.pytest",
    "updater"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_illegal_calls": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "Clock",
    "Equations",
    "TypeError",
    "brian2.core.variables.ArrayVariable",
    "brian2.tests.test_stateupdaters.pytest",
    "object"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_integrator_code": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "Equations",
    "brian2.tests.test_stateupdaters.pytest",
    "brian2.tests.test_stateupdaters.re",
    "integrator",
    "integrator.__class__.__name__",
    "len",
    "rk4",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_integrator_code2": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "Equations",
    "brian2.tests.test_stateupdaters.pytest",
    "euler",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_locally_constant_check": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "TimedArray",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "brian2.tests.test_stateupdaters.pytest",
    "brian2.utils.logger.catch_logs",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_multiple_noise_variables_basic": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "Equations",
    "brian2.tests.test_stateupdaters.pytest",
    "method"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_multiple_noise_variables_deterministic_noise": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.utils.assert_allclose",
    "brian2.utils.logger.catch_logs",
    "method",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_multiple_noise_variables_extended": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.utils.assert_allclose",
    "brian2.utils.logger.catch_logs",
    "method"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_multiplicative_noise": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "Equations",
    "Network",
    "NeuronGroup",
    "TimedArray",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "brian2.tests.test_stateupdaters.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_non_autonomous_equations": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "Equations",
    "ExplicitStateUpdater",
    "brian2.tests.test_stateupdaters.pytest",
    "updater"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_priority": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "Clock",
    "Equations",
    "ExplicitStateUpdater",
    "brian2.core.variables.ArrayVariable",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "brian2.tests.test_stateupdaters.check_integration",
    "brian2.tests.test_stateupdaters.pytest",
    "euler",
    "milstein",
    "rk4",
    "updater"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_pure_noise_deterministic": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "Equations",
    "NeuronGroup",
    "brian2.tests.utils.assert_allclose",
    "method",
    "run",
    "sqrt"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_refractory": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "brian2.tests.utils.assert_allclose",
    "method"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_refractory_stochastic": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "brian2.tests.utils.assert_allclose",
    "method"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_registration": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "ExplicitStateUpdater",
    "TypeError",
    "ValueError",
    "brian2.tests.test_stateupdaters.pytest",
    "dict"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_str_repr": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "brian2.tests.test_stateupdaters.pytest",
    "len",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_subexpressions": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "method",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_subexpressions_basic": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_stateupdaters.pytest",
    "method",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_temporary_variables": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "Equations",
    "brian2.tests.test_stateupdaters.pytest",
    "rk4"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.test_temporary_variables2": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "Equations",
    "brian2.tests.test_stateupdaters.pytest",
    "milstein"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_stateupdaters.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "brian2.tests.test_subgroup": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_subgroup.test_no_reference_1",
    "brian2.tests.test_subgroup.test_no_reference_2",
    "brian2.tests.test_subgroup.test_no_reference_3",
    "brian2.tests.test_subgroup.test_no_reference_4",
    "brian2.tests.test_subgroup.test_recursive_subgroup",
    "brian2.tests.test_subgroup.test_run_regularly",
    "brian2.tests.test_subgroup.test_shared_variable",
    "brian2.tests.test_subgroup.test_spike_monitor",
    "brian2.tests.test_subgroup.test_state_monitor",
    "brian2.tests.test_subgroup.test_state_variables",
    "brian2.tests.test_subgroup.test_state_variables_group_as_index",
    "brian2.tests.test_subgroup.test_state_variables_group_as_index_problematic",
    "brian2.tests.test_subgroup.test_state_variables_simple",
    "brian2.tests.test_subgroup.test_state_variables_string_indices",
    "brian2.tests.test_subgroup.test_str_repr",
    "brian2.tests.test_subgroup.test_subexpression_no_references",
    "brian2.tests.test_subgroup.test_subexpression_references",
    "brian2.tests.test_subgroup.test_subgroup_summed_variable",
    "brian2.tests.test_subgroup.test_synapse_access",
    "brian2.tests.test_subgroup.test_synapse_creation",
    "brian2.tests.test_subgroup.test_synapse_creation_generator",
    "brian2.tests.test_subgroup.test_synapse_creation_generator_complex_ranges",
    "brian2.tests.test_subgroup.test_synapse_creation_generator_multiple_synapses",
    "brian2.tests.test_subgroup.test_synapse_creation_generator_random",
    "brian2.tests.test_subgroup.test_synapse_creation_state_vars",
    "brian2.tests.test_subgroup.test_synapses_access_subgroups",
    "brian2.tests.test_subgroup.test_synapses_access_subgroups_problematic",
    "brian2.tests.test_subgroup.test_synaptic_propagation",
    "brian2.tests.test_subgroup.test_synaptic_propagation_2",
    "brian2.tests.test_subgroup.test_wrong_indexing"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_subgroup.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_subgroup.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_subgroup.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_subgroup.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_subgroup.catch_logs": {
  "data": {
   "shadows": "brian2.utils.logger.catch_logs"
  },
  "type": "import"
 },
 "brian2.tests.test_subgroup.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_subgroup.reinit_and_delete": {
  "data": {
   "shadows": "brian2.devices.device.reinit_and_delete"
  },
  "type": "import"
 },
 "brian2.tests.test_subgroup.schedule_propagation_offset": {
  "data": {
   "shadows": "brian2.core.network.schedule_propagation_offset"
  },
  "type": "import"
 },
 "brian2.tests.test_subgroup.test_alternative_indexing": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.tests.test_subgroup.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_no_reference_1": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "NeuronGroup",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_no_reference_2": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "NeuronGroup",
    "PopulationRateMonitor",
    "SpikeMonitor",
    "StateMonitor",
    "brian2.tests.test_subgroup.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_no_reference_3": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_subgroup.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_no_reference_4": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_subgroup.pytest",
    "len",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_recursive_subgroup": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "NeuronGroup",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_run_regularly": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.tests.test_subgroup.pytest",
    "numpy.testing.assert_array_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_shared_variable": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "NeuronGroup"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_spike_monitor": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "brian2.tests.test_subgroup.pytest",
    "int",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_state_monitor": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "IndexError",
    "NeuronGroup",
    "StateMonitor",
    "brian2.tests.test_subgroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_state_variables": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "NeuronGroup",
    "all",
    "brian2.tests.test_subgroup.pytest",
    "brian2.tests.utils.assert_allclose",
    "float",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_state_variables_group_as_index": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.tests.test_subgroup.pytest",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_state_variables_group_as_index_problematic": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "NeuronGroup",
    "all",
    "brian2.tests.test_subgroup.pytest",
    "brian2.utils.logger.catch_logs",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_state_variables_simple": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.tests.test_subgroup.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_state_variables_string_indices": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.tests.utils.assert_allclose",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_str_repr": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "NeuronGroup",
    "brian2.tests.test_subgroup.pytest",
    "len",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_subexpression_no_references": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_subexpression_references": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_subgroup_summed_variable": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_subgroup.pytest",
    "numpy.testing.assert_array_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapse_access": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "all",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapse_creation": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "all",
    "brian2.tests.test_subgroup.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapse_creation_generator": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "all",
    "brian2.tests.test_subgroup.pytest",
    "len",
    "numpy.testing.assert_equal",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapse_creation_generator_complex_ranges": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "all",
    "brian2.tests.test_subgroup.pytest",
    "len",
    "numpy.testing.assert_equal",
    "range",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapse_creation_generator_multiple_synapses": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_subgroup.pytest",
    "len",
    "numpy.testing.assert_equal",
    "range",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapse_creation_generator_random": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "all",
    "brian2.tests.test_subgroup.pytest",
    "len",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapse_creation_state_vars": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "all",
    "brian2.tests.test_subgroup.pytest",
    "len",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapses_access_subgroups": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapses_access_subgroups_problematic": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "all",
    "brian2.tests.test_subgroup.pytest",
    "brian2.utils.logger.catch_logs",
    "len",
    "slice"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synaptic_propagation": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_subgroup.pytest",
    "len",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synaptic_propagation_2": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_subgroup.pytest",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_wrong_indexing": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "IndexError",
    "NeuronGroup",
    "TypeError",
    "brian2.tests.test_subgroup.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "_pytest.outcomes.Skipped",
    "brian2.devices.device.reinit_and_delete",
    "brian2.tests.test_synapses.start",
    "brian2.tests.test_synapses.test_changed_dt_spikes_in_queue",
    "brian2.tests.test_synapses.test_clocks",
    "brian2.tests.test_synapses.test_connection_arrays",
    "brian2.tests.test_synapses.test_connection_multiple_synapses",
    "brian2.tests.test_synapses.test_connection_random_with_condition",
    "brian2.tests.test_synapses.test_connection_random_with_condition_2",
    "brian2.tests.test_synapses.test_connection_random_with_indices",
    "brian2.tests.test_synapses.test_connection_random_without_condition",
    "brian2.tests.test_synapses.test_connection_string_deterministic_full",
    "brian2.tests.test_synapses.test_connection_string_deterministic_full_custom",
    "brian2.tests.test_synapses.test_connection_string_deterministic_full_no_self",
    "brian2.tests.test_synapses.test_connection_string_deterministic_full_one_to_one",
    "brian2.tests.test_synapses.test_connection_string_deterministic_multiple_and",
    "brian2.tests.test_synapses.test_constant_variable_subexpression_in_synapses",
    "brian2.tests.test_synapses.test_creation",
    "brian2.tests.test_synapses.test_delay_specification",
    "brian2.tests.test_synapses.test_delays_pathways",
    "brian2.tests.test_synapses.test_delays_pathways_subgroups",
    "brian2.tests.test_synapses.test_equations_unit_check",
    "brian2.tests.test_synapses.test_event_driven",
    "brian2.tests.test_synapses.test_event_driven_dependency_error",
    "brian2.tests.test_synapses.test_event_driven_dependency_error2",
    "brian2.tests.test_synapses.test_external_variables",
    "brian2.tests.test_synapses.test_fallback_loop_and_stateless_func",
    "brian2.tests.test_synapses.test_incoming_outgoing",
    "brian2.tests.test_synapses.test_indices",
    "brian2.tests.test_synapses.test_invalid_custom_event",
    "brian2.tests.test_synapses.test_missing_lastupdate_error_run_regularly",
    "brian2.tests.test_synapses.test_missing_lastupdate_error_syn_pathway",
    "brian2.tests.test_synapses.test_multiple_summed_variables",
    "brian2.tests.test_synapses.test_name_clashes",
    "brian2.tests.test_synapses.test_nested_subexpression_references",
    "brian2.tests.test_synapses.test_no_synapses",
    "brian2.tests.test_synapses.test_no_synapses_variable_write",
    "brian2.tests.test_synapses.test_permutation_analysis",
    "brian2.tests.test_synapses.test_pre_before_post",
    "brian2.tests.test_synapses.test_pre_post_simple",
    "brian2.tests.test_synapses.test_pre_post_variables",
    "brian2.tests.test_synapses.test_repr",
    "brian2.tests.test_synapses.test_scalar_parameter_access",
    "brian2.tests.test_synapses.test_scalar_subexpression",
    "brian2.tests.test_synapses.test_sim_with_constant_subexpression",
    "brian2.tests.test_synapses.test_sim_with_scalar_subexpression",
    "brian2.tests.test_synapses.test_sim_with_scalar_variable",
    "brian2.tests.test_synapses.test_state_variable_assignment",
    "brian2.tests.test_synapses.test_state_variable_indexing",
    "brian2.tests.test_synapses.test_subexpression_references",
    "brian2.tests.test_synapses.test_summed_variable",
    "brian2.tests.test_synapses.test_summed_variable_differing_group_size",
    "brian2.tests.test_synapses.test_summed_variable_errors",
    "brian2.tests.test_synapses.test_summed_variable_pre_and_post",
    "brian2.tests.test_synapses.test_summed_variables_linked_variables",
    "brian2.tests.test_synapses.test_summed_variables_overlapping_subgroups",
    "brian2.tests.test_synapses.test_summed_variables_subgroups",
    "brian2.tests.test_synapses.test_synapse_generator_deterministic",
    "brian2.tests.test_synapses.test_synapse_generator_deterministic_2",
    "brian2.tests.test_synapses.test_synapse_generator_out_of_range",
    "brian2.tests.test_synapses.test_synapse_generator_random",
    "brian2.tests.test_synapses.test_synapse_generator_random_with_condition",
    "brian2.tests.test_synapses.test_synapse_generator_random_with_condition_2",
    "brian2.tests.test_synapses.test_synapse_generator_range_noint",
    "brian2.tests.test_synapses.test_synapse_generator_syntax",
    "brian2.tests.test_synapses.test_synapse_with_run_regularly",
    "brian2.tests.test_synapses.test_synapses_refractory",
    "brian2.tests.test_synapses.test_synapses_refractory_rand",
    "brian2.tests.test_synapses.test_synapses_to_synapses",
    "brian2.tests.test_synapses.test_synapses_to_synapses_different_sizes",
    "brian2.tests.test_synapses.test_synapses_to_synapses_statevar_access",
    "brian2.tests.test_synapses.test_synapses_to_synapses_summed_variable",
    "brian2.tests.test_synapses.test_synaptic_equations",
    "brian2.tests.test_synapses.test_transmission",
    "brian2.tests.test_synapses.test_transmission_all_to_one_heterogeneous_delays",
    "brian2.tests.test_synapses.test_transmission_boolean_variable",
    "brian2.tests.test_synapses.test_transmission_custom_event",
    "brian2.tests.test_synapses.test_transmission_one_to_all_heterogeneous_delays",
    "brian2.tests.test_synapses.test_transmission_scalar_delay",
    "brian2.tests.test_synapses.test_transmission_scalar_delay_different_clocks",
    "brian2.tests.test_synapses.test_transmission_simple",
    "brian2.tests.test_synapses.test_ufunc_at_vectorisation",
    "brian2.tests.test_synapses.test_variables_by_owner",
    "brian2.tests.test_synapses.test_vectorisation",
    "brian2.tests.test_synapses.test_vectorisation_STDP_like",
    "brian2.tests.test_synapses.time",
    "print"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_synapses.ArrayVariable": {
  "data": {
   "shadows": "brian2.core.variables.ArrayVariable"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.Constant": {
  "data": {
   "shadows": "brian2.core.variables.Constant"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.DEFAULT_FUNCTIONS": {
  "data": {
   "shadows": "brian2.core.functions.DEFAULT_FUNCTIONS"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.NumpyCodeGenerator": {
  "data": {
   "shadows": "brian2.codegen.generators.NumpyCodeGenerator"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.OrderDependenceError": {
  "data": {
   "shadows": "brian2.codegen.permutation_analysis.OrderDependenceError"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.SANITY_CHECK_PERMUTATION_ANALYSIS_EXAMPLE": {
  "data": {
   "lineno": 2593
  },
  "type": "constant"
 },
 "brian2.tests.test_synapses.Skipped": {
  "data": {
   "shadows": "_pytest.outcomes.Skipped"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.UnsupportedEquationsException": {
  "data": {
   "shadows": "brian2.stateupdaters.base.UnsupportedEquationsException"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses._compare": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "len",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.all_devices": {
  "data": {
   "shadows": "brian2.devices.device.all_devices"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.catch_logs": {
  "data": {
   "shadows": "brian2.utils.logger.catch_logs"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.check_for_order_independence": {
  "data": {
   "shadows": "brian2.codegen.permutation_analysis.check_for_order_independence"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.check_permutation_code": {
  "data": {
   "lineno": 1580,
   "symbols_in_volume": [
    "brian2.codegen.permutation_analysis.check_for_order_independence",
    "brian2.codegen.translation.make_statements",
    "brian2.core.functions.DEFAULT_FUNCTIONS",
    "brian2.core.variables.ArrayVariable",
    "brian2.core.variables.Constant",
    "brian2.tests.test_synapses.pytest",
    "brian2.utils.stringtools.get_identifiers",
    "collections.defaultdict",
    "dict",
    "vars"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.deindent": {
  "data": {
   "shadows": "brian2.utils.stringtools.deindent"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.get_device": {
  "data": {
   "shadows": "brian2.devices.device.get_device"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.get_identifiers": {
  "data": {
   "shadows": "brian2.utils.stringtools.get_identifiers"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.indent": {
  "data": {
   "shadows": "brian2.utils.stringtools.indent"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.make_statements": {
  "data": {
   "shadows": "brian2.codegen.translation.make_statements"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.numerically_check_permutation_code": {
  "data": {
   "lineno": 1607,
   "symbols_in_volume": [
    "AssertionError",
    "arange",
    "brian2.codegen.permutation_analysis.OrderDependenceError",
    "brian2.tests.utils.assert_allclose",
    "brian2.utils.stringtools.deindent",
    "brian2.utils.stringtools.get_identifiers",
    "brian2.utils.stringtools.indent",
    "brian2.utils.stringtools.word_substitute",
    "collections.defaultdict",
    "copy",
    "dict",
    "exec",
    "len",
    "randn",
    "range",
    "shuffle",
    "vars",
    "zeros"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.parse_synapse_generator": {
  "data": {
   "shadows": "brian2.synapses.parse_synaptic_generator_syntax.parse_synapse_generator"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.permutation_analysis_bad_examples": {
  "data": {
   "lineno": 1764
  },
  "type": "constant"
 },
 "brian2.tests.test_synapses.permutation_analysis_good_examples": {
  "data": {
   "lineno": 1674
  },
  "type": "constant"
 },
 "brian2.tests.test_synapses.prefs": {
  "data": {
   "shadows": "brian2.prefs"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.reinit_and_delete": {
  "data": {
   "shadows": "brian2.devices.device.reinit_and_delete"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.schedule_propagation_offset": {
  "data": {
   "shadows": "brian2.core.network.schedule_propagation_offset"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.start": {
  "data": {
   "lineno": 2599
  },
  "type": "constant"
 },
 "brian2.tests.test_synapses.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.test_changed_dt_spikes_in_queue": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "SpikeMonitor",
    "Synapses",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_clocks": {
  "data": {
   "lineno": 1082,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_connection_arrays": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "IndexError",
    "NeuronGroup",
    "Synapses",
    "TypeError",
    "ValueError",
    "brian2.tests.test_synapses._compare",
    "brian2.tests.test_synapses.pytest",
    "len",
    "object",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_connection_multiple_synapses": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses._compare",
    "brian2.tests.test_synapses.pytest",
    "brian2.utils.logger.catch_logs",
    "len",
    "range",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_connection_random_with_condition": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses._compare",
    "brian2.tests.test_synapses.pytest",
    "brian2.utils.logger.catch_logs",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_connection_random_with_condition_2": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "all",
    "any",
    "brian2.tests.test_synapses.pytest",
    "brian2.utils.logger.catch_logs",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_connection_random_with_indices": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses._compare",
    "brian2.tests.test_synapses.pytest",
    "brian2.utils.logger.catch_logs",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_connection_random_without_condition": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses._compare",
    "brian2.tests.test_synapses.pytest",
    "brian2.utils.logger.catch_logs",
    "len",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_connection_string_deterministic_full": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses._compare",
    "brian2.tests.test_synapses.pytest",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_connection_string_deterministic_full_custom": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "IndexError",
    "NeuronGroup",
    "Synapses",
    "ValueError",
    "brian2.devices.device.all_devices",
    "brian2.devices.device.get_device",
    "brian2.tests.test_synapses._compare",
    "brian2.tests.test_synapses.pytest",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_connection_string_deterministic_full_no_self": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses._compare",
    "brian2.tests.test_synapses.pytest",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_connection_string_deterministic_full_one_to_one": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses._compare",
    "brian2.tests.test_synapses.pytest",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_connection_string_deterministic_multiple_and": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_constant_variable_subexpression_in_synapses": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_creation": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_creation_errors": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "TypeError",
    "brian2.tests.test_synapses.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_delay_specification": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "TypeError",
    "ValueError",
    "abs",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "float",
    "len",
    "object"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_delays_pathways": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "abs",
    "brian2.tests.utils.assert_allclose",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_delays_pathways_subgroups": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "abs",
    "brian2.tests.utils.assert_allclose",
    "len"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_equations_unit_check": {
  "data": {
   "lineno": 750,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_event_driven": {
  "data": {
   "lineno": 1438,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_event_driven_dependency_error": {
  "data": {
   "lineno": 1489,
   "symbols_in_volume": [
    "Network",
    "SpikeGeneratorGroup",
    "Synapses",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "brian2.tests.test_synapses.pytest",
    "collect"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_event_driven_dependency_error2": {
  "data": {
   "lineno": 1503,
   "symbols_in_volume": [
    "Network",
    "SpikeGeneratorGroup",
    "Synapses",
    "brian2.stateupdaters.base.UnsupportedEquationsException",
    "brian2.tests.test_synapses.pytest",
    "collect"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_external_variables": {
  "data": {
   "lineno": 1424,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeGeneratorGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_fallback_loop_and_stateless_func": {
  "data": {
   "lineno": 2054,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.utils.logger.catch_logs",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_incoming_outgoing": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "all",
    "brian2.tests.test_synapses.pytest",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_indices": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "len",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_invalid_custom_event": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "ValueError",
    "brian2.tests.test_synapses.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_missing_lastupdate_error_run_regularly": {
  "data": {
   "lineno": 2576,
   "symbols_in_volume": [
    "AssertionError",
    "KeyError",
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_missing_lastupdate_error_syn_pathway": {
  "data": {
   "lineno": 2562,
   "symbols_in_volume": [
    "AssertionError",
    "KeyError",
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "run",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_multiple_summed_variables": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "NotImplementedError",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "collect"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_name_clashes": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "ValueError",
    "brian2.tests.test_synapses.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_nested_subexpression_references": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_no_synapses": {
  "data": {
   "lineno": 1127,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "Synapses",
    "TypeError",
    "brian2.tests.test_synapses.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_no_synapses_variable_write": {
  "data": {
   "lineno": 1138,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "TypeError",
    "brian2.tests.test_synapses.pytest",
    "setattr"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_permutation_analysis": {
  "data": {
   "lineno": 1801,
   "symbols_in_volume": [
    "AssertionError",
    "brian2.codegen.permutation_analysis.OrderDependenceError",
    "brian2.tests.test_synapses.SANITY_CHECK_PERMUTATION_ANALYSIS_EXAMPLE",
    "brian2.tests.test_synapses.check_permutation_code",
    "brian2.tests.test_synapses.numerically_check_permutation_code",
    "brian2.tests.test_synapses.permutation_analysis_bad_examples",
    "brian2.tests.test_synapses.permutation_analysis_good_examples",
    "brian2.tests.test_synapses.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_pre_before_post": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_pre_post_simple": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "SpikeGeneratorGroup",
    "StateMonitor",
    "Synapses",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.utils.logger.catch_logs",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_pre_post_variables": {
  "data": {
   "lineno": 1533,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_repr": {
  "data": {
   "lineno": 1517,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.test_synapses.sympy",
    "func",
    "len",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_scalar_parameter_access": {
  "data": {
   "lineno": 1322,
   "symbols_in_volume": [
    "IndexError",
    "NeuronGroup",
    "Synapses",
    "ValueError",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "slice"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_scalar_subexpression": {
  "data": {
   "lineno": 1370,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "SyntaxError",
    "brian2.tests.test_synapses.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_sim_with_constant_subexpression": {
  "data": {
   "lineno": 1411,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeGeneratorGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_sim_with_scalar_subexpression": {
  "data": {
   "lineno": 1399,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeGeneratorGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_sim_with_scalar_variable": {
  "data": {
   "lineno": 1386,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeGeneratorGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_state_variable_assignment": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_state_variable_indexing": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "IndexError",
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "len",
    "numpy.testing.assert_equal",
    "object"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_subexpression_references": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_summed_variable": {
  "data": {
   "lineno": 1151,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_summed_variable_differing_group_size": {
  "data": {
   "lineno": 1199,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_summed_variable_errors": {
  "data": {
   "lineno": 1230,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "ValueError",
    "brian2.tests.test_synapses.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_summed_variable_pre_and_post": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_summed_variables_linked_variables": {
  "data": {
   "lineno": 1306,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "NotImplementedError",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "collect",
    "linked_var"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_summed_variables_overlapping_subgroups": {
  "data": {
   "lineno": 1290,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "NotImplementedError",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "collect"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_summed_variables_subgroups": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapse_generator_deterministic": {
  "data": {
   "lineno": 2176,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses._compare",
    "brian2.tests.test_synapses.pytest",
    "brian2.utils.logger.catch_logs",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapse_generator_deterministic_2": {
  "data": {
   "lineno": 2237,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses._compare",
    "brian2.tests.test_synapses.pytest",
    "brian2.utils.logger.catch_logs",
    "len",
    "range",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapse_generator_out_of_range": {
  "data": {
   "lineno": 2139,
   "symbols_in_volume": [
    "AssertionError",
    "IndexError",
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses._compare",
    "brian2.tests.test_synapses.pytest",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapse_generator_random": {
  "data": {
   "lineno": 2324,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses._compare",
    "brian2.tests.test_synapses.pytest",
    "brian2.utils.logger.catch_logs",
    "len",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapse_generator_random_with_condition": {
  "data": {
   "lineno": 2361,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses._compare",
    "brian2.tests.test_synapses.pytest",
    "brian2.utils.logger.catch_logs",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapse_generator_random_with_condition_2": {
  "data": {
   "lineno": 2409,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "all",
    "any",
    "brian2.tests.test_synapses.pytest",
    "brian2.utils.logger.catch_logs",
    "len",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapse_generator_range_noint": {
  "data": {
   "lineno": 2541,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "TypeError",
    "brian2.tests.test_synapses.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapse_generator_syntax": {
  "data": {
   "lineno": 2083,
   "symbols_in_volume": [
    "SyntaxError",
    "brian2.synapses.parse_synaptic_generator_syntax.parse_synapse_generator",
    "brian2.tests.test_synapses.pytest"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapse_with_run_regularly": {
  "data": {
   "lineno": 1914,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapses_refractory": {
  "data": {
   "lineno": 2513,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapses_refractory_rand": {
  "data": {
   "lineno": 2524,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "all",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.utils.logger.catch_logs",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapses_to_synapses": {
  "data": {
   "lineno": 1926,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeGeneratorGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "numpy.testing.assert_array_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapses_to_synapses_different_sizes": {
  "data": {
   "lineno": 1965,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapses_to_synapses_statevar_access": {
  "data": {
   "lineno": 1942,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synapses_to_synapses_summed_variable": {
  "data": {
   "lineno": 2068,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "numpy.testing.assert_array_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_synaptic_equations": {
  "data": {
   "lineno": 1903,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_transmission": {
  "data": {
   "lineno": 954,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "SpikeMonitor",
    "Synapses",
    "brian2.tests.utils.assert_allclose",
    "len",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_transmission_all_to_one_heterogeneous_delays": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeGeneratorGroup",
    "StateMonitor",
    "Synapses",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_synapses.pytest",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_transmission_boolean_variable": {
  "data": {
   "lineno": 1064,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeGeneratorGroup",
    "StateMonitor",
    "Synapses",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_transmission_custom_event": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_transmission_one_to_all_heterogeneous_delays": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeGeneratorGroup",
    "StateMonitor",
    "Synapses",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_transmission_scalar_delay": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeGeneratorGroup",
    "StateMonitor",
    "Synapses",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_transmission_scalar_delay_different_clocks": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeGeneratorGroup",
    "StateMonitor",
    "Synapses",
    "brian2.devices.device.all_devices",
    "brian2.devices.device.get_device",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.test_synapses.uuid",
    "brian2.tests.utils.assert_allclose",
    "brian2.utils.logger.catch_logs",
    "len",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_transmission_simple": {
  "data": {
   "lineno": 914,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeGeneratorGroup",
    "StateMonitor",
    "Synapses",
    "brian2.core.network.schedule_propagation_offset",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_ufunc_at_vectorisation": {
  "data": {
   "lineno": 1981,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "Synapses",
    "brian2.codegen.generators.NumpyCodeGenerator._use_ufunc_at_vectorisation",
    "brian2.tests.test_synapses.logging",
    "brian2.tests.test_synapses.permutation_analysis_good_examples",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.utils.logger.catch_logs",
    "brian2.utils.stringtools.deindent",
    "brian2.utils.stringtools.get_identifiers",
    "len",
    "rand",
    "vars"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_variables_by_owner": {
  "data": {
   "lineno": 1556,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "all",
    "brian2.core.variables.variables_by_owner",
    "brian2.tests.test_synapses.pytest",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_vectorisation": {
  "data": {
   "lineno": 1833,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.test_vectorisation_STDP_like": {
  "data": {
   "lineno": 1852,
   "symbols_in_volume": [
    "NeuronGroup",
    "Synapses",
    "brian2.tests.test_synapses.pytest",
    "brian2.tests.utils.assert_allclose",
    "list",
    "run",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_synapses.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.uuid": {
  "data": {
   "shadows": "uuid"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.variables_by_owner": {
  "data": {
   "shadows": "brian2.core.variables.variables_by_owner"
  },
  "type": "import"
 },
 "brian2.tests.test_synapses.word_substitute": {
  "data": {
   "shadows": "brian2.utils.stringtools.word_substitute"
  },
  "type": "import"
 },
 "brian2.tests.test_templates": {
  "data": {},
  "type": "module"
 },
 "brian2.tests.test_templates.fake_package_1": {
  "data": {},
  "type": "module"
 },
 "brian2.tests.test_templates.fake_package_2": {
  "data": {},
  "type": "module"
 },
 "brian2.tests.test_templates.test_templates": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_templates.test_templates.test_templates"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_templates.test_templates.Templater": {
  "data": {
   "shadows": "brian2.codegen.templates.Templater"
  },
  "type": "import"
 },
 "brian2.tests.test_templates.test_templates.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_templates.test_templates.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_templates.test_templates.test_templates": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "brian2.codegen.templates.Templater",
    "brian2.tests.test_templates.test_templates.pytest",
    "enumerate",
    "getattr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_thresholder": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_thresholder.test_scalar_threshold",
    "brian2.tests.test_thresholder.test_simple_threshold"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_thresholder.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_thresholder.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_thresholder.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_thresholder.reinit_and_delete": {
  "data": {
   "shadows": "brian2.devices.device.reinit_and_delete"
  },
  "type": "import"
 },
 "brian2.tests.test_thresholder.test_scalar_threshold": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "brian2.tests.test_thresholder.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_thresholder.test_simple_threshold": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "NeuronGroup",
    "SpikeMonitor",
    "brian2.tests.test_thresholder.pytest",
    "numpy.testing.assert_equal",
    "run"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_timedarray": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_timedarray.test_long_timedarray",
    "brian2.tests.test_timedarray.test_timedarray_2d",
    "brian2.tests.test_timedarray.test_timedarray_direct_use",
    "brian2.tests.test_timedarray.test_timedarray_incorrect_use",
    "brian2.tests.test_timedarray.test_timedarray_no_units",
    "brian2.tests.test_timedarray.test_timedarray_no_upsampling",
    "brian2.tests.test_timedarray.test_timedarray_repeated_use",
    "brian2.tests.test_timedarray.test_timedarray_semantics",
    "brian2.tests.test_timedarray.test_timedarray_with_units"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_timedarray._hashable": {
  "data": {
   "shadows": "brian2.utils.caching._hashable"
  },
  "type": "import"
 },
 "brian2.tests.test_timedarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_timedarray.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_timedarray.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_timedarray.reinit_and_delete": {
  "data": {
   "shadows": "brian2.devices.device.reinit_and_delete"
  },
  "type": "import"
 },
 "brian2.tests.test_timedarray.test_long_timedarray": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Network",
    "NeuronGroup",
    "StateMonitor",
    "TimedArray",
    "brian2.tests.utils.assert_allclose",
    "float",
    "ta"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_2d": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "TimedArray",
    "brian2.tests.test_timedarray.pytest",
    "brian2.tests.utils.assert_allclose",
    "run",
    "ta2d"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_direct_use": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "TimedArray",
    "brian2.tests.test_timedarray.pytest",
    "brian2.tests.utils.assert_allclose",
    "ta",
    "ta2d"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_incorrect_use": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "NeuronGroup",
    "TimedArray",
    "ValueError",
    "brian2.tests.test_timedarray.pytest",
    "setattr",
    "ta",
    "ta2d"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_no_units": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "TimedArray",
    "brian2.tests.test_timedarray.pytest",
    "brian2.tests.utils.assert_allclose",
    "len",
    "run",
    "ta"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_no_upsampling": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "TimedArray",
    "brian2.tests.test_timedarray.pytest",
    "brian2.tests.utils.assert_allclose",
    "run",
    "ta"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_repeated_use": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "NeuronGroup",
    "TimedArray",
    "range",
    "run",
    "ta"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_semantics": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "TimedArray",
    "array",
    "brian2.tests.test_timedarray.pytest",
    "brian2.tests.utils.assert_allclose",
    "run",
    "ta"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_with_units": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NeuronGroup",
    "StateMonitor",
    "TimedArray",
    "brian2.tests.test_timedarray.pytest",
    "brian2.tests.utils.assert_allclose",
    "len",
    "run",
    "ta"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_unitarray": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "brian2.tests.test_unitarray.ar",
    "brian2.tests.test_unitarray.print_eval",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "print",
    "scipy"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_unitarray.DimensionMismatchError": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DimensionMismatchError"
  },
  "type": "import"
 },
 "brian2.tests.test_unitarray.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.tests.test_unitarray.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_unitarray.ar": {
  "data": {
   "lineno": 111
  },
  "type": "constant"
 },
 "brian2.tests.test_unitarray.print_eval": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "eval",
    "print"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_unitarray.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "brian2.tests.test_unitarray.sp": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "brian2.tests.test_units": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "brian2.tests.test_units.matplotlib",
    "brian2.tests.test_units.test_addition_subtraction",
    "brian2.tests.test_units.test_all_units_list",
    "brian2.tests.test_units.test_arange_linspace",
    "brian2.tests.test_units.test_binary_operations",
    "brian2.tests.test_units.test_check_units",
    "brian2.tests.test_units.test_constants",
    "brian2.tests.test_units.test_construction",
    "brian2.tests.test_units.test_deepcopy",
    "brian2.tests.test_units.test_display",
    "brian2.tests.test_units.test_fail_for_dimension_mismatch",
    "brian2.tests.test_units.test_get_best_unit",
    "brian2.tests.test_units.test_get_dimensions",
    "brian2.tests.test_units.test_get_unit",
    "brian2.tests.test_units.test_inplace_on_scalars",
    "brian2.tests.test_units.test_inplace_operations",
    "brian2.tests.test_units.test_list",
    "brian2.tests.test_units.test_multiplication_division",
    "brian2.tests.test_units.test_numpy_functions_change_dimensions",
    "brian2.tests.test_units.test_numpy_functions_dimensionless",
    "brian2.tests.test_units.test_numpy_functions_indices",
    "brian2.tests.test_units.test_numpy_functions_logical",
    "brian2.tests.test_units.test_numpy_functions_same_dimensions",
    "brian2.tests.test_units.test_numpy_functions_typeerror",
    "brian2.tests.test_units.test_pickling",
    "brian2.tests.test_units.test_power",
    "brian2.tests.test_units.test_scale",
    "brian2.tests.test_units.test_setting",
    "brian2.tests.test_units.test_slicing",
    "brian2.tests.test_units.test_special_case_numpy_functions",
    "brian2.tests.test_units.test_str_repr",
    "brian2.tests.test_units.test_switching_off_unit_checks",
    "brian2.tests.test_units.test_unary_operations",
    "brian2.tests.test_units.test_unit_discarding_functions",
    "brian2.tests.test_units.test_units_vs_quantities",
    "brian2.tests.test_units.test_unitsafe_functions"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_units.DEFAULT_UNITS": {
  "data": {
   "shadows": "brian2.core.namespace.DEFAULT_UNITS"
  },
  "type": "import"
 },
 "brian2.tests.test_units.DIMENSIONLESS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DIMENSIONLESS"
  },
  "type": "import"
 },
 "brian2.tests.test_units.DimensionMismatchError": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.DimensionMismatchError"
  },
  "type": "import"
 },
 "brian2.tests.test_units.Hz": {
  "data": {
   "shadows": "brian2.units.stdunits.Hz"
  },
  "type": "import"
 },
 "brian2.tests.test_units.Quantity": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Quantity"
  },
  "type": "import"
 },
 "brian2.tests.test_units.UFUNCS_DIMENSIONLESS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.UFUNCS_DIMENSIONLESS"
  },
  "type": "import"
 },
 "brian2.tests.test_units.UFUNCS_DIMENSIONLESS_TWOARGS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.UFUNCS_DIMENSIONLESS_TWOARGS"
  },
  "type": "import"
 },
 "brian2.tests.test_units.UFUNCS_INTEGERS": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.UFUNCS_INTEGERS"
  },
  "type": "import"
 },
 "brian2.tests.test_units.UFUNCS_LOGICAL": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.UFUNCS_LOGICAL"
  },
  "type": "import"
 },
 "brian2.tests.test_units.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.tests.test_units.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_units.add": {
  "data": {
   "shadows": "operator.add"
  },
  "type": "import"
 },
 "brian2.tests.test_units.all_units": {
  "data": {
   "shadows": "brian2.units.allunits.all_units"
  },
  "type": "import"
 },
 "brian2.tests.test_units.arccos": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.arccos"
  },
  "type": "import"
 },
 "brian2.tests.test_units.arccosh": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.arccosh"
  },
  "type": "import"
 },
 "brian2.tests.test_units.arcsin": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.arcsin"
  },
  "type": "import"
 },
 "brian2.tests.test_units.arcsinh": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.arcsinh"
  },
  "type": "import"
 },
 "brian2.tests.test_units.arctan": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.arctan"
  },
  "type": "import"
 },
 "brian2.tests.test_units.arctanh": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.arctanh"
  },
  "type": "import"
 },
 "brian2.tests.test_units.array": {
  "data": {
   "shadows": "numpy.array"
  },
  "type": "import"
 },
 "brian2.tests.test_units.assert_allclose": {
  "data": {
   "shadows": "brian2.tests.utils.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.test_units.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "brian2.tests.test_units.assert_quantity": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "brian2.tests.utils.assert_allclose",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.get_dimensions",
    "brian2.units.fundamentalunits.have_same_dimensions",
    "isinstance",
    "numpy.asarray",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.brian2": {
  "data": {
   "shadows": "brian2"
  },
  "type": "import"
 },
 "brian2.tests.test_units.check_units": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.check_units"
  },
  "type": "import"
 },
 "brian2.tests.test_units.cm": {
  "data": {
   "shadows": "brian2.units.stdunits.cm"
  },
  "type": "import"
 },
 "brian2.tests.test_units.constants": {
  "data": {
   "shadows": "brian2.units.constants"
  },
  "type": "import"
 },
 "brian2.tests.test_units.cos": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.cos"
  },
  "type": "import"
 },
 "brian2.tests.test_units.cosh": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.cosh"
  },
  "type": "import"
 },
 "brian2.tests.test_units.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "brian2.tests.test_units.diagonal": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.diagonal"
  },
  "type": "import"
 },
 "brian2.tests.test_units.dot": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.dot"
  },
  "type": "import"
 },
 "brian2.tests.test_units.eq": {
  "data": {
   "shadows": "operator.eq"
  },
  "type": "import"
 },
 "brian2.tests.test_units.exp": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.exp"
  },
  "type": "import"
 },
 "brian2.tests.test_units.fail_for_dimension_mismatch": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.fail_for_dimension_mismatch"
  },
  "type": "import"
 },
 "brian2.tests.test_units.fundamentalunits": {
  "data": {
   "shadows": "brian2.units.fundamentalunits"
  },
  "type": "import"
 },
 "brian2.tests.test_units.ge": {
  "data": {
   "shadows": "operator.ge"
  },
  "type": "import"
 },
 "brian2.tests.test_units.get_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_dimensions"
  },
  "type": "import"
 },
 "brian2.tests.test_units.get_or_create_dimension": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_or_create_dimension"
  },
  "type": "import"
 },
 "brian2.tests.test_units.get_unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.get_unit"
  },
  "type": "import"
 },
 "brian2.tests.test_units.gt": {
  "data": {
   "shadows": "operator.gt"
  },
  "type": "import"
 },
 "brian2.tests.test_units.have_same_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.have_same_dimensions"
  },
  "type": "import"
 },
 "brian2.tests.test_units.in_unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.in_unit"
  },
  "type": "import"
 },
 "brian2.tests.test_units.is_scalar_type": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.is_scalar_type"
  },
  "type": "import"
 },
 "brian2.tests.test_units.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "brian2.tests.test_units.kHz": {
  "data": {
   "shadows": "brian2.units.stdunits.kHz"
  },
  "type": "import"
 },
 "brian2.tests.test_units.le": {
  "data": {
   "shadows": "operator.le"
  },
  "type": "import"
 },
 "brian2.tests.test_units.log": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.log"
  },
  "type": "import"
 },
 "brian2.tests.test_units.lt": {
  "data": {
   "shadows": "operator.lt"
  },
  "type": "import"
 },
 "brian2.tests.test_units.mM": {
  "data": {
   "shadows": "brian2.units.stdunits.mM"
  },
  "type": "import"
 },
 "brian2.tests.test_units.mV": {
  "data": {
   "shadows": "brian2.units.stdunits.mV"
  },
  "type": "import"
 },
 "brian2.tests.test_units.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "brian2.tests.test_units.ms": {
  "data": {
   "shadows": "brian2.units.stdunits.ms"
  },
  "type": "import"
 },
 "brian2.tests.test_units.nS": {
  "data": {
   "shadows": "brian2.units.stdunits.nS"
  },
  "type": "import"
 },
 "brian2.tests.test_units.ne": {
  "data": {
   "shadows": "operator.ne"
  },
  "type": "import"
 },
 "brian2.tests.test_units.neg": {
  "data": {
   "shadows": "operator.neg"
  },
  "type": "import"
 },
 "brian2.tests.test_units.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.test_units.ones_like": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.ones_like"
  },
  "type": "import"
 },
 "brian2.tests.test_units.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "brian2.tests.test_units.pos": {
  "data": {
   "shadows": "operator.pos"
  },
  "type": "import"
 },
 "brian2.tests.test_units.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.tests.test_units.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_units.ravel": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.ravel"
  },
  "type": "import"
 },
 "brian2.tests.test_units.sin": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.sin"
  },
  "type": "import"
 },
 "brian2.tests.test_units.sinh": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.sinh"
  },
  "type": "import"
 },
 "brian2.tests.test_units.sub": {
  "data": {
   "shadows": "operator.sub"
  },
  "type": "import"
 },
 "brian2.tests.test_units.tan": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.tan"
  },
  "type": "import"
 },
 "brian2.tests.test_units.tanh": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.tanh"
  },
  "type": "import"
 },
 "brian2.tests.test_units.test_addition_subtraction": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "TypeError",
    "brian2.tests.test_units.assert_quantity",
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.stdunits.mV",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_all_units_list": {
  "data": {
   "lineno": 1224,
   "symbols_in_volume": [
    "all",
    "brian2.tests.test_units.pytest",
    "brian2.units.allunits.all_units",
    "brian2.units.fundamentalunits.Unit",
    "brian2.units.stdunits.Hz",
    "brian2.units.stdunits.cm",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_arange_linspace": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "TypeError",
    "brian2.tests.test_units.assert_quantity",
    "brian2.tests.test_units.brian2",
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.stdunits.mV",
    "brian2.units.stdunits.ms",
    "float",
    "numpy.arange",
    "numpy.linspace",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_binary_operations": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "assert_operations_do_not_work",
    "assert_operations_work",
    "brian2.tests.test_units.pytest",
    "numpy.all",
    "numpy.array",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_binary_operations.assert_operations_do_not_work": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "numpy.add",
    "numpy.equal",
    "numpy.greater",
    "numpy.greater_equal",
    "numpy.less",
    "numpy.less_equal",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.not_equal",
    "numpy.subtract",
    "numpy_func",
    "op",
    "operator.add",
    "operator.eq",
    "operator.ge",
    "operator.gt",
    "operator.le",
    "operator.lt",
    "operator.ne",
    "operator.sub"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_binary_operations.assert_operations_work": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "AssertionError",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "numpy.add",
    "numpy.equal",
    "numpy.greater",
    "numpy.greater_equal",
    "numpy.less",
    "numpy.less_equal",
    "numpy.maximum",
    "numpy.minimum",
    "numpy.not_equal",
    "numpy.subtract",
    "numpy_func",
    "op",
    "operator.add",
    "operator.eq",
    "operator.ge",
    "operator.gt",
    "operator.le",
    "operator.lt",
    "operator.ne",
    "operator.sub"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_check_units": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "TypeError",
    "a_function",
    "b_function",
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.stdunits.mV",
    "c_function",
    "object"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_check_units.a_function": {
  "data": {
   "lineno": 1027,
   "symbols_in_volume": [
    "brian2.units.fundamentalunits.check_units"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_check_units.b_function": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "brian2.units.fundamentalunits.check_units"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_check_units.c_function": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "bool",
    "brian2.units.fundamentalunits.check_units"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_constants": {
  "data": {
   "lineno": 1233,
   "symbols_in_volume": [
    "brian2.tests.test_units.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.constants.avogadro_constant",
    "brian2.units.constants.avogadro_constant.dim",
    "brian2.units.constants.boltzmann_constant",
    "brian2.units.constants.boltzmann_constant.dim",
    "brian2.units.constants.electric_constant.dim",
    "brian2.units.constants.electron_mass.dim",
    "brian2.units.constants.elementary_charge",
    "brian2.units.constants.elementary_charge.dim",
    "brian2.units.constants.faraday_constant",
    "brian2.units.constants.faraday_constant.dim",
    "brian2.units.constants.gas_constant",
    "brian2.units.constants.gas_constant.dim",
    "brian2.units.constants.magnetic_constant.dim",
    "brian2.units.constants.molar_mass_constant.dim",
    "brian2.units.constants.zero_celsius.dim"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_construction": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "TypeError",
    "brian2.tests.test_units.assert_quantity",
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.Quantity.with_dimensions",
    "brian2.units.fundamentalunits.Unit",
    "brian2.units.stdunits.ms",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_deepcopy": {
  "data": {
   "lineno": 1163,
   "symbols_in_volume": [
    "brian2.tests.test_units.pytest",
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_display": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.fundamentalunits.Unit",
    "brian2.units.fundamentalunits.in_unit",
    "brian2.units.stdunits.mV",
    "brian2.units.stdunits.nS",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_fail_for_dimension_mismatch": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.DIMENSIONLESS",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.fundamentalunits.fail_for_dimension_mismatch"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_get_best_unit": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "brian2.tests.test_units.pytest",
    "brian2.units.stdunits.mV",
    "brian2.units.stdunits.ms",
    "brian2.units.stdunits.nS",
    "numpy.arange",
    "numpy.ones",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_get_dimensions": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "TypeError",
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.DIMENSIONLESS",
    "brian2.units.fundamentalunits.get_dimensions",
    "brian2.units.fundamentalunits.get_or_create_dimension",
    "brian2.units.fundamentalunits.is_scalar_type",
    "brian2.units.stdunits.ms",
    "numpy.array",
    "numpy.float32",
    "numpy.float64",
    "numpy.int",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_get_unit": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.Unit",
    "brian2.units.fundamentalunits.get_unit",
    "brian2.units.stdunits.mV.dim",
    "float",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_inplace_on_scalars": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "brian2.tests.test_units.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.stdunits.mV",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_inplace_operations": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "id",
    "illegal_add",
    "illegal_pow",
    "inplace_op",
    "numpy.all",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_inplace_operations.illegal_add": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_inplace_operations.illegal_pow": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_inplace_operations.illegal_sub": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_list": {
  "data": {
   "lineno": 1008,
   "symbols_in_volume": [
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.have_same_dimensions",
    "brian2.units.stdunits.mV",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_multiplication_division": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "TypeError",
    "brian2.tests.test_units.assert_quantity",
    "brian2.tests.test_units.pytest",
    "brian2.units.stdunits.mV",
    "numpy.array",
    "numpy.asarray",
    "numpy.float64",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_numpy_functions_change_dimensions": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "brian2.tests.test_units.assert_quantity",
    "brian2.tests.test_units.pytest",
    "brian2.units.stdunits.mV",
    "numpy.array",
    "numpy.ones",
    "numpy.reciprocal",
    "numpy.sqrt",
    "numpy.square",
    "numpy.var"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_numpy_functions_dimensionless": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "RuntimeWarning",
    "brian2.tests.test_units.pytest",
    "brian2.tests.test_units.warnings",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.UFUNCS_DIMENSIONLESS",
    "brian2.units.fundamentalunits.UFUNCS_DIMENSIONLESS_TWOARGS",
    "brian2.units.stdunits.mV",
    "eval",
    "globals",
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "numpy.number",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_numpy_functions_indices": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "brian2.tests.test_units.itertools",
    "brian2.tests.test_units.pytest",
    "brian2.units.stdunits.kHz",
    "brian2.units.stdunits.mV",
    "func",
    "func.__name__",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.argsort",
    "numpy.array",
    "numpy.nonzero",
    "numpy.ones",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_numpy_functions_logical": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "NotImplemented",
    "TypeError",
    "ValueError",
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.UFUNCS_LOGICAL",
    "brian2.units.stdunits.mV",
    "eval",
    "isinstance",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_numpy_functions_same_dimensions": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "AssertionError",
    "abs",
    "brian2.tests.test_units.itertools",
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.get_dimensions",
    "brian2.units.stdunits.kHz",
    "brian2.units.stdunits.mV",
    "func",
    "func.__name__",
    "max",
    "min",
    "numpy.abs",
    "numpy.arange",
    "numpy.array",
    "numpy.cumsum",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.negative",
    "numpy.ones",
    "numpy.ptp",
    "numpy.round",
    "numpy.squeeze",
    "numpy.std",
    "numpy.sum",
    "numpy.transpose",
    "repr",
    "sum"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_numpy_functions_typeerror": {
  "data": {
   "lineno": 903,
   "symbols_in_volume": [
    "TypeError",
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.UFUNCS_INTEGERS",
    "brian2.units.stdunits.mV",
    "eval",
    "globals",
    "numpy.array",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_pickling": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "brian2.tests.test_units.pickle",
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.have_same_dimensions",
    "brian2.units.stdunits.mV",
    "brian2.units.stdunits.ms",
    "isinstance",
    "numpy.arange",
    "numpy.testing.assert_equal",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_power": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "TypeError",
    "brian2.tests.test_units.assert_quantity",
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "numpy.array",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_scale": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "brian2.core.namespace.DEFAULT_UNITS",
    "brian2.tests.test_units.pytest",
    "brian2.tests.utils.assert_allclose",
    "float"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_setting": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.stdunits.mV",
    "numpy.all",
    "numpy.arange",
    "numpy.ones",
    "numpy.reshape",
    "set_to_value",
    "slice"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_setting.set_to_value": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_slicing": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "brian2.tests.test_units.pytest",
    "brian2.units.stdunits.mV",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.reshape",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_special_case_numpy_functions": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "brian2.tests.test_units.pytest",
    "brian2.tests.test_units.use_matplotlib_units_fix",
    "brian2.tests.test_units.warnings",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.have_same_dimensions",
    "brian2.units.stdunits.mV",
    "brian2.units.stdunits.mV.cumprod",
    "brian2.units.stdunits.ms",
    "brian2.units.unitsafefunctions.diagonal",
    "brian2.units.unitsafefunctions.dot",
    "brian2.units.unitsafefunctions.ravel",
    "brian2.units.unitsafefunctions.trace",
    "brian2.units.unitsafefunctions.where",
    "hasattr",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.diagonal",
    "numpy.dot",
    "numpy.ones",
    "numpy.ravel",
    "numpy.reshape",
    "numpy.testing.assert_equal",
    "numpy.trace",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_str_repr": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "brian2.tests.test_units.itertools",
    "brian2.tests.test_units.pytest",
    "brian2.tests.utils.assert_allclose",
    "brian2.units.fundamentalunits.DIMENSIONLESS",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.fundamentalunits.Unit",
    "brian2.units.fundamentalunits.get_or_create_dimension",
    "brian2.units.stdunits.cm",
    "brian2.units.stdunits.mM",
    "brian2.units.stdunits.nS",
    "eval",
    "len",
    "numpy.array",
    "numpy.ones",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_switching_off_unit_checks": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "brian2.tests.test_units.pytest",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.fundamentalunits.have_same_dimensions",
    "brian2.units.fundamentalunits.unit_checking",
    "numpy.array",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_unary_operations": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "brian2.tests.test_units.assert_quantity",
    "brian2.tests.test_units.pytest",
    "numpy.array",
    "op",
    "operator.neg",
    "operator.pos"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_unit_discarding_functions": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "brian2.tests.test_units.pytest",
    "brian2.units.stdunits.mV",
    "brian2.units.unitsafefunctions.ones_like",
    "brian2.units.unitsafefunctions.zeros_like",
    "numpy.arange",
    "numpy.array",
    "numpy.asarray",
    "numpy.nonzero",
    "numpy.ones_like",
    "numpy.sign",
    "numpy.testing.assert_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_units_vs_quantities": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "brian2.units.fundamentalunits.Quantity",
    "brian2.units.fundamentalunits.Unit",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.test_unitsafe_functions": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "brian2.tests.test_units.pytest",
    "brian2.tests.test_units.warnings",
    "brian2.units.fundamentalunits.DimensionMismatchError",
    "brian2.units.stdunits.mV",
    "brian2.units.unitsafefunctions.arccos",
    "brian2.units.unitsafefunctions.arccosh",
    "brian2.units.unitsafefunctions.arcsin",
    "brian2.units.unitsafefunctions.arcsinh",
    "brian2.units.unitsafefunctions.arctan",
    "brian2.units.unitsafefunctions.arctanh",
    "brian2.units.unitsafefunctions.cos",
    "brian2.units.unitsafefunctions.cosh",
    "brian2.units.unitsafefunctions.exp",
    "brian2.units.unitsafefunctions.log",
    "brian2.units.unitsafefunctions.sin",
    "brian2.units.unitsafefunctions.sinh",
    "brian2.units.unitsafefunctions.tan",
    "brian2.units.unitsafefunctions.tanh",
    "func",
    "np_func",
    "numpy.arccos",
    "numpy.arccosh",
    "numpy.arcsin",
    "numpy.arcsinh",
    "numpy.arctan",
    "numpy.arctanh",
    "numpy.array",
    "numpy.cos",
    "numpy.cosh",
    "numpy.exp",
    "numpy.log",
    "numpy.ones",
    "numpy.sin",
    "numpy.sinh",
    "numpy.tan",
    "numpy.tanh",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_units.trace": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.trace"
  },
  "type": "import"
 },
 "brian2.tests.test_units.use_matplotlib_units_fix": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "brian2.tests.test_units.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "brian2.tests.test_units.where": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.where"
  },
  "type": "import"
 },
 "brian2.tests.test_units.zeros_like": {
  "data": {
   "shadows": "brian2.units.unitsafefunctions.zeros_like"
  },
  "type": "import"
 },
 "brian2.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_utils.test_environment",
    "brian2.tests.test_utils.test_spell_check"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_utils.SpellChecker": {
  "data": {
   "shadows": "brian2.utils.stringtools.SpellChecker"
  },
  "type": "import"
 },
 "brian2.tests.test_utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_utils.builtins": {
  "data": {
   "shadows": "future.builtins"
  },
  "type": "import"
 },
 "brian2.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_utils.running_from_ipython": {
  "data": {
   "shadows": "brian2.utils.environment.running_from_ipython"
  },
  "type": "import"
 },
 "brian2.tests.test_utils.test_environment": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "brian2.tests.test_utils.pytest",
    "brian2.utils.environment.running_from_ipython",
    "future.builtins",
    "future.builtins.__IPYTHON__",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_utils.test_spell_check": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "brian2.tests.test_utils.pytest",
    "brian2.utils.stringtools.SpellChecker",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_variables": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.tests.test_variables.test_construction_errors",
    "brian2.tests.test_variables.test_dtype_str",
    "brian2.tests.test_variables.test_str_repr"
   ]
  },
  "type": "module"
 },
 "brian2.tests.test_variables.Unit": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.Unit"
  },
  "type": "import"
 },
 "brian2.tests.test_variables.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.test_variables.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "brian2.tests.test_variables.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.test_variables.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.tests.test_variables.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "brian2.tests.test_variables.second": {
  "data": {
   "shadows": "brian2.units.allunits.second"
  },
  "type": "import"
 },
 "brian2.tests.test_variables.test_construction_errors": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "DynamicArrayVariable",
    "ValueError",
    "Variable",
    "brian2.tests.test_variables.pytest",
    "brian2.units.allunits.second.dim",
    "numpy.bool"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_variables.test_dtype_str": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ArrayVariable",
    "AuxiliaryVariable",
    "Constant",
    "DynamicArrayVariable",
    "FakeGroup",
    "Subexpression",
    "brian2.tests.test_variables.pytest",
    "collections.namedtuple",
    "numpy.dtype",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "brian2.tests.test_variables.test_str_repr": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ArrayVariable",
    "AuxiliaryVariable",
    "Constant",
    "DynamicArrayVariable",
    "FakeGroup",
    "Subexpression",
    "Variable",
    "brian2.tests.test_variables.pytest",
    "brian2.units.allunits.second.dim",
    "collections.namedtuple",
    "len",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.tests.utils": {
  "data": {},
  "type": "module"
 },
 "brian2.tests.utils.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.tests.utils.assert_allclose": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "brian2.prefs",
    "brian2.units.fundamentalunits.have_same_dimensions",
    "numpy.asarray",
    "numpy.finfo",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "brian2.tests.utils.have_same_dimensions": {
  "data": {
   "shadows": "brian2.units.fundamentalunits.have_same_dimensions"
  },
  "type": "import"
 },
 "brian2.tests.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.tests.utils.numpy_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "brian2.tests.utils.prefs": {
  "data": {
   "shadows": "brian2.prefs"
  },
  "type": "import"
 },
 "brian2.tests.weave": {
  "data": {
   "shadows": "weave"
  },
  "type": "import"
 },
 "brian2.tests.xdist": {
  "data": {
   "shadows": "xdist"
  },
  "type": "import"
 },
 "brian2.units": {
  "data": {
   "symbols_in_volume": [
    "brian2.units.__all__"
   ]
  },
  "type": "module"
 },
 "brian2.units.__all__": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "brian2.units.allunits": {
  "data": {
   "symbols_in_volume": [
    "brian2.units.allunits.Eamp",
    "brian2.units.allunits.Eamp2",
    "brian2.units.allunits.Eamp3",
    "brian2.units.allunits.Eampere",
    "brian2.units.allunits.Eampere2",
    "brian2.units.allunits.Eampere3",
    "brian2.units.allunits.Ebecquerel",
    "brian2.units.allunits.Ebecquerel2",
    "brian2.units.allunits.Ebecquerel3",
    "brian2.units.allunits.Ecandle",
    "brian2.units.allunits.Ecandle2",
    "brian2.units.allunits.Ecandle3",
    "brian2.units.allunits.Ecoulomb",
    "brian2.units.allunits.Ecoulomb2",
    "brian2.units.allunits.Ecoulomb3",
    "brian2.units.allunits.Efarad",
    "brian2.units.allunits.Efarad2",
    "brian2.units.allunits.Efarad3",
    "brian2.units.allunits.Egram",
    "brian2.units.allunits.Egram2",
    "brian2.units.allunits.Egram3",
    "brian2.units.allunits.Egramme",
    "brian2.units.allunits.Egramme2",
    "brian2.units.allunits.Egramme3",
    "brian2.units.allunits.Egray",
    "brian2.units.allunits.Egray2",
    "brian2.units.allunits.Egray3",
    "brian2.units.allunits.Ehenry",
    "brian2.units.allunits.Ehenry2",
    "brian2.units.allunits.Ehenry3",
    "brian2.units.allunits.Ehertz",
    "brian2.units.allunits.Ehertz2",
    "brian2.units.allunits.Ehertz3",
    "brian2.units.allunits.Ejoule",
    "brian2.units.allunits.Ejoule2",
    "brian2.units.allunits.Ejoule3",
    "brian2.units.allunits.Ekatal",
    "brian2.units.allunits.Ekatal2",
    "brian2.units.allunits.Ekatal3",
    "brian2.units.allunits.Eliter",
    "brian2.units.allunits.Elitre",
    "brian2.units.allunits.Elumen",
    "brian2.units.allunits.Elumen2",
    "brian2.units.allunits.Elumen3",
    "brian2.units.allunits.Elux",
    "brian2.units.allunits.Elux2",
    "brian2.units.allunits.Elux3",
    "brian2.units.allunits.Emeter",
    "brian2.units.allunits.Emeter2",
    "brian2.units.allunits.Emeter3",
    "brian2.units.allunits.Emetre",
    "brian2.units.allunits.Emetre2",
    "brian2.units.allunits.Emetre3",
    "brian2.units.allunits.Emol",
    "brian2.units.allunits.Emol2",
    "brian2.units.allunits.Emol3",
    "brian2.units.allunits.Emolar",
    "brian2.units.allunits.Emolar2",
    "brian2.units.allunits.Emolar3",
    "brian2.units.allunits.Emole",
    "brian2.units.allunits.Emole2",
    "brian2.units.allunits.Emole3",
    "brian2.units.allunits.Enewton",
    "brian2.units.allunits.Enewton2",
    "brian2.units.allunits.Enewton3",
    "brian2.units.allunits.Eohm",
    "brian2.units.allunits.Eohm2",
    "brian2.units.allunits.Eohm3",
    "brian2.units.allunits.Epascal",
    "brian2.units.allunits.Epascal2",
    "brian2.units.allunits.Epascal3",
    "brian2.units.allunits.Eradian",
    "brian2.units.allunits.Eradian2",
    "brian2.units.allunits.Eradian3",
    "brian2.units.allunits.Esecond",
    "brian2.units.allunits.Esecond2",
    "brian2.units.allunits.Esecond3",
    "brian2.units.allunits.Esiemens",
    "brian2.units.allunits.Esiemens2",
    "brian2.units.allunits.Esiemens3",
    "brian2.units.allunits.Esievert",
    "brian2.units.allunits.Esievert2",
    "brian2.units.allunits.Esievert3",
    "brian2.units.allunits.Esteradian",
    "brian2.units.allunits.Esteradian2",
    "brian2.units.allunits.Esteradian3",
    "brian2.units.allunits.Etesla",
    "brian2.units.allunits.Etesla2",
    "brian2.units.allunits.Etesla3",
    "brian2.units.allunits.Evolt",
    "brian2.units.allunits.Evolt2",
    "brian2.units.allunits.Evolt3",
    "brian2.units.allunits.Ewatt",
    "brian2.units.allunits.Ewatt2",
    "brian2.units.allunits.Ewatt3",
    "brian2.units.allunits.Eweber",
    "brian2.units.allunits.Eweber2",
    "brian2.units.allunits.Eweber3",
    "brian2.units.allunits.Gamp",
    "brian2.units.allunits.Gamp2",
    "brian2.units.allunits.Gamp3",
    "brian2.units.allunits.Gampere",
    "brian2.units.allunits.Gampere2",
    "brian2.units.allunits.Gampere3",
    "brian2.units.allunits.Gbecquerel",
    "brian2.units.allunits.Gbecquerel2",
    "brian2.units.allunits.Gbecquerel3",
    "brian2.units.allunits.Gcandle",
    "brian2.units.allunits.Gcandle2",
    "brian2.units.allunits.Gcandle3",
    "brian2.units.allunits.Gcoulomb",
    "brian2.units.allunits.Gcoulomb2",
    "brian2.units.allunits.Gcoulomb3",
    "brian2.units.allunits.Gfarad",
    "brian2.units.allunits.Gfarad2",
    "brian2.units.allunits.Gfarad3",
    "brian2.units.allunits.Ggram",
    "brian2.units.allunits.Ggram2",
    "brian2.units.allunits.Ggram3",
    "brian2.units.allunits.Ggramme",
    "brian2.units.allunits.Ggramme2",
    "brian2.units.allunits.Ggramme3",
    "brian2.units.allunits.Ggray",
    "brian2.units.allunits.Ggray2",
    "brian2.units.allunits.Ggray3",
    "brian2.units.allunits.Ghenry",
    "brian2.units.allunits.Ghenry2",
    "brian2.units.allunits.Ghenry3",
    "brian2.units.allunits.Ghertz",
    "brian2.units.allunits.Ghertz2",
    "brian2.units.allunits.Ghertz3",
    "brian2.units.allunits.Gjoule",
    "brian2.units.allunits.Gjoule2",
    "brian2.units.allunits.Gjoule3",
    "brian2.units.allunits.Gkatal",
    "brian2.units.allunits.Gkatal2",
    "brian2.units.allunits.Gkatal3",
    "brian2.units.allunits.Gliter",
    "brian2.units.allunits.Glitre",
    "brian2.units.allunits.Glumen",
    "brian2.units.allunits.Glumen2",
    "brian2.units.allunits.Glumen3",
    "brian2.units.allunits.Glux",
    "brian2.units.allunits.Glux2",
    "brian2.units.allunits.Glux3",
    "brian2.units.allunits.Gmeter",
    "brian2.units.allunits.Gmeter2",
    "brian2.units.allunits.Gmeter3",
    "brian2.units.allunits.Gmetre",
    "brian2.units.allunits.Gmetre2",
    "brian2.units.allunits.Gmetre3",
    "brian2.units.allunits.Gmol",
    "brian2.units.allunits.Gmol2",
    "brian2.units.allunits.Gmol3",
    "brian2.units.allunits.Gmolar",
    "brian2.units.allunits.Gmolar2",
    "brian2.units.allunits.Gmolar3",
    "brian2.units.allunits.Gmole",
    "brian2.units.allunits.Gmole2",
    "brian2.units.allunits.Gmole3",
    "brian2.units.allunits.Gnewton",
    "brian2.units.allunits.Gnewton2",
    "brian2.units.allunits.Gnewton3",
    "brian2.units.allunits.Gohm",
    "brian2.units.allunits.Gohm2",
    "brian2.units.allunits.Gohm3",
    "brian2.units.allunits.Gpascal",
    "brian2.units.allunits.Gpascal2",
    "brian2.units.allunits.Gpascal3",
    "brian2.units.allunits.Gradian",
    "brian2.units.allunits.Gradian2",
    "brian2.units.allunits.Gradian3",
    "brian2.units.allunits.Gsecond",
    "brian2.units.allunits.Gsecond2",
    "brian2.units.allunits.Gsecond3",
    "brian2.units.allunits.Gsiemens",
    "brian2.units.allunits.Gsiemens2",
    "brian2.units.allunits.Gsiemens3",
    "brian2.units.allunits.Gsievert",
    "brian2.units.allunits.Gsievert2",
    "brian2.units.allunits.Gsievert3",
    "brian2.units.allunits.Gsteradian",
    "brian2.units.allunits.Gsteradian2",
    "brian2.units.allunits.Gsteradian3",
    "brian2.units.allunits.Gtesla",
    "brian2.units.allunits.Gtesla2",
    "brian2.units.allunits.Gtesla3",
    "brian2.units.allunits.Gvolt",
    "brian2.units.allunits.Gvolt2",
    "brian2.units.allunits.Gvolt3",
    "brian2.units.allunits.Gwatt",
    "brian2.units.allunits.Gwatt2",
    "brian2.units.allunits.Gwatt3",
    "brian2.units.allunits.Gweber",
    "brian2.units.allunits.Gweber2",
    "brian2.units.allunits.Gweber3",
    "brian2.units.allunits.Mamp",
    "brian2.units.allunits.Mamp2",
    "brian2.units.allunits.Mamp3",
    "brian2.units.allunits.Mampere",
    "brian2.units.allunits.Mampere2",
    "brian2.units.allunits.Mampere3",
    "brian2.units.allunits.Mbecquerel",
    "brian2.units.allunits.Mbecquerel2",
    "brian2.units.allunits.Mbecquerel3",
    "brian2.units.allunits.Mcandle",
    "brian2.units.allunits.Mcandle2",
    "brian2.units.allunits.Mcandle3",
    "brian2.units.allunits.Mcoulomb",
    "brian2.units.allunits.Mcoulomb2",
    "brian2.units.allunits.Mcoulomb3",
    "brian2.units.allunits.Mfarad",
    "brian2.units.allunits.Mfarad2",
    "brian2.units.allunits.Mfarad3",
    "brian2.units.allunits.Mgram",
    "brian2.units.allunits.Mgram2",
    "brian2.units.allunits.Mgram3",
    "brian2.units.allunits.Mgramme",
    "brian2.units.allunits.Mgramme2",
    "brian2.units.allunits.Mgramme3",
    "brian2.units.allunits.Mgray",
    "brian2.units.allunits.Mgray2",
    "brian2.units.allunits.Mgray3",
    "brian2.units.allunits.Mhenry",
    "brian2.units.allunits.Mhenry2",
    "brian2.units.allunits.Mhenry3",
    "brian2.units.allunits.Mhertz",
    "brian2.units.allunits.Mhertz2",
    "brian2.units.allunits.Mhertz3",
    "brian2.units.allunits.Mjoule",
    "brian2.units.allunits.Mjoule2",
    "brian2.units.allunits.Mjoule3",
    "brian2.units.allunits.Mkatal",
    "brian2.units.allunits.Mkatal2",
    "brian2.units.allunits.Mkatal3",
    "brian2.units.allunits.Mliter",
    "brian2.units.allunits.Mlitre",
    "brian2.units.allunits.Mlumen",
    "brian2.units.allunits.Mlumen2",
    "brian2.units.allunits.Mlumen3",
    "brian2.units.allunits.Mlux",
    "brian2.units.allunits.Mlux2",
    "brian2.units.allunits.Mlux3",
    "brian2.units.allunits.Mmeter",
    "brian2.units.allunits.Mmeter2",
    "brian2.units.allunits.Mmeter3",
    "brian2.units.allunits.Mmetre",
    "brian2.units.allunits.Mmetre2",
    "brian2.units.allunits.Mmetre3",
    "brian2.units.allunits.Mmol",
    "brian2.units.allunits.Mmol2",
    "brian2.units.allunits.Mmol3",
    "brian2.units.allunits.Mmolar",
    "brian2.units.allunits.Mmolar2",
    "brian2.units.allunits.Mmolar3",
    "brian2.units.allunits.Mmole",
    "brian2.units.allunits.Mmole2",
    "brian2.units.allunits.Mmole3",
    "brian2.units.allunits.Mnewton",
    "brian2.units.allunits.Mnewton2",
    "brian2.units.allunits.Mnewton3",
    "brian2.units.allunits.Mohm",
    "brian2.units.allunits.Mohm2",
    "brian2.units.allunits.Mohm3",
    "brian2.units.allunits.Mpascal",
    "brian2.units.allunits.Mpascal2",
    "brian2.units.allunits.Mpascal3",
    "brian2.units.allunits.Mradian",
    "brian2.units.allunits.Mradian2",
    "brian2.units.allunits.Mradian3",
    "brian2.units.allunits.Msecond",
    "brian2.units.allunits.Msecond2",
    "brian2.units.allunits.Msecond3",
    "brian2.units.allunits.Msiemens",
    "brian2.units.allunits.Msiemens2",
    "brian2.units.allunits.Msiemens3",
    "brian2.units.allunits.Msievert",
    "brian2.units.allunits.Msievert2",
    "brian2.units.allunits.Msievert3",
    "brian2.units.allunits.Msteradian",
    "brian2.units.allunits.Msteradian2",
    "brian2.units.allunits.Msteradian3",
    "brian2.units.allunits.Mtesla",
    "brian2.units.allunits.Mtesla2",
    "brian2.units.allunits.Mtesla3",
    "brian2.units.allunits.Mvolt",
    "brian2.units.allunits.Mvolt2",
    "brian2.units.allunits.Mvolt3",
    "brian2.units.allunits.Mwatt",
    "brian2.units.allunits.Mwatt2",
    "brian2.units.allunits.Mwatt3",
    "brian2.units.allunits.Mweber",
    "brian2.units.allunits.Mweber2",
    "brian2.units.allunits.Mweber3",
    "brian2.units.allunits.Pamp",
    "brian2.units.allunits.Pamp2",
    "brian2.units.allunits.Pamp3",
    "brian2.units.allunits.Pampere",
    "brian2.units.allunits.Pampere2",
    "brian2.units.allunits.Pampere3",
    "brian2.units.allunits.Pbecquerel",
    "brian2.units.allunits.Pbecquerel2",
    "brian2.units.allunits.Pbecquerel3",
    "brian2.units.allunits.Pcandle",
    "brian2.units.allunits.Pcandle2",
    "brian2.units.allunits.Pcandle3",
    "brian2.units.allunits.Pcoulomb",
    "brian2.units.allunits.Pcoulomb2",
    "brian2.units.allunits.Pcoulomb3",
    "brian2.units.allunits.Pfarad",
    "brian2.units.allunits.Pfarad2",
    "brian2.units.allunits.Pfarad3",
    "brian2.units.allunits.Pgram",
    "brian2.units.allunits.Pgram2",
    "brian2.units.allunits.Pgram3",
    "brian2.units.allunits.Pgramme",
    "brian2.units.allunits.Pgramme2",
    "brian2.units.allunits.Pgramme3",
    "brian2.units.allunits.Pgray",
    "brian2.units.allunits.Pgray2",
    "brian2.units.allunits.Pgray3",
    "brian2.units.allunits.Phenry",
    "brian2.units.allunits.Phenry2",
    "brian2.units.allunits.Phenry3",
    "brian2.units.allunits.Phertz",
    "brian2.units.allunits.Phertz2",
    "brian2.units.allunits.Phertz3",
    "brian2.units.allunits.Pjoule",
    "brian2.units.allunits.Pjoule2",
    "brian2.units.allunits.Pjoule3",
    "brian2.units.allunits.Pkatal",
    "brian2.units.allunits.Pkatal2",
    "brian2.units.allunits.Pkatal3",
    "brian2.units.allunits.Pliter",
    "brian2.units.allunits.Plitre",
    "brian2.units.allunits.Plumen",
    "brian2.units.allunits.Plumen2",
    "brian2.units.allunits.Plumen3",
    "brian2.units.allunits.Plux",
    "brian2.units.allunits.Plux2",
    "brian2.units.allunits.Plux3",
    "brian2.units.allunits.Pmeter",
    "brian2.units.allunits.Pmeter2",
    "brian2.units.allunits.Pmeter3",
    "brian2.units.allunits.Pmetre",
    "brian2.units.allunits.Pmetre2",
    "brian2.units.allunits.Pmetre3",
    "brian2.units.allunits.Pmol",
    "brian2.units.allunits.Pmol2",
    "brian2.units.allunits.Pmol3",
    "brian2.units.allunits.Pmolar",
    "brian2.units.allunits.Pmolar2",
    "brian2.units.allunits.Pmolar3",
    "brian2.units.allunits.Pmole",
    "brian2.units.allunits.Pmole2",
    "brian2.units.allunits.Pmole3",
    "brian2.units.allunits.Pnewton",
    "brian2.units.allunits.Pnewton2",
    "brian2.units.allunits.Pnewton3",
    "brian2.units.allunits.Pohm",
    "brian2.units.allunits.Pohm2",
    "brian2.units.allunits.Pohm3",
    "brian2.units.allunits.Ppascal",
    "brian2.units.allunits.Ppascal2",
    "brian2.units.allunits.Ppascal3",
    "brian2.units.allunits.Pradian",
    "brian2.units.allunits.Pradian2",
    "brian2.units.allunits.Pradian3",
    "brian2.units.allunits.Psecond",
    "brian2.units.allunits.Psecond2",
    "brian2.units.allunits.Psecond3",
    "brian2.units.allunits.Psiemens",
    "brian2.units.allunits.Psiemens2",
    "brian2.units.allunits.Psiemens3",
    "brian2.units.allunits.Psievert",
    "brian2.units.allunits.Psievert2",
    "brian2.units.allunits.Psievert3",
    "brian2.units.allunits.Psteradian",
    "brian2.units.allunits.Psteradian2",
    "brian2.units.allunits.Psteradian3",
    "brian2.units.allunits.Ptesla",
    "brian2.units.allunits.Ptesla2",
    "brian2.units.allunits.Ptesla3",
    "brian2.units.allunits.Pvolt",
    "brian2.units.allunits.Pvolt2",
    "brian2.units.allunits.Pvolt3",
    "brian2.units.allunits.Pwatt",
    "brian2.units.allunits.Pwatt2",
    "brian2.units.allunits.Pwatt3",
    "brian2.units.allunits.Pweber",
    "brian2.units.allunits.Pweber2",
    "brian2.units.allunits.Pweber3",
    "brian2.units.allunits.Tamp",
    "brian2.units.allunits.Tamp2",
    "brian2.units.allunits.Tamp3",
    "brian2.units.allunits.Tampere",
    "brian2.units.allunits.Tampere2",
    "brian2.units.allunits.Tampere3",
    "brian2.units.allunits.Tbecquerel",
    "brian2.units.allunits.Tbecquerel2",
    "brian2.units.allunits.Tbecquerel3",
    "brian2.units.allunits.Tcandle",
    "brian2.units.allunits.Tcandle2",
    "brian2.units.allunits.Tcandle3",
    "brian2.units.allunits.Tcoulomb",
    "brian2.units.allunits.Tcoulomb2",
    "brian2.units.allunits.Tcoulomb3",
    "brian2.units.allunits.Tfarad",
    "brian2.units.allunits.Tfarad2",
    "brian2.units.allunits.Tfarad3",
    "brian2.units.allunits.Tgram",
    "brian2.units.allunits.Tgram2",
    "brian2.units.allunits.Tgram3",
    "brian2.units.allunits.Tgramme",
    "brian2.units.allunits.Tgramme2",
    "brian2.units.allunits.Tgramme3",
    "brian2.units.allunits.Tgray",
    "brian2.units.allunits.Tgray2",
    "brian2.units.allunits.Tgray3",
    "brian2.units.allunits.Thenry",
    "brian2.units.allunits.Thenry2",
    "brian2.units.allunits.Thenry3",
    "brian2.units.allunits.Thertz",
    "brian2.units.allunits.Thertz2",
    "brian2.units.allunits.Thertz3",
    "brian2.units.allunits.Tjoule",
    "brian2.units.allunits.Tjoule2",
    "brian2.units.allunits.Tjoule3",
    "brian2.units.allunits.Tkatal",
    "brian2.units.allunits.Tkatal2",
    "brian2.units.allunits.Tkatal3",
    "brian2.units.allunits.Tliter",
    "brian2.units.allunits.Tlitre",
    "brian2.units.allunits.Tlumen",
    "brian2.units.allunits.Tlumen2",
    "brian2.units.allunits.Tlumen3",
    "brian2.units.allunits.Tlux",
    "brian2.units.allunits.Tlux2",
    "brian2.units.allunits.Tlux3",
    "brian2.units.allunits.Tmeter",
    "brian2.units.allunits.Tmeter2",
    "brian2.units.allunits.Tmeter3",
    "brian2.units.allunits.Tmetre",
    "brian2.units.allunits.Tmetre2",
    "brian2.units.allunits.Tmetre3",
    "brian2.units.allunits.Tmol",
    "brian2.units.allunits.Tmol2",
    "brian2.units.allunits.Tmol3",
    "brian2.units.allunits.Tmolar",
    "brian2.units.allunits.Tmolar2",
    "brian2.units.allunits.Tmolar3",
    "brian2.units.allunits.Tmole",
    "brian2.units.allunits.Tmole2",
    "brian2.units.allunits.Tmole3",
    "brian2.units.allunits.Tnewton",
    "brian2.units.allunits.Tnewton2",
    "brian2.units.allunits.Tnewton3",
    "brian2.units.allunits.Tohm",
    "brian2.units.allunits.Tohm2",
    "brian2.units.allunits.Tohm3",
    "brian2.units.allunits.Tpascal",
    "brian2.units.allunits.Tpascal2",
    "brian2.units.allunits.Tpascal3",
    "brian2.units.allunits.Tradian",
    "brian2.units.allunits.Tradian2",
    "brian2.units.allunits.Tradian3",
    "brian2.units.allunits.Tsecond",
    "brian2.units.allunits.Tsecond2",
    "brian2.units.allunits.Tsecond3",
    "brian2.units.allunits.Tsiemens",
    "brian2.units.allunits.Tsiemens2",
    "brian2.units.allunits.Tsiemens3",
    "brian2.units.allunits.Tsievert",
    "brian2.units.allunits.Tsievert2",
    "brian2.units.allunits.Tsievert3",
    "brian2.units.allunits.Tsteradian",
    "brian2.units.allunits.Tsteradian2",
    "brian2.units.allunits.Tsteradian3",
    "brian2.units.allunits.Ttesla",
    "brian2.units.allunits.Ttesla2",
    "brian2.units.allunits.Ttesla3",
    "brian2.units.allunits.Tvolt",
    "brian2.units.allunits.Tvolt2",
    "brian2.units.allunits.Tvolt3",
    "brian2.units.allunits.Twatt",
    "brian2.units.allunits.Twatt2",
    "brian2.units.allunits.Twatt3",
    "brian2.units.allunits.Tweber",
    "brian2.units.allunits.Tweber2",
    "brian2.units.allunits.Tweber3",
    "brian2.units.allunits.Yamp",
    "brian2.units.allunits.Yamp2",
    "brian2.units.allunits.Yamp3",
    "brian2.units.allunits.Yampere",
    "brian2.units.allunits.Yampere2",
    "brian2.units.allunits.Yampere3",
    "brian2.units.allunits.Ybecquerel",
    "brian2.units.allunits.Ybecquerel2",
    "brian2.units.allunits.Ybecquerel3",
    "brian2.units.allunits.Ycandle",
    "brian2.units.allunits.Ycandle2",
    "brian2.units.allunits.Ycandle3",
    "brian2.units.allunits.Ycoulomb",
    "brian2.units.allunits.Ycoulomb2",
    "brian2.units.allunits.Ycoulomb3",
    "brian2.units.allunits.Yfarad",
    "brian2.units.allunits.Yfarad2",
    "brian2.units.allunits.Yfarad3",
    "brian2.units.allunits.Ygram",
    "brian2.units.allunits.Ygram2",
    "brian2.units.allunits.Ygram3",
    "brian2.units.allunits.Ygramme",
    "brian2.units.allunits.Ygramme2",
    "brian2.units.allunits.Ygramme3",
    "brian2.units.allunits.Ygray",
    "brian2.units.allunits.Ygray2",
    "brian2.units.allunits.Ygray3",
    "brian2.units.allunits.Yhenry",
    "brian2.units.allunits.Yhenry2",
    "brian2.units.allunits.Yhenry3",
    "brian2.units.allunits.Yhertz",
    "brian2.units.allunits.Yhertz2",
    "brian2.units.allunits.Yhertz3",
    "brian2.units.allunits.Yjoule",
    "brian2.units.allunits.Yjoule2",
    "brian2.units.allunits.Yjoule3",
    "brian2.units.allunits.Ykatal",
    "brian2.units.allunits.Ykatal2",
    "brian2.units.allunits.Ykatal3",
    "brian2.units.allunits.Yliter",
    "brian2.units.allunits.Ylitre",
    "brian2.units.allunits.Ylumen",
    "brian2.units.allunits.Ylumen2",
    "brian2.units.allunits.Ylumen3",
    "brian2.units.allunits.Ylux",
    "brian2.units.allunits.Ylux2",
    "brian2.units.allunits.Ylux3",
    "brian2.units.allunits.Ymeter",
    "brian2.units.allunits.Ymeter2",
    "brian2.units.allunits.Ymeter3",
    "brian2.units.allunits.Ymetre",
    "brian2.units.allunits.Ymetre2",
    "brian2.units.allunits.Ymetre3",
    "brian2.units.allunits.Ymol",
    "brian2.units.allunits.Ymol2",
    "brian2.units.allunits.Ymol3",
    "brian2.units.allunits.Ymolar",
    "brian2.units.allunits.Ymolar2",
    "brian2.units.allunits.Ymolar3",
    "brian2.units.allunits.Ymole",
    "brian2.units.allunits.Ymole2",
    "brian2.units.allunits.Ymole3",
    "brian2.units.allunits.Ynewton",
    "brian2.units.allunits.Ynewton2",
    "brian2.units.allunits.Ynewton3",
    "brian2.units.allunits.Yohm",
    "brian2.units.allunits.Yohm2",
    "brian2.units.allunits.Yohm3",
    "brian2.units.allunits.Ypascal",
    "brian2.units.allunits.Ypascal2",
    "brian2.units.allunits.Ypascal3",
    "brian2.units.allunits.Yradian",
    "brian2.units.allunits.Yradian2",
    "brian2.units.allunits.Yradian3",
    "brian2.units.allunits.Ysecond",
    "brian2.units.allunits.Ysecond2",
    "brian2.units.allunits.Ysecond3",
    "brian2.units.allunits.Ysiemens",
    "brian2.units.allunits.Ysiemens2",
    "brian2.units.allunits.Ysiemens3",
    "brian2.units.allunits.Ysievert",
    "brian2.units.allunits.Ysievert2",
    "brian2.units.allunits.Ysievert3",
    "brian2.units.allunits.Ysteradian",
    "brian2.units.allunits.Ysteradian2",
    "brian2.units.allunits.Ysteradian3",
    "brian2.units.allunits.Ytesla",
    "brian2.units.allunits.Ytesla2",
    "brian2.units.allunits.Ytesla3",
    "brian2.units.allunits.Yvolt",
    "brian2.units.allunits.Yvolt2",
    "brian2.units.allunits.Yvolt3",
    "brian2.units.allunits.Ywatt",
    "brian2.units.allunits.Ywatt2",
    "brian2.units.allunits.Ywatt3",
    "brian2.units.allunits.Yweber",
    "brian2.units.allunits.Yweber2",
    "brian2.units.allunits.Yweber3",
    "brian2.units.allunits.Zamp",
    "brian2.units.allunits.Zamp2",
    "brian2.units.allunits.Zamp3",
    "brian2.units.allunits.Zampere",
    "brian2.units.allunits.Zampere2",
    "brian2.units.allunits.Zampere3",
    "brian2.units.allunits.Zbecquerel",
    "brian2.units.allunits.Zbecquerel2",
    "brian2.units.allunits.Zbecquerel3",
    "brian2.units.allunits.Zcandle",
    "brian2.units.allunits.Zcandle2",
    "brian2.units.allunits.Zcandle3",
    "brian2.units.allunits.Zcoulomb",
    "brian2.units.allunits.Zcoulomb2",
    "brian2.units.allunits.Zcoulomb3",
    "brian2.units.allunits.Zfarad",
    "brian2.units.allunits.Zfarad2",
    "brian2.units.allunits.Zfarad3",
    "brian2.units.allunits.Zgram",
    "brian2.units.allunits.Zgram2",
    "brian2.units.allunits.Zgram3",
    "brian2.units.allunits.Zgramme",
    "brian2.units.allunits.Zgramme2",
    "brian2.units.allunits.Zgramme3",
    "brian2.units.allunits.Zgray",
    "brian2.units.allunits.Zgray2",
    "brian2.units.allunits.Zgray3",
    "brian2.units.allunits.Zhenry",
    "brian2.units.allunits.Zhenry2",
    "brian2.units.allunits.Zhenry3",
    "brian2.units.allunits.Zhertz",
    "brian2.units.allunits.Zhertz2",
    "brian2.units.allunits.Zhertz3",
    "brian2.units.allunits.Zjoule",
    "brian2.units.allunits.Zjoule2",
    "brian2.units.allunits.Zjoule3",
    "brian2.units.allunits.Zkatal",
    "brian2.units.allunits.Zkatal2",
    "brian2.units.allunits.Zkatal3",
    "brian2.units.allunits.Zliter",
    "brian2.units.allunits.Zlitre",
    "brian2.units.allunits.Zlumen",
    "brian2.units.allunits.Zlumen2",
    "brian2.units.allunits.Zlumen3",
    "brian2.units.allunits.Zlux",
    "brian2.units.allunits.Zlux2",
    "brian2.units.allunits.Zlux3",
    "brian2.units.allunits.Zmeter",
    "brian2.units.allunits.Zmeter2",
    "brian2.units.allunits.Zmeter3",
    "brian2.units.allunits.Zmetre",
    "brian2.units.allunits.Zmetre2",
    "brian2.units.allunits.Zmetre3",
    "brian2.units.allunits.Zmol",
    "brian2.units.allunits.Zmol2",
    "brian2.units.allunits.Zmol3",
    "brian2.units.allunits.Zmolar",
    "brian2.units.allunits.Zmolar2",
    "brian2.units.allunits.Zmolar3",
    "brian2.units.allunits.Zmole",
    "brian2.units.allunits.Zmole2",
    "brian2.units.allunits.Zmole3",
    "brian2.units.allunits.Znewton",
    "brian2.units.allunits.Znewton2",
    "brian2.units.allunits.Znewton3",
    "brian2.units.allunits.Zohm",
    "brian2.units.allunits.Zohm2",
    "brian2.units.allunits.Zohm3",
    "brian2.units.allunits.Zpascal",
    "brian2.units.allunits.Zpascal2",
    "brian2.units.allunits.Zpascal3",
    "brian2.units.allunits.Zradian",
    "brian2.units.allunits.Zradian2",
    "brian2.units.allunits.Zradian3",
    "brian2.units.allunits.Zsecond",
    "brian2.units.allunits.Zsecond2",
    "brian2.units.allunits.Zsecond3",
    "brian2.units.allunits.Zsiemens",
    "brian2.units.allunits.Zsiemens2",
    "brian2.units.allunits.Zsiemens3",
    "brian2.units.allunits.Zsievert",
    "brian2.units.allunits.Zsievert2",
    "brian2.units.allunits.Zsievert3",
    "brian2.units.allunits.Zsteradian",
    "brian2.units.allunits.Zsteradian2",
    "brian2.units.allunits.Zsteradian3",
    "brian2.units.allunits.Ztesla",
    "brian2.units.allunits.Ztesla2",
    "brian2.units.allunits.Ztesla3",
    "brian2.units.allunits.Zvolt",
    "brian2.units.allunits.Zvolt2",
    "brian2.units.allunits.Zvolt3",
    "brian2.units.allunits.Zwatt",
    "brian2.units.allunits.Zwatt2",
    "brian2.units.allunits.Zwatt3",
    "brian2.units.allunits.Zweber",
    "brian2.units.allunits.Zweber2",
    "brian2.units.allunits.Zweber3",
    "brian2.units.allunits._Celsius",
    "brian2.units.allunits.aamp",
    "brian2.units.allunits.aamp2",
    "brian2.units.allunits.aamp3",
    "brian2.units.allunits.aampere",
    "brian2.units.allunits.aampere2",
    "brian2.units.allunits.aampere3",
    "brian2.units.allunits.abecquerel",
    "brian2.units.allunits.abecquerel2",
    "brian2.units.allunits.abecquerel3",
    "brian2.units.allunits.acandle",
    "brian2.units.allunits.acandle2",
    "brian2.units.allunits.acandle3",
    "brian2.units.allunits.acoulomb",
    "brian2.units.allunits.acoulomb2",
    "brian2.units.allunits.acoulomb3",
    "brian2.units.allunits.additional_units",
    "brian2.units.allunits.afarad",
    "brian2.units.allunits.afarad2",
    "brian2.units.allunits.afarad3",
    "brian2.units.allunits.agram",
    "brian2.units.allunits.agram2",
    "brian2.units.allunits.agram3",
    "brian2.units.allunits.agramme",
    "brian2.units.allunits.agramme2",
    "brian2.units.allunits.agramme3",
    "brian2.units.allunits.agray",
    "brian2.units.allunits.agray2",
    "brian2.units.allunits.agray3",
    "brian2.units.allunits.ahenry",
    "brian2.units.allunits.ahenry2",
    "brian2.units.allunits.ahenry3",
    "brian2.units.allunits.ahertz",
    "brian2.units.allunits.ahertz2",
    "brian2.units.allunits.ahertz3",
    "brian2.units.allunits.ajoule",
    "brian2.units.allunits.ajoule2",
    "brian2.units.allunits.ajoule3",
    "brian2.units.allunits.akatal",
    "brian2.units.allunits.akatal2",
    "brian2.units.allunits.akatal3",
    "brian2.units.allunits.aliter",
    "brian2.units.allunits.alitre",
    "brian2.units.allunits.alumen",
    "brian2.units.allunits.alumen2",
    "brian2.units.allunits.alumen3",
    "brian2.units.allunits.alux",
    "brian2.units.allunits.alux2",
    "brian2.units.allunits.alux3",
    "brian2.units.allunits.ameter",
    "brian2.units.allunits.ameter2",
    "brian2.units.allunits.ameter3",
    "brian2.units.allunits.ametre",
    "brian2.units.allunits.ametre2",
    "brian2.units.allunits.ametre3",
    "brian2.units.allunits.amol",
    "brian2.units.allunits.amol2",
    "brian2.units.allunits.amol3",
    "brian2.units.allunits.amolar",
    "brian2.units.allunits.amolar2",
    "brian2.units.allunits.amolar3",
    "brian2.units.allunits.amole",
    "brian2.units.allunits.amole2",
    "brian2.units.allunits.amole3",
    "brian2.units.allunits.amp",
    "brian2.units.allunits.amp2",
    "brian2.units.allunits.amp3",
    "brian2.units.allunits.ampere",
    "brian2.units.allunits.ampere2",
    "brian2.units.allunits.ampere3",
    "brian2.units.allunits.anewton",
    "brian2.units.allunits.anewton2",
    "brian2.units.allunits.anewton3",
    "brian2.units.allunits.aohm",
    "brian2.units.allunits.aohm2",
    "brian2.units.allunits.aohm3",
    "brian2.units.allunits.apascal",
    "brian2.units.allunits.apascal2",
    "brian2.units.allunits.apascal3",
    "brian2.units.allunits.aradian",
    "brian2.units.allunits.aradian2",
    "brian2.units.allunits.aradian3",
    "brian2.units.allunits.asecond",
    "brian2.units.allunits.asecond2",
    "brian2.units.allunits.asecond3",
    "brian2.units.allunits.asiemens",
    "brian2.units.allunits.asiemens2",
    "brian2.units.allunits.asiemens3",
    "brian2.units.allunits.asievert",
    "brian2.units.allunits.asievert2",
    "brian2.units.allunits.asievert3",
    "brian2.units.allunits.asteradian",
    "brian2.units.allunits.asteradian2",
    "brian2.units.allunits.asteradian3",
    "brian2.units.allunits.atesla",
    "brian2.units.allunits.atesla2",
    "brian2.units.allunits.atesla3",
    "brian2.units.allunits.avolt",
    "brian2.units.allunits.avolt2",
    "brian2.units.allunits.avolt3",
    "brian2.units.allunits.awatt",
    "brian2.units.allunits.awatt2",
    "brian2.units.allunits.awatt3",
    "brian2.units.allunits.aweber",
    "brian2.units.allunits.aweber2",
    "brian2.units.allunits.aweber3",
    "brian2.units.allunits.base_units",
    "brian2.units.allunits.becquerel",
    "brian2.units.allunits.becquerel2",
    "brian2.units.allunits.becquerel3",
    "brian2.units.allunits.camp",
    "brian2.units.allunits.camp2",
    "brian2.units.allunits.camp3",
    "brian2.units.allunits.campere",
    "brian2.units.allunits.campere2",
    "brian2.units.allunits.campere3",
    "brian2.units.allunits.candle",
    "brian2.units.allunits.candle2",
    "brian2.units.allunits.candle3",
    "brian2.units.allunits.cbecquerel",
    "brian2.units.allunits.cbecquerel2",
    "brian2.units.allunits.cbecquerel3",
    "brian2.units.allunits.ccandle",
    "brian2.units.allunits.ccandle2",
    "brian2.units.allunits.ccandle3",
    "brian2.units.allunits.ccoulomb",
    "brian2.units.allunits.ccoulomb2",
    "brian2.units.allunits.ccoulomb3",
    "brian2.units.allunits.cfarad",
    "brian2.units.allunits.cfarad2",
    "brian2.units.allunits.cfarad3",
    "brian2.units.allunits.cgram",
    "brian2.units.allunits.cgram2",
    "brian2.units.allunits.cgram3",
    "brian2.units.allunits.cgramme",
    "brian2.units.allunits.cgramme2",
    "brian2.units.allunits.cgramme3",
    "brian2.units.allunits.cgray",
    "brian2.units.allunits.cgray2",
    "brian2.units.allunits.cgray3",
    "brian2.units.allunits.chenry",
    "brian2.units.allunits.chenry2",
    "brian2.units.allunits.chenry3",
    "brian2.units.allunits.chertz",
    "brian2.units.allunits.chertz2",
    "brian2.units.allunits.chertz3",
    "brian2.units.allunits.cjoule",
    "brian2.units.allunits.cjoule2",
    "brian2.units.allunits.cjoule3",
    "brian2.units.allunits.ckatal",
    "brian2.units.allunits.ckatal2",
    "brian2.units.allunits.ckatal3",
    "brian2.units.allunits.cliter",
    "brian2.units.allunits.clitre",
    "brian2.units.allunits.clumen",
    "brian2.units.allunits.clumen2",
    "brian2.units.allunits.clumen3",
    "brian2.units.allunits.clux",
    "brian2.units.allunits.clux2",
    "brian2.units.allunits.clux3",
    "brian2.units.allunits.cmeter",
    "brian2.units.allunits.cmeter2",
    "brian2.units.allunits.cmeter3",
    "brian2.units.allunits.cmetre",
    "brian2.units.allunits.cmetre2",
    "brian2.units.allunits.cmetre3",
    "brian2.units.allunits.cmol",
    "brian2.units.allunits.cmol2",
    "brian2.units.allunits.cmol3",
    "brian2.units.allunits.cmolar",
    "brian2.units.allunits.cmolar2",
    "brian2.units.allunits.cmolar3",
    "brian2.units.allunits.cmole",
    "brian2.units.allunits.cmole2",
    "brian2.units.allunits.cmole3",
    "brian2.units.allunits.cnewton",
    "brian2.units.allunits.cnewton2",
    "brian2.units.allunits.cnewton3",
    "brian2.units.allunits.cohm",
    "brian2.units.allunits.cohm2",
    "brian2.units.allunits.cohm3",
    "brian2.units.allunits.coulomb",
    "brian2.units.allunits.coulomb2",
    "brian2.units.allunits.coulomb3",
    "brian2.units.allunits.cpascal",
    "brian2.units.allunits.cpascal2",
    "brian2.units.allunits.cpascal3",
    "brian2.units.allunits.cradian",
    "brian2.units.allunits.cradian2",
    "brian2.units.allunits.cradian3",
    "brian2.units.allunits.csecond",
    "brian2.units.allunits.csecond2",
    "brian2.units.allunits.csecond3",
    "brian2.units.allunits.csiemens",
    "brian2.units.allunits.csiemens2",
    "brian2.units.allunits.csiemens3",
    "brian2.units.allunits.csievert",
    "brian2.units.allunits.csievert2",
    "brian2.units.allunits.csievert3",
    "brian2.units.allunits.csteradian",
    "brian2.units.allunits.csteradian2",
    "brian2.units.allunits.csteradian3",
    "brian2.units.allunits.ctesla",
    "brian2.units.allunits.ctesla2",
    "brian2.units.allunits.ctesla3",
    "brian2.units.allunits.cvolt",
    "brian2.units.allunits.cvolt2",
    "brian2.units.allunits.cvolt3",
    "brian2.units.allunits.cwatt",
    "brian2.units.allunits.cwatt2",
    "brian2.units.allunits.cwatt3",
    "brian2.units.allunits.cweber",
    "brian2.units.allunits.cweber2",
    "brian2.units.allunits.cweber3",
    "brian2.units.allunits.daamp",
    "brian2.units.allunits.daamp2",
    "brian2.units.allunits.daamp3",
    "brian2.units.allunits.daampere",
    "brian2.units.allunits.daampere2",
    "brian2.units.allunits.daampere3",
    "brian2.units.allunits.dabecquerel",
    "brian2.units.allunits.dabecquerel2",
    "brian2.units.allunits.dabecquerel3",
    "brian2.units.allunits.dacandle",
    "brian2.units.allunits.dacandle2",
    "brian2.units.allunits.dacandle3",
    "brian2.units.allunits.dacoulomb",
    "brian2.units.allunits.dacoulomb2",
    "brian2.units.allunits.dacoulomb3",
    "brian2.units.allunits.dafarad",
    "brian2.units.allunits.dafarad2",
    "brian2.units.allunits.dafarad3",
    "brian2.units.allunits.dagram",
    "brian2.units.allunits.dagram2",
    "brian2.units.allunits.dagram3",
    "brian2.units.allunits.dagramme",
    "brian2.units.allunits.dagramme2",
    "brian2.units.allunits.dagramme3",
    "brian2.units.allunits.dagray",
    "brian2.units.allunits.dagray2",
    "brian2.units.allunits.dagray3",
    "brian2.units.allunits.dahenry",
    "brian2.units.allunits.dahenry2",
    "brian2.units.allunits.dahenry3",
    "brian2.units.allunits.dahertz",
    "brian2.units.allunits.dahertz2",
    "brian2.units.allunits.dahertz3",
    "brian2.units.allunits.dajoule",
    "brian2.units.allunits.dajoule2",
    "brian2.units.allunits.dajoule3",
    "brian2.units.allunits.dakatal",
    "brian2.units.allunits.dakatal2",
    "brian2.units.allunits.dakatal3",
    "brian2.units.allunits.daliter",
    "brian2.units.allunits.dalitre",
    "brian2.units.allunits.dalumen",
    "brian2.units.allunits.dalumen2",
    "brian2.units.allunits.dalumen3",
    "brian2.units.allunits.dalux",
    "brian2.units.allunits.dalux2",
    "brian2.units.allunits.dalux3",
    "brian2.units.allunits.dameter",
    "brian2.units.allunits.dameter2",
    "brian2.units.allunits.dameter3",
    "brian2.units.allunits.dametre",
    "brian2.units.allunits.dametre2",
    "brian2.units.allunits.dametre3",
    "brian2.units.allunits.damol",
    "brian2.units.allunits.damol2",
    "brian2.units.allunits.damol3",
    "brian2.units.allunits.damolar",
    "brian2.units.allunits.damolar2",
    "brian2.units.allunits.damolar3",
    "brian2.units.allunits.damole",
    "brian2.units.allunits.damole2",
    "brian2.units.allunits.damole3",
    "brian2.units.allunits.damp",
    "brian2.units.allunits.damp2",
    "brian2.units.allunits.damp3",
    "brian2.units.allunits.dampere",
    "brian2.units.allunits.dampere2",
    "brian2.units.allunits.dampere3",
    "brian2.units.allunits.danewton",
    "brian2.units.allunits.danewton2",
    "brian2.units.allunits.danewton3",
    "brian2.units.allunits.daohm",
    "brian2.units.allunits.daohm2",
    "brian2.units.allunits.daohm3",
    "brian2.units.allunits.dapascal",
    "brian2.units.allunits.dapascal2",
    "brian2.units.allunits.dapascal3",
    "brian2.units.allunits.daradian",
    "brian2.units.allunits.daradian2",
    "brian2.units.allunits.daradian3",
    "brian2.units.allunits.dasecond",
    "brian2.units.allunits.dasecond2",
    "brian2.units.allunits.dasecond3",
    "brian2.units.allunits.dasiemens",
    "brian2.units.allunits.dasiemens2",
    "brian2.units.allunits.dasiemens3",
    "brian2.units.allunits.dasievert",
    "brian2.units.allunits.dasievert2",
    "brian2.units.allunits.dasievert3",
    "brian2.units.allunits.dasteradian",
    "brian2.units.allunits.dasteradian2",
    "brian2.units.allunits.dasteradian3",
    "brian2.units.allunits.datesla",
    "brian2.units.allunits.datesla2",
    "brian2.units.allunits.datesla3",
    "brian2.units.allunits.davolt",
    "brian2.units.allunits.davolt2",
    "brian2.units.allunits.davolt3",
    "brian2.units.allunits.dawatt",
    "brian2.units.allunits.dawatt2",
    "brian2.units.allunits.dawatt3",
    "brian2.units.allunits.daweber",
    "brian2.units.allunits.daweber2",
    "brian2.units.allunits.daweber3",
    "brian2.units.allunits.dbecquerel",
    "brian2.units.allunits.dbecquerel2",
    "brian2.units.allunits.dbecquerel3",
    "brian2.units.allunits.dcandle",
    "brian2.units.allunits.dcandle2",
    "brian2.units.allunits.dcandle3",
    "brian2.units.allunits.dcoulomb",
    "brian2.units.allunits.dcoulomb2",
    "brian2.units.allunits.dcoulomb3",
    "brian2.units.allunits.dfarad",
    "brian2.units.allunits.dfarad2",
    "brian2.units.allunits.dfarad3",
    "brian2.units.allunits.dgram",
    "brian2.units.allunits.dgram2",
    "brian2.units.allunits.dgram3",
    "brian2.units.allunits.dgramme",
    "brian2.units.allunits.dgramme2",
    "brian2.units.allunits.dgramme3",
    "brian2.units.allunits.dgray",
    "brian2.units.allunits.dgray2",
    "brian2.units.allunits.dgray3",
    "brian2.units.allunits.dhenry",
    "brian2.units.allunits.dhenry2",
    "brian2.units.allunits.dhenry3",
    "brian2.units.allunits.dhertz",
    "brian2.units.allunits.dhertz2",
    "brian2.units.allunits.dhertz3",
    "brian2.units.allunits.djoule",
    "brian2.units.allunits.djoule2",
    "brian2.units.allunits.djoule3",
    "brian2.units.allunits.dkatal",
    "brian2.units.allunits.dkatal2",
    "brian2.units.allunits.dkatal3",
    "brian2.units.allunits.dliter",
    "brian2.units.allunits.dlitre",
    "brian2.units.allunits.dlumen",
    "brian2.units.allunits.dlumen2",
    "brian2.units.allunits.dlumen3",
    "brian2.units.allunits.dlux",
    "brian2.units.allunits.dlux2",
    "brian2.units.allunits.dlux3",
    "brian2.units.allunits.dmeter",
    "brian2.units.allunits.dmeter2",
    "brian2.units.allunits.dmeter3",
    "brian2.units.allunits.dmetre",
    "brian2.units.allunits.dmetre2",
    "brian2.units.allunits.dmetre3",
    "brian2.units.allunits.dmol",
    "brian2.units.allunits.dmol2",
    "brian2.units.allunits.dmol3",
    "brian2.units.allunits.dmolar",
    "brian2.units.allunits.dmolar2",
    "brian2.units.allunits.dmolar3",
    "brian2.units.allunits.dmole",
    "brian2.units.allunits.dmole2",
    "brian2.units.allunits.dmole3",
    "brian2.units.allunits.dnewton",
    "brian2.units.allunits.dnewton2",
    "brian2.units.allunits.dnewton3",
    "brian2.units.allunits.dohm",
    "brian2.units.allunits.dohm2",
    "brian2.units.allunits.dohm3",
    "brian2.units.allunits.dpascal",
    "brian2.units.allunits.dpascal2",
    "brian2.units.allunits.dpascal3",
    "brian2.units.allunits.dradian",
    "brian2.units.allunits.dradian2",
    "brian2.units.allunits.dradian3",
    "brian2.units.allunits.dsecond",
    "brian2.units.allunits.dsecond2",
    "brian2.units.allunits.dsecond3",
    "brian2.units.allunits.dsiemens",
    "brian2.units.allunits.dsiemens2",
    "brian2.units.allunits.dsiemens3",
    "brian2.units.allunits.dsievert",
    "brian2.units.allunits.dsievert2",
    "brian2.units.allunits.dsievert3",
    "brian2.units.allunits.dsteradian",
    "brian2.units.allunits.dsteradian2",
    "brian2.units.allunits.dsteradian3",
    "brian2.units.allunits.dtesla",
    "brian2.units.allunits.dtesla2",
    "brian2.units.allunits.dtesla3",
    "brian2.units.allunits.dvolt",
    "brian2.units.allunits.dvolt2",
    "brian2.units.allunits.dvolt3",
    "brian2.units.allunits.dwatt",
    "brian2.units.allunits.dwatt2",
    "brian2.units.allunits.dwatt3",
    "brian2.units.allunits.dweber",
    "brian2.units.allunits.dweber2",
    "brian2.units.allunits.dweber3",
    "brian2.units.allunits.famp",
    "brian2.units.allunits.famp2",
    "brian2.units.allunits.famp3",
    "brian2.units.allunits.fampere",
    "brian2.units.allunits.fampere2",
    "brian2.units.allunits.fampere3",
    "brian2.units.allunits.farad",
    "brian2.units.allunits.farad2",
    "brian2.units.allunits.farad3",
    "brian2.units.allunits.fbecquerel",
    "brian2.units.allunits.fbecquerel2",
    "brian2.units.allunits.fbecquerel3",
    "brian2.units.allunits.fcandle",
    "brian2.units.allunits.fcandle2",
    "brian2.units.allunits.fcandle3",
    "brian2.units.allunits.fcoulomb",
    "brian2.units.allunits.fcoulomb2",
    "brian2.units.allunits.fcoulomb3",
    "brian2.units.allunits.ffarad",
    "brian2.units.allunits.ffarad2",
    "brian2.units.allunits.ffarad3",
    "brian2.units.allunits.fgram",
    "brian2.units.allunits.fgram2",
    "brian2.units.allunits.fgram3",
    "brian2.units.allunits.fgramme",
    "brian2.units.allunits.fgramme2",
    "brian2.units.allunits.fgramme3",
    "brian2.units.allunits.fgray",
    "brian2.units.allunits.fgray2",
    "brian2.units.allunits.fgray3",
    "brian2.units.allunits.fhenry",
    "brian2.units.allunits.fhenry2",
    "brian2.units.allunits.fhenry3",
    "brian2.units.allunits.fhertz",
    "brian2.units.allunits.fhertz2",
    "brian2.units.allunits.fhertz3",
    "brian2.units.allunits.fjoule",
    "brian2.units.allunits.fjoule2",
    "brian2.units.allunits.fjoule3",
    "brian2.units.allunits.fkatal",
    "brian2.units.allunits.fkatal2",
    "brian2.units.allunits.fkatal3",
    "brian2.units.allunits.fliter",
    "brian2.units.allunits.flitre",
    "brian2.units.allunits.flumen",
    "brian2.units.allunits.flumen2",
    "brian2.units.allunits.flumen3",
    "brian2.units.allunits.flux",
    "brian2.units.allunits.flux2",
    "brian2.units.allunits.flux3",
    "brian2.units.allunits.fmeter",
    "brian2.units.allunits.fmeter2",
    "brian2.units.allunits.fmeter3",
    "brian2.units.allunits.fmetre",
    "brian2.units.allunits.fmetre2",
    "brian2.units.allunits.fmetre3",
    "brian2.units.allunits.fmol",
    "brian2.units.allunits.fmol2",
    "brian2.units.allunits.fmol3",
    "brian2.units.allunits.fmolar",
    "brian2.units.allunits.fmolar2",
    "brian2.units.allunits.fmolar3",
    "brian2.units.allunits.fmole",
    "brian2.units.allunits.fmole2",
    "brian2.units.allunits.fmole3",
    "brian2.units.allunits.fnewton",
    "brian2.units.allunits.fnewton2",
    "brian2.units.allunits.fnewton3",
    "brian2.units.allunits.fohm",
    "brian2.units.allunits.fohm2",
    "brian2.units.allunits.fohm3",
    "brian2.units.allunits.fpascal",
    "brian2.units.allunits.fpascal2",
    "brian2.units.allunits.fpascal3",
    "brian2.units.allunits.fradian",
    "brian2.units.allunits.fradian2",
    "brian2.units.allunits.fradian3",
    "brian2.units.allunits.fsecond",
    "brian2.units.allunits.fsecond2",
    "brian2.units.allunits.fsecond3",
    "brian2.units.allunits.fsiemens",
    "brian2.units.allunits.fsiemens2",
    "brian2.units.allunits.fsiemens3",
    "brian2.units.allunits.fsievert",
    "brian2.units.allunits.fsievert2",
    "brian2.units.allunits.fsievert3",
    "brian2.units.allunits.fsteradian",
    "brian2.units.allunits.fsteradian2",
    "brian2.units.allunits.fsteradian3",
    "brian2.units.allunits.ftesla",
    "brian2.units.allunits.ftesla2",
    "brian2.units.allunits.ftesla3",
    "brian2.units.allunits.fvolt",
    "brian2.units.allunits.fvolt2",
    "brian2.units.allunits.fvolt3",
    "brian2.units.allunits.fwatt",
    "brian2.units.allunits.fwatt2",
    "brian2.units.allunits.fwatt3",
    "brian2.units.allunits.fweber",
    "brian2.units.allunits.fweber2",
    "brian2.units.allunits.fweber3",
    "brian2.units.allunits.gram",
    "brian2.units.allunits.gram2",
    "brian2.units.allunits.gram3",
    "brian2.units.allunits.gramme",
    "brian2.units.allunits.gramme2",
    "brian2.units.allunits.gramme3",
    "brian2.units.allunits.gray",
    "brian2.units.allunits.gray2",
    "brian2.units.allunits.gray3",
    "brian2.units.allunits.hamp",
    "brian2.units.allunits.hamp2",
    "brian2.units.allunits.hamp3",
    "brian2.units.allunits.hampere",
    "brian2.units.allunits.hampere2",
    "brian2.units.allunits.hampere3",
    "brian2.units.allunits.hbecquerel",
    "brian2.units.allunits.hbecquerel2",
    "brian2.units.allunits.hbecquerel3",
    "brian2.units.allunits.hcandle",
    "brian2.units.allunits.hcandle2",
    "brian2.units.allunits.hcandle3",
    "brian2.units.allunits.hcoulomb",
    "brian2.units.allunits.hcoulomb2",
    "brian2.units.allunits.hcoulomb3",
    "brian2.units.allunits.henry",
    "brian2.units.allunits.henry2",
    "brian2.units.allunits.henry3",
    "brian2.units.allunits.hertz",
    "brian2.units.allunits.hertz2",
    "brian2.units.allunits.hertz3",
    "brian2.units.allunits.hfarad",
    "brian2.units.allunits.hfarad2",
    "brian2.units.allunits.hfarad3",
    "brian2.units.allunits.hgram",
    "brian2.units.allunits.hgram2",
    "brian2.units.allunits.hgram3",
    "brian2.units.allunits.hgramme",
    "brian2.units.allunits.hgramme2",
    "brian2.units.allunits.hgramme3",
    "brian2.units.allunits.hgray",
    "brian2.units.allunits.hgray2",
    "brian2.units.allunits.hgray3",
    "brian2.units.allunits.hhenry",
    "brian2.units.allunits.hhenry2",
    "brian2.units.allunits.hhenry3",
    "brian2.units.allunits.hhertz",
    "brian2.units.allunits.hhertz2",
    "brian2.units.allunits.hhertz3",
    "brian2.units.allunits.hjoule",
    "brian2.units.allunits.hjoule2",
    "brian2.units.allunits.hjoule3",
    "brian2.units.allunits.hkatal",
    "brian2.units.allunits.hkatal2",
    "brian2.units.allunits.hkatal3",
    "brian2.units.allunits.hliter",
    "brian2.units.allunits.hlitre",
    "brian2.units.allunits.hlumen",
    "brian2.units.allunits.hlumen2",
    "brian2.units.allunits.hlumen3",
    "brian2.units.allunits.hlux",
    "brian2.units.allunits.hlux2",
    "brian2.units.allunits.hlux3",
    "brian2.units.allunits.hmeter",
    "brian2.units.allunits.hmeter2",
    "brian2.units.allunits.hmeter3",
    "brian2.units.allunits.hmetre",
    "brian2.units.allunits.hmetre2",
    "brian2.units.allunits.hmetre3",
    "brian2.units.allunits.hmol",
    "brian2.units.allunits.hmol2",
    "brian2.units.allunits.hmol3",
    "brian2.units.allunits.hmolar",
    "brian2.units.allunits.hmolar2",
    "brian2.units.allunits.hmolar3",
    "brian2.units.allunits.hmole",
    "brian2.units.allunits.hmole2",
    "brian2.units.allunits.hmole3",
    "brian2.units.allunits.hnewton",
    "brian2.units.allunits.hnewton2",
    "brian2.units.allunits.hnewton3",
    "brian2.units.allunits.hohm",
    "brian2.units.allunits.hohm2",
    "brian2.units.allunits.hohm3",
    "brian2.units.allunits.hpascal",
    "brian2.units.allunits.hpascal2",
    "brian2.units.allunits.hpascal3",
    "brian2.units.allunits.hradian",
    "brian2.units.allunits.hradian2",
    "brian2.units.allunits.hradian3",
    "brian2.units.allunits.hsecond",
    "brian2.units.allunits.hsecond2",
    "brian2.units.allunits.hsecond3",
    "brian2.units.allunits.hsiemens",
    "brian2.units.allunits.hsiemens2",
    "brian2.units.allunits.hsiemens3",
    "brian2.units.allunits.hsievert",
    "brian2.units.allunits.hsievert2",
    "brian2.units.allunits.hsievert3",
    "brian2.units.allunits.hsteradian",
    "brian2.units.allunits.hsteradian2",
    "brian2.units.allunits.hsteradian3",
    "brian2.units.allunits.htesla",
    "brian2.units.allunits.htesla2",
    "brian2.units.allunits.htesla3",
    "brian2.units.allunits.hvolt",
    "brian2.units.allunits.hvolt2",
    "brian2.units.allunits.hvolt3",
    "brian2.units.allunits.hwatt",
    "brian2.units.allunits.hwatt2",
    "brian2.units.allunits.hwatt3",
    "brian2.units.allunits.hweber",
    "brian2.units.allunits.hweber2",
    "brian2.units.allunits.hweber3",
    "brian2.units.allunits.itertools",
    "brian2.units.allunits.joule",
    "brian2.units.allunits.joule2",
    "brian2.units.allunits.joule3",
    "brian2.units.allunits.kamp",
    "brian2.units.allunits.kamp2",
    "brian2.units.allunits.kamp3",
    "brian2.units.allunits.kampere",
    "brian2.units.allunits.kampere2",
    "brian2.units.allunits.kampere3",
    "brian2.units.allunits.katal",
    "brian2.units.allunits.katal2",
    "brian2.units.allunits.katal3",
    "brian2.units.allunits.kbecquerel",
    "brian2.units.allunits.kbecquerel2",
    "brian2.units.allunits.kbecquerel3",
    "brian2.units.allunits.kcandle",
    "brian2.units.allunits.kcandle2",
    "brian2.units.allunits.kcandle3",
    "brian2.units.allunits.kcoulomb",
    "brian2.units.allunits.kcoulomb2",
    "brian2.units.allunits.kcoulomb3",
    "brian2.units.allunits.kelvin",
    "brian2.units.allunits.kelvin2",
    "brian2.units.allunits.kelvin3",
    "brian2.units.allunits.kfarad",
    "brian2.units.allunits.kfarad2",
    "brian2.units.allunits.kfarad3",
    "brian2.units.allunits.kgram",
    "brian2.units.allunits.kgram2",
    "brian2.units.allunits.kgram3",
    "brian2.units.allunits.kgramme",
    "brian2.units.allunits.kgramme2",
    "brian2.units.allunits.kgramme3",
    "brian2.units.allunits.kgray",
    "brian2.units.allunits.kgray2",
    "brian2.units.allunits.kgray3",
    "brian2.units.allunits.khenry",
    "brian2.units.allunits.khenry2",
    "brian2.units.allunits.khenry3",
    "brian2.units.allunits.khertz",
    "brian2.units.allunits.khertz2",
    "brian2.units.allunits.khertz3",
    "brian2.units.allunits.kilogram",
    "brian2.units.allunits.kilogram2",
    "brian2.units.allunits.kilogram3",
    "brian2.units.allunits.kilogramme",
    "brian2.units.allunits.kilogramme2",
    "brian2.units.allunits.kilogramme3",
    "brian2.units.allunits.kjoule",
    "brian2.units.allunits.kjoule2",
    "brian2.units.allunits.kjoule3",
    "brian2.units.allunits.kkatal",
    "brian2.units.allunits.kkatal2",
    "brian2.units.allunits.kkatal3",
    "brian2.units.allunits.kliter",
    "brian2.units.allunits.klitre",
    "brian2.units.allunits.klumen",
    "brian2.units.allunits.klumen2",
    "brian2.units.allunits.klumen3",
    "brian2.units.allunits.klux",
    "brian2.units.allunits.klux2",
    "brian2.units.allunits.klux3",
    "brian2.units.allunits.kmeter",
    "brian2.units.allunits.kmeter2",
    "brian2.units.allunits.kmeter3",
    "brian2.units.allunits.kmetre",
    "brian2.units.allunits.kmetre2",
    "brian2.units.allunits.kmetre3",
    "brian2.units.allunits.kmol",
    "brian2.units.allunits.kmol2",
    "brian2.units.allunits.kmol3",
    "brian2.units.allunits.kmolar",
    "brian2.units.allunits.kmolar2",
    "brian2.units.allunits.kmolar3",
    "brian2.units.allunits.kmole",
    "brian2.units.allunits.kmole2",
    "brian2.units.allunits.kmole3",
    "brian2.units.allunits.knewton",
    "brian2.units.allunits.knewton2",
    "brian2.units.allunits.knewton3",
    "brian2.units.allunits.kohm",
    "brian2.units.allunits.kohm2",
    "brian2.units.allunits.kohm3",
    "brian2.units.allunits.kpascal",
    "brian2.units.allunits.kpascal2",
    "brian2.units.allunits.kpascal3",
    "brian2.units.allunits.kradian",
    "brian2.units.allunits.kradian2",
    "brian2.units.allunits.kradian3",
    "brian2.units.allunits.ksecond",
    "brian2.units.allunits.ksecond2",
    "brian2.units.allunits.ksecond3",
    "brian2.units.allunits.ksiemens",
    "brian2.units.allunits.ksiemens2",
    "brian2.units.allunits.ksiemens3",
    "brian2.units.allunits.ksievert",
    "brian2.units.allunits.ksievert2",
    "brian2.units.allunits.ksievert3",
    "brian2.units.allunits.ksteradian",
    "brian2.units.allunits.ksteradian2",
    "brian2.units.allunits.ksteradian3",
    "brian2.units.allunits.ktesla",
    "brian2.units.allunits.ktesla2",
    "brian2.units.allunits.ktesla3",
    "brian2.units.allunits.kvolt",
    "brian2.units.allunits.kvolt2",
    "brian2.units.allunits.kvolt3",
    "brian2.units.allunits.kwatt",
    "brian2.units.allunits.kwatt2",
    "brian2.units.allunits.kwatt3",
    "brian2.units.allunits.kweber",
    "brian2.units.allunits.kweber2",
    "brian2.units.allunits.kweber3",
    "brian2.units.allunits.liter",
    "brian2.units.allunits.litre",
    "brian2.units.allunits.lumen",
    "brian2.units.allunits.lumen2",
    "brian2.units.allunits.lumen3",
    "brian2.units.allunits.lux",
    "brian2.units.allunits.lux2",
    "brian2.units.allunits.lux3",
    "brian2.units.allunits.mamp",
    "brian2.units.allunits.mamp2",
    "brian2.units.allunits.mamp3",
    "brian2.units.allunits.mampere",
    "brian2.units.allunits.mampere2",
    "brian2.units.allunits.mampere3",
    "brian2.units.allunits.mbecquerel",
    "brian2.units.allunits.mbecquerel2",
    "brian2.units.allunits.mbecquerel3",
    "brian2.units.allunits.mcandle",
    "brian2.units.allunits.mcandle2",
    "brian2.units.allunits.mcandle3",
    "brian2.units.allunits.mcoulomb",
    "brian2.units.allunits.mcoulomb2",
    "brian2.units.allunits.mcoulomb3",
    "brian2.units.allunits.meter",
    "brian2.units.allunits.meter2",
    "brian2.units.allunits.meter3",
    "brian2.units.allunits.metre",
    "brian2.units.allunits.metre2",
    "brian2.units.allunits.metre3",
    "brian2.units.allunits.mfarad",
    "brian2.units.allunits.mfarad2",
    "brian2.units.allunits.mfarad3",
    "brian2.units.allunits.mgram",
    "brian2.units.allunits.mgram2",
    "brian2.units.allunits.mgram3",
    "brian2.units.allunits.mgramme",
    "brian2.units.allunits.mgramme2",
    "brian2.units.allunits.mgramme3",
    "brian2.units.allunits.mgray",
    "brian2.units.allunits.mgray2",
    "brian2.units.allunits.mgray3",
    "brian2.units.allunits.mhenry",
    "brian2.units.allunits.mhenry2",
    "brian2.units.allunits.mhenry3",
    "brian2.units.allunits.mhertz",
    "brian2.units.allunits.mhertz2",
    "brian2.units.allunits.mhertz3",
    "brian2.units.allunits.mjoule",
    "brian2.units.allunits.mjoule2",
    "brian2.units.allunits.mjoule3",
    "brian2.units.allunits.mkatal",
    "brian2.units.allunits.mkatal2",
    "brian2.units.allunits.mkatal3",
    "brian2.units.allunits.mliter",
    "brian2.units.allunits.mlitre",
    "brian2.units.allunits.mlumen",
    "brian2.units.allunits.mlumen2",
    "brian2.units.allunits.mlumen3",
    "brian2.units.allunits.mlux",
    "brian2.units.allunits.mlux2",
    "brian2.units.allunits.mlux3",
    "brian2.units.allunits.mmeter",
    "brian2.units.allunits.mmeter2",
    "brian2.units.allunits.mmeter3",
    "brian2.units.allunits.mmetre",
    "brian2.units.allunits.mmetre2",
    "brian2.units.allunits.mmetre3",
    "brian2.units.allunits.mmol",
    "brian2.units.allunits.mmol2",
    "brian2.units.allunits.mmol3",
    "brian2.units.allunits.mmolar",
    "brian2.units.allunits.mmolar2",
    "brian2.units.allunits.mmolar3",
    "brian2.units.allunits.mmole",
    "brian2.units.allunits.mmole2",
    "brian2.units.allunits.mmole3",
    "brian2.units.allunits.mnewton",
    "brian2.units.allunits.mnewton2",
    "brian2.units.allunits.mnewton3",
    "brian2.units.allunits.mohm",
    "brian2.units.allunits.mohm2",
    "brian2.units.allunits.mohm3",
    "brian2.units.allunits.mol",
    "brian2.units.allunits.mol2",
    "brian2.units.allunits.mol3",
    "brian2.units.allunits.molar",
    "brian2.units.allunits.molar2",
    "brian2.units.allunits.molar3",
    "brian2.units.allunits.mole",
    "brian2.units.allunits.mole2",
    "brian2.units.allunits.mole3",
    "brian2.units.allunits.mpascal",
    "brian2.units.allunits.mpascal2",
    "brian2.units.allunits.mpascal3",
    "brian2.units.allunits.mradian",
    "brian2.units.allunits.mradian2",
    "brian2.units.allunits.mradian3",
    "brian2.units.allunits.msecond",
    "brian2.units.allunits.msecond2",
    "brian2.units.allunits.msecond3",
    "brian2.units.allunits.msiemens",
    "brian2.units.allunits.msiemens2",
    "brian2.units.allunits.msiemens3",
    "brian2.units.allunits.msievert",
    "brian2.units.allunits.msievert2",
    "brian2.units.allunits.msievert3",
    "brian2.units.allunits.msteradian",
    "brian2.units.allunits.msteradian2",
    "brian2.units.allunits.msteradian3",
    "brian2.units.allunits.mtesla",
    "brian2.units.allunits.mtesla2",
    "brian2.units.allunits.mtesla3",
    "brian2.units.allunits.mvolt",
    "brian2.units.allunits.mvolt2",
    "brian2.units.allunits.mvolt3",
    "brian2.units.allunits.mwatt",
    "brian2.units.allunits.mwatt2",
    "brian2.units.allunits.mwatt3",
    "brian2.units.allunits.mweber",
    "brian2.units.allunits.mweber2",
    "brian2.units.allunits.mweber3",
    "brian2.units.allunits.namp",
    "brian2.units.allunits.namp2",
    "brian2.units.allunits.namp3",
    "brian2.units.allunits.nampere",
    "brian2.units.allunits.nampere2",
    "brian2.units.allunits.nampere3",
    "brian2.units.allunits.nbecquerel",
    "brian2.units.allunits.nbecquerel2",
    "brian2.units.allunits.nbecquerel3",
    "brian2.units.allunits.ncandle",
    "brian2.units.allunits.ncandle2",
    "brian2.units.allunits.ncandle3",
    "brian2.units.allunits.ncoulomb",
    "brian2.units.allunits.ncoulomb2",
    "brian2.units.allunits.ncoulomb3",
    "brian2.units.allunits.newton",
    "brian2.units.allunits.newton2",
    "brian2.units.allunits.newton3",
    "brian2.units.allunits.nfarad",
    "brian2.units.allunits.nfarad2",
    "brian2.units.allunits.nfarad3",
    "brian2.units.allunits.ngram",
    "brian2.units.allunits.ngram2",
    "brian2.units.allunits.ngram3",
    "brian2.units.allunits.ngramme",
    "brian2.units.allunits.ngramme2",
    "brian2.units.allunits.ngramme3",
    "brian2.units.allunits.ngray",
    "brian2.units.allunits.ngray2",
    "brian2.units.allunits.ngray3",
    "brian2.units.allunits.nhenry",
    "brian2.units.allunits.nhenry2",
    "brian2.units.allunits.nhenry3",
    "brian2.units.allunits.nhertz",
    "brian2.units.allunits.nhertz2",
    "brian2.units.allunits.nhertz3",
    "brian2.units.allunits.njoule",
    "brian2.units.allunits.njoule2",
    "brian2.units.allunits.njoule3",
    "brian2.units.allunits.nkatal",
    "brian2.units.allunits.nkatal2",
    "brian2.units.allunits.nkatal3",
    "brian2.units.allunits.nliter",
    "brian2.units.allunits.nlitre",
    "brian2.units.allunits.nlumen",
    "brian2.units.allunits.nlumen2",
    "brian2.units.allunits.nlumen3",
    "brian2.units.allunits.nlux",
    "brian2.units.allunits.nlux2",
    "brian2.units.allunits.nlux3",
    "brian2.units.allunits.nmeter",
    "brian2.units.allunits.nmeter2",
    "brian2.units.allunits.nmeter3",
    "brian2.units.allunits.nmetre",
    "brian2.units.allunits.nmetre2",
    "brian2.units.allunits.nmetre3",
    "brian2.units.allunits.nmol",
    "brian2.units.allunits.nmol2",
    "brian2.units.allunits.nmol3",
    "brian2.units.allunits.nmolar",
    "brian2.units.allunits.nmolar2",
    "brian2.units.allunits.nmolar3",
    "brian2.units.allunits.nmole",
    "brian2.units.allunits.nmole2",
    "brian2.units.allunits.nmole3",
    "brian2.units.allunits.nnewton",
    "brian2.units.allunits.nnewton2",
    "brian2.units.allunits.nnewton3",
    "brian2.units.allunits.nohm",
    "brian2.units.allunits.nohm2",
    "brian2.units.allunits.nohm3",
    "brian2.units.allunits.npascal",
    "brian2.units.allunits.npascal2",
    "brian2.units.allunits.npascal3",
    "brian2.units.allunits.nradian",
    "brian2.units.allunits.nradian2",
    "brian2.units.allunits.nradian3",
    "brian2.units.allunits.nsecond",
    "brian2.units.allunits.nsecond2",
    "brian2.units.allunits.nsecond3",
    "brian2.units.allunits.nsiemens",
    "brian2.units.allunits.nsiemens2",
    "brian2.units.allunits.nsiemens3",
    "brian2.units.allunits.nsievert",
    "brian2.units.allunits.nsievert2",
    "brian2.units.allunits.nsievert3",
    "brian2.units.allunits.nsteradian",
    "brian2.units.allunits.nsteradian2",
    "brian2.units.allunits.nsteradian3",
    "brian2.units.allunits.ntesla",
    "brian2.units.allunits.ntesla2",
    "brian2.units.allunits.ntesla3",
    "brian2.units.allunits.nvolt",
    "brian2.units.allunits.nvolt2",
    "brian2.units.allunits.nvolt3",
    "brian2.units.allunits.nwatt",
    "brian2.units.allunits.nwatt2",
    "brian2.units.allunits.nwatt3",
    "brian2.units.allunits.nweber",
    "brian2.units.allunits.nweber2",
    "brian2.units.allunits.nweber3",
    "brian2.units.allunits.ohm",
    "brian2.units.allunits.ohm2",
    "brian2.units.allunits.ohm3",
    "brian2.units.allunits.pamp",
    "brian2.units.allunits.pamp2",
    "brian2.units.allunits.pamp3",
    "brian2.units.allunits.pampere",
    "brian2.units.allunits.pampere2",
    "brian2.units.allunits.pampere3",
    "brian2.units.allunits.pascal",
    "brian2.units.allunits.pascal2",
    "brian2.units.allunits.pascal3",
    "brian2.units.allunits.pbecquerel",
    "brian2.units.allunits.pbecquerel2",
    "brian2.units.allunits.pbecquerel3",
    "brian2.units.allunits.pcandle",
    "brian2.units.allunits.pcandle2",
    "brian2.units.allunits.pcandle3",
    "brian2.units.allunits.pcoulomb",
    "brian2.units.allunits.pcoulomb2",
    "brian2.units.allunits.pcoulomb3",
    "brian2.units.allunits.pfarad",
    "brian2.units.allunits.pfarad2",
    "brian2.units.allunits.pfarad3",
    "brian2.units.allunits.pgram",
    "brian2.units.allunits.pgram2",
    "brian2.units.allunits.pgram3",
    "brian2.units.allunits.pgramme",
    "brian2.units.allunits.pgramme2",
    "brian2.units.allunits.pgramme3",
    "brian2.units.allunits.pgray",
    "brian2.units.allunits.pgray2",
    "brian2.units.allunits.pgray3",
    "brian2.units.allunits.phenry",
    "brian2.units.allunits.phenry2",
    "brian2.units.allunits.phenry3",
    "brian2.units.allunits.phertz",
    "brian2.units.allunits.phertz2",
    "brian2.units.allunits.phertz3",
    "brian2.units.allunits.pjoule",
    "brian2.units.allunits.pjoule2",
    "brian2.units.allunits.pjoule3",
    "brian2.units.allunits.pkatal",
    "brian2.units.allunits.pkatal2",
    "brian2.units.allunits.pkatal3",
    "brian2.units.allunits.pliter",
    "brian2.units.allunits.plitre",
    "brian2.units.allunits.plumen",
    "brian2.units.allunits.plumen2",
    "brian2.units.allunits.plumen3",
    "brian2.units.allunits.plux",
    "brian2.units.allunits.plux2",
    "brian2.units.allunits.plux3",
    "brian2.units.allunits.pmeter",
    "brian2.units.allunits.pmeter2",
    "brian2.units.allunits.pmeter3",
    "brian2.units.allunits.pmetre",
    "brian2.units.allunits.pmetre2",
    "brian2.units.allunits.pmetre3",
    "brian2.units.allunits.pmol",
    "brian2.units.allunits.pmol2",
    "brian2.units.allunits.pmol3",
    "brian2.units.allunits.pmolar",
    "brian2.units.allunits.pmolar2",
    "brian2.units.allunits.pmolar3",
    "brian2.units.allunits.pmole",
    "brian2.units.allunits.pmole2",
    "brian2.units.allunits.pmole3",
    "brian2.units.allunits.pnewton",
    "brian2.units.allunits.pnewton2",
    "brian2.units.allunits.pnewton3",
    "brian2.units.allunits.pohm",
    "brian2.units.allunits.pohm2",
    "brian2.units.allunits.pohm3",
    "brian2.units.allunits.powered_units",
    "brian2.units.allunits.ppascal",
    "brian2.units.allunits.ppascal2",
    "brian2.units.allunits.ppascal3",
    "brian2.units.allunits.pradian",
    "brian2.units.allunits.pradian2",
    "brian2.units.allunits.pradian3",
    "brian2.units.allunits.psecond",
    "brian2.units.allunits.psecond2",
    "brian2.units.allunits.psecond3",
    "brian2.units.allunits.psiemens",
    "brian2.units.allunits.psiemens2",
    "brian2.units.allunits.psiemens3",
    "brian2.units.allunits.psievert",
    "brian2.units.allunits.psievert2",
    "brian2.units.allunits.psievert3",
    "brian2.units.allunits.psteradian",
    "brian2.units.allunits.psteradian2",
    "brian2.units.allunits.psteradian3",
    "brian2.units.allunits.ptesla",
    "brian2.units.allunits.ptesla2",
    "brian2.units.allunits.ptesla3",
    "brian2.units.allunits.pvolt",
    "brian2.units.allunits.pvolt2",
    "brian2.units.allunits.pvolt3",
    "brian2.units.allunits.pwatt",
    "brian2.units.allunits.pwatt2",
    "brian2.units.allunits.pwatt3",
    "brian2.units.allunits.pweber",
    "brian2.units.allunits.pweber2",
    "brian2.units.allunits.pweber3",
    "brian2.units.allunits.radian",
    "brian2.units.allunits.radian2",
    "brian2.units.allunits.radian3",
    "brian2.units.allunits.scaled_units",
    "brian2.units.allunits.second",
    "brian2.units.allunits.second2",
    "brian2.units.allunits.second3",
    "brian2.units.allunits.siemens",
    "brian2.units.allunits.siemens2",
    "brian2.units.allunits.siemens3",
    "brian2.units.allunits.sievert",
    "brian2.units.allunits.sievert2",
    "brian2.units.allunits.sievert3",
    "brian2.units.allunits.steradian",
    "brian2.units.allunits.steradian2",
    "brian2.units.allunits.steradian3",
    "brian2.units.allunits.tesla",
    "brian2.units.allunits.tesla2",
    "brian2.units.allunits.tesla3",
    "brian2.units.allunits.uamp",
    "brian2.units.allunits.uamp2",
    "brian2.units.allunits.uamp3",
    "brian2.units.allunits.uampere",
    "brian2.units.allunits.uampere2",
    "brian2.units.allunits.uampere3",
    "brian2.units.allunits.ubecquerel",
    "brian2.units.allunits.ubecquerel2",
    "brian2.units.allunits.ubecquerel3",
    "brian2.units.allunits.ucandle",
    "brian2.units.allunits.ucandle2",
    "brian2.units.allunits.ucandle3",
    "brian2.units.allunits.ucoulomb",
    "brian2.units.allunits.ucoulomb2",
    "brian2.units.allunits.ucoulomb3",
    "brian2.units.allunits.ufarad",
    "brian2.units.allunits.ufarad2",
    "brian2.units.allunits.ufarad3",
    "brian2.units.allunits.ugram",
    "brian2.units.allunits.ugram2",
    "brian2.units.allunits.ugram3",
    "brian2.units.allunits.ugramme",
    "brian2.units.allunits.ugramme2",
    "brian2.units.allunits.ugramme3",
    "brian2.units.allunits.ugray",
    "brian2.units.allunits.ugray2",
    "brian2.units.allunits.ugray3",
    "brian2.units.allunits.uhenry",
    "brian2.units.allunits.uhenry2",
    "brian2.units.allunits.uhenry3",
    "brian2.units.allunits.uhertz",
    "brian2.units.allunits.uhertz2",
    "brian2.units.allunits.uhertz3",
    "brian2.units.allunits.ujoule",
    "brian2.units.allunits.ujoule2",
    "brian2.units.allunits.ujoule3",
    "brian2.units.allunits.ukatal",
    "brian2.units.allunits.ukatal2",
    "brian2.units.allunits.ukatal3",
    "brian2.units.allunits.uliter",
    "brian2.units.allunits.ulitre",
    "brian2.units.allunits.ulumen",
    "brian2.units.allunits.ulumen2",
    "brian2.units.allunits.ulumen3",
    "brian2.units.allunits.ulux",
    "brian2.units.allunits.ulux2",
    "brian2.units.allunits.ulux3",
    "brian2.units.allunits.umeter",
    "brian2.units.allunits.umeter2",
    "brian2.units.allunits.umeter3",
    "brian2.units.allunits.umetre",
    "brian2.units.allunits.umetre2",
    "brian2.units.allunits.umetre3",
    "brian2.units.allunits.umol",
    "brian2.units.allunits.umol2",
    "brian2.units.allunits.umol3",
    "brian2.units.allunits.umolar",
    "brian2.units.allunits.umolar2",
    "brian2.units.allunits.umolar3",
    "brian2.units.allunits.umole",
    "brian2.units.allunits.umole2",
    "brian2.units.allunits.umole3",
    "brian2.units.allunits.unewton",
    "brian2.units.allunits.unewton2",
    "brian2.units.allunits.unewton3",
    "brian2.units.allunits.uohm",
    "brian2.units.allunits.uohm2",
    "brian2.units.allunits.uohm3",
    "brian2.units.allunits.upascal",
    "brian2.units.allunits.upascal2",
    "brian2.units.allunits.upascal3",
    "brian2.units.allunits.uradian",
    "brian2.units.allunits.uradian2",
    "brian2.units.allunits.uradian3",
    "brian2.units.allunits.usecond",
    "brian2.units.allunits.usecond2",
    "brian2.units.allunits.usecond3",
    "brian2.units.allunits.usiemens",
    "brian2.units.allunits.usiemens2",
    "brian2.units.allunits.usiemens3",
    "brian2.units.allunits.usievert",
    "brian2.units.allunits.usievert2",
    "brian2.units.allunits.usievert3",
    "brian2.units.allunits.usteradian",
    "brian2.units.allunits.usteradian2",
    "brian2.units.allunits.usteradian3",
    "brian2.units.allunits.utesla",
    "brian2.units.allunits.utesla2",
    "brian2.units.allunits.utesla3",
    "brian2.units.allunits.uvolt",
    "brian2.units.allunits.uvolt2",
    "brian2.units.allunits.uvolt3",
    "brian2.units.allunits.uwatt",
    "brian2.units.allunits.uwatt2",
    "brian2.units.allunits.uwatt3",
    "brian2.units.allunits.uweber",
    "brian2.units.allunits.uweber2",
    "brian2.units.allunits.uweber3",
    "brian2.units.allunits.volt",
    "brian2.units.allunits.volt2",
    "brian2.units.allunits.volt3",
    "brian2.units.allunits.watt",
    "brian2.units.allunits.watt2",
    "brian2.units.allunits.watt3",
    "brian2.units.allunits.weber",
    "brian2.units.allunits.weber2",
    "brian2.units.allunits.weber3",
    "brian2.units.allunits.yamp",
    "brian2.units.allunits.yamp2",
    "brian2.units.allunits.yamp3",
    "brian2.units.allunits.yampere",
    "brian2.units.allunits.yampere2",
    "brian2.units.allunits.yampere3",
    "brian2.units.allunits.ybecquerel",
    "brian2.units.allunits.ybecquerel2",
    "brian2.units.allunits.ybecquerel3",
    "brian2.units.allunits.ycandle",
    "brian2.units.allunits.ycandle2",
    "brian2.units.allunits.ycandle3",
    "brian2.units.allunits.ycoulomb",
    "brian2.units.allunits.ycoulomb2",
    "brian2.units.allunits.ycoulomb3",
    "brian2.units.allunits.yfarad",
    "brian2.units.allunits.yfarad2",
    "brian2.units.allunits.yfarad3",
    "brian2.units.allunits.ygram",
    "brian2.units.allunits.ygram2",
    "brian2.units.allunits.ygram3",
    "brian2.units.allunits.ygramme",
    "brian2.units.allunits.ygramme2",
    "brian2.units.allunits.ygramme3",
    "brian2.units.allunits.ygray",
    "brian2.units.allunits.ygray2",
    "brian2.units.allunits.ygray3",
    "brian2.units.allunits.yhenry",
    "brian2.units.allunits.yhenry2",
    "brian2.units.allunits.yhenry3",
    "brian2.units.allunits.yhertz",
    "brian2.units.allunits.yhertz2",
    "brian2.units.allunits.yhertz3",
    "brian2.units.allunits.yjoule",
    "brian2.units.allunits.yjoule2",
    "brian2.units.allunits.yjoule3",
    "brian2.units.allunits.ykatal",
    "brian2.units.allunits.ykatal2",
    "brian2.units.allunits.ykatal3",
    "brian2.units.allunits.yliter",
    "brian2.units.allunits.ylitre",
    "brian2.units.allunits.ylumen",
    "brian2.units.allunits.ylumen2",
    "brian2.units.allunits.ylumen3",
    "brian2.units.allunits.ylux",
    "brian2.units.allunits.ylux2",
    "brian2.units.allunits.ylux3",
    "brian2.units.allunits.ymeter",
    "brian2.units.allunits.ymeter2",
    "brian2.units.allunits.ymeter3",
    "brian2.units.allunits.ymetre",
    "brian2.units.allunits.ymetre2",
    "brian2.units.allunits.ymetre3",
    "brian2.units.allunits.ymol",
    "brian2.units.allunits.ymol2",
    "brian2.units.allunits.ymol3",
    "brian2.units.allunits.ymolar",
    "brian2.units.allunits.ymolar2",
    "brian2.units.allunits.ymolar3",
    "brian2.units.allunits.ymole",
    "brian2.units.allunits.ymole2",
    "brian2.units.allunits.ymole3",
    "brian2.units.allunits.ynewton",
    "brian2.units.allunits.ynewton2",
    "brian2.units.allunits.ynewton3",
    "brian2.units.allunits.yohm",
    "brian2.units.allunits.yohm2",
    "brian2.units.allunits.yohm3",
    "brian2.units.allunits.ypascal",
    "brian2.units.allunits.ypascal2",
    "brian2.units.allunits.ypascal3",
    "brian2.units.allunits.yradian",
    "brian2.units.allunits.yradian2",
    "brian2.units.allunits.yradian3",
    "brian2.units.allunits.ysecond",
    "brian2.units.allunits.ysecond2",
    "brian2.units.allunits.ysecond3",
    "brian2.units.allunits.ysiemens",
    "brian2.units.allunits.ysiemens2",
    "brian2.units.allunits.ysiemens3",
    "brian2.units.allunits.ysievert",
    "brian2.units.allunits.ysievert2",
    "brian2.units.allunits.ysievert3",
    "brian2.units.allunits.ysteradian",
    "brian2.units.allunits.ysteradian2",
    "brian2.units.allunits.ysteradian3",
    "brian2.units.allunits.ytesla",
    "brian2.units.allunits.ytesla2",
    "brian2.units.allunits.ytesla3",
    "brian2.units.allunits.yvolt",
    "brian2.units.allunits.yvolt2",
    "brian2.units.allunits.yvolt3",
    "brian2.units.allunits.ywatt",
    "brian2.units.allunits.ywatt2",
    "brian2.units.allunits.ywatt3",
    "brian2.units.allunits.yweber",
    "brian2.units.allunits.yweber2",
    "brian2.units.allunits.yweber3",
    "brian2.units.allunits.zamp",
    "brian2.units.allunits.zamp2",
    "brian2.units.allunits.zamp3",
    "brian2.units.allunits.zampere",
    "brian2.units.allunits.zampere2",
    "brian2.units.allunits.zampere3",
    "brian2.units.allunits.zbecquerel",
    "brian2.units.allunits.zbecquerel2",
    "brian2.units.allunits.zbecquerel3",
    "brian2.units.allunits.zcandle",
    "brian2.units.allunits.zcandle2",
    "brian2.units.allunits.zcandle3",
    "brian2.units.allunits.zcoulomb",
    "brian2.units.allunits.zcoulomb2",
    "brian2.units.allunits.zcoulomb3",
    "brian2.units.allunits.zfarad",
    "brian2.units.allunits.zfarad2",
    "brian2.units.allunits.zfarad3",
    "brian2.units.allunits.zgram",
    "brian2.units.allunits.zgram2",
    "brian2.units.allunits.zgram3",
    "brian2.units.allunits.zgramme",
    "brian2.units.allunits.zgramme2",
    "brian2.units.allunits.zgramme3",
    "brian2.units.allunits.zgray",
    "brian2.units.allunits.zgray2",
    "brian2.units.allunits.zgray3",
    "brian2.units.allunits.zhenry",
    "brian2.units.allunits.zhenry2",
    "brian2.units.allunits.zhenry3",
    "brian2.units.allunits.zhertz",
    "brian2.units.allunits.zhertz2",
    "brian2.units.allunits.zhertz3",
    "brian2.units.allunits.zjoule",
    "brian2.units.allunits.zjoule2",
    "brian2.units.allunits.zjoule3",
    "brian2.units.allunits.zkatal",
    "brian2.units.allunits.zkatal2",
    "brian2.units.allunits.zkatal3",
    "brian2.units.allunits.zliter",
    "brian2.units.allunits.zlitre",
    "brian2.units.allunits.zlumen",
    "brian2.units.allunits.zlumen2",
    "brian2.units.allunits.zlumen3",
    "brian2.units.allunits.zlux",
    "brian2.units.allunits.zlux2",
    "brian2.units.allunits.zlux3",
    "brian2.units.allunits.zmeter",
    "brian2.units.allunits.zmeter2",
    "brian2.units.allunits.zmeter3",
    "brian2.units.allunits.zmetre",
    "brian2.units.allunits.zmetre2",
    "brian2.units.allunits.zmetre3",
    "brian2.units.allunits.zmol",
    "brian2.units.allunits.zmol2",
    "brian2.units.allunits.zmol3",
    "brian2.units.allunits.zmolar",
    "brian2.units.allunits.zmolar2",
    "brian2.units.allunits.zmolar3",
    "brian2.units.allunits.zmole",
    "brian2.units.allunits.zmole2",
    "brian2.units.allunits.zmole3",
    "brian2.units.allunits.znewton",
    "brian2.units.allunits.znewton2",
    "brian2.units.allunits.znewton3",
    "brian2.units.allunits.zohm",
    "brian2.units.allunits.zohm2",
    "brian2.units.allunits.zohm3",
    "brian2.units.allunits.zpascal",
    "brian2.units.allunits.zpascal2",
    "brian2.units.allunits.zpascal3",
    "brian2.units.allunits.zradian",
    "brian2.units.allunits.zradian2",
    "brian2.units.allunits.zradian3",
    "brian2.units.allunits.zsecond",
    "brian2.units.allunits.zsecond2",
    "brian2.units.allunits.zsecond3",
    "brian2.units.allunits.zsiemens",
    "brian2.units.allunits.zsiemens2",
    "brian2.units.allunits.zsiemens3",
    "brian2.units.allunits.zsievert",
    "brian2.units.allunits.zsievert2",
    "brian2.units.allunits.zsievert3",
    "brian2.units.allunits.zsteradian",
    "brian2.units.allunits.zsteradian2",
    "brian2.units.allunits.zsteradian3",
    "brian2.units.allunits.ztesla",
    "brian2.units.allunits.ztesla2",
    "brian2.units.allunits.ztesla3",
    "brian2.units.allunits.zvolt",
    "brian2.units.allunits.zvolt2",
    "brian2.units.allunits.zvolt3",
    "brian2.units.allunits.zwatt",
    "brian2.units.allunits.zwatt2",
    "brian2.units.allunits.zwatt3",
    "brian2.units.allunits.zweber",
    "brian2.units.allunits.zweber2",
    "brian2.units.allunits.zweber3",
    "get_or_create_dimension",
    "str"
   ]
  },
  "type": "module"
 },
 "brian2.units.allunits.Eamp": {
  "data": {
   "lineno": 2212
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eamp2": {
  "data": {
   "lineno": 2998
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eamp3": {
  "data": {
   "lineno": 2999
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eampere": {
  "data": {
   "lineno": 2232
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eampere2": {
  "data": {
   "lineno": 3038
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eampere3": {
  "data": {
   "lineno": 3039
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ebecquerel": {
  "data": {
   "lineno": 2712
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ebecquerel2": {
  "data": {
   "lineno": 3998
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ebecquerel3": {
  "data": {
   "lineno": 3999
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ecandle": {
  "data": {
   "lineno": 2292
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ecandle2": {
  "data": {
   "lineno": 3158
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ecandle3": {
  "data": {
   "lineno": 3159
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ecoulomb": {
  "data": {
   "lineno": 2512
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ecoulomb2": {
  "data": {
   "lineno": 3598
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ecoulomb3": {
  "data": {
   "lineno": 3599
  },
  "type": "constant"
 },
 "brian2.units.allunits.Efarad": {
  "data": {
   "lineno": 2552
  },
  "type": "constant"
 },
 "brian2.units.allunits.Efarad2": {
  "data": {
   "lineno": 3678
  },
  "type": "constant"
 },
 "brian2.units.allunits.Efarad3": {
  "data": {
   "lineno": 3679
  },
  "type": "constant"
 },
 "brian2.units.allunits.Egram": {
  "data": {
   "lineno": 2312
  },
  "type": "constant"
 },
 "brian2.units.allunits.Egram2": {
  "data": {
   "lineno": 3198
  },
  "type": "constant"
 },
 "brian2.units.allunits.Egram3": {
  "data": {
   "lineno": 3199
  },
  "type": "constant"
 },
 "brian2.units.allunits.Egramme": {
  "data": {
   "lineno": 2332
  },
  "type": "constant"
 },
 "brian2.units.allunits.Egramme2": {
  "data": {
   "lineno": 3238
  },
  "type": "constant"
 },
 "brian2.units.allunits.Egramme3": {
  "data": {
   "lineno": 3239
  },
  "type": "constant"
 },
 "brian2.units.allunits.Egray": {
  "data": {
   "lineno": 2732
  },
  "type": "constant"
 },
 "brian2.units.allunits.Egray2": {
  "data": {
   "lineno": 4038
  },
  "type": "constant"
 },
 "brian2.units.allunits.Egray3": {
  "data": {
   "lineno": 4039
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ehenry": {
  "data": {
   "lineno": 2652
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ehenry2": {
  "data": {
   "lineno": 3878
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ehenry3": {
  "data": {
   "lineno": 3879
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ehertz": {
  "data": {
   "lineno": 2412
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ehertz2": {
  "data": {
   "lineno": 3398
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ehertz3": {
  "data": {
   "lineno": 3399
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ejoule": {
  "data": {
   "lineno": 2472
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ejoule2": {
  "data": {
   "lineno": 3518
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ejoule3": {
  "data": {
   "lineno": 3519
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ekatal": {
  "data": {
   "lineno": 2772
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ekatal2": {
  "data": {
   "lineno": 4118
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ekatal3": {
  "data": {
   "lineno": 4119
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eliter": {
  "data": {
   "lineno": 4144
  },
  "type": "constant"
 },
 "brian2.units.allunits.Elitre": {
  "data": {
   "lineno": 4165
  },
  "type": "constant"
 },
 "brian2.units.allunits.Elumen": {
  "data": {
   "lineno": 2672
  },
  "type": "constant"
 },
 "brian2.units.allunits.Elumen2": {
  "data": {
   "lineno": 3918
  },
  "type": "constant"
 },
 "brian2.units.allunits.Elumen3": {
  "data": {
   "lineno": 3919
  },
  "type": "constant"
 },
 "brian2.units.allunits.Elux": {
  "data": {
   "lineno": 2692
  },
  "type": "constant"
 },
 "brian2.units.allunits.Elux2": {
  "data": {
   "lineno": 3958
  },
  "type": "constant"
 },
 "brian2.units.allunits.Elux3": {
  "data": {
   "lineno": 3959
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emeter": {
  "data": {
   "lineno": 2172
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emeter2": {
  "data": {
   "lineno": 2918
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emeter3": {
  "data": {
   "lineno": 2919
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emetre": {
  "data": {
   "lineno": 2152
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emetre2": {
  "data": {
   "lineno": 2878
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emetre3": {
  "data": {
   "lineno": 2879
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emol": {
  "data": {
   "lineno": 2272
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emol2": {
  "data": {
   "lineno": 3118
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emol3": {
  "data": {
   "lineno": 3119
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emolar": {
  "data": {
   "lineno": 2352
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emolar2": {
  "data": {
   "lineno": 3278
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emolar3": {
  "data": {
   "lineno": 3279
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emole": {
  "data": {
   "lineno": 2252
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emole2": {
  "data": {
   "lineno": 3078
  },
  "type": "constant"
 },
 "brian2.units.allunits.Emole3": {
  "data": {
   "lineno": 3079
  },
  "type": "constant"
 },
 "brian2.units.allunits.Enewton": {
  "data": {
   "lineno": 2432
  },
  "type": "constant"
 },
 "brian2.units.allunits.Enewton2": {
  "data": {
   "lineno": 3438
  },
  "type": "constant"
 },
 "brian2.units.allunits.Enewton3": {
  "data": {
   "lineno": 3439
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eohm": {
  "data": {
   "lineno": 2572
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eohm2": {
  "data": {
   "lineno": 3718
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eohm3": {
  "data": {
   "lineno": 3719
  },
  "type": "constant"
 },
 "brian2.units.allunits.Epascal": {
  "data": {
   "lineno": 2452
  },
  "type": "constant"
 },
 "brian2.units.allunits.Epascal2": {
  "data": {
   "lineno": 3478
  },
  "type": "constant"
 },
 "brian2.units.allunits.Epascal3": {
  "data": {
   "lineno": 3479
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eradian": {
  "data": {
   "lineno": 2372
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eradian2": {
  "data": {
   "lineno": 3318
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eradian3": {
  "data": {
   "lineno": 3319
  },
  "type": "constant"
 },
 "brian2.units.allunits.Esecond": {
  "data": {
   "lineno": 2192
  },
  "type": "constant"
 },
 "brian2.units.allunits.Esecond2": {
  "data": {
   "lineno": 2958
  },
  "type": "constant"
 },
 "brian2.units.allunits.Esecond3": {
  "data": {
   "lineno": 2959
  },
  "type": "constant"
 },
 "brian2.units.allunits.Esiemens": {
  "data": {
   "lineno": 2592
  },
  "type": "constant"
 },
 "brian2.units.allunits.Esiemens2": {
  "data": {
   "lineno": 3758
  },
  "type": "constant"
 },
 "brian2.units.allunits.Esiemens3": {
  "data": {
   "lineno": 3759
  },
  "type": "constant"
 },
 "brian2.units.allunits.Esievert": {
  "data": {
   "lineno": 2752
  },
  "type": "constant"
 },
 "brian2.units.allunits.Esievert2": {
  "data": {
   "lineno": 4078
  },
  "type": "constant"
 },
 "brian2.units.allunits.Esievert3": {
  "data": {
   "lineno": 4079
  },
  "type": "constant"
 },
 "brian2.units.allunits.Esteradian": {
  "data": {
   "lineno": 2392
  },
  "type": "constant"
 },
 "brian2.units.allunits.Esteradian2": {
  "data": {
   "lineno": 3358
  },
  "type": "constant"
 },
 "brian2.units.allunits.Esteradian3": {
  "data": {
   "lineno": 3359
  },
  "type": "constant"
 },
 "brian2.units.allunits.Etesla": {
  "data": {
   "lineno": 2632
  },
  "type": "constant"
 },
 "brian2.units.allunits.Etesla2": {
  "data": {
   "lineno": 3838
  },
  "type": "constant"
 },
 "brian2.units.allunits.Etesla3": {
  "data": {
   "lineno": 3839
  },
  "type": "constant"
 },
 "brian2.units.allunits.Evolt": {
  "data": {
   "lineno": 2532
  },
  "type": "constant"
 },
 "brian2.units.allunits.Evolt2": {
  "data": {
   "lineno": 3638
  },
  "type": "constant"
 },
 "brian2.units.allunits.Evolt3": {
  "data": {
   "lineno": 3639
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ewatt": {
  "data": {
   "lineno": 2492
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ewatt2": {
  "data": {
   "lineno": 3558
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ewatt3": {
  "data": {
   "lineno": 3559
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eweber": {
  "data": {
   "lineno": 2612
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eweber2": {
  "data": {
   "lineno": 3798
  },
  "type": "constant"
 },
 "brian2.units.allunits.Eweber3": {
  "data": {
   "lineno": 3799
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gamp": {
  "data": {
   "lineno": 2202
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gamp2": {
  "data": {
   "lineno": 2978
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gamp3": {
  "data": {
   "lineno": 2979
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gampere": {
  "data": {
   "lineno": 2222
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gampere2": {
  "data": {
   "lineno": 3018
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gampere3": {
  "data": {
   "lineno": 3019
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gbecquerel": {
  "data": {
   "lineno": 2702
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gbecquerel2": {
  "data": {
   "lineno": 3978
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gbecquerel3": {
  "data": {
   "lineno": 3979
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gcandle": {
  "data": {
   "lineno": 2282
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gcandle2": {
  "data": {
   "lineno": 3138
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gcandle3": {
  "data": {
   "lineno": 3139
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gcoulomb": {
  "data": {
   "lineno": 2502
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gcoulomb2": {
  "data": {
   "lineno": 3578
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gcoulomb3": {
  "data": {
   "lineno": 3579
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gfarad": {
  "data": {
   "lineno": 2542
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gfarad2": {
  "data": {
   "lineno": 3658
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gfarad3": {
  "data": {
   "lineno": 3659
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ggram": {
  "data": {
   "lineno": 2302
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ggram2": {
  "data": {
   "lineno": 3178
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ggram3": {
  "data": {
   "lineno": 3179
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ggramme": {
  "data": {
   "lineno": 2322
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ggramme2": {
  "data": {
   "lineno": 3218
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ggramme3": {
  "data": {
   "lineno": 3219
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ggray": {
  "data": {
   "lineno": 2722
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ggray2": {
  "data": {
   "lineno": 4018
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ggray3": {
  "data": {
   "lineno": 4019
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ghenry": {
  "data": {
   "lineno": 2642
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ghenry2": {
  "data": {
   "lineno": 3858
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ghenry3": {
  "data": {
   "lineno": 3859
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ghertz": {
  "data": {
   "lineno": 2402
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ghertz2": {
  "data": {
   "lineno": 3378
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ghertz3": {
  "data": {
   "lineno": 3379
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gjoule": {
  "data": {
   "lineno": 2462
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gjoule2": {
  "data": {
   "lineno": 3498
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gjoule3": {
  "data": {
   "lineno": 3499
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gkatal": {
  "data": {
   "lineno": 2762
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gkatal2": {
  "data": {
   "lineno": 4098
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gkatal3": {
  "data": {
   "lineno": 4099
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gliter": {
  "data": {
   "lineno": 4134
  },
  "type": "constant"
 },
 "brian2.units.allunits.Glitre": {
  "data": {
   "lineno": 4155
  },
  "type": "constant"
 },
 "brian2.units.allunits.Glumen": {
  "data": {
   "lineno": 2662
  },
  "type": "constant"
 },
 "brian2.units.allunits.Glumen2": {
  "data": {
   "lineno": 3898
  },
  "type": "constant"
 },
 "brian2.units.allunits.Glumen3": {
  "data": {
   "lineno": 3899
  },
  "type": "constant"
 },
 "brian2.units.allunits.Glux": {
  "data": {
   "lineno": 2682
  },
  "type": "constant"
 },
 "brian2.units.allunits.Glux2": {
  "data": {
   "lineno": 3938
  },
  "type": "constant"
 },
 "brian2.units.allunits.Glux3": {
  "data": {
   "lineno": 3939
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmeter": {
  "data": {
   "lineno": 2162
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmeter2": {
  "data": {
   "lineno": 2898
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmeter3": {
  "data": {
   "lineno": 2899
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmetre": {
  "data": {
   "lineno": 2142
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmetre2": {
  "data": {
   "lineno": 2858
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmetre3": {
  "data": {
   "lineno": 2859
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmol": {
  "data": {
   "lineno": 2262
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmol2": {
  "data": {
   "lineno": 3098
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmol3": {
  "data": {
   "lineno": 3099
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmolar": {
  "data": {
   "lineno": 2342
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmolar2": {
  "data": {
   "lineno": 3258
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmolar3": {
  "data": {
   "lineno": 3259
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmole": {
  "data": {
   "lineno": 2242
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmole2": {
  "data": {
   "lineno": 3058
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gmole3": {
  "data": {
   "lineno": 3059
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gnewton": {
  "data": {
   "lineno": 2422
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gnewton2": {
  "data": {
   "lineno": 3418
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gnewton3": {
  "data": {
   "lineno": 3419
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gohm": {
  "data": {
   "lineno": 2562
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gohm2": {
  "data": {
   "lineno": 3698
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gohm3": {
  "data": {
   "lineno": 3699
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gpascal": {
  "data": {
   "lineno": 2442
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gpascal2": {
  "data": {
   "lineno": 3458
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gpascal3": {
  "data": {
   "lineno": 3459
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gradian": {
  "data": {
   "lineno": 2362
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gradian2": {
  "data": {
   "lineno": 3298
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gradian3": {
  "data": {
   "lineno": 3299
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gsecond": {
  "data": {
   "lineno": 2182
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gsecond2": {
  "data": {
   "lineno": 2938
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gsecond3": {
  "data": {
   "lineno": 2939
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gsiemens": {
  "data": {
   "lineno": 2582
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gsiemens2": {
  "data": {
   "lineno": 3738
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gsiemens3": {
  "data": {
   "lineno": 3739
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gsievert": {
  "data": {
   "lineno": 2742
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gsievert2": {
  "data": {
   "lineno": 4058
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gsievert3": {
  "data": {
   "lineno": 4059
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gsteradian": {
  "data": {
   "lineno": 2382
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gsteradian2": {
  "data": {
   "lineno": 3338
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gsteradian3": {
  "data": {
   "lineno": 3339
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gtesla": {
  "data": {
   "lineno": 2622
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gtesla2": {
  "data": {
   "lineno": 3818
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gtesla3": {
  "data": {
   "lineno": 3819
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gvolt": {
  "data": {
   "lineno": 2522
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gvolt2": {
  "data": {
   "lineno": 3618
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gvolt3": {
  "data": {
   "lineno": 3619
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gwatt": {
  "data": {
   "lineno": 2482
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gwatt2": {
  "data": {
   "lineno": 3538
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gwatt3": {
  "data": {
   "lineno": 3539
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gweber": {
  "data": {
   "lineno": 2602
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gweber2": {
  "data": {
   "lineno": 3778
  },
  "type": "constant"
 },
 "brian2.units.allunits.Gweber3": {
  "data": {
   "lineno": 3779
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mamp": {
  "data": {
   "lineno": 2214
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mamp2": {
  "data": {
   "lineno": 3002
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mamp3": {
  "data": {
   "lineno": 3003
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mampere": {
  "data": {
   "lineno": 2234
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mampere2": {
  "data": {
   "lineno": 3042
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mampere3": {
  "data": {
   "lineno": 3043
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mbecquerel": {
  "data": {
   "lineno": 2714
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mbecquerel2": {
  "data": {
   "lineno": 4002
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mbecquerel3": {
  "data": {
   "lineno": 4003
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mcandle": {
  "data": {
   "lineno": 2294
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mcandle2": {
  "data": {
   "lineno": 3162
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mcandle3": {
  "data": {
   "lineno": 3163
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mcoulomb": {
  "data": {
   "lineno": 2514
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mcoulomb2": {
  "data": {
   "lineno": 3602
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mcoulomb3": {
  "data": {
   "lineno": 3603
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mfarad": {
  "data": {
   "lineno": 2554
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mfarad2": {
  "data": {
   "lineno": 3682
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mfarad3": {
  "data": {
   "lineno": 3683
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mgram": {
  "data": {
   "lineno": 2314
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mgram2": {
  "data": {
   "lineno": 3202
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mgram3": {
  "data": {
   "lineno": 3203
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mgramme": {
  "data": {
   "lineno": 2334
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mgramme2": {
  "data": {
   "lineno": 3242
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mgramme3": {
  "data": {
   "lineno": 3243
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mgray": {
  "data": {
   "lineno": 2734
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mgray2": {
  "data": {
   "lineno": 4042
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mgray3": {
  "data": {
   "lineno": 4043
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mhenry": {
  "data": {
   "lineno": 2654
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mhenry2": {
  "data": {
   "lineno": 3882
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mhenry3": {
  "data": {
   "lineno": 3883
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mhertz": {
  "data": {
   "lineno": 2414
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mhertz2": {
  "data": {
   "lineno": 3402
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mhertz3": {
  "data": {
   "lineno": 3403
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mjoule": {
  "data": {
   "lineno": 2474
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mjoule2": {
  "data": {
   "lineno": 3522
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mjoule3": {
  "data": {
   "lineno": 3523
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mkatal": {
  "data": {
   "lineno": 2774
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mkatal2": {
  "data": {
   "lineno": 4122
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mkatal3": {
  "data": {
   "lineno": 4123
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mliter": {
  "data": {
   "lineno": 4146
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mlitre": {
  "data": {
   "lineno": 4167
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mlumen": {
  "data": {
   "lineno": 2674
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mlumen2": {
  "data": {
   "lineno": 3922
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mlumen3": {
  "data": {
   "lineno": 3923
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mlux": {
  "data": {
   "lineno": 2694
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mlux2": {
  "data": {
   "lineno": 3962
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mlux3": {
  "data": {
   "lineno": 3963
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmeter": {
  "data": {
   "lineno": 2174
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmeter2": {
  "data": {
   "lineno": 2922
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmeter3": {
  "data": {
   "lineno": 2923
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmetre": {
  "data": {
   "lineno": 2154
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmetre2": {
  "data": {
   "lineno": 2882
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmetre3": {
  "data": {
   "lineno": 2883
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmol": {
  "data": {
   "lineno": 2274
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmol2": {
  "data": {
   "lineno": 3122
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmol3": {
  "data": {
   "lineno": 3123
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmolar": {
  "data": {
   "lineno": 2354
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmolar2": {
  "data": {
   "lineno": 3282
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmolar3": {
  "data": {
   "lineno": 3283
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmole": {
  "data": {
   "lineno": 2254
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmole2": {
  "data": {
   "lineno": 3082
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mmole3": {
  "data": {
   "lineno": 3083
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mnewton": {
  "data": {
   "lineno": 2434
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mnewton2": {
  "data": {
   "lineno": 3442
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mnewton3": {
  "data": {
   "lineno": 3443
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mohm": {
  "data": {
   "lineno": 2574
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mohm2": {
  "data": {
   "lineno": 3722
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mohm3": {
  "data": {
   "lineno": 3723
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mpascal": {
  "data": {
   "lineno": 2454
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mpascal2": {
  "data": {
   "lineno": 3482
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mpascal3": {
  "data": {
   "lineno": 3483
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mradian": {
  "data": {
   "lineno": 2374
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mradian2": {
  "data": {
   "lineno": 3322
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mradian3": {
  "data": {
   "lineno": 3323
  },
  "type": "constant"
 },
 "brian2.units.allunits.Msecond": {
  "data": {
   "lineno": 2194
  },
  "type": "constant"
 },
 "brian2.units.allunits.Msecond2": {
  "data": {
   "lineno": 2962
  },
  "type": "constant"
 },
 "brian2.units.allunits.Msecond3": {
  "data": {
   "lineno": 2963
  },
  "type": "constant"
 },
 "brian2.units.allunits.Msiemens": {
  "data": {
   "lineno": 2594
  },
  "type": "constant"
 },
 "brian2.units.allunits.Msiemens2": {
  "data": {
   "lineno": 3762
  },
  "type": "constant"
 },
 "brian2.units.allunits.Msiemens3": {
  "data": {
   "lineno": 3763
  },
  "type": "constant"
 },
 "brian2.units.allunits.Msievert": {
  "data": {
   "lineno": 2754
  },
  "type": "constant"
 },
 "brian2.units.allunits.Msievert2": {
  "data": {
   "lineno": 4082
  },
  "type": "constant"
 },
 "brian2.units.allunits.Msievert3": {
  "data": {
   "lineno": 4083
  },
  "type": "constant"
 },
 "brian2.units.allunits.Msteradian": {
  "data": {
   "lineno": 2394
  },
  "type": "constant"
 },
 "brian2.units.allunits.Msteradian2": {
  "data": {
   "lineno": 3362
  },
  "type": "constant"
 },
 "brian2.units.allunits.Msteradian3": {
  "data": {
   "lineno": 3363
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mtesla": {
  "data": {
   "lineno": 2634
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mtesla2": {
  "data": {
   "lineno": 3842
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mtesla3": {
  "data": {
   "lineno": 3843
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mvolt": {
  "data": {
   "lineno": 2534
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mvolt2": {
  "data": {
   "lineno": 3642
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mvolt3": {
  "data": {
   "lineno": 3643
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mwatt": {
  "data": {
   "lineno": 2494
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mwatt2": {
  "data": {
   "lineno": 3562
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mwatt3": {
  "data": {
   "lineno": 3563
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mweber": {
  "data": {
   "lineno": 2614
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mweber2": {
  "data": {
   "lineno": 3802
  },
  "type": "constant"
 },
 "brian2.units.allunits.Mweber3": {
  "data": {
   "lineno": 3803
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pamp": {
  "data": {
   "lineno": 2200
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pamp2": {
  "data": {
   "lineno": 2974
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pamp3": {
  "data": {
   "lineno": 2975
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pampere": {
  "data": {
   "lineno": 2220
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pampere2": {
  "data": {
   "lineno": 3014
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pampere3": {
  "data": {
   "lineno": 3015
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pbecquerel": {
  "data": {
   "lineno": 2700
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pbecquerel2": {
  "data": {
   "lineno": 3974
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pbecquerel3": {
  "data": {
   "lineno": 3975
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pcandle": {
  "data": {
   "lineno": 2280
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pcandle2": {
  "data": {
   "lineno": 3134
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pcandle3": {
  "data": {
   "lineno": 3135
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pcoulomb": {
  "data": {
   "lineno": 2500
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pcoulomb2": {
  "data": {
   "lineno": 3574
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pcoulomb3": {
  "data": {
   "lineno": 3575
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pfarad": {
  "data": {
   "lineno": 2540
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pfarad2": {
  "data": {
   "lineno": 3654
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pfarad3": {
  "data": {
   "lineno": 3655
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pgram": {
  "data": {
   "lineno": 2300
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pgram2": {
  "data": {
   "lineno": 3174
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pgram3": {
  "data": {
   "lineno": 3175
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pgramme": {
  "data": {
   "lineno": 2320
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pgramme2": {
  "data": {
   "lineno": 3214
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pgramme3": {
  "data": {
   "lineno": 3215
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pgray": {
  "data": {
   "lineno": 2720
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pgray2": {
  "data": {
   "lineno": 4014
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pgray3": {
  "data": {
   "lineno": 4015
  },
  "type": "constant"
 },
 "brian2.units.allunits.Phenry": {
  "data": {
   "lineno": 2640
  },
  "type": "constant"
 },
 "brian2.units.allunits.Phenry2": {
  "data": {
   "lineno": 3854
  },
  "type": "constant"
 },
 "brian2.units.allunits.Phenry3": {
  "data": {
   "lineno": 3855
  },
  "type": "constant"
 },
 "brian2.units.allunits.Phertz": {
  "data": {
   "lineno": 2400
  },
  "type": "constant"
 },
 "brian2.units.allunits.Phertz2": {
  "data": {
   "lineno": 3374
  },
  "type": "constant"
 },
 "brian2.units.allunits.Phertz3": {
  "data": {
   "lineno": 3375
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pjoule": {
  "data": {
   "lineno": 2460
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pjoule2": {
  "data": {
   "lineno": 3494
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pjoule3": {
  "data": {
   "lineno": 3495
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pkatal": {
  "data": {
   "lineno": 2760
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pkatal2": {
  "data": {
   "lineno": 4094
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pkatal3": {
  "data": {
   "lineno": 4095
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pliter": {
  "data": {
   "lineno": 4132
  },
  "type": "constant"
 },
 "brian2.units.allunits.Plitre": {
  "data": {
   "lineno": 4153
  },
  "type": "constant"
 },
 "brian2.units.allunits.Plumen": {
  "data": {
   "lineno": 2660
  },
  "type": "constant"
 },
 "brian2.units.allunits.Plumen2": {
  "data": {
   "lineno": 3894
  },
  "type": "constant"
 },
 "brian2.units.allunits.Plumen3": {
  "data": {
   "lineno": 3895
  },
  "type": "constant"
 },
 "brian2.units.allunits.Plux": {
  "data": {
   "lineno": 2680
  },
  "type": "constant"
 },
 "brian2.units.allunits.Plux2": {
  "data": {
   "lineno": 3934
  },
  "type": "constant"
 },
 "brian2.units.allunits.Plux3": {
  "data": {
   "lineno": 3935
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmeter": {
  "data": {
   "lineno": 2160
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmeter2": {
  "data": {
   "lineno": 2894
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmeter3": {
  "data": {
   "lineno": 2895
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmetre": {
  "data": {
   "lineno": 2140
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmetre2": {
  "data": {
   "lineno": 2854
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmetre3": {
  "data": {
   "lineno": 2855
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmol": {
  "data": {
   "lineno": 2260
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmol2": {
  "data": {
   "lineno": 3094
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmol3": {
  "data": {
   "lineno": 3095
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmolar": {
  "data": {
   "lineno": 2340
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmolar2": {
  "data": {
   "lineno": 3254
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmolar3": {
  "data": {
   "lineno": 3255
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmole": {
  "data": {
   "lineno": 2240
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmole2": {
  "data": {
   "lineno": 3054
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pmole3": {
  "data": {
   "lineno": 3055
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pnewton": {
  "data": {
   "lineno": 2420
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pnewton2": {
  "data": {
   "lineno": 3414
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pnewton3": {
  "data": {
   "lineno": 3415
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pohm": {
  "data": {
   "lineno": 2560
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pohm2": {
  "data": {
   "lineno": 3694
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pohm3": {
  "data": {
   "lineno": 3695
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ppascal": {
  "data": {
   "lineno": 2440
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ppascal2": {
  "data": {
   "lineno": 3454
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ppascal3": {
  "data": {
   "lineno": 3455
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pradian": {
  "data": {
   "lineno": 2360
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pradian2": {
  "data": {
   "lineno": 3294
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pradian3": {
  "data": {
   "lineno": 3295
  },
  "type": "constant"
 },
 "brian2.units.allunits.Psecond": {
  "data": {
   "lineno": 2180
  },
  "type": "constant"
 },
 "brian2.units.allunits.Psecond2": {
  "data": {
   "lineno": 2934
  },
  "type": "constant"
 },
 "brian2.units.allunits.Psecond3": {
  "data": {
   "lineno": 2935
  },
  "type": "constant"
 },
 "brian2.units.allunits.Psiemens": {
  "data": {
   "lineno": 2580
  },
  "type": "constant"
 },
 "brian2.units.allunits.Psiemens2": {
  "data": {
   "lineno": 3734
  },
  "type": "constant"
 },
 "brian2.units.allunits.Psiemens3": {
  "data": {
   "lineno": 3735
  },
  "type": "constant"
 },
 "brian2.units.allunits.Psievert": {
  "data": {
   "lineno": 2740
  },
  "type": "constant"
 },
 "brian2.units.allunits.Psievert2": {
  "data": {
   "lineno": 4054
  },
  "type": "constant"
 },
 "brian2.units.allunits.Psievert3": {
  "data": {
   "lineno": 4055
  },
  "type": "constant"
 },
 "brian2.units.allunits.Psteradian": {
  "data": {
   "lineno": 2380
  },
  "type": "constant"
 },
 "brian2.units.allunits.Psteradian2": {
  "data": {
   "lineno": 3334
  },
  "type": "constant"
 },
 "brian2.units.allunits.Psteradian3": {
  "data": {
   "lineno": 3335
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ptesla": {
  "data": {
   "lineno": 2620
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ptesla2": {
  "data": {
   "lineno": 3814
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ptesla3": {
  "data": {
   "lineno": 3815
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pvolt": {
  "data": {
   "lineno": 2520
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pvolt2": {
  "data": {
   "lineno": 3614
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pvolt3": {
  "data": {
   "lineno": 3615
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pwatt": {
  "data": {
   "lineno": 2480
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pwatt2": {
  "data": {
   "lineno": 3534
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pwatt3": {
  "data": {
   "lineno": 3535
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pweber": {
  "data": {
   "lineno": 2600
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pweber2": {
  "data": {
   "lineno": 3774
  },
  "type": "constant"
 },
 "brian2.units.allunits.Pweber3": {
  "data": {
   "lineno": 3775
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tamp": {
  "data": {
   "lineno": 2210
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tamp2": {
  "data": {
   "lineno": 2994
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tamp3": {
  "data": {
   "lineno": 2995
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tampere": {
  "data": {
   "lineno": 2230
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tampere2": {
  "data": {
   "lineno": 3034
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tampere3": {
  "data": {
   "lineno": 3035
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tbecquerel": {
  "data": {
   "lineno": 2710
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tbecquerel2": {
  "data": {
   "lineno": 3994
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tbecquerel3": {
  "data": {
   "lineno": 3995
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tcandle": {
  "data": {
   "lineno": 2290
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tcandle2": {
  "data": {
   "lineno": 3154
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tcandle3": {
  "data": {
   "lineno": 3155
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tcoulomb": {
  "data": {
   "lineno": 2510
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tcoulomb2": {
  "data": {
   "lineno": 3594
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tcoulomb3": {
  "data": {
   "lineno": 3595
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tfarad": {
  "data": {
   "lineno": 2550
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tfarad2": {
  "data": {
   "lineno": 3674
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tfarad3": {
  "data": {
   "lineno": 3675
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tgram": {
  "data": {
   "lineno": 2310
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tgram2": {
  "data": {
   "lineno": 3194
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tgram3": {
  "data": {
   "lineno": 3195
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tgramme": {
  "data": {
   "lineno": 2330
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tgramme2": {
  "data": {
   "lineno": 3234
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tgramme3": {
  "data": {
   "lineno": 3235
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tgray": {
  "data": {
   "lineno": 2730
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tgray2": {
  "data": {
   "lineno": 4034
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tgray3": {
  "data": {
   "lineno": 4035
  },
  "type": "constant"
 },
 "brian2.units.allunits.Thenry": {
  "data": {
   "lineno": 2650
  },
  "type": "constant"
 },
 "brian2.units.allunits.Thenry2": {
  "data": {
   "lineno": 3874
  },
  "type": "constant"
 },
 "brian2.units.allunits.Thenry3": {
  "data": {
   "lineno": 3875
  },
  "type": "constant"
 },
 "brian2.units.allunits.Thertz": {
  "data": {
   "lineno": 2410
  },
  "type": "constant"
 },
 "brian2.units.allunits.Thertz2": {
  "data": {
   "lineno": 3394
  },
  "type": "constant"
 },
 "brian2.units.allunits.Thertz3": {
  "data": {
   "lineno": 3395
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tjoule": {
  "data": {
   "lineno": 2470
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tjoule2": {
  "data": {
   "lineno": 3514
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tjoule3": {
  "data": {
   "lineno": 3515
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tkatal": {
  "data": {
   "lineno": 2770
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tkatal2": {
  "data": {
   "lineno": 4114
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tkatal3": {
  "data": {
   "lineno": 4115
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tliter": {
  "data": {
   "lineno": 4142
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tlitre": {
  "data": {
   "lineno": 4163
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tlumen": {
  "data": {
   "lineno": 2670
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tlumen2": {
  "data": {
   "lineno": 3914
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tlumen3": {
  "data": {
   "lineno": 3915
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tlux": {
  "data": {
   "lineno": 2690
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tlux2": {
  "data": {
   "lineno": 3954
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tlux3": {
  "data": {
   "lineno": 3955
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmeter": {
  "data": {
   "lineno": 2170
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmeter2": {
  "data": {
   "lineno": 2914
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmeter3": {
  "data": {
   "lineno": 2915
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmetre": {
  "data": {
   "lineno": 2150
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmetre2": {
  "data": {
   "lineno": 2874
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmetre3": {
  "data": {
   "lineno": 2875
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmol": {
  "data": {
   "lineno": 2270
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmol2": {
  "data": {
   "lineno": 3114
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmol3": {
  "data": {
   "lineno": 3115
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmolar": {
  "data": {
   "lineno": 2350
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmolar2": {
  "data": {
   "lineno": 3274
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmolar3": {
  "data": {
   "lineno": 3275
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmole": {
  "data": {
   "lineno": 2250
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmole2": {
  "data": {
   "lineno": 3074
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tmole3": {
  "data": {
   "lineno": 3075
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tnewton": {
  "data": {
   "lineno": 2430
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tnewton2": {
  "data": {
   "lineno": 3434
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tnewton3": {
  "data": {
   "lineno": 3435
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tohm": {
  "data": {
   "lineno": 2570
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tohm2": {
  "data": {
   "lineno": 3714
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tohm3": {
  "data": {
   "lineno": 3715
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tpascal": {
  "data": {
   "lineno": 2450
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tpascal2": {
  "data": {
   "lineno": 3474
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tpascal3": {
  "data": {
   "lineno": 3475
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tradian": {
  "data": {
   "lineno": 2370
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tradian2": {
  "data": {
   "lineno": 3314
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tradian3": {
  "data": {
   "lineno": 3315
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tsecond": {
  "data": {
   "lineno": 2190
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tsecond2": {
  "data": {
   "lineno": 2954
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tsecond3": {
  "data": {
   "lineno": 2955
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tsiemens": {
  "data": {
   "lineno": 2590
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tsiemens2": {
  "data": {
   "lineno": 3754
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tsiemens3": {
  "data": {
   "lineno": 3755
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tsievert": {
  "data": {
   "lineno": 2750
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tsievert2": {
  "data": {
   "lineno": 4074
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tsievert3": {
  "data": {
   "lineno": 4075
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tsteradian": {
  "data": {
   "lineno": 2390
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tsteradian2": {
  "data": {
   "lineno": 3354
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tsteradian3": {
  "data": {
   "lineno": 3355
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ttesla": {
  "data": {
   "lineno": 2630
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ttesla2": {
  "data": {
   "lineno": 3834
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ttesla3": {
  "data": {
   "lineno": 3835
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tvolt": {
  "data": {
   "lineno": 2530
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tvolt2": {
  "data": {
   "lineno": 3634
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tvolt3": {
  "data": {
   "lineno": 3635
  },
  "type": "constant"
 },
 "brian2.units.allunits.Twatt": {
  "data": {
   "lineno": 2490
  },
  "type": "constant"
 },
 "brian2.units.allunits.Twatt2": {
  "data": {
   "lineno": 3554
  },
  "type": "constant"
 },
 "brian2.units.allunits.Twatt3": {
  "data": {
   "lineno": 3555
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tweber": {
  "data": {
   "lineno": 2610
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tweber2": {
  "data": {
   "lineno": 3794
  },
  "type": "constant"
 },
 "brian2.units.allunits.Tweber3": {
  "data": {
   "lineno": 3795
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yamp": {
  "data": {
   "lineno": 2216
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yamp2": {
  "data": {
   "lineno": 3006
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yamp3": {
  "data": {
   "lineno": 3007
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yampere": {
  "data": {
   "lineno": 2236
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yampere2": {
  "data": {
   "lineno": 3046
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yampere3": {
  "data": {
   "lineno": 3047
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ybecquerel": {
  "data": {
   "lineno": 2716
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ybecquerel2": {
  "data": {
   "lineno": 4006
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ybecquerel3": {
  "data": {
   "lineno": 4007
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ycandle": {
  "data": {
   "lineno": 2296
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ycandle2": {
  "data": {
   "lineno": 3166
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ycandle3": {
  "data": {
   "lineno": 3167
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ycoulomb": {
  "data": {
   "lineno": 2516
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ycoulomb2": {
  "data": {
   "lineno": 3606
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ycoulomb3": {
  "data": {
   "lineno": 3607
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yfarad": {
  "data": {
   "lineno": 2556
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yfarad2": {
  "data": {
   "lineno": 3686
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yfarad3": {
  "data": {
   "lineno": 3687
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ygram": {
  "data": {
   "lineno": 2316
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ygram2": {
  "data": {
   "lineno": 3206
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ygram3": {
  "data": {
   "lineno": 3207
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ygramme": {
  "data": {
   "lineno": 2336
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ygramme2": {
  "data": {
   "lineno": 3246
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ygramme3": {
  "data": {
   "lineno": 3247
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ygray": {
  "data": {
   "lineno": 2736
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ygray2": {
  "data": {
   "lineno": 4046
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ygray3": {
  "data": {
   "lineno": 4047
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yhenry": {
  "data": {
   "lineno": 2656
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yhenry2": {
  "data": {
   "lineno": 3886
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yhenry3": {
  "data": {
   "lineno": 3887
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yhertz": {
  "data": {
   "lineno": 2416
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yhertz2": {
  "data": {
   "lineno": 3406
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yhertz3": {
  "data": {
   "lineno": 3407
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yjoule": {
  "data": {
   "lineno": 2476
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yjoule2": {
  "data": {
   "lineno": 3526
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yjoule3": {
  "data": {
   "lineno": 3527
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ykatal": {
  "data": {
   "lineno": 2776
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ykatal2": {
  "data": {
   "lineno": 4126
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ykatal3": {
  "data": {
   "lineno": 4127
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yliter": {
  "data": {
   "lineno": 4148
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ylitre": {
  "data": {
   "lineno": 4169
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ylumen": {
  "data": {
   "lineno": 2676
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ylumen2": {
  "data": {
   "lineno": 3926
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ylumen3": {
  "data": {
   "lineno": 3927
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ylux": {
  "data": {
   "lineno": 2696
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ylux2": {
  "data": {
   "lineno": 3966
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ylux3": {
  "data": {
   "lineno": 3967
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymeter": {
  "data": {
   "lineno": 2176
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymeter2": {
  "data": {
   "lineno": 2926
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymeter3": {
  "data": {
   "lineno": 2927
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymetre": {
  "data": {
   "lineno": 2156
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymetre2": {
  "data": {
   "lineno": 2886
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymetre3": {
  "data": {
   "lineno": 2887
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymol": {
  "data": {
   "lineno": 2276
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymol2": {
  "data": {
   "lineno": 3126
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymol3": {
  "data": {
   "lineno": 3127
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymolar": {
  "data": {
   "lineno": 2356
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymolar2": {
  "data": {
   "lineno": 3286
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymolar3": {
  "data": {
   "lineno": 3287
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymole": {
  "data": {
   "lineno": 2256
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymole2": {
  "data": {
   "lineno": 3086
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ymole3": {
  "data": {
   "lineno": 3087
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ynewton": {
  "data": {
   "lineno": 2436
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ynewton2": {
  "data": {
   "lineno": 3446
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ynewton3": {
  "data": {
   "lineno": 3447
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yohm": {
  "data": {
   "lineno": 2576
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yohm2": {
  "data": {
   "lineno": 3726
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yohm3": {
  "data": {
   "lineno": 3727
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ypascal": {
  "data": {
   "lineno": 2456
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ypascal2": {
  "data": {
   "lineno": 3486
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ypascal3": {
  "data": {
   "lineno": 3487
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yradian": {
  "data": {
   "lineno": 2376
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yradian2": {
  "data": {
   "lineno": 3326
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yradian3": {
  "data": {
   "lineno": 3327
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ysecond": {
  "data": {
   "lineno": 2196
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ysecond2": {
  "data": {
   "lineno": 2966
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ysecond3": {
  "data": {
   "lineno": 2967
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ysiemens": {
  "data": {
   "lineno": 2596
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ysiemens2": {
  "data": {
   "lineno": 3766
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ysiemens3": {
  "data": {
   "lineno": 3767
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ysievert": {
  "data": {
   "lineno": 2756
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ysievert2": {
  "data": {
   "lineno": 4086
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ysievert3": {
  "data": {
   "lineno": 4087
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ysteradian": {
  "data": {
   "lineno": 2396
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ysteradian2": {
  "data": {
   "lineno": 3366
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ysteradian3": {
  "data": {
   "lineno": 3367
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ytesla": {
  "data": {
   "lineno": 2636
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ytesla2": {
  "data": {
   "lineno": 3846
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ytesla3": {
  "data": {
   "lineno": 3847
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yvolt": {
  "data": {
   "lineno": 2536
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yvolt2": {
  "data": {
   "lineno": 3646
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yvolt3": {
  "data": {
   "lineno": 3647
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ywatt": {
  "data": {
   "lineno": 2496
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ywatt2": {
  "data": {
   "lineno": 3566
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ywatt3": {
  "data": {
   "lineno": 3567
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yweber": {
  "data": {
   "lineno": 2616
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yweber2": {
  "data": {
   "lineno": 3806
  },
  "type": "constant"
 },
 "brian2.units.allunits.Yweber3": {
  "data": {
   "lineno": 3807
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zamp": {
  "data": {
   "lineno": 2199
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zamp2": {
  "data": {
   "lineno": 2972
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zamp3": {
  "data": {
   "lineno": 2973
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zampere": {
  "data": {
   "lineno": 2219
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zampere2": {
  "data": {
   "lineno": 3012
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zampere3": {
  "data": {
   "lineno": 3013
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zbecquerel": {
  "data": {
   "lineno": 2699
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zbecquerel2": {
  "data": {
   "lineno": 3972
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zbecquerel3": {
  "data": {
   "lineno": 3973
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zcandle": {
  "data": {
   "lineno": 2279
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zcandle2": {
  "data": {
   "lineno": 3132
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zcandle3": {
  "data": {
   "lineno": 3133
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zcoulomb": {
  "data": {
   "lineno": 2499
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zcoulomb2": {
  "data": {
   "lineno": 3572
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zcoulomb3": {
  "data": {
   "lineno": 3573
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zfarad": {
  "data": {
   "lineno": 2539
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zfarad2": {
  "data": {
   "lineno": 3652
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zfarad3": {
  "data": {
   "lineno": 3653
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zgram": {
  "data": {
   "lineno": 2299
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zgram2": {
  "data": {
   "lineno": 3172
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zgram3": {
  "data": {
   "lineno": 3173
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zgramme": {
  "data": {
   "lineno": 2319
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zgramme2": {
  "data": {
   "lineno": 3212
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zgramme3": {
  "data": {
   "lineno": 3213
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zgray": {
  "data": {
   "lineno": 2719
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zgray2": {
  "data": {
   "lineno": 4012
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zgray3": {
  "data": {
   "lineno": 4013
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zhenry": {
  "data": {
   "lineno": 2639
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zhenry2": {
  "data": {
   "lineno": 3852
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zhenry3": {
  "data": {
   "lineno": 3853
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zhertz": {
  "data": {
   "lineno": 2399
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zhertz2": {
  "data": {
   "lineno": 3372
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zhertz3": {
  "data": {
   "lineno": 3373
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zjoule": {
  "data": {
   "lineno": 2459
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zjoule2": {
  "data": {
   "lineno": 3492
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zjoule3": {
  "data": {
   "lineno": 3493
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zkatal": {
  "data": {
   "lineno": 2759
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zkatal2": {
  "data": {
   "lineno": 4092
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zkatal3": {
  "data": {
   "lineno": 4093
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zliter": {
  "data": {
   "lineno": 4131
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zlitre": {
  "data": {
   "lineno": 4152
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zlumen": {
  "data": {
   "lineno": 2659
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zlumen2": {
  "data": {
   "lineno": 3892
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zlumen3": {
  "data": {
   "lineno": 3893
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zlux": {
  "data": {
   "lineno": 2679
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zlux2": {
  "data": {
   "lineno": 3932
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zlux3": {
  "data": {
   "lineno": 3933
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmeter": {
  "data": {
   "lineno": 2159
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmeter2": {
  "data": {
   "lineno": 2892
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmeter3": {
  "data": {
   "lineno": 2893
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmetre": {
  "data": {
   "lineno": 2139
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmetre2": {
  "data": {
   "lineno": 2852
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmetre3": {
  "data": {
   "lineno": 2853
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmol": {
  "data": {
   "lineno": 2259
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmol2": {
  "data": {
   "lineno": 3092
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmol3": {
  "data": {
   "lineno": 3093
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmolar": {
  "data": {
   "lineno": 2339
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmolar2": {
  "data": {
   "lineno": 3252
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmolar3": {
  "data": {
   "lineno": 3253
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmole": {
  "data": {
   "lineno": 2239
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmole2": {
  "data": {
   "lineno": 3052
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zmole3": {
  "data": {
   "lineno": 3053
  },
  "type": "constant"
 },
 "brian2.units.allunits.Znewton": {
  "data": {
   "lineno": 2419
  },
  "type": "constant"
 },
 "brian2.units.allunits.Znewton2": {
  "data": {
   "lineno": 3412
  },
  "type": "constant"
 },
 "brian2.units.allunits.Znewton3": {
  "data": {
   "lineno": 3413
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zohm": {
  "data": {
   "lineno": 2559
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zohm2": {
  "data": {
   "lineno": 3692
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zohm3": {
  "data": {
   "lineno": 3693
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zpascal": {
  "data": {
   "lineno": 2439
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zpascal2": {
  "data": {
   "lineno": 3452
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zpascal3": {
  "data": {
   "lineno": 3453
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zradian": {
  "data": {
   "lineno": 2359
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zradian2": {
  "data": {
   "lineno": 3292
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zradian3": {
  "data": {
   "lineno": 3293
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zsecond": {
  "data": {
   "lineno": 2179
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zsecond2": {
  "data": {
   "lineno": 2932
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zsecond3": {
  "data": {
   "lineno": 2933
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zsiemens": {
  "data": {
   "lineno": 2579
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zsiemens2": {
  "data": {
   "lineno": 3732
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zsiemens3": {
  "data": {
   "lineno": 3733
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zsievert": {
  "data": {
   "lineno": 2739
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zsievert2": {
  "data": {
   "lineno": 4052
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zsievert3": {
  "data": {
   "lineno": 4053
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zsteradian": {
  "data": {
   "lineno": 2379
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zsteradian2": {
  "data": {
   "lineno": 3332
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zsteradian3": {
  "data": {
   "lineno": 3333
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ztesla": {
  "data": {
   "lineno": 2619
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ztesla2": {
  "data": {
   "lineno": 3812
  },
  "type": "constant"
 },
 "brian2.units.allunits.Ztesla3": {
  "data": {
   "lineno": 3813
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zvolt": {
  "data": {
   "lineno": 2519
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zvolt2": {
  "data": {
   "lineno": 3612
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zvolt3": {
  "data": {
   "lineno": 3613
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zwatt": {
  "data": {
   "lineno": 2479
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zwatt2": {
  "data": {
   "lineno": 3532
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zwatt3": {
  "data": {
   "lineno": 3533
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zweber": {
  "data": {
   "lineno": 2599
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zweber2": {
  "data": {
   "lineno": 3772
  },
  "type": "constant"
 },
 "brian2.units.allunits.Zweber3": {
  "data": {
   "lineno": 3773
  },
  "type": "constant"
 },
 "brian2.units.allunits._Celsius": {
  "data": {
   "lineno": 7910,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.units.allunits._Celsius.__div__": {
  "data": {
   "lineno": 7930,
   "symbols_in_volume": [
    "TypeError",
    "brian2.units.allunits._Celsius"
   ]
  },
  "type": "function"
 },
 "brian2.units.allunits._Celsius.__eq__": {
  "data": {
   "lineno": 7939,
   "symbols_in_volume": [
    "TypeError",
    "brian2.units.allunits._Celsius"
   ]
  },
  "type": "function"
 },
 "brian2.units.allunits._Celsius.__mul__": {
  "data": {
   "lineno": 7924,
   "symbols_in_volume": [
    "TypeError",
    "brian2.units.allunits._Celsius"
   ]
  },
  "type": "function"
 },
 "brian2.units.allunits._Celsius.__neq__": {
  "data": {
   "lineno": 7942,
   "symbols_in_volume": [
    "TypeError",
    "brian2.units.allunits._Celsius"
   ]
  },
  "type": "function"
 },
 "brian2.units.allunits._Celsius.__pow__": {
  "data": {
   "lineno": 7936,
   "symbols_in_volume": [
    "TypeError",
    "brian2.units.allunits._Celsius"
   ]
  },
  "type": "function"
 },
 "brian2.units.allunits._Celsius.__rdiv__": {
  "data": {
   "lineno": 7933,
   "symbols_in_volume": [
    "TypeError",
    "brian2.units.allunits._Celsius"
   ]
  },
  "type": "function"
 },
 "brian2.units.allunits._Celsius.__rmul__": {
  "data": {
   "lineno": 7927,
   "symbols_in_volume": [
    "TypeError",
    "brian2.units.allunits._Celsius"
   ]
  },
  "type": "function"
 },
 "brian2.units.allunits.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "brian2.units.allunits.aamp": {
  "data": {
   "lineno": 2197
  },
  "type": "constant"
 },
 "brian2.units.allunits.aamp2": {
  "data": {
   "lineno": 2968
  },
  "type": "constant"
 },
 "brian2.units.allunits.aamp3": {
  "data": {
   "lineno": 2969
  },
  "type": "constant"
 },
 "brian2.units.allunits.aampere": {
  "data": {
   "lineno": 2217
  },
  "type": "constant"
 },
 "brian2.units.allunits.aampere2": {
  "data": {
   "lineno": 3008
  },
  "type": "constant"
 },
 "brian2.units.allunits.aampere3": {
  "data": {
   "lineno": 3009
  },
  "type": "constant"
 },
 "brian2.units.allunits.abecquerel": {
  "data": {
   "lineno": 2697
  },
  "type": "constant"
 },
 "brian2.units.allunits.abecquerel2": {
  "data": {
   "lineno": 3968
  },
  "type": "constant"
 },
 "brian2.units.allunits.abecquerel3": {
  "data": {
   "lineno": 3969
  },
  "type": "constant"
 },
 "brian2.units.allunits.acandle": {
  "data": {
   "lineno": 2277
  },
  "type": "constant"
 },
 "brian2.units.allunits.acandle2": {
  "data": {
   "lineno": 3128
  },
  "type": "constant"
 },
 "brian2.units.allunits.acandle3": {
  "data": {
   "lineno": 3129
  },
  "type": "constant"
 },
 "brian2.units.allunits.acoulomb": {
  "data": {
   "lineno": 2497
  },
  "type": "constant"
 },
 "brian2.units.allunits.acoulomb2": {
  "data": {
   "lineno": 3568
  },
  "type": "constant"
 },
 "brian2.units.allunits.acoulomb3": {
  "data": {
   "lineno": 3569
  },
  "type": "constant"
 },
 "brian2.units.allunits.additional_units": {
  "data": {
   "lineno": 5827
  },
  "type": "constant"
 },
 "brian2.units.allunits.afarad": {
  "data": {
   "lineno": 2537
  },
  "type": "constant"
 },
 "brian2.units.allunits.afarad2": {
  "data": {
   "lineno": 3648
  },
  "type": "constant"
 },
 "brian2.units.allunits.afarad3": {
  "data": {
   "lineno": 3649
  },
  "type": "constant"
 },
 "brian2.units.allunits.agram": {
  "data": {
   "lineno": 2297
  },
  "type": "constant"
 },
 "brian2.units.allunits.agram2": {
  "data": {
   "lineno": 3168
  },
  "type": "constant"
 },
 "brian2.units.allunits.agram3": {
  "data": {
   "lineno": 3169
  },
  "type": "constant"
 },
 "brian2.units.allunits.agramme": {
  "data": {
   "lineno": 2317
  },
  "type": "constant"
 },
 "brian2.units.allunits.agramme2": {
  "data": {
   "lineno": 3208
  },
  "type": "constant"
 },
 "brian2.units.allunits.agramme3": {
  "data": {
   "lineno": 3209
  },
  "type": "constant"
 },
 "brian2.units.allunits.agray": {
  "data": {
   "lineno": 2717
  },
  "type": "constant"
 },
 "brian2.units.allunits.agray2": {
  "data": {
   "lineno": 4008
  },
  "type": "constant"
 },
 "brian2.units.allunits.agray3": {
  "data": {
   "lineno": 4009
  },
  "type": "constant"
 },
 "brian2.units.allunits.ahenry": {
  "data": {
   "lineno": 2637
  },
  "type": "constant"
 },
 "brian2.units.allunits.ahenry2": {
  "data": {
   "lineno": 3848
  },
  "type": "constant"
 },
 "brian2.units.allunits.ahenry3": {
  "data": {
   "lineno": 3849
  },
  "type": "constant"
 },
 "brian2.units.allunits.ahertz": {
  "data": {
   "lineno": 2397
  },
  "type": "constant"
 },
 "brian2.units.allunits.ahertz2": {
  "data": {
   "lineno": 3368
  },
  "type": "constant"
 },
 "brian2.units.allunits.ahertz3": {
  "data": {
   "lineno": 3369
  },
  "type": "constant"
 },
 "brian2.units.allunits.ajoule": {
  "data": {
   "lineno": 2457
  },
  "type": "constant"
 },
 "brian2.units.allunits.ajoule2": {
  "data": {
   "lineno": 3488
  },
  "type": "constant"
 },
 "brian2.units.allunits.ajoule3": {
  "data": {
   "lineno": 3489
  },
  "type": "constant"
 },
 "brian2.units.allunits.akatal": {
  "data": {
   "lineno": 2757
  },
  "type": "constant"
 },
 "brian2.units.allunits.akatal2": {
  "data": {
   "lineno": 4088
  },
  "type": "constant"
 },
 "brian2.units.allunits.akatal3": {
  "data": {
   "lineno": 4089
  },
  "type": "constant"
 },
 "brian2.units.allunits.aliter": {
  "data": {
   "lineno": 4128
  },
  "type": "constant"
 },
 "brian2.units.allunits.alitre": {
  "data": {
   "lineno": 4149
  },
  "type": "constant"
 },
 "brian2.units.allunits.all_units": {
  "data": {
   "lineno": 5837
  },
  "type": "constant"
 },
 "brian2.units.allunits.alumen": {
  "data": {
   "lineno": 2657
  },
  "type": "constant"
 },
 "brian2.units.allunits.alumen2": {
  "data": {
   "lineno": 3888
  },
  "type": "constant"
 },
 "brian2.units.allunits.alumen3": {
  "data": {
   "lineno": 3889
  },
  "type": "constant"
 },
 "brian2.units.allunits.alux": {
  "data": {
   "lineno": 2677
  },
  "type": "constant"
 },
 "brian2.units.allunits.alux2": {
  "data": {
   "lineno": 3928
  },
  "type": "constant"
 },
 "brian2.units.allunits.alux3": {
  "data": {
   "lineno": 3929
  },
  "type": "constant"
 },
 "brian2.units.allunits.ameter": {
  "data": {
   "lineno": 2157
  },
  "type": "constant"
 },
 "brian2.units.allunits.ameter2": {
  "data": {
   "lineno": 2888
  },
  "type": "constant"
 },
 "brian2.units.allunits.ameter3": {
  "data": {
   "lineno": 2889
  },
  "type": "constant"
 },
 "brian2.units.allunits.ametre": {
  "data": {
   "lineno": 2137
  },
  "type": "constant"
 },
 "brian2.units.allunits.ametre2": {
  "data": {
   "lineno": 2848
  },
  "type": "constant"
 },
 "brian2.units.allunits.ametre3": {
  "data": {
   "lineno": 2849
  },
  "type": "constant"
 },
 "brian2.units.allunits.amol": {
  "data": {
   "lineno": 2257
  },
  "type": "constant"
 },
 "brian2.units.allunits.amol2": {
  "data": {
   "lineno": 3088
  },
  "type": "constant"
 },
 "brian2.units.allunits.amol3": {
  "data": {
   "lineno": 3089
  },
  "type": "constant"
 },
 "brian2.units.allunits.amolar": {
  "data": {
   "lineno": 2337
  },
  "type": "constant"
 },
 "brian2.units.allunits.amolar2": {
  "data": {
   "lineno": 3248
  },
  "type": "constant"
 },
 "brian2.units.allunits.amolar3": {
  "data": {
   "lineno": 3249
  },
  "type": "constant"
 },
 "brian2.units.allunits.amole": {
  "data": {
   "lineno": 2237
  },
  "type": "constant"
 },
 "brian2.units.allunits.amole2": {
  "data": {
   "lineno": 3048
  },
  "type": "constant"
 },
 "brian2.units.allunits.amole3": {
  "data": {
   "lineno": 3049
  },
  "type": "constant"
 },
 "brian2.units.allunits.amp": {
  "data": {
   "lineno": 2104
  },
  "type": "constant"
 },
 "brian2.units.allunits.amp2": {
  "data": {
   "lineno": 2786
  },
  "type": "constant"
 },
 "brian2.units.allunits.amp3": {
  "data": {
   "lineno": 2787
  },
  "type": "constant"
 },
 "brian2.units.allunits.ampere": {
  "data": {
   "lineno": 2105
  },
  "type": "constant"
 },
 "brian2.units.allunits.ampere2": {
  "data": {
   "lineno": 2788
  },
  "type": "constant"
 },
 "brian2.units.allunits.ampere3": {
  "data": {
   "lineno": 2789
  },
  "type": "constant"
 },
 "brian2.units.allunits.anewton": {
  "data": {
   "lineno": 2417
  },
  "type": "constant"
 },
 "brian2.units.allunits.anewton2": {
  "data": {
   "lineno": 3408
  },
  "type": "constant"
 },
 "brian2.units.allunits.anewton3": {
  "data": {
   "lineno": 3409
  },
  "type": "constant"
 },
 "brian2.units.allunits.aohm": {
  "data": {
   "lineno": 2557
  },
  "type": "constant"
 },
 "brian2.units.allunits.aohm2": {
  "data": {
   "lineno": 3688
  },
  "type": "constant"
 },
 "brian2.units.allunits.aohm3": {
  "data": {
   "lineno": 3689
  },
  "type": "constant"
 },
 "brian2.units.allunits.apascal": {
  "data": {
   "lineno": 2437
  },
  "type": "constant"
 },
 "brian2.units.allunits.apascal2": {
  "data": {
   "lineno": 3448
  },
  "type": "constant"
 },
 "brian2.units.allunits.apascal3": {
  "data": {
   "lineno": 3449
  },
  "type": "constant"
 },
 "brian2.units.allunits.aradian": {
  "data": {
   "lineno": 2357
  },
  "type": "constant"
 },
 "brian2.units.allunits.aradian2": {
  "data": {
   "lineno": 3288
  },
  "type": "constant"
 },
 "brian2.units.allunits.aradian3": {
  "data": {
   "lineno": 3289
  },
  "type": "constant"
 },
 "brian2.units.allunits.asecond": {
  "data": {
   "lineno": 2177
  },
  "type": "constant"
 },
 "brian2.units.allunits.asecond2": {
  "data": {
   "lineno": 2928
  },
  "type": "constant"
 },
 "brian2.units.allunits.asecond3": {
  "data": {
   "lineno": 2929
  },
  "type": "constant"
 },
 "brian2.units.allunits.asiemens": {
  "data": {
   "lineno": 2577
  },
  "type": "constant"
 },
 "brian2.units.allunits.asiemens2": {
  "data": {
   "lineno": 3728
  },
  "type": "constant"
 },
 "brian2.units.allunits.asiemens3": {
  "data": {
   "lineno": 3729
  },
  "type": "constant"
 },
 "brian2.units.allunits.asievert": {
  "data": {
   "lineno": 2737
  },
  "type": "constant"
 },
 "brian2.units.allunits.asievert2": {
  "data": {
   "lineno": 4048
  },
  "type": "constant"
 },
 "brian2.units.allunits.asievert3": {
  "data": {
   "lineno": 4049
  },
  "type": "constant"
 },
 "brian2.units.allunits.asteradian": {
  "data": {
   "lineno": 2377
  },
  "type": "constant"
 },
 "brian2.units.allunits.asteradian2": {
  "data": {
   "lineno": 3328
  },
  "type": "constant"
 },
 "brian2.units.allunits.asteradian3": {
  "data": {
   "lineno": 3329
  },
  "type": "constant"
 },
 "brian2.units.allunits.atesla": {
  "data": {
   "lineno": 2617
  },
  "type": "constant"
 },
 "brian2.units.allunits.atesla2": {
  "data": {
   "lineno": 3808
  },
  "type": "constant"
 },
 "brian2.units.allunits.atesla3": {
  "data": {
   "lineno": 3809
  },
  "type": "constant"
 },
 "brian2.units.allunits.avolt": {
  "data": {
   "lineno": 2517
  },
  "type": "constant"
 },
 "brian2.units.allunits.avolt2": {
  "data": {
   "lineno": 3608
  },
  "type": "constant"
 },
 "brian2.units.allunits.avolt3": {
  "data": {
   "lineno": 3609
  },
  "type": "constant"
 },
 "brian2.units.allunits.awatt": {
  "data": {
   "lineno": 2477
  },
  "type": "constant"
 },
 "brian2.units.allunits.awatt2": {
  "data": {
   "lineno": 3528
  },
  "type": "constant"
 },
 "brian2.units.allunits.awatt3": {
  "data": {
   "lineno": 3529
  },
  "type": "constant"
 },
 "brian2.units.allunits.aweber": {
  "data": {
   "lineno": 2597
  },
  "type": "constant"
 },
 "brian2.units.allunits.aweber2": {
  "data": {
   "lineno": 3768
  },
  "type": "constant"
 },
 "brian2.units.allunits.aweber3": {
  "data": {
   "lineno": 3769
  },
  "type": "constant"
 },
 "brian2.units.allunits.base_units": {
  "data": {
   "lineno": 4173
  },
  "type": "constant"
 },
 "brian2.units.allunits.becquerel": {
  "data": {
   "lineno": 2131
  },
  "type": "constant"
 },
 "brian2.units.allunits.becquerel2": {
  "data": {
   "lineno": 2840
  },
  "type": "constant"
 },
 "brian2.units.allunits.becquerel3": {
  "data": {
   "lineno": 2841
  },
  "type": "constant"
 },
 "brian2.units.allunits.camp": {
  "data": {
   "lineno": 2198
  },
  "type": "constant"
 },
 "brian2.units.allunits.camp2": {
  "data": {
   "lineno": 2970
  },
  "type": "constant"
 },
 "brian2.units.allunits.camp3": {
  "data": {
   "lineno": 2971
  },
  "type": "constant"
 },
 "brian2.units.allunits.campere": {
  "data": {
   "lineno": 2218
  },
  "type": "constant"
 },
 "brian2.units.allunits.campere2": {
  "data": {
   "lineno": 3010
  },
  "type": "constant"
 },
 "brian2.units.allunits.campere3": {
  "data": {
   "lineno": 3011
  },
  "type": "constant"
 },
 "brian2.units.allunits.candle": {
  "data": {
   "lineno": 2111
  },
  "type": "constant"
 },
 "brian2.units.allunits.candle2": {
  "data": {
   "lineno": 2796
  },
  "type": "constant"
 },
 "brian2.units.allunits.candle3": {
  "data": {
   "lineno": 2797
  },
  "type": "constant"
 },
 "brian2.units.allunits.cbecquerel": {
  "data": {
   "lineno": 2698
  },
  "type": "constant"
 },
 "brian2.units.allunits.cbecquerel2": {
  "data": {
   "lineno": 3970
  },
  "type": "constant"
 },
 "brian2.units.allunits.cbecquerel3": {
  "data": {
   "lineno": 3971
  },
  "type": "constant"
 },
 "brian2.units.allunits.ccandle": {
  "data": {
   "lineno": 2278
  },
  "type": "constant"
 },
 "brian2.units.allunits.ccandle2": {
  "data": {
   "lineno": 3130
  },
  "type": "constant"
 },
 "brian2.units.allunits.ccandle3": {
  "data": {
   "lineno": 3131
  },
  "type": "constant"
 },
 "brian2.units.allunits.ccoulomb": {
  "data": {
   "lineno": 2498
  },
  "type": "constant"
 },
 "brian2.units.allunits.ccoulomb2": {
  "data": {
   "lineno": 3570
  },
  "type": "constant"
 },
 "brian2.units.allunits.ccoulomb3": {
  "data": {
   "lineno": 3571
  },
  "type": "constant"
 },
 "brian2.units.allunits.celsius": {
  "data": {
   "lineno": 7945
  },
  "type": "constant"
 },
 "brian2.units.allunits.cfarad": {
  "data": {
   "lineno": 2538
  },
  "type": "constant"
 },
 "brian2.units.allunits.cfarad2": {
  "data": {
   "lineno": 3650
  },
  "type": "constant"
 },
 "brian2.units.allunits.cfarad3": {
  "data": {
   "lineno": 3651
  },
  "type": "constant"
 },
 "brian2.units.allunits.cgram": {
  "data": {
   "lineno": 2298
  },
  "type": "constant"
 },
 "brian2.units.allunits.cgram2": {
  "data": {
   "lineno": 3170
  },
  "type": "constant"
 },
 "brian2.units.allunits.cgram3": {
  "data": {
   "lineno": 3171
  },
  "type": "constant"
 },
 "brian2.units.allunits.cgramme": {
  "data": {
   "lineno": 2318
  },
  "type": "constant"
 },
 "brian2.units.allunits.cgramme2": {
  "data": {
   "lineno": 3210
  },
  "type": "constant"
 },
 "brian2.units.allunits.cgramme3": {
  "data": {
   "lineno": 3211
  },
  "type": "constant"
 },
 "brian2.units.allunits.cgray": {
  "data": {
   "lineno": 2718
  },
  "type": "constant"
 },
 "brian2.units.allunits.cgray2": {
  "data": {
   "lineno": 4010
  },
  "type": "constant"
 },
 "brian2.units.allunits.cgray3": {
  "data": {
   "lineno": 4011
  },
  "type": "constant"
 },
 "brian2.units.allunits.chenry": {
  "data": {
   "lineno": 2638
  },
  "type": "constant"
 },
 "brian2.units.allunits.chenry2": {
  "data": {
   "lineno": 3850
  },
  "type": "constant"
 },
 "brian2.units.allunits.chenry3": {
  "data": {
   "lineno": 3851
  },
  "type": "constant"
 },
 "brian2.units.allunits.chertz": {
  "data": {
   "lineno": 2398
  },
  "type": "constant"
 },
 "brian2.units.allunits.chertz2": {
  "data": {
   "lineno": 3370
  },
  "type": "constant"
 },
 "brian2.units.allunits.chertz3": {
  "data": {
   "lineno": 3371
  },
  "type": "constant"
 },
 "brian2.units.allunits.cjoule": {
  "data": {
   "lineno": 2458
  },
  "type": "constant"
 },
 "brian2.units.allunits.cjoule2": {
  "data": {
   "lineno": 3490
  },
  "type": "constant"
 },
 "brian2.units.allunits.cjoule3": {
  "data": {
   "lineno": 3491
  },
  "type": "constant"
 },
 "brian2.units.allunits.ckatal": {
  "data": {
   "lineno": 2758
  },
  "type": "constant"
 },
 "brian2.units.allunits.ckatal2": {
  "data": {
   "lineno": 4090
  },
  "type": "constant"
 },
 "brian2.units.allunits.ckatal3": {
  "data": {
   "lineno": 4091
  },
  "type": "constant"
 },
 "brian2.units.allunits.cliter": {
  "data": {
   "lineno": 4130
  },
  "type": "constant"
 },
 "brian2.units.allunits.clitre": {
  "data": {
   "lineno": 4151
  },
  "type": "constant"
 },
 "brian2.units.allunits.clumen": {
  "data": {
   "lineno": 2658
  },
  "type": "constant"
 },
 "brian2.units.allunits.clumen2": {
  "data": {
   "lineno": 3890
  },
  "type": "constant"
 },
 "brian2.units.allunits.clumen3": {
  "data": {
   "lineno": 3891
  },
  "type": "constant"
 },
 "brian2.units.allunits.clux": {
  "data": {
   "lineno": 2678
  },
  "type": "constant"
 },
 "brian2.units.allunits.clux2": {
  "data": {
   "lineno": 3930
  },
  "type": "constant"
 },
 "brian2.units.allunits.clux3": {
  "data": {
   "lineno": 3931
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmeter": {
  "data": {
   "lineno": 2158
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmeter2": {
  "data": {
   "lineno": 2890
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmeter3": {
  "data": {
   "lineno": 2891
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmetre": {
  "data": {
   "lineno": 2138
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmetre2": {
  "data": {
   "lineno": 2850
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmetre3": {
  "data": {
   "lineno": 2851
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmol": {
  "data": {
   "lineno": 2258
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmol2": {
  "data": {
   "lineno": 3090
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmol3": {
  "data": {
   "lineno": 3091
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmolar": {
  "data": {
   "lineno": 2338
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmolar2": {
  "data": {
   "lineno": 3250
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmolar3": {
  "data": {
   "lineno": 3251
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmole": {
  "data": {
   "lineno": 2238
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmole2": {
  "data": {
   "lineno": 3050
  },
  "type": "constant"
 },
 "brian2.units.allunits.cmole3": {
  "data": {
   "lineno": 3051
  },
  "type": "constant"
 },
 "brian2.units.allunits.cnewton": {
  "data": {
   "lineno": 2418
  },
  "type": "constant"
 },
 "brian2.units.allunits.cnewton2": {
  "data": {
   "lineno": 3410
  },
  "type": "constant"
 },
 "brian2.units.allunits.cnewton3": {
  "data": {
   "lineno": 3411
  },
  "type": "constant"
 },
 "brian2.units.allunits.cohm": {
  "data": {
   "lineno": 2558
  },
  "type": "constant"
 },
 "brian2.units.allunits.cohm2": {
  "data": {
   "lineno": 3690
  },
  "type": "constant"
 },
 "brian2.units.allunits.cohm3": {
  "data": {
   "lineno": 3691
  },
  "type": "constant"
 },
 "brian2.units.allunits.coulomb": {
  "data": {
   "lineno": 2121
  },
  "type": "constant"
 },
 "brian2.units.allunits.coulomb2": {
  "data": {
   "lineno": 2820
  },
  "type": "constant"
 },
 "brian2.units.allunits.coulomb3": {
  "data": {
   "lineno": 2821
  },
  "type": "constant"
 },
 "brian2.units.allunits.cpascal": {
  "data": {
   "lineno": 2438
  },
  "type": "constant"
 },
 "brian2.units.allunits.cpascal2": {
  "data": {
   "lineno": 3450
  },
  "type": "constant"
 },
 "brian2.units.allunits.cpascal3": {
  "data": {
   "lineno": 3451
  },
  "type": "constant"
 },
 "brian2.units.allunits.cradian": {
  "data": {
   "lineno": 2358
  },
  "type": "constant"
 },
 "brian2.units.allunits.cradian2": {
  "data": {
   "lineno": 3290
  },
  "type": "constant"
 },
 "brian2.units.allunits.cradian3": {
  "data": {
   "lineno": 3291
  },
  "type": "constant"
 },
 "brian2.units.allunits.csecond": {
  "data": {
   "lineno": 2178
  },
  "type": "constant"
 },
 "brian2.units.allunits.csecond2": {
  "data": {
   "lineno": 2930
  },
  "type": "constant"
 },
 "brian2.units.allunits.csecond3": {
  "data": {
   "lineno": 2931
  },
  "type": "constant"
 },
 "brian2.units.allunits.csiemens": {
  "data": {
   "lineno": 2578
  },
  "type": "constant"
 },
 "brian2.units.allunits.csiemens2": {
  "data": {
   "lineno": 3730
  },
  "type": "constant"
 },
 "brian2.units.allunits.csiemens3": {
  "data": {
   "lineno": 3731
  },
  "type": "constant"
 },
 "brian2.units.allunits.csievert": {
  "data": {
   "lineno": 2738
  },
  "type": "constant"
 },
 "brian2.units.allunits.csievert2": {
  "data": {
   "lineno": 4050
  },
  "type": "constant"
 },
 "brian2.units.allunits.csievert3": {
  "data": {
   "lineno": 4051
  },
  "type": "constant"
 },
 "brian2.units.allunits.csteradian": {
  "data": {
   "lineno": 2378
  },
  "type": "constant"
 },
 "brian2.units.allunits.csteradian2": {
  "data": {
   "lineno": 3330
  },
  "type": "constant"
 },
 "brian2.units.allunits.csteradian3": {
  "data": {
   "lineno": 3331
  },
  "type": "constant"
 },
 "brian2.units.allunits.ctesla": {
  "data": {
   "lineno": 2618
  },
  "type": "constant"
 },
 "brian2.units.allunits.ctesla2": {
  "data": {
   "lineno": 3810
  },
  "type": "constant"
 },
 "brian2.units.allunits.ctesla3": {
  "data": {
   "lineno": 3811
  },
  "type": "constant"
 },
 "brian2.units.allunits.cvolt": {
  "data": {
   "lineno": 2518
  },
  "type": "constant"
 },
 "brian2.units.allunits.cvolt2": {
  "data": {
   "lineno": 3610
  },
  "type": "constant"
 },
 "brian2.units.allunits.cvolt3": {
  "data": {
   "lineno": 3611
  },
  "type": "constant"
 },
 "brian2.units.allunits.cwatt": {
  "data": {
   "lineno": 2478
  },
  "type": "constant"
 },
 "brian2.units.allunits.cwatt2": {
  "data": {
   "lineno": 3530
  },
  "type": "constant"
 },
 "brian2.units.allunits.cwatt3": {
  "data": {
   "lineno": 3531
  },
  "type": "constant"
 },
 "brian2.units.allunits.cweber": {
  "data": {
   "lineno": 2598
  },
  "type": "constant"
 },
 "brian2.units.allunits.cweber2": {
  "data": {
   "lineno": 3770
  },
  "type": "constant"
 },
 "brian2.units.allunits.cweber3": {
  "data": {
   "lineno": 3771
  },
  "type": "constant"
 },
 "brian2.units.allunits.daamp": {
  "data": {
   "lineno": 2205
  },
  "type": "constant"
 },
 "brian2.units.allunits.daamp2": {
  "data": {
   "lineno": 2984
  },
  "type": "constant"
 },
 "brian2.units.allunits.daamp3": {
  "data": {
   "lineno": 2985
  },
  "type": "constant"
 },
 "brian2.units.allunits.daampere": {
  "data": {
   "lineno": 2225
  },
  "type": "constant"
 },
 "brian2.units.allunits.daampere2": {
  "data": {
   "lineno": 3024
  },
  "type": "constant"
 },
 "brian2.units.allunits.daampere3": {
  "data": {
   "lineno": 3025
  },
  "type": "constant"
 },
 "brian2.units.allunits.dabecquerel": {
  "data": {
   "lineno": 2705
  },
  "type": "constant"
 },
 "brian2.units.allunits.dabecquerel2": {
  "data": {
   "lineno": 3984
  },
  "type": "constant"
 },
 "brian2.units.allunits.dabecquerel3": {
  "data": {
   "lineno": 3985
  },
  "type": "constant"
 },
 "brian2.units.allunits.dacandle": {
  "data": {
   "lineno": 2285
  },
  "type": "constant"
 },
 "brian2.units.allunits.dacandle2": {
  "data": {
   "lineno": 3144
  },
  "type": "constant"
 },
 "brian2.units.allunits.dacandle3": {
  "data": {
   "lineno": 3145
  },
  "type": "constant"
 },
 "brian2.units.allunits.dacoulomb": {
  "data": {
   "lineno": 2505
  },
  "type": "constant"
 },
 "brian2.units.allunits.dacoulomb2": {
  "data": {
   "lineno": 3584
  },
  "type": "constant"
 },
 "brian2.units.allunits.dacoulomb3": {
  "data": {
   "lineno": 3585
  },
  "type": "constant"
 },
 "brian2.units.allunits.dafarad": {
  "data": {
   "lineno": 2545
  },
  "type": "constant"
 },
 "brian2.units.allunits.dafarad2": {
  "data": {
   "lineno": 3664
  },
  "type": "constant"
 },
 "brian2.units.allunits.dafarad3": {
  "data": {
   "lineno": 3665
  },
  "type": "constant"
 },
 "brian2.units.allunits.dagram": {
  "data": {
   "lineno": 2305
  },
  "type": "constant"
 },
 "brian2.units.allunits.dagram2": {
  "data": {
   "lineno": 3184
  },
  "type": "constant"
 },
 "brian2.units.allunits.dagram3": {
  "data": {
   "lineno": 3185
  },
  "type": "constant"
 },
 "brian2.units.allunits.dagramme": {
  "data": {
   "lineno": 2325
  },
  "type": "constant"
 },
 "brian2.units.allunits.dagramme2": {
  "data": {
   "lineno": 3224
  },
  "type": "constant"
 },
 "brian2.units.allunits.dagramme3": {
  "data": {
   "lineno": 3225
  },
  "type": "constant"
 },
 "brian2.units.allunits.dagray": {
  "data": {
   "lineno": 2725
  },
  "type": "constant"
 },
 "brian2.units.allunits.dagray2": {
  "data": {
   "lineno": 4024
  },
  "type": "constant"
 },
 "brian2.units.allunits.dagray3": {
  "data": {
   "lineno": 4025
  },
  "type": "constant"
 },
 "brian2.units.allunits.dahenry": {
  "data": {
   "lineno": 2645
  },
  "type": "constant"
 },
 "brian2.units.allunits.dahenry2": {
  "data": {
   "lineno": 3864
  },
  "type": "constant"
 },
 "brian2.units.allunits.dahenry3": {
  "data": {
   "lineno": 3865
  },
  "type": "constant"
 },
 "brian2.units.allunits.dahertz": {
  "data": {
   "lineno": 2405
  },
  "type": "constant"
 },
 "brian2.units.allunits.dahertz2": {
  "data": {
   "lineno": 3384
  },
  "type": "constant"
 },
 "brian2.units.allunits.dahertz3": {
  "data": {
   "lineno": 3385
  },
  "type": "constant"
 },
 "brian2.units.allunits.dajoule": {
  "data": {
   "lineno": 2465
  },
  "type": "constant"
 },
 "brian2.units.allunits.dajoule2": {
  "data": {
   "lineno": 3504
  },
  "type": "constant"
 },
 "brian2.units.allunits.dajoule3": {
  "data": {
   "lineno": 3505
  },
  "type": "constant"
 },
 "brian2.units.allunits.dakatal": {
  "data": {
   "lineno": 2765
  },
  "type": "constant"
 },
 "brian2.units.allunits.dakatal2": {
  "data": {
   "lineno": 4104
  },
  "type": "constant"
 },
 "brian2.units.allunits.dakatal3": {
  "data": {
   "lineno": 4105
  },
  "type": "constant"
 },
 "brian2.units.allunits.daliter": {
  "data": {
   "lineno": 4137
  },
  "type": "constant"
 },
 "brian2.units.allunits.dalitre": {
  "data": {
   "lineno": 4158
  },
  "type": "constant"
 },
 "brian2.units.allunits.dalumen": {
  "data": {
   "lineno": 2665
  },
  "type": "constant"
 },
 "brian2.units.allunits.dalumen2": {
  "data": {
   "lineno": 3904
  },
  "type": "constant"
 },
 "brian2.units.allunits.dalumen3": {
  "data": {
   "lineno": 3905
  },
  "type": "constant"
 },
 "brian2.units.allunits.dalux": {
  "data": {
   "lineno": 2685
  },
  "type": "constant"
 },
 "brian2.units.allunits.dalux2": {
  "data": {
   "lineno": 3944
  },
  "type": "constant"
 },
 "brian2.units.allunits.dalux3": {
  "data": {
   "lineno": 3945
  },
  "type": "constant"
 },
 "brian2.units.allunits.dameter": {
  "data": {
   "lineno": 2165
  },
  "type": "constant"
 },
 "brian2.units.allunits.dameter2": {
  "data": {
   "lineno": 2904
  },
  "type": "constant"
 },
 "brian2.units.allunits.dameter3": {
  "data": {
   "lineno": 2905
  },
  "type": "constant"
 },
 "brian2.units.allunits.dametre": {
  "data": {
   "lineno": 2145
  },
  "type": "constant"
 },
 "brian2.units.allunits.dametre2": {
  "data": {
   "lineno": 2864
  },
  "type": "constant"
 },
 "brian2.units.allunits.dametre3": {
  "data": {
   "lineno": 2865
  },
  "type": "constant"
 },
 "brian2.units.allunits.damol": {
  "data": {
   "lineno": 2265
  },
  "type": "constant"
 },
 "brian2.units.allunits.damol2": {
  "data": {
   "lineno": 3104
  },
  "type": "constant"
 },
 "brian2.units.allunits.damol3": {
  "data": {
   "lineno": 3105
  },
  "type": "constant"
 },
 "brian2.units.allunits.damolar": {
  "data": {
   "lineno": 2345
  },
  "type": "constant"
 },
 "brian2.units.allunits.damolar2": {
  "data": {
   "lineno": 3264
  },
  "type": "constant"
 },
 "brian2.units.allunits.damolar3": {
  "data": {
   "lineno": 3265
  },
  "type": "constant"
 },
 "brian2.units.allunits.damole": {
  "data": {
   "lineno": 2245
  },
  "type": "constant"
 },
 "brian2.units.allunits.damole2": {
  "data": {
   "lineno": 3064
  },
  "type": "constant"
 },
 "brian2.units.allunits.damole3": {
  "data": {
   "lineno": 3065
  },
  "type": "constant"
 },
 "brian2.units.allunits.damp": {
  "data": {
   "lineno": 2201
  },
  "type": "constant"
 },
 "brian2.units.allunits.damp2": {
  "data": {
   "lineno": 2976
  },
  "type": "constant"
 },
 "brian2.units.allunits.damp3": {
  "data": {
   "lineno": 2977
  },
  "type": "constant"
 },
 "brian2.units.allunits.dampere": {
  "data": {
   "lineno": 2221
  },
  "type": "constant"
 },
 "brian2.units.allunits.dampere2": {
  "data": {
   "lineno": 3016
  },
  "type": "constant"
 },
 "brian2.units.allunits.dampere3": {
  "data": {
   "lineno": 3017
  },
  "type": "constant"
 },
 "brian2.units.allunits.danewton": {
  "data": {
   "lineno": 2425
  },
  "type": "constant"
 },
 "brian2.units.allunits.danewton2": {
  "data": {
   "lineno": 3424
  },
  "type": "constant"
 },
 "brian2.units.allunits.danewton3": {
  "data": {
   "lineno": 3425
  },
  "type": "constant"
 },
 "brian2.units.allunits.daohm": {
  "data": {
   "lineno": 2565
  },
  "type": "constant"
 },
 "brian2.units.allunits.daohm2": {
  "data": {
   "lineno": 3704
  },
  "type": "constant"
 },
 "brian2.units.allunits.daohm3": {
  "data": {
   "lineno": 3705
  },
  "type": "constant"
 },
 "brian2.units.allunits.dapascal": {
  "data": {
   "lineno": 2445
  },
  "type": "constant"
 },
 "brian2.units.allunits.dapascal2": {
  "data": {
   "lineno": 3464
  },
  "type": "constant"
 },
 "brian2.units.allunits.dapascal3": {
  "data": {
   "lineno": 3465
  },
  "type": "constant"
 },
 "brian2.units.allunits.daradian": {
  "data": {
   "lineno": 2365
  },
  "type": "constant"
 },
 "brian2.units.allunits.daradian2": {
  "data": {
   "lineno": 3304
  },
  "type": "constant"
 },
 "brian2.units.allunits.daradian3": {
  "data": {
   "lineno": 3305
  },
  "type": "constant"
 },
 "brian2.units.allunits.dasecond": {
  "data": {
   "lineno": 2185
  },
  "type": "constant"
 },
 "brian2.units.allunits.dasecond2": {
  "data": {
   "lineno": 2944
  },
  "type": "constant"
 },
 "brian2.units.allunits.dasecond3": {
  "data": {
   "lineno": 2945
  },
  "type": "constant"
 },
 "brian2.units.allunits.dasiemens": {
  "data": {
   "lineno": 2585
  },
  "type": "constant"
 },
 "brian2.units.allunits.dasiemens2": {
  "data": {
   "lineno": 3744
  },
  "type": "constant"
 },
 "brian2.units.allunits.dasiemens3": {
  "data": {
   "lineno": 3745
  },
  "type": "constant"
 },
 "brian2.units.allunits.dasievert": {
  "data": {
   "lineno": 2745
  },
  "type": "constant"
 },
 "brian2.units.allunits.dasievert2": {
  "data": {
   "lineno": 4064
  },
  "type": "constant"
 },
 "brian2.units.allunits.dasievert3": {
  "data": {
   "lineno": 4065
  },
  "type": "constant"
 },
 "brian2.units.allunits.dasteradian": {
  "data": {
   "lineno": 2385
  },
  "type": "constant"
 },
 "brian2.units.allunits.dasteradian2": {
  "data": {
   "lineno": 3344
  },
  "type": "constant"
 },
 "brian2.units.allunits.dasteradian3": {
  "data": {
   "lineno": 3345
  },
  "type": "constant"
 },
 "brian2.units.allunits.datesla": {
  "data": {
   "lineno": 2625
  },
  "type": "constant"
 },
 "brian2.units.allunits.datesla2": {
  "data": {
   "lineno": 3824
  },
  "type": "constant"
 },
 "brian2.units.allunits.datesla3": {
  "data": {
   "lineno": 3825
  },
  "type": "constant"
 },
 "brian2.units.allunits.davolt": {
  "data": {
   "lineno": 2525
  },
  "type": "constant"
 },
 "brian2.units.allunits.davolt2": {
  "data": {
   "lineno": 3624
  },
  "type": "constant"
 },
 "brian2.units.allunits.davolt3": {
  "data": {
   "lineno": 3625
  },
  "type": "constant"
 },
 "brian2.units.allunits.dawatt": {
  "data": {
   "lineno": 2485
  },
  "type": "constant"
 },
 "brian2.units.allunits.dawatt2": {
  "data": {
   "lineno": 3544
  },
  "type": "constant"
 },
 "brian2.units.allunits.dawatt3": {
  "data": {
   "lineno": 3545
  },
  "type": "constant"
 },
 "brian2.units.allunits.daweber": {
  "data": {
   "lineno": 2605
  },
  "type": "constant"
 },
 "brian2.units.allunits.daweber2": {
  "data": {
   "lineno": 3784
  },
  "type": "constant"
 },
 "brian2.units.allunits.daweber3": {
  "data": {
   "lineno": 3785
  },
  "type": "constant"
 },
 "brian2.units.allunits.dbecquerel": {
  "data": {
   "lineno": 2701
  },
  "type": "constant"
 },
 "brian2.units.allunits.dbecquerel2": {
  "data": {
   "lineno": 3976
  },
  "type": "constant"
 },
 "brian2.units.allunits.dbecquerel3": {
  "data": {
   "lineno": 3977
  },
  "type": "constant"
 },
 "brian2.units.allunits.dcandle": {
  "data": {
   "lineno": 2281
  },
  "type": "constant"
 },
 "brian2.units.allunits.dcandle2": {
  "data": {
   "lineno": 3136
  },
  "type": "constant"
 },
 "brian2.units.allunits.dcandle3": {
  "data": {
   "lineno": 3137
  },
  "type": "constant"
 },
 "brian2.units.allunits.dcoulomb": {
  "data": {
   "lineno": 2501
  },
  "type": "constant"
 },
 "brian2.units.allunits.dcoulomb2": {
  "data": {
   "lineno": 3576
  },
  "type": "constant"
 },
 "brian2.units.allunits.dcoulomb3": {
  "data": {
   "lineno": 3577
  },
  "type": "constant"
 },
 "brian2.units.allunits.dfarad": {
  "data": {
   "lineno": 2541
  },
  "type": "constant"
 },
 "brian2.units.allunits.dfarad2": {
  "data": {
   "lineno": 3656
  },
  "type": "constant"
 },
 "brian2.units.allunits.dfarad3": {
  "data": {
   "lineno": 3657
  },
  "type": "constant"
 },
 "brian2.units.allunits.dgram": {
  "data": {
   "lineno": 2301
  },
  "type": "constant"
 },
 "brian2.units.allunits.dgram2": {
  "data": {
   "lineno": 3176
  },
  "type": "constant"
 },
 "brian2.units.allunits.dgram3": {
  "data": {
   "lineno": 3177
  },
  "type": "constant"
 },
 "brian2.units.allunits.dgramme": {
  "data": {
   "lineno": 2321
  },
  "type": "constant"
 },
 "brian2.units.allunits.dgramme2": {
  "data": {
   "lineno": 3216
  },
  "type": "constant"
 },
 "brian2.units.allunits.dgramme3": {
  "data": {
   "lineno": 3217
  },
  "type": "constant"
 },
 "brian2.units.allunits.dgray": {
  "data": {
   "lineno": 2721
  },
  "type": "constant"
 },
 "brian2.units.allunits.dgray2": {
  "data": {
   "lineno": 4016
  },
  "type": "constant"
 },
 "brian2.units.allunits.dgray3": {
  "data": {
   "lineno": 4017
  },
  "type": "constant"
 },
 "brian2.units.allunits.dhenry": {
  "data": {
   "lineno": 2641
  },
  "type": "constant"
 },
 "brian2.units.allunits.dhenry2": {
  "data": {
   "lineno": 3856
  },
  "type": "constant"
 },
 "brian2.units.allunits.dhenry3": {
  "data": {
   "lineno": 3857
  },
  "type": "constant"
 },
 "brian2.units.allunits.dhertz": {
  "data": {
   "lineno": 2401
  },
  "type": "constant"
 },
 "brian2.units.allunits.dhertz2": {
  "data": {
   "lineno": 3376
  },
  "type": "constant"
 },
 "brian2.units.allunits.dhertz3": {
  "data": {
   "lineno": 3377
  },
  "type": "constant"
 },
 "brian2.units.allunits.djoule": {
  "data": {
   "lineno": 2461
  },
  "type": "constant"
 },
 "brian2.units.allunits.djoule2": {
  "data": {
   "lineno": 3496
  },
  "type": "constant"
 },
 "brian2.units.allunits.djoule3": {
  "data": {
   "lineno": 3497
  },
  "type": "constant"
 },
 "brian2.units.allunits.dkatal": {
  "data": {
   "lineno": 2761
  },
  "type": "constant"
 },
 "brian2.units.allunits.dkatal2": {
  "data": {
   "lineno": 4096
  },
  "type": "constant"
 },
 "brian2.units.allunits.dkatal3": {
  "data": {
   "lineno": 4097
  },
  "type": "constant"
 },
 "brian2.units.allunits.dliter": {
  "data": {
   "lineno": 4133
  },
  "type": "constant"
 },
 "brian2.units.allunits.dlitre": {
  "data": {
   "lineno": 4154
  },
  "type": "constant"
 },
 "brian2.units.allunits.dlumen": {
  "data": {
   "lineno": 2661
  },
  "type": "constant"
 },
 "brian2.units.allunits.dlumen2": {
  "data": {
   "lineno": 3896
  },
  "type": "constant"
 },
 "brian2.units.allunits.dlumen3": {
  "data": {
   "lineno": 3897
  },
  "type": "constant"
 },
 "brian2.units.allunits.dlux": {
  "data": {
   "lineno": 2681
  },
  "type": "constant"
 },
 "brian2.units.allunits.dlux2": {
  "data": {
   "lineno": 3936
  },
  "type": "constant"
 },
 "brian2.units.allunits.dlux3": {
  "data": {
   "lineno": 3937
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmeter": {
  "data": {
   "lineno": 2161
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmeter2": {
  "data": {
   "lineno": 2896
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmeter3": {
  "data": {
   "lineno": 2897
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmetre": {
  "data": {
   "lineno": 2141
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmetre2": {
  "data": {
   "lineno": 2856
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmetre3": {
  "data": {
   "lineno": 2857
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmol": {
  "data": {
   "lineno": 2261
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmol2": {
  "data": {
   "lineno": 3096
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmol3": {
  "data": {
   "lineno": 3097
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmolar": {
  "data": {
   "lineno": 2341
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmolar2": {
  "data": {
   "lineno": 3256
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmolar3": {
  "data": {
   "lineno": 3257
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmole": {
  "data": {
   "lineno": 2241
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmole2": {
  "data": {
   "lineno": 3056
  },
  "type": "constant"
 },
 "brian2.units.allunits.dmole3": {
  "data": {
   "lineno": 3057
  },
  "type": "constant"
 },
 "brian2.units.allunits.dnewton": {
  "data": {
   "lineno": 2421
  },
  "type": "constant"
 },
 "brian2.units.allunits.dnewton2": {
  "data": {
   "lineno": 3416
  },
  "type": "constant"
 },
 "brian2.units.allunits.dnewton3": {
  "data": {
   "lineno": 3417
  },
  "type": "constant"
 },
 "brian2.units.allunits.dohm": {
  "data": {
   "lineno": 2561
  },
  "type": "constant"
 },
 "brian2.units.allunits.dohm2": {
  "data": {
   "lineno": 3696
  },
  "type": "constant"
 },
 "brian2.units.allunits.dohm3": {
  "data": {
   "lineno": 3697
  },
  "type": "constant"
 },
 "brian2.units.allunits.dpascal": {
  "data": {
   "lineno": 2441
  },
  "type": "constant"
 },
 "brian2.units.allunits.dpascal2": {
  "data": {
   "lineno": 3456
  },
  "type": "constant"
 },
 "brian2.units.allunits.dpascal3": {
  "data": {
   "lineno": 3457
  },
  "type": "constant"
 },
 "brian2.units.allunits.dradian": {
  "data": {
   "lineno": 2361
  },
  "type": "constant"
 },
 "brian2.units.allunits.dradian2": {
  "data": {
   "lineno": 3296
  },
  "type": "constant"
 },
 "brian2.units.allunits.dradian3": {
  "data": {
   "lineno": 3297
  },
  "type": "constant"
 },
 "brian2.units.allunits.dsecond": {
  "data": {
   "lineno": 2181
  },
  "type": "constant"
 },
 "brian2.units.allunits.dsecond2": {
  "data": {
   "lineno": 2936
  },
  "type": "constant"
 },
 "brian2.units.allunits.dsecond3": {
  "data": {
   "lineno": 2937
  },
  "type": "constant"
 },
 "brian2.units.allunits.dsiemens": {
  "data": {
   "lineno": 2581
  },
  "type": "constant"
 },
 "brian2.units.allunits.dsiemens2": {
  "data": {
   "lineno": 3736
  },
  "type": "constant"
 },
 "brian2.units.allunits.dsiemens3": {
  "data": {
   "lineno": 3737
  },
  "type": "constant"
 },
 "brian2.units.allunits.dsievert": {
  "data": {
   "lineno": 2741
  },
  "type": "constant"
 },
 "brian2.units.allunits.dsievert2": {
  "data": {
   "lineno": 4056
  },
  "type": "constant"
 },
 "brian2.units.allunits.dsievert3": {
  "data": {
   "lineno": 4057
  },
  "type": "constant"
 },
 "brian2.units.allunits.dsteradian": {
  "data": {
   "lineno": 2381
  },
  "type": "constant"
 },
 "brian2.units.allunits.dsteradian2": {
  "data": {
   "lineno": 3336
  },
  "type": "constant"
 },
 "brian2.units.allunits.dsteradian3": {
  "data": {
   "lineno": 3337
  },
  "type": "constant"
 },
 "brian2.units.allunits.dtesla": {
  "data": {
   "lineno": 2621
  },
  "type": "constant"
 },
 "brian2.units.allunits.dtesla2": {
  "data": {
   "lineno": 3816
  },
  "type": "constant"
 },
 "brian2.units.allunits.dtesla3": {
  "data": {
   "lineno": 3817
  },
  "type": "constant"
 },
 "brian2.units.allunits.dvolt": {
  "data": {
   "lineno": 2521
  },
  "type": "constant"
 },
 "brian2.units.allunits.dvolt2": {
  "data": {
   "lineno": 3616
  },
  "type": "constant"
 },
 "brian2.units.allunits.dvolt3": {
  "data": {
   "lineno": 3617
  },
  "type": "constant"
 },
 "brian2.units.allunits.dwatt": {
  "data": {
   "lineno": 2481
  },
  "type": "constant"
 },
 "brian2.units.allunits.dwatt2": {
  "data": {
   "lineno": 3536
  },
  "type": "constant"
 },
 "brian2.units.allunits.dwatt3": {
  "data": {
   "lineno": 3537
  },
  "type": "constant"
 },
 "brian2.units.allunits.dweber": {
  "data": {
   "lineno": 2601
  },
  "type": "constant"
 },
 "brian2.units.allunits.dweber2": {
  "data": {
   "lineno": 3776
  },
  "type": "constant"
 },
 "brian2.units.allunits.dweber3": {
  "data": {
   "lineno": 3777
  },
  "type": "constant"
 },
 "brian2.units.allunits.famp": {
  "data": {
   "lineno": 2203
  },
  "type": "constant"
 },
 "brian2.units.allunits.famp2": {
  "data": {
   "lineno": 2980
  },
  "type": "constant"
 },
 "brian2.units.allunits.famp3": {
  "data": {
   "lineno": 2981
  },
  "type": "constant"
 },
 "brian2.units.allunits.fampere": {
  "data": {
   "lineno": 2223
  },
  "type": "constant"
 },
 "brian2.units.allunits.fampere2": {
  "data": {
   "lineno": 3020
  },
  "type": "constant"
 },
 "brian2.units.allunits.fampere3": {
  "data": {
   "lineno": 3021
  },
  "type": "constant"
 },
 "brian2.units.allunits.farad": {
  "data": {
   "lineno": 2123
  },
  "type": "constant"
 },
 "brian2.units.allunits.farad2": {
  "data": {
   "lineno": 2824
  },
  "type": "constant"
 },
 "brian2.units.allunits.farad3": {
  "data": {
   "lineno": 2825
  },
  "type": "constant"
 },
 "brian2.units.allunits.fbecquerel": {
  "data": {
   "lineno": 2703
  },
  "type": "constant"
 },
 "brian2.units.allunits.fbecquerel2": {
  "data": {
   "lineno": 3980
  },
  "type": "constant"
 },
 "brian2.units.allunits.fbecquerel3": {
  "data": {
   "lineno": 3981
  },
  "type": "constant"
 },
 "brian2.units.allunits.fcandle": {
  "data": {
   "lineno": 2283
  },
  "type": "constant"
 },
 "brian2.units.allunits.fcandle2": {
  "data": {
   "lineno": 3140
  },
  "type": "constant"
 },
 "brian2.units.allunits.fcandle3": {
  "data": {
   "lineno": 3141
  },
  "type": "constant"
 },
 "brian2.units.allunits.fcoulomb": {
  "data": {
   "lineno": 2503
  },
  "type": "constant"
 },
 "brian2.units.allunits.fcoulomb2": {
  "data": {
   "lineno": 3580
  },
  "type": "constant"
 },
 "brian2.units.allunits.fcoulomb3": {
  "data": {
   "lineno": 3581
  },
  "type": "constant"
 },
 "brian2.units.allunits.ffarad": {
  "data": {
   "lineno": 2543
  },
  "type": "constant"
 },
 "brian2.units.allunits.ffarad2": {
  "data": {
   "lineno": 3660
  },
  "type": "constant"
 },
 "brian2.units.allunits.ffarad3": {
  "data": {
   "lineno": 3661
  },
  "type": "constant"
 },
 "brian2.units.allunits.fgram": {
  "data": {
   "lineno": 2303
  },
  "type": "constant"
 },
 "brian2.units.allunits.fgram2": {
  "data": {
   "lineno": 3180
  },
  "type": "constant"
 },
 "brian2.units.allunits.fgram3": {
  "data": {
   "lineno": 3181
  },
  "type": "constant"
 },
 "brian2.units.allunits.fgramme": {
  "data": {
   "lineno": 2323
  },
  "type": "constant"
 },
 "brian2.units.allunits.fgramme2": {
  "data": {
   "lineno": 3220
  },
  "type": "constant"
 },
 "brian2.units.allunits.fgramme3": {
  "data": {
   "lineno": 3221
  },
  "type": "constant"
 },
 "brian2.units.allunits.fgray": {
  "data": {
   "lineno": 2723
  },
  "type": "constant"
 },
 "brian2.units.allunits.fgray2": {
  "data": {
   "lineno": 4020
  },
  "type": "constant"
 },
 "brian2.units.allunits.fgray3": {
  "data": {
   "lineno": 4021
  },
  "type": "constant"
 },
 "brian2.units.allunits.fhenry": {
  "data": {
   "lineno": 2643
  },
  "type": "constant"
 },
 "brian2.units.allunits.fhenry2": {
  "data": {
   "lineno": 3860
  },
  "type": "constant"
 },
 "brian2.units.allunits.fhenry3": {
  "data": {
   "lineno": 3861
  },
  "type": "constant"
 },
 "brian2.units.allunits.fhertz": {
  "data": {
   "lineno": 2403
  },
  "type": "constant"
 },
 "brian2.units.allunits.fhertz2": {
  "data": {
   "lineno": 3380
  },
  "type": "constant"
 },
 "brian2.units.allunits.fhertz3": {
  "data": {
   "lineno": 3381
  },
  "type": "constant"
 },
 "brian2.units.allunits.fjoule": {
  "data": {
   "lineno": 2463
  },
  "type": "constant"
 },
 "brian2.units.allunits.fjoule2": {
  "data": {
   "lineno": 3500
  },
  "type": "constant"
 },
 "brian2.units.allunits.fjoule3": {
  "data": {
   "lineno": 3501
  },
  "type": "constant"
 },
 "brian2.units.allunits.fkatal": {
  "data": {
   "lineno": 2763
  },
  "type": "constant"
 },
 "brian2.units.allunits.fkatal2": {
  "data": {
   "lineno": 4100
  },
  "type": "constant"
 },
 "brian2.units.allunits.fkatal3": {
  "data": {
   "lineno": 4101
  },
  "type": "constant"
 },
 "brian2.units.allunits.fliter": {
  "data": {
   "lineno": 4135
  },
  "type": "constant"
 },
 "brian2.units.allunits.flitre": {
  "data": {
   "lineno": 4156
  },
  "type": "constant"
 },
 "brian2.units.allunits.flumen": {
  "data": {
   "lineno": 2663
  },
  "type": "constant"
 },
 "brian2.units.allunits.flumen2": {
  "data": {
   "lineno": 3900
  },
  "type": "constant"
 },
 "brian2.units.allunits.flumen3": {
  "data": {
   "lineno": 3901
  },
  "type": "constant"
 },
 "brian2.units.allunits.flux": {
  "data": {
   "lineno": 2683
  },
  "type": "constant"
 },
 "brian2.units.allunits.flux2": {
  "data": {
   "lineno": 3940
  },
  "type": "constant"
 },
 "brian2.units.allunits.flux3": {
  "data": {
   "lineno": 3941
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmeter": {
  "data": {
   "lineno": 2163
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmeter2": {
  "data": {
   "lineno": 2900
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmeter3": {
  "data": {
   "lineno": 2901
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmetre": {
  "data": {
   "lineno": 2143
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmetre2": {
  "data": {
   "lineno": 2860
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmetre3": {
  "data": {
   "lineno": 2861
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmol": {
  "data": {
   "lineno": 2263
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmol2": {
  "data": {
   "lineno": 3100
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmol3": {
  "data": {
   "lineno": 3101
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmolar": {
  "data": {
   "lineno": 2343
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmolar2": {
  "data": {
   "lineno": 3260
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmolar3": {
  "data": {
   "lineno": 3261
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmole": {
  "data": {
   "lineno": 2243
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmole2": {
  "data": {
   "lineno": 3060
  },
  "type": "constant"
 },
 "brian2.units.allunits.fmole3": {
  "data": {
   "lineno": 3061
  },
  "type": "constant"
 },
 "brian2.units.allunits.fnewton": {
  "data": {
   "lineno": 2423
  },
  "type": "constant"
 },
 "brian2.units.allunits.fnewton2": {
  "data": {
   "lineno": 3420
  },
  "type": "constant"
 },
 "brian2.units.allunits.fnewton3": {
  "data": {
   "lineno": 3421
  },
  "type": "constant"
 },
 "brian2.units.allunits.fohm": {
  "data": {
   "lineno": 2563
  },
  "type": "constant"
 },
 "brian2.units.allunits.fohm2": {
  "data": {
   "lineno": 3700
  },
  "type": "constant"
 },
 "brian2.units.allunits.fohm3": {
  "data": {
   "lineno": 3701
  },
  "type": "constant"
 },
 "brian2.units.allunits.fpascal": {
  "data": {
   "lineno": 2443
  },
  "type": "constant"
 },
 "brian2.units.allunits.fpascal2": {
  "data": {
   "lineno": 3460
  },
  "type": "constant"
 },
 "brian2.units.allunits.fpascal3": {
  "data": {
   "lineno": 3461
  },
  "type": "constant"
 },
 "brian2.units.allunits.fradian": {
  "data": {
   "lineno": 2363
  },
  "type": "constant"
 },
 "brian2.units.allunits.fradian2": {
  "data": {
   "lineno": 3300
  },
  "type": "constant"
 },
 "brian2.units.allunits.fradian3": {
  "data": {
   "lineno": 3301
  },
  "type": "constant"
 },
 "brian2.units.allunits.fsecond": {
  "data": {
   "lineno": 2183
  },
  "type": "constant"
 },
 "brian2.units.allunits.fsecond2": {
  "data": {
   "lineno": 2940
  },
  "type": "constant"
 },
 "brian2.units.allunits.fsecond3": {
  "data": {
   "lineno": 2941
  },
  "type": "constant"
 },
 "brian2.units.allunits.fsiemens": {
  "data": {
   "lineno": 2583
  },
  "type": "constant"
 },
 "brian2.units.allunits.fsiemens2": {
  "data": {
   "lineno": 3740
  },
  "type": "constant"
 },
 "brian2.units.allunits.fsiemens3": {
  "data": {
   "lineno": 3741
  },
  "type": "constant"
 },
 "brian2.units.allunits.fsievert": {
  "data": {
   "lineno": 2743
  },
  "type": "constant"
 },
 "brian2.units.allunits.fsievert2": {
  "data": {
   "lineno": 4060
  },
  "type": "constant"
 },
 "brian2.units.allunits.fsievert3": {
  "data": {
   "lineno": 4061
  },
  "type": "constant"
 },
 "brian2.units.allunits.fsteradian": {
  "data": {
   "lineno": 2383
  },
  "type": "constant"
 },
 "brian2.units.allunits.fsteradian2": {
  "data": {
   "lineno": 3340
  },
  "type": "constant"
 },
 "brian2.units.allunits.fsteradian3": {
  "data": {
   "lineno": 3341
  },
  "type": "constant"
 },
 "brian2.units.allunits.ftesla": {
  "data": {
   "lineno": 2623
  },
  "type": "constant"
 },
 "brian2.units.allunits.ftesla2": {
  "data": {
   "lineno": 3820
  },
  "type": "constant"
 },
 "brian2.units.allunits.ftesla3": {
  "data": {
   "lineno": 3821
  },
  "type": "constant"
 },
 "brian2.units.allunits.fundamental_units": {
  "data": {
   "lineno": 2112
  },
  "type": "constant"
 },
 "brian2.units.allunits.fvolt": {
  "data": {
   "lineno": 2523
  },
  "type": "constant"
 },
 "brian2.units.allunits.fvolt2": {
  "data": {
   "lineno": 3620
  },
  "type": "constant"
 },
 "brian2.units.allunits.fvolt3": {
  "data": {
   "lineno": 3621
  },
  "type": "constant"
 },
 "brian2.units.allunits.fwatt": {
  "data": {
   "lineno": 2483
  },
  "type": "constant"
 },
 "brian2.units.allunits.fwatt2": {
  "data": {
   "lineno": 3540
  },
  "type": "constant"
 },
 "brian2.units.allunits.fwatt3": {
  "data": {
   "lineno": 3541
  },
  "type": "constant"
 },
 "brian2.units.allunits.fweber": {
  "data": {
   "lineno": 2603
  },
  "type": "constant"
 },
 "brian2.units.allunits.fweber2": {
  "data": {
   "lineno": 3780
  },
  "type": "constant"
 },
 "brian2.units.allunits.fweber3": {
  "data": {
   "lineno": 3781
  },
  "type": "constant"
 },
 "brian2.units.allunits.gram": {
  "data": {
   "lineno": 2101
  },
  "type": "constant"
 },
 "brian2.units.allunits.gram2": {
  "data": {
   "lineno": 2800
  },
  "type": "constant"
 },
 "brian2.units.allunits.gram3": {
  "data": {
   "lineno": 2801
  },
  "type": "constant"
 },
 "brian2.units.allunits.gramme": {
  "data": {
   "lineno": 2102
  },
  "type": "constant"
 },
 "brian2.units.allunits.gramme2": {
  "data": {
   "lineno": 2802
  },
  "type": "constant"
 },
 "brian2.units.allunits.gramme3": {
  "data": {
   "lineno": 2803
  },
  "type": "constant"
 },
 "brian2.units.allunits.gray": {
  "data": {
   "lineno": 2132
  },
  "type": "constant"
 },
 "brian2.units.allunits.gray2": {
  "data": {
   "lineno": 2842
  },
  "type": "constant"
 },
 "brian2.units.allunits.gray3": {
  "data": {
   "lineno": 2843
  },
  "type": "constant"
 },
 "brian2.units.allunits.hamp": {
  "data": {
   "lineno": 2204
  },
  "type": "constant"
 },
 "brian2.units.allunits.hamp2": {
  "data": {
   "lineno": 2982
  },
  "type": "constant"
 },
 "brian2.units.allunits.hamp3": {
  "data": {
   "lineno": 2983
  },
  "type": "constant"
 },
 "brian2.units.allunits.hampere": {
  "data": {
   "lineno": 2224
  },
  "type": "constant"
 },
 "brian2.units.allunits.hampere2": {
  "data": {
   "lineno": 3022
  },
  "type": "constant"
 },
 "brian2.units.allunits.hampere3": {
  "data": {
   "lineno": 3023
  },
  "type": "constant"
 },
 "brian2.units.allunits.hbecquerel": {
  "data": {
   "lineno": 2704
  },
  "type": "constant"
 },
 "brian2.units.allunits.hbecquerel2": {
  "data": {
   "lineno": 3982
  },
  "type": "constant"
 },
 "brian2.units.allunits.hbecquerel3": {
  "data": {
   "lineno": 3983
  },
  "type": "constant"
 },
 "brian2.units.allunits.hcandle": {
  "data": {
   "lineno": 2284
  },
  "type": "constant"
 },
 "brian2.units.allunits.hcandle2": {
  "data": {
   "lineno": 3142
  },
  "type": "constant"
 },
 "brian2.units.allunits.hcandle3": {
  "data": {
   "lineno": 3143
  },
  "type": "constant"
 },
 "brian2.units.allunits.hcoulomb": {
  "data": {
   "lineno": 2504
  },
  "type": "constant"
 },
 "brian2.units.allunits.hcoulomb2": {
  "data": {
   "lineno": 3582
  },
  "type": "constant"
 },
 "brian2.units.allunits.hcoulomb3": {
  "data": {
   "lineno": 3583
  },
  "type": "constant"
 },
 "brian2.units.allunits.henry": {
  "data": {
   "lineno": 2128
  },
  "type": "constant"
 },
 "brian2.units.allunits.henry2": {
  "data": {
   "lineno": 2834
  },
  "type": "constant"
 },
 "brian2.units.allunits.henry3": {
  "data": {
   "lineno": 2835
  },
  "type": "constant"
 },
 "brian2.units.allunits.hertz": {
  "data": {
   "lineno": 2116
  },
  "type": "constant"
 },
 "brian2.units.allunits.hertz2": {
  "data": {
   "lineno": 2810
  },
  "type": "constant"
 },
 "brian2.units.allunits.hertz3": {
  "data": {
   "lineno": 2811
  },
  "type": "constant"
 },
 "brian2.units.allunits.hfarad": {
  "data": {
   "lineno": 2544
  },
  "type": "constant"
 },
 "brian2.units.allunits.hfarad2": {
  "data": {
   "lineno": 3662
  },
  "type": "constant"
 },
 "brian2.units.allunits.hfarad3": {
  "data": {
   "lineno": 3663
  },
  "type": "constant"
 },
 "brian2.units.allunits.hgram": {
  "data": {
   "lineno": 2304
  },
  "type": "constant"
 },
 "brian2.units.allunits.hgram2": {
  "data": {
   "lineno": 3182
  },
  "type": "constant"
 },
 "brian2.units.allunits.hgram3": {
  "data": {
   "lineno": 3183
  },
  "type": "constant"
 },
 "brian2.units.allunits.hgramme": {
  "data": {
   "lineno": 2324
  },
  "type": "constant"
 },
 "brian2.units.allunits.hgramme2": {
  "data": {
   "lineno": 3222
  },
  "type": "constant"
 },
 "brian2.units.allunits.hgramme3": {
  "data": {
   "lineno": 3223
  },
  "type": "constant"
 },
 "brian2.units.allunits.hgray": {
  "data": {
   "lineno": 2724
  },
  "type": "constant"
 },
 "brian2.units.allunits.hgray2": {
  "data": {
   "lineno": 4022
  },
  "type": "constant"
 },
 "brian2.units.allunits.hgray3": {
  "data": {
   "lineno": 4023
  },
  "type": "constant"
 },
 "brian2.units.allunits.hhenry": {
  "data": {
   "lineno": 2644
  },
  "type": "constant"
 },
 "brian2.units.allunits.hhenry2": {
  "data": {
   "lineno": 3862
  },
  "type": "constant"
 },
 "brian2.units.allunits.hhenry3": {
  "data": {
   "lineno": 3863
  },
  "type": "constant"
 },
 "brian2.units.allunits.hhertz": {
  "data": {
   "lineno": 2404
  },
  "type": "constant"
 },
 "brian2.units.allunits.hhertz2": {
  "data": {
   "lineno": 3382
  },
  "type": "constant"
 },
 "brian2.units.allunits.hhertz3": {
  "data": {
   "lineno": 3383
  },
  "type": "constant"
 },
 "brian2.units.allunits.hjoule": {
  "data": {
   "lineno": 2464
  },
  "type": "constant"
 },
 "brian2.units.allunits.hjoule2": {
  "data": {
   "lineno": 3502
  },
  "type": "constant"
 },
 "brian2.units.allunits.hjoule3": {
  "data": {
   "lineno": 3503
  },
  "type": "constant"
 },
 "brian2.units.allunits.hkatal": {
  "data": {
   "lineno": 2764
  },
  "type": "constant"
 },
 "brian2.units.allunits.hkatal2": {
  "data": {
   "lineno": 4102
  },
  "type": "constant"
 },
 "brian2.units.allunits.hkatal3": {
  "data": {
   "lineno": 4103
  },
  "type": "constant"
 },
 "brian2.units.allunits.hliter": {
  "data": {
   "lineno": 4136
  },
  "type": "constant"
 },
 "brian2.units.allunits.hlitre": {
  "data": {
   "lineno": 4157
  },
  "type": "constant"
 },
 "brian2.units.allunits.hlumen": {
  "data": {
   "lineno": 2664
  },
  "type": "constant"
 },
 "brian2.units.allunits.hlumen2": {
  "data": {
   "lineno": 3902
  },
  "type": "constant"
 },
 "brian2.units.allunits.hlumen3": {
  "data": {
   "lineno": 3903
  },
  "type": "constant"
 },
 "brian2.units.allunits.hlux": {
  "data": {
   "lineno": 2684
  },
  "type": "constant"
 },
 "brian2.units.allunits.hlux2": {
  "data": {
   "lineno": 3942
  },
  "type": "constant"
 },
 "brian2.units.allunits.hlux3": {
  "data": {
   "lineno": 3943
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmeter": {
  "data": {
   "lineno": 2164
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmeter2": {
  "data": {
   "lineno": 2902
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmeter3": {
  "data": {
   "lineno": 2903
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmetre": {
  "data": {
   "lineno": 2144
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmetre2": {
  "data": {
   "lineno": 2862
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmetre3": {
  "data": {
   "lineno": 2863
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmol": {
  "data": {
   "lineno": 2264
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmol2": {
  "data": {
   "lineno": 3102
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmol3": {
  "data": {
   "lineno": 3103
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmolar": {
  "data": {
   "lineno": 2344
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmolar2": {
  "data": {
   "lineno": 3262
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmolar3": {
  "data": {
   "lineno": 3263
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmole": {
  "data": {
   "lineno": 2244
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmole2": {
  "data": {
   "lineno": 3062
  },
  "type": "constant"
 },
 "brian2.units.allunits.hmole3": {
  "data": {
   "lineno": 3063
  },
  "type": "constant"
 },
 "brian2.units.allunits.hnewton": {
  "data": {
   "lineno": 2424
  },
  "type": "constant"
 },
 "brian2.units.allunits.hnewton2": {
  "data": {
   "lineno": 3422
  },
  "type": "constant"
 },
 "brian2.units.allunits.hnewton3": {
  "data": {
   "lineno": 3423
  },
  "type": "constant"
 },
 "brian2.units.allunits.hohm": {
  "data": {
   "lineno": 2564
  },
  "type": "constant"
 },
 "brian2.units.allunits.hohm2": {
  "data": {
   "lineno": 3702
  },
  "type": "constant"
 },
 "brian2.units.allunits.hohm3": {
  "data": {
   "lineno": 3703
  },
  "type": "constant"
 },
 "brian2.units.allunits.hpascal": {
  "data": {
   "lineno": 2444
  },
  "type": "constant"
 },
 "brian2.units.allunits.hpascal2": {
  "data": {
   "lineno": 3462
  },
  "type": "constant"
 },
 "brian2.units.allunits.hpascal3": {
  "data": {
   "lineno": 3463
  },
  "type": "constant"
 },
 "brian2.units.allunits.hradian": {
  "data": {
   "lineno": 2364
  },
  "type": "constant"
 },
 "brian2.units.allunits.hradian2": {
  "data": {
   "lineno": 3302
  },
  "type": "constant"
 },
 "brian2.units.allunits.hradian3": {
  "data": {
   "lineno": 3303
  },
  "type": "constant"
 },
 "brian2.units.allunits.hsecond": {
  "data": {
   "lineno": 2184
  },
  "type": "constant"
 },
 "brian2.units.allunits.hsecond2": {
  "data": {
   "lineno": 2942
  },
  "type": "constant"
 },
 "brian2.units.allunits.hsecond3": {
  "data": {
   "lineno": 2943
  },
  "type": "constant"
 },
 "brian2.units.allunits.hsiemens": {
  "data": {
   "lineno": 2584
  },
  "type": "constant"
 },
 "brian2.units.allunits.hsiemens2": {
  "data": {
   "lineno": 3742
  },
  "type": "constant"
 },
 "brian2.units.allunits.hsiemens3": {
  "data": {
   "lineno": 3743
  },
  "type": "constant"
 },
 "brian2.units.allunits.hsievert": {
  "data": {
   "lineno": 2744
  },
  "type": "constant"
 },
 "brian2.units.allunits.hsievert2": {
  "data": {
   "lineno": 4062
  },
  "type": "constant"
 },
 "brian2.units.allunits.hsievert3": {
  "data": {
   "lineno": 4063
  },
  "type": "constant"
 },
 "brian2.units.allunits.hsteradian": {
  "data": {
   "lineno": 2384
  },
  "type": "constant"
 },
 "brian2.units.allunits.hsteradian2": {
  "data": {
   "lineno": 3342
  },
  "type": "constant"
 },
 "brian2.units.allunits.hsteradian3": {
  "data": {
   "lineno": 3343
  },
  "type": "constant"
 },
 "brian2.units.allunits.htesla": {
  "data": {
   "lineno": 2624
  },
  "type": "constant"
 },
 "brian2.units.allunits.htesla2": {
  "data": {
   "lineno": 3822
  },
  "type": "constant"
 },
 "brian2.units.allunits.htesla3": {
  "data": {
   "lineno": 3823
  },
  "type": "constant"
 },
 "brian2.units.allunits.hvolt": {
  "data": {
   "lineno": 2524
  },
  "type": "constant"
 },
 "brian2.units.allunits.hvolt2": {
  "data": {
   "lineno": 3622
  },
  "type": "constant"
 },
 "brian2.units.allunits.hvolt3": {
  "data": {
   "lineno": 3623
  },
  "type": "constant"
 },
 "brian2.units.allunits.hwatt": {
  "data": {
   "lineno": 2484
  },
  "type": "constant"
 },
 "brian2.units.allunits.hwatt2": {
  "data": {
   "lineno": 3542
  },
  "type": "constant"
 },
 "brian2.units.allunits.hwatt3": {
  "data": {
   "lineno": 3543
  },
  "type": "constant"
 },
 "brian2.units.allunits.hweber": {
  "data": {
   "lineno": 2604
  },
  "type": "constant"
 },
 "brian2.units.allunits.hweber2": {
  "data": {
   "lineno": 3782
  },
  "type": "constant"
 },
 "brian2.units.allunits.hweber3": {
  "data": {
   "lineno": 3783
  },
  "type": "constant"
 },
 "brian2.units.allunits.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "brian2.units.allunits.joule": {
  "data": {
   "lineno": 2119
  },
  "type": "constant"
 },
 "brian2.units.allunits.joule2": {
  "data": {
   "lineno": 2816
  },
  "type": "constant"
 },
 "brian2.units.allunits.joule3": {
  "data": {
   "lineno": 2817
  },
  "type": "constant"
 },
 "brian2.units.allunits.kamp": {
  "data": {
   "lineno": 2215
  },
  "type": "constant"
 },
 "brian2.units.allunits.kamp2": {
  "data": {
   "lineno": 3004
  },
  "type": "constant"
 },
 "brian2.units.allunits.kamp3": {
  "data": {
   "lineno": 3005
  },
  "type": "constant"
 },
 "brian2.units.allunits.kampere": {
  "data": {
   "lineno": 2235
  },
  "type": "constant"
 },
 "brian2.units.allunits.kampere2": {
  "data": {
   "lineno": 3044
  },
  "type": "constant"
 },
 "brian2.units.allunits.kampere3": {
  "data": {
   "lineno": 3045
  },
  "type": "constant"
 },
 "brian2.units.allunits.katal": {
  "data": {
   "lineno": 2134
  },
  "type": "constant"
 },
 "brian2.units.allunits.katal2": {
  "data": {
   "lineno": 2846
  },
  "type": "constant"
 },
 "brian2.units.allunits.katal3": {
  "data": {
   "lineno": 2847
  },
  "type": "constant"
 },
 "brian2.units.allunits.kbecquerel": {
  "data": {
   "lineno": 2715
  },
  "type": "constant"
 },
 "brian2.units.allunits.kbecquerel2": {
  "data": {
   "lineno": 4004
  },
  "type": "constant"
 },
 "brian2.units.allunits.kbecquerel3": {
  "data": {
   "lineno": 4005
  },
  "type": "constant"
 },
 "brian2.units.allunits.kcandle": {
  "data": {
   "lineno": 2295
  },
  "type": "constant"
 },
 "brian2.units.allunits.kcandle2": {
  "data": {
   "lineno": 3164
  },
  "type": "constant"
 },
 "brian2.units.allunits.kcandle3": {
  "data": {
   "lineno": 3165
  },
  "type": "constant"
 },
 "brian2.units.allunits.kcoulomb": {
  "data": {
   "lineno": 2515
  },
  "type": "constant"
 },
 "brian2.units.allunits.kcoulomb2": {
  "data": {
   "lineno": 3604
  },
  "type": "constant"
 },
 "brian2.units.allunits.kcoulomb3": {
  "data": {
   "lineno": 3605
  },
  "type": "constant"
 },
 "brian2.units.allunits.kelvin": {
  "data": {
   "lineno": 2106
  },
  "type": "constant"
 },
 "brian2.units.allunits.kelvin2": {
  "data": {
   "lineno": 2790
  },
  "type": "constant"
 },
 "brian2.units.allunits.kelvin3": {
  "data": {
   "lineno": 2791
  },
  "type": "constant"
 },
 "brian2.units.allunits.kfarad": {
  "data": {
   "lineno": 2555
  },
  "type": "constant"
 },
 "brian2.units.allunits.kfarad2": {
  "data": {
   "lineno": 3684
  },
  "type": "constant"
 },
 "brian2.units.allunits.kfarad3": {
  "data": {
   "lineno": 3685
  },
  "type": "constant"
 },
 "brian2.units.allunits.kgram": {
  "data": {
   "lineno": 2315
  },
  "type": "constant"
 },
 "brian2.units.allunits.kgram2": {
  "data": {
   "lineno": 3204
  },
  "type": "constant"
 },
 "brian2.units.allunits.kgram3": {
  "data": {
   "lineno": 3205
  },
  "type": "constant"
 },
 "brian2.units.allunits.kgramme": {
  "data": {
   "lineno": 2335
  },
  "type": "constant"
 },
 "brian2.units.allunits.kgramme2": {
  "data": {
   "lineno": 3244
  },
  "type": "constant"
 },
 "brian2.units.allunits.kgramme3": {
  "data": {
   "lineno": 3245
  },
  "type": "constant"
 },
 "brian2.units.allunits.kgray": {
  "data": {
   "lineno": 2735
  },
  "type": "constant"
 },
 "brian2.units.allunits.kgray2": {
  "data": {
   "lineno": 4044
  },
  "type": "constant"
 },
 "brian2.units.allunits.kgray3": {
  "data": {
   "lineno": 4045
  },
  "type": "constant"
 },
 "brian2.units.allunits.khenry": {
  "data": {
   "lineno": 2655
  },
  "type": "constant"
 },
 "brian2.units.allunits.khenry2": {
  "data": {
   "lineno": 3884
  },
  "type": "constant"
 },
 "brian2.units.allunits.khenry3": {
  "data": {
   "lineno": 3885
  },
  "type": "constant"
 },
 "brian2.units.allunits.khertz": {
  "data": {
   "lineno": 2415
  },
  "type": "constant"
 },
 "brian2.units.allunits.khertz2": {
  "data": {
   "lineno": 3404
  },
  "type": "constant"
 },
 "brian2.units.allunits.khertz3": {
  "data": {
   "lineno": 3405
  },
  "type": "constant"
 },
 "brian2.units.allunits.kilogram": {
  "data": {
   "lineno": 2099
  },
  "type": "constant"
 },
 "brian2.units.allunits.kilogram2": {
  "data": {
   "lineno": 2782
  },
  "type": "constant"
 },
 "brian2.units.allunits.kilogram3": {
  "data": {
   "lineno": 2783
  },
  "type": "constant"
 },
 "brian2.units.allunits.kilogramme": {
  "data": {
   "lineno": 2100
  },
  "type": "constant"
 },
 "brian2.units.allunits.kilogramme2": {
  "data": {
   "lineno": 2798
  },
  "type": "constant"
 },
 "brian2.units.allunits.kilogramme3": {
  "data": {
   "lineno": 2799
  },
  "type": "constant"
 },
 "brian2.units.allunits.kjoule": {
  "data": {
   "lineno": 2475
  },
  "type": "constant"
 },
 "brian2.units.allunits.kjoule2": {
  "data": {
   "lineno": 3524
  },
  "type": "constant"
 },
 "brian2.units.allunits.kjoule3": {
  "data": {
   "lineno": 3525
  },
  "type": "constant"
 },
 "brian2.units.allunits.kkatal": {
  "data": {
   "lineno": 2775
  },
  "type": "constant"
 },
 "brian2.units.allunits.kkatal2": {
  "data": {
   "lineno": 4124
  },
  "type": "constant"
 },
 "brian2.units.allunits.kkatal3": {
  "data": {
   "lineno": 4125
  },
  "type": "constant"
 },
 "brian2.units.allunits.kliter": {
  "data": {
   "lineno": 4147
  },
  "type": "constant"
 },
 "brian2.units.allunits.klitre": {
  "data": {
   "lineno": 4168
  },
  "type": "constant"
 },
 "brian2.units.allunits.klumen": {
  "data": {
   "lineno": 2675
  },
  "type": "constant"
 },
 "brian2.units.allunits.klumen2": {
  "data": {
   "lineno": 3924
  },
  "type": "constant"
 },
 "brian2.units.allunits.klumen3": {
  "data": {
   "lineno": 3925
  },
  "type": "constant"
 },
 "brian2.units.allunits.klux": {
  "data": {
   "lineno": 2695
  },
  "type": "constant"
 },
 "brian2.units.allunits.klux2": {
  "data": {
   "lineno": 3964
  },
  "type": "constant"
 },
 "brian2.units.allunits.klux3": {
  "data": {
   "lineno": 3965
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmeter": {
  "data": {
   "lineno": 2175
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmeter2": {
  "data": {
   "lineno": 2924
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmeter3": {
  "data": {
   "lineno": 2925
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmetre": {
  "data": {
   "lineno": 2155
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmetre2": {
  "data": {
   "lineno": 2884
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmetre3": {
  "data": {
   "lineno": 2885
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmol": {
  "data": {
   "lineno": 2275
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmol2": {
  "data": {
   "lineno": 3124
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmol3": {
  "data": {
   "lineno": 3125
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmolar": {
  "data": {
   "lineno": 2355
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmolar2": {
  "data": {
   "lineno": 3284
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmolar3": {
  "data": {
   "lineno": 3285
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmole": {
  "data": {
   "lineno": 2255
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmole2": {
  "data": {
   "lineno": 3084
  },
  "type": "constant"
 },
 "brian2.units.allunits.kmole3": {
  "data": {
   "lineno": 3085
  },
  "type": "constant"
 },
 "brian2.units.allunits.knewton": {
  "data": {
   "lineno": 2435
  },
  "type": "constant"
 },
 "brian2.units.allunits.knewton2": {
  "data": {
   "lineno": 3444
  },
  "type": "constant"
 },
 "brian2.units.allunits.knewton3": {
  "data": {
   "lineno": 3445
  },
  "type": "constant"
 },
 "brian2.units.allunits.kohm": {
  "data": {
   "lineno": 2575
  },
  "type": "constant"
 },
 "brian2.units.allunits.kohm2": {
  "data": {
   "lineno": 3724
  },
  "type": "constant"
 },
 "brian2.units.allunits.kohm3": {
  "data": {
   "lineno": 3725
  },
  "type": "constant"
 },
 "brian2.units.allunits.kpascal": {
  "data": {
   "lineno": 2455
  },
  "type": "constant"
 },
 "brian2.units.allunits.kpascal2": {
  "data": {
   "lineno": 3484
  },
  "type": "constant"
 },
 "brian2.units.allunits.kpascal3": {
  "data": {
   "lineno": 3485
  },
  "type": "constant"
 },
 "brian2.units.allunits.kradian": {
  "data": {
   "lineno": 2375
  },
  "type": "constant"
 },
 "brian2.units.allunits.kradian2": {
  "data": {
   "lineno": 3324
  },
  "type": "constant"
 },
 "brian2.units.allunits.kradian3": {
  "data": {
   "lineno": 3325
  },
  "type": "constant"
 },
 "brian2.units.allunits.ksecond": {
  "data": {
   "lineno": 2195
  },
  "type": "constant"
 },
 "brian2.units.allunits.ksecond2": {
  "data": {
   "lineno": 2964
  },
  "type": "constant"
 },
 "brian2.units.allunits.ksecond3": {
  "data": {
   "lineno": 2965
  },
  "type": "constant"
 },
 "brian2.units.allunits.ksiemens": {
  "data": {
   "lineno": 2595
  },
  "type": "constant"
 },
 "brian2.units.allunits.ksiemens2": {
  "data": {
   "lineno": 3764
  },
  "type": "constant"
 },
 "brian2.units.allunits.ksiemens3": {
  "data": {
   "lineno": 3765
  },
  "type": "constant"
 },
 "brian2.units.allunits.ksievert": {
  "data": {
   "lineno": 2755
  },
  "type": "constant"
 },
 "brian2.units.allunits.ksievert2": {
  "data": {
   "lineno": 4084
  },
  "type": "constant"
 },
 "brian2.units.allunits.ksievert3": {
  "data": {
   "lineno": 4085
  },
  "type": "constant"
 },
 "brian2.units.allunits.ksteradian": {
  "data": {
   "lineno": 2395
  },
  "type": "constant"
 },
 "brian2.units.allunits.ksteradian2": {
  "data": {
   "lineno": 3364
  },
  "type": "constant"
 },
 "brian2.units.allunits.ksteradian3": {
  "data": {
   "lineno": 3365
  },
  "type": "constant"
 },
 "brian2.units.allunits.ktesla": {
  "data": {
   "lineno": 2635
  },
  "type": "constant"
 },
 "brian2.units.allunits.ktesla2": {
  "data": {
   "lineno": 3844
  },
  "type": "constant"
 },
 "brian2.units.allunits.ktesla3": {
  "data": {
   "lineno": 3845
  },
  "type": "constant"
 },
 "brian2.units.allunits.kvolt": {
  "data": {
   "lineno": 2535
  },
  "type": "constant"
 },
 "brian2.units.allunits.kvolt2": {
  "data": {
   "lineno": 3644
  },
  "type": "constant"
 },
 "brian2.units.allunits.kvolt3": {
  "data": {
   "lineno": 3645
  },
  "type": "constant"
 },
 "brian2.units.allunits.kwatt": {
  "data": {
   "lineno": 2495
  },
  "type": "constant"
 },
 "brian2.units.allunits.kwatt2": {
  "data": {
   "lineno": 3564
  },
  "type": "constant"
 },
 "brian2.units.allunits.kwatt3": {
  "data": {
   "lineno": 3565
  },
  "type": "constant"
 },
 "brian2.units.allunits.kweber": {
  "data": {
   "lineno": 2615
  },
  "type": "constant"
 },
 "brian2.units.allunits.kweber2": {
  "data": {
   "lineno": 3804
  },
  "type": "constant"
 },
 "brian2.units.allunits.kweber3": {
  "data": {
   "lineno": 3805
  },
  "type": "constant"
 },
 "brian2.units.allunits.liter": {
  "data": {
   "lineno": 4129
  },
  "type": "constant"
 },
 "brian2.units.allunits.litre": {
  "data": {
   "lineno": 4150
  },
  "type": "constant"
 },
 "brian2.units.allunits.lumen": {
  "data": {
   "lineno": 2129
  },
  "type": "constant"
 },
 "brian2.units.allunits.lumen2": {
  "data": {
   "lineno": 2836
  },
  "type": "constant"
 },
 "brian2.units.allunits.lumen3": {
  "data": {
   "lineno": 2837
  },
  "type": "constant"
 },
 "brian2.units.allunits.lux": {
  "data": {
   "lineno": 2130
  },
  "type": "constant"
 },
 "brian2.units.allunits.lux2": {
  "data": {
   "lineno": 2838
  },
  "type": "constant"
 },
 "brian2.units.allunits.lux3": {
  "data": {
   "lineno": 2839
  },
  "type": "constant"
 },
 "brian2.units.allunits.mamp": {
  "data": {
   "lineno": 2206
  },
  "type": "constant"
 },
 "brian2.units.allunits.mamp2": {
  "data": {
   "lineno": 2986
  },
  "type": "constant"
 },
 "brian2.units.allunits.mamp3": {
  "data": {
   "lineno": 2987
  },
  "type": "constant"
 },
 "brian2.units.allunits.mampere": {
  "data": {
   "lineno": 2226
  },
  "type": "constant"
 },
 "brian2.units.allunits.mampere2": {
  "data": {
   "lineno": 3026
  },
  "type": "constant"
 },
 "brian2.units.allunits.mampere3": {
  "data": {
   "lineno": 3027
  },
  "type": "constant"
 },
 "brian2.units.allunits.mbecquerel": {
  "data": {
   "lineno": 2706
  },
  "type": "constant"
 },
 "brian2.units.allunits.mbecquerel2": {
  "data": {
   "lineno": 3986
  },
  "type": "constant"
 },
 "brian2.units.allunits.mbecquerel3": {
  "data": {
   "lineno": 3987
  },
  "type": "constant"
 },
 "brian2.units.allunits.mcandle": {
  "data": {
   "lineno": 2286
  },
  "type": "constant"
 },
 "brian2.units.allunits.mcandle2": {
  "data": {
   "lineno": 3146
  },
  "type": "constant"
 },
 "brian2.units.allunits.mcandle3": {
  "data": {
   "lineno": 3147
  },
  "type": "constant"
 },
 "brian2.units.allunits.mcoulomb": {
  "data": {
   "lineno": 2506
  },
  "type": "constant"
 },
 "brian2.units.allunits.mcoulomb2": {
  "data": {
   "lineno": 3586
  },
  "type": "constant"
 },
 "brian2.units.allunits.mcoulomb3": {
  "data": {
   "lineno": 3587
  },
  "type": "constant"
 },
 "brian2.units.allunits.meter": {
  "data": {
   "lineno": 2095
  },
  "type": "constant"
 },
 "brian2.units.allunits.meter2": {
  "data": {
   "lineno": 2780
  },
  "type": "constant"
 },
 "brian2.units.allunits.meter3": {
  "data": {
   "lineno": 2781
  },
  "type": "constant"
 },
 "brian2.units.allunits.metre": {
  "data": {
   "lineno": 2094
  },
  "type": "constant"
 },
 "brian2.units.allunits.metre2": {
  "data": {
   "lineno": 2778
  },
  "type": "constant"
 },
 "brian2.units.allunits.metre3": {
  "data": {
   "lineno": 2779
  },
  "type": "constant"
 },
 "brian2.units.allunits.mfarad": {
  "data": {
   "lineno": 2546
  },
  "type": "constant"
 },
 "brian2.units.allunits.mfarad2": {
  "data": {
   "lineno": 3666
  },
  "type": "constant"
 },
 "brian2.units.allunits.mfarad3": {
  "data": {
   "lineno": 3667
  },
  "type": "constant"
 },
 "brian2.units.allunits.mgram": {
  "data": {
   "lineno": 2306
  },
  "type": "constant"
 },
 "brian2.units.allunits.mgram2": {
  "data": {
   "lineno": 3186
  },
  "type": "constant"
 },
 "brian2.units.allunits.mgram3": {
  "data": {
   "lineno": 3187
  },
  "type": "constant"
 },
 "brian2.units.allunits.mgramme": {
  "data": {
   "lineno": 2326
  },
  "type": "constant"
 },
 "brian2.units.allunits.mgramme2": {
  "data": {
   "lineno": 3226
  },
  "type": "constant"
 },
 "brian2.units.allunits.mgramme3": {
  "data": {
   "lineno": 3227
  },
  "type": "constant"
 },
 "brian2.units.allunits.mgray": {
  "data": {
   "lineno": 2726
  },
  "type": "constant"
 },
 "brian2.units.allunits.mgray2": {
  "data": {
   "lineno": 4026
  },
  "type": "constant"
 },
 "brian2.units.allunits.mgray3": {
  "data": {
   "lineno": 4027
  },
  "type": "constant"
 },
 "brian2.units.allunits.mhenry": {
  "data": {
   "lineno": 2646
  },
  "type": "constant"
 },
 "brian2.units.allunits.mhenry2": {
  "data": {
   "lineno": 3866
  },
  "type": "constant"
 },
 "brian2.units.allunits.mhenry3": {
  "data": {
   "lineno": 3867
  },
  "type": "constant"
 },
 "brian2.units.allunits.mhertz": {
  "data": {
   "lineno": 2406
  },
  "type": "constant"
 },
 "brian2.units.allunits.mhertz2": {
  "data": {
   "lineno": 3386
  },
  "type": "constant"
 },
 "brian2.units.allunits.mhertz3": {
  "data": {
   "lineno": 3387
  },
  "type": "constant"
 },
 "brian2.units.allunits.mjoule": {
  "data": {
   "lineno": 2466
  },
  "type": "constant"
 },
 "brian2.units.allunits.mjoule2": {
  "data": {
   "lineno": 3506
  },
  "type": "constant"
 },
 "brian2.units.allunits.mjoule3": {
  "data": {
   "lineno": 3507
  },
  "type": "constant"
 },
 "brian2.units.allunits.mkatal": {
  "data": {
   "lineno": 2766
  },
  "type": "constant"
 },
 "brian2.units.allunits.mkatal2": {
  "data": {
   "lineno": 4106
  },
  "type": "constant"
 },
 "brian2.units.allunits.mkatal3": {
  "data": {
   "lineno": 4107
  },
  "type": "constant"
 },
 "brian2.units.allunits.mliter": {
  "data": {
   "lineno": 4138
  },
  "type": "constant"
 },
 "brian2.units.allunits.mlitre": {
  "data": {
   "lineno": 4159
  },
  "type": "constant"
 },
 "brian2.units.allunits.mlumen": {
  "data": {
   "lineno": 2666
  },
  "type": "constant"
 },
 "brian2.units.allunits.mlumen2": {
  "data": {
   "lineno": 3906
  },
  "type": "constant"
 },
 "brian2.units.allunits.mlumen3": {
  "data": {
   "lineno": 3907
  },
  "type": "constant"
 },
 "brian2.units.allunits.mlux": {
  "data": {
   "lineno": 2686
  },
  "type": "constant"
 },
 "brian2.units.allunits.mlux2": {
  "data": {
   "lineno": 3946
  },
  "type": "constant"
 },
 "brian2.units.allunits.mlux3": {
  "data": {
   "lineno": 3947
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmeter": {
  "data": {
   "lineno": 2166
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmeter2": {
  "data": {
   "lineno": 2906
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmeter3": {
  "data": {
   "lineno": 2907
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmetre": {
  "data": {
   "lineno": 2146
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmetre2": {
  "data": {
   "lineno": 2866
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmetre3": {
  "data": {
   "lineno": 2867
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmol": {
  "data": {
   "lineno": 2266
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmol2": {
  "data": {
   "lineno": 3106
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmol3": {
  "data": {
   "lineno": 3107
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmolar": {
  "data": {
   "lineno": 2346
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmolar2": {
  "data": {
   "lineno": 3266
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmolar3": {
  "data": {
   "lineno": 3267
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmole": {
  "data": {
   "lineno": 2246
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmole2": {
  "data": {
   "lineno": 3066
  },
  "type": "constant"
 },
 "brian2.units.allunits.mmole3": {
  "data": {
   "lineno": 3067
  },
  "type": "constant"
 },
 "brian2.units.allunits.mnewton": {
  "data": {
   "lineno": 2426
  },
  "type": "constant"
 },
 "brian2.units.allunits.mnewton2": {
  "data": {
   "lineno": 3426
  },
  "type": "constant"
 },
 "brian2.units.allunits.mnewton3": {
  "data": {
   "lineno": 3427
  },
  "type": "constant"
 },
 "brian2.units.allunits.mohm": {
  "data": {
   "lineno": 2566
  },
  "type": "constant"
 },
 "brian2.units.allunits.mohm2": {
  "data": {
   "lineno": 3706
  },
  "type": "constant"
 },
 "brian2.units.allunits.mohm3": {
  "data": {
   "lineno": 3707
  },
  "type": "constant"
 },
 "brian2.units.allunits.mol": {
  "data": {
   "lineno": 2108
  },
  "type": "constant"
 },
 "brian2.units.allunits.mol2": {
  "data": {
   "lineno": 2794
  },
  "type": "constant"
 },
 "brian2.units.allunits.mol3": {
  "data": {
   "lineno": 2795
  },
  "type": "constant"
 },
 "brian2.units.allunits.molar": {
  "data": {
   "lineno": 2110
  },
  "type": "constant"
 },
 "brian2.units.allunits.molar2": {
  "data": {
   "lineno": 2804
  },
  "type": "constant"
 },
 "brian2.units.allunits.molar3": {
  "data": {
   "lineno": 2805
  },
  "type": "constant"
 },
 "brian2.units.allunits.mole": {
  "data": {
   "lineno": 2107
  },
  "type": "constant"
 },
 "brian2.units.allunits.mole2": {
  "data": {
   "lineno": 2792
  },
  "type": "constant"
 },
 "brian2.units.allunits.mole3": {
  "data": {
   "lineno": 2793
  },
  "type": "constant"
 },
 "brian2.units.allunits.mpascal": {
  "data": {
   "lineno": 2446
  },
  "type": "constant"
 },
 "brian2.units.allunits.mpascal2": {
  "data": {
   "lineno": 3466
  },
  "type": "constant"
 },
 "brian2.units.allunits.mpascal3": {
  "data": {
   "lineno": 3467
  },
  "type": "constant"
 },
 "brian2.units.allunits.mradian": {
  "data": {
   "lineno": 2366
  },
  "type": "constant"
 },
 "brian2.units.allunits.mradian2": {
  "data": {
   "lineno": 3306
  },
  "type": "constant"
 },
 "brian2.units.allunits.mradian3": {
  "data": {
   "lineno": 3307
  },
  "type": "constant"
 },
 "brian2.units.allunits.msecond": {
  "data": {
   "lineno": 2186
  },
  "type": "constant"
 },
 "brian2.units.allunits.msecond2": {
  "data": {
   "lineno": 2946
  },
  "type": "constant"
 },
 "brian2.units.allunits.msecond3": {
  "data": {
   "lineno": 2947
  },
  "type": "constant"
 },
 "brian2.units.allunits.msiemens": {
  "data": {
   "lineno": 2586
  },
  "type": "constant"
 },
 "brian2.units.allunits.msiemens2": {
  "data": {
   "lineno": 3746
  },
  "type": "constant"
 },
 "brian2.units.allunits.msiemens3": {
  "data": {
   "lineno": 3747
  },
  "type": "constant"
 },
 "brian2.units.allunits.msievert": {
  "data": {
   "lineno": 2746
  },
  "type": "constant"
 },
 "brian2.units.allunits.msievert2": {
  "data": {
   "lineno": 4066
  },
  "type": "constant"
 },
 "brian2.units.allunits.msievert3": {
  "data": {
   "lineno": 4067
  },
  "type": "constant"
 },
 "brian2.units.allunits.msteradian": {
  "data": {
   "lineno": 2386
  },
  "type": "constant"
 },
 "brian2.units.allunits.msteradian2": {
  "data": {
   "lineno": 3346
  },
  "type": "constant"
 },
 "brian2.units.allunits.msteradian3": {
  "data": {
   "lineno": 3347
  },
  "type": "constant"
 },
 "brian2.units.allunits.mtesla": {
  "data": {
   "lineno": 2626
  },
  "type": "constant"
 },
 "brian2.units.allunits.mtesla2": {
  "data": {
   "lineno": 3826
  },
  "type": "constant"
 },
 "brian2.units.allunits.mtesla3": {
  "data": {
   "lineno": 3827
  },
  "type": "constant"
 },
 "brian2.units.allunits.mvolt": {
  "data": {
   "lineno": 2526
  },
  "type": "constant"
 },
 "brian2.units.allunits.mvolt2": {
  "data": {
   "lineno": 3626
  },
  "type": "constant"
 },
 "brian2.units.allunits.mvolt3": {
  "data": {
   "lineno": 3627
  },
  "type": "constant"
 },
 "brian2.units.allunits.mwatt": {
  "data": {
   "lineno": 2486
  },
  "type": "constant"
 },
 "brian2.units.allunits.mwatt2": {
  "data": {
   "lineno": 3546
  },
  "type": "constant"
 },
 "brian2.units.allunits.mwatt3": {
  "data": {
   "lineno": 3547
  },
  "type": "constant"
 },
 "brian2.units.allunits.mweber": {
  "data": {
   "lineno": 2606
  },
  "type": "constant"
 },
 "brian2.units.allunits.mweber2": {
  "data": {
   "lineno": 3786
  },
  "type": "constant"
 },
 "brian2.units.allunits.mweber3": {
  "data": {
   "lineno": 3787
  },
  "type": "constant"
 },
 "brian2.units.allunits.namp": {
  "data": {
   "lineno": 2207
  },
  "type": "constant"
 },
 "brian2.units.allunits.namp2": {
  "data": {
   "lineno": 2988
  },
  "type": "constant"
 },
 "brian2.units.allunits.namp3": {
  "data": {
   "lineno": 2989
  },
  "type": "constant"
 },
 "brian2.units.allunits.nampere": {
  "data": {
   "lineno": 2227
  },
  "type": "constant"
 },
 "brian2.units.allunits.nampere2": {
  "data": {
   "lineno": 3028
  },
  "type": "constant"
 },
 "brian2.units.allunits.nampere3": {
  "data": {
   "lineno": 3029
  },
  "type": "constant"
 },
 "brian2.units.allunits.nbecquerel": {
  "data": {
   "lineno": 2707
  },
  "type": "constant"
 },
 "brian2.units.allunits.nbecquerel2": {
  "data": {
   "lineno": 3988
  },
  "type": "constant"
 },
 "brian2.units.allunits.nbecquerel3": {
  "data": {
   "lineno": 3989
  },
  "type": "constant"
 },
 "brian2.units.allunits.ncandle": {
  "data": {
   "lineno": 2287
  },
  "type": "constant"
 },
 "brian2.units.allunits.ncandle2": {
  "data": {
   "lineno": 3148
  },
  "type": "constant"
 },
 "brian2.units.allunits.ncandle3": {
  "data": {
   "lineno": 3149
  },
  "type": "constant"
 },
 "brian2.units.allunits.ncoulomb": {
  "data": {
   "lineno": 2507
  },
  "type": "constant"
 },
 "brian2.units.allunits.ncoulomb2": {
  "data": {
   "lineno": 3588
  },
  "type": "constant"
 },
 "brian2.units.allunits.ncoulomb3": {
  "data": {
   "lineno": 3589
  },
  "type": "constant"
 },
 "brian2.units.allunits.newton": {
  "data": {
   "lineno": 2117
  },
  "type": "constant"
 },
 "brian2.units.allunits.newton2": {
  "data": {
   "lineno": 2812
  },
  "type": "constant"
 },
 "brian2.units.allunits.newton3": {
  "data": {
   "lineno": 2813
  },
  "type": "constant"
 },
 "brian2.units.allunits.nfarad": {
  "data": {
   "lineno": 2547
  },
  "type": "constant"
 },
 "brian2.units.allunits.nfarad2": {
  "data": {
   "lineno": 3668
  },
  "type": "constant"
 },
 "brian2.units.allunits.nfarad3": {
  "data": {
   "lineno": 3669
  },
  "type": "constant"
 },
 "brian2.units.allunits.ngram": {
  "data": {
   "lineno": 2307
  },
  "type": "constant"
 },
 "brian2.units.allunits.ngram2": {
  "data": {
   "lineno": 3188
  },
  "type": "constant"
 },
 "brian2.units.allunits.ngram3": {
  "data": {
   "lineno": 3189
  },
  "type": "constant"
 },
 "brian2.units.allunits.ngramme": {
  "data": {
   "lineno": 2327
  },
  "type": "constant"
 },
 "brian2.units.allunits.ngramme2": {
  "data": {
   "lineno": 3228
  },
  "type": "constant"
 },
 "brian2.units.allunits.ngramme3": {
  "data": {
   "lineno": 3229
  },
  "type": "constant"
 },
 "brian2.units.allunits.ngray": {
  "data": {
   "lineno": 2727
  },
  "type": "constant"
 },
 "brian2.units.allunits.ngray2": {
  "data": {
   "lineno": 4028
  },
  "type": "constant"
 },
 "brian2.units.allunits.ngray3": {
  "data": {
   "lineno": 4029
  },
  "type": "constant"
 },
 "brian2.units.allunits.nhenry": {
  "data": {
   "lineno": 2647
  },
  "type": "constant"
 },
 "brian2.units.allunits.nhenry2": {
  "data": {
   "lineno": 3868
  },
  "type": "constant"
 },
 "brian2.units.allunits.nhenry3": {
  "data": {
   "lineno": 3869
  },
  "type": "constant"
 },
 "brian2.units.allunits.nhertz": {
  "data": {
   "lineno": 2407
  },
  "type": "constant"
 },
 "brian2.units.allunits.nhertz2": {
  "data": {
   "lineno": 3388
  },
  "type": "constant"
 },
 "brian2.units.allunits.nhertz3": {
  "data": {
   "lineno": 3389
  },
  "type": "constant"
 },
 "brian2.units.allunits.njoule": {
  "data": {
   "lineno": 2467
  },
  "type": "constant"
 },
 "brian2.units.allunits.njoule2": {
  "data": {
   "lineno": 3508
  },
  "type": "constant"
 },
 "brian2.units.allunits.njoule3": {
  "data": {
   "lineno": 3509
  },
  "type": "constant"
 },
 "brian2.units.allunits.nkatal": {
  "data": {
   "lineno": 2767
  },
  "type": "constant"
 },
 "brian2.units.allunits.nkatal2": {
  "data": {
   "lineno": 4108
  },
  "type": "constant"
 },
 "brian2.units.allunits.nkatal3": {
  "data": {
   "lineno": 4109
  },
  "type": "constant"
 },
 "brian2.units.allunits.nliter": {
  "data": {
   "lineno": 4139
  },
  "type": "constant"
 },
 "brian2.units.allunits.nlitre": {
  "data": {
   "lineno": 4160
  },
  "type": "constant"
 },
 "brian2.units.allunits.nlumen": {
  "data": {
   "lineno": 2667
  },
  "type": "constant"
 },
 "brian2.units.allunits.nlumen2": {
  "data": {
   "lineno": 3908
  },
  "type": "constant"
 },
 "brian2.units.allunits.nlumen3": {
  "data": {
   "lineno": 3909
  },
  "type": "constant"
 },
 "brian2.units.allunits.nlux": {
  "data": {
   "lineno": 2687
  },
  "type": "constant"
 },
 "brian2.units.allunits.nlux2": {
  "data": {
   "lineno": 3948
  },
  "type": "constant"
 },
 "brian2.units.allunits.nlux3": {
  "data": {
   "lineno": 3949
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmeter": {
  "data": {
   "lineno": 2167
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmeter2": {
  "data": {
   "lineno": 2908
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmeter3": {
  "data": {
   "lineno": 2909
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmetre": {
  "data": {
   "lineno": 2147
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmetre2": {
  "data": {
   "lineno": 2868
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmetre3": {
  "data": {
   "lineno": 2869
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmol": {
  "data": {
   "lineno": 2267
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmol2": {
  "data": {
   "lineno": 3108
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmol3": {
  "data": {
   "lineno": 3109
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmolar": {
  "data": {
   "lineno": 2347
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmolar2": {
  "data": {
   "lineno": 3268
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmolar3": {
  "data": {
   "lineno": 3269
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmole": {
  "data": {
   "lineno": 2247
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmole2": {
  "data": {
   "lineno": 3068
  },
  "type": "constant"
 },
 "brian2.units.allunits.nmole3": {
  "data": {
   "lineno": 3069
  },
  "type": "constant"
 },
 "brian2.units.allunits.nnewton": {
  "data": {
   "lineno": 2427
  },
  "type": "constant"
 },
 "brian2.units.allunits.nnewton2": {
  "data": {
   "lineno": 3428
  },
  "type": "constant"
 },
 "brian2.units.allunits.nnewton3": {
  "data": {
   "lineno": 3429
  },
  "type": "constant"
 },
 "brian2.units.allunits.nohm": {
  "data": {
   "lineno": 2567
  },
  "type": "constant"
 },
 "brian2.units.allunits.nohm2": {
  "data": {
   "lineno": 3708
  },
  "type": "constant"
 },
 "brian2.units.allunits.nohm3": {
  "data": {
   "lineno": 3709
  },
  "type": "constant"
 },
 "brian2.units.allunits.npascal": {
  "data": {
   "lineno": 2447
  },
  "type": "constant"
 },
 "brian2.units.allunits.npascal2": {
  "data": {
   "lineno": 3468
  },
  "type": "constant"
 },
 "brian2.units.allunits.npascal3": {
  "data": {
   "lineno": 3469
  },
  "type": "constant"
 },
 "brian2.units.allunits.nradian": {
  "data": {
   "lineno": 2367
  },
  "type": "constant"
 },
 "brian2.units.allunits.nradian2": {
  "data": {
   "lineno": 3308
  },
  "type": "constant"
 },
 "brian2.units.allunits.nradian3": {
  "data": {
   "lineno": 3309
  },
  "type": "constant"
 },
 "brian2.units.allunits.nsecond": {
  "data": {
   "lineno": 2187
  },
  "type": "constant"
 },
 "brian2.units.allunits.nsecond2": {
  "data": {
   "lineno": 2948
  },
  "type": "constant"
 },
 "brian2.units.allunits.nsecond3": {
  "data": {
   "lineno": 2949
  },
  "type": "constant"
 },
 "brian2.units.allunits.nsiemens": {
  "data": {
   "lineno": 2587
  },
  "type": "constant"
 },
 "brian2.units.allunits.nsiemens2": {
  "data": {
   "lineno": 3748
  },
  "type": "constant"
 },
 "brian2.units.allunits.nsiemens3": {
  "data": {
   "lineno": 3749
  },
  "type": "constant"
 },
 "brian2.units.allunits.nsievert": {
  "data": {
   "lineno": 2747
  },
  "type": "constant"
 },
 "brian2.units.allunits.nsievert2": {
  "data": {
   "lineno": 4068
  },
  "type": "constant"
 },
 "brian2.units.allunits.nsievert3": {
  "data": {
   "lineno": 4069
  },
  "type": "constant"
 },
 "brian2.units.allunits.nsteradian": {
  "data": {
   "lineno": 2387
  },
  "type": "constant"
 },
 "brian2.units.allunits.nsteradian2": {
  "data": {
   "lineno": 3348
  },
  "type": "constant"
 },
 "brian2.units.allunits.nsteradian3": {
  "data": {
   "lineno": 3349
  },
  "type": "constant"
 },
 "brian2.units.allunits.ntesla": {
  "data": {
   "lineno": 2627
  },
  "type": "constant"
 },
 "brian2.units.allunits.ntesla2": {
  "data": {
   "lineno": 3828
  },
  "type": "constant"
 },
 "brian2.units.allunits.ntesla3": {
  "data": {
   "lineno": 3829
  },
  "type": "constant"
 },
 "brian2.units.allunits.nvolt": {
  "data": {
   "lineno": 2527
  },
  "type": "constant"
 },
 "brian2.units.allunits.nvolt2": {
  "data": {
   "lineno": 3628
  },
  "type": "constant"
 },
 "brian2.units.allunits.nvolt3": {
  "data": {
   "lineno": 3629
  },
  "type": "constant"
 },
 "brian2.units.allunits.nwatt": {
  "data": {
   "lineno": 2487
  },
  "type": "constant"
 },
 "brian2.units.allunits.nwatt2": {
  "data": {
   "lineno": 3548
  },
  "type": "constant"
 },
 "brian2.units.allunits.nwatt3": {
  "data": {
   "lineno": 3549
  },
  "type": "constant"
 },
 "brian2.units.allunits.nweber": {
  "data": {
   "lineno": 2607
  },
  "type": "constant"
 },
 "brian2.units.allunits.nweber2": {
  "data": {
   "lineno": 3788
  },
  "type": "constant"
 },
 "brian2.units.allunits.nweber3": {
  "data": {
   "lineno": 3789
  },
  "type": "constant"
 },
 "brian2.units.allunits.ohm": {
  "data": {
   "lineno": 2124
  },
  "type": "constant"
 },
 "brian2.units.allunits.ohm2": {
  "data": {
   "lineno": 2826
  },
  "type": "constant"
 },
 "brian2.units.allunits.ohm3": {
  "data": {
   "lineno": 2827
  },
  "type": "constant"
 },
 "brian2.units.allunits.pamp": {
  "data": {
   "lineno": 2208
  },
  "type": "constant"
 },
 "brian2.units.allunits.pamp2": {
  "data": {
   "lineno": 2990
  },
  "type": "constant"
 },
 "brian2.units.allunits.pamp3": {
  "data": {
   "lineno": 2991
  },
  "type": "constant"
 },
 "brian2.units.allunits.pampere": {
  "data": {
   "lineno": 2228
  },
  "type": "constant"
 },
 "brian2.units.allunits.pampere2": {
  "data": {
   "lineno": 3030
  },
  "type": "constant"
 },
 "brian2.units.allunits.pampere3": {
  "data": {
   "lineno": 3031
  },
  "type": "constant"
 },
 "brian2.units.allunits.pascal": {
  "data": {
   "lineno": 2118
  },
  "type": "constant"
 },
 "brian2.units.allunits.pascal2": {
  "data": {
   "lineno": 2814
  },
  "type": "constant"
 },
 "brian2.units.allunits.pascal3": {
  "data": {
   "lineno": 2815
  },
  "type": "constant"
 },
 "brian2.units.allunits.pbecquerel": {
  "data": {
   "lineno": 2708
  },
  "type": "constant"
 },
 "brian2.units.allunits.pbecquerel2": {
  "data": {
   "lineno": 3990
  },
  "type": "constant"
 },
 "brian2.units.allunits.pbecquerel3": {
  "data": {
   "lineno": 3991
  },
  "type": "constant"
 },
 "brian2.units.allunits.pcandle": {
  "data": {
   "lineno": 2288
  },
  "type": "constant"
 },
 "brian2.units.allunits.pcandle2": {
  "data": {
   "lineno": 3150
  },
  "type": "constant"
 },
 "brian2.units.allunits.pcandle3": {
  "data": {
   "lineno": 3151
  },
  "type": "constant"
 },
 "brian2.units.allunits.pcoulomb": {
  "data": {
   "lineno": 2508
  },
  "type": "constant"
 },
 "brian2.units.allunits.pcoulomb2": {
  "data": {
   "lineno": 3590
  },
  "type": "constant"
 },
 "brian2.units.allunits.pcoulomb3": {
  "data": {
   "lineno": 3591
  },
  "type": "constant"
 },
 "brian2.units.allunits.pfarad": {
  "data": {
   "lineno": 2548
  },
  "type": "constant"
 },
 "brian2.units.allunits.pfarad2": {
  "data": {
   "lineno": 3670
  },
  "type": "constant"
 },
 "brian2.units.allunits.pfarad3": {
  "data": {
   "lineno": 3671
  },
  "type": "constant"
 },
 "brian2.units.allunits.pgram": {
  "data": {
   "lineno": 2308
  },
  "type": "constant"
 },
 "brian2.units.allunits.pgram2": {
  "data": {
   "lineno": 3190
  },
  "type": "constant"
 },
 "brian2.units.allunits.pgram3": {
  "data": {
   "lineno": 3191
  },
  "type": "constant"
 },
 "brian2.units.allunits.pgramme": {
  "data": {
   "lineno": 2328
  },
  "type": "constant"
 },
 "brian2.units.allunits.pgramme2": {
  "data": {
   "lineno": 3230
  },
  "type": "constant"
 },
 "brian2.units.allunits.pgramme3": {
  "data": {
   "lineno": 3231
  },
  "type": "constant"
 },
 "brian2.units.allunits.pgray": {
  "data": {
   "lineno": 2728
  },
  "type": "constant"
 },
 "brian2.units.allunits.pgray2": {
  "data": {
   "lineno": 4030
  },
  "type": "constant"
 },
 "brian2.units.allunits.pgray3": {
  "data": {
   "lineno": 4031
  },
  "type": "constant"
 },
 "brian2.units.allunits.phenry": {
  "data": {
   "lineno": 2648
  },
  "type": "constant"
 },
 "brian2.units.allunits.phenry2": {
  "data": {
   "lineno": 3870
  },
  "type": "constant"
 },
 "brian2.units.allunits.phenry3": {
  "data": {
   "lineno": 3871
  },
  "type": "constant"
 },
 "brian2.units.allunits.phertz": {
  "data": {
   "lineno": 2408
  },
  "type": "constant"
 },
 "brian2.units.allunits.phertz2": {
  "data": {
   "lineno": 3390
  },
  "type": "constant"
 },
 "brian2.units.allunits.phertz3": {
  "data": {
   "lineno": 3391
  },
  "type": "constant"
 },
 "brian2.units.allunits.pjoule": {
  "data": {
   "lineno": 2468
  },
  "type": "constant"
 },
 "brian2.units.allunits.pjoule2": {
  "data": {
   "lineno": 3510
  },
  "type": "constant"
 },
 "brian2.units.allunits.pjoule3": {
  "data": {
   "lineno": 3511
  },
  "type": "constant"
 },
 "brian2.units.allunits.pkatal": {
  "data": {
   "lineno": 2768
  },
  "type": "constant"
 },
 "brian2.units.allunits.pkatal2": {
  "data": {
   "lineno": 4110
  },
  "type": "constant"
 },
 "brian2.units.allunits.pkatal3": {
  "data": {
   "lineno": 4111
  },
  "type": "constant"
 },
 "brian2.units.allunits.pliter": {
  "data": {
   "lineno": 4140
  },
  "type": "constant"
 },
 "brian2.units.allunits.plitre": {
  "data": {
   "lineno": 4161
  },
  "type": "constant"
 },
 "brian2.units.allunits.plumen": {
  "data": {
   "lineno": 2668
  },
  "type": "constant"
 },
 "brian2.units.allunits.plumen2": {
  "data": {
   "lineno": 3910
  },
  "type": "constant"
 },
 "brian2.units.allunits.plumen3": {
  "data": {
   "lineno": 3911
  },
  "type": "constant"
 },
 "brian2.units.allunits.plux": {
  "data": {
   "lineno": 2688
  },
  "type": "constant"
 },
 "brian2.units.allunits.plux2": {
  "data": {
   "lineno": 3950
  },
  "type": "constant"
 },
 "brian2.units.allunits.plux3": {
  "data": {
   "lineno": 3951
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmeter": {
  "data": {
   "lineno": 2168
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmeter2": {
  "data": {
   "lineno": 2910
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmeter3": {
  "data": {
   "lineno": 2911
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmetre": {
  "data": {
   "lineno": 2148
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmetre2": {
  "data": {
   "lineno": 2870
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmetre3": {
  "data": {
   "lineno": 2871
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmol": {
  "data": {
   "lineno": 2268
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmol2": {
  "data": {
   "lineno": 3110
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmol3": {
  "data": {
   "lineno": 3111
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmolar": {
  "data": {
   "lineno": 2348
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmolar2": {
  "data": {
   "lineno": 3270
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmolar3": {
  "data": {
   "lineno": 3271
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmole": {
  "data": {
   "lineno": 2248
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmole2": {
  "data": {
   "lineno": 3070
  },
  "type": "constant"
 },
 "brian2.units.allunits.pmole3": {
  "data": {
   "lineno": 3071
  },
  "type": "constant"
 },
 "brian2.units.allunits.pnewton": {
  "data": {
   "lineno": 2428
  },
  "type": "constant"
 },
 "brian2.units.allunits.pnewton2": {
  "data": {
   "lineno": 3430
  },
  "type": "constant"
 },
 "brian2.units.allunits.pnewton3": {
  "data": {
   "lineno": 3431
  },
  "type": "constant"
 },
 "brian2.units.allunits.pohm": {
  "data": {
   "lineno": 2568
  },
  "type": "constant"
 },
 "brian2.units.allunits.pohm2": {
  "data": {
   "lineno": 3710
  },
  "type": "constant"
 },
 "brian2.units.allunits.pohm3": {
  "data": {
   "lineno": 3711
  },
  "type": "constant"
 },
 "brian2.units.allunits.powered_units": {
  "data": {
   "lineno": 4728
  },
  "type": "constant"
 },
 "brian2.units.allunits.ppascal": {
  "data": {
   "lineno": 2448
  },
  "type": "constant"
 },
 "brian2.units.allunits.ppascal2": {
  "data": {
   "lineno": 3470
  },
  "type": "constant"
 },
 "brian2.units.allunits.ppascal3": {
  "data": {
   "lineno": 3471
  },
  "type": "constant"
 },
 "brian2.units.allunits.pradian": {
  "data": {
   "lineno": 2368
  },
  "type": "constant"
 },
 "brian2.units.allunits.pradian2": {
  "data": {
   "lineno": 3310
  },
  "type": "constant"
 },
 "brian2.units.allunits.pradian3": {
  "data": {
   "lineno": 3311
  },
  "type": "constant"
 },
 "brian2.units.allunits.psecond": {
  "data": {
   "lineno": 2188
  },
  "type": "constant"
 },
 "brian2.units.allunits.psecond2": {
  "data": {
   "lineno": 2950
  },
  "type": "constant"
 },
 "brian2.units.allunits.psecond3": {
  "data": {
   "lineno": 2951
  },
  "type": "constant"
 },
 "brian2.units.allunits.psiemens": {
  "data": {
   "lineno": 2588
  },
  "type": "constant"
 },
 "brian2.units.allunits.psiemens2": {
  "data": {
   "lineno": 3750
  },
  "type": "constant"
 },
 "brian2.units.allunits.psiemens3": {
  "data": {
   "lineno": 3751
  },
  "type": "constant"
 },
 "brian2.units.allunits.psievert": {
  "data": {
   "lineno": 2748
  },
  "type": "constant"
 },
 "brian2.units.allunits.psievert2": {
  "data": {
   "lineno": 4070
  },
  "type": "constant"
 },
 "brian2.units.allunits.psievert3": {
  "data": {
   "lineno": 4071
  },
  "type": "constant"
 },
 "brian2.units.allunits.psteradian": {
  "data": {
   "lineno": 2388
  },
  "type": "constant"
 },
 "brian2.units.allunits.psteradian2": {
  "data": {
   "lineno": 3350
  },
  "type": "constant"
 },
 "brian2.units.allunits.psteradian3": {
  "data": {
   "lineno": 3351
  },
  "type": "constant"
 },
 "brian2.units.allunits.ptesla": {
  "data": {
   "lineno": 2628
  },
  "type": "constant"
 },
 "brian2.units.allunits.ptesla2": {
  "data": {
   "lineno": 3830
  },
  "type": "constant"
 },
 "brian2.units.allunits.ptesla3": {
  "data": {
   "lineno": 3831
  },
  "type": "constant"
 },
 "brian2.units.allunits.pvolt": {
  "data": {
   "lineno": 2528
  },
  "type": "constant"
 },
 "brian2.units.allunits.pvolt2": {
  "data": {
   "lineno": 3630
  },
  "type": "constant"
 },
 "brian2.units.allunits.pvolt3": {
  "data": {
   "lineno": 3631
  },
  "type": "constant"
 },
 "brian2.units.allunits.pwatt": {
  "data": {
   "lineno": 2488
  },
  "type": "constant"
 },
 "brian2.units.allunits.pwatt2": {
  "data": {
   "lineno": 3550
  },
  "type": "constant"
 },
 "brian2.units.allunits.pwatt3": {
  "data": {
   "lineno": 3551
  },
  "type": "constant"
 },
 "brian2.units.allunits.pweber": {
  "data": {
   "lineno": 2608
  },
  "type": "constant"
 },
 "brian2.units.allunits.pweber2": {
  "data": {
   "lineno": 3790
  },
  "type": "constant"
 },
 "brian2.units.allunits.pweber3": {
  "data": {
   "lineno": 3791
  },
  "type": "constant"
 },
 "brian2.units.allunits.radian": {
  "data": {
   "lineno": 2114
  },
  "type": "constant"
 },
 "brian2.units.allunits.radian2": {
  "data": {
   "lineno": 2806
  },
  "type": "constant"
 },
 "brian2.units.allunits.radian3": {
  "data": {
   "lineno": 2807
  },
  "type": "constant"
 },
 "brian2.units.allunits.scaled_units": {
  "data": {
   "lineno": 4212
  },
  "type": "constant"
 },
 "brian2.units.allunits.second": {
  "data": {
   "lineno": 2103
  },
  "type": "constant"
 },
 "brian2.units.allunits.second2": {
  "data": {
   "lineno": 2784
  },
  "type": "constant"
 },
 "brian2.units.allunits.second3": {
  "data": {
   "lineno": 2785
  },
  "type": "constant"
 },
 "brian2.units.allunits.siemens": {
  "data": {
   "lineno": 2125
  },
  "type": "constant"
 },
 "brian2.units.allunits.siemens2": {
  "data": {
   "lineno": 2828
  },
  "type": "constant"
 },
 "brian2.units.allunits.siemens3": {
  "data": {
   "lineno": 2829
  },
  "type": "constant"
 },
 "brian2.units.allunits.sievert": {
  "data": {
   "lineno": 2133
  },
  "type": "constant"
 },
 "brian2.units.allunits.sievert2": {
  "data": {
   "lineno": 2844
  },
  "type": "constant"
 },
 "brian2.units.allunits.sievert3": {
  "data": {
   "lineno": 2845
  },
  "type": "constant"
 },
 "brian2.units.allunits.steradian": {
  "data": {
   "lineno": 2115
  },
  "type": "constant"
 },
 "brian2.units.allunits.steradian2": {
  "data": {
   "lineno": 2808
  },
  "type": "constant"
 },
 "brian2.units.allunits.steradian3": {
  "data": {
   "lineno": 2809
  },
  "type": "constant"
 },
 "brian2.units.allunits.tesla": {
  "data": {
   "lineno": 2127
  },
  "type": "constant"
 },
 "brian2.units.allunits.tesla2": {
  "data": {
   "lineno": 2832
  },
  "type": "constant"
 },
 "brian2.units.allunits.tesla3": {
  "data": {
   "lineno": 2833
  },
  "type": "constant"
 },
 "brian2.units.allunits.uamp": {
  "data": {
   "lineno": 2209
  },
  "type": "constant"
 },
 "brian2.units.allunits.uamp2": {
  "data": {
   "lineno": 2992
  },
  "type": "constant"
 },
 "brian2.units.allunits.uamp3": {
  "data": {
   "lineno": 2993
  },
  "type": "constant"
 },
 "brian2.units.allunits.uampere": {
  "data": {
   "lineno": 2229
  },
  "type": "constant"
 },
 "brian2.units.allunits.uampere2": {
  "data": {
   "lineno": 3032
  },
  "type": "constant"
 },
 "brian2.units.allunits.uampere3": {
  "data": {
   "lineno": 3033
  },
  "type": "constant"
 },
 "brian2.units.allunits.ubecquerel": {
  "data": {
   "lineno": 2709
  },
  "type": "constant"
 },
 "brian2.units.allunits.ubecquerel2": {
  "data": {
   "lineno": 3992
  },
  "type": "constant"
 },
 "brian2.units.allunits.ubecquerel3": {
  "data": {
   "lineno": 3993
  },
  "type": "constant"
 },
 "brian2.units.allunits.ucandle": {
  "data": {
   "lineno": 2289
  },
  "type": "constant"
 },
 "brian2.units.allunits.ucandle2": {
  "data": {
   "lineno": 3152
  },
  "type": "constant"
 },
 "brian2.units.allunits.ucandle3": {
  "data": {
   "lineno": 3153
  },
  "type": "constant"
 },
 "brian2.units.allunits.ucoulomb": {
  "data": {
   "lineno": 2509
  },
  "type": "constant"
 },
 "brian2.units.allunits.ucoulomb2": {
  "data": {
   "lineno": 3592
  },
  "type": "constant"
 },
 "brian2.units.allunits.ucoulomb3": {
  "data": {
   "lineno": 3593
  },
  "type": "constant"
 },
 "brian2.units.allunits.ufarad": {
  "data": {
   "lineno": 2549
  },
  "type": "constant"
 },
 "brian2.units.allunits.ufarad2": {
  "data": {
   "lineno": 3672
  },
  "type": "constant"
 },
 "brian2.units.allunits.ufarad3": {
  "data": {
   "lineno": 3673
  },
  "type": "constant"
 },
 "brian2.units.allunits.ugram": {
  "data": {
   "lineno": 2309
  },
  "type": "constant"
 },
 "brian2.units.allunits.ugram2": {
  "data": {
   "lineno": 3192
  },
  "type": "constant"
 },
 "brian2.units.allunits.ugram3": {
  "data": {
   "lineno": 3193
  },
  "type": "constant"
 },
 "brian2.units.allunits.ugramme": {
  "data": {
   "lineno": 2329
  },
  "type": "constant"
 },
 "brian2.units.allunits.ugramme2": {
  "data": {
   "lineno": 3232
  },
  "type": "constant"
 },
 "brian2.units.allunits.ugramme3": {
  "data": {
   "lineno": 3233
  },
  "type": "constant"
 },
 "brian2.units.allunits.ugray": {
  "data": {
   "lineno": 2729
  },
  "type": "constant"
 },
 "brian2.units.allunits.ugray2": {
  "data": {
   "lineno": 4032
  },
  "type": "constant"
 },
 "brian2.units.allunits.ugray3": {
  "data": {
   "lineno": 4033
  },
  "type": "constant"
 },
 "brian2.units.allunits.uhenry": {
  "data": {
   "lineno": 2649
  },
  "type": "constant"
 },
 "brian2.units.allunits.uhenry2": {
  "data": {
   "lineno": 3872
  },
  "type": "constant"
 },
 "brian2.units.allunits.uhenry3": {
  "data": {
   "lineno": 3873
  },
  "type": "constant"
 },
 "brian2.units.allunits.uhertz": {
  "data": {
   "lineno": 2409
  },
  "type": "constant"
 },
 "brian2.units.allunits.uhertz2": {
  "data": {
   "lineno": 3392
  },
  "type": "constant"
 },
 "brian2.units.allunits.uhertz3": {
  "data": {
   "lineno": 3393
  },
  "type": "constant"
 },
 "brian2.units.allunits.ujoule": {
  "data": {
   "lineno": 2469
  },
  "type": "constant"
 },
 "brian2.units.allunits.ujoule2": {
  "data": {
   "lineno": 3512
  },
  "type": "constant"
 },
 "brian2.units.allunits.ujoule3": {
  "data": {
   "lineno": 3513
  },
  "type": "constant"
 },
 "brian2.units.allunits.ukatal": {
  "data": {
   "lineno": 2769
  },
  "type": "constant"
 },
 "brian2.units.allunits.ukatal2": {
  "data": {
   "lineno": 4112
  },
  "type": "constant"
 },
 "brian2.units.allunits.ukatal3": {
  "data": {
   "lineno": 4113
  },
  "type": "constant"
 },
 "brian2.units.allunits.uliter": {
  "data": {
   "lineno": 4141
  },
  "type": "constant"
 },
 "brian2.units.allunits.ulitre": {
  "data": {
   "lineno": 4162
  },
  "type": "constant"
 },
 "brian2.units.allunits.ulumen": {
  "data": {
   "lineno": 2669
  },
  "type": "constant"
 },
 "brian2.units.allunits.ulumen2": {
  "data": {
   "lineno": 3912
  },
  "type": "constant"
 },
 "brian2.units.allunits.ulumen3": {
  "data": {
   "lineno": 3913
  },
  "type": "constant"
 },
 "brian2.units.allunits.ulux": {
  "data": {
   "lineno": 2689
  },
  "type": "constant"
 },
 "brian2.units.allunits.ulux2": {
  "data": {
   "lineno": 3952
  },
  "type": "constant"
 },
 "brian2.units.allunits.ulux3": {
  "data": {
   "lineno": 3953
  },
  "type": "constant"
 },
 "brian2.units.allunits.umeter": {
  "data": {
   "lineno": 2169
  },
  "type": "constant"
 },
 "brian2.units.allunits.umeter2": {
  "data": {
   "lineno": 2912
  },
  "type": "constant"
 },
 "brian2.units.allunits.umeter3": {
  "data": {
   "lineno": 2913
  },
  "type": "constant"
 },
 "brian2.units.allunits.umetre": {
  "data": {
   "lineno": 2149
  },
  "type": "constant"
 },
 "brian2.units.allunits.umetre2": {
  "data": {
   "lineno": 2872
  },
  "type": "constant"
 },
 "brian2.units.allunits.umetre3": {
  "data": {
   "lineno": 2873
  },
  "type": "constant"
 },
 "brian2.units.allunits.umol": {
  "data": {
   "lineno": 2269
  },
  "type": "constant"
 },
 "brian2.units.allunits.umol2": {
  "data": {
   "lineno": 3112
  },
  "type": "constant"
 },
 "brian2.units.allunits.umol3": {
  "data": {
   "lineno": 3113
  },
  "type": "constant"
 },
 "brian2.units.allunits.umolar": {
  "data": {
   "lineno": 2349
  },
  "type": "constant"
 },
 "brian2.units.allunits.umolar2": {
  "data": {
   "lineno": 3272
  },
  "type": "constant"
 },
 "brian2.units.allunits.umolar3": {
  "data": {
   "lineno": 3273
  },
  "type": "constant"
 },
 "brian2.units.allunits.umole": {
  "data": {
   "lineno": 2249
  },
  "type": "constant"
 },
 "brian2.units.allunits.umole2": {
  "data": {
   "lineno": 3072
  },
  "type": "constant"
 },
 "brian2.units.allunits.umole3": {
  "data": {
   "lineno": 3073
  },
  "type": "constant"
 },
 "brian2.units.allunits.unewton": {
  "data": {
   "lineno": 2429
  },
  "type": "constant"
 },
 "brian2.units.allunits.unewton2": {
  "data": {
   "lineno": 3432
  },
  "type": "constant"
 },
 "brian2.units.allunits.unewton3": {
  "data": {
   "lineno": 3433
  },
  "type": "constant"
 },
 "brian2.units.allunits.uohm": {
  "data": {
   "lineno": 2569
  },
  "type": "constant"
 },
 "brian2.units.allunits.uohm2": {
  "data": {
   "lineno": 3712
  },
  "type": "constant"
 },
 "brian2.units.allunits.uohm3": {
  "data": {
   "lineno": 3713
  },
  "type": "constant"
 },
 "brian2.units.allunits.upascal": {
  "data": {
   "lineno": 2449
  },
  "type": "constant"
 },
 "brian2.units.allunits.upascal2": {
  "data": {
   "lineno": 3472
  },
  "type": "constant"
 },
 "brian2.units.allunits.upascal3": {
  "data": {
   "lineno": 3473
  },
  "type": "constant"
 },
 "brian2.units.allunits.uradian": {
  "data": {
   "lineno": 2369
  },
  "type": "constant"
 },
 "brian2.units.allunits.uradian2": {
  "data": {
   "lineno": 3312
  },
  "type": "constant"
 },
 "brian2.units.allunits.uradian3": {
  "data": {
   "lineno": 3313
  },
  "type": "constant"
 },
 "brian2.units.allunits.usecond": {
  "data": {
   "lineno": 2189
  },
  "type": "constant"
 },
 "brian2.units.allunits.usecond2": {
  "data": {
   "lineno": 2952
  },
  "type": "constant"
 },
 "brian2.units.allunits.usecond3": {
  "data": {
   "lineno": 2953
  },
  "type": "constant"
 },
 "brian2.units.allunits.usiemens": {
  "data": {
   "lineno": 2589
  },
  "type": "constant"
 },
 "brian2.units.allunits.usiemens2": {
  "data": {
   "lineno": 3752
  },
  "type": "constant"
 },
 "brian2.units.allunits.usiemens3": {
  "data": {
   "lineno": 3753
  },
  "type": "constant"
 },
 "brian2.units.allunits.usievert": {
  "data": {
   "lineno": 2749
  },
  "type": "constant"
 },
 "brian2.units.allunits.usievert2": {
  "data": {
   "lineno": 4072
  },
  "type": "constant"
 },
 "brian2.units.allunits.usievert3": {
  "data": {
   "lineno": 4073
  },
  "type": "constant"
 },
 "brian2.units.allunits.usteradian": {
  "data": {
   "lineno": 2389
  },
  "type": "constant"
 },
 "brian2.units.allunits.usteradian2": {
  "data": {
   "lineno": 3352
  },
  "type": "constant"
 },
 "brian2.units.allunits.usteradian3": {
  "data": {
   "lineno": 3353
  },
  "type": "constant"
 },
 "brian2.units.allunits.utesla": {
  "data": {
   "lineno": 2629
  },
  "type": "constant"
 },
 "brian2.units.allunits.utesla2": {
  "data": {
   "lineno": 3832
  },
  "type": "constant"
 },
 "brian2.units.allunits.utesla3": {
  "data": {
   "lineno": 3833
  },
  "type": "constant"
 },
 "brian2.units.allunits.uvolt": {
  "data": {
   "lineno": 2529
  },
  "type": "constant"
 },
 "brian2.units.allunits.uvolt2": {
  "data": {
   "lineno": 3632
  },
  "type": "constant"
 },
 "brian2.units.allunits.uvolt3": {
  "data": {
   "lineno": 3633
  },
  "type": "constant"
 },
 "brian2.units.allunits.uwatt": {
  "data": {
   "lineno": 2489
  },
  "type": "constant"
 },
 "brian2.units.allunits.uwatt2": {
  "data": {
   "lineno": 3552
  },
  "type": "constant"
 },
 "brian2.units.allunits.uwatt3": {
  "data": {
   "lineno": 3553
  },
  "type": "constant"
 },
 "brian2.units.allunits.uweber": {
  "data": {
   "lineno": 2609
  },
  "type": "constant"
 },
 "brian2.units.allunits.uweber2": {
  "data": {
   "lineno": 3792
  },
  "type": "constant"
 },
 "brian2.units.allunits.uweber3": {
  "data": {
   "lineno": 3793
  },
  "type": "constant"
 },
 "brian2.units.allunits.volt": {
  "data": {
   "lineno": 2122
  },
  "type": "constant"
 },
 "brian2.units.allunits.volt2": {
  "data": {
   "lineno": 2822
  },
  "type": "constant"
 },
 "brian2.units.allunits.volt3": {
  "data": {
   "lineno": 2823
  },
  "type": "constant"
 },
 "brian2.units.allunits.watt": {
  "data": {
   "lineno": 2120
  },
  "type": "constant"
 },
 "brian2.units.allunits.watt2": {
  "data": {
   "lineno": 2818
  },
  "type": "constant"
 },
 "brian2.units.allunits.watt3": {
  "data": {
   "lineno": 2819
  },
  "type": "constant"
 },
 "brian2.units.allunits.weber": {
  "data": {
   "lineno": 2126
  },
  "type": "constant"
 },
 "brian2.units.allunits.weber2": {
  "data": {
   "lineno": 2830
  },
  "type": "constant"
 },
 "brian2.units.allunits.weber3": {
  "data": {
   "lineno": 2831
  },
  "type": "constant"
 },
 "brian2.units.allunits.yamp": {
  "data": {
   "lineno": 2211
  },
  "type": "constant"
 },
 "brian2.units.allunits.yamp2": {
  "data": {
   "lineno": 2996
  },
  "type": "constant"
 },
 "brian2.units.allunits.yamp3": {
  "data": {
   "lineno": 2997
  },
  "type": "constant"
 },
 "brian2.units.allunits.yampere": {
  "data": {
   "lineno": 2231
  },
  "type": "constant"
 },
 "brian2.units.allunits.yampere2": {
  "data": {
   "lineno": 3036
  },
  "type": "constant"
 },
 "brian2.units.allunits.yampere3": {
  "data": {
   "lineno": 3037
  },
  "type": "constant"
 },
 "brian2.units.allunits.ybecquerel": {
  "data": {
   "lineno": 2711
  },
  "type": "constant"
 },
 "brian2.units.allunits.ybecquerel2": {
  "data": {
   "lineno": 3996
  },
  "type": "constant"
 },
 "brian2.units.allunits.ybecquerel3": {
  "data": {
   "lineno": 3997
  },
  "type": "constant"
 },
 "brian2.units.allunits.ycandle": {
  "data": {
   "lineno": 2291
  },
  "type": "constant"
 },
 "brian2.units.allunits.ycandle2": {
  "data": {
   "lineno": 3156
  },
  "type": "constant"
 },
 "brian2.units.allunits.ycandle3": {
  "data": {
   "lineno": 3157
  },
  "type": "constant"
 },
 "brian2.units.allunits.ycoulomb": {
  "data": {
   "lineno": 2511
  },
  "type": "constant"
 },
 "brian2.units.allunits.ycoulomb2": {
  "data": {
   "lineno": 3596
  },
  "type": "constant"
 },
 "brian2.units.allunits.ycoulomb3": {
  "data": {
   "lineno": 3597
  },
  "type": "constant"
 },
 "brian2.units.allunits.yfarad": {
  "data": {
   "lineno": 2551
  },
  "type": "constant"
 },
 "brian2.units.allunits.yfarad2": {
  "data": {
   "lineno": 3676
  },
  "type": "constant"
 },
 "brian2.units.allunits.yfarad3": {
  "data": {
   "lineno": 3677
  },
  "type": "constant"
 },
 "brian2.units.allunits.ygram": {
  "data": {
   "lineno": 2311
  },
  "type": "constant"
 },
 "brian2.units.allunits.ygram2": {
  "data": {
   "lineno": 3196
  },
  "type": "constant"
 },
 "brian2.units.allunits.ygram3": {
  "data": {
   "lineno": 3197
  },
  "type": "constant"
 },
 "brian2.units.allunits.ygramme": {
  "data": {
   "lineno": 2331
  },
  "type": "constant"
 },
 "brian2.units.allunits.ygramme2": {
  "data": {
   "lineno": 3236
  },
  "type": "constant"
 },
 "brian2.units.allunits.ygramme3": {
  "data": {
   "lineno": 3237
  },
  "type": "constant"
 },
 "brian2.units.allunits.ygray": {
  "data": {
   "lineno": 2731
  },
  "type": "constant"
 },
 "brian2.units.allunits.ygray2": {
  "data": {
   "lineno": 4036
  },
  "type": "constant"
 },
 "brian2.units.allunits.ygray3": {
  "data": {
   "lineno": 4037
  },
  "type": "constant"
 },
 "brian2.units.allunits.yhenry": {
  "data": {
   "lineno": 2651
  },
  "type": "constant"
 },
 "brian2.units.allunits.yhenry2": {
  "data": {
   "lineno": 3876
  },
  "type": "constant"
 },
 "brian2.units.allunits.yhenry3": {
  "data": {
   "lineno": 3877
  },
  "type": "constant"
 },
 "brian2.units.allunits.yhertz": {
  "data": {
   "lineno": 2411
  },
  "type": "constant"
 },
 "brian2.units.allunits.yhertz2": {
  "data": {
   "lineno": 3396
  },
  "type": "constant"
 },
 "brian2.units.allunits.yhertz3": {
  "data": {
   "lineno": 3397
  },
  "type": "constant"
 },
 "brian2.units.allunits.yjoule": {
  "data": {
   "lineno": 2471
  },
  "type": "constant"
 },
 "brian2.units.allunits.yjoule2": {
  "data": {
   "lineno": 3516
  },
  "type": "constant"
 },
 "brian2.units.allunits.yjoule3": {
  "data": {
   "lineno": 3517
  },
  "type": "constant"
 },
 "brian2.units.allunits.ykatal": {
  "data": {
   "lineno": 2771
  },
  "type": "constant"
 },
 "brian2.units.allunits.ykatal2": {
  "data": {
   "lineno": 4116
  },
  "type": "constant"
 },
 "brian2.units.allunits.ykatal3": {
  "data": {
   "lineno": 4117
  },
  "type": "constant"
 },
 "brian2.units.allunits.yliter": {
  "data": {
   "lineno": 4143
  },
  "type": "constant"
 },
 "brian2.units.allunits.ylitre": {
  "data": {
   "lineno": 4164
  },
  "type": "constant"
 },
 "brian2.units.allunits.ylumen": {
  "data": {
   "lineno": 2671
  },
  "type": "constant"
 },
 "brian2.units.allunits.ylumen2": {
  "data": {
   "lineno": 3916
  },
  "type": "constant"
 },
 "brian2.units.allunits.ylumen3": {
  "data": {
   "lineno": 3917
  },
  "type": "constant"
 },
 "brian2.units.allunits.ylux": {
  "data": {
   "lineno": 2691
  },
  "type": "constant"
 },
 "brian2.units.allunits.ylux2": {
  "data": {
   "lineno": 3956
  },
  "type": "constant"
 },
 "brian2.units.allunits.ylux3": {
  "data": {
   "lineno": 3957
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymeter": {
  "data": {
   "lineno": 2171
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymeter2": {
  "data": {
   "lineno": 2916
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymeter3": {
  "data": {
   "lineno": 2917
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymetre": {
  "data": {
   "lineno": 2151
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymetre2": {
  "data": {
   "lineno": 2876
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymetre3": {
  "data": {
   "lineno": 2877
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymol": {
  "data": {
   "lineno": 2271
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymol2": {
  "data": {
   "lineno": 3116
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymol3": {
  "data": {
   "lineno": 3117
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymolar": {
  "data": {
   "lineno": 2351
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymolar2": {
  "data": {
   "lineno": 3276
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymolar3": {
  "data": {
   "lineno": 3277
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymole": {
  "data": {
   "lineno": 2251
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymole2": {
  "data": {
   "lineno": 3076
  },
  "type": "constant"
 },
 "brian2.units.allunits.ymole3": {
  "data": {
   "lineno": 3077
  },
  "type": "constant"
 },
 "brian2.units.allunits.ynewton": {
  "data": {
   "lineno": 2431
  },
  "type": "constant"
 },
 "brian2.units.allunits.ynewton2": {
  "data": {
   "lineno": 3436
  },
  "type": "constant"
 },
 "brian2.units.allunits.ynewton3": {
  "data": {
   "lineno": 3437
  },
  "type": "constant"
 },
 "brian2.units.allunits.yohm": {
  "data": {
   "lineno": 2571
  },
  "type": "constant"
 },
 "brian2.units.allunits.yohm2": {
  "data": {
   "lineno": 3716
  },
  "type": "constant"
 },
 "brian2.units.allunits.yohm3": {
  "data": {
   "lineno": 3717
  },
  "type": "constant"
 },
 "brian2.units.allunits.ypascal": {
  "data": {
   "lineno": 2451
  },
  "type": "constant"
 },
 "brian2.units.allunits.ypascal2": {
  "data": {
   "lineno": 3476
  },
  "type": "constant"
 },
 "brian2.units.allunits.ypascal3": {
  "data": {
   "lineno": 3477
  },
  "type": "constant"
 },
 "brian2.units.allunits.yradian": {
  "data": {
   "lineno": 2371
  },
  "type": "constant"
 },
 "brian2.units.allunits.yradian2": {
  "data": {
   "lineno": 3316
  },
  "type": "constant"
 },
 "brian2.units.allunits.yradian3": {
  "data": {
   "lineno": 3317
  },
  "type": "constant"
 },
 "brian2.units.allunits.ysecond": {
  "data": {
   "lineno": 2191
  },
  "type": "constant"
 },
 "brian2.units.allunits.ysecond2": {
  "data": {
   "lineno": 2956
  },
  "type": "constant"
 },
 "brian2.units.allunits.ysecond3": {
  "data": {
   "lineno": 2957
  },
  "type": "constant"
 },
 "brian2.units.allunits.ysiemens": {
  "data": {
   "lineno": 2591
  },
  "type": "constant"
 },
 "brian2.units.allunits.ysiemens2": {
  "data": {
   "lineno": 3756
  },
  "type": "constant"
 },
 "brian2.units.allunits.ysiemens3": {
  "data": {
   "lineno": 3757
  },
  "type": "constant"
 },
 "brian2.units.allunits.ysievert": {
  "data": {
   "lineno": 2751
  },
  "type": "constant"
 },
 "brian2.units.allunits.ysievert2": {
  "data": {
   "lineno": 4076
  },
  "type": "constant"
 },
 "brian2.units.allunits.ysievert3": {
  "data": {
   "lineno": 4077
  },
  "type": "constant"
 },
 "brian2.units.allunits.ysteradian": {
  "data": {
   "lineno": 2391
  },
  "type": "constant"
 },
 "brian2.units.allunits.ysteradian2": {
  "data": {
   "lineno": 3356
  },
  "type": "constant"
 },
 "brian2.units.allunits.ysteradian3": {
  "data": {
   "lineno": 3357
  },
  "type": "constant"
 },
 "brian2.units.allunits.ytesla": {
  "data": {
   "lineno": 2631
  },
  "type": "constant"
 },
 "brian2.units.allunits.ytesla2": {
  "data": {
   "lineno": 3836
  },
  "type": "constant"
 },
 "brian2.units.allunits.ytesla3": {
  "data": {
   "lineno": 3837
  },
  "type": "constant"
 },
 "brian2.units.allunits.yvolt": {
  "data": {
   "lineno": 2531
  },
  "type": "constant"
 },
 "brian2.units.allunits.yvolt2": {
  "data": {
   "lineno": 3636
  },
  "type": "constant"
 },
 "brian2.units.allunits.yvolt3": {
  "data": {
   "lineno": 3637
  },
  "type": "constant"
 },
 "brian2.units.allunits.ywatt": {
  "data": {
   "lineno": 2491
  },
  "type": "constant"
 },
 "brian2.units.allunits.ywatt2": {
  "data": {
   "lineno": 3556
  },
  "type": "constant"
 },
 "brian2.units.allunits.ywatt3": {
  "data": {
   "lineno": 3557
  },
  "type": "constant"
 },
 "brian2.units.allunits.yweber": {
  "data": {
   "lineno": 2611
  },
  "type": "constant"
 },
 "brian2.units.allunits.yweber2": {
  "data": {
   "lineno": 3796
  },
  "type": "constant"
 },
 "brian2.units.allunits.yweber3": {
  "data": {
   "lineno": 3797
  },
  "type": "constant"
 },
 "brian2.units.allunits.zamp": {
  "data": {
   "lineno": 2213
  },
  "type": "constant"
 },
 "brian2.units.allunits.zamp2": {
  "data": {
   "lineno": 3000
  },
  "type": "constant"
 },
 "brian2.units.allunits.zamp3": {
  "data": {
   "lineno": 3001
  },
  "type": "constant"
 },
 "brian2.units.allunits.zampere": {
  "data": {
   "lineno": 2233
  },
  "type": "constant"
 },
 "brian2.units.allunits.zampere2": {
  "data": {
   "lineno": 3040
  },
  "type": "constant"
 },
 "brian2.units.allunits.zampere3": {
  "data": {
   "lineno": 3041
  },
  "type": "constant"
 },
 "brian2.units.allunits.zbecquerel": {
  "data": {
   "lineno": 2713
  },
  "type": "constant"
 },
 "brian2.units.allunits.zbecquerel2": {
  "data": {
   "lineno": 4000
  },
  "type": "constant"
 },
 "brian2.units.allunits.zbecquerel3": {
  "data": {
   "lineno": 4001
  },
  "type": "constant"
 },
 "brian2.units.allunits.zcandle": {
  "data": {
   "lineno": 2293
  },
  "type": "constant"
 },
 "brian2.units.allunits.zcandle2": {
  "data": {
   "lineno": 3160
  },
  "type": "constant"
 },
 "brian2.units.allunits.zcandle3": {
  "data": {
   "lineno": 3161
  },
  "type": "constant"
 },
 "brian2.units.allunits.zcoulomb": {
  "data": {
   "lineno": 2513
  },
  "type": "constant"
 },
 "brian2.units.allunits.zcoulomb2": {
  "data": {
   "lineno": 3600
  },
  "type": "constant"
 },
 "brian2.units.allunits.zcoulomb3": {
  "data": {
   "lineno": 3601
  },
  "type": "constant"
 },
 "brian2.units.allunits.zfarad": {
  "data": {
   "lineno": 2553
  },
  "type": "constant"
 },
 "brian2.units.allunits.zfarad2": {
  "data": {
   "lineno": 3680
  },
  "type": "constant"
 },
 "brian2.units.allunits.zfarad3": {
  "data": {
   "lineno": 3681
  },
  "type": "constant"
 },
 "brian2.units.allunits.zgram": {
  "data": {
   "lineno": 2313
  },
  "type": "constant"
 },
 "brian2.units.allunits.zgram2": {
  "data": {
   "lineno": 3200
  },
  "type": "constant"
 },
 "brian2.units.allunits.zgram3": {
  "data": {
   "lineno": 3201
  },
  "type": "constant"
 },
 "brian2.units.allunits.zgramme": {
  "data": {
   "lineno": 2333
  },
  "type": "constant"
 },
 "brian2.units.allunits.zgramme2": {
  "data": {
   "lineno": 3240
  },
  "type": "constant"
 },
 "brian2.units.allunits.zgramme3": {
  "data": {
   "lineno": 3241
  },
  "type": "constant"
 },
 "brian2.units.allunits.zgray": {
  "data": {
   "lineno": 2733
  },
  "type": "constant"
 },
 "brian2.units.allunits.zgray2": {
  "data": {
   "lineno": 4040
  },
  "type": "constant"
 },
 "brian2.units.allunits.zgray3": {
  "data": {
   "lineno": 4041
  },
  "type": "constant"
 },
 "brian2.units.allunits.zhenry": {
  "data": {
   "lineno": 2653
  },
  "type": "constant"
 },
 "brian2.units.allunits.zhenry2": {
  "data": {
   "lineno": 3880
  },
  "type": "constant"
 },
 "brian2.units.allunits.zhenry3": {
  "data": {
   "lineno": 3881
  },
  "type": "constant"
 },
 "brian2.units.allunits.zhertz": {
  "data": {
   "lineno": 2413
  },
  "type": "constant"
 },
 "brian2.units.allunits.zhertz2": {
  "data": {
   "lineno": 3400
  },
  "type": "constant"
 },
 "brian2.units.allunits.zhertz3": {
  "data": {
   "lineno": 3401
  },
  "type": "constant"
 },
 "brian2.units.allunits.zjoule": {
  "data": {
   "lineno": 2473
  },
  "type": "constant"
 },
 "brian2.units.allunits.zjoule2": {
  "data": {
   "lineno": 3520
  },
  "type": "constant"
 },
 "brian2.units.allunits.zjoule3": {
  "data": {
   "lineno": 3521
  },
  "type": "constant"
 },
 "brian2.units.allunits.zkatal": {
  "data": {
   "lineno": 2773
  },
  "type": "constant"
 },
 "brian2.units.allunits.zkatal2": {
  "data": {
   "lineno": 4120
  },
  "type": "constant"
 },
 "brian2.units.allunits.zkatal3": {
  "data": {
   "lineno": 4121
  },
  "type": "constant"
 },
 "brian2.units.allunits.zliter": {
  "data": {
   "lineno": 4145
  },
  "type": "constant"
 },
 "brian2.units.allunits.zlitre": {
  "data": {
   "lineno": 4166
  },
  "type": "constant"
 },
 "brian2.units.allunits.zlumen": {
  "data": {
   "lineno": 2673
  },
  "type": "constant"
 },
 "brian2.units.allunits.zlumen2": {
  "data": {
   "lineno": 3920
  },
  "type": "constant"
 },
 "brian2.units.allunits.zlumen3": {
  "data": {
   "lineno": 3921
  },
  "type": "constant"
 },
 "brian2.units.allunits.zlux": {
  "data": {
   "lineno": 2693
  },
  "type": "constant"
 },
 "brian2.units.allunits.zlux2": {
  "data": {
   "lineno": 3960
  },
  "type": "constant"
 },
 "brian2.units.allunits.zlux3": {
  "data": {
   "lineno": 3961
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmeter": {
  "data": {
   "lineno": 2173
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmeter2": {
  "data": {
   "lineno": 2920
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmeter3": {
  "data": {
   "lineno": 2921
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmetre": {
  "data": {
   "lineno": 2153
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmetre2": {
  "data": {
   "lineno": 2880
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmetre3": {
  "data": {
   "lineno": 2881
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmol": {
  "data": {
   "lineno": 2273
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmol2": {
  "data": {
   "lineno": 3120
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmol3": {
  "data": {
   "lineno": 3121
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmolar": {
  "data": {
   "lineno": 2353
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmolar2": {
  "data": {
   "lineno": 3280
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmolar3": {
  "data": {
   "lineno": 3281
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmole": {
  "data": {
   "lineno": 2253
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmole2": {
  "data": {
   "lineno": 3080
  },
  "type": "constant"
 },
 "brian2.units.allunits.zmole3": {
  "data": {
   "lineno": 3081
  },
  "type": "constant"
 },
 "brian2.units.allunits.znewton": {
  "data": {
   "lineno": 2433
  },
  "type": "constant"
 },
 "brian2.units.allunits.znewton2": {
  "data": {
   "lineno": 3440
  },
  "type": "constant"
 },
 "brian2.units.allunits.znewton3": {
  "data": {
   "lineno": 3441
  },
  "type": "constant"
 },
 "brian2.units.allunits.zohm": {
  "data": {
   "lineno": 2573
  },
  "type": "constant"
 },
 "brian2.units.allunits.zohm2": {
  "data": {
   "lineno": 3720
  },
  "type": "constant"
 },
 "brian2.units.allunits.zohm3": {
  "data": {
   "lineno": 3721
  },
  "type": "constant"
 },
 "brian2.units.allunits.zpascal": {
  "data": {
   "lineno": 2453
  },
  "type": "constant"
 },
 "brian2.units.allunits.zpascal2": {
  "data": {
   "lineno": 3480
  },
  "type": "constant"
 },
 "brian2.units.allunits.zpascal3": {
  "data": {
   "lineno": 3481
  },
  "type": "constant"
 },
 "brian2.units.allunits.zradian": {
  "data": {
   "lineno": 2373
  },
  "type": "constant"
 },
 "brian2.units.allunits.zradian2": {
  "data": {
   "lineno": 3320
  },
  "type": "constant"
 },
 "brian2.units.allunits.zradian3": {
  "data": {
   "lineno": 3321
  },
  "type": "constant"
 },
 "brian2.units.allunits.zsecond": {
  "data": {
   "lineno": 2193
  },
  "type": "constant"
 },
 "brian2.units.allunits.zsecond2": {
  "data": {
   "lineno": 2960
  },
  "type": "constant"
 },
 "brian2.units.allunits.zsecond3": {
  "data": {
   "lineno": 2961
  },
  "type": "constant"
 },
 "brian2.units.allunits.zsiemens": {
  "data": {
   "lineno": 2593
  },
  "type": "constant"
 },
 "brian2.units.allunits.zsiemens2": {
  "data": {
   "lineno": 3760
  },
  "type": "constant"
 },
 "brian2.units.allunits.zsiemens3": {
  "data": {
   "lineno": 3761
  },
  "type": "constant"
 },
 "brian2.units.allunits.zsievert": {
  "data": {
   "lineno": 2753
  },
  "type": "constant"
 },
 "brian2.units.allunits.zsievert2": {
  "data": {
   "lineno": 4080
  },
  "type": "constant"
 },
 "brian2.units.allunits.zsievert3": {
  "data": {
   "lineno": 4081
  },
  "type": "constant"
 },
 "brian2.units.allunits.zsteradian": {
  "data": {
   "lineno": 2393
  },
  "type": "constant"
 },
 "brian2.units.allunits.zsteradian2": {
  "data": {
   "lineno": 3360
  },
  "type": "constant"
 },
 "brian2.units.allunits.zsteradian3": {
  "data": {
   "lineno": 3361
  },
  "type": "constant"
 },
 "brian2.units.allunits.ztesla": {
  "data": {
   "lineno": 2633
  },
  "type": "constant"
 },
 "brian2.units.allunits.ztesla2": {
  "data": {
   "lineno": 3840
  },
  "type": "constant"
 },
 "brian2.units.allunits.ztesla3": {
  "data": {
   "lineno": 3841
  },
  "type": "constant"
 },
 "brian2.units.allunits.zvolt": {
  "data": {
   "lineno": 2533
  },
  "type": "constant"
 },
 "brian2.units.allunits.zvolt2": {
  "data": {
   "lineno": 3640
  },
  "type": "constant"
 },
 "brian2.units.allunits.zvolt3": {
  "data": {
   "lineno": 3641
  },
  "type": "constant"
 },
 "brian2.units.allunits.zwatt": {
  "data": {
   "lineno": 2493
  },
  "type": "constant"
 },
 "brian2.units.allunits.zwatt2": {
  "data": {
   "lineno": 3560
  },
  "type": "constant"
 },
 "brian2.units.allunits.zwatt3": {
  "data": {
   "lineno": 3561
  },
  "type": "constant"
 },
 "brian2.units.allunits.zweber": {
  "data": {
   "lineno": 2613
  },
  "type": "constant"
 },
 "brian2.units.allunits.zweber2": {
  "data": {
   "lineno": 3800
  },
  "type": "constant"
 },
 "brian2.units.allunits.zweber3": {
  "data": {
   "lineno": 3801
  },
  "type": "constant"
 },
 "brian2.units.constants": {
  "data": {
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "module"
 },
 "brian2.units.constants.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.units.constants.avogadro_constant": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "brian2.units.constants.boltzmann_constant": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "brian2.units.constants.electric_constant": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "brian2.units.constants.electron_mass": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "brian2.units.constants.elementary_charge": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "brian2.units.constants.faraday_constant": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "brian2.units.constants.gas_constant": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "brian2.units.constants.magnetic_constant": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "brian2.units.constants.molar_mass_constant": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "brian2.units.constants.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.units.constants.zero_celsius": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "brian2.units.fundamentalunits_all": {
  "data": {
   "shadows": "__all__"
  },
  "type": "import"
 },
 "brian2.units.stdunits": {
  "data": {
   "symbols_in_volume": [
    "brian2.units.stdunits.Hz",
    "brian2.units.stdunits.MHz",
    "brian2.units.stdunits.cm",
    "brian2.units.stdunits.cm2",
    "brian2.units.stdunits.cm3",
    "brian2.units.stdunits.kHz",
    "brian2.units.stdunits.mA",
    "brian2.units.stdunits.mM",
    "brian2.units.stdunits.mV",
    "brian2.units.stdunits.mm",
    "brian2.units.stdunits.mm2",
    "brian2.units.stdunits.mm3",
    "brian2.units.stdunits.ms",
    "brian2.units.stdunits.nA",
    "brian2.units.stdunits.nF",
    "brian2.units.stdunits.nM",
    "brian2.units.stdunits.nS",
    "brian2.units.stdunits.pA",
    "brian2.units.stdunits.pF",
    "brian2.units.stdunits.stdunits",
    "brian2.units.stdunits.uA",
    "brian2.units.stdunits.uF",
    "brian2.units.stdunits.uM",
    "brian2.units.stdunits.uS",
    "brian2.units.stdunits.um",
    "brian2.units.stdunits.um2",
    "brian2.units.stdunits.um3",
    "brian2.units.stdunits.us"
   ]
  },
  "type": "module"
 },
 "brian2.units.stdunits.Hz": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "brian2.units.stdunits.MHz": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "brian2.units.stdunits.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "brian2.units.stdunits.cm": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "brian2.units.stdunits.cm2": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "brian2.units.stdunits.cm3": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "brian2.units.stdunits.kHz": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "brian2.units.stdunits.mA": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "brian2.units.stdunits.mM": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "brian2.units.stdunits.mS": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "brian2.units.stdunits.mV": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "brian2.units.stdunits.mm": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "brian2.units.stdunits.mm2": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "brian2.units.stdunits.mm3": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "brian2.units.stdunits.ms": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "brian2.units.stdunits.nA": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "brian2.units.stdunits.nF": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "brian2.units.stdunits.nM": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "brian2.units.stdunits.nS": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "brian2.units.stdunits.pA": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "brian2.units.stdunits.pF": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "brian2.units.stdunits.stdunits": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "brian2.units.stdunits.uA": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "brian2.units.stdunits.uF": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "brian2.units.stdunits.uM": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "brian2.units.stdunits.uS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "brian2.units.stdunits.um": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "brian2.units.stdunits.um2": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "brian2.units.stdunits.um3": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "brian2.units.stdunits.us": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "brian2.units.stdunits_all": {
  "data": {
   "shadows": "__all__"
  },
  "type": "import"
 },
 "brian2.units.unitsafefunctions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "brian2.units.unitsafefunctions.arange",
    "brian2.units.unitsafefunctions.arccos",
    "brian2.units.unitsafefunctions.arccosh",
    "brian2.units.unitsafefunctions.arcsin",
    "brian2.units.unitsafefunctions.arcsinh",
    "brian2.units.unitsafefunctions.arctan",
    "brian2.units.unitsafefunctions.arctanh",
    "brian2.units.unitsafefunctions.cos",
    "brian2.units.unitsafefunctions.cosh",
    "brian2.units.unitsafefunctions.diagonal",
    "brian2.units.unitsafefunctions.dot",
    "brian2.units.unitsafefunctions.exp",
    "brian2.units.unitsafefunctions.linspace",
    "brian2.units.unitsafefunctions.log",
    "brian2.units.unitsafefunctions.ravel",
    "brian2.units.unitsafefunctions.sin",
    "brian2.units.unitsafefunctions.sinh",
    "brian2.units.unitsafefunctions.tan",
    "brian2.units.unitsafefunctions.tanh",
    "brian2.units.unitsafefunctions.trace",
    "brian2.units.unitsafefunctions.where",
    "brian2.units.unitsafefunctions.wrap_function_to_method",
    "numpy.arccos",
    "numpy.arccosh",
    "numpy.arcsin",
    "numpy.arcsinh",
    "numpy.arctan",
    "numpy.arctanh",
    "numpy.cos",
    "numpy.cosh",
    "numpy.diagonal",
    "numpy.dot",
    "numpy.exp",
    "numpy.expm1",
    "numpy.log",
    "numpy.log10",
    "numpy.log1p",
    "numpy.ones_like",
    "numpy.ravel",
    "numpy.sin",
    "numpy.sinh",
    "numpy.tan",
    "numpy.tanh",
    "numpy.trace",
    "numpy.where.__doc__",
    "numpy.zeros_like",
    "wrap_function_dimensionless",
    "wrap_function_remove_dimensions"
   ]
  },
  "type": "module"
 },
 "brian2.units.unitsafefunctions.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.units.unitsafefunctions.arange": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "Quantity",
    "TypeError",
    "fail_for_dimension_mismatch",
    "functools.wraps",
    "getattr",
    "len",
    "numpy.arange",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "brian2.units.unitsafefunctions.arccos": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.arccosh": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.arcsin": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.arcsinh": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.arctan": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.arctanh": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.cos": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.cosh": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.diagonal": {
  "data": {
   "lineno": 187
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.dot": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.exp": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.expm1": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.exprel": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "check_units",
    "issubclass",
    "numpy.abs",
    "numpy.asarray",
    "numpy.empty_like",
    "numpy.expm1",
    "numpy.float64",
    "numpy.inf",
    "numpy.integer",
    "numpy.logical_not"
   ]
  },
  "type": "function"
 },
 "brian2.units.unitsafefunctions.linspace": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "Quantity",
    "TypeError",
    "brian2.units.unitsafefunctions.pkg_resources",
    "fail_for_dimension_mismatch",
    "functools.wraps",
    "getattr",
    "numpy.__version__",
    "numpy.asarray",
    "numpy.linspace"
   ]
  },
  "type": "function"
 },
 "brian2.units.unitsafefunctions.log": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.log10": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.log1p": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.units.unitsafefunctions.ones_like": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.pkg_resources": {
  "data": {
   "shadows": "pkg_resources"
  },
  "type": "import"
 },
 "brian2.units.unitsafefunctions.ravel": {
  "data": {
   "lineno": 186
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.sin": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.sinh": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.tan": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.tanh": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.trace": {
  "data": {
   "lineno": 188
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions.where": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "fail_for_dimension_mismatch",
    "is_dimensionless",
    "len",
    "numpy.asarray",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "brian2.units.unitsafefunctions.wrap_function_to_method": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "func.__doc__",
    "func.__name__"
   ]
  },
  "type": "function"
 },
 "brian2.units.unitsafefunctions.wrap_function_to_method.f": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "func",
    "functools.wraps",
    "getattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "brian2.units.unitsafefunctions.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "brian2.units.unitsafefunctions.zeros_like": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "brian2.units.unitsafefunctions_all": {
  "data": {
   "shadows": "__all__"
  },
  "type": "import"
 },
 "brian2.utils": {
  "data": {},
  "type": "module"
 },
 "brian2.utils.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "brian2.utils.arrays": {
  "data": {},
  "type": "module"
 },
 "brian2.utils.arrays.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.utils.arrays.calc_repeats": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.array",
    "numpy.cumsum",
    "numpy.hstack",
    "numpy.int32",
    "numpy.logical_not",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "brian2.utils.arrays.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.utils.caching": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "brian2.utils.caching.collections",
    "set"
   ]
  },
  "type": "module"
 },
 "brian2.utils.caching.CacheKey": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "object",
    "set"
   ]
  },
  "type": "class"
 },
 "brian2.utils.caching.CacheKey._state_tuple": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "property",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "brian2.utils.caching.Mapping": {
  "data": {
   "shadows": "collections.Mapping"
  },
  "type": "import"
 },
 "brian2.utils.caching._CacheStatistics": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.utils.caching._CacheStatistics.__init__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "brian2.utils.caching._CacheStatistics.__repr__": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "brian2.utils.caching._hashable": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "TypeError",
    "brian2.utils.caching._of_type",
    "collections.Mapping",
    "float",
    "frozenset",
    "getattr",
    "hasattr",
    "hash",
    "list",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "brian2.utils.caching._of_type": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "brian2.utils.caching._of_type_cache",
    "issubclass"
   ]
  },
  "type": "function"
 },
 "brian2.utils.caching._of_type_cache": {
  "data": {
   "lineno": 110
  },
  "type": "constant"
 },
 "brian2.utils.caching.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.utils.caching.cached": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "brian2.utils.caching._CacheStatistics"
   ]
  },
  "type": "function"
 },
 "brian2.utils.caching.cached.cached_func": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "TypeError",
    "brian2.utils.caching._hashable",
    "brian2.utils.caching.functools",
    "func",
    "func._cache",
    "func._cache_statistics.hits",
    "func._cache_statistics.misses",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "brian2.utils.caching.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "brian2.utils.caching.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "brian2.utils.environment": {
  "data": {},
  "type": "module"
 },
 "brian2.utils.environment.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.utils.environment.builtins": {
  "data": {
   "shadows": "future.builtins"
  },
  "type": "import"
 },
 "brian2.utils.environment.running_from_ipython": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "future.builtins",
    "getattr"
   ]
  },
  "type": "function"
 },
 "brian2.utils.filetools": {
  "data": {},
  "type": "module"
 },
 "brian2.utils.filetools.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "brian2.utils.filetools.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.utils.filetools.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "brian2.utils.filetools.copy_directory": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "brian2.utils.filetools.ensure_directory_of_file",
    "brian2.utils.filetools.os",
    "open"
   ]
  },
  "type": "function"
 },
 "brian2.utils.filetools.ensure_directory": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "brian2.utils.filetools.os"
   ]
  },
  "type": "function"
 },
 "brian2.utils.filetools.ensure_directory_of_file": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "brian2.utils.filetools.os"
   ]
  },
  "type": "function"
 },
 "brian2.utils.filetools.in_directory": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.utils.filetools.in_directory.__enter__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "brian2.utils.filetools.os"
   ]
  },
  "type": "function"
 },
 "brian2.utils.filetools.in_directory.__exit__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "brian2.utils.filetools.os"
   ]
  },
  "type": "function"
 },
 "brian2.utils.filetools.in_directory.__init__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "brian2.utils.filetools.os"
   ]
  },
  "type": "function"
 },
 "brian2.utils.filetools.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.utils.filetools.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.utils.logger": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "brian2.core.preferences.BrianPreference",
    "brian2.core.preferences.prefs.pref_register",
    "brian2.core.preferences.prefs.register_preferences",
    "brian2.utils.logger.DIAGNOSTIC",
    "brian2.utils.logger.atexit",
    "brian2.utils.logger.clean_up_logging",
    "brian2.utils.logger.log_level_validator",
    "brian2.utils.logger.logging",
    "scipy.weave"
   ]
  },
  "type": "module"
 },
 "brian2.utils.logger.BrianLogger": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "object",
    "set"
   ]
  },
  "type": "class"
 },
 "brian2.utils.logger.BrianLogger.__init__": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger._log": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "brian2.utils.logger.BrianLogger",
    "brian2.utils.logger.LOG_LEVELS",
    "brian2.utils.logger.logging"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger._suppress": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "brian2.utils.logger.BrianLogger",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.debug": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.diagnostic": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.error": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.info": {
  "data": {
   "lineno": 352
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.initialize": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "IOError",
    "brian2.core.preferences.prefs",
    "brian2.core.preferences.prefs.upper",
    "brian2.utils.logger.BrianLogger",
    "brian2.utils.logger.DIAGNOSTIC",
    "brian2.utils.logger.LOG_LEVELS",
    "brian2.utils.logger._encode",
    "brian2.utils.logger.brian2",
    "brian2.utils.logger.brian_excepthook",
    "brian2.utils.logger.logging",
    "brian2.utils.logger.numpy",
    "brian2.utils.logger.os",
    "brian2.utils.logger.scipy",
    "brian2.utils.logger.shutil",
    "brian2.utils.logger.sympy",
    "brian2.utils.logger.sys",
    "brian2.utils.logger.tempfile",
    "brian2.utils.logger.time",
    "len",
    "open",
    "running_from_ipython",
    "scipy.weave",
    "scipy.weave.__version__",
    "staticmethod",
    "str",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.log_level_debug": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "brian2.utils.logger.BrianLogger",
    "brian2.utils.logger.logging",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.log_level_diagnostic": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "brian2.utils.logger.BrianLogger",
    "brian2.utils.logger.DIAGNOSTIC",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.log_level_error": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "brian2.utils.logger.BrianLogger",
    "brian2.utils.logger.logging",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.log_level_info": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "brian2.utils.logger.BrianLogger",
    "brian2.utils.logger.logging",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.log_level_warn": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "brian2.utils.logger.BrianLogger",
    "brian2.utils.logger.logging",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.suppress_hierarchy": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "brian2.utils.logger.BrianLogger",
    "brian2.utils.logger.HierarchyFilter",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.suppress_name": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "brian2.utils.logger.BrianLogger",
    "brian2.utils.logger.NameFilter",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.warn": {
  "data": {
   "lineno": 368
  },
  "type": "function"
 },
 "brian2.utils.logger.BrianPreference": {
  "data": {
   "shadows": "brian2.core.preferences.BrianPreference"
  },
  "type": "import"
 },
 "brian2.utils.logger.DIAGNOSTIC": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "brian2.utils.logger.HierarchyFilter": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.utils.logger.HierarchyFilter.__init__": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "brian2.utils.logger.logging"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.HierarchyFilter.filter": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "brian2.utils.logger.LOG_LEVELS": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "brian2.utils.logger.LogCapture": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "brian2.utils.logger.logging"
   ]
  },
  "type": "class"
 },
 "brian2.utils.logger.LogCapture.__init__": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "brian2.utils.logger.LogCapture",
    "brian2.utils.logger.logging",
    "list"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.LogCapture.emit": {
  "data": {
   "lineno": 673
  },
  "type": "function"
 },
 "brian2.utils.logger.LogCapture.install": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "brian2.utils.logger.LogCapture",
    "brian2.utils.logger.logging"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.LogCapture.uninstall": {
  "data": {
   "lineno": 689,
   "symbols_in_volume": [
    "brian2.utils.logger.LogCapture",
    "brian2.utils.logger.logging"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.NameFilter": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.utils.logger.NameFilter.__init__": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "brian2.utils.logger.NameFilter.filter": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "brian2.utils.logger.UNHANDLED_ERROR_MESSAGE": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "brian2.utils.logger.__all__": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "brian2.utils.logger._encode": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "brian2.utils.logger.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.utils.logger.atexit": {
  "data": {
   "shadows": "atexit"
  },
  "type": "import"
 },
 "brian2.utils.logger.brian2": {
  "data": {
   "shadows": "brian2"
  },
  "type": "import"
 },
 "brian2.utils.logger.brian_excepthook": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "KeyboardInterrupt",
    "brian2.utils.logger.UNHANDLED_ERROR_MESSAGE",
    "brian2.utils.logger.logging",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.catch_logs": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.utils.logger.catch_logs.__enter__": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.catch_logs.__exit__": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.catch_logs.__init__": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "brian2.utils.logger.LogCapture",
    "brian2.utils.logger.logging"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.clean_up_logging": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "brian2.core.preferences.prefs",
    "brian2.utils.logger.logging",
    "brian2.utils.logger.os",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.get_logger": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "brian2.utils.logger.BrianLogger"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.log_level_validator": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "brian2.utils.logger.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "brian2.utils.logger.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "brian2.utils.logger.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "brian2.utils.logger.prefs": {
  "data": {
   "shadows": "brian2.core.preferences.prefs"
  },
  "type": "import"
 },
 "brian2.utils.logger.scipy": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "brian2.utils.logger.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "brian2.utils.logger.std_silent": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.utils.logger.std_silent.__enter__": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "brian2.utils.logger.os",
    "brian2.utils.logger.std_silent",
    "brian2.utils.logger.sys"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.std_silent.__exit__": {
  "data": {
   "lineno": 735,
   "symbols_in_volume": [
    "brian2.utils.logger.os",
    "brian2.utils.logger.std_silent",
    "brian2.utils.logger.sys",
    "open"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.std_silent.__init__": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "brian2.core.preferences.prefs",
    "brian2.utils.logger.std_silent",
    "brian2.utils.logger.tempfile",
    "open"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.std_silent.close": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "IOError",
    "OSError",
    "brian2.core.preferences.prefs",
    "brian2.utils.logger.os",
    "brian2.utils.logger.std_silent",
    "classmethod"
   ]
  },
  "type": "function"
 },
 "brian2.utils.logger.sympy": {
  "data": {
   "shadows": "sympy"
  },
  "type": "import"
 },
 "brian2.utils.logger.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "brian2.utils.logger.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "brian2.utils.logger.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "brian2.utils.logger.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "brian2.utils.logger.weave": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "brian2.utils.stringtools": {
  "data": {},
  "type": "module"
 },
 "brian2.utils.stringtools.KEYWORDS": {
  "data": {
   "lineno": 155
  },
  "type": "constant"
 },
 "brian2.utils.stringtools.SpellChecker": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "brian2.utils.stringtools.SpellChecker.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "brian2.utils.stringtools.string"
   ]
  },
  "type": "function"
 },
 "brian2.utils.stringtools.SpellChecker.edits1": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "len",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.utils.stringtools.SpellChecker.known": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.utils.stringtools.SpellChecker.known_edits2": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.utils.stringtools.SpellChecker.suggest": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.utils.stringtools.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "brian2.utils.stringtools.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.utils.stringtools.basestring": {
  "data": {
   "shadows": "past.builtins.basestring"
  },
  "type": "import"
 },
 "brian2.utils.stringtools.code_representation": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "brian2.utils.stringtools.indent",
    "brian2.utils.stringtools.strip_empty_leading_and_trailing_lines",
    "dict",
    "isinstance",
    "len",
    "list",
    "past.builtins.basestring",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "brian2.utils.stringtools.deindent": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "brian2.utils.stringtools.get_identifiers": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "brian2.utils.stringtools.KEYWORDS",
    "brian2.utils.stringtools.re",
    "set"
   ]
  },
  "type": "function"
 },
 "brian2.utils.stringtools.indent": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "brian2.utils.stringtools.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "brian2.utils.stringtools.replace": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "brian2.utils.stringtools.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "brian2.utils.stringtools.strip_empty_leading_and_trailing_lines": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "brian2.utils.stringtools.strip_empty_lines": {
  "data": {
   "lineno": 196
  },
  "type": "function"
 },
 "brian2.utils.stringtools.stripped_deindented_lines": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "brian2.utils.stringtools.deindent",
    "brian2.utils.stringtools.strip_empty_lines"
   ]
  },
  "type": "function"
 },
 "brian2.utils.stringtools.word_substitute": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "brian2.utils.stringtools.re",
    "str"
   ]
  },
  "type": "function"
 },
 "brian2.utils.topsort": {
  "data": {},
  "type": "module"
 },
 "brian2.utils.topsort.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "brian2.utils.topsort.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "brian2.utils.topsort.copy": {
  "data": {
   "shadows": "copy.copy"
  },
  "type": "import"
 },
 "brian2.utils.topsort.topsort": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "copy.copy",
    "dict",
    "len",
    "set"
   ]
  },
  "type": "function"
 }
}