{
 "brian2": {
  "lineno": null,
  "symbols_in_volume": [
   "utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2._check_caches": {
  "lineno": 177,
  "symbols_in_volume": [
   "brian2.codegen.runtime.cython_rt.extension_manager.get_cython_cache_dir",
   "brian2.codegen.runtime.cython_rt.extension_manager.get_cython_extensions",
   "brian2.codegen.runtime.weave_rt.weave_rt.get_weave_cache_dir",
   "brian2.codegen.runtime.weave_rt.weave_rt.get_weave_extensions",
   "core.preferences.prefs.codegen.max_cache_dir_size"
  ],
  "type": "function"
 },
 "brian2._check_dependencies": {
  "lineno": 8,
  "symbols_in_volume": [
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "brian2._check_dependency_version": {
  "lineno": 72,
  "symbols_in_volume": [
   "core.preferences.prefs.core.outdated_dependency_error",
   "distutils.version.LooseVersion",
   "sys.modules",
   "utils.logger.get_logger"
  ],
  "type": "function"
 },
 "brian2._check_dependency_versions": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2._get_size_recursively": {
  "lineno": 106,
  "symbols_in_volume": [
   "os.path.getsize",
   "os.path.join",
   "os.walk"
  ],
  "type": "function"
 },
 "brian2.check_cache": {
  "lineno": 117,
  "symbols_in_volume": [
   "core.preferences.prefs.codegen.max_cache_dir_size"
  ],
  "type": "function"
 },
 "brian2.clear_cache": {
  "lineno": 134,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.join",
   "os.walk",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "brian2.codegen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.codegen._prefs": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.core.preferences.BrianPreference",
   "brian2.core.preferences.prefs.register_preferences"
  ],
  "type": "module"
 },
 "brian2.codegen.codeobject": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger",
   "platform.architecture",
   "platform.machine",
   "platform.system"
  ],
  "type": "module"
 },
 "brian2.codegen.codeobject.CodeObject": {
  "lineno": 42,
  "symbols_in_volume": [
   "brian2.core.names.Nameable"
  ],
  "type": "class"
 },
 "brian2.codegen.codeobject.CodeObject.__call__": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.codeobject.CodeObject.__init__": {
  "lineno": 61,
  "symbols_in_volume": [
   "brian2.core.names.Nameable.__init__",
   "weakref.proxy"
  ],
  "type": "function"
 },
 "brian2.codegen.codeobject.CodeObject.compile": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.codeobject.CodeObject.is_available": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.codeobject.CodeObject.run": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.codeobject.CodeObject.update_namespace": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.codeobject._error_msg": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.codeobject._gather_compiler_kwds": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.codeobject._merge_compiler_kwds": {
  "lineno": 160,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "brian2.codegen.codeobject.check_compiler_kwds": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.codeobject.constant_or_scalar": {
  "lineno": 29,
  "symbols_in_volume": [
   "brian2.devices.device.get_device"
  ],
  "type": "function"
 },
 "brian2.codegen.codeobject.create_runner_codeobj": {
  "lineno": 212,
  "symbols_in_volume": [
   "brian2.codegen.runtime.numpy_rt.NumpyCodeObject",
   "brian2.core.functions.Function",
   "brian2.devices.get_device",
   "brian2.equations.unitcheck.check_units_statements",
   "brian2.utils.stringtools.code_representation",
   "brian2.utils.stringtools.indent",
   "copy.copy"
  ],
  "type": "function"
 },
 "brian2.codegen.cpp_prefs": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.core.preferences.BrianPreference",
   "brian2.core.preferences.prefs.register_preferences",
   "brian2.utils.logger.get_logger",
   "json.dump",
   "json.load",
   "json.loads",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.expanduser",
   "os.path.isfile",
   "os.path.join",
   "platform.system",
   "socket.gethostname",
   "subprocess.CalledProcessError",
   "subprocess.check_output",
   "sys.executable"
  ],
  "type": "module"
 },
 "brian2.codegen.cpp_prefs.get_compiler_and_args": {
  "lineno": 189,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs",
   "distutils.ccompiler.get_default_compiler"
  ],
  "type": "function"
 },
 "brian2.codegen.cpp_prefs.update_for_cross_compilation": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.register_preferences"
  ],
  "type": "module"
 },
 "brian2.codegen.generators.GSL_generator": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.core.preferences.BrianPreference",
   "brian2.core.preferences.prefs.register_preferences"
  ],
  "type": "module"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.__getattr__": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.__init__": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.add_gsl_variables_as_non_scalar": {
  "lineno": 740,
  "symbols_in_volume": [
   "brian2.core.variables.AuxiliaryVariable"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.add_meta_variables": {
  "lineno": 762,
  "symbols_in_volume": [
   "numpy.float64",
   "numpy.int32",
   "numpy.ones"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.c_data_type": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.diff_var_to_replace": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.find_differential_variables": {
  "lineno": 221,
  "symbols_in_volume": [
   "brian2.parsing.statements.parse_statement",
   "re.search"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.find_function_names": {
  "lineno": 155,
  "symbols_in_volume": [
   "brian2.core.functions.Function"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.find_undefined_variables": {
  "lineno": 484,
  "symbols_in_volume": [
   "brian2.core.variables.AuxiliaryVariable"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.find_used_variables": {
  "lineno": 515,
  "symbols_in_volume": [
   "brian2.utils.stringtools.get_identifiers"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.get_dimension_code": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.initialize_array": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.is_constant_and_cpp_standalone": {
  "lineno": 198,
  "symbols_in_volume": [
   "brian2.core.variables.Constant"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.is_cpp_standalone": {
  "lineno": 177,
  "symbols_in_volume": [
   "brian2.devices.cpp_standalone.device.CPPStandaloneDevice",
   "brian2.devices.device.get_device"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.make_function_code": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.scale_array_code": {
  "lineno": 426,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.fail_for_dimension_mismatch"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.to_replace_vector_vars": {
  "lineno": 556,
  "symbols_in_volume": [
   "brian2.core.variables.ArrayVariable"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.translate": {
  "lineno": 805,
  "symbols_in_volume": [
   "brian2.codegen.permutation_analysis.OrderDependenceError",
   "brian2.codegen.permutation_analysis.check_for_order_independence",
   "brian2.codegen.translation.make_statements",
   "brian2.stateupdaters.base.UnsupportedEquationsException",
   "re.search"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.translate_scalar_code": {
  "lineno": 693,
  "symbols_in_volume": [
   "brian2.parsing.statements.parse_statement",
   "re.search"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.translate_vector_code": {
  "lineno": 653,
  "symbols_in_volume": [
   "brian2.utils.stringtools.word_substitute",
   "re.search",
   "re.sub"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.unpack_namespace": {
  "lineno": 613,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.unpack_namespace_single": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.var_init_lhs": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.write_dataholder": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.write_dataholder_single": {
  "lineno": 376,
  "symbols_in_volume": [
   "brian2.core.variables.ArrayVariable"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCodeGenerator.yvector_code": {
  "lineno": 309,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCythonCodeGenerator": {
  "lineno": 944,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.generators.GSL_generator.GSLCythonCodeGenerator.c_data_type": {
  "lineno": 957,
  "symbols_in_volume": [
   "brian2.codegen.generators.c_data_type"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCythonCodeGenerator.get_array_name": {
  "lineno": 992,
  "symbols_in_volume": [
   "brian2.codegen.generators.cython_generator.CythonCodeGenerator.get_array_name"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCythonCodeGenerator.initialize_array": {
  "lineno": 960,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCythonCodeGenerator.unpack_namespace_single": {
  "lineno": 974,
  "symbols_in_volume": [
   "brian2.core.variables.ArrayVariable"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCythonCodeGenerator.var_init_lhs": {
  "lineno": 971,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLCythonCodeGenerator.var_replace_diff_var_lhs": {
  "lineno": 967,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator": {
  "lineno": 999,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator.__getattr__": {
  "lineno": 1001,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator.c_data_type": {
  "lineno": 1015,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator.get_array_name": {
  "lineno": 1055,
  "symbols_in_volume": [
   "brian2.codegen.runtime.weave_rt.WeaveCodeGenerator.get_array_name"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator.initialize_array": {
  "lineno": 1018,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator.unpack_namespace_single": {
  "lineno": 1040,
  "symbols_in_volume": [
   "brian2.core.variables.ArrayVariable"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator.var_init_lhs": {
  "lineno": 1037,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.GSLWeaveCodeGenerator.var_replace_diff_var_lhs": {
  "lineno": 1022,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.core.default_float_dtype"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.GSL_generator.valid_gsl_dir": {
  "lineno": 27,
  "symbols_in_volume": [
   "brian2.core.preferences.PreferenceError",
   "os.path.isdir",
   "os.path.isfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.base": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.codegen.generators.base.CodeGenerator": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.generators.base.CodeGenerator.__init__": {
  "lineno": 31,
  "symbols_in_volume": [
   "brian2.core.functions.Function",
   "brian2.devices.device.get_device"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.array_read_write": {
  "lineno": 128,
  "symbols_in_volume": [
   "brian2.core.variables.ArrayVariable",
   "brian2.utils.stringtools.get_identifiers"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.arrays_helper": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.determine_keywords": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.get_array_name": {
  "lineno": 58,
  "symbols_in_volume": [
   "brian2.devices.device.get_device"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.get_conditional_write_vars": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.has_repeated_indices": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.translate": {
  "lineno": 218,
  "symbols_in_volume": [
   "brian2.codegen.permutation_analysis.OrderDependenceError",
   "brian2.codegen.permutation_analysis.check_for_order_independence",
   "brian2.codegen.translation.make_statements"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.translate_expression": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.translate_one_statement_sequence": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.translate_statement": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.base.CodeGenerator.translate_statement_sequence": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.core.functions.DEFAULT_FUNCTIONS.implementations.add_implementation",
   "brian2.core.preferences.BrianPreference",
   "brian2.core.preferences.prefs.register_preferences",
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.__init__": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator._add_user_function": {
  "lineno": 359,
  "symbols_in_volume": [
   "brian2.utils.stringtools.deindent"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.denormals_to_zero_code": {
  "lineno": 348,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.determine_keywords": {
  "lineno": 406,
  "symbols_in_volume": [
   "brian2.core.functions.Function",
   "brian2.core.variables.ArrayVariable",
   "brian2.devices.device.get_device",
   "brian2.utils.stringtools.stripped_deindented_lines"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.flush_denormals": {
  "lineno": 167,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.get_array_name": {
  "lineno": 171,
  "symbols_in_volume": [
   "brian2.devices.device.get_device"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.restrict": {
  "lineno": 163,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_expression": {
  "lineno": 181,
  "symbols_in_volume": [
   "brian2.parsing.rendering.CPPNodeRenderer",
   "brian2.utils.stringtools.word_substitute"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_one_statement_sequence": {
  "lineno": 287,
  "symbols_in_volume": [
   "brian2.utils.stringtools.stripped_deindented_lines"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_statement": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_statement_sequence": {
  "lineno": 304,
  "symbols_in_volume": [
   "brian2.utils.stringtools.stripped_deindented_lines"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_to_declarations": {
  "lineno": 253,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_to_read_arrays": {
  "lineno": 238,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_to_statements": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.CPPCodeGenerator.translate_to_write_arrays": {
  "lineno": 277,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.cpp_generator.c_data_type": {
  "lineno": 22,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.core.functions.DEFAULT_FUNCTIONS.implementations.add_implementation",
   "brian2.devices.device.all_devices"
  ],
  "type": "module"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.__init__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator._add_user_function": {
  "lineno": 210,
  "symbols_in_volume": [
   "brian2.utils.stringtools.deindent"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.determine_keywords": {
  "lineno": 284,
  "symbols_in_volume": [
   "brian2.core.functions.Function",
   "brian2.core.variables.AuxiliaryVariable",
   "brian2.core.variables.Constant",
   "brian2.core.variables.Subexpression",
   "brian2.core.variables.Variable",
   "brian2.core.variables.get_dtype_str",
   "brian2.devices.device.get_device"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.translate_expression": {
  "lineno": 66,
  "symbols_in_volume": [
   "brian2.utils.stringtools.word_substitute"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.translate_one_statement_sequence": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.translate_statement": {
  "lineno": 70,
  "symbols_in_volume": [
   "brian2.parsing.bast.brian_dtype_from_dtype"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.translate_statement_sequence": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.translate_to_read_arrays": {
  "lineno": 130,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.translate_to_statements": {
  "lineno": 143,
  "symbols_in_volume": [
   "brian2.utils.stringtools.indent"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonCodeGenerator.translate_to_write_arrays": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonNodeRenderer": {
  "lineno": 38,
  "symbols_in_volume": [
   "brian2.parsing.rendering.NodeRenderer"
  ],
  "type": "class"
 },
 "brian2.codegen.generators.cython_generator.CythonNodeRenderer.render_BinOp": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonNodeRenderer.render_Name": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.CythonNodeRenderer.render_NameConstant": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.get_cpp_dtype": {
  "lineno": 31,
  "symbols_in_volume": [
   "brian2.core.variables.get_dtype_str"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.cython_generator.get_numpy_dtype": {
  "lineno": 34,
  "symbols_in_volume": [
   "brian2.core.variables.get_dtype_str"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.core.functions.DEFAULT_FUNCTIONS.implementations.add_implementation",
   "brian2.core.functions.timestep",
   "brian2.utils.logger.get_logger",
   "numpy.abs",
   "numpy.arccos",
   "numpy.arcsin",
   "numpy.arctan",
   "numpy.ceil",
   "numpy.clip",
   "numpy.cos",
   "numpy.cosh",
   "numpy.exp",
   "numpy.floor",
   "numpy.int32",
   "numpy.log",
   "numpy.log10",
   "numpy.sign",
   "numpy.sin",
   "numpy.sinh",
   "numpy.sqrt",
   "numpy.tan",
   "numpy.tanh"
  ],
  "type": "module"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.conditional_write": {
  "lineno": 229,
  "symbols_in_volume": [
   "brian2.core.variables.ArrayVariable",
   "brian2.utils.stringtools.word_substitute"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.determine_keywords": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.read_arrays": {
  "lineno": 183,
  "symbols_in_volume": [
   "itertools.chain"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.translate_expression": {
  "lineno": 34,
  "symbols_in_volume": [
   "brian2.parsing.rendering.NumpyNodeRenderer",
   "brian2.utils.stringtools.word_substitute"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.translate_one_statement_sequence": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.translate_statement": {
  "lineno": 38,
  "symbols_in_volume": [
   "brian2.parsing.bast.brian_dtype_from_dtype"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.ufunc_at_vectorisation": {
  "lineno": 68,
  "symbols_in_volume": [
   "brian2.devices.device.device.get_array_name",
   "brian2.parsing.rendering.NumpyNodeRenderer",
   "brian2.utils.stringtools.get_identifiers"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.vectorise_code": {
  "lineno": 118,
  "symbols_in_volume": [
   "brian2.utils.stringtools.get_identifiers",
   "brian2.utils.stringtools.indent"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.NumpyCodeGenerator.write_arrays": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.VectorisationError": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.generators.numpy_generator.rand_func": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "brian2.codegen.generators.numpy_generator.randn_func": {
  "lineno": 303,
  "symbols_in_volume": [
   "numpy.random.randn"
  ],
  "type": "function"
 },
 "brian2.codegen.get_cpu_flags": {
  "lineno": null,
  "symbols_in_volume": [
   "cpuinfo.get_cpu_info",
   "json.dumps"
  ],
  "type": "module"
 },
 "brian2.codegen.optimisation": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.core.functions.DEFAULT_CONSTANTS.iteritems",
   "brian2.core.functions.DEFAULT_FUNCTIONS.iteritems"
  ],
  "type": "module"
 },
 "brian2.codegen.optimisation.ArithmeticSimplifier": {
  "lineno": 158,
  "symbols_in_volume": [
   "brian2.parsing.bast.BrianASTRenderer"
  ],
  "type": "class"
 },
 "brian2.codegen.optimisation.ArithmeticSimplifier.__init__": {
  "lineno": 174,
  "symbols_in_volume": [
   "brian2.parsing.bast.BrianASTRenderer",
   "brian2.parsing.bast.BrianASTRenderer.__init__"
  ],
  "type": "function"
 },
 "brian2.codegen.optimisation.ArithmeticSimplifier.render_BinOp": {
  "lineno": 220,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.core.default_float_dtype",
   "brian2.parsing.bast.dtype_hierarchy"
  ],
  "type": "function"
 },
 "brian2.codegen.optimisation.ArithmeticSimplifier.render_node": {
  "lineno": 180,
  "symbols_in_volume": [
   "ast",
   "ast.Name",
   "ast.NameConstant",
   "ast.Num",
   "brian2.core.preferences.prefs.core.default_float_dtype",
   "brian2.parsing.rendering.NodeRenderer"
  ],
  "type": "function"
 },
 "brian2.codegen.optimisation.Simplifier": {
  "lineno": 289,
  "symbols_in_volume": [
   "brian2.parsing.bast.BrianASTRenderer"
  ],
  "type": "class"
 },
 "brian2.codegen.optimisation.Simplifier.__init__": {
  "lineno": 313,
  "symbols_in_volume": [
   "brian2.parsing.bast.BrianASTRenderer.__init__",
   "brian2.parsing.rendering.NodeRenderer",
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "brian2.codegen.optimisation.Simplifier.render_expr": {
  "lineno": 327,
  "symbols_in_volume": [
   "brian2.parsing.bast.brian_ast"
  ],
  "type": "function"
 },
 "brian2.codegen.optimisation.Simplifier.render_node": {
  "lineno": 333,
  "symbols_in_volume": [
   "ast.Name",
   "brian2.core.preferences.prefs.core.default_float_dtype",
   "brian2.core.variables.AuxiliaryVariable"
  ],
  "type": "function"
 },
 "brian2.codegen.optimisation._replace_with_zero": {
  "lineno": 132,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.core.default_float_dtype"
  ],
  "type": "function"
 },
 "brian2.codegen.optimisation.cancel_identical_terms": {
  "lineno": 394,
  "symbols_in_volume": [
   "brian2.parsing.rendering.NodeRenderer"
  ],
  "type": "function"
 },
 "brian2.codegen.optimisation.collect": {
  "lineno": 438,
  "symbols_in_volume": [
   "ast.Add",
   "ast.BinOp",
   "ast.Div",
   "ast.Mult",
   "ast.Num",
   "ast.Sub",
   "brian2.core.preferences.prefs.core.default_float_dtype",
   "brian2.parsing.bast.dtype_hierarchy"
  ],
  "type": "function"
 },
 "brian2.codegen.optimisation.collect_commutative": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.optimisation.evaluate_expr": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.optimisation.expression_complexity": {
  "lineno": 41,
  "symbols_in_volume": [
   "brian2.parsing.bast.brian_ast"
  ],
  "type": "function"
 },
 "brian2.codegen.optimisation.optimise_statements": {
  "lineno": 45,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.core.default_float_dtype",
   "brian2.parsing.bast.brian_dtype_from_dtype",
   "brian2.utils.stringtools.get_identifiers",
   "brian2.utils.stringtools.word_substitute",
   "copy.copy",
   "itertools.product"
  ],
  "type": "function"
 },
 "brian2.codegen.optimisation.reduced_node": {
  "lineno": 364,
  "symbols_in_volume": [
   "ast.BinOp"
  ],
  "type": "function"
 },
 "brian2.codegen.permutation_analysis": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.codegen.permutation_analysis.OrderDependenceError": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.permutation_analysis.check_for_order_independence": {
  "lineno": 15,
  "symbols_in_volume": [
   "brian2.core.functions.Function",
   "brian2.core.variables.Constant",
   "brian2.utils.stringtools.get_identifiers"
  ],
  "type": "function"
 },
 "brian2.codegen.runtime": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.register_preferences",
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.codegen.runtime.GSLcython_rt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.GSLCompileError": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.GSLCythonCodeObject": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.GSLCythonCodeObject.compile": {
  "lineno": 33,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.GSL.directory",
   "distutils.errors.CompileError",
   "sys.platform"
  ],
  "type": "function"
 },
 "brian2.codegen.runtime.GSLcython_rt.GSLcython_rt.IntegrationError": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.runtime.GSLweave_rt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt": {
  "lineno": null,
  "symbols_in_volume": [
   "weave.build_tools.CompileError"
  ],
  "type": "module"
 },
 "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt.GSLCompileError": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt.GSLWeaveCodeObject": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.runtime.GSLweave_rt.GSLweave_rt.GSLWeaveCodeObject.run": {
  "lineno": 33,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.GSL.directory",
   "sys.platform",
   "weave.build_tools.CompileError"
  ],
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.core.preferences.BrianPreference",
   "brian2.core.preferences.prefs.register_preferences",
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "class"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject.__init__": {
  "lineno": 73,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs",
   "os.path.join",
   "sys.platform",
   "sys.prefix"
  ],
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject._insert_func_namespace": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject.compile": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject.is_available": {
  "lineno": 113,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs"
  ],
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject.run": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject.update_namespace": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.runtime.cython_rt.cython_rt.CythonCodeObject.variables_to_namespace": {
  "lineno": 164,
  "symbols_in_volume": [
   "brian2.core.functions.Function",
   "brian2.core.variables.ArrayVariable",
   "brian2.core.variables.AuxiliaryVariable",
   "brian2.core.variables.DynamicArrayVariable",
   "brian2.core.variables.Subexpression",
   "brian2.utils.stringtools.get_identifiers"
  ],
  "type": "function"
 },
 "brian2.codegen.runtime.numpy_rt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.codegen.runtime.weave_rt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.codegen.statements": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.codegen.statements.Statement": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.statements.Statement.__init__": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.statements.Statement.__str__": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.targets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.codegen.templates": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.codegen.templates.CodeObjectTemplate": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.templates.CodeObjectTemplate.__call__": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.templates.CodeObjectTemplate.__init__": {
  "lineno": 151,
  "symbols_in_volume": [
   "brian2.utils.stringtools.get_identifiers",
   "re.M",
   "re.S",
   "re.findall"
  ],
  "type": "function"
 },
 "brian2.codegen.templates.LazyTemplateLoader": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.templates.LazyTemplateLoader.__init__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.templates.LazyTemplateLoader.get_template": {
  "lineno": 64,
  "symbols_in_volume": [
   "jinja2.TemplateNotFound"
  ],
  "type": "function"
 },
 "brian2.codegen.templates.MultiTemplate": {
  "lineno": 210,
  "symbols_in_volume": [
   "collections.Mapping"
  ],
  "type": "class"
 },
 "brian2.codegen.templates.MultiTemplate.__getitem__": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.templates.MultiTemplate.__init__": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.templates.MultiTemplate.__iter__": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.templates.MultiTemplate.__len__": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.templates.MultiTemplate.__str__": {
  "lineno": 234,
  "symbols_in_volume": [
   "brian2.utils.stringtools.indent",
   "brian2.utils.stringtools.strip_empty_lines"
  ],
  "type": "function"
 },
 "brian2.codegen.templates.Templater": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.templates.Templater.__getattr__": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.templates.Templater.__init__": {
  "lineno": 102,
  "symbols_in_volume": [
   "jinja2.ChoiceLoader",
   "jinja2.Environment",
   "jinja2.PackageLoader",
   "jinja2.StrictUndefined"
  ],
  "type": "function"
 },
 "brian2.codegen.templates.Templater.derive": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.templates.autoindent": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.templates.autoindent_postfilter": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.templates.variables_to_array_names": {
  "lineno": 47,
  "symbols_in_volume": [
   "brian2.devices.device.get_device"
  ],
  "type": "function"
 },
 "brian2.codegen.translation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.codegen.translation.LineInfo": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.codegen.translation.LineInfo.__init__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.codegen.translation.analyse_identifiers": {
  "lineno": 52,
  "symbols_in_volume": [
   "brian2.core.variables.AuxiliaryVariable",
   "brian2.core.variables.Variable",
   "brian2.utils.stringtools.get_identifiers",
   "collections.Mapping",
   "numpy.float64"
  ],
  "type": "function"
 },
 "brian2.codegen.translation.get_identifiers_recursively": {
  "lineno": 113,
  "symbols_in_volume": [
   "brian2.core.variables.Subexpression",
   "brian2.utils.stringtools.get_identifiers"
  ],
  "type": "function"
 },
 "brian2.codegen.translation.is_scalar_expression": {
  "lineno": 141,
  "symbols_in_volume": [
   "brian2.core.functions.Function"
  ],
  "type": "function"
 },
 "brian2.codegen.translation.make_statements": {
  "lineno": 167,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.codegen.loop_invariant_optimisations",
   "brian2.core.variables.AuxiliaryVariable",
   "brian2.core.variables.Subexpression",
   "brian2.parsing.bast.brian_ast",
   "brian2.parsing.statements.parse_statement",
   "brian2.parsing.sympytools.str_to_sympy",
   "brian2.parsing.sympytools.sympy_to_str",
   "brian2.utils.caching.cached",
   "brian2.utils.stringtools.deindent",
   "brian2.utils.stringtools.strip_empty_lines",
   "brian2.utils.topsort.topsort",
   "re.split",
   "sympy.Symbol",
   "sympy.collect"
  ],
  "type": "function"
 },
 "brian2.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.core.base": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.core.base.BrianObject": {
  "lineno": 21,
  "symbols_in_volume": [
   "brian2.core.names.Nameable",
   "brian2.core.names.Nameable.name"
  ],
  "type": "class"
 },
 "brian2.core.base.BrianObject.__init__": {
  "lineno": 51,
  "symbols_in_volume": [
   "brian2.core.clocks.Clock",
   "brian2.core.clocks.defaultclock",
   "brian2.core.names.Nameable.__init__",
   "brian2.devices.device.get_device",
   "brian2.units.allunits.second",
   "brian2.units.fundamentalunits.check_units",
   "os.path.split",
   "sys.modules",
   "sys.modules.__file__",
   "traceback.extract_stack"
  ],
  "type": "function"
 },
 "brian2.core.base.BrianObject.__repr__": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.base.BrianObject._set_active": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.base.BrianObject.add_dependency": {
  "lineno": 145,
  "symbols_in_volume": [
   "brian2.groups.subgroup.Subgroup"
  ],
  "type": "function"
 },
 "brian2.core.base.BrianObject.after_run": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.base.BrianObject.before_run": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.base.BrianObject.run": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.base.BrianObjectException": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.base.BrianObjectException.__init__": {
  "lineno": 309,
  "symbols_in_volume": [
   "traceback.format_exc",
   "traceback.format_exception_only"
  ],
  "type": "function"
 },
 "brian2.core.base.BrianObjectException.__str__": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.base.brian_object_exception": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.base.device_override": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.base.device_override.device_override_decorator": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.base.device_override.device_override_decorator.device_override_decorated_function": {
  "lineno": 270,
  "symbols_in_volume": [
   "brian2.devices.device.get_device"
  ],
  "type": "function"
 },
 "brian2.core.base.weakproxy_with_fallback": {
  "lineno": 251,
  "symbols_in_volume": [
   "weakref.proxy"
  ],
  "type": "function"
 },
 "brian2.core.clocks": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.core.clocks.Clock": {
  "lineno": 63,
  "symbols_in_volume": [
   "brian2.groups.group.VariableOwner",
   "brian2.units.allunits.second.dim",
   "brian2.units.fundamentalunits.Quantity"
  ],
  "type": "class"
 },
 "brian2.core.clocks.Clock.__init__": {
  "lineno": 83,
  "symbols_in_volume": [
   "brian2.core.names.Nameable.__init__",
   "brian2.core.variables.Variables",
   "brian2.units.allunits.second.dim",
   "numpy.double",
   "numpy.float",
   "numpy.int64"
  ],
  "type": "function"
 },
 "brian2.core.clocks.Clock.__repr__": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.clocks.Clock._calc_timestep": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.ceil",
   "numpy.int64",
   "numpy.round"
  ],
  "type": "function"
 },
 "brian2.core.clocks.Clock._get_dt_": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.clocks.Clock._set_dt": {
  "lineno": 156,
  "symbols_in_volume": [
   "brian2.units.allunits.second",
   "brian2.units.fundamentalunits.check_units"
  ],
  "type": "function"
 },
 "brian2.core.clocks.Clock._set_dt_": {
  "lineno": 151,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.check_units"
  ],
  "type": "function"
 },
 "brian2.core.clocks.Clock._set_t_update_dt": {
  "lineno": 102,
  "symbols_in_volume": [
   "brian2.units.allunits.second",
   "brian2.units.fundamentalunits.check_units"
  ],
  "type": "function"
 },
 "brian2.core.clocks.Clock.set_interval": {
  "lineno": 167,
  "symbols_in_volume": [
   "brian2.units.allunits.second",
   "brian2.units.fundamentalunits.check_units"
  ],
  "type": "function"
 },
 "brian2.core.clocks.DefaultClockProxy": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.clocks.DefaultClockProxy.__getattr__": {
  "lineno": 201,
  "symbols_in_volume": [
   "brian2.devices.device.active_device.defaultclock"
  ],
  "type": "function"
 },
 "brian2.core.clocks.DefaultClockProxy.__setattr__": {
  "lineno": 207,
  "symbols_in_volume": [
   "brian2.devices.device.active_device.defaultclock"
  ],
  "type": "function"
 },
 "brian2.core.clocks.check_dt": {
  "lineno": 21,
  "symbols_in_volume": [
   "brian2.units.allunits.second",
   "numpy.int64",
   "numpy.round"
  ],
  "type": "function"
 },
 "brian2.core.core_preferences": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.core.preferences.BrianPreference",
   "brian2.core.preferences.prefs.register_preferences",
   "numpy.float64",
   "numpy.int32"
  ],
  "type": "module"
 },
 "brian2.core.core_preferences.default_float_dtype_validator": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64"
  ],
  "type": "function"
 },
 "brian2.core.core_preferences.dtype_repr": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.functions": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.units.allunits.second",
   "brian2.units.unitsafefunctions.arccos",
   "brian2.units.unitsafefunctions.arcsin",
   "brian2.units.unitsafefunctions.arctan",
   "brian2.units.unitsafefunctions.cos",
   "brian2.units.unitsafefunctions.cosh",
   "brian2.units.unitsafefunctions.exp",
   "brian2.units.unitsafefunctions.log",
   "brian2.units.unitsafefunctions.log10",
   "brian2.units.unitsafefunctions.sin",
   "brian2.units.unitsafefunctions.sinh",
   "brian2.units.unitsafefunctions.tan",
   "brian2.units.unitsafefunctions.tanh",
   "numpy.abs",
   "numpy.ceil",
   "numpy.clip",
   "numpy.e",
   "numpy.floor",
   "numpy.inf",
   "numpy.int_",
   "numpy.pi",
   "numpy.random.rand",
   "numpy.random.randn",
   "numpy.sign",
   "numpy.sqrt",
   "sympy.E",
   "sympy.Function",
   "sympy.S.Infinity",
   "sympy.S.NegativeInfinity",
   "sympy.functions.elementary.complexes.Abs",
   "sympy.functions.elementary.exponential.exp",
   "sympy.functions.elementary.exponential.log",
   "sympy.functions.elementary.hyperbolic.cosh",
   "sympy.functions.elementary.hyperbolic.sinh",
   "sympy.functions.elementary.hyperbolic.tanh",
   "sympy.functions.elementary.integers.ceiling",
   "sympy.functions.elementary.integers.floor",
   "sympy.functions.elementary.miscellaneous.sqrt",
   "sympy.functions.elementary.trigonometric.acos",
   "sympy.functions.elementary.trigonometric.asin",
   "sympy.functions.elementary.trigonometric.atan",
   "sympy.functions.elementary.trigonometric.cos",
   "sympy.functions.elementary.trigonometric.sin",
   "sympy.functions.elementary.trigonometric.tan",
   "sympy.pi",
   "sympy.sign"
  ],
  "type": "module"
 },
 "brian2.core.functions.Function": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.functions.Function.__call__": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.functions.Function.__init__": {
  "lineno": 117,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.is_dimensionless"
  ],
  "type": "function"
 },
 "brian2.core.functions.Function.is_locally_constant": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementation": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.functions.FunctionImplementation.__init__": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementation.get_code": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementation.get_namespace": {
  "lineno": 251,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer": {
  "lineno": 258,
  "symbols_in_volume": [
   "collections.Mapping"
  ],
  "type": "class"
 },
 "brian2.core.functions.FunctionImplementationContainer.__getitem__": {
  "lineno": 268,
  "symbols_in_volume": [
   "inspect.getmro"
  ],
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer.__init__": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer.__iter__": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer.__len__": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer.add_dynamic_implementation": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer.add_implementation": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer.add_numpy_implementation": {
  "lineno": 318,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs",
   "brian2.units.fundamentalunits.Quantity",
   "numpy.asarray",
   "types.FunctionType"
  ],
  "type": "function"
 },
 "brian2.core.functions.FunctionImplementationContainer.add_numpy_implementation.wrapper_function": {
  "lineno": 358,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.units.fundamentalunits.Quantity.with_dimensions",
   "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
   "brian2.units.fundamentalunits.get_dimensions",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "brian2.core.functions.SymbolicConstant": {
  "lineno": 536,
  "symbols_in_volume": [
   "brian2.core.variables.Constant"
  ],
  "type": "class"
 },
 "brian2.core.functions.SymbolicConstant.__init__": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.functions.declare_types": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.functions.declare_types.annotate_function_with_types": {
  "lineno": 39,
  "symbols_in_volume": [
   "types.get",
   "types.keys"
  ],
  "type": "function"
 },
 "brian2.core.functions.implementation": {
  "lineno": 439,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.functions.implementation.do_user_implementation": {
  "lineno": 506,
  "symbols_in_volume": [
   "sympy.Function"
  ],
  "type": "function"
 },
 "brian2.core.functions.log10": {
  "lineno": 550,
  "symbols_in_volume": [
   "sympy.Function"
  ],
  "type": "class"
 },
 "brian2.core.functions.log10.eval": {
  "lineno": 553,
  "symbols_in_volume": [
   "sympy.functions.elementary.exponential.log"
  ],
  "type": "function"
 },
 "brian2.core.functions.timestep": {
  "lineno": 560,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64"
  ],
  "type": "function"
 },
 "brian2.core.magic": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.core.magic.MagicError": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.magic.MagicNetwork": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.magic.MagicNetwork.__init__": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.__str__": {
  "lineno": 270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork._update_magic_objects": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.add": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.after_run": {
  "lineno": 223,
  "symbols_in_volume": [
   "gc.collect"
  ],
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.check_dependencies": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.get_states": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.remove": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.restore": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.run": {
  "lineno": 227,
  "symbols_in_volume": [
   "brian2.units.allunits.second"
  ],
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.set_states": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic.MagicNetwork.store": {
  "lineno": 233,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic._get_contained_objects": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic.collect": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic.get_objects_in_namespace": {
  "lineno": 46,
  "symbols_in_volume": [
   "inspect.stack",
   "itertools.chain",
   "weakref.ref"
  ],
  "type": "function"
 },
 "brian2.core.magic.restore": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic.run": {
  "lineno": 308,
  "symbols_in_volume": [
   "brian2.units.allunits.second",
   "brian2.units.fundamentalunits.check_units"
  ],
  "type": "function"
 },
 "brian2.core.magic.start_scope": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic.stop": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.magic.store": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.namespace": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.core.namespace._get_default_unit_namespace": {
  "lineno": 51,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.additional_unit_register.units.iteritems",
   "brian2.units.fundamentalunits.standard_unit_register.units",
   "brian2.units.stdunits.stdunits",
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "brian2.core.namespace.get_local_namespace": {
  "lineno": 23,
  "symbols_in_volume": [
   "inspect.currentframe",
   "itertools.chain"
  ],
  "type": "function"
 },
 "brian2.core.network": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.core.preferences.BrianPreference",
   "brian2.core.preferences.prefs.register_preferences",
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.core.network.Network": {
  "lineno": 260,
  "symbols_in_volume": [
   "brian2.core.names.Nameable",
   "brian2.units.allunits.second.dim",
   "brian2.units.fundamentalunits.Quantity"
  ],
  "type": "class"
 },
 "brian2.core.network.Network.__contains__": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network.__delitem__": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network.__getitem__": {
  "lineno": 387,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network.__init__": {
  "lineno": 324,
  "symbols_in_volume": [
   "brian2.core.names.Nameable.__init__"
  ],
  "type": "function"
 },
 "brian2.core.network.Network.__iter__": {
  "lineno": 418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network.__len__": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network.__repr__": {
  "lineno": 1093,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network._full_state": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network._get_schedule": {
  "lineno": 682,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.core.network.default_schedule"
  ],
  "type": "function"
 },
 "brian2.core.network.Network._nextclocks": {
  "lineno": 872,
  "symbols_in_volume": [
   "brian2.core.clocks.Clock.epsilon_dt",
   "time"
  ],
  "type": "function"
 },
 "brian2.core.network.Network._set_schedule": {
  "lineno": 688,
  "symbols_in_volume": [
   "collections.Sequence"
  ],
  "type": "function"
 },
 "brian2.core.network.Network._sort_objects": {
  "lineno": 723,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network.add": {
  "lineno": 421,
  "symbols_in_volume": [
   "brian2.core.base.BrianObject",
   "collections.Mapping"
  ],
  "type": "function"
 },
 "brian2.core.network.Network.after_run": {
  "lineno": 863,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network.before_run": {
  "lineno": 773,
  "symbols_in_volume": [
   "brian2.core.base.brian_object_exception",
   "brian2.core.preferences.prefs.check_all_validated",
   "brian2.devices.device.all_devices.keys",
   "brian2.devices.device.all_devices.values",
   "brian2.devices.device.get_device",
   "collections.Counter"
  ],
  "type": "function"
 },
 "brian2.core.network.Network.check_dependencies": {
  "lineno": 764,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network.get_profiling_info": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network.get_states": {
  "lineno": 597,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network.profiling_info": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network.remove": {
  "lineno": 464,
  "symbols_in_volume": [
   "brian2.core.base.BrianObject"
  ],
  "type": "function"
 },
 "brian2.core.network.Network.restore": {
  "lineno": 550,
  "symbols_in_volume": [
   "cPickle.load"
  ],
  "type": "function"
 },
 "brian2.core.network.Network.run": {
  "lineno": 883,
  "symbols_in_volume": [
   "brian2.core.namespace.get_local_namespace",
   "brian2.devices.device.get_device",
   "brian2.groups.group.Group",
   "brian2.units.allunits.second",
   "brian2.units.fundamentalunits.check_units",
   "collections.defaultdict",
   "sys.stderr",
   "sys.stdout",
   "time.time"
  ],
  "type": "function"
 },
 "brian2.core.network.Network.scheduling_summary": {
  "lineno": 751,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network.set_states": {
  "lineno": 651,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network.stop": {
  "lineno": 1084,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.Network.store": {
  "lineno": 502,
  "symbols_in_volume": [
   "cPickle.HIGHEST_PROTOCOL",
   "cPickle.dump",
   "cPickle.load",
   "os.path.exists"
  ],
  "type": "function"
 },
 "brian2.core.network.ProfilingSummary": {
  "lineno": 1099,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.network.ProfilingSummary.__init__": {
  "lineno": 1117,
  "symbols_in_volume": [
   "brian2.units.allunits.msecond",
   "brian2.units.allunits.second",
   "time"
  ],
  "type": "function"
 },
 "brian2.core.network.ProfilingSummary.__repr__": {
  "lineno": 1140,
  "symbols_in_volume": [
   "time"
  ],
  "type": "function"
 },
 "brian2.core.network.ProfilingSummary._repr_html_": {
  "lineno": 1154,
  "symbols_in_volume": [
   "time"
  ],
  "type": "function"
 },
 "brian2.core.network.SchedulingSummary": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.network.SchedulingSummary.__init__": {
  "lineno": 149,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "function"
 },
 "brian2.core.network.SchedulingSummary.__repr__": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.SchedulingSummary._repr_html_": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.TextReport": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.network.TextReport.__call__": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.TextReport.__init__": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network._check_multiple_summed_updaters": {
  "lineno": 220,
  "symbols_in_volume": [
   "brian2.synapses.synapses.SummedVariableUpdater"
  ],
  "type": "function"
 },
 "brian2.core.network._format_table": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network._format_time": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.profiling_summary": {
  "lineno": 1169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.network.schedule_propagation_offset": {
  "lineno": 1218,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.magic.magic_network",
   "brian2.devices.device.get_device",
   "brian2.units.allunits.second"
  ],
  "type": "function"
 },
 "brian2.core.network.scheduling_summary": {
  "lineno": 1191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.operations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.core.operations.NetworkOperation": {
  "lineno": 8,
  "symbols_in_volume": [
   "brian2.core.base.BrianObject"
  ],
  "type": "class"
 },
 "brian2.core.operations.NetworkOperation.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "brian2.core.base.BrianObject.__init__",
   "inspect.ismethod"
  ],
  "type": "function"
 },
 "brian2.core.operations.NetworkOperation.run": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.operations.network_operation": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.operations.network_operation.do_network_operation": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.operations.network_operation.do_network_operation.__call__": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.operations.network_operation.do_network_operation.__init__": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.spikesource": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.core.spikesource.SpikeSource": {
  "lineno": 3,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.tracking": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.core.tracking.InstanceFollower": {
  "lineno": 35,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "class"
 },
 "brian2.core.tracking.InstanceFollower.add": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.tracking.InstanceFollower.get": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.tracking.InstanceTrackerSet": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.tracking.InstanceTrackerSet.add": {
  "lineno": 12,
  "symbols_in_volume": [
   "weakref.ref"
  ],
  "type": "function"
 },
 "brian2.core.tracking.InstanceTrackerSet.remove": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.tracking.Trackable": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.tracking.Trackable.__instances__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.tracking.Trackable.__new__": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.core.variables.ArrayVariable": {
  "lineno": 381,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.variables.ArrayVariable.__init__": {
  "lineno": 425,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS"
  ],
  "type": "function"
 },
 "brian2.core.variables.ArrayVariable.get_addressable_value": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.ArrayVariable.get_addressable_value_with_unit": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.ArrayVariable.get_len": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.ArrayVariable.get_value": {
  "lineno": 461,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.ArrayVariable.set_conditional_write": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.ArrayVariable.set_value": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.AuxiliaryVariable": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.variables.AuxiliaryVariable.__init__": {
  "lineno": 372,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS"
  ],
  "type": "function"
 },
 "brian2.core.variables.AuxiliaryVariable.get_value": {
  "lineno": 377,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Constant": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.variables.Constant.__init__": {
  "lineno": 313,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "numpy.False_",
   "numpy.True_",
   "numpy.bool",
   "numpy.can_cast",
   "numpy.complex_",
   "numpy.float_",
   "numpy.int_"
  ],
  "type": "function"
 },
 "brian2.core.variables.Constant.get_value": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.DynamicArrayVariable": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.variables.DynamicArrayVariable.__init__": {
  "lineno": 532,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS"
  ],
  "type": "function"
 },
 "brian2.core.variables.DynamicArrayVariable.dimensions": {
  "lineno": 568,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.DynamicArrayVariable.resize": {
  "lineno": 575,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.LinkedVariable": {
  "lineno": 674,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.variables.LinkedVariable.__init__": {
  "lineno": 693,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Subexpression": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.variables.Subexpression.__contains__": {
  "lineno": 658,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Subexpression.__init__": {
  "lineno": 618,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.str_to_sympy",
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.utils.stringtools.get_identifiers",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "brian2.core.variables.Subexpression.__repr__": {
  "lineno": 661,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Subexpression.get_addressable_value": {
  "lineno": 650,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS"
  ],
  "type": "function"
 },
 "brian2.core.variables.Subexpression.get_addressable_value_with_unit": {
  "lineno": 654,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variable": {
  "lineno": 93,
  "symbols_in_volume": [
   "brian2.utils.caching.CacheKey"
  ],
  "type": "class"
 },
 "brian2.core.variables.Variable.__init__": {
  "lineno": 134,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.units.fundamentalunits.Dimension"
  ],
  "type": "function"
 },
 "brian2.core.variables.Variable.__len__": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variable.__repr__": {
  "lineno": 274,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variable.dtype_str": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variable.get_addressable_value": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variable.get_addressable_value_with_unit": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variable.get_len": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variable.get_value": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variable.get_value_with_unit": {
  "lineno": 207,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.Quantity"
  ],
  "type": "function"
 },
 "brian2.core.variables.Variable.is_boolean": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.issubdtype"
  ],
  "type": "function"
 },
 "brian2.core.variables.Variable.is_integer": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.issubdtype",
   "numpy.signedinteger"
  ],
  "type": "function"
 },
 "brian2.core.variables.Variable.set_value": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variable.unit": {
  "lineno": 187,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.get_unit"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView": {
  "lineno": 740,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.core.variables.VariableView.__add__": {
  "lineno": 1246,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__array__": {
  "lineno": 1203,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__array_prepare__": {
  "lineno": 1215,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.Quantity.__array_prepare__"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__array_wrap__": {
  "lineno": 1226,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.Quantity.__array_wrap__"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__div__": {
  "lineno": 1264,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__eq__": {
  "lineno": 1332,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__floordiv__": {
  "lineno": 1270,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__ge__": {
  "lineno": 1347,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__getitem__": {
  "lineno": 837,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__gt__": {
  "lineno": 1344,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__iadd__": {
  "lineno": 1282,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__idiv__": {
  "lineno": 1318,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__imul__": {
  "lineno": 1306,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__init__": {
  "lineno": 759,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__isub__": {
  "lineno": 1294,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__le__": {
  "lineno": 1341,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__len__": {
  "lineno": 1237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__lt__": {
  "lineno": 1338,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__mul__": {
  "lineno": 1258,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__ne__": {
  "lineno": 1335,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__neg__": {
  "lineno": 1240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__pos__": {
  "lineno": 1243,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__radd__": {
  "lineno": 1249,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__rdiv__": {
  "lineno": 1273,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__repr__": {
  "lineno": 1350,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.units.fundamentalunits.Quantity"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__rfloordiv__": {
  "lineno": 1279,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__rmul__": {
  "lineno": 1261,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__rsub__": {
  "lineno": 1255,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__rtruediv__": {
  "lineno": 1276,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__setitem__": {
  "lineno": 927,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__sub__": {
  "lineno": 1252,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.__truediv__": {
  "lineno": 1267,
  "symbols_in_volume": [
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.dtype": {
  "lineno": 1376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.VariableView.get_item": {
  "lineno": 791,
  "symbols_in_volume": [
   "brian2.core.namespace.get_local_namespace",
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.units.fundamentalunits.Quantity"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.get_subexpression_with_index_array": {
  "lineno": 1119,
  "symbols_in_volume": [
   "brian2.codegen.codeobject.create_runner_codeobj",
   "brian2.devices.device.get_device",
   "numpy.array",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.get_with_expression": {
  "lineno": 1057,
  "symbols_in_volume": [
   "brian2.codegen.codeobject.create_runner_codeobj",
   "brian2.devices.device.get_device",
   "numpy.bool"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.get_with_index_array": {
  "lineno": 1103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.VariableView.set_item": {
  "lineno": 840,
  "symbols_in_volume": [
   "brian2.core.namespace.get_local_namespace"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.set_with_expression": {
  "lineno": 930,
  "symbols_in_volume": [
   "brian2.codegen.codeobject.create_runner_codeobj",
   "brian2.codegen.translation.get_identifiers_recursively",
   "brian2.devices.device.get_device",
   "numpy.atleast_1d",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.set_with_expression_conditional": {
  "lineno": 1014,
  "symbols_in_volume": [
   "brian2.codegen.codeobject.create_runner_codeobj",
   "brian2.devices.device.get_device",
   "numpy.bool"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.set_with_index_array": {
  "lineno": 1176,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.fail_for_dimension_mismatch"
  ],
  "type": "function"
 },
 "brian2.core.variables.VariableView.shape": {
  "lineno": 1372,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.VariableView.unit": {
  "lineno": 784,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.get_unit"
  ],
  "type": "function"
 },
 "brian2.core.variables.Variables": {
  "lineno": 1381,
  "symbols_in_volume": [
   "collections.Mapping"
  ],
  "type": "class"
 },
 "brian2.core.variables.Variables.__getitem__": {
  "lineno": 1412,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variables.__init__": {
  "lineno": 1396,
  "symbols_in_volume": [
   "brian2.devices.device.get_device",
   "collections.defaultdict",
   "functools.partial"
  ],
  "type": "function"
 },
 "brian2.core.variables.Variables.__iter__": {
  "lineno": 1418,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variables.__len__": {
  "lineno": 1415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variables._add_variable": {
  "lineno": 1421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variables.add_arange": {
  "lineno": 1604,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.core.variables.Variables.add_array": {
  "lineno": 1441,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "numpy.asanyarray"
  ],
  "type": "function"
 },
 "brian2.core.variables.Variables.add_arrays": {
  "lineno": 1503,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS"
  ],
  "type": "function"
 },
 "brian2.core.variables.Variables.add_auxiliary_variable": {
  "lineno": 1683,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS"
  ],
  "type": "function"
 },
 "brian2.core.variables.Variables.add_constant": {
  "lineno": 1638,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS"
  ],
  "type": "function"
 },
 "brian2.core.variables.Variables.add_dynamic_array": {
  "lineno": 1542,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "numpy.prod"
  ],
  "type": "function"
 },
 "brian2.core.variables.Variables.add_object": {
  "lineno": 1832,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variables.add_reference": {
  "lineno": 1763,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variables.add_references": {
  "lineno": 1814,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.Variables.add_referred_subexpression": {
  "lineno": 1708,
  "symbols_in_volume": [
   "brian2.utils.stringtools.word_substitute"
  ],
  "type": "function"
 },
 "brian2.core.variables.Variables.add_subexpression": {
  "lineno": 1656,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS"
  ],
  "type": "function"
 },
 "brian2.core.variables.Variables.create_clock_variables": {
  "lineno": 1851,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.get_dtype": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.obj2sctype"
  ],
  "type": "function"
 },
 "brian2.core.variables.get_dtype_str": {
  "lineno": 58,
  "symbols_in_volume": [
   "numbers.Number",
   "numpy.False_",
   "numpy.True_",
   "numpy.array",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "brian2.core.variables.linked_var": {
  "lineno": 700,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.core.variables.variables_by_owner": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.devices.cpp_standalone": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.devices.cpp_standalone.GSLcodeobject": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.devices.cpp_standalone.GSLcodeobject.GSLCPPStandaloneCodeObject": {
  "lineno": 10,
  "symbols_in_volume": [
   "brian2.codegen.codeobject.CodeObject",
   "brian2.codegen.generators.GSLWeaveCodeGenerator",
   "brian2.codegen.generators.cpp_generator.CPPCodeGenerator",
   "brian2.devices.cpp_standalone.CPPStandaloneCodeObject.templater.derive"
  ],
  "type": "class"
 },
 "brian2.devices.cpp_standalone.codeobject": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.codegen.targets.codegen_targets.add",
   "brian2.core.functions.DEFAULT_FUNCTIONS.implementations"
  ],
  "type": "module"
 },
 "brian2.devices.cpp_standalone.codeobject.CPPStandaloneCodeObject": {
  "lineno": 86,
  "symbols_in_volume": [
   "brian2.codegen.codeobject.CodeObject",
   "brian2.codegen.codeobject.constant_or_scalar",
   "brian2.codegen.generators.cpp_generator.CPPCodeGenerator",
   "brian2.codegen.generators.cpp_generator.c_data_type",
   "brian2.codegen.templates.Templater",
   "brian2.core.preferences.prefs"
  ],
  "type": "class"
 },
 "brian2.devices.cpp_standalone.codeobject.CPPStandaloneCodeObject.__call__": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.cpp_standalone.codeobject.CPPStandaloneCodeObject.run": {
  "lineno": 105,
  "symbols_in_volume": [
   "brian2.devices.device.get_device"
  ],
  "type": "function"
 },
 "brian2.devices.cpp_standalone.codeobject.generate_rand_code": {
  "lineno": 114,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.devices.cpp_standalone.openmp_threads",
   "brian2.utils.stringtools.replace"
  ],
  "type": "function"
 },
 "brian2.devices.cpp_standalone.codeobject.openmp_pragma": {
  "lineno": 17,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.devices.cpp_standalone.openmp_threads"
  ],
  "type": "function"
 },
 "brian2.devices.device": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.register_preferences",
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.devices.device.CurrentDeviceProxy": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.devices.device.CurrentDeviceProxy.__getattr__": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.devices.device.Device.__init__": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device._set_maximum_run_time": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device.activate": {
  "lineno": 329,
  "symbols_in_volume": [
   "brian2.core.clocks.Clock",
   "brian2.units.ms"
  ],
  "type": "function"
 },
 "brian2.devices.device.Device.add_array": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device.build": {
  "lineno": 352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device.code_object": {
  "lineno": 270,
  "symbols_in_volume": [
   "brian2.core.names.find_name",
   "brian2.core.preferences.prefs",
   "brian2.core.variables.ArrayVariable",
   "brian2.utils.stringtools.code_representation",
   "brian2.utils.stringtools.indent"
  ],
  "type": "function"
 },
 "brian2.devices.device.Device.code_object_class": {
  "lineno": 229,
  "symbols_in_volume": [
   "brian2.codegen.targets.codegen_targets",
   "brian2.core.preferences.prefs"
  ],
  "type": "function"
 },
 "brian2.devices.device.Device.fill_with_array": {
  "lineno": 174,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device.get_array_name": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device.get_len": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device.init_with_arange": {
  "lineno": 159,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device.init_with_zeros": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device.insert_code": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device.insert_device_code": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device.reinit": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device.resize": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device.resize_along_first": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device.seed": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Device.spike_queue": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Dummy": {
  "lineno": 464,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.devices.device.Dummy.__call__": {
  "lineno": 470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Dummy.__enter__": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Dummy.__exit__": {
  "lineno": 474,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Dummy.__getattr__": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Dummy.__getitem__": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.Dummy.__setitem__": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.devices.device.RuntimeDevice.__init__": {
  "lineno": 371,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.intp",
   "numpy.zeros",
   "weakref.WeakKeyDictionary"
  ],
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.add_array": {
  "lineno": 401,
  "symbols_in_volume": [
   "brian2.core.variables.DynamicArrayVariable",
   "brian2.memory.dynamicarray.DynamicArray",
   "brian2.memory.dynamicarray.DynamicArray1D",
   "numpy.empty"
  ],
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.fill_with_array": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.get_array_name": {
  "lineno": 384,
  "symbols_in_volume": [
   "brian2.core.variables.ArrayVariable",
   "brian2.core.variables.DynamicArrayVariable"
  ],
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.get_value": {
  "lineno": 413,
  "symbols_in_volume": [
   "brian2.core.variables.DynamicArrayVariable"
  ],
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.init_with_arange": {
  "lineno": 431,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.init_with_zeros": {
  "lineno": 428,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.resize": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.resize_along_first": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.seed": {
  "lineno": 449,
  "symbols_in_volume": [
   "numpy.random.seed"
  ],
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.set_value": {
  "lineno": 419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.RuntimeDevice.spike_queue": {
  "lineno": 438,
  "symbols_in_volume": [
   "brian2.synapses.spikequeue.SpikeQueue"
  ],
  "type": "function"
 },
 "brian2.devices.device._do_set_device": {
  "lineno": 546,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.auto_target": {
  "lineno": 38,
  "symbols_in_volume": [
   "brian2.codegen.targets.codegen_targets"
  ],
  "type": "function"
 },
 "brian2.devices.device.get_device": {
  "lineno": 506,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.reinit_devices": {
  "lineno": 592,
  "symbols_in_volume": [
   "brian2.restore_initial_state"
  ],
  "type": "function"
 },
 "brian2.devices.device.reset_device": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.devices.device.seed": {
  "lineno": 617,
  "symbols_in_volume": [
   "numbers.Integral"
  ],
  "type": "function"
 },
 "brian2.devices.device.set_device": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.equations.codestrings": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.equations.codestrings.CodeString": {
  "lineno": 19,
  "symbols_in_volume": [
   "collections.Hashable"
  ],
  "type": "class"
 },
 "brian2.equations.codestrings.CodeString.__eq__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.codestrings.CodeString.__hash__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.codestrings.CodeString.__init__": {
  "lineno": 32,
  "symbols_in_volume": [
   "brian2.utils.stringtools.get_identifiers"
  ],
  "type": "function"
 },
 "brian2.equations.codestrings.CodeString.__ne__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.codestrings.CodeString.__repr__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.codestrings.CodeString.__str__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.codestrings.Expression": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.equations.codestrings.Expression.__eq__": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.codestrings.Expression.__hash__": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.codestrings.Expression.__init__": {
  "lineno": 94,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.str_to_sympy",
   "brian2.parsing.sympytools.sympy_to_str"
  ],
  "type": "function"
 },
 "brian2.equations.codestrings.Expression.__ne__": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.codestrings.Expression._repr_pretty_": {
  "lineno": 175,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.str_to_sympy"
  ],
  "type": "function"
 },
 "brian2.equations.codestrings.Expression.split_stochastic": {
  "lineno": 112,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.str_to_sympy",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "brian2.equations.codestrings.Statements": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.equations.codestrings.is_constant_over_dt": {
  "lineno": 196,
  "symbols_in_volume": [
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "brian2.equations.equations": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger",
   "pyparsing.CharsNotIn",
   "pyparsing.Combine",
   "pyparsing.Group",
   "pyparsing.LineEnd",
   "pyparsing.OneOrMore",
   "pyparsing.Optional",
   "pyparsing.Suppress",
   "pyparsing.Word",
   "pyparsing.ZeroOrMore",
   "pyparsing.restOfLine",
   "string.ascii_letters",
   "string.digits"
  ],
  "type": "module"
 },
 "brian2.equations.equations.EquationError": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.equations.equations.Equations": {
  "lineno": 524,
  "symbols_in_volume": [
   "collections.Hashable",
   "collections.Mapping"
  ],
  "type": "class"
 },
 "brian2.equations.equations.Equations.__add__": {
  "lineno": 662,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.Equations.__getitem__": {
  "lineno": 659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.Equations.__hash__": {
  "lineno": 670,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.Equations.__init__": {
  "lineno": 554,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.Equations.__iter__": {
  "lineno": 653,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.Equations.__len__": {
  "lineno": 656,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.Equations.__repr__": {
  "lineno": 1031,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.Equations.__str__": {
  "lineno": 1027,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.Equations._get_stochastic_type": {
  "lineno": 783,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.Equations._latex": {
  "lineno": 1034,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.str_to_sympy",
   "brian2.units.fundamentalunits.get_unit",
   "sympy.Symbol",
   "sympy.latex"
  ],
  "type": "function"
 },
 "brian2.equations.equations.Equations._repr_latex_": {
  "lineno": 1064,
  "symbols_in_volume": [
   "sympy.latex"
  ],
  "type": "function"
 },
 "brian2.equations.equations.Equations._repr_pretty_": {
  "lineno": 1067,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.Equations._sort_subexpressions": {
  "lineno": 886,
  "symbols_in_volume": [
   "brian2.utils.topsort.topsort"
  ],
  "type": "function"
 },
 "brian2.equations.equations.Equations._substitute": {
  "lineno": 594,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 },
 "brian2.equations.equations.Equations.check_flags": {
  "lineno": 977,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.Equations.check_identifier": {
  "lineno": 699,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.Equations.check_identifiers": {
  "lineno": 718,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.Equations.check_units": {
  "lineno": 920,
  "symbols_in_volume": [
   "brian2.units.allunits.second.dim",
   "brian2.units.fundamentalunits.DimensionMismatchError"
  ],
  "type": "function"
 },
 "brian2.equations.equations.Equations.get_substituted_expressions": {
  "lineno": 734,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.str_to_sympy",
   "brian2.parsing.sympytools.sympy_to_str",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "brian2.equations.equations.Equations.register_identifier_check": {
  "lineno": 681,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.Equations.substitute": {
  "lineno": 650,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation": {
  "lineno": 383,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.get_unit",
   "brian2.utils.caching.CacheKey",
   "collections.Hashable"
  ],
  "type": "class"
 },
 "brian2.equations.equations.SingleEquation.__eq__": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation.__hash__": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation.__init__": {
  "lineno": 411,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.units.fundamentalunits.get_dimensions"
  ],
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation.__ne__": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation.__repr__": {
  "lineno": 483,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.get_unit_for_display"
  ],
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation.__str__": {
  "lineno": 467,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.get_unit_for_display"
  ],
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation._latex": {
  "lineno": 457,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.str_to_sympy",
   "sympy.latex"
  ],
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation._repr_latex_": {
  "lineno": 520,
  "symbols_in_volume": [
   "sympy.latex"
  ],
  "type": "function"
 },
 "brian2.equations.equations.SingleEquation._repr_pretty_": {
  "lineno": 497,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.get_unit"
  ],
  "type": "function"
 },
 "brian2.equations.equations.check_identifier_basic": {
  "lineno": 119,
  "symbols_in_volume": [
   "keyword.iskeyword"
  ],
  "type": "function"
 },
 "brian2.equations.equations.check_identifier_constants": {
  "lineno": 201,
  "symbols_in_volume": [
   "brian2.core.namespace.DEFAULT_CONSTANTS"
  ],
  "type": "function"
 },
 "brian2.equations.equations.check_identifier_functions": {
  "lineno": 192,
  "symbols_in_volume": [
   "brian2.core.namespace.DEFAULT_FUNCTIONS"
  ],
  "type": "function"
 },
 "brian2.equations.equations.check_identifier_reserved": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.check_identifier_units": {
  "lineno": 183,
  "symbols_in_volume": [
   "brian2.core.namespace.DEFAULT_UNITS"
  ],
  "type": "function"
 },
 "brian2.equations.equations.check_subexpressions": {
  "lineno": 1106,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.str_to_sympy"
  ],
  "type": "function"
 },
 "brian2.equations.equations.dimensions_and_type_from_string": {
  "lineno": 212,
  "symbols_in_volume": [
   "brian2.core.namespace.DEFAULT_UNITS",
   "brian2.core.namespace.DEFAULT_UNITS.dim",
   "brian2.core.namespace.DEFAULT_UNITS.items",
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.Unit",
   "brian2.units.fundamentalunits.get_unit",
   "brian2.utils.stringtools.get_identifiers",
   "string"
  ],
  "type": "function"
 },
 "brian2.equations.equations.extract_constant_subexpressions": {
  "lineno": 1148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.is_stateful": {
  "lineno": 1077,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.equations.parse_string_equations": {
  "lineno": 324,
  "symbols_in_volume": [
   "brian2.utils.caching.cached",
   "pyparsing.ParseException",
   "re.compile"
  ],
  "type": "function"
 },
 "brian2.equations.refractory": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.equations.refractory.add_refractoriness": {
  "lineno": 38,
  "symbols_in_volume": [
   "brian2.units.allunits.second.dim",
   "brian2.units.fundamentalunits.DIMENSIONLESS"
  ],
  "type": "function"
 },
 "brian2.equations.refractory.check_identifier_refractory": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.equations.unitcheck": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.equations.unitcheck.check_dimensions": {
  "lineno": 18,
  "symbols_in_volume": [
   "brian2.parsing.expressions.parse_expression_dimensions",
   "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
   "brian2.units.fundamentalunits.get_unit"
  ],
  "type": "function"
 },
 "brian2.equations.unitcheck.check_units_statements": {
  "lineno": 47,
  "symbols_in_volume": [
   "brian2.codegen.translation.analyse_identifiers",
   "brian2.core.variables.Variable",
   "brian2.parsing.expressions.parse_expression_dimensions",
   "brian2.parsing.statements.parse_statement",
   "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
   "brian2.units.fundamentalunits.get_dimensions",
   "re.split"
  ],
  "type": "function"
 },
 "brian2.groups": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.groups.group": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.groups.group.CodeRunner": {
  "lineno": 1004,
  "symbols_in_volume": [
   "brian2.core.base.BrianObject"
  ],
  "type": "class"
 },
 "brian2.groups.group.CodeRunner.__init__": {
  "lineno": 1069,
  "symbols_in_volume": [
   "brian2.core.base.BrianObject.__init__",
   "brian2.core.base.weakproxy_with_fallback"
  ],
  "type": "function"
 },
 "brian2.groups.group.CodeRunner.before_run": {
  "lineno": 1105,
  "symbols_in_volume": [
   "brian2.codegen.codeobject.create_runner_codeobj",
   "weakref.proxy"
  ],
  "type": "function"
 },
 "brian2.groups.group.CodeRunner.update_abstract_code": {
  "lineno": 1095,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.group.Group": {
  "lineno": 636,
  "symbols_in_volume": [
   "brian2.core.base.BrianObject"
  ],
  "type": "class"
 },
 "brian2.groups.group.Group._check_for_invalid_states": {
  "lineno": 976,
  "symbols_in_volume": [
   "brian2.equations.equations.Equations"
  ],
  "type": "function"
 },
 "brian2.groups.group.Group._check_for_invalid_values": {
  "lineno": 988,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.asarray",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "brian2.groups.group.Group._resolve": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.group.Group._resolve_external": {
  "lineno": 742,
  "symbols_in_volume": [
   "brian2.core.functions.Function",
   "brian2.core.namespace.DEFAULT_CONSTANTS",
   "brian2.core.namespace.DEFAULT_FUNCTIONS",
   "brian2.core.namespace.DEFAULT_UNITS",
   "brian2.core.variables.Constant",
   "brian2.core.variables.Variable",
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "collections.OrderedDict",
   "inspect.isfunction",
   "numbers.Number",
   "numpy.asarray",
   "numpy.ndarray",
   "numpy.number",
   "weakref.proxy"
  ],
  "type": "function"
 },
 "brian2.groups.group.Group.custom_operation": {
  "lineno": 911,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.group.Group.resolve_all": {
  "lineno": 698,
  "symbols_in_volume": [
   "collections.Mapping"
  ],
  "type": "function"
 },
 "brian2.groups.group.Group.run_regularly": {
  "lineno": 915,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.group.Group.runner": {
  "lineno": 907,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.group.IndexWrapper": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.groups.group.IndexWrapper.__getitem__": {
  "lineno": 289,
  "symbols_in_volume": [
   "brian2.codegen.codeobject.create_runner_codeobj",
   "brian2.core.namespace.get_local_namespace",
   "brian2.core.variables.Variables",
   "brian2.devices.device.get_device",
   "numpy.bool",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.groups.group.IndexWrapper.__init__": {
  "lineno": 285,
  "symbols_in_volume": [
   "weakref.proxy"
  ],
  "type": "function"
 },
 "brian2.groups.group.Indexing": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.groups.group.Indexing.__call__": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.bool",
   "numpy.int32",
   "numpy.issubdtype",
   "numpy.nonzero",
   "numpy.signedinteger"
  ],
  "type": "function"
 },
 "brian2.groups.group.Indexing.__init__": {
  "lineno": 209,
  "symbols_in_volume": [
   "weakref.proxy"
  ],
  "type": "function"
 },
 "brian2.groups.group.VariableOwner": {
  "lineno": 311,
  "symbols_in_volume": [
   "brian2.core.names.Nameable"
  ],
  "type": "class"
 },
 "brian2.groups.group.VariableOwner.__getattr__": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.group.VariableOwner.__len__": {
  "lineno": 632,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.group.VariableOwner.__setattr__": {
  "lineno": 395,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
   "brian2.units.fundamentalunits.get_unit",
   "brian2.utils.stringtools.SpellChecker"
  ],
  "type": "function"
 },
 "brian2.groups.group.VariableOwner._check_expression_scalar": {
  "lineno": 599,
  "symbols_in_volume": [
   "brian2.utils.stringtools.get_identifiers"
  ],
  "type": "function"
 },
 "brian2.groups.group.VariableOwner._enable_group_attributes": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.group.VariableOwner._full_state": {
  "lineno": 580,
  "symbols_in_volume": [
   "brian2.core.variables.ArrayVariable"
  ],
  "type": "function"
 },
 "brian2.groups.group.VariableOwner._restore_from_full_state": {
  "lineno": 592,
  "symbols_in_volume": [
   "brian2.core.variables.DynamicArrayVariable"
  ],
  "type": "function"
 },
 "brian2.groups.group.VariableOwner.add_attribute": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.group.VariableOwner.check_variable_write": {
  "lineno": 561,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.group.VariableOwner.get_states": {
  "lineno": 485,
  "symbols_in_volume": [
   "brian2.core.variables.AuxiliaryVariable",
   "brian2.core.variables.Subexpression",
   "brian2.importexport.importexport.ImportExport.methods",
   "brian2.importexport.importexport.ImportExport.methods.export_data"
  ],
  "type": "function"
 },
 "brian2.groups.group.VariableOwner.set_states": {
  "lineno": 539,
  "symbols_in_volume": [
   "brian2.importexport.importexport.ImportExport.methods",
   "brian2.importexport.importexport.ImportExport.methods.import_data"
  ],
  "type": "function"
 },
 "brian2.groups.group.VariableOwner.state": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.group._conflict_warning": {
  "lineno": 80,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.group._display_value": {
  "lineno": 41,
  "symbols_in_volume": [
   "brian2.core.functions.Function",
   "numpy.get_printoptions",
   "numpy.set_printoptions"
  ],
  "type": "function"
 },
 "brian2.groups.group._same_function": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.group._same_value": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.group.get_dtype": {
  "lineno": 108,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs",
   "brian2.equations.equations.BOOLEAN",
   "brian2.equations.equations.FLOAT",
   "brian2.equations.equations.INTEGER",
   "collections.Mapping",
   "numpy.bool",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "brian2.groups.neurongroup": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger",
   "pyparsing.Word",
   "string.ascii_letters",
   "string.digits"
  ],
  "type": "module"
 },
 "brian2.groups.neurongroup.NeuronGroup": {
  "lineno": 396,
  "symbols_in_volume": [
   "brian2.core.spikesource.SpikeSource"
  ],
  "type": "class"
 },
 "brian2.groups.neurongroup.NeuronGroup.__getitem__": {
  "lineno": 803,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup.__init__": {
  "lineno": 463,
  "symbols_in_volume": [
   "brian2.equations.equations.DIFFERENTIAL_EQUATION",
   "brian2.equations.equations.Equations",
   "brian2.equations.equations.PARAMETER",
   "brian2.equations.equations.SUBEXPRESSION",
   "brian2.equations.equations.extract_constant_subexpressions",
   "brian2.equations.refractory.add_refractoriness",
   "brian2.units.allunits.second",
   "collections.MutableMapping"
  ],
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup.__setattr__": {
  "lineno": 696,
  "symbols_in_volume": [
   "brian2.core.variables.DynamicArrayVariable",
   "brian2.core.variables.LinkedVariable",
   "brian2.core.variables.Subexpression",
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "numpy.asarray",
   "numpy.int",
   "numpy.issubsctype"
  ],
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup._create_variables": {
  "lineno": 808,
  "symbols_in_volume": [
   "brian2.core.variables.Variables",
   "brian2.equations.equations.DIFFERENTIAL_EQUATION",
   "brian2.equations.equations.PARAMETER",
   "brian2.equations.equations.SUBEXPRESSION",
   "brian2.units.allunits.second.dim",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup._repr_html_": {
  "lineno": 886,
  "symbols_in_volume": [
   "sympy.latex"
  ],
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup._repr_html_.add_event_to_text": {
  "lineno": 891,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup.before_run": {
  "lineno": 878,
  "symbols_in_volume": [
   "brian2.equations.equations.check_subexpressions"
  ],
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup.run_on_event": {
  "lineno": 633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup.set_event_schedule": {
  "lineno": 675,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup.spikes": {
  "lineno": 612,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.neurongroup.NeuronGroup.state": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.neurongroup.Resetter": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.groups.neurongroup.Resetter.__init__": {
  "lineno": 358,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.neurongroup.Resetter.update_abstract_code": {
  "lineno": 378,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.Quantity"
  ],
  "type": "function"
 },
 "brian2.groups.neurongroup.StateUpdater": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.groups.neurongroup.StateUpdater.__init__": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.neurongroup.StateUpdater._get_refractory_code": {
  "lineno": 186,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.legacy.refractory_timing",
   "brian2.parsing.expressions.is_boolean_expression",
   "brian2.parsing.expressions.parse_expression_dimensions",
   "brian2.units.allunits.second",
   "brian2.units.allunits.second.dim",
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
   "brian2.utils.stringtools.get_identifiers"
  ],
  "type": "function"
 },
 "brian2.groups.neurongroup.StateUpdater.update_abstract_code": {
  "lineno": 229,
  "symbols_in_volume": [
   "brian2.codegen.translation.analyse_identifiers",
   "brian2.stateupdaters.base.StateUpdateMethod.apply_stateupdater"
  ],
  "type": "function"
 },
 "brian2.groups.neurongroup.SubexpressionUpdater": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.groups.neurongroup.SubexpressionUpdater.__init__": {
  "lineno": 273,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.neurongroup.Thresholder": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.groups.neurongroup.Thresholder.__init__": {
  "lineno": 294,
  "symbols_in_volume": [
   "brian2.core.variables.Variables",
   "numpy.bool"
  ],
  "type": "function"
 },
 "brian2.groups.neurongroup.Thresholder.update_abstract_code": {
  "lineno": 320,
  "symbols_in_volume": [
   "brian2.parsing.expressions.is_boolean_expression",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.utils.stringtools.get_identifiers"
  ],
  "type": "function"
 },
 "brian2.groups.neurongroup._guess_membrane_potential": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.neurongroup._valid_event_name": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.neurongroup.check_identifier_pre_post": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.neurongroup.to_start_stop": {
  "lineno": 93,
  "symbols_in_volume": [
   "collections.Sequence",
   "numbers.Integral",
   "numpy.all",
   "numpy.asarray",
   "numpy.diff",
   "numpy.integer",
   "numpy.issubdtype",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "brian2.groups.subgroup": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.groups.subgroup.Subgroup": {
  "lineno": 11,
  "symbols_in_volume": [
   "brian2.core.spikesource.SpikeSource"
  ],
  "type": "class"
 },
 "brian2.groups.subgroup.Subgroup.__getitem__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.groups.subgroup.Subgroup.__init__": {
  "lineno": 24,
  "symbols_in_volume": [
   "brian2.core.base.weakproxy_with_fallback",
   "brian2.core.variables.Variables"
  ],
  "type": "function"
 },
 "brian2.groups.subgroup.Subgroup.__repr__": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.importexport": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.importexport.dictlike": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.importexport.dictlike.DictImportExport": {
  "lineno": 9,
  "symbols_in_volume": [
   "importexport.ImportExport"
  ],
  "type": "class"
 },
 "brian2.importexport.dictlike.DictImportExport.export_data": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.importexport.dictlike.DictImportExport.import_data": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.importexport.dictlike.DictImportExport.name": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.importexport.dictlike.PandasImportExport": {
  "lineno": 34,
  "symbols_in_volume": [
   "importexport.ImportExport"
  ],
  "type": "class"
 },
 "brian2.importexport.dictlike.PandasImportExport.export_data": {
  "lineno": 43,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "brian2.importexport.dictlike.PandasImportExport.import_data": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "brian2.importexport.dictlike.PandasImportExport.name": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.importexport.importexport": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.importexport.importexport.ImportExport": {
  "lineno": 10,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "brian2.importexport.importexport.ImportExport.export_data": {
  "lineno": 49,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "brian2.importexport.importexport.ImportExport.import_data": {
  "lineno": 68,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "brian2.importexport.importexport.ImportExport.name": {
  "lineno": 83,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.importexport.importexport.ImportExport.register": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.input": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.input.binomial": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.input.binomial.BinomialFunction": {
  "lineno": 135,
  "symbols_in_volume": [
   "brian2.core.base.Nameable",
   "brian2.core.functions.Function"
  ],
  "type": "class"
 },
 "brian2.input.binomial.BinomialFunction.__init__": {
  "lineno": 161,
  "symbols_in_volume": [
   "brian2.core.base.Nameable.__init__",
   "brian2.core.functions.Function.__init__",
   "brian2.units.fundamentalunits.check_units",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "brian2.input.binomial.BinomialFunction.__init__.sample_function": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.random.binomial"
  ],
  "type": "function"
 },
 "brian2.input.binomial._generate_cpp_code": {
  "lineno": 78,
  "symbols_in_volume": [
   "brian2.core.functions.DEFAULT_FUNCTIONS",
   "brian2.utils.stringtools.replace",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "brian2.input.binomial._generate_cython_code": {
  "lineno": 32,
  "symbols_in_volume": [
   "brian2.core.functions.DEFAULT_FUNCTIONS",
   "brian2.utils.stringtools.replace"
  ],
  "type": "function"
 },
 "brian2.input.binomial._pre_calc_constants": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "brian2.input.binomial._pre_calc_constants_approximated": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "brian2.input.poissongroup": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.input.poissongroup.PoissonGroup": {
  "lineno": 21,
  "symbols_in_volume": [
   "brian2.core.spikesource.SpikeSource",
   "brian2.groups.group.Group"
  ],
  "type": "class"
 },
 "brian2.input.poissongroup.PoissonGroup.__getitem__": {
  "lineno": 103,
  "symbols_in_volume": [
   "brian2.groups.subgroup.Subgroup"
  ],
  "type": "function"
 },
 "brian2.input.poissongroup.PoissonGroup.__init__": {
  "lineno": 50,
  "symbols_in_volume": [
   "brian2.core.variables.Variables",
   "brian2.groups.group.Group.__init__",
   "brian2.groups.neurongroup.Thresholder",
   "brian2.units.fundamentalunits.check_units",
   "brian2.units.stdunits.Hz",
   "brian2.units.stdunits.Hz.dim",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.input.poissongroup.PoissonGroup.__repr__": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.input.poissongroup.PoissonGroup.before_run": {
  "lineno": 115,
  "symbols_in_volume": [
   "brian2.core.variables.Subexpression",
   "brian2.parsing.expressions.parse_expression_dimensions",
   "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
   "brian2.units.stdunits.Hz",
   "brian2.utils.stringtools.get_identifiers"
  ],
  "type": "function"
 },
 "brian2.input.poissongroup.PoissonGroup.spikes": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.input.poissoninput": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.input.poissoninput.PoissonInput": {
  "lineno": 18,
  "symbols_in_volume": [
   "brian2.groups.group.CodeRunner"
  ],
  "type": "class"
 },
 "brian2.input.poissoninput.PoissonInput.__init__": {
  "lineno": 53,
  "symbols_in_volume": [
   "brian2.core.variables.Variables",
   "brian2.groups.group.CodeRunner.__init__",
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.fundamentalunits.check_units",
   "brian2.units.fundamentalunits.get_dimensions",
   "brian2.units.fundamentalunits.have_same_dimensions",
   "brian2.units.stdunits.Hz"
  ],
  "type": "function"
 },
 "brian2.input.poissoninput.PoissonInput.before_run": {
  "lineno": 104,
  "symbols_in_volume": [
   "brian2.groups.group.CodeRunner.before_run"
  ],
  "type": "function"
 },
 "brian2.input.spikegeneratorgroup": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup": {
  "lineno": 20,
  "symbols_in_volume": [
   "brian2.core.spikesource.SpikeSource",
   "brian2.groups.group.CodeRunner",
   "brian2.groups.group.Group"
  ],
  "type": "class"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup.__init__": {
  "lineno": 64,
  "symbols_in_volume": [
   "brian2.core.variables.Variables",
   "brian2.groups.group.CodeRunner.__init__",
   "brian2.groups.group.Group.__init__",
   "brian2.units.allunits.second",
   "brian2.units.allunits.second.dim",
   "brian2.units.fundamentalunits.check_units",
   "numpy.arange",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup.__repr__": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup._check_args": {
  "lineno": 258,
  "symbols_in_volume": [
   "brian2.core.functions.timestep",
   "brian2.units.allunits.second",
   "brian2.units.fundamentalunits.Quantity",
   "numpy.asarray",
   "numpy.lexsort",
   "numpy.max",
   "numpy.min",
   "numpy.round"
  ],
  "type": "function"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup.before_run": {
  "lineno": 147,
  "symbols_in_volume": [
   "brian2.core.functions.timestep",
   "brian2.units.allunits.second",
   "numpy.abs",
   "numpy.asarray",
   "numpy.diff",
   "numpy.finfo",
   "numpy.iinfo",
   "numpy.inf",
   "numpy.int32",
   "numpy.logical_and",
   "numpy.nonzero",
   "numpy.round"
  ],
  "type": "function"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup.set_spikes": {
  "lineno": 215,
  "symbols_in_volume": [
   "brian2.units.allunits.second",
   "brian2.units.fundamentalunits.check_units",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.input.spikegeneratorgroup.SpikeGeneratorGroup.spikes": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.input.timedarray": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.input.timedarray.TimedArray": {
  "lineno": 35,
  "symbols_in_volume": [
   "brian2.core.functions.Function",
   "brian2.core.names.Nameable",
   "brian2.utils.caching.CacheKey"
  ],
  "type": "class"
 },
 "brian2.input.timedarray.TimedArray.__init__": {
  "lineno": 88,
  "symbols_in_volume": [
   "brian2.core.names.Nameable.__init__",
   "brian2.units.allunits.second",
   "brian2.units.fundamentalunits.check_units",
   "brian2.units.fundamentalunits.get_dimensions",
   "numpy.asarray",
   "numpy.double"
  ],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d": {
  "lineno": 107,
  "symbols_in_volume": [
   "brian2.core.functions.Function.__init__",
   "brian2.units.fundamentalunits.get_unit"
  ],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d.create_cpp_implementation": {
  "lineno": 147,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d.create_cpp_namespace": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d.create_cython_implementation": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d.create_cython_namespace": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d.create_numpy_implementation": {
  "lineno": 128,
  "symbols_in_volume": [
   "brian2.units.allunits.second"
  ],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d.create_numpy_implementation.unitless_timed_array_func": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.int_",
   "numpy.round"
  ],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_1d.timed_array_func": {
  "lineno": 115,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.units.allunits.second",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.check_units",
   "numpy.asarray",
   "numpy.clip",
   "numpy.int_",
   "numpy.round"
  ],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d": {
  "lineno": 199,
  "symbols_in_volume": [
   "brian2.core.functions.Function.__init__",
   "brian2.units.fundamentalunits.get_unit"
  ],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d.create_cpp_implementation": {
  "lineno": 240,
  "symbols_in_volume": [
   "brian2.utils.stringtools.replace"
  ],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d.create_cpp_namespace": {
  "lineno": 266,
  "symbols_in_volume": [
   "numpy.double"
  ],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d.create_cython_implementation": {
  "lineno": 276,
  "symbols_in_volume": [
   "brian2.utils.stringtools.replace"
  ],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d.create_cython_namespace": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.double"
  ],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d.create_numpy_implementation": {
  "lineno": 220,
  "symbols_in_volume": [
   "brian2.units.allunits.second"
  ],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d.create_numpy_implementation.unitless_timed_array_func": {
  "lineno": 226,
  "symbols_in_volume": [
   "numpy.clip",
   "numpy.int_",
   "numpy.round"
  ],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray._init_2d.timed_array_func": {
  "lineno": 207,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.units.allunits.second",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.check_units",
   "numpy.asarray",
   "numpy.clip",
   "numpy.int_",
   "numpy.round"
  ],
  "type": "function"
 },
 "brian2.input.timedarray.TimedArray.is_locally_constant": {
  "lineno": 310,
  "symbols_in_volume": [
   "numpy.floor"
  ],
  "type": "function"
 },
 "brian2.input.timedarray._find_K": {
  "lineno": 24,
  "symbols_in_volume": [
   "brian2.units.allunits.second",
   "numpy.ceil",
   "numpy.floor",
   "numpy.log2"
  ],
  "type": "function"
 },
 "brian2.memory": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.monitors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.monitors.ratemonitor": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.monitors.ratemonitor.PopulationRateMonitor": {
  "lineno": 15,
  "symbols_in_volume": [
   "brian2.groups.group.CodeRunner",
   "brian2.groups.group.Group"
  ],
  "type": "class"
 },
 "brian2.monitors.ratemonitor.PopulationRateMonitor.__init__": {
  "lineno": 40,
  "symbols_in_volume": [
   "brian2.core.variables.Variables",
   "brian2.groups.group.CodeRunner.__init__",
   "brian2.units.allunits.hertz.dim",
   "brian2.units.allunits.second.dim",
   "numpy.float64",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.monitors.ratemonitor.PopulationRateMonitor.__repr__": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.ratemonitor.PopulationRateMonitor.reinit": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.ratemonitor.PopulationRateMonitor.resize": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.ratemonitor.PopulationRateMonitor.smooth_rate": {
  "lineno": 82,
  "symbols_in_volume": [
   "brian2.units.allunits.hertz.dim",
   "brian2.units.allunits.second",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.check_units",
   "numpy.arange",
   "numpy.asarray",
   "numpy.convolve",
   "numpy.exp",
   "numpy.ones",
   "numpy.round"
  ],
  "type": "function"
 },
 "brian2.monitors.spikemonitor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.monitors.spikemonitor.EventMonitor": {
  "lineno": 14,
  "symbols_in_volume": [
   "brian2.groups.group.CodeRunner",
   "brian2.groups.group.Group"
  ],
  "type": "class"
 },
 "brian2.monitors.spikemonitor.EventMonitor.__init__": {
  "lineno": 56,
  "symbols_in_volume": [
   "brian2.core.names.Nameable.__init__",
   "brian2.core.spikesource.SpikeSource",
   "brian2.core.variables.Variables",
   "brian2.groups.group.CodeRunner.__init__",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.__repr__": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor._values_dict": {
  "lineno": 201,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.Quantity"
  ],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.all_values": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.unique"
  ],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.event_trains": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.it": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.it_": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.num_events": {
  "lineno": 336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.reinit": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.resize": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.EventMonitor.values": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.unique"
  ],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.SpikeMonitor": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.monitors.spikemonitor.SpikeMonitor.__init__": {
  "lineno": 414,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.SpikeMonitor.__repr__": {
  "lineno": 530,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.SpikeMonitor.all_values": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.SpikeMonitor.num_spikes": {
  "lineno": 424,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.SpikeMonitor.spike_trains": {
  "lineno": 435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.spikemonitor.SpikeMonitor.values": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.statemonitor": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.monitors.statemonitor.StateMonitor": {
  "lineno": 80,
  "symbols_in_volume": [
   "brian2.groups.group.CodeRunner",
   "brian2.groups.group.Group"
  ],
  "type": "class"
 },
 "brian2.monitors.statemonitor.StateMonitor.__getattr__": {
  "lineno": 308,
  "symbols_in_volume": [
   "brian2.groups.group.Group.__getattr__",
   "brian2.units.fundamentalunits.Quantity"
  ],
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitor.__getitem__": {
  "lineno": 288,
  "symbols_in_volume": [
   "brian2.core.variables.get_dtype",
   "collections.Sequence",
   "numpy.array",
   "numpy.issubdtype",
   "numpy.signedinteger"
  ],
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitor.__init__": {
  "lineno": 160,
  "symbols_in_volume": [
   "brian2.core.variables.Variables",
   "brian2.groups.group.CodeRunner.__init__",
   "brian2.units.allunits.second.dim",
   "numbers.Number",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitor.__repr__": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitor.record_single_timestep": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitor.reinit": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitor.resize": {
  "lineno": 278,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitorView": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.monitors.statemonitor.StateMonitorView.__getattr__": {
  "lineno": 24,
  "symbols_in_volume": [
   "brian2.units.allunits.second.dim",
   "brian2.units.fundamentalunits.Quantity"
  ],
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitorView.__init__": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitorView.__repr__": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.monitors.statemonitor.StateMonitorView._calc_indices": {
  "lineno": 50,
  "symbols_in_volume": [
   "brian2.core.variables.get_dtype",
   "numpy.array",
   "numpy.issubdtype",
   "numpy.ndarray",
   "numpy.nonzero",
   "numpy.signedinteger"
  ],
  "type": "function"
 },
 "brian2.numpy_": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.units.unitsafefunctions.__all__",
   "numpy.__all__"
  ],
  "type": "module"
 },
 "brian2.only": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.devices.all_devices",
   "brian2.devices.set_device",
   "brian2.units.__all__",
   "brian2.units.__all__.extend"
  ],
  "type": "module"
 },
 "brian2.only.restore_initial_state": {
  "lineno": 55,
  "symbols_in_volume": [
   "gc.collect"
  ],
  "type": "function"
 },
 "brian2.parsing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.parsing.expressions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.parsing.expressions._get_value_from_expression": {
  "lineno": 99,
  "symbols_in_volume": [
   "ast",
   "ast.BinOp",
   "ast.BoolOp",
   "ast.Call",
   "ast.Compare",
   "ast.Name",
   "ast.Num",
   "ast.UnaryOp",
   "ast.parse"
  ],
  "type": "function"
 },
 "brian2.parsing.expressions.is_boolean_expression": {
  "lineno": 21,
  "symbols_in_volume": [
   "ast",
   "ast.BoolOp",
   "ast.Call",
   "ast.Compare",
   "ast.Name",
   "ast.UnaryOp",
   "ast.parse"
  ],
  "type": "function"
 },
 "brian2.parsing.expressions.parse_expression_dimensions": {
  "lineno": 188,
  "symbols_in_volume": [
   "ast",
   "ast.BinOp",
   "ast.BoolOp",
   "ast.Call",
   "ast.Compare",
   "ast.Name",
   "ast.Num",
   "ast.UnaryOp",
   "ast.parse",
   "brian2.core.functions.Function",
   "brian2.parsing.rendering.NodeRenderer",
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.fundamentalunits.Unit",
   "brian2.units.fundamentalunits.get_dimensions",
   "brian2.units.fundamentalunits.get_unit",
   "brian2.units.fundamentalunits.have_same_dimensions"
  ],
  "type": "function"
 },
 "brian2.parsing.rendering": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.parsing.rendering.CPPNodeRenderer": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.parsing.rendering.CPPNodeRenderer.render_Assign": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.CPPNodeRenderer.render_BinOp": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.CPPNodeRenderer.render_Name": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.CPPNodeRenderer.render_NameConstant": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.parsing.rendering.NodeRenderer.__init__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_Assign": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_AugAssign": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_BinOp": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_BinOp_parentheses": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_BoolOp": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_Call": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_Compare": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_Name": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_NameConstant": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_Num": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_UnaryOp": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_code": {
  "lineno": 56,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_element_parentheses": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_expr": {
  "lineno": 50,
  "symbols_in_volume": [
   "ast.parse"
  ],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_func": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NodeRenderer.render_node": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.NumpyNodeRenderer": {
  "lineno": 167,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.parsing.rendering.NumpyNodeRenderer.render_UnaryOp": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer": {
  "lineno": 184,
  "symbols_in_volume": [
   "sympy.Add",
   "sympy.And",
   "sympy.Eq",
   "sympy.GreaterThan",
   "sympy.LessThan",
   "sympy.Mod",
   "sympy.Mul",
   "sympy.Ne",
   "sympy.Or",
   "sympy.Pow",
   "sympy.StrictGreaterThan",
   "sympy.StrictLessThan"
  ],
  "type": "class"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_BinOp": {
  "lineno": 251,
  "symbols_in_volume": [
   "sympy.floor"
  ],
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_BoolOp": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_Call": {
  "lineno": 214,
  "symbols_in_volume": [
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_Compare": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_Name": {
  "lineno": 233,
  "symbols_in_volume": [
   "brian2.core.functions.DEFAULT_CONSTANTS",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_NameConstant": {
  "lineno": 242,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_Num": {
  "lineno": 248,
  "symbols_in_volume": [
   "sympy.Float"
  ],
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_UnaryOp": {
  "lineno": 275,
  "symbols_in_volume": [
   "sympy.Not"
  ],
  "type": "function"
 },
 "brian2.parsing.rendering.SympyNodeRenderer.render_func": {
  "lineno": 202,
  "symbols_in_volume": [
   "brian2.core.functions.DEFAULT_FUNCTIONS",
   "sympy.Function",
   "sympy.FunctionClass"
  ],
  "type": "function"
 },
 "brian2.parsing.statements": {
  "lineno": null,
  "symbols_in_volume": [
   "pyparsing.CharsNotIn",
   "pyparsing.Optional",
   "pyparsing.Regex",
   "pyparsing.Suppress",
   "pyparsing.Word",
   "pyparsing.alphas",
   "pyparsing.nums"
  ],
  "type": "module"
 },
 "brian2.parsing.statements.parse_statement": {
  "lineno": 15,
  "symbols_in_volume": [
   "brian2.utils.caching.cached",
   "pyparsing.ParseException"
  ],
  "type": "function"
 },
 "brian2.parsing.sympytools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.parsing.sympytools.CustomSympyPrinter": {
  "lineno": 90,
  "symbols_in_volume": [
   "sympy.printing.str.StrPrinter"
  ],
  "type": "class"
 },
 "brian2.parsing.sympytools.CustomSympyPrinter._print_And": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.sympytools.CustomSympyPrinter._print_Function": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.sympytools.CustomSympyPrinter._print_Not": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.sympytools.CustomSympyPrinter._print_Or": {
  "lineno": 99,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.sympytools.CustomSympyPrinter._print_Relational": {
  "lineno": 107,
  "symbols_in_volume": [
   "sympy.printing.precedence.precedence"
  ],
  "type": "function"
 },
 "brian2.parsing.sympytools._str_to_sympy": {
  "lineno": 79,
  "symbols_in_volume": [
   "brian2.parsing.rendering.SympyNodeRenderer",
   "brian2.utils.caching.cached"
  ],
  "type": "function"
 },
 "brian2.parsing.sympytools.check_expression_for_multiple_stateful_functions": {
  "lineno": 17,
  "symbols_in_volume": [
   "brian2.core.functions.Function",
   "collections.Counter",
   "re.findall"
  ],
  "type": "function"
 },
 "brian2.parsing.sympytools.expression_complexity": {
  "lineno": 168,
  "symbols_in_volume": [
   "sympy.count_ops"
  ],
  "type": "function"
 },
 "brian2.parsing.sympytools.str_to_sympy": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.parsing.sympytools.sympy_to_str": {
  "lineno": 123,
  "symbols_in_volume": [
   "brian2.core.functions.DEFAULT_CONSTANTS.iteritems",
   "brian2.core.functions.DEFAULT_FUNCTIONS.iteritems",
   "brian2.utils.caching.cached",
   "sympy.Function",
   "sympy.FunctionClass",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "brian2.random": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.spatialneuron": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.spatialneuron.morphology": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger",
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "brian2.spatialneuron.morphology.Children": {
  "lineno": 284,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.spatialneuron.morphology.Children.__contains__": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Children.__getitem__": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Children.__init__": {
  "lineno": 290,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Children.__iter__": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Children.__len__": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Children.__repr__": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Children.add": {
  "lineno": 328,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Children.name": {
  "lineno": 306,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Children.remove": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Cylinder": {
  "lineno": 2064,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.spatialneuron.morphology.Cylinder.__init__": {
  "lineno": 2095,
  "symbols_in_volume": [
   "brian2.numpy.asarray",
   "brian2.numpy.linspace",
   "brian2.numpy.ones",
   "brian2.numpy.sqrt",
   "brian2.numpy.zeros",
   "brian2.units.allunits.meter",
   "brian2.units.fundamentalunits.check_units"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Cylinder.__repr__": {
  "lineno": 2135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Cylinder.area": {
  "lineno": 2160,
  "symbols_in_volume": [
   "brian2.numpy.pi"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Cylinder.copy_section": {
  "lineno": 2150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Cylinder.diameter": {
  "lineno": 2179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Cylinder.end_diameter": {
  "lineno": 2186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Cylinder.r_length_1": {
  "lineno": 2204,
  "symbols_in_volume": [
   "brian2.numpy.pi"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Cylinder.r_length_2": {
  "lineno": 2213,
  "symbols_in_volume": [
   "brian2.numpy.pi"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Cylinder.start_diameter": {
  "lineno": 2172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Cylinder.volume": {
  "lineno": 2193,
  "symbols_in_volume": [
   "brian2.numpy.pi"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology": {
  "lineno": 391,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "brian2.spatialneuron.morphology.Morphology.__delattr__": {
  "lineno": 549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.__delitem__": {
  "lineno": 516,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.__getattr__": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.__getitem__": {
  "lineno": 423,
  "symbols_in_volume": [
   "brian2.numpy.abs",
   "brian2.numpy.argmin",
   "brian2.numpy.asarray",
   "brian2.numpy.cumsum",
   "brian2.numpy.hstack",
   "brian2.numpy.searchsorted",
   "brian2.units.allunits.meter",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.have_same_dimensions",
   "numbers.Integral"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.__init__": {
  "lineno": 406,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.check_units"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.__len__": {
  "lineno": 659,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.__setattr__": {
  "lineno": 538,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.__setitem__": {
  "lineno": 504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology._compartments_to_sections": {
  "lineno": 1000,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology._create_section": {
  "lineno": 947,
  "symbols_in_volume": [
   "brian2.numpy.array",
   "brian2.numpy.hstack",
   "brian2.units.stdunits.um"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology._indices": {
  "lineno": 555,
  "symbols_in_volume": [
   "brian2.numpy.arange"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology._replace_three_point_soma": {
  "lineno": 1039,
  "symbols_in_volume": [
   "brian2.numpy.abs",
   "brian2.numpy.array",
   "brian2.numpy.sqrt",
   "brian2.numpy.sum"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.area": {
  "lineno": 707,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.children": {
  "lineno": 692,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.coordinates": {
  "lineno": 912,
  "symbols_in_volume": [
   "brian2.units.allunits.meter.dim",
   "brian2.units.fundamentalunits.Quantity"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.coordinates_": {
  "lineno": 928,
  "symbols_in_volume": [
   "brian2.numpy.hstack",
   "brian2.numpy.vstack"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.copy_section": {
  "lineno": 639,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.diameter": {
  "lineno": 747,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.distance": {
  "lineno": 754,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.end_distance": {
  "lineno": 699,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.end_x": {
  "lineno": 864,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.end_x_": {
  "lineno": 888,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.end_y": {
  "lineno": 872,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.end_y_": {
  "lineno": 896,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.end_z": {
  "lineno": 880,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.end_z_": {
  "lineno": 904,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.from_file": {
  "lineno": 1239,
  "symbols_in_volume": [
   "os.path.splitext"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.from_points": {
  "lineno": 1092,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.from_swc_file": {
  "lineno": 1176,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.generate_coordinates": {
  "lineno": 588,
  "symbols_in_volume": [
   "brian2.numpy.pi"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.length": {
  "lineno": 721,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.n": {
  "lineno": 652,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.parent": {
  "lineno": 685,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.r_length_1": {
  "lineno": 728,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.r_length_2": {
  "lineno": 737,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.start_x": {
  "lineno": 762,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.start_x_": {
  "lineno": 786,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.start_y": {
  "lineno": 770,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.start_y_": {
  "lineno": 795,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.start_z": {
  "lineno": 778,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.start_z_": {
  "lineno": 804,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.topology": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.total_compartments": {
  "lineno": 669,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.total_sections": {
  "lineno": 678,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.volume": {
  "lineno": 714,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.x": {
  "lineno": 813,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.x_": {
  "lineno": 837,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.y": {
  "lineno": 821,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.y_": {
  "lineno": 846,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.z": {
  "lineno": 829,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Morphology.z_": {
  "lineno": 855,
  "symbols_in_volume": [
   "abc.abstractproperty"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.MorphologyIndexWrapper": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.spatialneuron.morphology.MorphologyIndexWrapper.__getitem__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.MorphologyIndexWrapper.__init__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section": {
  "lineno": 1727,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.spatialneuron.morphology.Section.__init__": {
  "lineno": 1766,
  "symbols_in_volume": [
   "brian2.numpy.asarray",
   "brian2.numpy.sqrt",
   "brian2.numpy.zeros",
   "brian2.units.allunits.meter",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.check_units"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.__repr__": {
  "lineno": 1808,
  "symbols_in_volume": [
   "brian2.numpy.abs",
   "brian2.numpy.asarray",
   "brian2.numpy.hstack",
   "brian2.units.allunits.meter"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.area": {
  "lineno": 1839,
  "symbols_in_volume": [
   "brian2.numpy.pi",
   "brian2.numpy.sqrt"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.copy_section": {
  "lineno": 1829,
  "symbols_in_volume": [
   "brian2.units.allunits.meter"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.diameter": {
  "lineno": 1889,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.distance": {
  "lineno": 1899,
  "symbols_in_volume": [
   "brian2.numpy.cumsum",
   "brian2.units.stdunits.um"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.end_diameter": {
  "lineno": 1882,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.Quantity"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.end_distance": {
  "lineno": 1908,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.end_x_": {
  "lineno": 2021,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.end_y_": {
  "lineno": 2035,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.end_z_": {
  "lineno": 2049,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.length": {
  "lineno": 1868,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.r_length_1": {
  "lineno": 1915,
  "symbols_in_volume": [
   "brian2.numpy.pi"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.r_length_2": {
  "lineno": 1926,
  "symbols_in_volume": [
   "brian2.numpy.pi"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.start_diameter": {
  "lineno": 1875,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.Quantity"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.start_x_": {
  "lineno": 1937,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.start_y_": {
  "lineno": 1952,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.start_z_": {
  "lineno": 1967,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.volume": {
  "lineno": 1854,
  "symbols_in_volume": [
   "brian2.numpy.pi"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.x_": {
  "lineno": 1982,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.y_": {
  "lineno": 1995,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Section.z_": {
  "lineno": 2008,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma": {
  "lineno": 1514,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.spatialneuron.morphology.Soma.__init__": {
  "lineno": 1532,
  "symbols_in_volume": [
   "brian2.numpy.array",
   "brian2.numpy.asarray",
   "brian2.numpy.atleast_1d",
   "brian2.numpy.ones",
   "brian2.units.allunits.meter",
   "brian2.units.fundamentalunits.check_units"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.__repr__": {
  "lineno": 1549,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.area": {
  "lineno": 1566,
  "symbols_in_volume": [
   "brian2.numpy.pi"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.copy_section": {
  "lineno": 1560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.diameter": {
  "lineno": 1608,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.distance": {
  "lineno": 1615,
  "symbols_in_volume": [
   "brian2.units.stdunits.um"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.end_distance": {
  "lineno": 1715,
  "symbols_in_volume": [
   "brian2.units.stdunits.um"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.end_x_": {
  "lineno": 1685,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.end_y_": {
  "lineno": 1695,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.end_z_": {
  "lineno": 1705,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.length": {
  "lineno": 1580,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.r_length_1": {
  "lineno": 1588,
  "symbols_in_volume": [
   "brian2.units.allunits.meter"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.r_length_2": {
  "lineno": 1598,
  "symbols_in_volume": [
   "brian2.units.allunits.meter"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.start_x_": {
  "lineno": 1625,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.start_y_": {
  "lineno": 1635,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.start_z_": {
  "lineno": 1645,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.volume": {
  "lineno": 1573,
  "symbols_in_volume": [
   "brian2.numpy.pi"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.x_": {
  "lineno": 1655,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.y_": {
  "lineno": 1665,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Soma.z_": {
  "lineno": 1675,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology": {
  "lineno": 1266,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.spatialneuron.morphology.SubMorphology.__init__": {
  "lineno": 1270,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.__len__": {
  "lineno": 1293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology._indices": {
  "lineno": 1276,
  "symbols_in_volume": [
   "brian2.numpy.arange"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.area": {
  "lineno": 1304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.diameter": {
  "lineno": 1345,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.distance": {
  "lineno": 1352,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.end_x": {
  "lineno": 1462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.end_x_": {
  "lineno": 1486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.end_y": {
  "lineno": 1470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.end_y_": {
  "lineno": 1495,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.end_z": {
  "lineno": 1478,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.end_z_": {
  "lineno": 1504,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.length": {
  "lineno": 1318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.n": {
  "lineno": 1286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.n_sections": {
  "lineno": 1296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.r_length_1": {
  "lineno": 1325,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.r_length_2": {
  "lineno": 1335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.start_x": {
  "lineno": 1360,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.start_x_": {
  "lineno": 1384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.start_y": {
  "lineno": 1368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.start_y_": {
  "lineno": 1393,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.start_z": {
  "lineno": 1376,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.start_z_": {
  "lineno": 1402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.volume": {
  "lineno": 1311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.x": {
  "lineno": 1411,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.x_": {
  "lineno": 1435,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.y": {
  "lineno": 1419,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.y_": {
  "lineno": 1444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.z": {
  "lineno": 1427,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.SubMorphology.z_": {
  "lineno": 1453,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Topology": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.spatialneuron.morphology.Topology.__init__": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Topology.__str__": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology.Topology._str_topology": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology._add_coordinates": {
  "lineno": 181,
  "symbols_in_volume": [
   "brian2.numpy.array",
   "brian2.numpy.asarray",
   "brian2.numpy.hstack",
   "brian2.numpy.pi",
   "brian2.numpy.sqrt",
   "brian2.numpy.sum",
   "brian2.numpy.zeros",
   "brian2.units.allunits.meter",
   "brian2.units.stdunits.um"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology._calc_start_idx": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology._find_start_index": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology._from_morphology": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.morphology._perturb": {
  "lineno": 164,
  "symbols_in_volume": [
   "brian2.numpy.array",
   "brian2.numpy.hstack",
   "brian2.numpy.pi",
   "brian2.numpy.random.exponential",
   "brian2.numpy.random.rand"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology._rotate": {
  "lineno": 141,
  "symbols_in_volume": [
   "brian2.numpy.cos",
   "brian2.numpy.cross",
   "brian2.numpy.dot",
   "brian2.numpy.sin"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.morphology._to_meters": {
  "lineno": 27,
  "symbols_in_volume": [
   "brian2.units.allunits.meter.dim",
   "brian2.units.fundamentalunits.Quantity"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.spatialneuron.spatialneuron.FlatMorphology": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.spatialneuron.spatialneuron.FlatMorphology.__init__": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.FlatMorphology._insert_data": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.nan",
   "numpy.ones"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialNeuron": {
  "lineno": 158,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup"
  ],
  "type": "class"
 },
 "brian2.spatialneuron.spatialneuron.SpatialNeuron.__getattr__": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialNeuron.__getitem__": {
  "lineno": 421,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialNeuron.__init__": {
  "lineno": 225,
  "symbols_in_volume": [
   "brian2.equations.codestrings.Expression",
   "brian2.equations.equations.DIFFERENTIAL_EQUATION",
   "brian2.equations.equations.Equations",
   "brian2.equations.equations.PARAMETER",
   "brian2.equations.equations.SUBEXPRESSION",
   "brian2.equations.equations.SingleEquation",
   "brian2.equations.equations.extract_constant_subexpressions",
   "brian2.groups.neurongroup.NeuronGroup.__init__",
   "brian2.groups.neurongroup.SubexpressionUpdater",
   "brian2.parsing.sympytools.str_to_sympy",
   "brian2.parsing.sympytools.sympy_to_str",
   "brian2.units.allunits.amp",
   "brian2.units.allunits.amp.dim",
   "brian2.units.allunits.meter.dim",
   "brian2.units.allunits.ohm",
   "brian2.units.allunits.volt.dim",
   "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
   "brian2.units.stdunits.cm",
   "brian2.units.stdunits.uF",
   "copy.deepcopy",
   "sympy.Derivative",
   "sympy.Symbol",
   "sympy.diff",
   "sympy.simplify"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialNeuron._find_subtree_end": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialNeuron.spatialneuron_attribute": {
  "lineno": 451,
  "symbols_in_volume": [
   "brian2.groups.group.Group.__getattr__"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialNeuron.spatialneuron_segment": {
  "lineno": 471,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.to_start_stop",
   "brian2.groups.subgroup.Subgroup",
   "brian2.units.allunits.meter",
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.have_same_dimensions"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialStateUpdater": {
  "lineno": 530,
  "symbols_in_volume": [
   "brian2.groups.group.CodeRunner",
   "brian2.groups.group.Group"
  ],
  "type": "class"
 },
 "brian2.spatialneuron.spatialneuron.SpatialStateUpdater.__init__": {
  "lineno": 536,
  "symbols_in_volume": [
   "brian2.core.variables.Variables",
   "brian2.groups.group.CodeRunner.__init__",
   "brian2.units.allunits.siemens.dim",
   "numpy.int32",
   "weakref.proxy"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialStateUpdater.before_run": {
  "lineno": 601,
  "symbols_in_volume": [
   "brian2.codegen.runtime.numpy_rt.numpy_rt.NumpyCodeObject",
   "brian2.groups.group.CodeRunner.before_run",
   "brian2.groups.group.create_runner_codeobj"
  ],
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialSubgroup": {
  "lineno": 502,
  "symbols_in_volume": [
   "brian2.groups.subgroup.Subgroup"
  ],
  "type": "class"
 },
 "brian2.spatialneuron.spatialneuron.SpatialSubgroup.__getattr__": {
  "lineno": 523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialSubgroup.__getitem__": {
  "lineno": 526,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.spatialneuron.spatialneuron.SpatialSubgroup.__init__": {
  "lineno": 519,
  "symbols_in_volume": [
   "brian2.groups.subgroup.Subgroup.__init__"
  ],
  "type": "function"
 },
 "brian2.sphinxext": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.sphinxext.docscrape_sphinx": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxClassDoc": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxClassDoc.__init__": {
  "lineno": 232,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString.__init__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString.__str__": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._obj": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_examples": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_extended_summary": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_field_list": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_header": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_indent": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_index": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_member_docs": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_member_list": {
  "lineno": 55,
  "symbols_in_volume": [
   "sphinx.pycode.ModuleAnalyzer.for_module"
  ],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_param_list": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_raises": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_references": {
  "lineno": 180,
  "symbols_in_volume": [
   "re.I",
   "re.match",
   "sphinx.__version__"
  ],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_section": {
  "lineno": 127,
  "symbols_in_volume": [
   "textwrap.dedent"
  ],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_see_also": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_summary": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxDocString._str_warnings": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxFunctionDoc": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxFunctionDoc.__init__": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxObjDoc": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.sphinxext.docscrape_sphinx.SphinxObjDoc.__init__": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.sphinxext.docscrape_sphinx.get_doc_object": {
  "lineno": 241,
  "symbols_in_volume": [
   "inspect.isclass",
   "inspect.ismodule",
   "pydoc.getdoc"
  ],
  "type": "function"
 },
 "brian2.sphinxext.setup": {
  "lineno": 5,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "brian2.stateupdaters": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.stateupdaters.GSL": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.stateupdaters.GSL.GSLContainer": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.stateupdaters.GSL.GSLContainer.__call__": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.stateupdaters.GSL.GSLContainer.__init__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.stateupdaters.GSL.GSLContainer.get_codeobj_class": {
  "lineno": 40,
  "symbols_in_volume": [
   "brian2.devices.cpp_standalone.device.CPPStandaloneDevice",
   "brian2.devices.device.get_device",
   "sys.platform"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.GSL.GSLStateUpdater": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.stateupdaters.GSL.GSLStateUpdater.__call__": {
  "lineno": 154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.stateupdaters.GSL.GSLStateUpdater.__init__": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.stateupdaters.base": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.stateupdaters.base.StateUpdateMethod": {
  "lineno": 80,
  "symbols_in_volume": [
   "abc.ABCMeta"
  ],
  "type": "class"
 },
 "brian2.stateupdaters.base.StateUpdateMethod.__call__": {
  "lineno": 86,
  "symbols_in_volume": [
   "abc.abstractmethod"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.base.StateUpdateMethod.apply_stateupdater": {
  "lineno": 139,
  "symbols_in_volume": [
   "brian2.utils.caching.cached",
   "collections.Iterable",
   "time.time"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.base.StateUpdateMethod.register": {
  "lineno": 112,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.stateupdaters.base.UnsupportedEquationsException": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.stateupdaters.base.extract_method_options": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.stateupdaters.exact": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.stateupdaters.exact.IndependentStateUpdater": {
  "lineno": 77,
  "symbols_in_volume": [
   "brian2.stateupdaters.base.StateUpdateMethod"
  ],
  "type": "class"
 },
 "brian2.stateupdaters.exact.IndependentStateUpdater.__call__": {
  "lineno": 87,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.str_to_sympy",
   "brian2.parsing.sympytools.sympy_to_str",
   "brian2.stateupdaters.base.UnsupportedEquationsException",
   "brian2.stateupdaters.base.extract_method_options",
   "sympy.Derivative",
   "sympy.Eq",
   "sympy.Function",
   "sympy.Symbol",
   "sympy.dsolve",
   "sympy.solve"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.exact.LinearStateUpdater": {
  "lineno": 152,
  "symbols_in_volume": [
   "brian2.stateupdaters.base.StateUpdateMethod"
  ],
  "type": "class"
 },
 "brian2.stateupdaters.exact.LinearStateUpdater.__call__": {
  "lineno": 158,
  "symbols_in_volume": [
   "brian2.equations.codestrings.is_constant_over_dt",
   "brian2.parsing.sympytools.sympy_to_str",
   "brian2.stateupdaters.base.UnsupportedEquationsException",
   "brian2.stateupdaters.base.extract_method_options",
   "itertools.chain",
   "sympy.I",
   "sympy.ImmutableMatrix",
   "sympy.MatrixSymbol",
   "sympy.Symbol",
   "sympy.cancel",
   "sympy.factor_terms",
   "sympy.im",
   "sympy.re",
   "sympy.signsimp",
   "sympy.solve_linear_system"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.exact.LinearStateUpdater.__repr__": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.stateupdaters.exact.get_linear_system": {
  "lineno": 21,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.str_to_sympy",
   "brian2.stateupdaters.base.UnsupportedEquationsException",
   "sympy.Symbol",
   "sympy.Wild",
   "sympy.zeros"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.explicit": {
  "lineno": null,
  "symbols_in_volume": [
   "sympy.Function"
  ],
  "type": "module"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater": {
  "lineno": 123,
  "symbols_in_volume": [
   "pyparsing.Group",
   "pyparsing.Literal",
   "pyparsing.Suppress",
   "pyparsing.Word",
   "pyparsing.ZeroOrMore",
   "pyparsing.restOfLine.setResultsName",
   "string.ascii_letters",
   "string.digits"
  ],
  "type": "class"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater.__call__": {
  "lineno": 548,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater.__init__": {
  "lineno": 224,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.str_to_sympy",
   "pyparsing.ParseException",
   "sympy.Function",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater.__repr__": {
  "lineno": 269,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater.__str__": {
  "lineno": 281,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.sympy_to_str"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater._generate_RHS": {
  "lineno": 485,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.sympy_to_str",
   "sympy.Number"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater._latex": {
  "lineno": 294,
  "symbols_in_volume": [
   "sympy.Symbol",
   "sympy.latex"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater._non_stochastic_part": {
  "lineno": 364,
  "symbols_in_volume": [
   "operator.add"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater._repr_latex_": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater._stochastic_part": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.stateupdaters.explicit.ExplicitStateUpdater.replace_func": {
  "lineno": 308,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.str_to_sympy",
   "sympy.core.sympify.SympifyError"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.explicit._symbol": {
  "lineno": 24,
  "symbols_in_volume": [
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.explicit.diagonal_noise": {
  "lineno": 677,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.stateupdaters.explicit.split_expression": {
  "lineno": 38,
  "symbols_in_volume": [
   "sympy.Wild",
   "sympy.collect",
   "sympy.sympify"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.exponential_euler": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.stateupdaters.exponential_euler.ExponentialEulerStateUpdater": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.stateupdaters.exponential_euler.ExponentialEulerStateUpdater.__call__": {
  "lineno": 78,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.sympy_to_str",
   "sympy.Symbol",
   "sympy.exp"
  ],
  "type": "function"
 },
 "brian2.stateupdaters.exponential_euler.get_conditionally_linear_system": {
  "lineno": 11,
  "symbols_in_volume": [
   "brian2.parsing.sympytools.str_to_sympy",
   "sympy.Symbol",
   "sympy.collect"
  ],
  "type": "function"
 },
 "brian2.synapses": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.synapses.spikequeue": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.synapses.spikequeue.SpikeQueue": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.synapses.spikequeue.SpikeQueue.__init__": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.int32",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue._extract_spikes": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.sum",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue._full_state": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue._insert": {
  "lineno": 235,
  "symbols_in_volume": [
   "brian2.utils.arrays.calc_repeats",
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue._insert_homogeneous": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue._resize": {
  "lineno": 285,
  "symbols_in_volume": [
   "numpy.ceil",
   "numpy.log2",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue._restore_from_full_state": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue._store_spikes": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue.advance": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue.peek": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue.prepare": {
  "lineno": 68,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.argsort",
   "numpy.array",
   "numpy.int",
   "numpy.ravel",
   "numpy.round",
   "numpy.searchsorted",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "brian2.synapses.spikequeue.SpikeQueue.push": {
  "lineno": 204,
  "symbols_in_volume": [
   "bisect.bisect_left",
   "numpy.concatenate",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.utils.logger.get_logger"
  ],
  "type": "module"
 },
 "brian2.synapses.synapses.StateUpdater": {
  "lineno": 50,
  "symbols_in_volume": [
   "brian2.groups.group.CodeRunner"
  ],
  "type": "class"
 },
 "brian2.synapses.synapses.StateUpdater.__init__": {
  "lineno": 55,
  "symbols_in_volume": [
   "brian2.groups.group.CodeRunner.__init__"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.StateUpdater.update_abstract_code": {
  "lineno": 67,
  "symbols_in_volume": [
   "brian2.stateupdaters.base.StateUpdateMethod.apply_stateupdater"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.SummedVariableUpdater": {
  "lineno": 85,
  "symbols_in_volume": [
   "brian2.groups.group.CodeRunner"
  ],
  "type": "class"
 },
 "brian2.synapses.synapses.SummedVariableUpdater.__init__": {
  "lineno": 90,
  "symbols_in_volume": [
   "brian2.groups.group.CodeRunner.__init__"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses": {
  "lineno": 593,
  "symbols_in_volume": [
   "brian2.groups.group.Group",
   "functools.partial"
  ],
  "type": "class"
 },
 "brian2.synapses.synapses.Synapses.__getitem__": {
  "lineno": 944,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses.__init__": {
  "lineno": 678,
  "symbols_in_volume": [
   "brian2.core.variables.DynamicArrayVariable",
   "brian2.equations.equations.DIFFERENTIAL_EQUATION",
   "brian2.equations.equations.Equations",
   "brian2.equations.equations.PARAMETER",
   "brian2.equations.equations.SUBEXPRESSION",
   "brian2.groups.group.Group.__init__",
   "brian2.groups.neurongroup.SubexpressionUpdater",
   "brian2.groups.neurongroup.extract_constant_subexpressions",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
   "collections.Mapping",
   "collections.MutableMapping",
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._add_synapses_from_arrays": {
  "lineno": 1496,
  "symbols_in_volume": [
   "brian2.codegen.codeobject.create_runner_codeobj",
   "brian2.core.variables.Variables",
   "numpy.atleast_1d",
   "numpy.int32",
   "numpy.max",
   "numpy.min",
   "numpy.random.rand"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._add_synapses_generator": {
  "lineno": 1584,
  "symbols_in_volume": [
   "brian2.codegen.codeobject.create_runner_codeobj",
   "brian2.core.namespace.get_local_namespace",
   "brian2.core.variables.Variables",
   "brian2.synapses.parse_synaptic_generator_syntax.parse_synapse_generator",
   "collections.defaultdict",
   "numpy.bool",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._add_updater": {
  "lineno": 980,
  "symbols_in_volume": [
   "brian2.core.spikesource.SpikeSource"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._check_parsed_synapses_generator": {
  "lineno": 1709,
  "symbols_in_volume": [
   "brian2.parsing.bast.brian_ast",
   "brian2.utils.stringtools.get_identifiers"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._create_variables": {
  "lineno": 1036,
  "symbols_in_volume": [
   "brian2.core.variables.Variables",
   "brian2.equations.equations.DIFFERENTIAL_EQUATION",
   "brian2.equations.equations.PARAMETER",
   "brian2.equations.equations.SUBEXPRESSION",
   "brian2.groups.group.get_dtype",
   "brian2.groups.neurongroup.check_identifier_pre_post",
   "brian2.units.allunits.second.dim",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._expression_index_dependence": {
  "lineno": 1559,
  "symbols_in_volume": [
   "brian2.codegen.translation.get_identifiers_recursively",
   "brian2.parsing.rendering.NodeRenderer"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._get_delay": {
  "lineno": 961,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._get_multisynaptic_indices": {
  "lineno": 1488,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._resize": {
  "lineno": 1424,
  "symbols_in_volume": [
   "numbers.Integral",
   "numpy.integer"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._set_delay": {
  "lineno": 948,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses._update_synapse_numbers": {
  "lineno": 1437,
  "symbols_in_volume": [
   "brian2.utils.arrays.calc_repeats",
   "numpy.bincount"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses.before_run": {
  "lineno": 1221,
  "symbols_in_volume": [
   "brian2.equations.equations.check_subexpressions"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses.check_variable_write": {
  "lineno": 1405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses.connect": {
  "lineno": 1228,
  "symbols_in_volume": [
   "brian2.core.base.device_override",
   "brian2.utils.stringtools.word_substitute",
   "collections.Sequence",
   "numbers.Integral",
   "numpy.asarray",
   "numpy.broadcast_arrays",
   "numpy.issubdtype",
   "numpy.ndarray",
   "numpy.signedinteger",
   "re.search"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses.register_variable": {
  "lineno": 1470,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.synapses.Synapses.unregister_variable": {
  "lineno": 1482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticIndexing": {
  "lineno": 500,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.synapses.synapses.SynapticIndexing.__call__": {
  "lineno": 513,
  "symbols_in_volume": [
   "collections.Sequence",
   "numbers.Integral",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.flatnonzero",
   "numpy.int32",
   "numpy.intersect1d",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticIndexing.__init__": {
  "lineno": 502,
  "symbols_in_volume": [
   "brian2.core.base.weakproxy_with_fallback",
   "weakref.proxy"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway": {
  "lineno": 123,
  "symbols_in_volume": [
   "brian2.groups.group.CodeRunner",
   "brian2.groups.group.Group"
  ],
  "type": "class"
 },
 "brian2.synapses.synapses.SynapticPathway.__init__": {
  "lineno": 144,
  "symbols_in_volume": [
   "brian2.core.variables.Variables",
   "brian2.groups.group.CodeRunner.__init__",
   "brian2.units.allunits.second",
   "brian2.units.allunits.second.dim",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
   "weakref.proxy"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway._full_state": {
  "lineno": 373,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway._restore_from_full_state": {
  "lineno": 381,
  "symbols_in_volume": [
   "brian2.devices.device.get_device"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway.before_run": {
  "lineno": 303,
  "symbols_in_volume": [
   "brian2.codegen.codeobject.create_runner_codeobj",
   "brian2.core.base.device_override",
   "brian2.groups.group.CodeRunner.before_run",
   "weakref.proxy"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway.check_variable_write": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway.initialise_queue": {
  "lineno": 340,
  "symbols_in_volume": [
   "brian2.devices.device.get_device"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway.push_spikes": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticPathway.update_abstract_code": {
  "lineno": 266,
  "symbols_in_volume": [
   "brian2.core.base.device_override",
   "brian2.stateupdaters.base.UnsupportedEquationsException",
   "brian2.stateupdaters.exact.independent",
   "brian2.stateupdaters.exact.linear",
   "re.sub"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticSubgroup": {
  "lineno": 467,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.synapses.synapses.SynapticSubgroup.__init__": {
  "lineno": 479,
  "symbols_in_volume": [
   "brian2.core.base.weakproxy_with_fallback"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticSubgroup.__repr__": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.synapses.SynapticSubgroup._indices": {
  "lineno": 485,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.synapses.synapses.find_synapses": {
  "lineno": 447,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.flatnonzero",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.synapses.synapses.slice_to_test": {
  "lineno": 402,
  "symbols_in_volume": [
   "numpy.repeat"
  ],
  "type": "function"
 },
 "brian2.tests": {
  "lineno": null,
  "symbols_in_volume": [
   "nose"
  ],
  "type": "module"
 },
 "brian2.tests.NotImplementedNoFailurePlugin": {
  "lineno": 22,
  "symbols_in_volume": [
   "nose.plugins.errorclass.ErrorClass",
   "nose.plugins.errorclass.ErrorClassPlugin"
  ],
  "type": "class"
 },
 "brian2.tests.NotImplementedNoFailurePlugin.configure": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.NotImplementedPlugin": {
  "lineno": 12,
  "symbols_in_volume": [
   "nose.plugins.errorclass.ErrorClass",
   "nose.plugins.errorclass.ErrorClassPlugin"
  ],
  "type": "class"
 },
 "brian2.tests.NotImplementedPlugin.configure": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.clear_caches": {
  "lineno": 36,
  "symbols_in_volume": [
   "brian2.codegen.translation.make_statements._cache.clear",
   "brian2.utils.logger.BrianLogger._log_messages.clear"
  ],
  "type": "function"
 },
 "brian2.tests.features": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.features.input": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.features.input.SpikeGeneratorGroupTest": {
  "lineno": 8,
  "symbols_in_volume": [
   "brian2.tests.features.FeatureTest",
   "brian2.tests.features.FeatureTest.compare_arrays"
  ],
  "type": "class"
 },
 "brian2.tests.features.input.SpikeGeneratorGroupTest.results": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.features.input.SpikeGeneratorGroupTest.run": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.features.monitors": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.features.monitors.SpikeMonitorTest": {
  "lineno": 9,
  "symbols_in_volume": [
   "brian2.tests.features.FeatureTest",
   "brian2.tests.features.FeatureTest.compare_arrays"
  ],
  "type": "class"
 },
 "brian2.tests.features.monitors.SpikeMonitorTest.results": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.features.monitors.SpikeMonitorTest.run": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.features.monitors.StateMonitorTest": {
  "lineno": 34,
  "symbols_in_volume": [
   "brian2.tests.features.FeatureTest",
   "brian2.tests.features.FeatureTest.compare_arrays"
  ],
  "type": "class"
 },
 "brian2.tests.features.monitors.StateMonitorTest.results": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.features.monitors.StateMonitorTest.run": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.features.speed": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.features.speed.COBAHHFixedConnectivity": {
  "lineno": 129,
  "symbols_in_volume": [
   "brian2.tests.features.SpeedTest"
  ],
  "type": "class"
 },
 "brian2.tests.features.speed.COBAHHFixedConnectivity.run": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.features.speed.CUBAFixedConnectivity": {
  "lineno": 83,
  "symbols_in_volume": [
   "brian2.tests.features.SpeedTest"
  ],
  "type": "class"
 },
 "brian2.tests.features.speed.CUBAFixedConnectivity.run": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.features.speed.DenseMediumRateSynapsesOnly": {
  "lineno": 295,
  "symbols_in_volume": [
   "brian2.tests.features.SpeedTest"
  ],
  "type": "class"
 },
 "brian2.tests.features.speed.HHNeuronsOnly": {
  "lineno": 39,
  "symbols_in_volume": [
   "brian2.tests.features.SpeedTest"
  ],
  "type": "class"
 },
 "brian2.tests.features.speed.HHNeuronsOnly.run": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.features.speed.LinearNeuronsOnly": {
  "lineno": 20,
  "symbols_in_volume": [
   "brian2.tests.features.SpeedTest"
  ],
  "type": "class"
 },
 "brian2.tests.features.speed.LinearNeuronsOnly.run": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.features.speed.STDP": {
  "lineno": 201,
  "symbols_in_volume": [
   "brian2.tests.features.SpeedTest"
  ],
  "type": "class"
 },
 "brian2.tests.features.speed.STDP.run": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.features.speed.SparseHighRateSynapsesOnly": {
  "lineno": 310,
  "symbols_in_volume": [
   "brian2.tests.features.SpeedTest"
  ],
  "type": "class"
 },
 "brian2.tests.features.speed.SparseLowRateSynapsesOnly": {
  "lineno": 302,
  "symbols_in_volume": [
   "brian2.tests.features.SpeedTest"
  ],
  "type": "class"
 },
 "brian2.tests.features.speed.SparseMediumRateSynapsesOnly": {
  "lineno": 288,
  "symbols_in_volume": [
   "brian2.tests.features.SpeedTest"
  ],
  "type": "class"
 },
 "brian2.tests.features.speed.SynapsesOnly": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.tests.features.speed.SynapsesOnly.run": {
  "lineno": 263,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.features.speed.VerySparseMediumRateSynapsesOnly": {
  "lineno": 280,
  "symbols_in_volume": [
   "brian2.tests.features.SpeedTest"
  ],
  "type": "class"
 },
 "brian2.tests.make_argv": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.run": {
  "lineno": 73,
  "symbols_in_volume": [
   "StringIO.StringIO",
   "brian2.core.preferences.prefs",
   "brian2.core.preferences.prefs._backup",
   "brian2.core.preferences.prefs.as_file",
   "brian2.core.preferences.prefs.codegen.string_expression_target",
   "brian2.core.preferences.prefs.codegen.target",
   "brian2.core.preferences.prefs.defaults_as_file",
   "brian2.core.preferences.prefs.devices.cpp_standalone.openmp_threads",
   "brian2.core.preferences.prefs.extend",
   "brian2.core.preferences.prefs.read_preference_file",
   "brian2.devices.device.all_devices",
   "brian2.devices.device.reset_device",
   "brian2.devices.device.set_device",
   "brian2.devices.set_device",
   "brian2.units.fundamentalunits.UnitRegistry",
   "brian2.units.fundamentalunits.user_unit_register",
   "brian2.utils.logger.BrianLogger.console_handler.level",
   "brian2.utils.logger.BrianLogger.console_handler.setLevel",
   "brian2.utils.logger.LOG_LEVELS",
   "copy.copy",
   "nose",
   "nose.plugins.multiprocess._instantiate_plugins",
   "nose.run",
   "numpy.set_printoptions",
   "os.name",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join",
   "sys.stderr.write"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL": {
  "lineno": null,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "module"
 },
 "brian2.tests.test_GSL.skip_if_not_implemented": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_GSL.skip_if_not_implemented.wrapped": {
  "lineno": 18,
  "symbols_in_volume": [
   "functools.wraps",
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_default_function": {
  "lineno": 76,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_different_clocks": {
  "lineno": 64,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_error_bounds": {
  "lineno": 285,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_error_dimension_mismatch_dimensionless1": {
  "lineno": 205,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_error_dimension_mismatch_dimensionless2": {
  "lineno": 220,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_error_dimension_mismatch_unit": {
  "lineno": 190,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_error_incorrect_error_format": {
  "lineno": 250,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_error_nonODE_variable": {
  "lineno": 270,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_error_nonexisting_variable": {
  "lineno": 235,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_failing_directory": {
  "lineno": 167,
  "symbols_in_volume": [
   "brian2.core.preferences.PreferenceError",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_failing_directory.set_dir": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_fixed_timestep_big_dt_small_error": {
  "lineno": 405,
  "symbols_in_volume": [
   "brian2.codegen.runtime.GSLcython_rt.IntegrationError",
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_internal_variable": {
  "lineno": 421,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_method_options_neurongroup": {
  "lineno": 427,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_method_options_spatialneuron": {
  "lineno": 442,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_method_options_synapses": {
  "lineno": 462,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_non_autonomous": {
  "lineno": 340,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_refractory": {
  "lineno": 357,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_save_step_count": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_stateupdater_basic": {
  "lineno": 27,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_stochastic": {
  "lineno": 176,
  "symbols_in_volume": [
   "brian2.stateupdaters.base.UnsupportedEquationsException",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_user_defined_function": {
  "lineno": 108,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_user_defined_function.user_sin": {
  "lineno": 117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_GSL.test_GSL_x_variable": {
  "lineno": 157,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_base": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_base.DerivedBrianObject": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.tests.test_base.DerivedBrianObject.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_base.DerivedBrianObject.__str__": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_base.test_active_flag": {
  "lineno": 68,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_base.test_base": {
  "lineno": 17,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_base.test_duplicate_names": {
  "lineno": 52,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_base.test_names": {
  "lineno": 42,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_clocks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_clocks.test_clock_attributes": {
  "lineno": 8,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_clocks.test_clock_dt_change": {
  "lineno": 17,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_clocks.test_defaultclock": {
  "lineno": 42,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_clocks.test_set_interval_warning": {
  "lineno": 50,
  "symbols_in_volume": [
   "brian2.utils.logger.catch_logs",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "nose.plugins.skip.SkipTest"
  ],
  "type": "module"
 },
 "brian2.tests.test_codegen.test_analyse_identifiers": {
  "lineno": 33,
  "symbols_in_volume": [
   "brian2.codegen.translation.analyse_identifiers",
   "brian2.core.variables.Variable",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation": {
  "lineno": 163,
  "symbols_in_volume": [
   "brian2.codegen.optimisation.optimise_statements",
   "brian2.codegen.statements.Statement",
   "brian2.core.functions.DEFAULT_FUNCTIONS",
   "brian2.core.variables.Constant",
   "brian2.core.variables.Variable",
   "brian2.units.ms",
   "brian2.units.second.dim",
   "nose.plugins.attrib.attr",
   "numpy.float32",
   "numpy.floating",
   "numpy.issubdtype"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_boolean": {
  "lineno": 211,
  "symbols_in_volume": [
   "brian2.codegen.optimisation.optimise_statements",
   "brian2.codegen.statements.Statement",
   "brian2.core.functions.DEFAULT_FUNCTIONS",
   "brian2.core.functions.Function",
   "brian2.core.variables.Constant",
   "brian2.core.variables.Variable",
   "brian2.units.fundamentalunits.Unit",
   "nose.plugins.attrib.attr",
   "numpy.float32"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_constant_evaluation": {
  "lineno": 344,
  "symbols_in_volume": [
   "brian2.codegen.optimisation.optimise_statements",
   "brian2.codegen.statements.Statement",
   "brian2.core.functions.DEFAULT_FUNCTIONS",
   "brian2.core.variables.Constant",
   "brian2.core.variables.Variable",
   "nose.plugins.attrib.attr",
   "numpy.float"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_integer": {
  "lineno": 180,
  "symbols_in_volume": [
   "brian2.codegen.optimisation.optimise_statements",
   "brian2.codegen.statements.Statement",
   "brian2.core.variables.Constant",
   "brian2.core.variables.Variable",
   "nose.plugins.attrib.attr",
   "numpy.float32",
   "numpy.floating",
   "numpy.issubdtype",
   "numpy.signedinteger"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_no_optimisation": {
  "lineno": 242,
  "symbols_in_volume": [
   "brian2.codegen.optimisation.optimise_statements",
   "brian2.codegen.statements.Statement",
   "brian2.core.functions.DEFAULT_FUNCTIONS",
   "brian2.core.variables.Constant",
   "brian2.core.variables.Variable",
   "nose.plugins.attrib.attr",
   "numpy.float"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_apply_loop_invariant_optimisation_simplification": {
  "lineno": 270,
  "symbols_in_volume": [
   "brian2.codegen.optimisation.optimise_statements",
   "brian2.codegen.statements.Statement",
   "brian2.core.variables.Constant",
   "brian2.core.variables.Variable",
   "nose.plugins.attrib.attr",
   "numpy.float",
   "numpy.int"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_auto_target": {
  "lineno": 27,
  "symbols_in_volume": [
   "brian2.codegen.codeobject.CodeObject",
   "brian2.devices.device.auto_target",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_automatic_augmented_assignments": {
  "lineno": 372,
  "symbols_in_volume": [
   "brian2.codegen.translation.make_statements",
   "brian2.codegen.translation.parse_statement",
   "brian2.core.functions.DEFAULT_CONSTANTS",
   "brian2.core.functions.DEFAULT_FUNCTIONS",
   "brian2.core.variables.ArrayVariable",
   "brian2.devices.device.device",
   "brian2.parsing.sympytools.str_to_sympy",
   "brian2.parsing.sympytools.sympy_to_str",
   "nose.plugins.attrib.attr",
   "numpy.bool",
   "numpy.float32"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_clear_cache_cython": {
  "lineno": 446,
  "symbols_in_volume": [
   "brian2._cache_dirs_and_extensions",
   "brian2.clear_cache",
   "brian2.prefs.codegen.target",
   "nose.plugins.skip.SkipTest",
   "numpy.testing.utils.assert_raises",
   "os.path.join",
   "os.remove"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_clear_cache_numpy": {
  "lineno": 425,
  "symbols_in_volume": [
   "brian2._cache_dirs_and_extensions",
   "brian2.clear_cache",
   "brian2.prefs.codegen.target",
   "nose.plugins.skip.SkipTest",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_clear_cache_weave": {
  "lineno": 432,
  "symbols_in_volume": [
   "brian2._cache_dirs_and_extensions",
   "brian2.clear_cache",
   "brian2.prefs.codegen.target",
   "nose.plugins.skip.SkipTest",
   "numpy.testing.utils.assert_raises",
   "os.path.join",
   "os.remove"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_get_identifiers_recursively": {
  "lineno": 54,
  "symbols_in_volume": [
   "brian2.codegen.translation.get_identifiers_recursively",
   "brian2.core.variables.Subexpression",
   "brian2.core.variables.Variable",
   "nose.plugins.attrib.attr",
   "numpy.float32"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_nested_subexpressions": {
  "lineno": 133,
  "symbols_in_volume": [
   "brian2.codegen.translation.make_statements",
   "brian2.core.variables.Subexpression",
   "brian2.core.variables.Variable",
   "nose.plugins.attrib.attr",
   "numpy.float32"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_repeated_subexpressions": {
  "lineno": 87,
  "symbols_in_volume": [
   "brian2.codegen.translation.make_statements",
   "brian2.core.variables.Subexpression",
   "brian2.core.variables.Variable",
   "nose.plugins.attrib.attr",
   "numpy.float32"
  ],
  "type": "function"
 },
 "brian2.tests.test_codegen.test_write_to_subexpression": {
  "lineno": 73,
  "symbols_in_volume": [
   "brian2.codegen.translation.make_statements",
   "brian2.core.variables.Subexpression",
   "brian2.core.variables.Variable",
   "nose.plugins.attrib.attr",
   "numpy.float32",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_codestrings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_codestrings.sympy_equals": {
  "lineno": 14,
  "symbols_in_volume": [
   "sympy.sympify"
  ],
  "type": "function"
 },
 "brian2.tests.test_codestrings.test_expr_creation": {
  "lineno": 23,
  "symbols_in_volume": [
   "brian2.Expression",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_codestrings.test_split_stochastic": {
  "lineno": 35,
  "symbols_in_volume": [
   "brian2.Expression",
   "brian2.ms",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_codestrings.test_str_repr": {
  "lineno": 68,
  "symbols_in_volume": [
   "brian2.Expression",
   "brian2.Statements",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_complex_examples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_complex_examples.test_cuba": {
  "lineno": 7,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices"
  ],
  "type": "module"
 },
 "brian2.tests.test_cpp_standalone.test_array_cache": {
  "lineno": 253,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.set_device",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_changing_profile_arg": {
  "lineno": 332,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.set_device",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_cpp_standalone": {
  "lineno": 10,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.reset_device",
   "brian2.devices.device.set_device",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_duplicate_names_across_nets": {
  "lineno": 192,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.reset_device",
   "brian2.devices.device.set_device",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_multiple_connects": {
  "lineno": 46,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.reset_device",
   "brian2.devices.device.set_device",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_openmp_consistency": {
  "lineno": 96,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.reset_device",
   "brian2.devices.device.set_device",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_openmp_scalar_writes": {
  "lineno": 210,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.reset_device",
   "brian2.devices.device.set_device",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_run_with_debug": {
  "lineno": 318,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.set_device",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_storing_loading": {
  "lineno": 59,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.reset_device",
   "brian2.devices.device.set_device",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_cpp_standalone.test_time_after_run": {
  "lineno": 225,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.reset_device",
   "brian2.devices.device.set_device",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_devices": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_devices.ATestDevice": {
  "lineno": 7,
  "symbols_in_volume": [
   "brian2.devices.device.Device"
  ],
  "type": "class"
 },
 "brian2.tests.test_devices.ATestDevice.activate": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_devices.ATestDevice.add_array": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_devices.ATestDevice.fill_with_array": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_devices.ATestDevice.get_value": {
  "lineno": 13,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.tests.test_devices.ATestDevice.init_with_zeros": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_devices.test_set_reset_device_explicit": {
  "lineno": 53,
  "symbols_in_volume": [
   "brian2.devices.device.all_devices",
   "brian2.devices.device.get_device",
   "brian2.devices.device.reset_device",
   "brian2.devices.device.set_device",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_devices.test_set_reset_device_implicit": {
  "lineno": 22,
  "symbols_in_volume": [
   "brian2.devices.device.all_devices",
   "brian2.devices.device.get_device",
   "brian2.devices.device.previous_devices",
   "brian2.devices.device.reset_device",
   "brian2.devices.device.runtime_device",
   "brian2.devices.device.set_device",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations": {
  "lineno": null,
  "symbols_in_volume": [
   "IPython.lib.pretty.pprint"
  ],
  "type": "module"
 },
 "brian2.tests.test_equations.SimpleGroup": {
  "lineno": 37,
  "symbols_in_volume": [
   "brian2.groups.group.Group"
  ],
  "type": "class"
 },
 "brian2.tests.test_equations.SimpleGroup.__init__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_equations.test_concatenation": {
  "lineno": 411,
  "symbols_in_volume": [
   "brian2.Equations",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations.test_construction_errors": {
  "lineno": 238,
  "symbols_in_volume": [
   "brian2.Equations",
   "brian2.Expression",
   "brian2.equations.equations.DIFFERENTIAL_EQUATION",
   "brian2.equations.equations.EquationError",
   "brian2.equations.equations.SUBEXPRESSION",
   "brian2.equations.equations.SingleEquation",
   "brian2.volt.dim",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations.test_correct_replacements": {
  "lineno": 180,
  "symbols_in_volume": [
   "brian2.Equations",
   "brian2.ms",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations.test_extract_subexpressions": {
  "lineno": 442,
  "symbols_in_volume": [
   "brian2.Equations",
   "brian2.equations.equations.PARAMETER",
   "brian2.equations.equations.SUBEXPRESSION",
   "brian2.equations.equations.extract_constant_subexpressions",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations.test_identifier_checks": {
  "lineno": 70,
  "symbols_in_volume": [
   "brian2.Equations.check_identifier",
   "brian2.Equations.identifier_checks",
   "brian2.Equations.register_identifier_check",
   "brian2.equations.equations.check_identifier_basic",
   "brian2.equations.equations.check_identifier_constants",
   "brian2.equations.equations.check_identifier_functions",
   "brian2.equations.equations.check_identifier_reserved",
   "brian2.equations.equations.check_identifier_units",
   "brian2.equations.refractory.check_identifier_refractory",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations.test_identifier_checks.disallow_gaba_123": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_equations.test_ipython_pprint": {
  "lineno": 485,
  "symbols_in_volume": [
   "IPython.lib.pretty.pprint",
   "StringIO.StringIO",
   "brian2.Equations",
   "nose.SkipTest",
   "nose.plugins.attrib.attr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations.test_parse_equations": {
  "lineno": 125,
  "symbols_in_volume": [
   "brian2.Hz.dim",
   "brian2.equations.equations.BOOLEAN",
   "brian2.equations.equations.DIFFERENTIAL_EQUATION",
   "brian2.equations.equations.EquationError",
   "brian2.equations.equations.FLOAT",
   "brian2.equations.equations.INTEGER",
   "brian2.equations.equations.PARAMETER",
   "brian2.equations.equations.SUBEXPRESSION",
   "brian2.equations.equations.parse_string_equations",
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.volt.dim",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations.test_properties": {
  "lineno": 354,
  "symbols_in_volume": [
   "brian2.Equations",
   "brian2.Expression",
   "brian2.Hz",
   "brian2.Hz.dim",
   "brian2.equations.equations.SingleEquation",
   "brian2.ms",
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.volt",
   "brian2.volt.dim",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations.test_repeated_construction": {
  "lineno": 455,
  "symbols_in_volume": [
   "brian2.Equations",
   "brian2.Expression",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations.test_str_repr": {
  "lineno": 467,
  "symbols_in_volume": [
   "brian2.Equations",
   "brian2.ms",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations.test_substitute": {
  "lineno": 222,
  "symbols_in_volume": [
   "brian2.Equations",
   "brian2.Expression",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations.test_unit_checking": {
  "lineno": 316,
  "symbols_in_volume": [
   "brian2.Equations",
   "brian2.mV",
   "brian2.second",
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.volt",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations.test_unit_checking.S": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.tests.test_equations.test_unit_checking.S.__init__": {
  "lineno": 320,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.get_dimensions"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations.test_utility_functions": {
  "lineno": 42,
  "symbols_in_volume": [
   "brian2.Hz.dim",
   "brian2.Unit",
   "brian2.core.namespace.DEFAULT_UNITS",
   "brian2.equations.equations.BOOLEAN",
   "brian2.equations.equations.FLOAT",
   "brian2.equations.equations.INTEGER",
   "brian2.equations.equations.dimensions_and_type_from_string",
   "brian2.farad.dim",
   "brian2.metre.dim",
   "brian2.ms",
   "brian2.second.dim",
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.volt.dim",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_equations.test_wrong_replacements": {
  "lineno": 195,
  "symbols_in_volume": [
   "brian2.Equations",
   "brian2.equations.equations.EquationError",
   "brian2.mV",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_memory": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_memory.test_dynamic_array_1d_access": {
  "lineno": 7,
  "symbols_in_volume": [
   "brian2.memory.dynamicarray.DynamicArray1D",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_memory.test_dynamic_array_1d_resize_down_up": {
  "lineno": 36,
  "symbols_in_volume": [
   "brian2.memory.dynamicarray.DynamicArray1D",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_memory.test_dynamic_array_1d_resize_up_down": {
  "lineno": 21,
  "symbols_in_volume": [
   "brian2.memory.dynamicarray.DynamicArray1D",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_memory.test_dynamic_array_1d_shrink": {
  "lineno": 51,
  "symbols_in_volume": [
   "brian2.memory.dynamicarray.DynamicArray1D",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_memory.test_dynamic_array_2d_access": {
  "lineno": 63,
  "symbols_in_volume": [
   "brian2.memory.dynamicarray.DynamicArray1D",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_memory.test_dynamic_array_2d_resize_down_up": {
  "lineno": 95,
  "symbols_in_volume": [
   "brian2.memory.dynamicarray.DynamicArray",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_memory.test_dynamic_array_2d_resize_up_down": {
  "lineno": 76,
  "symbols_in_volume": [
   "brian2.memory.dynamicarray.DynamicArray",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.testing.utils.assert_equal",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "brian2.tests.test_memory.test_dynamic_array_2d_shrink": {
  "lineno": 115,
  "symbols_in_volume": [
   "brian2.memory.dynamicarray.DynamicArray",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor": {
  "lineno": null,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "module"
 },
 "brian2.tests.test_monitor.test_event_monitor": {
  "lineno": 156,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_array_equal",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_event_monitor_no_record": {
  "lineno": 196,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_array_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_rate_monitor_1": {
  "lineno": 425,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_rate_monitor_2": {
  "lineno": 438,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_rate_monitor_get_states": {
  "lineno": 504,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_array_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_rate_monitor_smoothed_rate": {
  "lineno": 449,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose",
   "brian2.utils.logger.catch_logs",
   "logging.INFO",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_array_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_rate_monitor_smoothed_rate_incorrect": {
  "lineno": 489,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_rate_monitor_subgroups": {
  "lineno": 518,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_rate_monitor_subgroups_2": {
  "lineno": 537,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_spike_monitor": {
  "lineno": 15,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_array_equal",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_spike_monitor_bug_824": {
  "lineno": 142,
  "symbols_in_volume": [
   "nose.SkipTest",
   "numpy.testing.utils.assert_array_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_spike_monitor_get_states": {
  "lineno": 100,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_array_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_spike_monitor_indexing": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.testing.utils.assert_array_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_spike_monitor_subgroups": {
  "lineno": 122,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_spike_monitor_variables": {
  "lineno": 71,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_array_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_spike_trains": {
  "lineno": 231,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_state_monitor": {
  "lineno": 267,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_array_equal",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_state_monitor_get_states": {
  "lineno": 388,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_array_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_state_monitor_indexing": {
  "lineno": 360,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_array_equal",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_state_monitor_record_single_timestep": {
  "lineno": 342,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_state_monitor_resize": {
  "lineno": 407,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_monitor.test_synapses_state_monitor": {
  "lineno": 248,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_morphology._check_length_coord_consistency": {
  "lineno": 1061,
  "symbols_in_volume": [
   "brian2.numpy.diff",
   "brian2.numpy.sqrt",
   "brian2.numpy.sum",
   "brian2.tests.utils.assert_allclose"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology._check_tree_cables": {
  "lineno": 270,
  "symbols_in_volume": [
   "brian2.numpy.arange",
   "brian2.numpy.ones",
   "brian2.numpy.sqrt",
   "brian2.numpy.zeros",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology._check_tree_soma": {
  "lineno": 485,
  "symbols_in_volume": [
   "brian2.numpy.arange",
   "brian2.numpy.ones",
   "brian2.numpy.sqrt",
   "brian2.numpy.zeros",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_attributes_cylinder": {
  "lineno": 82,
  "symbols_in_volume": [
   "brian2.numpy.arange",
   "brian2.numpy.ones",
   "brian2.numpy.pi",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_equal",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_attributes_cylinder_coordinates": {
  "lineno": 114,
  "symbols_in_volume": [
   "brian2.numpy.arange",
   "brian2.numpy.ones",
   "brian2.numpy.sqrt",
   "brian2.numpy.zeros",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_attributes_section": {
  "lineno": 154,
  "symbols_in_volume": [
   "brian2.numpy.arange",
   "brian2.numpy.ones",
   "brian2.numpy.pi",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_attributes_section_coordinates_all": {
  "lineno": 236,
  "symbols_in_volume": [
   "brian2.numpy.arange",
   "brian2.numpy.ones",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_attributes_section_coordinates_single": {
  "lineno": 190,
  "symbols_in_volume": [
   "brian2.numpy.arange",
   "brian2.numpy.linspace",
   "brian2.numpy.ones",
   "brian2.numpy.sqrt",
   "brian2.numpy.zeros",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_attributes_soma": {
  "lineno": 12,
  "symbols_in_volume": [
   "brian2.numpy.pi",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.cm",
   "brian2.units.um",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_equal",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_attributes_soma_coordinates": {
  "lineno": 43,
  "symbols_in_volume": [
   "brian2.units.um",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_construction_incorrect_arguments": {
  "lineno": 704,
  "symbols_in_volume": [
   "brian2.numpy.ones",
   "brian2.units.DimensionMismatchError",
   "brian2.units.um",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_copy_section_cylinder": {
  "lineno": 1033,
  "symbols_in_volume": [
   "brian2.numpy.ones",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_copy_section_section": {
  "lineno": 1003,
  "symbols_in_volume": [
   "brian2.numpy.ones",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_copy_section_soma": {
  "lineno": 984,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_from_points_incorrect": {
  "lineno": 789,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_from_points_minimal": {
  "lineno": 778,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_generate_coordinates_deterministic": {
  "lineno": 1070,
  "symbols_in_volume": [
   "brian2.numpy.ones",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_generate_coordinates_mixed_overwrite": {
  "lineno": 1236,
  "symbols_in_volume": [
   "brian2.numpy.ones",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_generate_coordinates_no_overwrite": {
  "lineno": 1177,
  "symbols_in_volume": [
   "brian2.numpy.ones",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_generate_coordinates_overwrite": {
  "lineno": 1205,
  "symbols_in_volume": [
   "brian2.numpy.abs",
   "brian2.numpy.ones",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_generate_coordinates_random_all": {
  "lineno": 1150,
  "symbols_in_volume": [
   "brian2.numpy.ones",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_generate_coordinates_random_compartments": {
  "lineno": 1124,
  "symbols_in_volume": [
   "brian2.numpy.ones",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_generate_coordinates_random_sections": {
  "lineno": 1098,
  "symbols_in_volume": [
   "brian2.numpy.ones",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_str_repr": {
  "lineno": 1273,
  "symbols_in_volume": [
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_subgroup_attributes": {
  "lineno": 873,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose",
   "brian2.units.um",
   "brian2.units.um.area",
   "brian2.units.um.diameter",
   "brian2.units.um.distance",
   "brian2.units.um.end_x",
   "brian2.units.um.end_y",
   "brian2.units.um.end_z",
   "brian2.units.um.length",
   "brian2.units.um.r_length_1",
   "brian2.units.um.r_length_2",
   "brian2.units.um.start_x",
   "brian2.units.um.start_y",
   "brian2.units.um.start_z",
   "brian2.units.um.volume",
   "brian2.units.um.x",
   "brian2.units.um.y",
   "brian2.units.um.z",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_subgroup_incorrect": {
  "lineno": 939,
  "symbols_in_volume": [
   "brian2.units.second",
   "brian2.units.um",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_subgroup_indices": {
  "lineno": 851,
  "symbols_in_volume": [
   "brian2.units.um",
   "brian2.units.um.indices",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_subtree_deletion": {
  "lineno": 818,
  "symbols_in_volume": [
   "brian2.units.um",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_topology": {
  "lineno": 967,
  "symbols_in_volume": [
   "brian2.numpy.ones",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_cables_coordinates": {
  "lineno": 375,
  "symbols_in_volume": [
   "brian2.numpy.linspace",
   "brian2.numpy.sqrt",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_cables_from_points": {
  "lineno": 394,
  "symbols_in_volume": [
   "brian2.numpy.sqrt",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_cables_from_swc": {
  "lineno": 443,
  "symbols_in_volume": [
   "os.remove",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_cables_schematic": {
  "lineno": 365,
  "symbols_in_volume": [
   "brian2.numpy.ones",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_soma_coordinates": {
  "lineno": 563,
  "symbols_in_volume": [
   "brian2.numpy.linspace",
   "brian2.numpy.sqrt",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_soma_from_points": {
  "lineno": 575,
  "symbols_in_volume": [
   "brian2.numpy.sqrt",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_soma_from_points_3_point_soma": {
  "lineno": 597,
  "symbols_in_volume": [
   "brian2.numpy.sqrt",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_soma_from_points_3_point_soma_incorrect": {
  "lineno": 623,
  "symbols_in_volume": [
   "brian2.numpy.sqrt",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_soma_from_swc": {
  "lineno": 654,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "os.remove",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_soma_from_swc_3_point_soma": {
  "lineno": 678,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "os.remove",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "brian2.tests.test_morphology.test_tree_soma_schematic": {
  "lineno": 553,
  "symbols_in_volume": [
   "brian2.numpy.ones",
   "brian2.units.um",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_namespaces": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_namespaces.SimpleGroup": {
  "lineno": 18,
  "symbols_in_volume": [
   "brian2.groups.group.Group"
  ],
  "type": "class"
 },
 "brian2.tests.test_namespaces.SimpleGroup.__init__": {
  "lineno": 19,
  "symbols_in_volume": [
   "brian2.groups.group.Group.__init__",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "brian2.tests.test_namespaces._assert_one_warning": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_namespaces.test_default_content": {
  "lineno": 31,
  "symbols_in_volume": [
   "brian2.groups.group.Group",
   "brian2.units.second",
   "brian2.units.stdunits.Hz",
   "brian2.units.stdunits.mV",
   "brian2.units.stdunits.ms",
   "brian2.units.unitsafefunctions.exp",
   "brian2.units.unitsafefunctions.log",
   "brian2.units.unitsafefunctions.sin",
   "brian2.units.volt",
   "nose.plugins.attrib.attr",
   "numpy.e",
   "numpy.inf",
   "numpy.pi",
   "sympy.E",
   "sympy.oo",
   "sympy.pi"
  ],
  "type": "function"
 },
 "brian2.tests.test_namespaces.test_errors": {
  "lineno": 75,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_namespaces.test_explicit_namespace": {
  "lineno": 58,
  "symbols_in_volume": [
   "brian2.utils.logger.catch_logs",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_namespaces.test_resolution": {
  "lineno": 86,
  "symbols_in_volume": [
   "brian2.core.namespace.get_local_namespace",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_namespaces.test_warning": {
  "lineno": 109,
  "symbols_in_volume": [
   "brian2.core.functions.DEFAULT_FUNCTIONS",
   "brian2.core.namespace.get_local_namespace",
   "brian2.units.stdunits.cm",
   "brian2.units.unitsafefunctions.exp",
   "brian2.utils.logger.catch_logs",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_namespaces.test_warning_internal_variables": {
  "lineno": 129,
  "symbols_in_volume": [
   "brian2.core.variables.Constant",
   "brian2.utils.logger.catch_logs",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_network": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.BrianLogger.log_level_warn",
   "brian2.devices.device.all_devices",
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.set_device"
  ],
  "type": "module"
 },
 "brian2.tests.test_network.Counter": {
  "lineno": 61,
  "symbols_in_volume": [
   "brian2.BrianObject"
  ],
  "type": "class"
 },
 "brian2.tests.test_network.Counter.__init__": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.Counter.run": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.NameLister": {
  "lineno": 112,
  "symbols_in_volume": [
   "brian2.BrianObject"
  ],
  "type": "class"
 },
 "brian2.tests.test_network.NameLister.__init__": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.NameLister.run": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.NoninvalidatingCounter": {
  "lineno": 576,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.tests.test_network.Preparer": {
  "lineno": 359,
  "symbols_in_volume": [
   "brian2.BrianObject"
  ],
  "type": "class"
 },
 "brian2.tests.test_network.Preparer.__init__": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.Preparer.after_run": {
  "lineno": 370,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.Preparer.before_run": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.Preparer.reinit": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.Stopper": {
  "lineno": 387,
  "symbols_in_volume": [
   "brian2.BrianObject"
  ],
  "type": "class"
 },
 "brian2.tests.test_network.Stopper.__init__": {
  "lineno": 389,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.Stopper.run": {
  "lineno": 394,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.captured_output": {
  "lineno": 783,
  "symbols_in_volume": [
   "StringIO.StringIO",
   "contextlib.contextmanager",
   "sys.stderr",
   "sys.stdout"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_continuation": {
  "lineno": 1206,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.StateMonitor",
   "brian2.defaultclock.dt",
   "brian2.ms",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_defaultclock_dt_changes": {
  "lineno": 1157,
  "symbols_in_volume": [
   "brian2.BrianLogger.suppress_name",
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.StateMonitor",
   "brian2.defaultclock.dt",
   "brian2.ms",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_dependency_check": {
  "lineno": 698,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.ms",
   "brian2.restore_initial_state",
   "brian2.run",
   "brian2.utils.logger.catch_logs",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_dependency_check.create_net": {
  "lineno": 701,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.PopulationRateMonitor",
   "brian2.SpikeMonitor",
   "brian2.StateMonitor",
   "brian2.Synapses"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_dt_changes_between_runs": {
  "lineno": 1169,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.StateMonitor",
   "brian2.defaultclock.dt",
   "brian2.devices.device.device.build",
   "brian2.devices.device.device.build_options",
   "brian2.devices.device.reinit_devices",
   "brian2.ms",
   "brian2.run",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_dt_restore": {
  "lineno": 1185,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.StateMonitor",
   "brian2.defaultclock.dt",
   "brian2.ms",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_empty_network": {
  "lineno": 54,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.restore_initial_state",
   "brian2.second",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_get_set_states": {
  "lineno": 1228,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.magic_network.get_states",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.arange",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_incorrect_dt_custom_clock": {
  "lineno": 544,
  "symbols_in_volume": [
   "brian2.Clock",
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.ms",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_incorrect_dt_defaultclock": {
  "lineno": 533,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.defaultclock.dt",
   "brian2.ms",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_incorrect_network_operations": {
  "lineno": 451,
  "symbols_in_volume": [
   "brian2.NetworkOperation",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_incorrect_network_operations.Container": {
  "lineno": 468,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.tests.test_network.test_incorrect_network_operations.Container.func": {
  "lineno": 469,
  "symbols_in_volume": [
   "brian2.network_operation"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_incorrect_network_operations.func": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.test_incorrect_network_use": {
  "lineno": 27,
  "symbols_in_volume": [
   "brian2.MagicError",
   "brian2.MagicNetwork",
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.magic_network.add",
   "brian2.magic_network.remove",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_invalid_magic_network": {
  "lineno": 580,
  "symbols_in_volume": [
   "brian2.MagicError",
   "brian2.magic_network.t",
   "brian2.ms",
   "brian2.restore_initial_state",
   "brian2.run",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_long_run_dt_change": {
  "lineno": 1376,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.defaultclock.dt",
   "brian2.devices.device.reinit_devices",
   "brian2.ms",
   "brian2.run",
   "brian2.second",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_loop": {
  "lineno": 729,
  "symbols_in_volume": [
   "brian2.restore_initial_state",
   "brian2.utils.logger.catch_logs",
   "logging.DEBUG",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_loop.run_simulation": {
  "lineno": 734,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.ms",
   "brian2.run",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_magic_collect": {
  "lineno": 762,
  "symbols_in_volume": [
   "brian2.Hz",
   "brian2.NeuronGroup",
   "brian2.PoissonGroup",
   "brian2.PopulationRateMonitor",
   "brian2.SpikeMonitor",
   "brian2.StateMonitor",
   "brian2.Synapses",
   "brian2.collect",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_magic_network": {
  "lineno": 374,
  "symbols_in_volume": [
   "brian2.magic_network",
   "brian2.ms",
   "brian2.restore_initial_state",
   "brian2.run",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_magic_scope": {
  "lineno": 1323,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.collect",
   "brian2.restore_initial_state",
   "brian2.start_scope",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_magic_unused_object": {
  "lineno": 653,
  "symbols_in_volume": [
   "brian2.ms",
   "brian2.restore_initial_state",
   "brian2.run",
   "brian2.utils.logger.catch_logs",
   "logging.DEBUG",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_magic_unused_object.create_group": {
  "lineno": 657,
  "symbols_in_volume": [
   "brian2.NeuronGroup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_magic_weak_reference": {
  "lineno": 633,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.ms",
   "brian2.restore_initial_state",
   "brian2.run",
   "brian2.utils.logger.catch_logs",
   "logging.DEBUG",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "weakref.ref"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_networks_invalid": {
  "lineno": 614,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.ms",
   "brian2.restore_initial_state",
   "brian2.run",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_constant_change": {
  "lineno": 1387,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.StateMonitor",
   "brian2.defaultclock.dt",
   "brian2.devices.device.device.build",
   "brian2.devices.device.device.build_options",
   "brian2.devices.device.reinit_devices",
   "brian2.run",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_defaultclock": {
  "lineno": 1249,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.defaultclock.dt",
   "brian2.ms",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_defaultclock_incorrect": {
  "lineno": 1265,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.defaultclock.dt",
   "brian2.ms",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_function_change": {
  "lineno": 1400,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.StateMonitor",
   "brian2.TimedArray",
   "brian2.defaultclock.dt",
   "brian2.devices.device.device.build",
   "brian2.devices.device.device.build_options",
   "brian2.devices.device.reinit_devices",
   "brian2.run",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_report_standalone": {
  "lineno": 859,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.devices.device.device.build",
   "brian2.devices.device.device.build_options",
   "brian2.devices.device.reinit_devices",
   "brian2.ms",
   "brian2.run",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_report_standalone_2": {
  "lineno": 868,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.devices.device.device.build",
   "brian2.devices.device.device.build_options",
   "brian2.devices.device.reinit_devices",
   "brian2.ms",
   "brian2.run",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_report_standalone_3": {
  "lineno": 877,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.devices.device.device.build",
   "brian2.devices.device.device.build_options",
   "brian2.devices.device.reinit_devices",
   "brian2.ms",
   "brian2.run",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_multiple_runs_report_standalone_incorrect": {
  "lineno": 888,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.set_device",
   "brian2.ms",
   "brian2.run",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_access": {
  "lineno": 673,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_active_flag": {
  "lineno": 476,
  "symbols_in_volume": [
   "brian2.ms",
   "brian2.restore_initial_state",
   "brian2.run",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_before_after_schedule": {
  "lineno": 171,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.ms",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_contains": {
  "lineno": 43,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_custom_slots": {
  "lineno": 182,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.ms",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_default_schedule": {
  "lineno": 147,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.prefs.core.network.default_schedule",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_different_clocks": {
  "lineno": 123,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.defaultclock.dt",
   "brian2.ms",
   "brian2.restore_initial_state",
   "brian2.second",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_different_when": {
  "lineno": 136,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.ms",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_from_dict": {
  "lineno": 97,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.ms",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_incorrect_schedule": {
  "lineno": 194,
  "symbols_in_volume": [
   "brian2.Network",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations": {
  "lineno": 415,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NetworkOperation",
   "brian2.ms",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations.Container": {
  "lineno": 432,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.tests.test_network.test_network_operations.Container.__init__": {
  "lineno": 433,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations.Container.g1": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations.Container.g2": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations.f1": {
  "lineno": 420,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations.f2": {
  "lineno": 423,
  "symbols_in_volume": [
   "brian2.network_operation"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_operations.f3": {
  "lineno": 426,
  "symbols_in_volume": [
   "brian2.network_operation"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_remove": {
  "lineno": 555,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.ms",
   "brian2.restore_initial_state",
   "copy.copy",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_schedule_change": {
  "lineno": 156,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.ms",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_single_object": {
  "lineno": 71,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.ms",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_stop": {
  "lineno": 399,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.defaultclock.t",
   "brian2.ms",
   "brian2.restore_initial_state",
   "brian2.stop",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_t": {
  "lineno": 488,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.magic_network.t",
   "brian2.ms",
   "brian2.restore_initial_state",
   "brian2.run",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_network_two_objects": {
  "lineno": 81,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.ms",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_profile": {
  "lineno": 1279,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.devices.device.reinit_devices",
   "brian2.ms",
   "brian2.second",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_profile_ipython_html": {
  "lineno": 1312,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.ms",
   "brian2.profiling_summary",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_profile_off": {
  "lineno": 1302,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.devices.device.reinit_devices",
   "brian2.ms",
   "brian2.profiling_summary",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_progress_report": {
  "lineno": 794,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.ms",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_progress_report.capture_progress": {
  "lineno": 837,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.test_progress_report_incorrect": {
  "lineno": 848,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.ms",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_runtime_rounding": {
  "lineno": 1340,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.StateMonitor",
   "brian2.defaultclock.dt",
   "brian2.devices.device.reinit_devices",
   "brian2.run",
   "brian2.us",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_schedule_warning": {
  "lineno": 211,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.core.network.schedule_propagation_offset",
   "brian2.defaultclock.dt",
   "brian2.devices.device.all_devices",
   "brian2.devices.device.get_device",
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.reset_device",
   "brian2.devices.device.set_device",
   "brian2.ms",
   "brian2.utils.logger.catch_logs",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_schedule_warning.TestDevice1": {
  "lineno": 217,
  "symbols_in_volume": [
   "brian2.devices.device.Device"
  ],
  "type": "class"
 },
 "brian2.tests.test_network.test_schedule_warning.TestDevice1.add_array": {
  "lineno": 221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.test_schedule_warning.TestDevice1.fill_with_array": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.test_schedule_warning.TestDevice1.get_value": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_schedule_warning.TestDevice1.init_with_zeros": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.test_schedule_warning.TestDevice2": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.tests.test_network.test_schedule_warning.TestDevice2.__init__": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_network.test_scheduling_summary": {
  "lineno": 314,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.StateMonitor",
   "brian2.core.network.scheduling_summary",
   "brian2.defaultclock.dt",
   "brian2.run",
   "nose.plugins.attrib.attr",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_scheduling_summary_magic": {
  "lineno": 271,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.StateMonitor",
   "brian2.core.network.scheduling_summary",
   "brian2.defaultclock.dt",
   "brian2.run",
   "nose.plugins.attrib.attr",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_small_runs": {
  "lineno": 1351,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.StateMonitor",
   "brian2.ms",
   "brian2.second",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore": {
  "lineno": 897,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.SpikeMonitor",
   "brian2.StateMonitor",
   "brian2.Synapses",
   "brian2.defaultclock.t",
   "brian2.ms",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore_magic": {
  "lineno": 1056,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.SpikeMonitor",
   "brian2.StateMonitor",
   "brian2.Synapses",
   "brian2.defaultclock.t",
   "brian2.magic_network.t",
   "brian2.ms",
   "brian2.restore",
   "brian2.restore_initial_state",
   "brian2.run",
   "brian2.store",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore_magic_to_file": {
  "lineno": 1094,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.SpikeMonitor",
   "brian2.StateMonitor",
   "brian2.Synapses",
   "brian2.defaultclock.t",
   "brian2.magic_network.t",
   "brian2.ms",
   "brian2.restore",
   "brian2.restore_initial_state",
   "brian2.run",
   "brian2.store",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal",
   "os.remove",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore_spikequeue": {
  "lineno": 1137,
  "symbols_in_volume": [
   "brian2.NeuronGroup",
   "brian2.SpikeGeneratorGroup",
   "brian2.Synapses",
   "brian2.defaultclock.dt",
   "brian2.ms",
   "brian2.restore",
   "brian2.restore_initial_state",
   "brian2.run",
   "brian2.store",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore_to_file": {
  "lineno": 939,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.SpikeMonitor",
   "brian2.StateMonitor",
   "brian2.Synapses",
   "brian2.defaultclock.t",
   "brian2.ms",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_equal",
   "os.remove",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore_to_file_differing_nets": {
  "lineno": 1035,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.SpikeGeneratorGroup",
   "brian2.SpikeMonitor",
   "brian2.ms",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore_to_file_new_objects": {
  "lineno": 981,
  "symbols_in_volume": [
   "brian2.Quantity",
   "brian2.ms",
   "nose.plugins.attrib.attr",
   "numpy.array",
   "numpy.testing.assert_equal",
   "os.remove",
   "tempfile.mktemp"
  ],
  "type": "function"
 },
 "brian2.tests.test_network.test_store_restore_to_file_new_objects.create_net": {
  "lineno": 985,
  "symbols_in_volume": [
   "brian2.Network",
   "brian2.NeuronGroup",
   "brian2.SpikeGeneratorGroup",
   "brian2.SpikeMonitor",
   "brian2.StateMonitor",
   "brian2.Synapses",
   "brian2.ms",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs.codegen.target"
  ],
  "type": "module"
 },
 "brian2.tests.test_neurongroup.test_aliasing_in_statements": {
  "lineno": 1312,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.network.Network",
   "brian2.core.preferences.prefs.codegen.target",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.SkipTest",
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_constant_subexpression_order": {
  "lineno": 1198,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_constant_variable_subexpression": {
  "lineno": 1172,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.sum"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_creation": {
  "lineno": 31,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_custom_events": {
  "lineno": 735,
  "symbols_in_volume": [
   "brian2.core.network.Network",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_custom_events_schedule": {
  "lineno": 748,
  "symbols_in_volume": [
   "brian2.core.network.Network",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.stdunits.ms"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_get_dtype": {
  "lineno": 1270,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs",
   "brian2.equations.equations.Equations",
   "brian2.groups.group.get_dtype",
   "nose.plugins.attrib.attr",
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_get_states": {
  "lineno": 1330,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.allunits.volt",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_get_states_pandas": {
  "lineno": 1382,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.SkipTest",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_incomplete_namespace": {
  "lineno": 549,
  "symbols_in_volume": [
   "brian2.core.network.Network",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_incorrect_custom_event_definition": {
  "lineno": 765,
  "symbols_in_volume": [
   "brian2.core.network.Network",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.mV",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_indices": {
  "lineno": 1251,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "numpy.nonzero",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_integer_variables_and_mod": {
  "lineno": 55,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "numpy.random.rand",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_ipython_html": {
  "lineno": 1241,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_double_linked1": {
  "lineno": 281,
  "symbols_in_volume": [
   "brian2.core.variables.linked_var",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_double_linked2": {
  "lineno": 295,
  "symbols_in_volume": [
   "brian2.core.variables.linked_var",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_double_linked3": {
  "lineno": 310,
  "symbols_in_volume": [
   "brian2.core.variables.linked_var",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_double_linked4": {
  "lineno": 324,
  "symbols_in_volume": [
   "brian2.core.variables.linked_var",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_subexpression": {
  "lineno": 383,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.core.variables.linked_var",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.monitors.statemonitor.StateMonitor",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_subexpression_2": {
  "lineno": 404,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.core.variables.linked_var",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.monitors.statemonitor.StateMonitor",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_subexpression_3": {
  "lineno": 424,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.core.variables.linked_var",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.monitors.statemonitor.StateMonitor",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_subexpression_synapse": {
  "lineno": 447,
  "symbols_in_volume": [
   "brian2.core.variables.linked_var",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.synapses.synapses.Synapses",
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_subgroup": {
  "lineno": 357,
  "symbols_in_volume": [
   "brian2.core.variables.linked_var",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_subgroup2": {
  "lineno": 370,
  "symbols_in_volume": [
   "brian2.core.variables.linked_var",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_synapses": {
  "lineno": 495,
  "symbols_in_volume": [
   "brian2.core.variables.linked_var",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.synapses.synapses.Synapses",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_triple_linked": {
  "lineno": 338,
  "symbols_in_volume": [
   "brian2.core.variables.linked_var",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_var_in_reset": {
  "lineno": 506,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.magic.run",
   "brian2.core.variables.linked_var",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_var_in_reset_incorrect": {
  "lineno": 534,
  "symbols_in_volume": [
   "brian2.core.network.Network",
   "brian2.core.variables.linked_var",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_var_in_reset_size_1": {
  "lineno": 520,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.magic.run",
   "brian2.core.variables.linked_var",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_variable_correct": {
  "lineno": 186,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.core.variables.linked_var",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.monitors.statemonitor.StateMonitor",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.stdunits.mV",
   "brian2.units.stdunits.ms",
   "brian2.units.unitsafefunctions.linspace",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_variable_incorrect": {
  "lineno": 207,
  "symbols_in_volume": [
   "brian2.core.variables.linked_var",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_variable_indexed": {
  "lineno": 257,
  "symbols_in_volume": [
   "brian2.core.variables.linked_var",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_variable_indexed_incorrect": {
  "lineno": 470,
  "symbols_in_volume": [
   "brian2.core.variables.linked_var",
   "brian2.groups.neurongroup.NeuronGroup",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_variable_repeat": {
  "lineno": 270,
  "symbols_in_volume": [
   "brian2.core.variables.linked_var",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_linked_variable_scalar": {
  "lineno": 228,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.magic.run",
   "brian2.core.variables.linked_var",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.monitors.statemonitor.StateMonitor",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.isscalar",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_namespace_errors": {
  "lineno": 566,
  "symbols_in_volume": [
   "brian2.core.network.Network",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_namespace_warnings": {
  "lineno": 584,
  "symbols_in_volume": [
   "brian2.core.network.Network",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.Hz",
   "brian2.units.stdunits.ms",
   "brian2.utils.logger.catch_logs",
   "nose.plugins.attrib.attr",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_no_code": {
  "lineno": 1500,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_random_values_fixed_and_random": {
  "lineno": 1478,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.magic.run",
   "brian2.devices.device.seed",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.monitors.statemonitor.StateMonitor",
   "brian2.tests.utils.assert_allclose",
   "numpy.array",
   "numpy.var"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_random_values_fixed_seed": {
  "lineno": 1463,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.seed",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.var"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_random_values_random_seed": {
  "lineno": 1448,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.devices.device.seed",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.var"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_random_vector_values": {
  "lineno": 1434,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.network.Network",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.ms",
   "numpy.var"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_referred_scalar_variable": {
  "lineno": 170,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.allunits.second",
   "brian2.units.stdunits.Hz",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_repr": {
  "lineno": 1228,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "nose.plugins.attrib.attr",
   "sympy.latex"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_run_regularly_dt": {
  "lineno": 1530,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.monitors.statemonitor.StateMonitor",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.diff",
   "numpy.tile"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_run_regularly_scheduling": {
  "lineno": 1515,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_scalar_parameter_access": {
  "lineno": 1100,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.stdunits.Hz",
   "nose.plugins.attrib.attr",
   "numpy.asanyarray",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_scalar_subexpression": {
  "lineno": 1132,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.Hz",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_scalar_variable": {
  "lineno": 150,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.network.Network",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.stdunits.mV",
   "brian2.units.stdunits.ms"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_semantics_floating_point_division": {
  "lineno": 1572,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.utils.logger.catch_logs",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.arange",
   "numpy.double",
   "numpy.float",
   "numpy.int32",
   "numpy.int64"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_semantics_floor_division": {
  "lineno": 1541,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.utils.logger.catch_logs",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.arange",
   "numpy.double",
   "numpy.float",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_semantics_mod": {
  "lineno": 1607,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.utils.logger.catch_logs",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.arange",
   "numpy.double",
   "numpy.float",
   "numpy.int32",
   "numpy.int64",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_set_states": {
  "lineno": 1359,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.allunits.volt",
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_set_states_pandas": {
  "lineno": 1409,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.allunits.volt",
   "nose.SkipTest",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.array",
   "numpy.testing.utils.assert_raises",
   "numpy.vstack",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_sim_with_scalar_subexpression": {
  "lineno": 1162,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.exp",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_sim_with_scalar_variable": {
  "lineno": 1151,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.exp",
   "numpy.linspace"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_state_variable_access": {
  "lineno": 868,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.allunits.volt",
   "brian2.units.fundamentalunits.have_same_dimensions",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_state_variable_access_strings": {
  "lineno": 897,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.allunits.volt",
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.stdunits.ms",
   "numpy.arange",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_state_variable_set_strings": {
  "lineno": 912,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.allunits.volt",
   "brian2.units.stdunits.mV",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.arange",
   "numpy.isinf",
   "numpy.var",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_state_variables": {
  "lineno": 782,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.allunits.second",
   "brian2.units.allunits.volt",
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.stdunits.mV",
   "numpy.arange",
   "numpy.mean",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_stochastic_variable": {
  "lineno": 127,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_stochastic_variable_multiplicative": {
  "lineno": 138,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.allunits.second",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_subexpression": {
  "lineno": 1043,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.stdunits.Hz",
   "nose.plugins.attrib.attr",
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_subexpression_checks": {
  "lineno": 1211,
  "symbols_in_volume": [
   "brian2.core.network.Network",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_subexpression_with_constant": {
  "lineno": 1053,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "numpy.array",
   "numpy.mean",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_syntax_errors": {
  "lineno": 715,
  "symbols_in_volume": [
   "brian2.core.network.Network",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_threshold_reset": {
  "lineno": 649,
  "symbols_in_volume": [
   "brian2.core.clocks.defaultclock.dt",
   "brian2.core.magic.run",
   "brian2.devices.device.reinit_devices",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_unit_errors_threshold_reset": {
  "lineno": 662,
  "symbols_in_volume": [
   "brian2.core.magic.run",
   "brian2.core.network.Network",
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_unknown_state_variables": {
  "lineno": 1027,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_variables": {
  "lineno": 75,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_neurongroup.test_variableview_calculations": {
  "lineno": 91,
  "symbols_in_volume": [
   "brian2.groups.neurongroup.NeuronGroup",
   "brian2.tests.utils.assert_allclose",
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.stdunits.mV",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_numpy_codegen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_numpy_codegen.test_error_message": {
  "lineno": 5,
  "symbols_in_volume": [
   "nose.plugins.skip.SkipTest"
  ],
  "type": "function"
 },
 "brian2.tests.test_numpy_codegen.test_error_message.foo": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_poissongroup": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_poissongroup.test_poissongroup_namespace": {
  "lineno": 105,
  "symbols_in_volume": [
   "brian2.utils.logger.catch_logs",
   "nose.plugins.attrib.attr",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "brian2.tests.test_poissongroup.test_poissongroup_subgroup": {
  "lineno": 87,
  "symbols_in_volume": [
   "brian2.core.network.schedule_propagation_offset",
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_poissongroup.test_propagation": {
  "lineno": 74,
  "symbols_in_volume": [
   "brian2.core.network.schedule_propagation_offset",
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_poissongroup.test_rate_arrays": {
  "lineno": 29,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_poissongroup.test_rate_unit_check": {
  "lineno": 38,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_poissongroup.test_single_rates": {
  "lineno": 13,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_poissongroup.test_time_dependent_rate": {
  "lineno": 54,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_poissoninput": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices"
  ],
  "type": "module"
 },
 "brian2.tests.test_poissoninput.test_poissoninput": {
  "lineno": 11,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_poissoninput.test_poissoninput_errors": {
  "lineno": 51,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_poissoninput.test_poissoninput_refractory": {
  "lineno": 73,
  "symbols_in_volume": [
   "brian2.core.network.schedule_propagation_offset",
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_preferences": {
  "lineno": null,
  "symbols_in_volume": [
   "brian2.restore_initial_state"
  ],
  "type": "module"
 },
 "brian2.tests.test_preferences.test_brianglobalpreferences": {
  "lineno": 76,
  "symbols_in_volume": [
   "StringIO.StringIO",
   "brian2.amp",
   "brian2.core.preferences.BrianGlobalPreferences",
   "brian2.core.preferences.BrianPreference",
   "brian2.core.preferences.PreferenceError",
   "brian2.restore_initial_state",
   "brian2.volt",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.float32",
   "numpy.float64",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_preferences.test_brianpreference": {
  "lineno": 29,
  "symbols_in_volume": [
   "brian2.core.preferences.BrianPreference",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_preferences.test_defaultvalidator": {
  "lineno": 13,
  "symbols_in_volume": [
   "brian2.amp",
   "brian2.core.preferences.DefaultValidator",
   "brian2.restore_initial_state",
   "brian2.volt",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_preferences.test_preference_name_access": {
  "lineno": 170,
  "symbols_in_volume": [
   "brian2.core.preferences.BrianGlobalPreferences",
   "brian2.core.preferences.BrianGlobalPreferencesView",
   "brian2.core.preferences.BrianPreference",
   "brian2.core.preferences.PreferenceError",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_preferences.test_preference_name_checking": {
  "lineno": 40,
  "symbols_in_volume": [
   "brian2.core.preferences.BrianGlobalPreferences",
   "brian2.core.preferences.BrianPreference",
   "brian2.core.preferences.PreferenceError",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_preferences.test_str_repr": {
  "lineno": 270,
  "symbols_in_volume": [
   "brian2.core.preferences.BrianGlobalPreferences",
   "brian2.core.preferences.BrianPreference",
   "brian2.restore_initial_state",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_refractory": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_refractory.test_add_refractoriness": {
  "lineno": 14,
  "symbols_in_volume": [
   "brian2.equations.refractory.add_refractoriness",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_refractory.test_conditional_write_automatic_and_manual": {
  "lineno": 239,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_refractory.test_conditional_write_behaviour": {
  "lineno": 206,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_refractory.test_conditional_write_set": {
  "lineno": 196,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_refractory.test_missing_refractory_warning": {
  "lineno": 28,
  "symbols_in_volume": [
   "brian2.utils.logger.catch_logs",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_refractory.test_refractoriness_basic": {
  "lineno": 38,
  "symbols_in_volume": [
   "brian2.core.functions.timestep",
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_refractory.test_refractoriness_repeated": {
  "lineno": 125,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_refractory.test_refractoriness_repeated_legacy": {
  "lineno": 136,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "collections.Counter",
   "nose.SkipTest",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_refractory.test_refractoriness_threshold": {
  "lineno": 158,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_refractory.test_refractoriness_threshold_basic": {
  "lineno": 111,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_refractory.test_refractoriness_types": {
  "lineno": 184,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_refractory.test_refractoriness_variables": {
  "lineno": 65,
  "symbols_in_volume": [
   "brian2.core.functions.timestep",
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_spatialneuron.test_allowed_integration": {
  "lineno": 571,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_allowed_integration.user_fun": {
  "lineno": 582,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_basic_diffusion": {
  "lineno": 540,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_construction": {
  "lineno": 34,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_construction_coordinates": {
  "lineno": 89,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_custom_events": {
  "lineno": 13,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_finitecable": {
  "lineno": 199,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.SkipTest",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_infinitecable": {
  "lineno": 155,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_rall": {
  "lineno": 469,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.SkipTest",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_rallpack1": {
  "lineno": 242,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.SkipTest",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_rallpack2": {
  "lineno": 303,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.SkipTest",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_rallpack3": {
  "lineno": 387,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.SkipTest",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "os.path.abspath",
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_spatialneuron_capacitive_currents": {
  "lineno": 774,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.SkipTest",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_spatialneuron_indexing": {
  "lineno": 629,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_spatialneuron_morphology_assignment": {
  "lineno": 748,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_spatialneuron_subtree_assignment": {
  "lineno": 723,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_spatialneuron.test_tree_index_consistency": {
  "lineno": 673,
  "symbols_in_volume": [
   "itertools.product",
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_spikequeue": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_spikequeue.create_all_to_all": {
  "lineno": 10,
  "symbols_in_volume": [
   "brian2.memory.dynamicarray.DynamicArray1D",
   "numpy.arange",
   "numpy.float64",
   "numpy.int32",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "brian2.tests.test_spikequeue.create_one_to_one": {
  "lineno": 23,
  "symbols_in_volume": [
   "brian2.memory.dynamicarray.DynamicArray1D",
   "numpy.arange",
   "numpy.float64",
   "numpy.int32"
  ],
  "type": "function"
 },
 "brian2.tests.test_spikequeue.test_spikequeue": {
  "lineno": 36,
  "symbols_in_volume": [
   "brian2.synapses.spikequeue.SpikeQueue",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.array",
   "numpy.int32",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_subgroup.test_alternative_indexing": {
  "lineno": 668,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_no_reference_1": {
  "lineno": 677,
  "symbols_in_volume": [
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_no_reference_2": {
  "lineno": 686,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_no_reference_3": {
  "lineno": 704,
  "symbols_in_volume": [
   "brian2.core.network.schedule_propagation_offset",
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_no_reference_4": {
  "lineno": 718,
  "symbols_in_volume": [
   "brian2.core.network.schedule_propagation_offset",
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_recursive_subgroup": {
  "lineno": 736,
  "symbols_in_volume": [
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_run_regularly": {
  "lineno": 599,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_array_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_shared_variable": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_spike_monitor": {
  "lineno": 622,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_state_monitor": {
  "lineno": 128,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_state_variables": {
  "lineno": 24,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose",
   "numpy.testing.utils.assert_equal",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_state_variables_group_as_index": {
  "lineno": 101,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_state_variables_group_as_index_problematic": {
  "lineno": 112,
  "symbols_in_volume": [
   "brian2.utils.logger.catch_logs",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_state_variables_simple": {
  "lineno": 62,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_state_variables_string_indices": {
  "lineno": 85,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_str_repr": {
  "lineno": 12,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_subexpression_no_references": {
  "lineno": 530,
  "symbols_in_volume": [
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_subexpression_references": {
  "lineno": 492,
  "symbols_in_volume": [
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_subgroup_summed_variable": {
  "lineno": 472,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_array_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapse_access": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapse_creation": {
  "lineno": 153,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapse_creation_generator": {
  "lineno": 213,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapse_creation_generator_complex_ranges": {
  "lineno": 321,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapse_creation_generator_multiple_synapses": {
  "lineno": 262,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapse_creation_generator_random": {
  "lineno": 356,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapse_creation_state_vars": {
  "lineno": 177,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapses_access_subgroups": {
  "lineno": 415,
  "symbols_in_volume": [
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synapses_access_subgroups_problematic": {
  "lineno": 435,
  "symbols_in_volume": [
   "brian2.utils.logger.catch_logs",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synaptic_propagation": {
  "lineno": 569,
  "symbols_in_volume": [
   "brian2.core.network.schedule_propagation_offset",
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.utils.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_synaptic_propagation_2": {
  "lineno": 586,
  "symbols_in_volume": [
   "brian2.core.network.schedule_propagation_offset",
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_subgroup.test_wrong_indexing": {
  "lineno": 650,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_templates": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_templates.fake_package_1": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_templates.fake_package_2": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_templates.test_templates": {
  "lineno": 6,
  "symbols_in_volume": [
   "brian2.codegen.templates.Templater",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_thresholder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_thresholder.test_scalar_threshold": {
  "lineno": 17,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_thresholder.test_simple_threshold": {
  "lineno": 8,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "nose.plugins.attrib.attr",
   "nose.with_setup",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_timedarray": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_timedarray.test_long_timedarray": {
  "lineno": 101,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_2d": {
  "lineno": 62,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_direct_use": {
  "lineno": 11,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_incorrect_use": {
  "lineno": 75,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "numpy.testing.utils.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_no_units": {
  "lineno": 44,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_no_upsampling": {
  "lineno": 88,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_repeated_use": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_semantics": {
  "lineno": 32,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_timedarray.test_timedarray_with_units": {
  "lineno": 53,
  "symbols_in_volume": [
   "brian2.devices.device.reinit_devices",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr",
   "nose.with_setup"
  ],
  "type": "function"
 },
 "brian2.tests.test_units": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.__version__"
  ],
  "type": "module"
 },
 "brian2.tests.test_units.assert_quantity": {
  "lineno": 44,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.get_dimensions",
   "brian2.units.fundamentalunits.have_same_dimensions",
   "numpy.asarray",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_addition_subtraction": {
  "lineno": 329,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.stdunits.mV",
   "nose.plugins.attrib.attr",
   "numpy.array",
   "numpy.asarray",
   "numpy.float64",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_all_units_list": {
  "lineno": 1142,
  "symbols_in_volume": [
   "brian2.units.allunits.all_units",
   "brian2.units.fundamentalunits.Unit",
   "brian2.units.stdunits.Hz",
   "brian2.units.stdunits.cm",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_arange_linspace": {
  "lineno": 903,
  "symbols_in_volume": [
   "brian2.arange",
   "brian2.linspace",
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.stdunits.mV",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.linspace",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_binary_operations": {
  "lineno": 398,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "numpy.all",
   "numpy.array",
   "numpy.inf"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_binary_operations.assert_operations_do_not_work": {
  "lineno": 425,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "numpy.add",
   "numpy.equal",
   "numpy.greater",
   "numpy.greater_equal",
   "numpy.less",
   "numpy.less_equal",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.not_equal",
   "numpy.subtract",
   "numpy.testing.assert_raises",
   "operator.add",
   "operator.eq",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "operator.ne",
   "operator.sub"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_binary_operations.assert_operations_work": {
  "lineno": 406,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "numpy.add",
   "numpy.equal",
   "numpy.greater",
   "numpy.greater_equal",
   "numpy.less",
   "numpy.less_equal",
   "numpy.maximum",
   "numpy.minimum",
   "numpy.not_equal",
   "numpy.subtract",
   "operator.add",
   "operator.eq",
   "operator.ge",
   "operator.gt",
   "operator.le",
   "operator.lt",
   "operator.ne",
   "operator.sub"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_check_units": {
  "lineno": 951,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.stdunits.mV",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_check_units.a_function": {
  "lineno": 956,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.check_units"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_check_units.b_function": {
  "lineno": 979,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.check_units"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_check_units.c_function": {
  "lineno": 995,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.check_units"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_constants": {
  "lineno": 1151,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose",
   "brian2.units.constants.avogadro_constant",
   "brian2.units.constants.avogadro_constant.dim",
   "brian2.units.constants.boltzmann_constant",
   "brian2.units.constants.boltzmann_constant.dim",
   "brian2.units.constants.electric_constant.dim",
   "brian2.units.constants.electron_mass.dim",
   "brian2.units.constants.elementary_charge",
   "brian2.units.constants.elementary_charge.dim",
   "brian2.units.constants.faraday_constant",
   "brian2.units.constants.faraday_constant.dim",
   "brian2.units.constants.gas_constant",
   "brian2.units.constants.gas_constant.dim",
   "brian2.units.constants.magnetic_constant.dim",
   "brian2.units.constants.molar_mass_constant.dim",
   "brian2.units.constants.zero_celsius.dim",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_construction": {
  "lineno": 54,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.Quantity.with_dimensions",
   "brian2.units.fundamentalunits.Unit",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "numpy.array",
   "numpy.asarray",
   "numpy.float64",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_deepcopy": {
  "lineno": 1081,
  "symbols_in_volume": [
   "copy.deepcopy",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_display": {
  "lineno": 140,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.fundamentalunits.Unit",
   "brian2.units.fundamentalunits.in_unit",
   "brian2.units.stdunits.mV",
   "brian2.units.stdunits.nS",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_fail_for_dimension_mismatch": {
  "lineno": 1057,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.fundamentalunits.fail_for_dimension_mismatch",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_get_best_unit": {
  "lineno": 1024,
  "symbols_in_volume": [
   "brian2.units.stdunits.mV",
   "brian2.units.stdunits.ms",
   "brian2.units.stdunits.nS",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.ones"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_get_dimensions": {
  "lineno": 108,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.units.fundamentalunits.get_dimensions",
   "brian2.units.fundamentalunits.get_or_create_dimension",
   "brian2.units.fundamentalunits.is_scalar_type",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_get_unit": {
  "lineno": 1009,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.Unit",
   "brian2.units.fundamentalunits.get_unit",
   "brian2.units.stdunits.mV.dim",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_inplace_on_scalars": {
  "lineno": 1092,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.stdunits.mV",
   "nose.plugins.attrib.attr",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_inplace_operations": {
  "lineno": 517,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "nose.plugins.attrib.attr",
   "numpy.all",
   "numpy.arange",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_inplace_operations.illegal_add": {
  "lineno": 536,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_inplace_operations.illegal_pow": {
  "lineno": 548,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_inplace_operations.illegal_sub": {
  "lineno": 542,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_list": {
  "lineno": 937,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.have_same_dimensions",
   "brian2.units.stdunits.mV",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.array",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_multiplication_division": {
  "lineno": 289,
  "symbols_in_volume": [
   "brian2.units.stdunits.mV",
   "nose.plugins.attrib.attr",
   "numpy.array",
   "numpy.asarray",
   "numpy.float64",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_numpy_functions_change_dimensions": {
  "lineno": 832,
  "symbols_in_volume": [
   "brian2.units.stdunits.mV",
   "nose.plugins.attrib.attr",
   "numpy.array",
   "numpy.ones",
   "numpy.reciprocal",
   "numpy.sqrt",
   "numpy.square",
   "numpy.var"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_numpy_functions_dimensionless": {
  "lineno": 788,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.UFUNCS_DIMENSIONLESS",
   "brian2.units.fundamentalunits.UFUNCS_DIMENSIONLESS_TWOARGS",
   "brian2.units.stdunits.mV",
   "nose.plugins.attrib.attr",
   "numpy.array",
   "numpy.ndarray",
   "numpy.number",
   "numpy.ones",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_numpy_functions_indices": {
  "lineno": 764,
  "symbols_in_volume": [
   "brian2.units.stdunits.kHz",
   "brian2.units.stdunits.mV",
   "itertools.product",
   "nose.plugins.attrib.attr",
   "numpy.argmax",
   "numpy.argmin",
   "numpy.argsort",
   "numpy.array",
   "numpy.nonzero",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_numpy_functions_logical": {
  "lineno": 869,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.UFUNCS_LOGICAL",
   "brian2.units.stdunits.mV",
   "nose.plugins.attrib.attr",
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_numpy_functions_same_dimensions": {
  "lineno": 730,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.get_dimensions",
   "brian2.units.stdunits.kHz",
   "brian2.units.stdunits.mV",
   "itertools.product",
   "nose.plugins.attrib.attr",
   "numpy.abs",
   "numpy.arange",
   "numpy.array",
   "numpy.cumsum",
   "numpy.max",
   "numpy.mean",
   "numpy.min",
   "numpy.negative",
   "numpy.ones",
   "numpy.ptp",
   "numpy.round",
   "numpy.squeeze",
   "numpy.std",
   "numpy.sum",
   "numpy.transpose"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_numpy_functions_typeerror": {
  "lineno": 848,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.UFUNCS_INTEGERS",
   "brian2.units.stdunits.mV",
   "nose.plugins.attrib.attr",
   "numpy.array",
   "numpy.ones",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_pickling": {
  "lineno": 185,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.have_same_dimensions",
   "brian2.units.stdunits.mV",
   "brian2.units.stdunits.ms",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.testing.assert_equal",
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_power": {
  "lineno": 502,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "nose.plugins.attrib.attr",
   "numpy.array",
   "numpy.asarray",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_scale": {
  "lineno": 152,
  "symbols_in_volume": [
   "brian2.core.namespace.DEFAULT_UNITS",
   "brian2.tests.utils.assert_allclose",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_setting": {
  "lineno": 267,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.stdunits.mV",
   "nose.plugins.attrib.attr",
   "numpy.all",
   "numpy.arange",
   "numpy.ones",
   "numpy.reshape",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_setting.set_to_value": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.tests.test_units.test_slicing": {
  "lineno": 252,
  "symbols_in_volume": [
   "brian2.units.stdunits.mV",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.reshape",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_special_case_numpy_functions": {
  "lineno": 632,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.have_same_dimensions",
   "brian2.units.stdunits.mV",
   "brian2.units.stdunits.mV.cumprod",
   "brian2.units.stdunits.ms",
   "brian2.units.unitsafefunctions.diagonal",
   "brian2.units.unitsafefunctions.dot",
   "brian2.units.unitsafefunctions.ravel",
   "brian2.units.unitsafefunctions.trace",
   "brian2.units.unitsafefunctions.where",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.diagonal",
   "numpy.dot",
   "numpy.ones",
   "numpy.ravel",
   "numpy.reshape",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "numpy.trace",
   "numpy.where",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_str_repr": {
  "lineno": 199,
  "symbols_in_volume": [
   "brian2.tests.utils.assert_allclose",
   "brian2.units.fundamentalunits.DIMENSIONLESS",
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.fundamentalunits.Unit",
   "brian2.units.fundamentalunits.get_or_create_dimension",
   "brian2.units.stdunits.cm",
   "brian2.units.stdunits.mM",
   "brian2.units.stdunits.nS",
   "itertools.chain",
   "nose.plugins.attrib.attr",
   "numpy.array",
   "numpy.ones"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_switching_off_unit_checks": {
  "lineno": 1040,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.fundamentalunits.have_same_dimensions",
   "brian2.units.fundamentalunits.unit_checking",
   "nose.plugins.attrib.attr",
   "numpy.array",
   "numpy.asarray",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_unary_operations": {
  "lineno": 389,
  "symbols_in_volume": [
   "nose.plugins.attrib.attr",
   "numpy.array",
   "operator.neg",
   "operator.pos"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_unit_discarding_functions": {
  "lineno": 576,
  "symbols_in_volume": [
   "brian2.units.stdunits.mV",
   "brian2.units.unitsafefunctions.ones_like",
   "brian2.units.unitsafefunctions.zeros_like",
   "nose.plugins.attrib.attr",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.nonzero",
   "numpy.ones_like",
   "numpy.sign",
   "numpy.testing.assert_equal",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_units_vs_quantities": {
  "lineno": 1124,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.Quantity",
   "brian2.units.fundamentalunits.Unit"
  ],
  "type": "function"
 },
 "brian2.tests.test_units.test_unitsafe_functions": {
  "lineno": 591,
  "symbols_in_volume": [
   "brian2.units.fundamentalunits.DimensionMismatchError",
   "brian2.units.stdunits.mV",
   "brian2.units.unitsafefunctions.arccos",
   "brian2.units.unitsafefunctions.arccosh",
   "brian2.units.unitsafefunctions.arcsin",
   "brian2.units.unitsafefunctions.arcsinh",
   "brian2.units.unitsafefunctions.arctan",
   "brian2.units.unitsafefunctions.arctanh",
   "brian2.units.unitsafefunctions.cos",
   "brian2.units.unitsafefunctions.cosh",
   "brian2.units.unitsafefunctions.exp",
   "brian2.units.unitsafefunctions.log",
   "brian2.units.unitsafefunctions.sin",
   "brian2.units.unitsafefunctions.sinh",
   "brian2.units.unitsafefunctions.tan",
   "brian2.units.unitsafefunctions.tanh",
   "nose.plugins.attrib.attr",
   "numpy.arccos",
   "numpy.arccosh",
   "numpy.arcsin",
   "numpy.arcsinh",
   "numpy.arctan",
   "numpy.arctanh",
   "numpy.array",
   "numpy.cos",
   "numpy.cosh",
   "numpy.exp",
   "numpy.log",
   "numpy.ones",
   "numpy.sin",
   "numpy.sinh",
   "numpy.tan",
   "numpy.tanh",
   "numpy.testing.assert_equal",
   "numpy.testing.assert_raises",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "brian2.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_utils.test_environment": {
  "lineno": 6,
  "symbols_in_volume": [
   "__builtin__",
   "__builtin__.__IPYTHON__",
   "brian2.utils.environment.running_from_ipython",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_utils.test_spell_check": {
  "lineno": 31,
  "symbols_in_volume": [
   "brian2.utils.stringtools.SpellChecker",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.test_variables": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.test_variables.test_construction_errors": {
  "lineno": 16,
  "symbols_in_volume": [
   "brian2.units.allunits.second.dim",
   "nose.plugins.attrib.attr",
   "numpy.bool",
   "numpy.testing.assert_raises"
  ],
  "type": "function"
 },
 "brian2.tests.test_variables.test_dtype_str": {
  "lineno": 50,
  "symbols_in_volume": [
   "collections.namedtuple",
   "nose.plugins.attrib.attr",
   "numpy.dtype",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "brian2.tests.test_variables.test_str_repr": {
  "lineno": 31,
  "symbols_in_volume": [
   "brian2.units.allunits.second.dim",
   "collections.namedtuple",
   "nose.plugins.attrib.attr"
  ],
  "type": "function"
 },
 "brian2.tests.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.tests.utils.assert_allclose": {
  "lineno": 8,
  "symbols_in_volume": [
   "brian2.prefs",
   "brian2.units.fundamentalunits.have_same_dimensions",
   "numpy.asarray",
   "numpy.finfo",
   "numpy.testing.utils.assert_allclose"
  ],
  "type": "function"
 },
 "brian2.units": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.units.allunits": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.units.allunits._Celsius": {
  "lineno": 7908,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.units.allunits._Celsius.__div__": {
  "lineno": 7928,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.allunits._Celsius.__eq__": {
  "lineno": 7937,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.allunits._Celsius.__mul__": {
  "lineno": 7922,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.allunits._Celsius.__neq__": {
  "lineno": 7940,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.allunits._Celsius.__pow__": {
  "lineno": 7934,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.allunits._Celsius.__rdiv__": {
  "lineno": 7931,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.allunits._Celsius.__rmul__": {
  "lineno": 7925,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.constants": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.pi"
  ],
  "type": "module"
 },
 "brian2.units.fundamentalunits": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.units.fundamentalunits.Dimension": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.units.fundamentalunits.Dimension.__deepcopy__": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__div__": {
  "lineno": 436,
  "symbols_in_volume": [
   "itertools.izip"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__eq__": {
  "lineno": 462,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__getstate__": {
  "lineno": 476,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__hash__": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__idiv__": {
  "lineno": 452,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__imul__": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__init__": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__ipow__": {
  "lineno": 458,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__itruediv__": {
  "lineno": 455,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__mul__": {
  "lineno": 432,
  "symbols_in_volume": [
   "itertools.izip"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__ne__": {
  "lineno": 469,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__pow__": {
  "lineno": 443,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__repr__": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__setstate__": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__str__": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.__truediv__": {
  "lineno": 440,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension._latex": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension._repr_latex": {
  "lineno": 419,
  "symbols_in_volume": [
   "sympy.latex"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension._str_representation": {
  "lineno": 374,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.dim": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.get_dimension": {
  "lineno": 334,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Dimension.is_dimensionless": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.DimensionMismatchError": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.units.fundamentalunits.DimensionMismatchError.__init__": {
  "lineno": 574,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.DimensionMismatchError.__repr__": {
  "lineno": 581,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.DimensionMismatchError.__str__": {
  "lineno": 586,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity": {
  "lineno": 830,
  "symbols_in_volume": [
   "matplotlib.__version__",
   "numpy.ndarray",
   "numpy.ndarray.all",
   "numpy.ndarray.any",
   "numpy.ndarray.argmax",
   "numpy.ndarray.argmin",
   "numpy.ndarray.argsort",
   "numpy.ndarray.clip.__doc__",
   "numpy.ndarray.cumprod.__doc__",
   "numpy.ndarray.cumsum",
   "numpy.ndarray.diagonal",
   "numpy.ndarray.dot.__doc__",
   "numpy.ndarray.fill.__doc__",
   "numpy.ndarray.max",
   "numpy.ndarray.mean",
   "numpy.ndarray.min",
   "numpy.ndarray.nonzero",
   "numpy.ndarray.prod.__doc__",
   "numpy.ndarray.ptp",
   "numpy.ndarray.put.__doc__",
   "numpy.ndarray.ravel",
   "numpy.ndarray.ravel.__doc__",
   "numpy.ndarray.ravel.__name__",
   "numpy.ndarray.round",
   "numpy.ndarray.searchsorted.__doc__",
   "numpy.ndarray.std",
   "numpy.ndarray.sum",
   "numpy.ndarray.trace",
   "numpy.ndarray.var"
  ],
  "type": "class"
 },
 "brian2.units.fundamentalunits.Quantity.__abs__": {
  "lineno": 1511,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__add__": {
  "lineno": 1426,
  "symbols_in_volume": [
   "operator.add"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__array_finalize__": {
  "lineno": 963,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__array_prepare__": {
  "lineno": 966,
  "symbols_in_volume": [
   "numpy.array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__array_wrap__": {
  "lineno": 1029,
  "symbols_in_volume": [
   "numpy.array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__deepcopy__": {
  "lineno": 1072,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__div__": {
  "lineno": 1399,
  "symbols_in_volume": [
   "operator.truediv"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__eq__": {
  "lineno": 1572,
  "symbols_in_volume": [
   "operator.eq"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__ge__": {
  "lineno": 1569,
  "symbols_in_volume": [
   "operator.ge"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__getitem__": {
  "lineno": 1304,
  "symbols_in_volume": [
   "numpy.ndarray.__getitem__"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__getslice__": {
  "lineno": 1310,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__gt__": {
  "lineno": 1566,
  "symbols_in_volume": [
   "operator.gt"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__iadd__": {
  "lineno": 1434,
  "symbols_in_volume": [
   "numpy.ndarray.__iadd__"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__idiv__": {
  "lineno": 1413,
  "symbols_in_volume": [
   "numpy.ndarray.__itruediv__",
   "operator.truediv"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__imul__": {
  "lineno": 1395,
  "symbols_in_volume": [
   "numpy.ndarray.__imul__",
   "operator.mul"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__ipow__": {
  "lineno": 1490,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__isub__": {
  "lineno": 1455,
  "symbols_in_volume": [
   "numpy.ndarray.__isub__"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__itruediv__": {
  "lineno": 1417,
  "symbols_in_volume": [
   "numpy.ndarray.__itruediv__",
   "operator.truediv"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__le__": {
  "lineno": 1563,
  "symbols_in_volume": [
   "operator.le"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__lt__": {
  "lineno": 1560,
  "symbols_in_volume": [
   "operator.lt"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__mod__": {
  "lineno": 1421,
  "symbols_in_volume": [
   "operator.mod"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__mul__": {
  "lineno": 1389,
  "symbols_in_volume": [
   "operator.mul"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__ne__": {
  "lineno": 1575,
  "symbols_in_volume": [
   "operator.ne"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__neg__": {
  "lineno": 1505,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__new__": {
  "lineno": 906,
  "symbols_in_volume": [
   "numbers.Number",
   "numpy.array",
   "numpy.bool_",
   "numpy.dtype",
   "numpy.issubclass_",
   "numpy.ndarray",
   "numpy.number"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__pos__": {
  "lineno": 1508,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__pow__": {
  "lineno": 1460,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__radd__": {
  "lineno": 1431,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__rdiv__": {
  "lineno": 1405,
  "symbols_in_volume": [
   "operator.truediv"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__reduce__": {
  "lineno": 1579,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__repr__": {
  "lineno": 1583,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__rmul__": {
  "lineno": 1392,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__rpow__": {
  "lineno": 1474,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__rsub__": {
  "lineno": 1445,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__rtruediv__": {
  "lineno": 1410,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__setitem__": {
  "lineno": 1313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__setslice__": {
  "lineno": 1318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__str__": {
  "lineno": 1604,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__sub__": {
  "lineno": 1440,
  "symbols_in_volume": [
   "operator.sub"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.__truediv__": {
  "lineno": 1402,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity._binary_operation": {
  "lineno": 1322,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity._comparison": {
  "lineno": 1548,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isinf",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity._get_best_unit": {
  "lineno": 1251,
  "symbols_in_volume": [
   "numpy.VisibleDeprecationWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity._latex": {
  "lineno": 1587,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float",
   "sympy.Matrix",
   "sympy.latex"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity._repr_latex_": {
  "lineno": 1601,
  "symbols_in_volume": [
   "sympy.latex"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.clip": {
  "lineno": 1668,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.clip"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.cumprod": {
  "lineno": 1709,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.dimensions": {
  "lineno": 1126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.dot": {
  "lineno": 1678,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.fill": {
  "lineno": 1658,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.get_best_unit": {
  "lineno": 1222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.has_same_dimensions": {
  "lineno": 1132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.in_best_unit": {
  "lineno": 1256,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.in_unit": {
  "lineno": 1152,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.array_repr",
   "numpy.array_str"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.prod": {
  "lineno": 1690,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.put": {
  "lineno": 1663,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.ravel": {
  "lineno": 1628,
  "symbols_in_volume": [
   "numpy.array",
   "warnings.warn"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.searchsorted": {
  "lineno": 1684,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.tolist": {
  "lineno": 1514,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.tolist.replace_with_quantity": {
  "lineno": 1523,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.tolist.replace_with_quantity.top_replace": {
  "lineno": 1532,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Quantity.with_dimensions": {
  "lineno": 1078,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit": {
  "lineno": 1717,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.units.fundamentalunits.Unit.__array_finalize__": {
  "lineno": 1827,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__div__": {
  "lineno": 2008,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__eq__": {
  "lineno": 2089,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__hash__": {
  "lineno": 2098,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__iadd__": {
  "lineno": 2065,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__idiv__": {
  "lineno": 2074,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__ifloordiv__": {
  "lineno": 2080,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__imod__": {
  "lineno": 2083,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__imul__": {
  "lineno": 2071,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__init__": {
  "lineno": 1836,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__ipow__": {
  "lineno": 2086,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__isub__": {
  "lineno": 2068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__itruediv__": {
  "lineno": 2077,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__mul__": {
  "lineno": 1992,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__neq__": {
  "lineno": 2095,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__new__": {
  "lineno": 1819,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__pow__": {
  "lineno": 2045,
  "symbols_in_volume": [
   "sympy.latex"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__rdiv__": {
  "lineno": 2034,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__repr__": {
  "lineno": 1979,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__rmul__": {
  "lineno": 2005,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.__str__": {
  "lineno": 1982,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit._latex": {
  "lineno": 1985,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit._repr_latex_": {
  "lineno": 1988,
  "symbols_in_volume": [
   "sympy.latex"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.create": {
  "lineno": 1871,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.create_scaled_unit": {
  "lineno": 1907,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.set_display_name": {
  "lineno": 1949,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.set_latex_name": {
  "lineno": 1959,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.Unit.set_name": {
  "lineno": 1938,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.UnitRegistry": {
  "lineno": 2102,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.units.fundamentalunits.UnitRegistry.__getitem__": {
  "lineno": 2135,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.abs",
   "numpy.all",
   "numpy.array",
   "numpy.get_printoptions",
   "numpy.hstack",
   "numpy.isnan",
   "numpy.log10",
   "numpy.nan",
   "numpy.nansum",
   "numpy.tile"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.UnitRegistry.__init__": {
  "lineno": 2125,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.UnitRegistry.add": {
  "lineno": 2129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits._flatten": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits._short_str": {
  "lineno": 51,
  "symbols_in_volume": [
   "numpy.asanyarray",
   "numpy.get_printoptions",
   "numpy.set_printoptions"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.check_units": {
  "lineno": 2252,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.check_units.do_check_units": {
  "lineno": 2329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.check_units.do_check_units.new_f": {
  "lineno": 2330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.fail_for_dimension_mismatch": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.all"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.get_dimensions": {
  "lineno": 626,
  "symbols_in_volume": [
   "numbers.Number",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.ndarray",
   "numpy.number"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.get_or_create_dimension": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.get_unit": {
  "lineno": 2207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.get_unit_for_display": {
  "lineno": 2230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.have_same_dimensions": {
  "lineno": 677,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.in_best_unit": {
  "lineno": 755,
  "symbols_in_volume": [
   "numpy.get_printoptions",
   "numpy.round"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.in_unit": {
  "lineno": 705,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.is_dimensionless": {
  "lineno": 660,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.is_scalar_type": {
  "lineno": 605,
  "symbols_in_volume": [
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.quantity_with_dimensions": {
  "lineno": 797,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.register_new_unit": {
  "lineno": 2179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.wrap_function_change_dimensions": {
  "lineno": 235,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.wrap_function_change_dimensions.f": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.wrap_function_dimensionless": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.wrap_function_dimensionless.f": {
  "lineno": 201,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.wrap_function_keep_dimensions": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.wrap_function_keep_dimensions.f": {
  "lineno": 226,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.units.fundamentalunits.wrap_function_remove_dimensions": {
  "lineno": 258,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.fundamentalunits.wrap_function_remove_dimensions.f": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "brian2.units.stdunits": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.units.unitsafefunctions": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arccos",
   "numpy.arccosh",
   "numpy.arcsin",
   "numpy.arcsinh",
   "numpy.arctan",
   "numpy.arctanh",
   "numpy.cos",
   "numpy.cosh",
   "numpy.diagonal",
   "numpy.dot",
   "numpy.exp",
   "numpy.log",
   "numpy.log10",
   "numpy.ones_like",
   "numpy.ravel",
   "numpy.sin",
   "numpy.sinh",
   "numpy.tan",
   "numpy.tanh",
   "numpy.trace",
   "numpy.where.__doc__",
   "numpy.zeros_like"
  ],
  "type": "module"
 },
 "brian2.units.unitsafefunctions.arange": {
  "lineno": 87,
  "symbols_in_volume": [
   "functools.wraps",
   "numpy.arange",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "brian2.units.unitsafefunctions.linspace": {
  "lineno": 135,
  "symbols_in_volume": [
   "functools.wraps",
   "numpy.__version__",
   "numpy.asarray",
   "numpy.linspace",
   "pkg_resources.parse_version"
  ],
  "type": "function"
 },
 "brian2.units.unitsafefunctions.setup": {
  "lineno": 185,
  "symbols_in_volume": [
   "nose.SkipTest"
  ],
  "type": "function"
 },
 "brian2.units.unitsafefunctions.where": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.where"
  ],
  "type": "function"
 },
 "brian2.units.unitsafefunctions.wrap_function_to_method": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.units.unitsafefunctions.wrap_function_to_method.f": {
  "lineno": 75,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "brian2.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.utils.arrays": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.utils.arrays.calc_repeats": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.argsort",
   "numpy.array",
   "numpy.cumsum",
   "numpy.hstack",
   "numpy.int32",
   "numpy.logical_not",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "brian2.utils.caching": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "module"
 },
 "brian2.utils.caching.CacheKey": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.utils.caching.CacheKey._state_tuple": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.caching._CacheStatistics": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.utils.caching._CacheStatistics.__init__": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.caching._CacheStatistics.__repr__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.caching._hashable": {
  "lineno": 112,
  "symbols_in_volume": [
   "collections.Mapping"
  ],
  "type": "function"
 },
 "brian2.utils.caching._of_type": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.caching.cached": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.caching.cached.cached_func": {
  "lineno": 83,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "brian2.utils.environment": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.utils.environment.running_from_ipython": {
  "lineno": 7,
  "symbols_in_volume": [
   "__builtin__"
  ],
  "type": "function"
 },
 "brian2.utils.filetools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.utils.filetools.copy_directory": {
  "lineno": 54,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "os.path.normpath",
   "os.path.sep",
   "os.walk"
  ],
  "type": "function"
 },
 "brian2.utils.filetools.ensure_directory": {
  "lineno": 24,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.exists"
  ],
  "type": "function"
 },
 "brian2.utils.filetools.ensure_directory_of_file": {
  "lineno": 13,
  "symbols_in_volume": [
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists"
  ],
  "type": "function"
 },
 "brian2.utils.filetools.in_directory": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.utils.filetools.in_directory.__enter__": {
  "lineno": 48,
  "symbols_in_volume": [
   "os.chdir"
  ],
  "type": "function"
 },
 "brian2.utils.filetools.in_directory.__exit__": {
  "lineno": 50,
  "symbols_in_volume": [
   "os.chdir"
  ],
  "type": "function"
 },
 "brian2.utils.filetools.in_directory.__init__": {
  "lineno": 45,
  "symbols_in_volume": [
   "os.getcwd"
  ],
  "type": "function"
 },
 "brian2.utils.logger": {
  "lineno": null,
  "symbols_in_volume": [
   "atexit.register",
   "brian2.core.preferences.BrianPreference",
   "brian2.core.preferences.prefs.pref_register",
   "brian2.core.preferences.prefs.register_preferences",
   "logging.CRITICAL",
   "logging.DEBUG",
   "logging.ERROR",
   "logging.INFO",
   "logging.WARNING",
   "logging.addLevelName",
   "scipy",
   "scipy.weave"
  ],
  "type": "module"
 },
 "brian2.utils.logger.BrianLogger": {
  "lineno": 256,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.utils.logger.BrianLogger.__init__": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger._log": {
  "lineno": 289,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger._suppress": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.debug": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.diagnostic": {
  "lineno": 319,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.error": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.info": {
  "lineno": 351,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.initialize": {
  "lineno": 495,
  "symbols_in_volume": [
   "brian2.__version__",
   "brian2.core.preferences.prefs",
   "brian2.core.preferences.prefs.upper",
   "logging.FileHandler",
   "logging.Formatter",
   "logging.StreamHandler",
   "logging.captureWarnings",
   "logging.getLogger",
   "numpy.__version__",
   "os.path.abspath",
   "os.path.isfile",
   "scipy",
   "scipy.__version__",
   "scipy.weave",
   "scipy.weave.__version__",
   "shutil.copyfileobj",
   "sympy.__version__",
   "sys.argv",
   "sys.excepthook",
   "sys.executable",
   "sys.platform",
   "sys.version",
   "tempfile.NamedTemporaryFile",
   "time.asctime",
   "warnings.warn"
  ],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.log_level_debug": {
  "lineno": 467,
  "symbols_in_volume": [
   "logging.DEBUG"
  ],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.log_level_diagnostic": {
  "lineno": 460,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.log_level_error": {
  "lineno": 488,
  "symbols_in_volume": [
   "logging.ERROR"
  ],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.log_level_info": {
  "lineno": 474,
  "symbols_in_volume": [
   "logging.INFO"
  ],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.log_level_warn": {
  "lineno": 481,
  "symbols_in_volume": [
   "logging.WARN"
  ],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.suppress_hierarchy": {
  "lineno": 416,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.suppress_name": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.BrianLogger.warn": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.HierarchyFilter": {
  "lineno": 210,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.utils.logger.HierarchyFilter.__init__": {
  "lineno": 223,
  "symbols_in_volume": [
   "logging.Filter"
  ],
  "type": "function"
 },
 "brian2.utils.logger.HierarchyFilter.filter": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.LogCapture": {
  "lineno": 655,
  "symbols_in_volume": [
   "logging.Handler"
  ],
  "type": "class"
 },
 "brian2.utils.logger.LogCapture.__init__": {
  "lineno": 663,
  "symbols_in_volume": [
   "logging.Handler.__init__",
   "logging.WARN",
   "logging.getLogger"
  ],
  "type": "function"
 },
 "brian2.utils.logger.LogCapture.emit": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.LogCapture.install": {
  "lineno": 677,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "brian2.utils.logger.LogCapture.uninstall": {
  "lineno": 688,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "brian2.utils.logger.NameFilter": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.utils.logger.NameFilter.__init__": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.NameFilter.filter": {
  "lineno": 247,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger._encode": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.brian_excepthook": {
  "lineno": 157,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "function"
 },
 "brian2.utils.logger.catch_logs": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.utils.logger.catch_logs.__enter__": {
  "lineno": 643,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.catch_logs.__exit__": {
  "lineno": 649,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.catch_logs.__init__": {
  "lineno": 638,
  "symbols_in_volume": [
   "logging.WARN"
  ],
  "type": "function"
 },
 "brian2.utils.logger.clean_up_logging": {
  "lineno": 187,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs",
   "logging.shutdown",
   "os.remove",
   "warnings.warn"
  ],
  "type": "function"
 },
 "brian2.utils.logger.get_logger": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.log_level_validator": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.logger.std_silent": {
  "lineno": 702,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.utils.logger.std_silent.__enter__": {
  "lineno": 725,
  "symbols_in_volume": [
   "os.dup",
   "os.dup2",
   "sys.stderr.flush",
   "sys.stdout.flush"
  ],
  "type": "function"
 },
 "brian2.utils.logger.std_silent.__exit__": {
  "lineno": 734,
  "symbols_in_volume": [
   "os.close",
   "os.dup2",
   "sys.stderr.write",
   "sys.stdout.write"
  ],
  "type": "function"
 },
 "brian2.utils.logger.std_silent.__init__": {
  "lineno": 710,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "brian2.utils.logger.std_silent.close": {
  "lineno": 751,
  "symbols_in_volume": [
   "brian2.core.preferences.prefs",
   "os.remove"
  ],
  "type": "function"
 },
 "brian2.utils.stringtools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "brian2.utils.stringtools.SpellChecker": {
  "lineno": 261,
  "symbols_in_volume": [],
  "type": "class"
 },
 "brian2.utils.stringtools.SpellChecker.__init__": {
  "lineno": 274,
  "symbols_in_volume": [
   "string.ascii_lowercase",
   "string.digits"
  ],
  "type": "function"
 },
 "brian2.utils.stringtools.SpellChecker.edits1": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.stringtools.SpellChecker.known": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.stringtools.SpellChecker.known_edits2": {
  "lineno": 287,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.stringtools.SpellChecker.suggest": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.stringtools.code_representation": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.stringtools.deindent": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.stringtools.get_identifiers": {
  "lineno": 155,
  "symbols_in_volume": [
   "re.findall"
  ],
  "type": "function"
 },
 "brian2.utils.stringtools.indent": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.stringtools.replace": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.stringtools.strip_empty_leading_and_trailing_lines": {
  "lineno": 209,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.stringtools.strip_empty_lines": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.stringtools.stripped_deindented_lines": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "brian2.utils.stringtools.word_substitute": {
  "lineno": 122,
  "symbols_in_volume": [
   "re.sub"
  ],
  "type": "function"
 }
}