{
 "region": {
  "data": {},
  "type": "module"
 },
 "region.api": {
  "data": {},
  "type": "module"
 },
 "region.api.maxp": {
  "data": {
   "shadows": "api"
  },
  "type": "import"
 },
 "region.api.p_regions": {
  "data": {
   "shadows": "api"
  },
  "type": "import"
 },
 "region.csgraph_utils": {
  "data": {},
  "type": "module"
 },
 "region.csgraph_utils.csg": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "region.csgraph_utils.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "region.csgraph_utils.is_connected": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "scipy.sparse.csgraph.connected_components"
   ]
  },
  "type": "function"
 },
 "region.csgraph_utils.neighbors": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "region.csgraph_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "region.csgraph_utils.sub_adj_matrix": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "numpy.in1d",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions": {
  "data": {},
  "type": "module"
 },
 "region.max_p_regions.api": {
  "data": {},
  "type": "module"
 },
 "region.max_p_regions.exact": {
  "data": {},
  "type": "module"
 },
 "region.max_p_regions.exact.GeoDataFrame": {
  "data": {
   "shadows": "geopandas.GeoDataFrame"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.LpInteger": {
  "data": {
   "shadows": "pulp.LpInteger"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.LpMinimize": {
  "data": {
   "shadows": "pulp.LpMinimize"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.LpProblem": {
  "data": {
   "shadows": "pulp.LpProblem"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.LpVariable": {
  "data": {
   "shadows": "pulp.LpVariable"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.MaxPRegionsExact": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "region.util.copy_func"
   ]
  },
  "type": "class"
 },
 "region.max_p_regions.exact.MaxPRegionsExact.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "region.util.raise_distance_metric_not_set"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.exact.MaxPRegionsExact.fit_from_dict": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "region.util.array_from_dict_values",
    "region.util.scipy_sparse_matrix_from_dict"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.exact.MaxPRegionsExact.fit_from_geodataframe": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "region.util.array_from_df_col",
    "region.util.w_from_gdf"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.exact.MaxPRegionsExact.fit_from_networkx": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "networkx.to_scipy_sparse_matrix",
    "region.util.array_from_graph_or_dict"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.exact.MaxPRegionsExact.fit_from_scipy_sparse_matrix": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "math.floor",
    "math.log10",
    "numpy.ndarray",
    "numpy.zeros",
    "pulp.LpInteger",
    "pulp.LpMinimize",
    "pulp.LpProblem",
    "pulp.LpVariable.dicts",
    "pulp.lpSum",
    "range",
    "region.csgraph_utils.neighbors",
    "region.max_p_regions.exact.collections",
    "region.max_p_regions.exact.numbers",
    "region.util.check_solver",
    "region.util.get_metric_function",
    "region.util.get_solver_instance",
    "sum"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.exact.MaxPRegionsExact.fit_from_w": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "region.util.scipy_sparse_matrix_from_w"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.exact.array_from_df_col": {
  "data": {
   "shadows": "region.util.array_from_df_col"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.array_from_dict_values": {
  "data": {
   "shadows": "region.util.array_from_dict_values"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.array_from_graph_or_dict": {
  "data": {
   "shadows": "region.util.array_from_graph_or_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.check_solver": {
  "data": {
   "shadows": "region.util.check_solver"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.copy_func": {
  "data": {
   "shadows": "region.util.copy_func"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.floor": {
  "data": {
   "shadows": "math.floor"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.get_metric_function": {
  "data": {
   "shadows": "region.util.get_metric_function"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.get_solver_instance": {
  "data": {
   "shadows": "region.util.get_solver_instance"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.log10": {
  "data": {
   "shadows": "math.log10"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.lpSum": {
  "data": {
   "shadows": "pulp.lpSum"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.neighbors": {
  "data": {
   "shadows": "region.csgraph_utils.neighbors"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.raise_distance_metric_not_set": {
  "data": {
   "shadows": "region.util.raise_distance_metric_not_set"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.scipy_sparse_matrix_from_dict": {
  "data": {
   "shadows": "region.util.scipy_sparse_matrix_from_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.scipy_sparse_matrix_from_w": {
  "data": {
   "shadows": "region.util.scipy_sparse_matrix_from_w"
  },
  "type": "import"
 },
 "region.max_p_regions.exact.w_from_gdf": {
  "data": {
   "shadows": "region.util.w_from_gdf"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics": {
  "data": {},
  "type": "module"
 },
 "region.max_p_regions.heuristics.AZP": {
  "data": {
   "shadows": "region.p_regions.azp.AZP"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.AllowMoveAZPMaxPRegions": {
  "data": {
   "shadows": "region.p_regions.azp_util.AllowMoveAZPMaxPRegions"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.MaxPRegionsHeu": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "region.util.copy_func"
   ]
  },
  "type": "class"
 },
 "region.max_p_regions.heuristics.MaxPRegionsHeu.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "region.max_p_regions.heuristics.random",
    "region.util.raise_distance_metric_not_set"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.heuristics.MaxPRegionsHeu.assign_enclaves": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "LookupError",
    "any",
    "region.util.find_sublist_containing",
    "region.util.pop_randomly_from"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.heuristics.MaxPRegionsHeu.find_best_area": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "min",
    "region.util.random_element_from",
    "sum"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.heuristics.MaxPRegionsHeu.find_best_region_idx": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "min",
    "region.util.random_element_from",
    "sum"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.heuristics.MaxPRegionsHeu.fit_from_dict": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "objective_func",
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.util.array_from_dict_values",
    "region.util.scipy_sparse_matrix_from_dict"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.heuristics.MaxPRegionsHeu.fit_from_geodataframe": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "objective_func",
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.util.array_from_df_col",
    "region.util.w_from_gdf"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.heuristics.MaxPRegionsHeu.fit_from_networkx": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "networkx.to_scipy_sparse_matrix",
    "objective_func",
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.util.array_from_graph_or_dict"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.heuristics.MaxPRegionsHeu.fit_from_scipy_sparse_matrix": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "float",
    "len",
    "libpysal.weights.WSP",
    "objective_func",
    "range",
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.p_regions.azp.AZP",
    "region.p_regions.azp_util.AllowMoveAZPMaxPRegions",
    "region.util.array_from_region_list"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.heuristics.MaxPRegionsHeu.fit_from_w": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "objective_func",
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.util.scipy_sparse_matrix_from_w"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.heuristics.MaxPRegionsHeu.grow_regions": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "list",
    "range",
    "region.util.pop_randomly_from",
    "set"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.heuristics.ObjectiveFunctionPairwise": {
  "data": {
   "shadows": "region.objective_function.ObjectiveFunctionPairwise"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.array_from_df_col": {
  "data": {
   "shadows": "region.util.array_from_df_col"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.array_from_dict_values": {
  "data": {
   "shadows": "region.util.array_from_dict_values"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.array_from_graph_or_dict": {
  "data": {
   "shadows": "region.util.array_from_graph_or_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.array_from_region_list": {
  "data": {
   "shadows": "region.util.array_from_region_list"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.copy_func": {
  "data": {
   "shadows": "region.util.copy_func"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.find_sublist_containing": {
  "data": {
   "shadows": "region.util.find_sublist_containing"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.pop_randomly_from": {
  "data": {
   "shadows": "region.util.pop_randomly_from"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.raise_distance_metric_not_set": {
  "data": {
   "shadows": "region.util.raise_distance_metric_not_set"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.random_element_from": {
  "data": {
   "shadows": "region.util.random_element_from"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.scipy_sparse_matrix_from_dict": {
  "data": {
   "shadows": "region.util.scipy_sparse_matrix_from_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.scipy_sparse_matrix_from_w": {
  "data": {
   "shadows": "region.util.scipy_sparse_matrix_from_w"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.w_from_gdf": {
  "data": {
   "shadows": "region.util.w_from_gdf"
  },
  "type": "import"
 },
 "region.max_p_regions.heuristics.weights": {
  "data": {
   "shadows": "libpysal.weights"
  },
  "type": "import"
 },
 "region.max_p_regions.tests": {
  "data": {},
  "type": "module"
 },
 "region.max_p_regions.tests.data": {
  "data": {
   "symbols_in_volume": [
    "geopandas.GeoDataFrame",
    "numpy.array",
    "numpy.column_stack",
    "numpy.hstack",
    "numpy.ones",
    "range",
    "region.max_p_regions.tests.data.attr",
    "region.max_p_regions.tests.data.attr_str",
    "region.max_p_regions.tests.data.gdf",
    "region.max_p_regions.tests.data.spatially_extensive_attr",
    "region.max_p_regions.tests.data.spatially_extensive_attr_str",
    "region.max_p_regions.tests.data.threshold",
    "region.tests.util.convert_from_geodataframe",
    "region.tests.util.region_list_from_array",
    "region.util.dataframe_to_dict",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "module"
 },
 "region.max_p_regions.tests.data.GeoDataFrame": {
  "data": {
   "shadows": "geopandas.GeoDataFrame"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.data.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.data.attr": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.data.attr_dict": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.data.attr_str": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.data.convert_from_geodataframe": {
  "data": {
   "shadows": "region.tests.util.convert_from_geodataframe"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.data.dataframe_to_dict": {
  "data": {
   "shadows": "region.util.dataframe_to_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.data.double_attr": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.data.double_attr_dict": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.data.double_spatially_extensive_attr": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.data.double_spatially_extensive_attr_dict": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.data.double_threshold": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.data.gdf": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.data.optimal_clustering": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.data.region_list_from_array": {
  "data": {
   "shadows": "region.tests.util.region_list_from_array"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.data.spatially_extensive_attr": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.data.spatially_extensive_attr_dict": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.data.spatially_extensive_attr_str": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.data.threshold": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.test_exact": {
  "data": {},
  "type": "module"
 },
 "region.max_p_regions.tests.test_exact.MaxPRegionsExact": {
  "data": {
   "shadows": "region.max_p_regions.exact.MaxPRegionsExact"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.adj": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.adj"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.attr": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.attr"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.attr_dict": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.attr_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.attr_str": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.attr_str"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.compare_region_lists": {
  "data": {
   "shadows": "region.tests.util.compare_region_lists"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.double_attr": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.double_attr"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.double_attr_dict": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.double_attr_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.double_spatially_extensive_attr": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.double_spatially_extensive_attr"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.double_spatially_extensive_attr_dict": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.double_spatially_extensive_attr_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.double_threshold": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.double_threshold"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.gdf": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.gdf"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.graph": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.graph"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.neighbors_dict": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.neighbors_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.optimal_clustering": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.optimal_clustering"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.region_list_from_array": {
  "data": {
   "shadows": "region.tests.util.region_list_from_array"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.spatially_extensive_attr": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.spatially_extensive_attr"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.spatially_extensive_attr_dict": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.spatially_extensive_attr_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.spatially_extensive_attr_str": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.spatially_extensive_attr_str"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.test_dict_basic": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "region.max_p_regions.exact.MaxPRegionsExact",
    "region.max_p_regions.tests.data.attr_dict",
    "region.max_p_regions.tests.data.neighbors_dict",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr_dict",
    "region.max_p_regions.tests.data.threshold",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_exact.test_dict_multi_attr": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "region.max_p_regions.exact.MaxPRegionsExact",
    "region.max_p_regions.tests.data.double_attr_dict",
    "region.max_p_regions.tests.data.double_spatially_extensive_attr_dict",
    "region.max_p_regions.tests.data.double_threshold",
    "region.max_p_regions.tests.data.neighbors_dict",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_exact.test_geodataframe_basic": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "region.max_p_regions.exact.MaxPRegionsExact",
    "region.max_p_regions.tests.data.attr_str",
    "region.max_p_regions.tests.data.gdf",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr_str",
    "region.max_p_regions.tests.data.threshold",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_exact.test_geodataframe_multi_attr": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "region.max_p_regions.exact.MaxPRegionsExact",
    "region.max_p_regions.tests.data.attr_str",
    "region.max_p_regions.tests.data.double_threshold",
    "region.max_p_regions.tests.data.gdf",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr_str",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_exact.test_graph_dict_basic": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "region.max_p_regions.exact.MaxPRegionsExact",
    "region.max_p_regions.tests.data.attr_dict",
    "region.max_p_regions.tests.data.graph",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr_dict",
    "region.max_p_regions.tests.data.threshold",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_exact.test_graph_dict_multi_attr": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "region.max_p_regions.exact.MaxPRegionsExact",
    "region.max_p_regions.tests.data.double_attr_dict",
    "region.max_p_regions.tests.data.double_spatially_extensive_attr_dict",
    "region.max_p_regions.tests.data.double_threshold",
    "region.max_p_regions.tests.data.graph",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_exact.test_graph_str_basic": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "networkx.set_node_attributes",
    "region.max_p_regions.exact.MaxPRegionsExact",
    "region.max_p_regions.tests.data.attr_dict",
    "region.max_p_regions.tests.data.attr_str",
    "region.max_p_regions.tests.data.graph",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr_dict",
    "region.max_p_regions.tests.data.spatially_extensive_attr_str",
    "region.max_p_regions.tests.data.threshold",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_exact.test_graph_str_multi_attr": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "networkx.set_node_attributes",
    "region.max_p_regions.exact.MaxPRegionsExact",
    "region.max_p_regions.tests.data.attr_dict",
    "region.max_p_regions.tests.data.attr_str",
    "region.max_p_regions.tests.data.double_threshold",
    "region.max_p_regions.tests.data.graph",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr_dict",
    "region.max_p_regions.tests.data.spatially_extensive_attr_str",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_exact.test_scipy_sparse_matrix": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "region.max_p_regions.exact.MaxPRegionsExact",
    "region.max_p_regions.tests.data.adj",
    "region.max_p_regions.tests.data.attr",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr",
    "region.max_p_regions.tests.data.threshold",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_exact.test_scipy_sparse_matrix_multi_attr": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "region.max_p_regions.exact.MaxPRegionsExact",
    "region.max_p_regions.tests.data.adj",
    "region.max_p_regions.tests.data.double_attr",
    "region.max_p_regions.tests.data.double_spatially_extensive_attr",
    "region.max_p_regions.tests.data.double_threshold",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_exact.test_w_basic": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "region.max_p_regions.exact.MaxPRegionsExact",
    "region.max_p_regions.tests.data.attr",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr",
    "region.max_p_regions.tests.data.threshold",
    "region.max_p_regions.tests.data.w",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_exact.test_w_multi_attr": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "region.max_p_regions.exact.MaxPRegionsExact",
    "region.max_p_regions.tests.data.double_attr",
    "region.max_p_regions.tests.data.double_spatially_extensive_attr",
    "region.max_p_regions.tests.data.double_threshold",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.w",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_exact.threshold": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.threshold"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_exact.w": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.w"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu": {
  "data": {
   "symbols_in_volume": [
    "region.max_p_regions.tests.data.attr",
    "region.max_p_regions.tests.data.attr.reshape",
    "region.max_p_regions.tests.data.spatially_extensive_attr",
    "region.max_p_regions.tests.data.spatially_extensive_attr.reshape"
   ]
  },
  "type": "module"
 },
 "region.max_p_regions.tests.test_heu.MaxPRegionsHeu": {
  "data": {
   "shadows": "region.max_p_regions.heuristics.MaxPRegionsHeu"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.adj": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.adj"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.attr": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.test_heu.attr_dict": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.attr_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.attr_str": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.attr_str"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.compare_region_lists": {
  "data": {
   "shadows": "region.tests.util.compare_region_lists"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.double_attr": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.double_attr"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.double_attr_dict": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.double_attr_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.double_spatially_extensive_attr": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.double_spatially_extensive_attr"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.double_spatially_extensive_attr_dict": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.double_spatially_extensive_attr_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.double_threshold": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.double_threshold"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.gdf": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.gdf"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.graph": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.graph"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.neighbors_dict": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.neighbors_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.optimal_clustering": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.optimal_clustering"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.region_list_from_array": {
  "data": {
   "shadows": "region.tests.util.region_list_from_array"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.spatially_extensive_attr": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "region.max_p_regions.tests.test_heu.spatially_extensive_attr_dict": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.spatially_extensive_attr_dict"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.spatially_extensive_attr_str": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.spatially_extensive_attr_str"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.test_dict_basic": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "region.max_p_regions.heuristics.MaxPRegionsHeu",
    "region.max_p_regions.tests.data.attr_dict",
    "region.max_p_regions.tests.data.neighbors_dict",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr_dict",
    "region.max_p_regions.tests.data.threshold",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_heu.test_dict_multi_attr": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "region.max_p_regions.heuristics.MaxPRegionsHeu",
    "region.max_p_regions.tests.data.double_attr_dict",
    "region.max_p_regions.tests.data.double_spatially_extensive_attr_dict",
    "region.max_p_regions.tests.data.double_threshold",
    "region.max_p_regions.tests.data.neighbors_dict",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_heu.test_geodataframe_basic": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "region.max_p_regions.heuristics.MaxPRegionsHeu",
    "region.max_p_regions.tests.data.attr_str",
    "region.max_p_regions.tests.data.gdf",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr_str",
    "region.max_p_regions.tests.data.threshold",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_heu.test_geodataframe_multi_attr": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "region.max_p_regions.heuristics.MaxPRegionsHeu",
    "region.max_p_regions.tests.data.attr_str",
    "region.max_p_regions.tests.data.double_threshold",
    "region.max_p_regions.tests.data.gdf",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr_str",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_heu.test_graph_dict_basic": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "region.max_p_regions.heuristics.MaxPRegionsHeu",
    "region.max_p_regions.tests.data.attr_dict",
    "region.max_p_regions.tests.data.graph",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr_dict",
    "region.max_p_regions.tests.data.threshold",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_heu.test_graph_dict_multi_attr": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "region.max_p_regions.heuristics.MaxPRegionsHeu",
    "region.max_p_regions.tests.data.double_attr_dict",
    "region.max_p_regions.tests.data.double_spatially_extensive_attr_dict",
    "region.max_p_regions.tests.data.double_threshold",
    "region.max_p_regions.tests.data.graph",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_heu.test_graph_str_basic": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "networkx.set_node_attributes",
    "region.max_p_regions.heuristics.MaxPRegionsHeu",
    "region.max_p_regions.tests.data.attr_dict",
    "region.max_p_regions.tests.data.attr_str",
    "region.max_p_regions.tests.data.graph",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr_dict",
    "region.max_p_regions.tests.data.spatially_extensive_attr_str",
    "region.max_p_regions.tests.data.threshold",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_heu.test_graph_str_multi_attr": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "networkx.set_node_attributes",
    "region.max_p_regions.heuristics.MaxPRegionsHeu",
    "region.max_p_regions.tests.data.attr_dict",
    "region.max_p_regions.tests.data.attr_str",
    "region.max_p_regions.tests.data.double_threshold",
    "region.max_p_regions.tests.data.graph",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr_dict",
    "region.max_p_regions.tests.data.spatially_extensive_attr_str",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_heu.test_scipy_sparse_matrix": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "region.max_p_regions.heuristics.MaxPRegionsHeu",
    "region.max_p_regions.tests.data.adj",
    "region.max_p_regions.tests.data.attr",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr",
    "region.max_p_regions.tests.data.threshold",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_heu.test_scipy_sparse_matrix_multi_attr": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "region.max_p_regions.heuristics.MaxPRegionsHeu",
    "region.max_p_regions.tests.data.adj",
    "region.max_p_regions.tests.data.double_attr",
    "region.max_p_regions.tests.data.double_spatially_extensive_attr",
    "region.max_p_regions.tests.data.double_threshold",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_heu.test_w_basic": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "region.max_p_regions.heuristics.MaxPRegionsHeu",
    "region.max_p_regions.tests.data.attr",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.spatially_extensive_attr",
    "region.max_p_regions.tests.data.threshold",
    "region.max_p_regions.tests.data.w",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_heu.test_w_multi_attr": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "print",
    "region.max_p_regions.heuristics.MaxPRegionsHeu",
    "region.max_p_regions.tests.data.double_attr",
    "region.max_p_regions.tests.data.double_spatially_extensive_attr",
    "region.max_p_regions.tests.data.double_threshold",
    "region.max_p_regions.tests.data.optimal_clustering",
    "region.max_p_regions.tests.data.w",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.max_p_regions.tests.test_heu.threshold": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.threshold"
  },
  "type": "import"
 },
 "region.max_p_regions.tests.test_heu.w": {
  "data": {
   "shadows": "region.max_p_regions.tests.data.w"
  },
  "type": "import"
 },
 "region.objective_function": {
  "data": {},
  "type": "module"
 },
 "region.objective_function.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "region.objective_function.ObjectiveFunction": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "region.objective_function.ObjectiveFunction.__call__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "region.objective_function.ObjectiveFunction.__init__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "region.util.get_metric_function"
   ]
  },
  "type": "function"
 },
 "region.objective_function.ObjectiveFunction.update": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "abc.abstractmethod"
   ]
  },
  "type": "function"
 },
 "region.objective_function.ObjectiveFunctionCenter": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "region.objective_function.ObjectiveFunction"
   ]
  },
  "type": "class"
 },
 "region.objective_function.ObjectiveFunctionCenter.__call__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "region.objective_function.ObjectiveFunctionCenter.__init__": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.mean",
    "numpy.sum",
    "super"
   ]
  },
  "type": "function"
 },
 "region.objective_function.ObjectiveFunctionCenter._intraregional_heterogeneity": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "region.objective_function.ObjectiveFunctionCenter.update": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "region.objective_function.ObjectiveFunctionPairwise": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "region.objective_function.ObjectiveFunction"
   ]
  },
  "type": "class"
 },
 "region.objective_function.ObjectiveFunctionPairwise.__call__": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.where",
    "region.objective_function.itertools",
    "set",
    "sum"
   ]
  },
  "type": "function"
 },
 "region.objective_function.ObjectiveFunctionPairwise.update": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "sum"
   ]
  },
  "type": "function"
 },
 "region.objective_function.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "region.objective_function.get_metric_function": {
  "data": {
   "shadows": "region.util.get_metric_function"
  },
  "type": "import"
 },
 "region.objective_function.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "region.objective_function.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "region.p_regions": {
  "data": {},
  "type": "module"
 },
 "region.p_regions.api": {
  "data": {},
  "type": "module"
 },
 "region.p_regions.azp": {
  "data": {},
  "type": "module"
 },
 "region.p_regions.azp.AZP": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "region.util.copy_func"
   ]
  },
  "type": "class"
 },
 "region.p_regions.azp.AZP.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "region.p_regions.azp.random",
    "region.p_regions.azp_util.AllowMoveAZP",
    "region.p_regions.azp_util.AllowMoveStrategy"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZP._azp_connected_component": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "any",
    "float",
    "len",
    "list",
    "numpy.unique",
    "numpy.where",
    "region.csgraph_utils.is_connected",
    "region.csgraph_utils.neighbors",
    "region.csgraph_utils.sub_adj_matrix",
    "region.util.count",
    "region.util.make_move",
    "region.util.pop_randomly_from",
    "set"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZP.fit_from_dict": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.int32",
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.util.array_from_dict_values",
    "region.util.scipy_sparse_matrix_from_dict",
    "sorted"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZP.fit_from_geodataframe": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.util.array_from_df_col",
    "region.util.w_from_gdf"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZP.fit_from_networkx": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "networkx.to_scipy_sparse_matrix",
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.util.array_from_graph_or_dict"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZP.fit_from_scipy_sparse_matrix": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.ones",
    "numpy.where",
    "region.csgraph_utils.sub_adj_matrix",
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.util.assert_feasible",
    "region.util.generate_initial_sol",
    "region.util.separate_components"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZP.fit_from_w": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.util.scipy_sparse_matrix_from_w"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZPBasicTabu": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPTabu"
   ]
  },
  "type": "class"
 },
 "region.p_regions.azp.AZPBasicTabu.__init__": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "collections.deque",
    "super"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZPBasicTabu._azp_connected_component": {
  "data": {
   "lineno": 765,
   "symbols_in_volume": [
    "float",
    "len",
    "list",
    "numpy.unique",
    "numpy.where",
    "range",
    "region.csgraph_utils.is_connected",
    "region.csgraph_utils.neighbors",
    "region.csgraph_utils.sub_adj_matrix",
    "region.util.Move",
    "region.util.count",
    "region.util.random_element_from",
    "tuple"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZPReactiveTabu": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPTabu"
   ]
  },
  "type": "class"
 },
 "region.p_regions.azp.AZPReactiveTabu.__init__": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "ValueError",
    "collections.deque",
    "super"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZPReactiveTabu._azp_connected_component": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "IndexError",
    "collections.deque",
    "enumerate",
    "float",
    "len",
    "list",
    "max",
    "numpy.array",
    "numpy.unique",
    "numpy.where",
    "range",
    "region.csgraph_utils.is_connected",
    "region.csgraph_utils.neighbors",
    "region.csgraph_utils.sub_adj_matrix",
    "region.p_regions.azp.math",
    "region.p_regions.azp.random",
    "region.util.Move",
    "region.util.count",
    "reversed",
    "tuple"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZPSimulatedAnnealing": {
  "data": {
   "lineno": 397
  },
  "type": "class"
 },
 "region.p_regions.azp.AZPSimulatedAnnealing.__init__": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "NotImplementedError",
    "float"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZPSimulatedAnnealing.fit_from_dict": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "numpy.int32",
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.util.array_from_dict_values",
    "region.util.scipy_sparse_matrix_from_dict",
    "sorted"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZPSimulatedAnnealing.fit_from_geodataframe": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.util.array_from_df_col",
    "region.util.w_from_gdf"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZPSimulatedAnnealing.fit_from_networkx": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "networkx.to_scipy_sparse_matrix",
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.util.array_from_graph_or_dict"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZPSimulatedAnnealing.fit_from_scipy_sparse_matrix": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "ValueError",
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.p_regions.azp.AZP",
    "region.p_regions.azp_util.AllowMoveAZPSimulatedAnnealing",
    "tuple"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZPSimulatedAnnealing.fit_from_w": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "region.objective_function.ObjectiveFunctionPairwise",
    "region.util.scipy_sparse_matrix_from_w"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZPSimulatedAnnealing.move_made_alert": {
  "data": {
   "lineno": 704
  },
  "type": "function"
 },
 "region.p_regions.azp.AZPSimulatedAnnealing.sa_moves_alert": {
  "data": {
   "lineno": 701
  },
  "type": "function"
 },
 "region.p_regions.azp.AZPTabu": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "region.p_regions.azp.AZP",
    "region.p_regions.azp.abc"
   ]
  },
  "type": "class"
 },
 "region.p_regions.azp.AZPTabu._make_move": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "region.util.Move",
    "region.util.boolean_assert_feasible",
    "region.util.make_move"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AZPTabu.reset_tabu": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "collections.deque"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp.AllowMoveAZP": {
  "data": {
   "shadows": "region.p_regions.azp_util.AllowMoveAZP"
  },
  "type": "import"
 },
 "region.p_regions.azp.AllowMoveAZPSimulatedAnnealing": {
  "data": {
   "shadows": "region.p_regions.azp_util.AllowMoveAZPSimulatedAnnealing"
  },
  "type": "import"
 },
 "region.p_regions.azp.AllowMoveStrategy": {
  "data": {
   "shadows": "region.p_regions.azp_util.AllowMoveStrategy"
  },
  "type": "import"
 },
 "region.p_regions.azp.Move": {
  "data": {
   "shadows": "region.util.Move"
  },
  "type": "import"
 },
 "region.p_regions.azp.ObjectiveFunctionPairwise": {
  "data": {
   "shadows": "region.objective_function.ObjectiveFunctionPairwise"
  },
  "type": "import"
 },
 "region.p_regions.azp.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "region.p_regions.azp.array_from_df_col": {
  "data": {
   "shadows": "region.util.array_from_df_col"
  },
  "type": "import"
 },
 "region.p_regions.azp.array_from_dict_values": {
  "data": {
   "shadows": "region.util.array_from_dict_values"
  },
  "type": "import"
 },
 "region.p_regions.azp.array_from_graph_or_dict": {
  "data": {
   "shadows": "region.util.array_from_graph_or_dict"
  },
  "type": "import"
 },
 "region.p_regions.azp.assert_feasible": {
  "data": {
   "shadows": "region.util.assert_feasible"
  },
  "type": "import"
 },
 "region.p_regions.azp.boolean_assert_feasible": {
  "data": {
   "shadows": "region.util.boolean_assert_feasible"
  },
  "type": "import"
 },
 "region.p_regions.azp.copy_func": {
  "data": {
   "shadows": "region.util.copy_func"
  },
  "type": "import"
 },
 "region.p_regions.azp.count": {
  "data": {
   "shadows": "region.util.count"
  },
  "type": "import"
 },
 "region.p_regions.azp.deque": {
  "data": {
   "shadows": "collections.deque"
  },
  "type": "import"
 },
 "region.p_regions.azp.generate_initial_sol": {
  "data": {
   "shadows": "region.util.generate_initial_sol"
  },
  "type": "import"
 },
 "region.p_regions.azp.is_connected": {
  "data": {
   "shadows": "region.csgraph_utils.is_connected"
  },
  "type": "import"
 },
 "region.p_regions.azp.make_move": {
  "data": {
   "shadows": "region.util.make_move"
  },
  "type": "import"
 },
 "region.p_regions.azp.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "region.p_regions.azp.neighbors": {
  "data": {
   "shadows": "region.csgraph_utils.neighbors"
  },
  "type": "import"
 },
 "region.p_regions.azp.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "region.p_regions.azp.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "region.p_regions.azp.pop_randomly_from": {
  "data": {
   "shadows": "region.util.pop_randomly_from"
  },
  "type": "import"
 },
 "region.p_regions.azp.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "region.p_regions.azp.random_element_from": {
  "data": {
   "shadows": "region.util.random_element_from"
  },
  "type": "import"
 },
 "region.p_regions.azp.scipy_sparse_matrix_from_dict": {
  "data": {
   "shadows": "region.util.scipy_sparse_matrix_from_dict"
  },
  "type": "import"
 },
 "region.p_regions.azp.scipy_sparse_matrix_from_w": {
  "data": {
   "shadows": "region.util.scipy_sparse_matrix_from_w"
  },
  "type": "import"
 },
 "region.p_regions.azp.separate_components": {
  "data": {
   "shadows": "region.util.separate_components"
  },
  "type": "import"
 },
 "region.p_regions.azp.sub_adj_matrix": {
  "data": {
   "shadows": "region.csgraph_utils.sub_adj_matrix"
  },
  "type": "import"
 },
 "region.p_regions.azp.w_from_gdf": {
  "data": {
   "shadows": "region.util.w_from_gdf"
  },
  "type": "import"
 },
 "region.p_regions.azp_util": {
  "data": {},
  "type": "module"
 },
 "region.p_regions.azp_util.AllowMoveAZP": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "region.p_regions.azp_util.AllowMoveStrategy"
   ]
  },
  "type": "class"
 },
 "region.p_regions.azp_util.AllowMoveAZP.__call__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "region.p_regions.azp_util.AllowMoveAZPMaxPRegions": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "region.p_regions.azp_util.AllowMoveStrategy"
   ]
  },
  "type": "class"
 },
 "region.p_regions.azp_util.AllowMoveAZPMaxPRegions.__call__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.where",
    "sum"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp_util.AllowMoveAZPMaxPRegions.__getattr__": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp_util.AllowMoveAZPMaxPRegions.__init__": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "region.p_regions.azp_util.AllowMoveAZPMaxPRegions.start_new_component": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp_util.AllowMoveAZPSimulatedAnnealing": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "region.p_regions.azp_util.AllowMoveStrategy"
   ]
  },
  "type": "class"
 },
 "region.p_regions.azp_util.AllowMoveAZPSimulatedAnnealing.__call__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "region.p_regions.azp_util.math",
    "region.p_regions.azp_util.random"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp_util.AllowMoveAZPSimulatedAnnealing.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "region.p_regions.azp_util.numbers",
    "super"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp_util.AllowMoveAZPSimulatedAnnealing.notify_min_sa_moves": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "observer_func"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp_util.AllowMoveAZPSimulatedAnnealing.notify_move_made": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "observer_func"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp_util.AllowMoveAZPSimulatedAnnealing.register_move_made": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "callable"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp_util.AllowMoveAZPSimulatedAnnealing.register_sa_moves_term": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "callable"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp_util.AllowMoveAZPSimulatedAnnealing.reset": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "region.p_regions.azp_util.AllowMoveAZPSimulatedAnnealing.update_temperature": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "region.p_regions.azp_util.AllowMoveStrategy": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "region.p_regions.azp_util.abc"
   ]
  },
  "type": "class"
 },
 "region.p_regions.azp_util.AllowMoveStrategy.__call__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "region.p_regions.azp_util.abc"
   ]
  },
  "type": "function"
 },
 "region.p_regions.azp_util.AllowMoveStrategy.start_new_component": {
  "data": {
   "lineno": 10
  },
  "type": "function"
 },
 "region.p_regions.azp_util.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "region.p_regions.azp_util.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "region.p_regions.azp_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "region.p_regions.azp_util.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "region.p_regions.azp_util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "region.p_regions.exact": {
  "data": {},
  "type": "module"
 },
 "region.p_regions.exact.GeoDataFrame": {
  "data": {
   "shadows": "geopandas.GeoDataFrame"
  },
  "type": "import"
 },
 "region.p_regions.exact.LpInteger": {
  "data": {
   "shadows": "pulp.LpInteger"
  },
  "type": "import"
 },
 "region.p_regions.exact.LpMinimize": {
  "data": {
   "shadows": "pulp.LpMinimize"
  },
  "type": "import"
 },
 "region.p_regions.exact.LpProblem": {
  "data": {
   "shadows": "pulp.LpProblem"
  },
  "type": "import"
 },
 "region.p_regions.exact.LpVariable": {
  "data": {
   "shadows": "pulp.LpVariable"
  },
  "type": "import"
 },
 "region.p_regions.exact.PRegionsExact": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "region.util.copy_func"
   ]
  },
  "type": "class"
 },
 "region.p_regions.exact.PRegionsExact.__init__": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "region.util.raise_distance_metric_not_set"
   ]
  },
  "type": "function"
 },
 "region.p_regions.exact.PRegionsExact._check_method": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "region.p_regions.exact.PRegionsExact.fit_from_dict": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "region.util.array_from_dict_values",
    "region.util.scipy_sparse_matrix_from_dict"
   ]
  },
  "type": "function"
 },
 "region.p_regions.exact.PRegionsExact.fit_from_geodataframe": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "region.util.array_from_df_col",
    "region.util.w_from_gdf"
   ]
  },
  "type": "function"
 },
 "region.p_regions.exact.PRegionsExact.fit_from_networkx": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "networkx.to_scipy_sparse_matrix",
    "region.util.array_from_graph_or_dict"
   ]
  },
  "type": "function"
 },
 "region.p_regions.exact.PRegionsExact.fit_from_scipy_sparse_matrix": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "opt_func",
    "region.p_regions.exact.numbers",
    "region.util.check_solver",
    "region.util.get_metric_function"
   ]
  },
  "type": "function"
 },
 "region.p_regions.exact.PRegionsExact.fit_from_w": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "region.util.scipy_sparse_matrix_from_w"
   ]
  },
  "type": "function"
 },
 "region.p_regions.exact._flow": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "list",
    "metric",
    "numpy.zeros",
    "pulp.LpInteger",
    "pulp.LpMinimize",
    "pulp.LpProblem",
    "pulp.LpVariable.dicts",
    "pulp.lpSum",
    "range",
    "region.csgraph_utils.neighbors",
    "region.util.get_solver_instance",
    "sum"
   ]
  },
  "type": "function"
 },
 "region.p_regions.exact._order": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "len",
    "list",
    "metric",
    "numpy.zeros",
    "pulp.LpInteger",
    "pulp.LpMinimize",
    "pulp.LpProblem",
    "pulp.LpVariable.dicts",
    "pulp.lpSum",
    "range",
    "region.csgraph_utils.neighbors",
    "region.util.get_solver_instance",
    "sum"
   ]
  },
  "type": "function"
 },
 "region.p_regions.exact._tree": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "list",
    "metric",
    "pulp.LpInteger",
    "pulp.LpMinimize",
    "pulp.LpProblem",
    "pulp.LpVariable.dicts",
    "pulp.lpSum",
    "range",
    "region.csgraph_utils.neighbors",
    "region.util.array_from_region_list",
    "region.util.get_solver_instance",
    "set"
   ]
  },
  "type": "function"
 },
 "region.p_regions.exact.array_from_df_col": {
  "data": {
   "shadows": "region.util.array_from_df_col"
  },
  "type": "import"
 },
 "region.p_regions.exact.array_from_dict_values": {
  "data": {
   "shadows": "region.util.array_from_dict_values"
  },
  "type": "import"
 },
 "region.p_regions.exact.array_from_graph_or_dict": {
  "data": {
   "shadows": "region.util.array_from_graph_or_dict"
  },
  "type": "import"
 },
 "region.p_regions.exact.array_from_region_list": {
  "data": {
   "shadows": "region.util.array_from_region_list"
  },
  "type": "import"
 },
 "region.p_regions.exact.check_solver": {
  "data": {
   "shadows": "region.util.check_solver"
  },
  "type": "import"
 },
 "region.p_regions.exact.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "region.p_regions.exact.copy_func": {
  "data": {
   "shadows": "region.util.copy_func"
  },
  "type": "import"
 },
 "region.p_regions.exact.get_metric_function": {
  "data": {
   "shadows": "region.util.get_metric_function"
  },
  "type": "import"
 },
 "region.p_regions.exact.get_solver_instance": {
  "data": {
   "shadows": "region.util.get_solver_instance"
  },
  "type": "import"
 },
 "region.p_regions.exact.lpSum": {
  "data": {
   "shadows": "pulp.lpSum"
  },
  "type": "import"
 },
 "region.p_regions.exact.neighbors": {
  "data": {
   "shadows": "region.csgraph_utils.neighbors"
  },
  "type": "import"
 },
 "region.p_regions.exact.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "region.p_regions.exact.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "region.p_regions.exact.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "region.p_regions.exact.raise_distance_metric_not_set": {
  "data": {
   "shadows": "region.util.raise_distance_metric_not_set"
  },
  "type": "import"
 },
 "region.p_regions.exact.scipy_sparse_matrix_from_dict": {
  "data": {
   "shadows": "region.util.scipy_sparse_matrix_from_dict"
  },
  "type": "import"
 },
 "region.p_regions.exact.scipy_sparse_matrix_from_w": {
  "data": {
   "shadows": "region.util.scipy_sparse_matrix_from_w"
  },
  "type": "import"
 },
 "region.p_regions.exact.w_from_gdf": {
  "data": {
   "shadows": "region.util.w_from_gdf"
  },
  "type": "import"
 },
 "region.p_regions.tests": {
  "data": {},
  "type": "module"
 },
 "region.p_regions.tests.data": {
  "data": {
   "symbols_in_volume": [
    "geopandas.GeoDataFrame",
    "numpy.array",
    "numpy.column_stack",
    "range",
    "region.p_regions.tests.data.attr",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.gdf",
    "region.tests.util.convert_from_geodataframe",
    "region.tests.util.region_list_from_array",
    "region.util.dataframe_to_dict",
    "shapely.geometry.Polygon"
   ]
  },
  "type": "module"
 },
 "region.p_regions.tests.data.GeoDataFrame": {
  "data": {
   "shadows": "geopandas.GeoDataFrame"
  },
  "type": "import"
 },
 "region.p_regions.tests.data.Polygon": {
  "data": {
   "shadows": "shapely.geometry.Polygon"
  },
  "type": "import"
 },
 "region.p_regions.tests.data.attr": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "region.p_regions.tests.data.attr_dict": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "region.p_regions.tests.data.attr_str": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "region.p_regions.tests.data.convert_from_geodataframe": {
  "data": {
   "shadows": "region.tests.util.convert_from_geodataframe"
  },
  "type": "import"
 },
 "region.p_regions.tests.data.dataframe_to_dict": {
  "data": {
   "shadows": "region.util.dataframe_to_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.data.double_attr": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "region.p_regions.tests.data.double_attr_dict": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "region.p_regions.tests.data.double_attr_str": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "region.p_regions.tests.data.gdf": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "region.p_regions.tests.data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "region.p_regions.tests.data.optimal_clustering": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "region.p_regions.tests.data.region_list_from_array": {
  "data": {
   "shadows": "region.tests.util.region_list_from_array"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp": {
  "data": {},
  "type": "module"
 },
 "region.p_regions.tests.test_azp.AZP": {
  "data": {
   "shadows": "region.p_regions.azp.AZP"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.adj": {
  "data": {
   "shadows": "region.p_regions.tests.data.adj"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.attr": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.attr_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.attr_str": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr_str"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.compare_region_lists": {
  "data": {
   "shadows": "region.tests.util.compare_region_lists"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.dataframe_to_dict": {
  "data": {
   "shadows": "region.util.dataframe_to_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.double_attr": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.double_attr_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.double_attr_str": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr_str"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.gdf": {
  "data": {
   "shadows": "region.p_regions.tests.data.gdf"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.graph": {
  "data": {
   "shadows": "region.p_regions.tests.data.graph"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.neighbors_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.neighbors_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.optimal_clustering": {
  "data": {
   "shadows": "region.p_regions.tests.data.optimal_clustering"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.region_list_from_array": {
  "data": {
   "shadows": "region.tests.util.region_list_from_array"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp.test_dict": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "region.p_regions.azp.AZP",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.neighbors_dict",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array",
    "region.util.dataframe_to_dict"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp.test_dict_multi_attr": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "region.p_regions.azp.AZP",
    "region.p_regions.tests.data.double_attr_dict",
    "region.p_regions.tests.data.neighbors_dict",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp.test_geodataframe": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "region.p_regions.azp.AZP",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp.test_geodataframe_multi_attr": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "region.p_regions.azp.AZP",
    "region.p_regions.tests.data.double_attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp.test_graph_dict_basic": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "region.p_regions.azp.AZP",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp.test_graph_dict_multi_attr": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "region.p_regions.azp.AZP",
    "region.p_regions.tests.data.double_attr_dict",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp.test_graph_str_basic": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "networkx.set_node_attributes",
    "region.p_regions.azp.AZP",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp.test_graph_str_multi_attr": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "networkx.set_node_attributes",
    "region.p_regions.azp.AZP",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.double_attr_str",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp.test_scipy_sparse_matrix": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "region.p_regions.azp.AZP",
    "region.p_regions.tests.data.adj",
    "region.p_regions.tests.data.attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp.test_scipy_sparse_matrix_multi_attr": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "region.p_regions.azp.AZP",
    "region.p_regions.tests.data.adj",
    "region.p_regions.tests.data.double_attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp.test_w_basic": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "region.p_regions.azp.AZP",
    "region.p_regions.tests.data.attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.data.w",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp.test_w_multi_attr": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "region.p_regions.azp.AZP",
    "region.p_regions.tests.data.double_attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.data.w",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp.w": {
  "data": {
   "shadows": "region.p_regions.tests.data.w"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu": {
  "data": {},
  "type": "module"
 },
 "region.p_regions.tests.test_azp_basic_tabu.AZPBasicTabu": {
  "data": {
   "shadows": "region.p_regions.azp.AZPBasicTabu"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.adj": {
  "data": {
   "shadows": "region.p_regions.tests.data.adj"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.attr": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.attr_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.attr_str": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr_str"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.compare_region_lists": {
  "data": {
   "shadows": "region.tests.util.compare_region_lists"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.dataframe_to_dict": {
  "data": {
   "shadows": "region.util.dataframe_to_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.double_attr": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.double_attr_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.double_attr_str": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr_str"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.gdf": {
  "data": {
   "shadows": "region.p_regions.tests.data.gdf"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.graph": {
  "data": {
   "shadows": "region.p_regions.tests.data.graph"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.neighbors_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.neighbors_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.optimal_clustering": {
  "data": {
   "shadows": "region.p_regions.tests.data.optimal_clustering"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.region_list_from_array": {
  "data": {
   "shadows": "region.tests.util.region_list_from_array"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_basic_tabu.test_dict": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPBasicTabu",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.neighbors_dict",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array",
    "region.util.dataframe_to_dict"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_basic_tabu.test_dict_multi_attr": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPBasicTabu",
    "region.p_regions.tests.data.double_attr_dict",
    "region.p_regions.tests.data.neighbors_dict",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_basic_tabu.test_geodataframe": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPBasicTabu",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_basic_tabu.test_geodataframe_multi_attr": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPBasicTabu",
    "region.p_regions.tests.data.double_attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_basic_tabu.test_graph_dict_basic": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPBasicTabu",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_basic_tabu.test_graph_dict_multi_attr": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPBasicTabu",
    "region.p_regions.tests.data.double_attr_dict",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_basic_tabu.test_graph_str_basic": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "networkx.set_node_attributes",
    "region.p_regions.azp.AZPBasicTabu",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_basic_tabu.test_graph_str_multi_attr": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "networkx.set_node_attributes",
    "region.p_regions.azp.AZPBasicTabu",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.double_attr_str",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_basic_tabu.test_scipy_sparse_matrix": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPBasicTabu",
    "region.p_regions.tests.data.adj",
    "region.p_regions.tests.data.attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_basic_tabu.test_scipy_sparse_matrix_multi_attr": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPBasicTabu",
    "region.p_regions.tests.data.adj",
    "region.p_regions.tests.data.double_attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_basic_tabu.test_w_basic": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPBasicTabu",
    "region.p_regions.tests.data.attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.data.w",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_basic_tabu.test_w_multi_attr": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPBasicTabu",
    "region.p_regions.tests.data.double_attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.data.w",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_basic_tabu.w": {
  "data": {
   "shadows": "region.p_regions.tests.data.w"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu": {
  "data": {},
  "type": "module"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.AZPReactiveTabu": {
  "data": {
   "shadows": "region.p_regions.azp.AZPReactiveTabu"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.adj": {
  "data": {
   "shadows": "region.p_regions.tests.data.adj"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.attr": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.attr_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.attr_str": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr_str"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.compare_region_lists": {
  "data": {
   "shadows": "region.tests.util.compare_region_lists"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.dataframe_to_dict": {
  "data": {
   "shadows": "region.util.dataframe_to_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.double_attr": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.double_attr_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.double_attr_str": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr_str"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.gdf": {
  "data": {
   "shadows": "region.p_regions.tests.data.gdf"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.graph": {
  "data": {
   "shadows": "region.p_regions.tests.data.graph"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.k1": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.k2": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.max_it": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.n_reg": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.neighbors_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.neighbors_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.optimal_clustering": {
  "data": {
   "shadows": "region.p_regions.tests.data.optimal_clustering"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.region_list_from_array": {
  "data": {
   "shadows": "region.tests.util.region_list_from_array"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.test_dict": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPReactiveTabu",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.neighbors_dict",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_azp_reactive_tabu.k1",
    "region.p_regions.tests.test_azp_reactive_tabu.k2",
    "region.p_regions.tests.test_azp_reactive_tabu.max_it",
    "region.p_regions.tests.test_azp_reactive_tabu.n_reg",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array",
    "region.util.dataframe_to_dict"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.test_dict_multi_attr": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPReactiveTabu",
    "region.p_regions.tests.data.double_attr_dict",
    "region.p_regions.tests.data.neighbors_dict",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_azp_reactive_tabu.k1",
    "region.p_regions.tests.test_azp_reactive_tabu.k2",
    "region.p_regions.tests.test_azp_reactive_tabu.max_it",
    "region.p_regions.tests.test_azp_reactive_tabu.n_reg",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.test_geodataframe": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPReactiveTabu",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_azp_reactive_tabu.k1",
    "region.p_regions.tests.test_azp_reactive_tabu.k2",
    "region.p_regions.tests.test_azp_reactive_tabu.max_it",
    "region.p_regions.tests.test_azp_reactive_tabu.n_reg",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.test_geodataframe_multi_attr": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPReactiveTabu",
    "region.p_regions.tests.data.double_attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_azp_reactive_tabu.k1",
    "region.p_regions.tests.test_azp_reactive_tabu.k2",
    "region.p_regions.tests.test_azp_reactive_tabu.max_it",
    "region.p_regions.tests.test_azp_reactive_tabu.n_reg",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.test_graph_dict_basic": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPReactiveTabu",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_azp_reactive_tabu.k1",
    "region.p_regions.tests.test_azp_reactive_tabu.k2",
    "region.p_regions.tests.test_azp_reactive_tabu.max_it",
    "region.p_regions.tests.test_azp_reactive_tabu.n_reg",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.test_graph_dict_multi_attr": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPReactiveTabu",
    "region.p_regions.tests.data.double_attr_dict",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_azp_reactive_tabu.k1",
    "region.p_regions.tests.test_azp_reactive_tabu.k2",
    "region.p_regions.tests.test_azp_reactive_tabu.max_it",
    "region.p_regions.tests.test_azp_reactive_tabu.n_reg",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.test_graph_str_basic": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "networkx.set_node_attributes",
    "region.p_regions.azp.AZPReactiveTabu",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_azp_reactive_tabu.k1",
    "region.p_regions.tests.test_azp_reactive_tabu.k2",
    "region.p_regions.tests.test_azp_reactive_tabu.max_it",
    "region.p_regions.tests.test_azp_reactive_tabu.n_reg",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.test_graph_str_multi_attr": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "networkx.set_node_attributes",
    "region.p_regions.azp.AZPReactiveTabu",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.double_attr_str",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_azp_reactive_tabu.k1",
    "region.p_regions.tests.test_azp_reactive_tabu.k2",
    "region.p_regions.tests.test_azp_reactive_tabu.max_it",
    "region.p_regions.tests.test_azp_reactive_tabu.n_reg",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.test_scipy_sparse_matrix": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPReactiveTabu",
    "region.p_regions.tests.data.adj",
    "region.p_regions.tests.data.attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_azp_reactive_tabu.k1",
    "region.p_regions.tests.test_azp_reactive_tabu.k2",
    "region.p_regions.tests.test_azp_reactive_tabu.max_it",
    "region.p_regions.tests.test_azp_reactive_tabu.n_reg",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.test_scipy_sparse_matrix_multi_attr": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPReactiveTabu",
    "region.p_regions.tests.data.adj",
    "region.p_regions.tests.data.double_attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_azp_reactive_tabu.k1",
    "region.p_regions.tests.test_azp_reactive_tabu.k2",
    "region.p_regions.tests.test_azp_reactive_tabu.max_it",
    "region.p_regions.tests.test_azp_reactive_tabu.n_reg",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.test_w_basic": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPReactiveTabu",
    "region.p_regions.tests.data.attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.data.w",
    "region.p_regions.tests.test_azp_reactive_tabu.k1",
    "region.p_regions.tests.test_azp_reactive_tabu.k2",
    "region.p_regions.tests.test_azp_reactive_tabu.max_it",
    "region.p_regions.tests.test_azp_reactive_tabu.n_reg",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.test_w_multi_attr": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPReactiveTabu",
    "region.p_regions.tests.data.double_attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.data.w",
    "region.p_regions.tests.test_azp_reactive_tabu.k1",
    "region.p_regions.tests.test_azp_reactive_tabu.k2",
    "region.p_regions.tests.test_azp_reactive_tabu.max_it",
    "region.p_regions.tests.test_azp_reactive_tabu.n_reg",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_reactive_tabu.w": {
  "data": {
   "shadows": "region.p_regions.tests.data.w"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing": {
  "data": {},
  "type": "module"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.AZPSimulatedAnnealing": {
  "data": {
   "shadows": "region.p_regions.azp.AZPSimulatedAnnealing"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.adj": {
  "data": {
   "shadows": "region.p_regions.tests.data.adj"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.attr": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.attr_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.attr_str": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr_str"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.compare_region_lists": {
  "data": {
   "shadows": "region.tests.util.compare_region_lists"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.dataframe_to_dict": {
  "data": {
   "shadows": "region.util.dataframe_to_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.double_attr": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.double_attr_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.double_attr_str": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr_str"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.gdf": {
  "data": {
   "shadows": "region.p_regions.tests.data.gdf"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.graph": {
  "data": {
   "shadows": "region.p_regions.tests.data.graph"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.neighbors_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.neighbors_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.optimal_clustering": {
  "data": {
   "shadows": "region.p_regions.tests.data.optimal_clustering"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.region_list_from_array": {
  "data": {
   "shadows": "region.tests.util.region_list_from_array"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.test_dict": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPSimulatedAnnealing",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.neighbors_dict",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array",
    "region.util.dataframe_to_dict"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.test_dict_multi_attr": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPSimulatedAnnealing",
    "region.p_regions.tests.data.double_attr_dict",
    "region.p_regions.tests.data.neighbors_dict",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.test_geodataframe": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPSimulatedAnnealing",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.test_geodataframe_multi_attr": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPSimulatedAnnealing",
    "region.p_regions.tests.data.double_attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.test_graph_dict_basic": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPSimulatedAnnealing",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.test_graph_dict_multi_attr": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPSimulatedAnnealing",
    "region.p_regions.tests.data.double_attr_dict",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.test_graph_str_basic": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "networkx.set_node_attributes",
    "region.p_regions.azp.AZPSimulatedAnnealing",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.test_graph_str_multi_attr": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "networkx.set_node_attributes",
    "region.p_regions.azp.AZPSimulatedAnnealing",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.double_attr_str",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.test_scipy_sparse_matrix": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPSimulatedAnnealing",
    "region.p_regions.tests.data.adj",
    "region.p_regions.tests.data.attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.test_scipy_sparse_matrix_multi_attr": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPSimulatedAnnealing",
    "region.p_regions.tests.data.adj",
    "region.p_regions.tests.data.double_attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.test_w_basic": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPSimulatedAnnealing",
    "region.p_regions.tests.data.attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.data.w",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.test_w_multi_attr": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "region.p_regions.azp.AZPSimulatedAnnealing",
    "region.p_regions.tests.data.double_attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.data.w",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_azp_simulated_annealing.w": {
  "data": {
   "shadows": "region.p_regions.tests.data.w"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact": {
  "data": {},
  "type": "module"
 },
 "region.p_regions.tests.test_exact.PRegionsExact": {
  "data": {
   "shadows": "region.p_regions.exact.PRegionsExact"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.adj": {
  "data": {
   "shadows": "region.p_regions.tests.data.adj"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.attr": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.attr_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.attr_str": {
  "data": {
   "shadows": "region.p_regions.tests.data.attr_str"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.compare_region_lists": {
  "data": {
   "shadows": "region.tests.util.compare_region_lists"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.dataframe_to_dict": {
  "data": {
   "shadows": "region.util.dataframe_to_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.double_attr": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.double_attr_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.double_attr_str": {
  "data": {
   "shadows": "region.p_regions.tests.data.double_attr_str"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.gdf": {
  "data": {
   "shadows": "region.p_regions.tests.data.gdf"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.graph": {
  "data": {
   "shadows": "region.p_regions.tests.data.graph"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.method": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "region.p_regions.tests.test_exact.pytest"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_exact.neighbors_dict": {
  "data": {
   "shadows": "region.p_regions.tests.data.neighbors_dict"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.optimal_clustering": {
  "data": {
   "shadows": "region.p_regions.tests.data.optimal_clustering"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.region_list_from_array": {
  "data": {
   "shadows": "region.tests.util.region_list_from_array"
  },
  "type": "import"
 },
 "region.p_regions.tests.test_exact.test_dict": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "region.p_regions.exact.PRegionsExact",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.neighbors_dict",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_exact.method",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array",
    "region.util.dataframe_to_dict"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_exact.test_dict_multi_attr": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "region.p_regions.exact.PRegionsExact",
    "region.p_regions.tests.data.double_attr_dict",
    "region.p_regions.tests.data.neighbors_dict",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_exact.method",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_exact.test_geodataframe": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "region.p_regions.exact.PRegionsExact",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_exact.method",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_exact.test_geodataframe_multi_attr": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "region.p_regions.exact.PRegionsExact",
    "region.p_regions.tests.data.double_attr_str",
    "region.p_regions.tests.data.gdf",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_exact.method",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_exact.test_graph_dict_basic": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "region.p_regions.exact.PRegionsExact",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_exact.method",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_exact.test_graph_dict_multi_attr": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "region.p_regions.exact.PRegionsExact",
    "region.p_regions.tests.data.double_attr_dict",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_exact.method",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_exact.test_graph_str_basic": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "networkx.set_node_attributes",
    "region.p_regions.exact.PRegionsExact",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_exact.method",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_exact.test_graph_str_multi_attr": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "networkx.set_node_attributes",
    "region.p_regions.exact.PRegionsExact",
    "region.p_regions.tests.data.attr_dict",
    "region.p_regions.tests.data.attr_str",
    "region.p_regions.tests.data.double_attr_str",
    "region.p_regions.tests.data.graph",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_exact.method",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_exact.test_scipy_sparse_matrix": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "region.p_regions.exact.PRegionsExact",
    "region.p_regions.tests.data.adj",
    "region.p_regions.tests.data.attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_exact.method",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_exact.test_scipy_sparse_matrix_multi_attr": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "region.p_regions.exact.PRegionsExact",
    "region.p_regions.tests.data.adj",
    "region.p_regions.tests.data.double_attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.test_exact.method",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_exact.test_w_basic": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "region.p_regions.exact.PRegionsExact",
    "region.p_regions.tests.data.attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.data.w",
    "region.p_regions.tests.test_exact.method",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_exact.test_w_multi_attr": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "region.p_regions.exact.PRegionsExact",
    "region.p_regions.tests.data.double_attr",
    "region.p_regions.tests.data.optimal_clustering",
    "region.p_regions.tests.data.w",
    "region.p_regions.tests.test_exact.method",
    "region.tests.util.compare_region_lists",
    "region.tests.util.region_list_from_array"
   ]
  },
  "type": "function"
 },
 "region.p_regions.tests.test_exact.w": {
  "data": {
   "shadows": "region.p_regions.tests.data.w"
  },
  "type": "import"
 },
 "region.skater": {
  "data": {},
  "type": "module"
 },
 "region.skater.__version__": {
  "data": {},
  "type": "module"
 },
 "region.skater.__version__.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "region.skater.skater": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "geopandas.read_file",
    "libpysal.examples.get_path",
    "libpysal.weights.Queen.from_dataframe",
    "region.skater.skater.Spanning_Forest",
    "region.skater.skater.W",
    "region.skater.skater.data",
    "region.skater.skater.data_c",
    "region.skater.skater.df"
   ]
  },
  "type": "module"
 },
 "region.skater.skater.OptimizeWarning": {
  "data": {
   "shadows": "scipy.optimize.OptimizeWarning"
  },
  "type": "import"
 },
 "region.skater.skater.Spanning_Forest": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "region.skater.skater.Spanning_Forest.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "affinity",
    "numpy.log",
    "numpy.mean",
    "numpy.sum",
    "sklearn.metrics.pairwise.manhattan_distances"
   ]
  },
  "type": "function"
 },
 "region.skater.skater.Spanning_Forest.__repr__": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "region.skater.skater.Spanning_Forest.find_cut": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "ValueError",
    "int",
    "numpy.inf",
    "numpy.nan",
    "numpy.ones",
    "numpy.vstack",
    "region.skater.skater.copy",
    "region.skater.skater.deletion",
    "scipy.sparse.csgraph.connected_components",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "region.skater.skater.Spanning_Forest.find_cut.tqdm": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "region.skater.skater.Spanning_Forest.fit": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "numpy.inf",
    "numpy.isfinite",
    "numpy.nan",
    "numpy.ones",
    "numpy.unique",
    "print",
    "region.skater.skater.deletion",
    "region.skater.skater.time",
    "scipy.optimize.OptimizeWarning",
    "scipy.sparse.csgraph.connected_components",
    "scipy.sparse.csgraph.minimum_spanning_tree",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "region.skater.skater.Spanning_Forest.make_cut": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "numpy.isfinite",
    "scipy.optimize.OptimizeWarning",
    "scipy.sparse.csgraph.connected_components"
   ]
  },
  "type": "function"
 },
 "region.skater.skater.Spanning_Forest.score": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "len",
    "numpy.inf",
    "numpy.unique",
    "range"
   ]
  },
  "type": "function"
 },
 "region.skater.skater.W": {
  "data": {
   "lineno": 275
  },
  "type": "constant"
 },
 "region.skater.skater.cg": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "region.skater.skater.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "region.skater.skater.data": {
  "data": {
   "lineno": 272
  },
  "type": "constant"
 },
 "region.skater.skater.data_c": {
  "data": {
   "lineno": 274
  },
  "type": "constant"
 },
 "region.skater.skater.deletion": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "region.skater.skater.df": {
  "data": {
   "lineno": 271
  },
  "type": "constant"
 },
 "region.skater.skater.examples": {
  "data": {
   "shadows": "libpysal.examples"
  },
  "type": "import"
 },
 "region.skater.skater.gpd": {
  "data": {
   "shadows": "geopandas"
  },
  "type": "import"
 },
 "region.skater.skater.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "region.skater.skater.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "region.skater.skater.result": {
  "data": {
   "lineno": 276
  },
  "type": "constant"
 },
 "region.skater.skater.skm": {
  "data": {
   "shadows": "sklearn.metrics.pairwise"
  },
  "type": "import"
 },
 "region.skater.skater.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "region.skater.skater.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "region.skater.skater.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "region.skater.skater.weights": {
  "data": {
   "shadows": "libpysal.weights"
  },
  "type": "import"
 },
 "region.skater.skater.will_fail": {
  "data": {
   "lineno": 278
  },
  "type": "constant"
 },
 "region.skater.test_skater": {
  "data": {
   "symbols_in_volume": [
    "libpysal.examples.example_manager.load",
    "libpysal.examples.get_path",
    "libpysal.io.geotable.read_files",
    "libpysal.weights.Queen.from_dataframe",
    "region.skater.test_skater.data",
    "region.skater.test_skater.df",
    "region.skater.test_skater.os"
   ]
  },
  "type": "module"
 },
 "region.skater.test_skater.Spanning_Forest": {
  "data": {
   "shadows": "region.skater.skater.Spanning_Forest"
  },
  "type": "import"
 },
 "region.skater.test_skater.TESTDIR": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "region.skater.test_skater.W": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "region.skater.test_skater.data": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "region.skater.test_skater.data_c": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "region.skater.test_skater.df": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "region.skater.test_skater.examples": {
  "data": {
   "shadows": "libpysal.examples"
  },
  "type": "import"
 },
 "region.skater.test_skater.geotable": {
  "data": {
   "shadows": "libpysal.io.geotable"
  },
  "type": "import"
 },
 "region.skater.test_skater.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "region.skater.test_skater.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "region.skater.test_skater.skm": {
  "data": {
   "shadows": "sklearn.metrics.pairwise"
  },
  "type": "import"
 },
 "region.skater.test_skater.south": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "region.skater.test_skater.test_init": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "isinstance",
    "numpy.log",
    "numpy.max",
    "numpy.mean",
    "numpy.median",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "region.skater.skater.Spanning_Forest",
    "region.skater.test_skater.data",
    "region.skater.test_skater.types",
    "sklearn.metrics.pairwise.cosine_similarity",
    "sklearn.metrics.pairwise.euclidean_distances",
    "sklearn.metrics.pairwise.manhattan_distances"
   ]
  },
  "type": "function"
 },
 "region.skater.test_skater.test_run": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "numpy.inf",
    "region.skater.skater.Spanning_Forest",
    "region.skater.test_skater.W",
    "region.skater.test_skater.data_c"
   ]
  },
  "type": "function"
 },
 "region.skater.test_skater.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "region.skater.test_skater.weights": {
  "data": {
   "shadows": "libpysal.weights"
  },
  "type": "import"
 },
 "region.tests": {
  "data": {},
  "type": "module"
 },
 "region.tests.test_util": {
  "data": {},
  "type": "module"
 },
 "region.tests.test_util.AZP": {
  "data": {
   "shadows": "region.p_regions.azp.AZP"
  },
  "type": "import"
 },
 "region.tests.test_util.all_elements_equal": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "region.tests.test_util.csr_matrix": {
  "data": {
   "shadows": "scipy.sparse.csr_matrix"
  },
  "type": "import"
 },
 "region.tests.test_util.not_all_elements_equal": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "region.tests.test_util.all_elements_equal"
   ]
  },
  "type": "function"
 },
 "region.tests.test_util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "region.tests.test_util.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "region.tests.test_util.test_AZP_azp_connected_component__one_area": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.array",
    "region.p_regions.azp.AZP",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "region.tests.test_util.test_assert_feasible__contiguity": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "region.tests.test_util.pytest",
    "region.util.assert_feasible",
    "scipy.sparse.csr_matrix",
    "str"
   ]
  },
  "type": "function"
 },
 "region.tests.test_util.test_assert_feasible__number_of_regions": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "region.tests.test_util.pytest",
    "region.util.assert_feasible",
    "scipy.sparse.csr_matrix",
    "str"
   ]
  },
  "type": "function"
 },
 "region.tests.test_util.test_assert_feasible__pass_connected": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "region.tests.test_util.pytest",
    "region.util.assert_feasible",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "region.tests.test_util.test_assert_feasible__pass_disconnected": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "region.tests.test_util.pytest",
    "region.util.assert_feasible",
    "scipy.sparse.csr_matrix"
   ]
  },
  "type": "function"
 },
 "region.tests.test_util.test_pop_randomly_from": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "region.tests.test_util.not_all_elements_equal",
    "region.util.pop_randomly_from"
   ]
  },
  "type": "function"
 },
 "region.tests.test_util.test_random_element_from": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "len",
    "list",
    "range",
    "region.tests.test_util.not_all_elements_equal",
    "region.util.random_element_from"
   ]
  },
  "type": "function"
 },
 "region.tests.test_util.util": {
  "data": {
   "shadows": "region.util"
  },
  "type": "import"
 },
 "region.tests.util": {
  "data": {},
  "type": "module"
 },
 "region.tests.util.compare_region_lists": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "all",
    "len"
   ]
  },
  "type": "function"
 },
 "region.tests.util.convert_from_geodataframe": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "libpysal.weights.Rook.from_dataframe",
    "networkx.to_scipy_sparse_matrix"
   ]
  },
  "type": "function"
 },
 "region.tests.util.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "region.tests.util.region_list_from_array": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "enumerate",
    "set"
   ]
  },
  "type": "function"
 },
 "region.tests.util.weights": {
  "data": {
   "shadows": "libpysal.weights"
  },
  "type": "import"
 },
 "region.util": {
  "data": {
   "symbols_in_volume": [
    "region.util.collections"
   ]
  },
  "type": "module"
 },
 "region.util.MissingMetric": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "region.util.Move": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "region.util._randomly_divide_connected_graph": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "max",
    "numpy.unique",
    "range",
    "region.util.random",
    "scipy.sparse.csgraph.connected_components",
    "scipy.sparse.csgraph.minimum_spanning_tree"
   ]
  },
  "type": "function"
 },
 "region.util.all_elements_equal": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "region.util.array_from_df_col": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "numpy.array",
    "region.util.collections",
    "str"
   ]
  },
  "type": "function"
 },
 "region.util.array_from_dict_values": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.float",
    "numpy.fromiter",
    "region.util.collections",
    "region.util.itertools",
    "sorted"
   ]
  },
  "type": "function"
 },
 "region.util.array_from_graph": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "region.util.array_from_dict_values",
    "region.util.dict_from_graph_attr"
   ]
  },
  "type": "function"
 },
 "region.util.array_from_graph_or_dict": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "region.util.array_from_dict_values",
    "region.util.array_from_graph",
    "region.util.collections",
    "str"
   ]
  },
  "type": "function"
 },
 "region.util.array_from_region_list": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.zeros",
    "sum"
   ]
  },
  "type": "function"
 },
 "region.util.assert_feasible": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.where",
    "region.csgraph_utils.is_connected",
    "region.csgraph_utils.sub_adj_matrix",
    "set"
   ]
  },
  "type": "function"
 },
 "region.util.boolean_assert_feasible": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "len",
    "numpy.where",
    "region.csgraph_utils.is_connected",
    "region.csgraph_utils.sub_adj_matrix",
    "set"
   ]
  },
  "type": "function"
 },
 "region.util.check_solver": {
  "data": {
   "lineno": 891,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "region.util.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "region.util.copy_func": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "region.util.functools",
    "region.util.types"
   ]
  },
  "type": "function"
 },
 "region.util.count": {
  "data": {
   "lineno": 861,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.unique",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "region.util.csg": {
  "data": {
   "shadows": "scipy.sparse.csgraph"
  },
  "type": "import"
 },
 "region.util.dataframe_to_dict": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "dict",
    "numpy.array",
    "zip"
   ]
  },
  "type": "function"
 },
 "region.util.dict_from_graph_attr": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "networkx.get_node_attributes",
    "numpy.array",
    "str"
   ]
  },
  "type": "function"
 },
 "region.util.distance_metrics": {
  "data": {
   "shadows": "sklearn.metrics.pairwise.distance_metrics"
  },
  "type": "import"
 },
 "region.util.distribute_regions_among_components": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "len",
    "list",
    "region.util.random",
    "set"
   ]
  },
  "type": "function"
 },
 "region.util.dok_matrix": {
  "data": {
   "shadows": "scipy.sparse.dok.dok_matrix"
  },
  "type": "import"
 },
 "region.util.find_sublist_containing": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "LookupError",
    "enumerate"
   ]
  },
  "type": "function"
 },
 "region.util.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "region.util.generate_initial_sol": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "ValueError",
    "_randomly_divide_connected_graph",
    "len",
    "numpy.int32",
    "numpy.ones",
    "print",
    "range",
    "region.util.distribute_regions_among_components",
    "scipy.sparse.csgraph.connected_components",
    "set"
   ]
  },
  "type": "function"
 },
 "region.util.get_metric_function": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "KeyError",
    "ValueError",
    "callable",
    "isinstance",
    "sklearn.metrics.pairwise.distance_metrics",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "region.util.get_solver_instance": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "region.util.pulp",
    "solver"
   ]
  },
  "type": "function"
 },
 "region.util.is_connected": {
  "data": {
   "shadows": "region.csgraph_utils.is_connected"
  },
  "type": "import"
 },
 "region.util.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "region.util.make_move": {
  "data": {
   "lineno": 515
  },
  "type": "function"
 },
 "region.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "region.util.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "region.util.pop_randomly_from": {
  "data": {
   "lineno": 856,
   "symbols_in_volume": [
    "len",
    "region.util.random"
   ]
  },
  "type": "function"
 },
 "region.util.pulp": {
  "data": {
   "shadows": "pulp"
  },
  "type": "import"
 },
 "region.util.raise_distance_metric_not_set": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "region.util.MissingMetric"
   ]
  },
  "type": "function"
 },
 "region.util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "region.util.random_element_from": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "len",
    "region.util.random"
   ]
  },
  "type": "function"
 },
 "region.util.scipy_sparse_matrix_from_dict": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "scipy.sparse.dok.dok_matrix",
    "sorted"
   ]
  },
  "type": "function"
 },
 "region.util.scipy_sparse_matrix_from_w": {
  "data": {
   "lineno": 125
  },
  "type": "function"
 },
 "region.util.separate_components": {
  "data": {
   "lineno": 797,
   "symbols_in_volume": [
    "len",
    "numpy.int32",
    "numpy.ones",
    "scipy.sparse.csgraph.connected_components",
    "set"
   ]
  },
  "type": "function"
 },
 "region.util.sub_adj_matrix": {
  "data": {
   "shadows": "region.csgraph_utils.sub_adj_matrix"
  },
  "type": "import"
 },
 "region.util.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "region.util.w_from_gdf": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "libpysal.weights.Queen.from_dataframe",
    "libpysal.weights.Rook.from_dataframe",
    "str"
   ]
  },
  "type": "function"
 },
 "region.util.weights": {
  "data": {
   "shadows": "libpysal.weights"
  },
  "type": "import"
 }
}