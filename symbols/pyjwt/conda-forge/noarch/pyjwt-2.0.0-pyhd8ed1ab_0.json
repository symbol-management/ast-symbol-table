{
 "jwt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "jwt.algorithms": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "jwt.algorithms.Algorithm": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.algorithms.Algorithm.from_jwk": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.algorithms.Algorithm.prepare_key": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.algorithms.Algorithm.sign": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.algorithms.Algorithm.to_jwk": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.algorithms.Algorithm.verify": {
  "lineno": 116,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.algorithms.ECAlgorithm": {
  "lineno": 370,
  "symbols_in_volume": [
   "cryptography.hazmat.primitives.hashes.SHA256",
   "cryptography.hazmat.primitives.hashes.SHA384",
   "cryptography.hazmat.primitives.hashes.SHA512"
  ],
  "type": "class"
 },
 "jwt.algorithms.ECAlgorithm.__init__": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.algorithms.ECAlgorithm.from_jwk": {
  "lineno": 425,
  "symbols_in_volume": [
   "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateNumbers",
   "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicNumbers",
   "cryptography.hazmat.primitives.asymmetric.ec.SECP256R1",
   "cryptography.hazmat.primitives.asymmetric.ec.SECP384R1",
   "cryptography.hazmat.primitives.asymmetric.ec.SECP521R1",
   "json.loads"
  ],
  "type": "function"
 },
 "jwt.algorithms.ECAlgorithm.prepare_key": {
  "lineno": 383,
  "symbols_in_volume": [
   "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePrivateKey",
   "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurvePublicKey",
   "cryptography.hazmat.primitives.serialization.load_pem_private_key",
   "cryptography.hazmat.primitives.serialization.load_pem_public_key",
   "cryptography.hazmat.primitives.serialization.load_ssh_public_key"
  ],
  "type": "function"
 },
 "jwt.algorithms.ECAlgorithm.sign": {
  "lineno": 408,
  "symbols_in_volume": [
   "cryptography.hazmat.primitives.asymmetric.ec.ECDSA"
  ],
  "type": "function"
 },
 "jwt.algorithms.ECAlgorithm.verify": {
  "lineno": 413,
  "symbols_in_volume": [
   "cryptography.exceptions.InvalidSignature",
   "cryptography.hazmat.primitives.asymmetric.ec.ECDSA"
  ],
  "type": "function"
 },
 "jwt.algorithms.Ed25519Algorithm": {
  "lineno": 510,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.algorithms.Ed25519Algorithm.__init__": {
  "lineno": 517,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.algorithms.Ed25519Algorithm.prepare_key": {
  "lineno": 520,
  "symbols_in_volume": [
   "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey",
   "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PublicKey",
   "cryptography.hazmat.primitives.serialization.load_pem_private_key",
   "cryptography.hazmat.primitives.serialization.load_pem_public_key",
   "cryptography.hazmat.primitives.serialization.load_ssh_public_key"
  ],
  "type": "function"
 },
 "jwt.algorithms.Ed25519Algorithm.sign": {
  "lineno": 539,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.algorithms.Ed25519Algorithm.verify": {
  "lineno": 549,
  "symbols_in_volume": [
   "cryptography.hazmat.primitives.asymmetric.ed25519.Ed25519PrivateKey"
  ],
  "type": "function"
 },
 "jwt.algorithms.HMACAlgorithm": {
  "lineno": 160,
  "symbols_in_volume": [
   "hashlib.sha256",
   "hashlib.sha384",
   "hashlib.sha512"
  ],
  "type": "class"
 },
 "jwt.algorithms.HMACAlgorithm.__init__": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.algorithms.HMACAlgorithm.from_jwk": {
  "lineno": 200,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "jwt.algorithms.HMACAlgorithm.prepare_key": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.algorithms.HMACAlgorithm.sign": {
  "lineno": 209,
  "symbols_in_volume": [
   "hmac.new"
  ],
  "type": "function"
 },
 "jwt.algorithms.HMACAlgorithm.to_jwk": {
  "lineno": 191,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "jwt.algorithms.HMACAlgorithm.verify": {
  "lineno": 212,
  "symbols_in_volume": [
   "hmac.compare_digest"
  ],
  "type": "function"
 },
 "jwt.algorithms.NoneAlgorithm": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.algorithms.NoneAlgorithm.prepare_key": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.algorithms.NoneAlgorithm.sign": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.algorithms.NoneAlgorithm.verify": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.algorithms.RSAAlgorithm": {
  "lineno": 218,
  "symbols_in_volume": [
   "cryptography.hazmat.primitives.hashes.SHA256",
   "cryptography.hazmat.primitives.hashes.SHA384",
   "cryptography.hazmat.primitives.hashes.SHA512"
  ],
  "type": "class"
 },
 "jwt.algorithms.RSAAlgorithm.__init__": {
  "lineno": 228,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.algorithms.RSAAlgorithm.from_jwk": {
  "lineno": 286,
  "symbols_in_volume": [
   "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateNumbers",
   "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicNumbers",
   "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_dmp1",
   "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_dmq1",
   "cryptography.hazmat.primitives.asymmetric.rsa.rsa_crt_iqmp",
   "cryptography.hazmat.primitives.asymmetric.rsa.rsa_recover_prime_factors",
   "json.loads"
  ],
  "type": "function"
 },
 "jwt.algorithms.RSAAlgorithm.prepare_key": {
  "lineno": 231,
  "symbols_in_volume": [
   "cryptography.hazmat.primitives.asymmetric.rsa.RSAPrivateKey",
   "cryptography.hazmat.primitives.asymmetric.rsa.RSAPublicKey",
   "cryptography.hazmat.primitives.serialization.load_pem_private_key",
   "cryptography.hazmat.primitives.serialization.load_pem_public_key",
   "cryptography.hazmat.primitives.serialization.load_ssh_public_key"
  ],
  "type": "function"
 },
 "jwt.algorithms.RSAAlgorithm.sign": {
  "lineno": 360,
  "symbols_in_volume": [
   "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15"
  ],
  "type": "function"
 },
 "jwt.algorithms.RSAAlgorithm.to_jwk": {
  "lineno": 250,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "jwt.algorithms.RSAAlgorithm.verify": {
  "lineno": 363,
  "symbols_in_volume": [
   "cryptography.exceptions.InvalidSignature",
   "cryptography.hazmat.primitives.asymmetric.padding.PKCS1v15"
  ],
  "type": "function"
 },
 "jwt.algorithms.RSAPSSAlgorithm": {
  "lineno": 480,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.algorithms.RSAPSSAlgorithm.sign": {
  "lineno": 485,
  "symbols_in_volume": [
   "cryptography.hazmat.primitives.asymmetric.padding.MGF1",
   "cryptography.hazmat.primitives.asymmetric.padding.PSS"
  ],
  "type": "function"
 },
 "jwt.algorithms.RSAPSSAlgorithm.verify": {
  "lineno": 495,
  "symbols_in_volume": [
   "cryptography.exceptions.InvalidSignature",
   "cryptography.hazmat.primitives.asymmetric.padding.MGF1",
   "cryptography.hazmat.primitives.asymmetric.padding.PSS"
  ],
  "type": "function"
 },
 "jwt.algorithms.get_default_algorithms": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwk": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "jwt.api_jwk.PyJWK": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.api_jwk.PyJWK.__init__": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwk.PyJWK.from_dict": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwk.PyJWK.from_json": {
  "lineno": 29,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "jwt.api_jwk.PyJWK.key_id": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwk.PyJWK.key_type": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwk.PyJWK.public_key_use": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwk.PyJWKSet": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.api_jwk.PyJWKSet.__init__": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwk.PyJWKSet.from_dict": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwk.PyJWKSet.from_json": {
  "lineno": 65,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "jwt.api_jws": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "jwt.api_jws.PyJWS": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.api_jws.PyJWS.__init__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jws.PyJWS._get_default_options": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jws.PyJWS._load": {
  "lineno": 179,
  "symbols_in_volume": [
   "binascii.Error",
   "collections.abc.Mapping",
   "json.loads"
  ],
  "type": "function"
 },
 "jwt.api_jws.PyJWS._validate_headers": {
  "lineno": 241,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jws.PyJWS._validate_kid": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jws.PyJWS._verify_signature": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jws.PyJWS.decode": {
  "lineno": 157,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "jwt.api_jws.PyJWS.decode_complete": {
  "lineno": 128,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "jwt.api_jws.PyJWS.encode": {
  "lineno": 76,
  "symbols_in_volume": [
   "json.JSONEncoder",
   "json.dumps",
   "typing.Dict",
   "typing.Optional",
   "typing.Type"
  ],
  "type": "function"
 },
 "jwt.api_jws.PyJWS.get_algorithms": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jws.PyJWS.get_unverified_header": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jws.PyJWS.register_algorithm": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jws.PyJWS.unregister_algorithm": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwt": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "jwt.api_jwt.PyJWT": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.api_jwt.PyJWT.__init__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwt.PyJWT._get_default_options": {
  "lineno": 25,
  "symbols_in_volume": [
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "jwt.api_jwt.PyJWT._validate_aud": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwt.PyJWT._validate_claims": {
  "lineno": 116,
  "symbols_in_volume": [
   "calendar.timegm",
   "collections.abc.Iterable",
   "datetime.datetime.utcnow",
   "datetime.timedelta"
  ],
  "type": "function"
 },
 "jwt.api_jwt.PyJWT._validate_exp": {
  "lineno": 164,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwt.PyJWT._validate_iat": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwt.PyJWT._validate_iss": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwt.PyJWT._validate_nbf": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwt.PyJWT._validate_required_claims": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.api_jwt.PyJWT.decode": {
  "lineno": 105,
  "symbols_in_volume": [
   "typing.Any",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "jwt.api_jwt.PyJWT.decode_complete": {
  "lineno": 65,
  "symbols_in_volume": [
   "json.loads",
   "typing.Any",
   "typing.Dict",
   "typing.List"
  ],
  "type": "function"
 },
 "jwt.api_jwt.PyJWT.encode": {
  "lineno": 37,
  "symbols_in_volume": [
   "calendar.timegm",
   "collections.abc.Mapping",
   "datetime.datetime",
   "json.JSONEncoder",
   "json.dumps",
   "typing.Any",
   "typing.Dict",
   "typing.Optional",
   "typing.Type"
  ],
  "type": "function"
 },
 "jwt.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "jwt.exceptions.DecodeError": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.exceptions.ExpiredSignatureError": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.exceptions.ImmatureSignatureError": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.exceptions.InvalidAlgorithmError": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.exceptions.InvalidAudienceError": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.exceptions.InvalidIssuedAtError": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.exceptions.InvalidIssuerError": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.exceptions.InvalidKeyError": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.exceptions.InvalidSignatureError": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.exceptions.InvalidTokenError": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.exceptions.MissingRequiredClaimError": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.exceptions.MissingRequiredClaimError.__init__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.exceptions.MissingRequiredClaimError.__str__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.exceptions.PyJWKClientError": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.exceptions.PyJWKError": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.exceptions.PyJWKSetError": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.exceptions.PyJWTError": {
  "lineno": 1,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.help": {
  "lineno": null,
  "symbols_in_volume": [
   "cryptography"
  ],
  "type": "module"
 },
 "jwt.help.info": {
  "lineno": 13,
  "symbols_in_volume": [
   "cryptography",
   "platform.python_implementation",
   "platform.python_version",
   "platform.release",
   "platform.system",
   "sys.pypy_version_info.major",
   "sys.pypy_version_info.micro",
   "sys.pypy_version_info.minor",
   "sys.pypy_version_info.releaselevel"
  ],
  "type": "function"
 },
 "jwt.help.main": {
  "lineno": 54,
  "symbols_in_volume": [
   "json.dumps"
  ],
  "type": "function"
 },
 "jwt.jwks_client": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "jwt.jwks_client.PyJWKClient": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "jwt.jwks_client.PyJWKClient.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.jwks_client.PyJWKClient.fetch_data": {
  "lineno": 14,
  "symbols_in_volume": [
   "json.load",
   "typing.Any"
  ],
  "type": "function"
 },
 "jwt.jwks_client.PyJWKClient.get_jwk_set": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.jwks_client.PyJWKClient.get_signing_key": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.jwks_client.PyJWKClient.get_signing_key_from_jwt": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.jwks_client.PyJWKClient.get_signing_keys": {
  "lineno": 22,
  "symbols_in_volume": [
   "typing.List"
  ],
  "type": "function"
 },
 "jwt.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurve",
   "typing.Any"
  ],
  "type": "module"
 },
 "jwt.utils.base64url_decode": {
  "lineno": 24,
  "symbols_in_volume": [
   "base64.urlsafe_b64decode",
   "typing.Union"
  ],
  "type": "function"
 },
 "jwt.utils.base64url_encode": {
  "lineno": 36,
  "symbols_in_volume": [
   "base64.urlsafe_b64encode"
  ],
  "type": "function"
 },
 "jwt.utils.bytes_from_int": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "jwt.utils.bytes_to_number": {
  "lineno": 66,
  "symbols_in_volume": [
   "binascii.b2a_hex"
  ],
  "type": "function"
 },
 "jwt.utils.der_to_raw_signature": {
  "lineno": 81,
  "symbols_in_volume": [
   "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurve",
   "cryptography.hazmat.primitives.asymmetric.utils.decode_dss_signature"
  ],
  "type": "function"
 },
 "jwt.utils.force_bytes": {
  "lineno": 15,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "jwt.utils.from_base64url_uint": {
  "lineno": 52,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "jwt.utils.number_to_bytes": {
  "lineno": 60,
  "symbols_in_volume": [
   "binascii.a2b_hex"
  ],
  "type": "function"
 },
 "jwt.utils.raw_to_der_signature": {
  "lineno": 90,
  "symbols_in_volume": [
   "cryptography.hazmat.primitives.asymmetric.ec.EllipticCurve",
   "cryptography.hazmat.primitives.asymmetric.utils.encode_dss_signature"
  ],
  "type": "function"
 },
 "jwt.utils.to_base64url_uint": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 }
}