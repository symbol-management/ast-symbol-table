{
 "pycalphad": {
  "lineno": null,
  "symbols_in_volume": [
   "pickle.Pickler.dispatch",
   "pickle._Pickler.dispatch",
   "pickle.__dict__.get"
  ],
  "type": "module"
 },
 "pycalphad._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "pycalphad.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.cache": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "pycalphad.core.cache._HashedSeq": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.cache._HashedSeq.__hash__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.cache._HashedSeq.__init__": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.cache._make_key": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.cache.fhash": {
  "lineno": 14,
  "symbols_in_volume": [
   "collections.Iterable",
   "collections.Mapping"
  ],
  "type": "function"
 },
 "pycalphad.core.cache.lru_cache": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.cache.lru_cache.decorating_function": {
  "lineno": 85,
  "symbols_in_volume": [
   "functools.update_wrapper",
   "threading.RLock"
  ],
  "type": "function"
 },
 "pycalphad.core.cache.lru_cache.decorating_function.cache_clear": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.cache.lru_cache.decorating_function.cache_info": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.cache.lru_cache.decorating_function.wrapper": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.calculate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.calculate.FallbackModel": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.calculate.FallbackModel.__new__": {
  "lineno": 31,
  "symbols_in_volume": [
   "pycalphad.Model",
   "pycalphad.core.compiled_model.CompiledModel"
  ],
  "type": "function"
 },
 "pycalphad.core.calculate._compute_phase_values": {
  "lineno": 227,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.asarray",
   "numpy.ascontiguousarray",
   "numpy.atleast_1d",
   "numpy.broadcast_to",
   "numpy.concatenate",
   "numpy.divide",
   "numpy.dot",
   "numpy.empty",
   "numpy.eye",
   "numpy.float",
   "numpy.full",
   "numpy.meshgrid",
   "numpy.nan",
   "numpy.ones",
   "numpy.repeat",
   "numpy.zeros",
   "pycalphad.core.utils.broadcast_to",
   "pycalphad.variables.SiteFraction",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "pycalphad.core.calculate._fast_concat": {
  "lineno": 38,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pycalphad.variables",
   "xarray.Dataset",
   "xarray.core.combine._calc_concat_dim_coord",
   "xarray.core.combine._calc_concat_over",
   "xarray.core.combine.concat_vars",
   "xarray.core.dataset.as_dataset"
  ],
  "type": "function"
 },
 "pycalphad.core.calculate._fast_concat.ensure_common_dims": {
  "lineno": 83,
  "symbols_in_volume": [
   "pandas.unique",
   "pycalphad.variables",
   "pycalphad.variables.dims"
  ],
  "type": "function"
 },
 "pycalphad.core.calculate._fast_concat.insert_result_variable": {
  "lineno": 60,
  "symbols_in_volume": [
   "pycalphad.variables",
   "xarray.Variable"
  ],
  "type": "function"
 },
 "pycalphad.core.calculate._generate_fake_points": {
  "lineno": 113,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.eye",
   "numpy.full",
   "numpy.nan",
   "numpy.repeat",
   "numpy.tile",
   "pycalphad.core.utils.broadcast_to",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "pycalphad.core.calculate._sample_phase_constitution": {
  "lineno": 153,
  "symbols_in_volume": [
   "itertools.chain",
   "itertools.combinations",
   "numpy.asarray",
   "numpy.atleast_2d",
   "numpy.concatenate",
   "numpy.copy",
   "numpy.float",
   "numpy.isnan",
   "numpy.linspace",
   "numpy.newaxis.T",
   "numpy.power",
   "pycalphad.core.cache.cacheit",
   "pycalphad.core.utils.endmember_matrix",
   "pycalphad.variables.SiteFraction"
  ],
  "type": "function"
 },
 "pycalphad.core.calculate.calculate": {
  "lineno": 353,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.arange",
   "numpy.array",
   "numpy.asarray",
   "numpy.atleast_1d",
   "numpy.atleast_2d",
   "numpy.float",
   "pycalphad.Model",
   "pycalphad.core.compiled_model.CompiledModel",
   "pycalphad.core.phase_rec.PhaseRecord_from_compiledmodel",
   "pycalphad.core.phase_rec.PhaseRecord_from_cython",
   "pycalphad.core.sympydiff_utils.build_functions",
   "pycalphad.core.utils.generate_dof",
   "pycalphad.core.utils.point_sample",
   "pycalphad.core.utils.unpack_condition",
   "pycalphad.core.utils.unpack_kwarg",
   "pycalphad.core.utils.unpack_phases",
   "pycalphad.log.logger.warning",
   "pycalphad.model.DofError",
   "pycalphad.variables.P",
   "pycalphad.variables.StateVariable",
   "pycalphad.variables.T",
   "sympy.Symbol",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pycalphad.core.cartesian": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.cartesian.cartesian": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.prod",
   "numpy.repeat",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pycalphad.core.constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.custom_autowrap": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.custom_autowrap.C89CodePrinter": {
  "lineno": 130,
  "symbols_in_volume": [
   "sympy.utilities.codegen.CCodePrinter"
  ],
  "type": "class"
 },
 "pycalphad.core.custom_autowrap.C89CodePrinter._get_loop_opening_ending": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.CodeWrapError": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.custom_autowrap.CustomCCodeGen": {
  "lineno": 149,
  "symbols_in_volume": [
   "sympy.utilities.codegen.CCodeGen",
   "sympy.utilities.codegen.CCodeGen.dump_c",
   "sympy.utilities.codegen.CCodeGen.interface_extension"
  ],
  "type": "class"
 },
 "pycalphad.core.custom_autowrap.CustomCCodeGen._call_printer": {
  "lineno": 183,
  "symbols_in_volume": [
   "sympy.utilities.codegen.AssignmentError",
   "sympy.utilities.codegen.Result",
   "sympy.utilities.codegen.ResultBase"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.CustomCCodeGen._declare_locals": {
  "lineno": 175,
  "symbols_in_volume": [
   "sympy.utilities.codegen.Variable"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.CustomCCodeGen.dump_h": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.CustomCCodeGen.get_prototype": {
  "lineno": 150,
  "symbols_in_volume": [
   "sympy.printing.ccode.ccode",
   "sympy.utilities.codegen.ResultBase"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.ThreadSafeCythonCodeWrapper": {
  "lineno": 275,
  "symbols_in_volume": [
   "sympy.utilities.autowrap.CythonCodeWrapper"
  ],
  "type": "class"
 },
 "pycalphad.core.custom_autowrap.ThreadSafeCythonCodeWrapper.__init__": {
  "lineno": 306,
  "symbols_in_volume": [
   "tempfile.mkdtemp",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.ThreadSafeCythonCodeWrapper._call_arg": {
  "lineno": 373,
  "symbols_in_volume": [
   "sympy.utilities.codegen.ResultBase"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.ThreadSafeCythonCodeWrapper._prepare_files": {
  "lineno": 324,
  "symbols_in_volume": [
   "os.path.join",
   "os.sep"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.ThreadSafeCythonCodeWrapper._process_files": {
  "lineno": 346,
  "symbols_in_volume": [
   "subprocess.CalledProcessError",
   "subprocess.STDOUT",
   "sympy.core.compatibility.check_output"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.ThreadSafeCythonCodeWrapper._prototype_arg": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.ThreadSafeCythonCodeWrapper.command": {
  "lineno": 315,
  "symbols_in_volume": [
   "os.path.join",
   "sys.executable"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.ThreadSafeCythonCodeWrapper.filename": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.ThreadSafeCythonCodeWrapper.module_name": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.ThreadSafeCythonCodeWrapper.wrap_code": {
  "lineno": 382,
  "symbols_in_volume": [
   "os.F_OK",
   "os.access",
   "os.mkdir",
   "os.path.join",
   "os.sep",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap._get_code_wrapper_class": {
  "lineno": 399,
  "symbols_in_volume": [
   "sympy.utilities.autowrap.DummyWrapper"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap._infer_language": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap._validate_backend_language": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.autowrap": {
  "lineno": 511,
  "symbols_in_volume": [
   "sympy.core.compatibility.iterable",
   "sympy.utilities.codegen.CodeGenArgumentListError",
   "sympy.utilities.codegen.OutputArgument"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.binary_function": {
  "lineno": 591,
  "symbols_in_volume": [
   "sympy.utilities.lambdify.implemented_function"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.get_code_generator": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.import_extension": {
  "lineno": 98,
  "symbols_in_volume": [
   "glob.glob",
   "imp.load_dynamic",
   "importlib.machinery.ExtensionFileLoader",
   "os.path.join"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_autowrap.make_routine": {
  "lineno": 422,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.eqresult": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.eqresult.EquilibriumResult": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.eqresult.EquilibriumResult.__init__": {
  "lineno": 67,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pycalphad.variables.PhaseFraction",
   "pycalphad.variables.SiteFraction"
  ],
  "type": "function"
 },
 "pycalphad.core.eqresult.EquilibriumResult.__repr__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.eqresult.EquilibriumResult.__str__": {
  "lineno": 109,
  "symbols_in_volume": [
   "pycalphad.variables"
  ],
  "type": "function"
 },
 "pycalphad.core.eqresult.EquilibriumResult.mole_fractions": {
  "lineno": 97,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "pycalphad.core.eqresult.PhaseResult": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.eqresult.PhaseResult.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.eqresult.PhaseResult.__repr__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.eqresult.PhaseResult.__str__": {
  "lineno": 54,
  "symbols_in_volume": [
   "operator.itemgetter",
   "pycalphad.variables"
  ],
  "type": "function"
 },
 "pycalphad.core.eqresult.PhaseResult.mole_fractions": {
  "lineno": 29,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "pycalphad.core.eqresult.SublatticeResult": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.eqresult.SublatticeResult.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.eqresult.SublatticeResult.__repr__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.eqresult.SublatticeResult.__str__": {
  "lineno": 18,
  "symbols_in_volume": [
   "operator.itemgetter",
   "pycalphad.variables"
  ],
  "type": "function"
 },
 "pycalphad.core.halton": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "module"
 },
 "pycalphad.core.halton.halton": {
  "lineno": 87,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.arange",
   "numpy.asarray",
   "numpy.ceil",
   "numpy.dot",
   "numpy.empty",
   "numpy.float",
   "numpy.floor",
   "numpy.int",
   "numpy.log",
   "numpy.longdouble",
   "numpy.mod",
   "numpy.outer",
   "numpy.power"
  ],
  "type": "function"
 },
 "pycalphad.core.lower_convex_hull": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.lower_convex_hull.lower_convex_hull": {
  "lineno": 16,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.concatenate",
   "numpy.index_exp",
   "numpy.nan",
   "numpy.nditer",
   "numpy.nonzero",
   "numpy.ravel_multi_index",
   "numpy.sum",
   "pycalphad.core.cartesian.cartesian",
   "pycalphad.core.constants.MIN_SITE_FRACTION"
  ],
  "type": "function"
 },
 "pycalphad.core.rksum": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.rksum.RedlichKisterSum": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.rksum.RedlichKisterSum._Muggianu_correction_dict": {
  "lineno": 234,
  "symbols_in_volume": [
   "sympy.Add",
   "sympy.S.One"
  ],
  "type": "function"
 },
 "pycalphad.core.rksum.RedlichKisterSum.__init__": {
  "lineno": 94,
  "symbols_in_volume": [
   "copy.deepcopy",
   "numpy.atleast_2d",
   "numpy.zeros",
   "pycalphad.variables.SiteFraction",
   "sympy.Add",
   "sympy.Float",
   "sympy.Integer",
   "sympy.Mul",
   "sympy.Pow",
   "sympy.Rational",
   "sympy.S.One",
   "sympy.Symbol",
   "tinydb.where"
  ],
  "type": "function"
 },
 "pycalphad.core.rksum.RedlichKisterSum._eval": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.power",
   "numpy.prod",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pycalphad.core.rksum.RedlichKisterSum.symbol_replace": {
  "lineno": 262,
  "symbols_in_volume": [
   "pycalphad.variables.StateVariable",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "pycalphad.core.rksum.build_piecewise_matrix": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.array",
   "pycalphad.io.tdb.to_interval",
   "pycalphad.variables.P",
   "pycalphad.variables.T",
   "sympy.Add",
   "sympy.EmptySet",
   "sympy.Float",
   "sympy.Integer",
   "sympy.Intersection",
   "sympy.Interval",
   "sympy.Mul",
   "sympy.Piecewise",
   "sympy.Pow",
   "sympy.Rational",
   "sympy.S.One",
   "sympy.S.Zero",
   "sympy.Symbol",
   "sympy.Union",
   "sympy.exp",
   "sympy.log",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils": {
  "lineno": null,
  "symbols_in_volume": [
   "threading.RLock"
  ],
  "type": "module"
 },
 "pycalphad.core.sympydiff_utils.AutowrapFunction": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.sympydiff_utils.AutowrapFunction.compile": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.PickleableFunction": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.sympydiff_utils.PickleableFunction.__call__": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.PickleableFunction.__getstate__": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.PickleableFunction.__hash__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.PickleableFunction.__init__": {
  "lineno": 29,
  "symbols_in_volume": [
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.PickleableFunction.__setstate__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.PickleableFunction.compile": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.PickleableFunction.kernel": {
  "lineno": 38,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.build_functions": {
  "lineno": 84,
  "symbols_in_volume": [
   "sympy.Eq",
   "sympy.Idx",
   "sympy.ImmutableMatrix",
   "sympy.IndexedBase",
   "sympy.MatrixSymbol",
   "sympy.Symbol",
   "sympy.oo",
   "sympy.zoo"
  ],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.build_functions.f": {
  "lineno": 130,
  "symbols_in_volume": [
   "sympy.Function",
   "sympy.Lambda",
   "sympy.S.Pi",
   "sympy.oo",
   "sympy.zoo"
  ],
  "type": "class"
 },
 "pycalphad.core.sympydiff_utils.chunks": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.utils.NumPyPrinter": {
  "lineno": 25,
  "symbols_in_volume": [
   "sympy.printing.lambdarepr.LambdaPrinter"
  ],
  "type": "class"
 },
 "pycalphad.core.utils.NumPyPrinter._print_And": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_MatMul": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_MatrixBase": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_Not": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_Or": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_Piecewise": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_seq": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.broadcast_to": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.broadcast_arrays",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pycalphad.core.utils.endmember_matrix": {
  "lineno": 263,
  "symbols_in_volume": [
   "functools.reduce",
   "itertools.product",
   "numpy.all",
   "numpy.array",
   "numpy.concatenate",
   "numpy.delete",
   "numpy.empty",
   "numpy.eye",
   "numpy.float",
   "numpy.where",
   "operator.mul",
   "pycalphad.core.constants.MIN_SITE_FRACTION"
  ],
  "type": "function"
 },
 "pycalphad.core.utils.generate_dof": {
  "lineno": 248,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction"
  ],
  "type": "function"
 },
 "pycalphad.core.utils.make_callable": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.where",
   "sympy.utilities.lambdify.lambdify"
  ],
  "type": "function"
 },
 "pycalphad.core.utils.point_sample": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.log",
   "pycalphad.core.halton.halton"
  ],
  "type": "function"
 },
 "pycalphad.core.utils.sizeof_fmt": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.unpack_condition": {
  "lineno": 208,
  "symbols_in_volume": [
   "collections.Iterable",
   "numpy.arange",
   "numpy.float"
  ],
  "type": "function"
 },
 "pycalphad.core.utils.unpack_kwarg": {
  "lineno": 303,
  "symbols_in_volume": [
   "collections.Iterable",
   "collections.Mapping",
   "collections.defaultdict",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pycalphad.core.utils.unpack_phases": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.fitting": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "pycalphad.fitting._map_internal_dof": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.dot",
   "numpy.empty",
   "numpy.ones",
   "numpy.zeros",
   "pycalphad.core.utils.generate_dof",
   "pycalphad.variables.SiteFraction"
  ],
  "type": "function"
 },
 "pycalphad.fitting.build_pymc_model": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.square",
   "numpy.var",
   "numpy.zeros_like",
   "pymc.Model",
   "pymc.potential"
  ],
  "type": "function"
 },
 "pycalphad.fitting.plot_results": {
  "lineno": 145,
  "symbols_in_volume": [
   "itertools.groupby",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.show",
   "numpy.add",
   "numpy.array",
   "numpy.atleast_2d",
   "numpy.float",
   "pycalphad.calculate",
   "pycalphad.equilibrium",
   "pycalphad.variables.T",
   "pycalphad.variables.X",
   "pycalphad.variables.__dict__"
  ],
  "type": "function"
 },
 "pycalphad.fitting.plot_results.plot_key": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.fitting.setup_dataset": {
  "lineno": 18,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "itertools.chain",
   "json.load",
   "numpy.array",
   "numpy.atleast_1d",
   "numpy.float",
   "pycalphad.Model",
   "pycalphad.core.utils.make_callable",
   "pycalphad.variables.P",
   "pycalphad.variables.SiteFraction",
   "pycalphad.variables.T",
   "sympy.Symbol",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "pycalphad.fitting.setup_dataset.compute_error": {
  "lineno": 41,
  "symbols_in_volume": [
   "functools.partial",
   "itertools.chain",
   "numpy.atleast_2d",
   "numpy.float",
   "pycalphad.calculate"
  ],
  "type": "function"
 },
 "pycalphad.fitting.setup_dataset.compute_values": {
  "lineno": 51,
  "symbols_in_volume": [
   "functools.partial",
   "itertools.chain",
   "numpy.atleast_2d",
   "numpy.float",
   "pycalphad.calculate"
  ],
  "type": "function"
 },
 "pycalphad.io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.io.database": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "pycalphad.io.database.Database": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.io.database.Database.__eq__": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.__eq__.param_sort_key": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.__getstate__": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.__hash__": {
  "lineno": 128,
  "symbols_in_volume": [
   "pycalphad.core.cache.fhash"
  ],
  "type": "function"
 },
 "pycalphad.io.database.Database.__ne__": {
  "lineno": 346,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.__new__": {
  "lineno": 91,
  "symbols_in_volume": [
   "os.path.splitext",
   "tinydb.TinyDB",
   "tinydb.storages.MemoryStorage"
  ],
  "type": "function"
 },
 "pycalphad.io.database.Database.__setstate__": {
  "lineno": 141,
  "symbols_in_volume": [
   "tinydb.TinyDB",
   "tinydb.storages.MemoryStorage"
  ],
  "type": "function"
 },
 "pycalphad.io.database.Database.__str__": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.add_parameter": {
  "lineno": 367,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.add_phase": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.add_phase_constituents": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.add_structure_entry": {
  "lineno": 349,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.from_file": {
  "lineno": 169,
  "symbols_in_volume": [
   "os.path.splitext"
  ],
  "type": "function"
 },
 "pycalphad.io.database.Database.from_string": {
  "lineno": 224,
  "symbols_in_volume": [
   "io.StringIO"
  ],
  "type": "function"
 },
 "pycalphad.io.database.Database.register_format": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.search": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.to_file": {
  "lineno": 243,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "os.path.exists",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "pycalphad.io.database.Database.to_string": {
  "lineno": 295,
  "symbols_in_volume": [
   "io.StringIO"
  ],
  "type": "function"
 },
 "pycalphad.io.database.DatabaseExportError": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.io.database.Phase": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.io.database.Phase.__eq__": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Phase.__hash__": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Phase.__init__": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Phase.__ne__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Phase.__repr__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database._to_tuple": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb": {
  "lineno": null,
  "symbols_in_volume": [
   "ast.Add",
   "ast.BinOp",
   "ast.Call",
   "ast.Div",
   "ast.Expression",
   "ast.Load",
   "ast.Mult",
   "ast.Name",
   "ast.Num",
   "ast.Pow",
   "ast.Sub",
   "ast.UAdd",
   "ast.USub",
   "ast.UnaryOp",
   "pycalphad.Database.register_format"
  ],
  "type": "module"
 },
 "pycalphad.io.tdb.TCCommand": {
  "lineno": 142,
  "symbols_in_volume": [
   "pyparsing.CaselessKeyword"
  ],
  "type": "class"
 },
 "pycalphad.io.tdb.TCCommand.parseImpl": {
  "lineno": 146,
  "symbols_in_volume": [
   "pycalphad.io.tdb_keywords.expand_keyword",
   "pyparsing.ParseException"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter": {
  "lineno": 382,
  "symbols_in_volume": [
   "sympy.printing.str.StrPrinter"
  ],
  "type": "class"
 },
 "pycalphad.io.tdb.TCPrinter._print_Function": {
  "lineno": 490,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Infinity": {
  "lineno": 479,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Mul": {
  "lineno": 417,
  "symbols_in_volume": [
   "sympy.Mul.make_args",
   "sympy.Pow",
   "sympy.Rational",
   "sympy.S.Infinity",
   "sympy.S.One",
   "sympy.core.mul._keep_coeff",
   "sympy.printing.precedence.precedence"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Piecewise": {
  "lineno": 386,
  "symbols_in_volume": [
   "pycalphad.variables.T",
   "sympy.EmptySet",
   "sympy.Intersection",
   "sympy.Interval",
   "sympy.S.Zero",
   "sympy.S.true",
   "sympy.Union"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Pow": {
  "lineno": 467,
  "symbols_in_volume": [
   "sympy.printing.precedence.precedence"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Symbol": {
  "lineno": 483,
  "symbols_in_volume": [
   "pycalphad.variables.StateVariable"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter.blacklisted": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb._apply_new_symbol_names": {
  "lineno": 570,
  "symbols_in_volume": [
   "pycalphad.variables",
   "sympy.S",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb._make_piecewise_ast": {
  "lineno": 104,
  "symbols_in_volume": [
   "pycalphad.variables.T",
   "sympy.And",
   "sympy.Piecewise"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb._parse_action": {
  "lineno": 65,
  "symbols_in_volume": [
   "inspect.getargspec"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb._parse_action.action": {
  "lineno": 88,
  "symbols_in_volume": [
   "functools.wraps",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb._process_parameter": {
  "lineno": 305,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb._process_phase": {
  "lineno": 276,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb._process_typedef": {
  "lineno": 242,
  "symbols_in_volume": [
   "pycalphad.io.tdb_keywords.expand_keyword"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb._setitem_raise_duplicates": {
  "lineno": 322,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb._sympify_string": {
  "lineno": 36,
  "symbols_in_volume": [
   "ast.Expression",
   "ast.parse",
   "ast.walk",
   "pycalphad.variables.P",
   "pycalphad.variables.R",
   "pycalphad.variables.T",
   "re.IGNORECASE",
   "re.sub",
   "sympy.Symbol",
   "sympy.sympify"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb._tdb_grammar": {
  "lineno": 175,
  "symbols_in_volume": [
   "pycalphad.io.tdb_keywords.TDB_PARAM_TYPES",
   "pyparsing.CharsNotIn",
   "pyparsing.Group",
   "pyparsing.LineEnd",
   "pyparsing.MatchFirst",
   "pyparsing.OneOrMore",
   "pyparsing.Optional",
   "pyparsing.Regex",
   "pyparsing.SkipTo",
   "pyparsing.Suppress",
   "pyparsing.White",
   "pyparsing.Word",
   "pyparsing.ZeroOrMore",
   "pyparsing.alphanums",
   "pyparsing.alphas",
   "pyparsing.delimitedList",
   "pyparsing.nums"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb._unimplemented": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb.read_tdb": {
  "lineno": 809,
  "symbols_in_volume": [
   "pyparsing.ParseException"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.reflow_text": {
  "lineno": 533,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb.to_interval": {
  "lineno": 342,
  "symbols_in_volume": [
   "sympy.And",
   "sympy.Complement",
   "sympy.GreaterThan",
   "sympy.Intersection",
   "sympy.Interval",
   "sympy.LessThan",
   "sympy.Not",
   "sympy.Or",
   "sympy.S.Infinity",
   "sympy.S.NegativeInfinity",
   "sympy.S.true",
   "sympy.StrictGreaterThan",
   "sympy.StrictLessThan",
   "sympy.Union"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.write_tdb": {
  "lineno": 590,
  "symbols_in_volume": [
   "collections.defaultdict",
   "collections.namedtuple",
   "copy.deepcopy",
   "datetime.datetime.now",
   "getpass.getuser",
   "hashlib.md5",
   "itertools.combinations",
   "pycalphad.__version__",
   "pycalphad.io.database.DatabaseExportError",
   "pycalphad.variables.T",
   "sympy.And",
   "sympy.Piecewise",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.write_tdb.write_parameter": {
  "lineno": 750,
  "symbols_in_volume": [
   "pycalphad.variables.T",
   "sympy.And",
   "sympy.Piecewise"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb_keywords": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.io.tdb_keywords.expand_keyword": {
  "lineno": 85,
  "symbols_in_volume": [
   "re.escape",
   "re.match"
  ],
  "type": "function"
 },
 "pycalphad.log": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.Formatter",
   "logging.INFO",
   "logging.StreamHandler",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pycalphad.log.debug_mode": {
  "lineno": 16,
  "symbols_in_volume": [
   "logging.DEBUG"
  ],
  "type": "function"
 },
 "pycalphad.model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.model.DofError": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.model.Model": {
  "lineno": 23,
  "symbols_in_volume": [
   "pycalphad.variables.T",
   "sympy.S.Zero"
  ],
  "type": "class"
 },
 "pycalphad.model.Model._Muggianu_correction_dict": {
  "lineno": 293,
  "symbols_in_volume": [
   "sympy.Add",
   "sympy.S.One"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.__eq__": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.model.Model.__hash__": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.model.Model.__init__": {
  "lineno": 58,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pycalphad.log.logger.debug",
   "pycalphad.variables.SiteFraction",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.__init__.wrap_symbol": {
  "lineno": 86,
  "symbols_in_volume": [
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.__ne__": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.model.Model._array_validity": {
  "lineno": 249,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.model.Model._interaction_test": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.model.Model._purity_test": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.model.Model._site_ratio_normalization": {
  "lineno": 277,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction",
   "sympy.S.Zero"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.ast": {
  "lineno": 164,
  "symbols_in_volume": [
   "sympy.Add"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.atomic_ordering_energy": {
  "lineno": 689,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction",
   "sympy.Add",
   "sympy.S.Zero"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.build_phase": {
  "lineno": 218,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "sympy.S"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.degree_of_ordering": {
  "lineno": 174,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction",
   "sympy.Abs",
   "sympy.S.Zero"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.einstein_energy": {
  "lineno": 630,
  "symbols_in_volume": [
   "pycalphad.variables.R",
   "pycalphad.variables.T",
   "sympy.exp",
   "sympy.log",
   "tinydb.where"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.excess_mixing_energy": {
  "lineno": 445,
  "symbols_in_volume": [
   "tinydb.where"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.ideal_mixing_energy": {
  "lineno": 421,
  "symbols_in_volume": [
   "pycalphad.core.constants.MIN_SITE_FRACTION",
   "pycalphad.variables.R",
   "pycalphad.variables.SiteFraction",
   "pycalphad.variables.T",
   "sympy.Piecewise",
   "sympy.S.Zero",
   "sympy.log"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.magnetic_energy": {
  "lineno": 464,
  "symbols_in_volume": [
   "pycalphad.variables.R",
   "pycalphad.variables.T",
   "sympy.Piecewise",
   "sympy.S.Zero",
   "sympy.log",
   "tinydb.where"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.mole_fraction": {
  "lineno": 652,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction",
   "sympy.S.Zero"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.redlich_kister_sum": {
  "lineno": 321,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pycalphad.variables.SiteFraction",
   "sympy.Add",
   "sympy.Mul",
   "sympy.Pow",
   "sympy.S.One",
   "tinydb.where"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.reference_energy": {
  "lineno": 404,
  "symbols_in_volume": [
   "tinydb.where"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.standard_mole_fraction": {
  "lineno": 143,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction",
   "sympy.S.Zero"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.symbol_replace": {
  "lineno": 102,
  "symbols_in_volume": [
   "pycalphad.variables.StateVariable",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.twostate_energy": {
  "lineno": 613,
  "symbols_in_volume": [
   "pycalphad.variables.R",
   "pycalphad.variables.T",
   "sympy.S.Zero",
   "sympy.exp",
   "sympy.log",
   "tinydb.where"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.variables": {
  "lineno": 169,
  "symbols_in_volume": [
   "pycalphad.variables.StateVariable"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.xiong_magnetic_energy": {
  "lineno": 534,
  "symbols_in_volume": [
   "pycalphad.variables.R",
   "pycalphad.variables.T",
   "sympy.Piecewise",
   "sympy.S.Zero",
   "sympy.log",
   "sympy.zoo",
   "tinydb.where"
  ],
  "type": "function"
 },
 "pycalphad.model.TestModel": {
  "lineno": 761,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.model.TestModel.__init__": {
  "lineno": 789,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.int",
   "numpy.ones",
   "numpy.ones_like",
   "numpy.random.dirichlet",
   "pycalphad.variables.SiteFraction",
   "sympy.Add",
   "sympy.sin"
  ],
  "type": "function"
 },
 "pycalphad.plot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.plot.binary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.plot.binary.binplot": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "pycalphad.equilibrium",
   "pycalphad.plot.eqplot.eqplot",
   "pycalphad.variables.Composition",
   "pycalphad.variables.P",
   "pycalphad.variables.T"
  ],
  "type": "function"
 },
 "pycalphad.plot.eqplot": {
  "lineno": null,
  "symbols_in_volume": [
   "pycalphad.variables.P",
   "pycalphad.variables.T"
  ],
  "type": "module"
 },
 "pycalphad.plot.eqplot._map_coord_to_variable": {
  "lineno": 17,
  "symbols_in_volume": [
   "pycalphad.variables.P",
   "pycalphad.variables.T",
   "pycalphad.variables.X"
  ],
  "type": "function"
 },
 "pycalphad.plot.eqplot.eqplot": {
  "lineno": 38,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "matplotlib.collections.LineCollection",
   "matplotlib.pyplot.gca",
   "numpy.array",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.int",
   "numpy.max",
   "numpy.min",
   "numpy.newaxis",
   "numpy.nonzero",
   "numpy.rollaxis",
   "numpy.sum",
   "numpy.take",
   "pycalphad.core.utils.unpack_condition",
   "pycalphad.plot.utils.phase_legend",
   "pycalphad.variables.Composition",
   "pycalphad.variables.P",
   "pycalphad.variables.T"
  ],
  "type": "function"
 },
 "pycalphad.plot.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.plot.utils.phase_legend": {
  "lineno": 8,
  "symbols_in_volume": [
   "matplotlib.patches.Patch",
   "numpy.mod"
  ],
  "type": "function"
 },
 "pycalphad.refdata": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pycalphad.variables.T",
   "sympy.And",
   "sympy.Piecewise",
   "sympy.Symbol",
   "sympy.log"
  ],
  "type": "module"
 },
 "pycalphad.variables": {
  "lineno": null,
  "symbols_in_volume": [
   "sympy.Float"
  ],
  "type": "module"
 },
 "pycalphad.variables.ChemicalPotential": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.variables.ChemicalPotential.__getnewargs__": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.ChemicalPotential.__new__": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.ChemicalPotential.__str__": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.ChemicalPotential._latex": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.Composition": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.variables.Composition.__getnewargs__": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.Composition.__new__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.Composition._latex": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.PhaseFraction": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.variables.PhaseFraction.__getnewargs__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.PhaseFraction.__new__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.PhaseFraction._latex": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.SiteFraction": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.variables.SiteFraction.__getnewargs__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.SiteFraction.__new__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.SiteFraction.__str__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.SiteFraction._latex": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.StateVariable": {
  "lineno": 8,
  "symbols_in_volume": [
   "sympy.Symbol"
  ],
  "type": "class"
 },
 "pycalphad.variables.StateVariable.__new__": {
  "lineno": 12,
  "symbols_in_volume": [
   "sympy.Symbol.__new__"
  ],
  "type": "function"
 }
}