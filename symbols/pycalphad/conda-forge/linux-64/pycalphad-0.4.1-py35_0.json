{
 "pycalphad": {
  "lineno": null,
  "symbols_in_volume": [
   "pickle.Pickler.dispatch",
   "pickle._Pickler.dispatch",
   "pickle.__dict__.get"
  ],
  "type": "module"
 },
 "pycalphad._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad._version.get_versions": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.constraints": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.constraints.mole_fraction": {
  "lineno": 9,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction",
   "sympy.S.Zero"
  ],
  "type": "function"
 },
 "pycalphad.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.autograd_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.autograd_utils.build_functions": {
  "lineno": 24,
  "symbols_in_volume": [
   "autograd.numpy",
   "autograd.numpy.abs",
   "autograd.numpy.logical_and",
   "autograd.numpy.logical_or",
   "pycalphad.core.constants.BIGNUM",
   "pycalphad.core.utils.NumPyPrinter",
   "sympy.lambdify",
   "sympy.oo",
   "sympy.zoo"
  ],
  "type": "function"
 },
 "pycalphad.core.autograd_utils.build_functions.argwrapper": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.autograd_utils.build_functions.grad_func": {
  "lineno": 34,
  "symbols_in_volume": [
   "autograd.elementwise_grad",
   "autograd.numpy.array",
   "autograd.numpy.atleast_2d",
   "autograd.numpy.broadcast_arrays",
   "itertools.chain"
  ],
  "type": "function"
 },
 "pycalphad.core.autograd_utils.build_functions.hess_func": {
  "lineno": 42,
  "symbols_in_volume": [
   "autograd.numpy.array",
   "autograd.numpy.atleast_3d",
   "autograd.numpy.broadcast_arrays",
   "itertools.chain"
  ],
  "type": "function"
 },
 "pycalphad.core.autograd_utils.elementwise_hess": {
  "lineno": 12,
  "symbols_in_volume": [
   "autograd.jacobian"
  ],
  "type": "function"
 },
 "pycalphad.core.autograd_utils.elementwise_hess.sum_grad_output": {
  "lineno": 19,
  "symbols_in_volume": [
   "autograd.elementwise_grad"
  ],
  "type": "function"
 },
 "pycalphad.core.autograd_utils.elementwise_hess.sum_latter_dims": {
  "lineno": 16,
  "symbols_in_volume": [
   "autograd.numpy.sum"
  ],
  "type": "function"
 },
 "pycalphad.core.calculate": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.calculate._compute_phase_values": {
  "lineno": 64,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.atleast_1d",
   "numpy.divide",
   "numpy.dot",
   "numpy.empty",
   "numpy.full",
   "numpy.meshgrid",
   "numpy.nan",
   "numpy.ones",
   "numpy.repeat",
   "numpy.rollaxis",
   "numpy.zeros",
   "pycalphad.core.utils.broadcast_to",
   "pycalphad.variables.SiteFraction",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "pycalphad.core.calculate._generate_fake_points": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "numpy.eye",
   "numpy.full",
   "numpy.nan",
   "numpy.repeat",
   "numpy.tile",
   "pycalphad.core.utils.broadcast_to",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "pycalphad.core.calculate.calculate": {
  "lineno": 166,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "itertools.chain",
   "itertools.combinations",
   "numpy.arange",
   "numpy.asarray",
   "numpy.atleast_2d",
   "numpy.concatenate",
   "numpy.copy",
   "numpy.float",
   "numpy.inf",
   "numpy.isnan",
   "numpy.linspace",
   "numpy.newaxis.T",
   "numpy.power",
   "os.getcwd",
   "pycalphad.Model",
   "pycalphad.core.autograd_utils.build_functions",
   "pycalphad.core.tempfilemanager.TempfileManager",
   "pycalphad.core.utils.endmember_matrix",
   "pycalphad.core.utils.generate_dof",
   "pycalphad.core.utils.point_sample",
   "pycalphad.core.utils.unpack_condition",
   "pycalphad.core.utils.unpack_kwarg",
   "pycalphad.core.utils.unpack_phases",
   "pycalphad.log.logger.debug",
   "pycalphad.log.logger.warning",
   "pycalphad.model.DofError",
   "pycalphad.variables.SiteFraction",
   "pycalphad.variables.StateVariable",
   "sympy.Symbol",
   "xarray.concat"
  ],
  "type": "function"
 },
 "pycalphad.core.cartesian": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.cartesian.cartesian": {
  "lineno": 9,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.prod",
   "numpy.repeat",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pycalphad.core.constants": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.custom_ccodegen": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.custom_ccodegen.CCodeGen": {
  "lineno": 9,
  "symbols_in_volume": [
   "sympy.utilities.codegen.CCodeGen"
  ],
  "type": "class"
 },
 "pycalphad.core.custom_ccodegen.CCodeGen._call_printer": {
  "lineno": 10,
  "symbols_in_volume": [
   "sympy.printing.ccode",
   "sympy.utilities.codegen.AssignmentError",
   "sympy.utilities.codegen.Result",
   "sympy.utilities.codegen.ResultBase"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify": {
  "lineno": null,
  "symbols_in_volume": [
   "string.Template"
  ],
  "type": "module"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper": {
  "lineno": 120,
  "symbols_in_volume": [
   "sympy.utilities.autowrap.CodeWrapper"
  ],
  "type": "class"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper.__init__": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper._generate_code": {
  "lineno": 192,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper._get_wrapped_function": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper._partition_args": {
  "lineno": 327,
  "symbols_in_volume": [
   "sympy.utilities.codegen.InOutArgument",
   "sympy.utilities.codegen.OutputArgument"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper._prepare_files": {
  "lineno": 199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper._process_files": {
  "lineno": 210,
  "symbols_in_volume": [
   "subprocess.Popen"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper.command": {
  "lineno": 130,
  "symbols_in_volume": [
   "sys.executable"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper.dump_c": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper.dump_setup": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper.module_name": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper.wrap_code": {
  "lineno": 139,
  "symbols_in_volume": [
   "os.chdir"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper.wrap_code.lazy_wrapper": {
  "lineno": 160,
  "symbols_in_volume": [
   "os.chdir",
   "sys.path.append",
   "sys.path.remove",
   "time.sleep",
   "time.time"
  ],
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.ufuncify": {
  "lineno": 340,
  "symbols_in_volume": [
   "os.getcwd",
   "sympy.core.symbol.Symbol",
   "sympy.utilities.codegen.make_routine"
  ],
  "type": "function"
 },
 "pycalphad.core.eqresult": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.eqresult.EquilibriumResult": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.eqresult.EquilibriumResult.__init__": {
  "lineno": 67,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pycalphad.variables.PhaseFraction",
   "pycalphad.variables.SiteFraction"
  ],
  "type": "function"
 },
 "pycalphad.core.eqresult.EquilibriumResult.__repr__": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.eqresult.EquilibriumResult.__str__": {
  "lineno": 109,
  "symbols_in_volume": [
   "pycalphad.variables"
  ],
  "type": "function"
 },
 "pycalphad.core.eqresult.EquilibriumResult.mole_fractions": {
  "lineno": 97,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "pycalphad.core.eqresult.PhaseResult": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.eqresult.PhaseResult.__init__": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.eqresult.PhaseResult.__repr__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.eqresult.PhaseResult.__str__": {
  "lineno": 54,
  "symbols_in_volume": [
   "operator.itemgetter",
   "pycalphad.variables"
  ],
  "type": "function"
 },
 "pycalphad.core.eqresult.PhaseResult.mole_fractions": {
  "lineno": 29,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "pycalphad.core.eqresult.SublatticeResult": {
  "lineno": 10,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.eqresult.SublatticeResult.__init__": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.eqresult.SublatticeResult.__repr__": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.eqresult.SublatticeResult.__str__": {
  "lineno": 18,
  "symbols_in_volume": [
   "operator.itemgetter",
   "pycalphad.variables"
  ],
  "type": "function"
 },
 "pycalphad.core.halton": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "module"
 },
 "pycalphad.core.halton.halton": {
  "lineno": 87,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.arange",
   "numpy.asarray",
   "numpy.ceil",
   "numpy.dot",
   "numpy.empty",
   "numpy.float",
   "numpy.floor",
   "numpy.int",
   "numpy.log",
   "numpy.longdouble",
   "numpy.mod",
   "numpy.outer",
   "numpy.power"
  ],
  "type": "function"
 },
 "pycalphad.core.lower_convex_hull": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.lower_convex_hull._initialize_array": {
  "lineno": 14,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan"
  ],
  "type": "function"
 },
 "pycalphad.core.lower_convex_hull.lower_convex_hull": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.any",
   "numpy.arange",
   "numpy.argmax",
   "numpy.argmin",
   "numpy.concatenate",
   "numpy.diag_indices",
   "numpy.divide",
   "numpy.einsum",
   "numpy.empty",
   "numpy.float",
   "numpy.full",
   "numpy.index_exp",
   "numpy.inf",
   "numpy.int",
   "numpy.linalg.svd",
   "numpy.logical_and",
   "numpy.mod",
   "numpy.multiply",
   "numpy.multiply.reduce",
   "numpy.newaxis",
   "numpy.nonzero",
   "numpy.rollaxis",
   "numpy.subtract",
   "numpy.sum",
   "numpy.swapaxes",
   "numpy.unravel_index",
   "numpy.zeros",
   "numpy.zeros_like",
   "pycalphad.core.cartesian.cartesian",
   "pycalphad.core.constants.MIN_SITE_FRACTION",
   "pycalphad.log.logger.debug"
  ],
  "type": "function"
 },
 "pycalphad.core.lower_convex_hull.stacked_lstsq": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.conj",
   "numpy.einsum",
   "numpy.linalg.svd",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.sympydiff_utils.LazyPickleableFunction": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.sympydiff_utils.LazyPickleableFunction.__call__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.LazyPickleableFunction.__getstate__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.LazyPickleableFunction.__init__": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.LazyPickleableFunction.compile": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.LazyPickleableFunction.kernel": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.UfuncifyFunction": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.sympydiff_utils.UfuncifyFunction.__init__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.UfuncifyFunction.compile": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.build_functions": {
  "lineno": 61,
  "symbols_in_volume": [
   "logging.warning",
   "numpy.arange",
   "numpy.int",
   "numpy.triu_indices",
   "os.getcwd",
   "sympy.oo",
   "sympy.zoo"
  ],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.build_functions.grad_argwrapper": {
  "lineno": 95,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.array"
  ],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.build_functions.hess_argwrapper": {
  "lineno": 101,
  "symbols_in_volume": [
   "itertools.chain",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.chunks": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.tempfilemanager": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.tempfilemanager.TempfileManager": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.core.tempfilemanager.TempfileManager.__call__": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.tempfilemanager.TempfileManager.__call__.wrapper": {
  "lineno": 56,
  "symbols_in_volume": [
   "functools.wraps"
  ],
  "type": "function"
 },
 "pycalphad.core.tempfilemanager.TempfileManager.__enter__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.tempfilemanager.TempfileManager.__exit__": {
  "lineno": 35,
  "symbols_in_volume": [
   "os.chdir",
   "os.unlink",
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "pycalphad.core.tempfilemanager.TempfileManager.__init__": {
  "lineno": 12,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.tempfilemanager.TempfileManager.create_logfile": {
  "lineno": 27,
  "symbols_in_volume": [
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "pycalphad.core.tempfilemanager.TempfileManager.create_tree": {
  "lineno": 17,
  "symbols_in_volume": [
   "os.F_OK",
   "os.access",
   "os.mkdir",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "pycalphad.core.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.core.utils.NumPyPrinter": {
  "lineno": 25,
  "symbols_in_volume": [
   "sympy.printing.lambdarepr.LambdaPrinter"
  ],
  "type": "class"
 },
 "pycalphad.core.utils.NumPyPrinter._print_And": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_MatMul": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_MatrixBase": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_Not": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_Or": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_Piecewise": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_seq": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.broadcast_to": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.broadcast_arrays",
   "numpy.empty"
  ],
  "type": "function"
 },
 "pycalphad.core.utils.endmember_matrix": {
  "lineno": 263,
  "symbols_in_volume": [
   "functools.reduce",
   "itertools.product",
   "numpy.all",
   "numpy.array",
   "numpy.concatenate",
   "numpy.delete",
   "numpy.empty",
   "numpy.eye",
   "numpy.float",
   "numpy.where",
   "operator.mul",
   "pycalphad.core.constants.MIN_SITE_FRACTION"
  ],
  "type": "function"
 },
 "pycalphad.core.utils.generate_dof": {
  "lineno": 248,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction"
  ],
  "type": "function"
 },
 "pycalphad.core.utils.make_callable": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.where",
   "sympy.utilities.lambdify.lambdify"
  ],
  "type": "function"
 },
 "pycalphad.core.utils.point_sample": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.atleast_2d",
   "numpy.log",
   "pycalphad.core.halton.halton"
  ],
  "type": "function"
 },
 "pycalphad.core.utils.sizeof_fmt": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.core.utils.unpack_condition": {
  "lineno": 208,
  "symbols_in_volume": [
   "collections.Iterable",
   "numpy.arange",
   "numpy.float"
  ],
  "type": "function"
 },
 "pycalphad.core.utils.unpack_kwarg": {
  "lineno": 303,
  "symbols_in_volume": [
   "collections.Iterable",
   "collections.Mapping",
   "collections.defaultdict",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pycalphad.core.utils.unpack_phases": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.fitting": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "pycalphad.fitting._map_internal_dof": {
  "lineno": 119,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.dot",
   "numpy.empty",
   "numpy.ones",
   "numpy.zeros",
   "pycalphad.core.utils.generate_dof",
   "pycalphad.variables.SiteFraction"
  ],
  "type": "function"
 },
 "pycalphad.fitting.build_pymc_model": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.divide",
   "numpy.square",
   "numpy.var",
   "numpy.zeros_like",
   "pymc.Model",
   "pymc.potential"
  ],
  "type": "function"
 },
 "pycalphad.fitting.plot_results": {
  "lineno": 145,
  "symbols_in_volume": [
   "itertools.groupby",
   "matplotlib.pyplot.figure",
   "matplotlib.pyplot.show",
   "numpy.add",
   "numpy.array",
   "numpy.atleast_2d",
   "numpy.float",
   "pycalphad.calculate",
   "pycalphad.equilibrium",
   "pycalphad.variables.T",
   "pycalphad.variables.X",
   "pycalphad.variables.__dict__"
  ],
  "type": "function"
 },
 "pycalphad.fitting.plot_results.plot_key": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.fitting.setup_dataset": {
  "lineno": 18,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "itertools.chain",
   "json.load",
   "numpy.array",
   "numpy.atleast_1d",
   "numpy.float",
   "pycalphad.Model",
   "pycalphad.core.utils.make_callable",
   "pycalphad.variables.P",
   "pycalphad.variables.SiteFraction",
   "pycalphad.variables.T",
   "sympy.Symbol",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "pycalphad.fitting.setup_dataset.compute_error": {
  "lineno": 41,
  "symbols_in_volume": [
   "functools.partial",
   "itertools.chain",
   "numpy.atleast_2d",
   "numpy.float",
   "pycalphad.calculate"
  ],
  "type": "function"
 },
 "pycalphad.fitting.setup_dataset.compute_values": {
  "lineno": 51,
  "symbols_in_volume": [
   "functools.partial",
   "itertools.chain",
   "numpy.atleast_2d",
   "numpy.float",
   "pycalphad.calculate"
  ],
  "type": "function"
 },
 "pycalphad.io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.io.database": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "module"
 },
 "pycalphad.io.database.Database": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.io.database.Database.__eq__": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.__eq__.param_sort_key": {
  "lineno": 316,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.__getstate__": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.__ne__": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.__new__": {
  "lineno": 80,
  "symbols_in_volume": [
   "os.path.splitext",
   "tinydb.TinyDB",
   "tinydb.storages.MemoryStorage"
  ],
  "type": "function"
 },
 "pycalphad.io.database.Database.__setstate__": {
  "lineno": 127,
  "symbols_in_volume": [
   "tinydb.TinyDB",
   "tinydb.storages.MemoryStorage"
  ],
  "type": "function"
 },
 "pycalphad.io.database.Database.__str__": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.add_parameter": {
  "lineno": 353,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.add_phase": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.add_phase_constituents": {
  "lineno": 415,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.add_structure_entry": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.from_file": {
  "lineno": 155,
  "symbols_in_volume": [
   "os.path.splitext"
  ],
  "type": "function"
 },
 "pycalphad.io.database.Database.from_string": {
  "lineno": 210,
  "symbols_in_volume": [
   "io.StringIO"
  ],
  "type": "function"
 },
 "pycalphad.io.database.Database.register_format": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.search": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Database.to_file": {
  "lineno": 229,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "os.path.exists",
   "os.path.splitext"
  ],
  "type": "function"
 },
 "pycalphad.io.database.Database.to_string": {
  "lineno": 281,
  "symbols_in_volume": [
   "io.StringIO"
  ],
  "type": "function"
 },
 "pycalphad.io.database.Phase": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.io.database.Phase.__eq__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Phase.__init__": {
  "lineno": 37,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Phase.__ne__": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database.Phase.__repr__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.database._to_tuple": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb": {
  "lineno": null,
  "symbols_in_volume": [
   "ast.Add",
   "ast.BinOp",
   "ast.Call",
   "ast.Div",
   "ast.Expression",
   "ast.Load",
   "ast.Mult",
   "ast.Name",
   "ast.Num",
   "ast.Pow",
   "ast.Sub",
   "ast.UAdd",
   "ast.USub",
   "ast.UnaryOp",
   "pycalphad.Database.register_format"
  ],
  "type": "module"
 },
 "pycalphad.io.tdb.TCCommand": {
  "lineno": 136,
  "symbols_in_volume": [
   "pyparsing.CaselessKeyword"
  ],
  "type": "class"
 },
 "pycalphad.io.tdb.TCCommand.parseImpl": {
  "lineno": 140,
  "symbols_in_volume": [
   "pycalphad.io.tdb_keywords.expand_keyword",
   "pyparsing.ParseException"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter": {
  "lineno": 374,
  "symbols_in_volume": [
   "sympy.printing.str.StrPrinter"
  ],
  "type": "class"
 },
 "pycalphad.io.tdb.TCPrinter._print_Function": {
  "lineno": 482,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Infinity": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Mul": {
  "lineno": 409,
  "symbols_in_volume": [
   "sympy.Mul.make_args",
   "sympy.Pow",
   "sympy.Rational",
   "sympy.S.Infinity",
   "sympy.S.One",
   "sympy.core.mul._keep_coeff",
   "sympy.printing.precedence.precedence"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Piecewise": {
  "lineno": 378,
  "symbols_in_volume": [
   "pycalphad.variables.T",
   "sympy.EmptySet",
   "sympy.Intersection",
   "sympy.Interval",
   "sympy.S.Zero",
   "sympy.S.true",
   "sympy.Union"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Pow": {
  "lineno": 459,
  "symbols_in_volume": [
   "sympy.printing.precedence.precedence"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Symbol": {
  "lineno": 475,
  "symbols_in_volume": [
   "pycalphad.variables.StateVariable"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter.blacklisted": {
  "lineno": 490,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb._make_piecewise_ast": {
  "lineno": 98,
  "symbols_in_volume": [
   "pycalphad.variables.T",
   "sympy.And",
   "sympy.Piecewise"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb._parse_action": {
  "lineno": 59,
  "symbols_in_volume": [
   "inspect.getargspec"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb._parse_action.action": {
  "lineno": 82,
  "symbols_in_volume": [
   "functools.wraps",
   "sys.exc_info"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb._process_parameter": {
  "lineno": 297,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb._process_phase": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb._process_typedef": {
  "lineno": 234,
  "symbols_in_volume": [
   "pycalphad.io.tdb_keywords.expand_keyword"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb._setitem_raise_duplicates": {
  "lineno": 314,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb._sympify_string": {
  "lineno": 32,
  "symbols_in_volume": [
   "ast.Expression",
   "ast.parse",
   "ast.walk",
   "pycalphad.variables.P",
   "pycalphad.variables.R",
   "pycalphad.variables.T",
   "re.IGNORECASE",
   "re.sub",
   "sympy.Symbol",
   "sympy.sympify"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb._tdb_grammar": {
  "lineno": 169,
  "symbols_in_volume": [
   "pycalphad.io.tdb_keywords.TDB_PARAM_TYPES",
   "pyparsing.CharsNotIn",
   "pyparsing.Group",
   "pyparsing.LineEnd",
   "pyparsing.MatchFirst",
   "pyparsing.OneOrMore",
   "pyparsing.Optional",
   "pyparsing.Regex",
   "pyparsing.SkipTo",
   "pyparsing.Suppress",
   "pyparsing.White",
   "pyparsing.Word",
   "pyparsing.ZeroOrMore",
   "pyparsing.alphanums",
   "pyparsing.alphas",
   "pyparsing.delimitedList",
   "pyparsing.nums"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb._unimplemented": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb.read_tdb": {
  "lineno": 739,
  "symbols_in_volume": [
   "pyparsing.ParseException"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.reflow_text": {
  "lineno": 525,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.io.tdb.to_interval": {
  "lineno": 334,
  "symbols_in_volume": [
   "sympy.And",
   "sympy.Complement",
   "sympy.GreaterThan",
   "sympy.Intersection",
   "sympy.Interval",
   "sympy.LessThan",
   "sympy.Not",
   "sympy.Or",
   "sympy.S.Infinity",
   "sympy.S.NegativeInfinity",
   "sympy.S.true",
   "sympy.StrictGreaterThan",
   "sympy.StrictLessThan",
   "sympy.Union"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.write_tdb": {
  "lineno": 562,
  "symbols_in_volume": [
   "collections.defaultdict",
   "collections.namedtuple",
   "datetime.datetime.now",
   "getpass.getuser",
   "itertools.combinations",
   "pycalphad.__version__",
   "pycalphad.variables.T",
   "sympy.And",
   "sympy.Piecewise"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb.write_tdb.write_parameter": {
  "lineno": 680,
  "symbols_in_volume": [
   "pycalphad.variables.T",
   "sympy.And",
   "sympy.Piecewise"
  ],
  "type": "function"
 },
 "pycalphad.io.tdb_keywords": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.io.tdb_keywords.expand_keyword": {
  "lineno": 82,
  "symbols_in_volume": [
   "re.escape",
   "re.match"
  ],
  "type": "function"
 },
 "pycalphad.log": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.Formatter",
   "logging.INFO",
   "logging.StreamHandler",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "pycalphad.log.debug_mode": {
  "lineno": 16,
  "symbols_in_volume": [
   "logging.DEBUG"
  ],
  "type": "function"
 },
 "pycalphad.model": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.model.DofError": {
  "lineno": 18,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.model.Model": {
  "lineno": 22,
  "symbols_in_volume": [
   "pycalphad.variables.T",
   "sympy.S.Zero"
  ],
  "type": "class"
 },
 "pycalphad.model.Model._Muggianu_correction_dict": {
  "lineno": 281,
  "symbols_in_volume": [
   "sympy.Add",
   "sympy.S.One"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.__eq__": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.model.Model.__hash__": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.model.Model.__init__": {
  "lineno": 47,
  "symbols_in_volume": [
   "pycalphad.log.logger.debug",
   "pycalphad.variables.SiteFraction",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.__ne__": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.model.Model._array_validity": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.model.Model._interaction_test": {
  "lineno": 248,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.model.Model._purity_test": {
  "lineno": 224,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.model.Model._site_ratio_normalization": {
  "lineno": 265,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction",
   "sympy.S.Zero"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.ast": {
  "lineno": 145,
  "symbols_in_volume": [
   "sympy.Add"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.atomic_ordering_energy": {
  "lineno": 550,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction",
   "sympy.Add"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.build_phase": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.model.Model.degree_of_ordering": {
  "lineno": 155,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction",
   "sympy.Abs",
   "sympy.S.Zero"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.excess_mixing_energy": {
  "lineno": 432,
  "symbols_in_volume": [
   "tinydb.where"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.ideal_mixing_energy": {
  "lineno": 407,
  "symbols_in_volume": [
   "pycalphad.core.constants.MIN_SITE_FRACTION",
   "pycalphad.variables.R",
   "pycalphad.variables.SiteFraction",
   "pycalphad.variables.T",
   "sympy.Piecewise",
   "sympy.S.Zero",
   "sympy.log"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.magnetic_energy": {
  "lineno": 449,
  "symbols_in_volume": [
   "pycalphad.variables.R",
   "pycalphad.variables.T",
   "sympy.Piecewise",
   "sympy.S.Zero",
   "sympy.log",
   "tinydb.where"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.mole_fraction": {
  "lineno": 513,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction",
   "sympy.S.Zero"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.redlich_kister_sum": {
  "lineno": 309,
  "symbols_in_volume": [
   "copy.deepcopy",
   "pycalphad.variables.SiteFraction",
   "sympy.Add",
   "sympy.Mul",
   "sympy.Pow",
   "sympy.S.One",
   "tinydb.where"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.reference_energy": {
  "lineno": 392,
  "symbols_in_volume": [
   "tinydb.where"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.standard_mole_fraction": {
  "lineno": 124,
  "symbols_in_volume": [
   "pycalphad.variables.SiteFraction",
   "sympy.S.Zero"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.symbol_replace": {
  "lineno": 83,
  "symbols_in_volume": [
   "pycalphad.variables.StateVariable",
   "sympy.Symbol"
  ],
  "type": "function"
 },
 "pycalphad.model.Model.variables": {
  "lineno": 150,
  "symbols_in_volume": [
   "pycalphad.variables.StateVariable"
  ],
  "type": "function"
 },
 "pycalphad.model.TestModel": {
  "lineno": 618,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.model.TestModel.__init__": {
  "lineno": 646,
  "symbols_in_volume": [
   "numpy.float",
   "numpy.int",
   "numpy.ones",
   "numpy.ones_like",
   "numpy.random.dirichlet",
   "pycalphad.variables.SiteFraction",
   "sympy.Add",
   "sympy.sin"
  ],
  "type": "function"
 },
 "pycalphad.plot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.plot.binary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.plot.binary.binplot": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.atleast_1d",
   "pycalphad.equilibrium",
   "pycalphad.plot.eqplot.eqplot",
   "pycalphad.variables.Composition",
   "pycalphad.variables.P",
   "pycalphad.variables.T"
  ],
  "type": "function"
 },
 "pycalphad.plot.eqplot": {
  "lineno": null,
  "symbols_in_volume": [
   "pycalphad.variables.P",
   "pycalphad.variables.T"
  ],
  "type": "module"
 },
 "pycalphad.plot.eqplot._map_coord_to_variable": {
  "lineno": 17,
  "symbols_in_volume": [
   "pycalphad.variables.P",
   "pycalphad.variables.T",
   "pycalphad.variables.X"
  ],
  "type": "function"
 },
 "pycalphad.plot.eqplot.eqplot": {
  "lineno": 38,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "matplotlib.collections.LineCollection",
   "matplotlib.patches.Patch",
   "matplotlib.pyplot.gca",
   "numpy.array",
   "numpy.asarray",
   "numpy.concatenate",
   "numpy.int",
   "numpy.max",
   "numpy.min",
   "numpy.mod",
   "numpy.newaxis",
   "numpy.nonzero",
   "numpy.rollaxis",
   "numpy.sum",
   "numpy.take",
   "pycalphad.core.utils.unpack_condition",
   "pycalphad.variables.Composition",
   "pycalphad.variables.P",
   "pycalphad.variables.T"
  ],
  "type": "function"
 },
 "pycalphad.plot.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pycalphad.plot.utils.phase_legend": {
  "lineno": 8,
  "symbols_in_volume": [
   "matplotlib.patches.Patch",
   "numpy.mod"
  ],
  "type": "function"
 },
 "pycalphad.refdata": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pycalphad.variables.T",
   "sympy.And",
   "sympy.Piecewise",
   "sympy.Symbol",
   "sympy.log"
  ],
  "type": "module"
 },
 "pycalphad.variables": {
  "lineno": null,
  "symbols_in_volume": [
   "sympy.Float"
  ],
  "type": "module"
 },
 "pycalphad.variables.ChemicalPotential": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.variables.ChemicalPotential.__getnewargs__": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.ChemicalPotential.__new__": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.ChemicalPotential.__str__": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.ChemicalPotential._latex": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.Composition": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.variables.Composition.__getnewargs__": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.Composition.__new__": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.Composition._latex": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.PhaseFraction": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.variables.PhaseFraction.__getnewargs__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.PhaseFraction.__new__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.PhaseFraction._latex": {
  "lineno": 60,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.SiteFraction": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pycalphad.variables.SiteFraction.__getnewargs__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.SiteFraction.__new__": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.SiteFraction.__str__": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.SiteFraction._latex": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pycalphad.variables.StateVariable": {
  "lineno": 8,
  "symbols_in_volume": [
   "sympy.Symbol"
  ],
  "type": "class"
 },
 "pycalphad.variables.StateVariable.__new__": {
  "lineno": 12,
  "symbols_in_volume": [
   "sympy.Symbol.__new__"
  ],
  "type": "function"
 }
}