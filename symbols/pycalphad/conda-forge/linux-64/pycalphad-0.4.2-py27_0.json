{
 "pycalphad": {
  "data": {
   "symbols_in_volume": [
    "get_versions",
    "pycalphad.MethodDescriptorType",
    "pycalphad.MethodDescriptorWrapper",
    "pycalphad.pickle",
    "type",
    "type.__dict__"
   ]
  },
  "type": "module"
 },
 "pycalphad.ConditionError": {
  "data": {
   "shadows": "pycalphad.core.equilibrium.ConditionError"
  },
  "type": "import"
 },
 "pycalphad.Database": {
  "data": {
   "shadows": "pycalphad.io.database.Database"
  },
  "type": "import"
 },
 "pycalphad.EquilibriumError": {
  "data": {
   "shadows": "pycalphad.core.equilibrium.EquilibriumError"
  },
  "type": "import"
 },
 "pycalphad.MethodDescriptorType": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pycalphad.MethodDescriptorWrapper": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pycalphad.Model": {
  "data": {
   "shadows": "pycalphad.model.Model"
  },
  "type": "import"
 },
 "pycalphad.__version__": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pycalphad._version": {
  "data": {},
  "type": "module"
 },
 "pycalphad._version.get_versions": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "pycalphad._version.version_full",
    "pycalphad._version.version_version"
   ]
  },
  "type": "function"
 },
 "pycalphad._version.version_full": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pycalphad._version.version_version": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pycalphad.binplot": {
  "data": {
   "shadows": "pycalphad.plot.binary.binplot"
  },
  "type": "import"
 },
 "pycalphad.calculate": {
  "data": {
   "shadows": "pycalphad.core.calculate.calculate"
  },
  "type": "import"
 },
 "pycalphad.cloudpickle": {
  "data": {
   "shadows": "cloudpickle"
  },
  "type": "import"
 },
 "pycalphad.constraints": {
  "data": {},
  "type": "module"
 },
 "pycalphad.constraints.Add": {
  "data": {
   "shadows": "sympy.Add"
  },
  "type": "import"
 },
 "pycalphad.constraints.S": {
  "data": {
   "shadows": "sympy.S"
  },
  "type": "import"
 },
 "pycalphad.constraints.mole_fraction": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "enumerate",
    "pycalphad.variables.SiteFraction",
    "set",
    "sympy.S.Zero"
   ]
  },
  "type": "function"
 },
 "pycalphad.constraints.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "pycalphad.core": {
  "data": {},
  "type": "module"
 },
 "pycalphad.core.autograd_utils": {
  "data": {},
  "type": "module"
 },
 "pycalphad.core.autograd_utils.BIGNUM": {
  "data": {
   "shadows": "pycalphad.core.constants.BIGNUM"
  },
  "type": "import"
 },
 "pycalphad.core.autograd_utils.NumPyPrinter": {
  "data": {
   "shadows": "pycalphad.core.utils.NumPyPrinter"
  },
  "type": "import"
 },
 "pycalphad.core.autograd_utils.anp": {
  "data": {
   "shadows": "autograd.numpy"
  },
  "type": "import"
 },
 "pycalphad.core.autograd_utils.build_functions": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "autograd.numpy",
    "autograd.numpy.abs",
    "autograd.numpy.logical_and",
    "autograd.numpy.logical_or",
    "len",
    "obj",
    "pycalphad.core.constants.BIGNUM",
    "pycalphad.core.utils.NumPyPrinter",
    "sympy.lambdify",
    "sympy.oo",
    "sympy.zoo",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.autograd_utils.build_functions.argwrapper": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "obj"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.autograd_utils.build_functions.grad_func": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "autograd.elementwise_grad",
    "autograd.numpy.array",
    "autograd.numpy.atleast_2d",
    "autograd.numpy.broadcast_arrays",
    "itertools.chain",
    "len",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.autograd_utils.build_functions.hess_func": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "autograd.numpy.array",
    "autograd.numpy.atleast_3d",
    "autograd.numpy.broadcast_arrays",
    "itertools.chain",
    "len",
    "list",
    "pycalphad.core.autograd_utils.elementwise_hess",
    "range"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.autograd_utils.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "pycalphad.core.autograd_utils.elementwise_grad": {
  "data": {
   "shadows": "autograd.elementwise_grad"
  },
  "type": "import"
 },
 "pycalphad.core.autograd_utils.elementwise_hess": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "autograd.jacobian"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.autograd_utils.elementwise_hess.sum_grad_output": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "autograd.elementwise_grad",
    "sum_latter_dims"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.autograd_utils.elementwise_hess.sum_latter_dims": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "autograd.numpy.sum"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.autograd_utils.jacobian": {
  "data": {
   "shadows": "autograd.jacobian"
  },
  "type": "import"
 },
 "pycalphad.core.autograd_utils.lambdify": {
  "data": {
   "shadows": "sympy.lambdify"
  },
  "type": "import"
 },
 "pycalphad.core.autograd_utils.oo": {
  "data": {
   "shadows": "sympy.oo"
  },
  "type": "import"
 },
 "pycalphad.core.autograd_utils.zoo": {
  "data": {
   "shadows": "sympy.zoo"
  },
  "type": "import"
 },
 "pycalphad.core.calculate": {
  "data": {},
  "type": "module"
 },
 "pycalphad.core.calculate.DataArray": {
  "data": {
   "shadows": "xarray.DataArray"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.Dataset": {
  "data": {
   "shadows": "xarray.Dataset"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.DofError": {
  "data": {
   "shadows": "pycalphad.model.DofError"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.Model": {
  "data": {
   "shadows": "pycalphad.Model"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.Symbol": {
  "data": {
   "shadows": "sympy.Symbol"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.TempfileManager": {
  "data": {
   "shadows": "pycalphad.core.tempfilemanager.TempfileManager"
  },
  "type": "import"
 },
 "pycalphad.core.calculate._compute_phase_values": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "float",
    "func",
    "int",
    "isinstance",
    "len",
    "list",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.divide",
    "numpy.dot",
    "numpy.empty",
    "numpy.float",
    "numpy.full",
    "numpy.meshgrid",
    "numpy.nan",
    "numpy.ones",
    "numpy.repeat",
    "numpy.rollaxis",
    "numpy.zeros",
    "pycalphad.core.calculate.itertools",
    "pycalphad.core.utils.broadcast_to",
    "pycalphad.variables.SiteFraction",
    "range",
    "set",
    "str",
    "tuple",
    "xarray.Dataset",
    "zip"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.calculate._generate_fake_points": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "float",
    "len",
    "max",
    "numpy.atleast_1d",
    "numpy.eye",
    "numpy.full",
    "numpy.nan",
    "numpy.repeat",
    "numpy.tile",
    "pycalphad.core.utils.broadcast_to",
    "str",
    "tuple",
    "xarray.Dataset"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.calculate.broadcast_to": {
  "data": {
   "shadows": "pycalphad.core.utils.broadcast_to"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.build_functions": {
  "data": {
   "shadows": "pycalphad.core.autograd_utils.build_functions"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.calculate": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "ValueError",
    "dict",
    "enumerate",
    "float",
    "getattr",
    "isinstance",
    "len",
    "list",
    "max",
    "mod",
    "mod.__class__",
    "mod.components",
    "numpy.arange",
    "numpy.asarray",
    "numpy.atleast_2d",
    "numpy.concatenate",
    "numpy.copy",
    "numpy.float",
    "numpy.inf",
    "numpy.isnan",
    "numpy.linspace",
    "numpy.newaxis.T",
    "numpy.power",
    "pycalphad.Model",
    "pycalphad.core.autograd_utils.build_functions",
    "pycalphad.core.calculate._compute_phase_values",
    "pycalphad.core.calculate._generate_fake_points",
    "pycalphad.core.calculate.collections",
    "pycalphad.core.calculate.itertools",
    "pycalphad.core.calculate.os",
    "pycalphad.core.tempfilemanager.TempfileManager",
    "pycalphad.core.utils.endmember_matrix",
    "pycalphad.core.utils.generate_dof",
    "pycalphad.core.utils.point_sample",
    "pycalphad.core.utils.unpack_condition",
    "pycalphad.core.utils.unpack_kwarg",
    "pycalphad.core.utils.unpack_phases",
    "pycalphad.log.logger.debug",
    "pycalphad.log.logger.warning",
    "pycalphad.model.DofError",
    "pycalphad.variables.SiteFraction",
    "pycalphad.variables.StateVariable",
    "sampler",
    "set",
    "sorted",
    "str",
    "sum",
    "sympy.Symbol",
    "type",
    "xarray.concat"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.calculate.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.concat": {
  "data": {
   "shadows": "xarray.concat"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.endmember_matrix": {
  "data": {
   "shadows": "pycalphad.core.utils.endmember_matrix"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.generate_dof": {
  "data": {
   "shadows": "pycalphad.core.utils.generate_dof"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.logger": {
  "data": {
   "shadows": "pycalphad.log.logger"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.point_sample": {
  "data": {
   "shadows": "pycalphad.core.utils.point_sample"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.unpack_condition": {
  "data": {
   "shadows": "pycalphad.core.utils.unpack_condition"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.unpack_kwarg": {
  "data": {
   "shadows": "pycalphad.core.utils.unpack_kwarg"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.unpack_phases": {
  "data": {
   "shadows": "pycalphad.core.utils.unpack_phases"
  },
  "type": "import"
 },
 "pycalphad.core.calculate.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "pycalphad.core.cartesian": {
  "data": {},
  "type": "module"
 },
 "pycalphad.core.cartesian.cartesian": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.prod",
    "numpy.repeat",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.cartesian.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycalphad.core.constants": {
  "data": {},
  "type": "module"
 },
 "pycalphad.core.constants.BIGNUM": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pycalphad.core.constants.COMP_DIFFERENCE_TOL": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pycalphad.core.constants.MIN_SITE_FRACTION": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pycalphad.core.custom_ccodegen": {
  "data": {},
  "type": "module"
 },
 "pycalphad.core.custom_ccodegen.AssignmentError": {
  "data": {
   "shadows": "sympy.utilities.codegen.AssignmentError"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ccodegen.CCodeGen": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "sympy.utilities.codegen.CCodeGen"
   ]
  },
  "type": "class"
 },
 "pycalphad.core.custom_ccodegen.CCodeGen._call_printer": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "isinstance",
    "sorted",
    "str",
    "sympy.printing.ccode",
    "sympy.utilities.codegen.AssignmentError",
    "sympy.utilities.codegen.Result",
    "sympy.utilities.codegen.ResultBase"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.custom_ccodegen.Result": {
  "data": {
   "shadows": "sympy.utilities.codegen.Result"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ccodegen.ResultBase": {
  "data": {
   "shadows": "sympy.utilities.codegen.ResultBase"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ccodegen.ccode": {
  "data": {
   "shadows": "sympy.printing.ccode"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ccodegen.sympy_CCodeGen": {
  "data": {
   "shadows": "sympy.utilities.codegen.CCodeGen"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ufuncify": {
  "data": {
   "symbols_in_volume": [
    "string.Template"
   ]
  },
  "type": "module"
 },
 "pycalphad.core.custom_ufuncify.CodeWrapper": {
  "data": {
   "shadows": "sympy.utilities.autowrap.CodeWrapper"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ufuncify.InOutArgument": {
  "data": {
   "shadows": "sympy.utilities.codegen.InOutArgument"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ufuncify.OutputArgument": {
  "data": {
   "shadows": "sympy.utilities.codegen.OutputArgument"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ufuncify.Symbol": {
  "data": {
   "shadows": "sympy.core.symbol.Symbol"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ufuncify.Template": {
  "data": {
   "shadows": "string.Template"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "sympy.utilities.autowrap.CodeWrapper"
   ]
  },
  "type": "class"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper.__init__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper",
    "super"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper._generate_code": {
  "data": {
   "lineno": 192
  },
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper._get_wrapped_function": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "classmethod",
    "getattr"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper._partition_args": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "sympy.utilities.codegen.InOutArgument",
    "sympy.utilities.codegen.OutputArgument"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper._prepare_files": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper._process_files": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pycalphad.core.custom_ufuncify.subprocess"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper.command": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "property",
    "pycalphad.core.custom_ufuncify.sys"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper.dump_c": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pycalphad.core.custom_ufuncify._ufunc_body",
    "pycalphad.core.custom_ufuncify._ufunc_bottom",
    "pycalphad.core.custom_ufuncify._ufunc_init_form",
    "pycalphad.core.custom_ufuncify._ufunc_outcalls",
    "pycalphad.core.custom_ufuncify._ufunc_top",
    "range"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper.dump_setup": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "pycalphad.core.custom_ufuncify._ufunc_setup",
    "str"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper.module_name": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper.wrap_code": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "id",
    "pycalphad.core.custom_ufuncify.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper.wrap_code.lazy_wrapper": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ImportError",
    "__import__",
    "print",
    "pycalphad.core.custom_ufuncify.os",
    "pycalphad.core.custom_ufuncify.sys",
    "pycalphad.core.custom_ufuncify.time"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.custom_ufuncify._ufunc_body": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pycalphad.core.custom_ufuncify._ufunc_bottom": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pycalphad.core.custom_ufuncify._ufunc_init_form": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "pycalphad.core.custom_ufuncify._ufunc_outcalls": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pycalphad.core.custom_ufuncify._ufunc_setup": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "pycalphad.core.custom_ufuncify._ufunc_top": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pycalphad.core.custom_ufuncify.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ufuncify.make_routine": {
  "data": {
   "shadows": "sympy.utilities.codegen.make_routine"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ufuncify.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ufuncify.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ufuncify.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ufuncify.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ufuncify.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pycalphad.core.custom_ufuncify.ufuncify": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "CCodeGen",
    "TempfileManager",
    "ValueError",
    "enumerate",
    "isinstance",
    "list",
    "pycalphad.core.custom_ufuncify.UfuncifyCodeWrapper",
    "pycalphad.core.custom_ufuncify.os",
    "sympy.core.symbol.Symbol",
    "sympy.utilities.codegen.make_routine",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.eqresult": {
  "data": {},
  "type": "module"
 },
 "pycalphad.core.eqresult.EquilibriumResult": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pycalphad.core.eqresult.EquilibriumResult.__init__": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "list",
    "pycalphad.core.eqresult.PhaseResult",
    "pycalphad.core.eqresult.SublatticeResult",
    "pycalphad.core.eqresult.copy",
    "pycalphad.variables.PhaseFraction",
    "pycalphad.variables.SiteFraction",
    "range"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.eqresult.EquilibriumResult.__repr__": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "pycalphad.core.eqresult.EquilibriumResult.__str__": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "list",
    "pycalphad.variables",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.eqresult.EquilibriumResult.mole_fractions": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "collections.defaultdict",
    "property"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.eqresult.PhaseResult": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pycalphad.core.eqresult.PhaseResult.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.eqresult.PhaseResult.__repr__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pycalphad.core.eqresult.PhaseResult.__str__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "enumerate",
    "operator.itemgetter",
    "pycalphad.variables",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.eqresult.PhaseResult.mole_fractions": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "collections.defaultdict",
    "enumerate",
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.eqresult.SublatticeResult": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pycalphad.core.eqresult.SublatticeResult.__init__": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.eqresult.SublatticeResult.__repr__": {
  "data": {
   "lineno": 15
  },
  "type": "function"
 },
 "pycalphad.core.eqresult.SublatticeResult.__str__": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "operator.itemgetter",
    "pycalphad.variables",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.eqresult.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycalphad.core.eqresult.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pycalphad.core.eqresult.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "pycalphad.core.eqresult.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "pycalphad.core.halton": {
  "data": {
   "symbols_in_volume": [
    "collections.OrderedDict",
    "list",
    "pycalphad.core.halton._scrambling_multipliers"
   ]
  },
  "type": "module"
 },
 "pycalphad.core.halton.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pycalphad.core.halton._primes": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "pycalphad.core.halton._scrambling_multipliers": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "pycalphad.core.halton.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pycalphad.core.halton.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycalphad.core.halton.halton": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "ValueError",
    "collections.defaultdict",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.ceil",
    "numpy.dot",
    "numpy.empty",
    "numpy.float",
    "numpy.floor",
    "numpy.int",
    "numpy.log",
    "numpy.longdouble",
    "numpy.mod",
    "numpy.outer",
    "numpy.power",
    "pycalphad.core.halton._primes",
    "pycalphad.core.halton._scrambling_multipliers"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.halton.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycalphad.core.lower_convex_hull": {
  "data": {},
  "type": "module"
 },
 "pycalphad.core.lower_convex_hull.DRIVING_FORCE_TOLERANCE": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "pycalphad.core.lower_convex_hull.MIN_SITE_FRACTION": {
  "data": {
   "shadows": "pycalphad.core.constants.MIN_SITE_FRACTION"
  },
  "type": "import"
 },
 "pycalphad.core.lower_convex_hull._initialize_array": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.lower_convex_hull.cartesian": {
  "data": {
   "shadows": "pycalphad.core.cartesian.cartesian"
  },
  "type": "import"
 },
 "pycalphad.core.lower_convex_hull.logger": {
  "data": {
   "shadows": "pycalphad.log.logger"
  },
  "type": "import"
 },
 "pycalphad.core.lower_convex_hull.lower_convex_hull": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "int",
    "len",
    "list",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.argmax",
    "numpy.argmin",
    "numpy.concatenate",
    "numpy.diag_indices",
    "numpy.divide",
    "numpy.einsum",
    "numpy.empty",
    "numpy.float",
    "numpy.full",
    "numpy.index_exp",
    "numpy.inf",
    "numpy.int",
    "numpy.linalg.svd",
    "numpy.logical_and",
    "numpy.mod",
    "numpy.multiply",
    "numpy.multiply.reduce",
    "numpy.newaxis",
    "numpy.nonzero",
    "numpy.rollaxis",
    "numpy.subtract",
    "numpy.sum",
    "numpy.swapaxes",
    "numpy.unravel_index",
    "numpy.zeros",
    "numpy.zeros_like",
    "print",
    "pycalphad.core.cartesian.cartesian",
    "pycalphad.core.constants.MIN_SITE_FRACTION",
    "pycalphad.core.lower_convex_hull.DRIVING_FORCE_TOLERANCE",
    "pycalphad.core.lower_convex_hull._initialize_array",
    "pycalphad.core.lower_convex_hull.stacked_lstsq",
    "pycalphad.log.logger.debug",
    "set",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.lower_convex_hull.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycalphad.core.lower_convex_hull.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pycalphad.core.lower_convex_hull.stacked_lstsq": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "numpy.conj",
    "numpy.einsum",
    "numpy.linalg.svd",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils": {
  "data": {},
  "type": "module"
 },
 "pycalphad.core.sympydiff_utils.LazyPickleableFunction": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pycalphad.core.sympydiff_utils.LazyPickleableFunction.__call__": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.LazyPickleableFunction.__getstate__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.LazyPickleableFunction.__init__": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.LazyPickleableFunction.compile": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.LazyPickleableFunction.kernel": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.UfuncifyFunction": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pycalphad.core.sympydiff_utils.LazyPickleableFunction"
   ]
  },
  "type": "class"
 },
 "pycalphad.core.sympydiff_utils.UfuncifyFunction.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pycalphad.core.sympydiff_utils.UfuncifyFunction",
    "super"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.UfuncifyFunction.compile": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ufuncify"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils._NPY_MAXARGS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pycalphad.core.sympydiff_utils.build_functions": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "TempfileManager",
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.int",
    "numpy.triu_indices",
    "pycalphad.core.sympydiff_utils.UfuncifyFunction",
    "pycalphad.core.sympydiff_utils._NPY_MAXARGS",
    "pycalphad.core.sympydiff_utils.chunks",
    "pycalphad.core.sympydiff_utils.logging",
    "pycalphad.core.sympydiff_utils.os",
    "range",
    "sympy.oo",
    "sympy.zoo",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.build_functions.grad_argwrapper": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "f",
    "len",
    "list",
    "numpy.array",
    "pycalphad.core.sympydiff_utils.itertools",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.build_functions.hess_argwrapper": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "f",
    "len",
    "list",
    "numpy.zeros",
    "pycalphad.core.sympydiff_utils.itertools",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.chunks": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.sympydiff_utils.interpreted_build_functions": {
  "data": {
   "shadows": "build_functions"
  },
  "type": "import"
 },
 "pycalphad.core.sympydiff_utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pycalphad.core.sympydiff_utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycalphad.core.sympydiff_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycalphad.core.sympydiff_utils.oo": {
  "data": {
   "shadows": "sympy.oo"
  },
  "type": "import"
 },
 "pycalphad.core.sympydiff_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycalphad.core.sympydiff_utils.zoo": {
  "data": {
   "shadows": "sympy.zoo"
  },
  "type": "import"
 },
 "pycalphad.core.tempfilemanager": {
  "data": {},
  "type": "module"
 },
 "pycalphad.core.tempfilemanager.TempfileManager": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pycalphad.core.tempfilemanager.TempfileManager.__call__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pycalphad.core.tempfilemanager.TempfileManager.__call__.wrapper": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "func",
    "pycalphad.core.tempfilemanager.functools"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.tempfilemanager.TempfileManager.__enter__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "pycalphad.core.tempfilemanager.TempfileManager.__exit__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "OSError",
    "print",
    "pycalphad.core.tempfilemanager.os",
    "pycalphad.core.tempfilemanager.shutil"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.tempfilemanager.TempfileManager.__init__": {
  "data": {
   "lineno": 12
  },
  "type": "function"
 },
 "pycalphad.core.tempfilemanager.TempfileManager.create_logfile": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pycalphad.core.tempfilemanager.tempfile"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.tempfilemanager.TempfileManager.create_tree": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pycalphad.core.tempfilemanager.os",
    "pycalphad.core.tempfilemanager.tempfile"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.tempfilemanager.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pycalphad.core.tempfilemanager.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycalphad.core.tempfilemanager.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pycalphad.core.tempfilemanager.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pycalphad.core.utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pycalphad.core.utils.LambdaPrinter": {
  "data": {
   "shadows": "sympy.printing.lambdarepr.LambdaPrinter"
  },
  "type": "import"
 },
 "pycalphad.core.utils.MIN_SITE_FRACTION": {
  "data": {
   "shadows": "pycalphad.core.constants.MIN_SITE_FRACTION"
  },
  "type": "import"
 },
 "pycalphad.core.utils.NumPyPrinter": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "sympy.printing.lambdarepr.LambdaPrinter"
   ]
  },
  "type": "class"
 },
 "pycalphad.core.utils.NumPyPrinter._print_And": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "len",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_MatMul": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_MatrixBase": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_Not": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "len",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_Or": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "len",
    "reversed"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_Piecewise": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "len",
    "list",
    "reversed",
    "zip"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.utils.NumPyPrinter._print_seq": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pycalphad.core.utils.broadcast_to": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.broadcast_arrays",
    "numpy.empty"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pycalphad.core.utils.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycalphad.core.utils.endmember_matrix": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "len",
    "numpy.all",
    "numpy.array",
    "numpy.concatenate",
    "numpy.delete",
    "numpy.empty",
    "numpy.eye",
    "numpy.float",
    "numpy.where",
    "pycalphad.core.constants.MIN_SITE_FRACTION",
    "pycalphad.core.utils.functools",
    "pycalphad.core.utils.itertools",
    "pycalphad.core.utils.operator",
    "range",
    "sum"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.utils.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pycalphad.core.utils.generate_dof": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "enumerate",
    "pycalphad.variables.SiteFraction",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.utils.halton": {
  "data": {
   "shadows": "pycalphad.core.halton.halton"
  },
  "type": "import"
 },
 "pycalphad.core.utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pycalphad.core.utils.lambdify": {
  "data": {
   "shadows": "sympy.utilities.lambdify.lambdify"
  },
  "type": "import"
 },
 "pycalphad.core.utils.make_callable": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.where",
    "pycalphad.core.utils.NumPyPrinter",
    "sympy.utilities.lambdify.lambdify",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycalphad.core.utils.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pycalphad.core.utils.point_sample": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "len",
    "numpy.atleast_2d",
    "numpy.log",
    "pycalphad.core.halton.halton",
    "sum"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.utils.sizeof_fmt": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "abs"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.utils.unpack_condition": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.float",
    "pycalphad.core.utils.collections",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.utils.unpack_kwarg": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ndarray",
    "pycalphad.core.utils.collections"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.utils.unpack_phases": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "set",
    "sorted",
    "str",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pycalphad.core.utils.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "pycalphad.dill": {
  "data": {
   "shadows": "dill"
  },
  "type": "import"
 },
 "pycalphad.eqplot": {
  "data": {
   "shadows": "pycalphad.plot.eqplot.eqplot"
  },
  "type": "import"
 },
 "pycalphad.equilibrium": {
  "data": {
   "shadows": "pycalphad.core.equilibrium.equilibrium"
  },
  "type": "import"
 },
 "pycalphad.fitting": {
  "data": {
   "symbols_in_volume": [
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "pycalphad.fitting.Database": {
  "data": {
   "shadows": "pycalphad.Database"
  },
  "type": "import"
 },
 "pycalphad.fitting.Dataset": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "pycalphad.fitting.Model": {
  "data": {
   "shadows": "pycalphad.Model"
  },
  "type": "import"
 },
 "pycalphad.fitting.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pycalphad.fitting.Symbol": {
  "data": {
   "shadows": "sympy.Symbol"
  },
  "type": "import"
 },
 "pycalphad.fitting._map_internal_dof": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "numpy.divide",
    "numpy.dot",
    "numpy.empty",
    "numpy.ones",
    "numpy.zeros",
    "pycalphad.core.utils.generate_dof",
    "pycalphad.variables.SiteFraction",
    "set"
   ]
  },
  "type": "function"
 },
 "pycalphad.fitting.build_pymc_model": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "compile",
    "enumerate",
    "exec",
    "numpy.divide",
    "numpy.square",
    "numpy.var",
    "numpy.zeros_like",
    "open",
    "pycalphad.fitting.Dataset",
    "pycalphad.fitting.pymc",
    "pycalphad.fitting.setup_dataset",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pycalphad.fitting.calculate": {
  "data": {
   "shadows": "pycalphad.calculate"
  },
  "type": "import"
 },
 "pycalphad.fitting.equilibrium": {
  "data": {
   "shadows": "pycalphad.equilibrium"
  },
  "type": "import"
 },
 "pycalphad.fitting.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pycalphad.fitting.generate_dof": {
  "data": {
   "shadows": "pycalphad.core.utils.generate_dof"
  },
  "type": "import"
 },
 "pycalphad.fitting.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pycalphad.fitting.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pycalphad.fitting.make_callable": {
  "data": {
   "shadows": "pycalphad.core.utils.make_callable"
  },
  "type": "import"
 },
 "pycalphad.fitting.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pycalphad.fitting.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycalphad.fitting.plot_results": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "enumerate",
    "len",
    "list",
    "map",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.show",
    "numpy.add",
    "numpy.array",
    "numpy.atleast_2d",
    "numpy.float",
    "pycalphad.calculate",
    "pycalphad.equilibrium",
    "pycalphad.fitting._map_internal_dof",
    "pycalphad.fitting.itertools",
    "pycalphad.variables.T",
    "pycalphad.variables.X",
    "pycalphad.variables.__dict__",
    "set",
    "slice",
    "sorted",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "pycalphad.fitting.plot_results.plot_key": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "pycalphad.fitting.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pycalphad.fitting.pymc": {
  "data": {
   "shadows": "pymc"
  },
  "type": "import"
 },
 "pycalphad.fitting.setup_dataset": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "NotImplemented",
    "ValueError",
    "collections.OrderedDict",
    "getattr",
    "len",
    "list",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.float",
    "pycalphad.Model",
    "pycalphad.core.utils.make_callable",
    "pycalphad.fitting.itertools",
    "pycalphad.fitting.json",
    "pycalphad.fitting.xarray",
    "pycalphad.variables.P",
    "pycalphad.variables.SiteFraction",
    "pycalphad.variables.T",
    "set",
    "sorted",
    "str",
    "sympy.Symbol"
   ]
  },
  "type": "function"
 },
 "pycalphad.fitting.setup_dataset.compute_error": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len",
    "numpy.atleast_2d",
    "numpy.float",
    "pycalphad.calculate",
    "pycalphad.fitting.functools",
    "pycalphad.fitting.itertools",
    "slice"
   ]
  },
  "type": "function"
 },
 "pycalphad.fitting.setup_dataset.compute_values": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "len",
    "numpy.atleast_2d",
    "numpy.float",
    "pycalphad.calculate",
    "pycalphad.fitting.functools",
    "pycalphad.fitting.itertools"
   ]
  },
  "type": "function"
 },
 "pycalphad.fitting.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "pycalphad.fitting.xarray": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "pycalphad.io": {
  "data": {},
  "type": "module"
 },
 "pycalphad.io.database": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "collections.namedtuple"
   ]
  },
  "type": "module"
 },
 "pycalphad.io.database.Database": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pycalphad.io.database.Database.__eq__": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "len",
    "sorted",
    "type"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.__eq__.param_sort_key": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.__getstate__": {
  "data": {
   "lineno": 118
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.__ne__": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.__new__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "AttributeError",
    "ValueError",
    "hasattr",
    "len",
    "pycalphad.io.database.Database",
    "pycalphad.io.database.format_registry",
    "pycalphad.io.database.os",
    "set",
    "super",
    "tinydb.TinyDB",
    "tinydb.storages.MemoryStorage"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.__setstate__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "setattr",
    "tinydb.TinyDB",
    "tinydb.storages.MemoryStorage"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.__str__": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "len",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.add_parameter": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "pycalphad.io.database._to_tuple"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.add_phase": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "pycalphad.io.database.Phase",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.add_phase_constituents": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "KeyError",
    "frozenset",
    "map",
    "print",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.add_structure_entry": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.from_file": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "ValueError",
    "hasattr",
    "open",
    "pycalphad.io.database.Database",
    "pycalphad.io.database.format_registry",
    "pycalphad.io.database.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.from_string": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "classmethod",
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.register_format": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pycalphad.io.database.DatabaseFormat",
    "pycalphad.io.database.format_registry",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.search": {
  "data": {
   "lineno": 437
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.to_file": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "AttributeError",
    "FileExistsError",
    "NotImplementedError",
    "ValueError",
    "datetime.datetime.now",
    "hasattr",
    "open",
    "pycalphad.io.database.format_registry",
    "pycalphad.io.database.os"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.database.Database.to_string": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "io.StringIO"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.database.DatabaseFormat": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pycalphad.io.database.MemoryStorage": {
  "data": {
   "shadows": "tinydb.storages.MemoryStorage"
  },
  "type": "import"
 },
 "pycalphad.io.database.Phase": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pycalphad.io.database.Phase.__eq__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.database.Phase.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "pycalphad.io.database.Phase.__ne__": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pycalphad.io.database.Phase.__repr__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "pycalphad.io.database.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "pycalphad.io.database.TinyDB": {
  "data": {
   "shadows": "tinydb.TinyDB"
  },
  "type": "import"
 },
 "pycalphad.io.database._to_tuple": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.database.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pycalphad.io.database.format_registry": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pycalphad.io.database.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pycalphad.io.database.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pycalphad.io.tdb": {
  "data": {
   "symbols_in_volume": [
    "pycalphad.Database.register_format",
    "pycalphad.io.tdb._process_parameter",
    "pycalphad.io.tdb._process_phase",
    "pycalphad.io.tdb._process_typedef",
    "pycalphad.io.tdb._setitem_raise_duplicates",
    "pycalphad.io.tdb._unimplemented",
    "pycalphad.io.tdb.ast",
    "pycalphad.io.tdb.read_tdb",
    "pycalphad.io.tdb.write_tdb"
   ]
  },
  "type": "module"
 },
 "pycalphad.io.tdb.And": {
  "data": {
   "shadows": "sympy.And"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.CaselessKeyword": {
  "data": {
   "shadows": "pyparsing.CaselessKeyword"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.CharsNotIn": {
  "data": {
   "shadows": "pyparsing.CharsNotIn"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Complement": {
  "data": {
   "shadows": "sympy.Complement"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Database": {
  "data": {
   "shadows": "pycalphad.Database"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.EmptySet": {
  "data": {
   "shadows": "sympy.EmptySet"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.GreaterThan": {
  "data": {
   "shadows": "sympy.GreaterThan"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Group": {
  "data": {
   "shadows": "pyparsing.Group"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Intersection": {
  "data": {
   "shadows": "sympy.Intersection"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Interval": {
  "data": {
   "shadows": "sympy.Interval"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.LessThan": {
  "data": {
   "shadows": "sympy.LessThan"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.LineEnd": {
  "data": {
   "shadows": "pyparsing.LineEnd"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.MatchFirst": {
  "data": {
   "shadows": "pyparsing.MatchFirst"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Mul": {
  "data": {
   "shadows": "sympy.Mul"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Not": {
  "data": {
   "shadows": "sympy.Not"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.OneOrMore": {
  "data": {
   "shadows": "pyparsing.OneOrMore"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Optional": {
  "data": {
   "shadows": "pyparsing.Optional"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Or": {
  "data": {
   "shadows": "sympy.Or"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.ParseException": {
  "data": {
   "shadows": "pyparsing.ParseException"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Piecewise": {
  "data": {
   "shadows": "sympy.Piecewise"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Pow": {
  "data": {
   "shadows": "sympy.Pow"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Rational": {
  "data": {
   "shadows": "sympy.Rational"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Regex": {
  "data": {
   "shadows": "pyparsing.Regex"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.S": {
  "data": {
   "shadows": "sympy.S"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.SkipTo": {
  "data": {
   "shadows": "pyparsing.SkipTo"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.StrPrinter": {
  "data": {
   "shadows": "sympy.printing.str.StrPrinter"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.StrictGreaterThan": {
  "data": {
   "shadows": "sympy.StrictGreaterThan"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.StrictLessThan": {
  "data": {
   "shadows": "sympy.StrictLessThan"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Suppress": {
  "data": {
   "shadows": "pyparsing.Suppress"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Symbol": {
  "data": {
   "shadows": "sympy.Symbol"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.TCCommand": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "pyparsing.CaselessKeyword"
   ]
  },
  "type": "class"
 },
 "pycalphad.io.tdb.TCCommand.parseImpl": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "min",
    "pycalphad.io.tdb_keywords.expand_keyword",
    "pyparsing.ParseException"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "sympy.printing.str.StrPrinter"
   ]
  },
  "type": "class"
 },
 "pycalphad.io.tdb.TCPrinter._print_Function": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Infinity": {
  "data": {
   "lineno": 473
  },
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Mul": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "len",
    "sympy.Mul.make_args",
    "sympy.Pow",
    "sympy.Rational",
    "sympy.S.Infinity",
    "sympy.S.One",
    "sympy.core.mul._keep_coeff",
    "sympy.printing.precedence.precedence"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Piecewise": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "enumerate",
    "isinstance",
    "len",
    "pycalphad.io.tdb.to_interval",
    "pycalphad.variables.T",
    "sorted",
    "sympy.EmptySet",
    "sympy.Intersection",
    "sympy.Interval",
    "sympy.S.Zero",
    "sympy.S.true",
    "sympy.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Pow": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "sympy.printing.precedence.precedence"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter._print_Symbol": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "isinstance",
    "pycalphad.variables.StateVariable"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb.TCPrinter.blacklisted": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb.TDB_PARAM_TYPES": {
  "data": {
   "shadows": "pycalphad.io.tdb_keywords.TDB_PARAM_TYPES"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Union": {
  "data": {
   "shadows": "sympy.Union"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.White": {
  "data": {
   "shadows": "pyparsing.White"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.Word": {
  "data": {
   "shadows": "pyparsing.Word"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.ZeroOrMore": {
  "data": {
   "shadows": "pyparsing.ZeroOrMore"
  },
  "type": "import"
 },
 "pycalphad.io.tdb._AST_WHITELIST": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pycalphad.io.tdb._TDB_PROCESSOR": {
  "data": {
   "lineno": 321
  },
  "type": "constant"
 },
 "pycalphad.io.tdb.__version__": {
  "data": {
   "shadows": "pycalphad.__version__"
  },
  "type": "import"
 },
 "pycalphad.io.tdb._keep_coeff": {
  "data": {
   "shadows": "sympy.core.mul._keep_coeff"
  },
  "type": "import"
 },
 "pycalphad.io.tdb._make_piecewise_ast": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pycalphad.io.tdb._parse_action",
    "pycalphad.io.tdb._sympify_string",
    "pycalphad.variables.T",
    "sympy.And",
    "sympy.Piecewise"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb._parse_action": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pycalphad.io.tdb.inspect"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb._parse_action.action": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "TypeError",
    "func",
    "len",
    "pycalphad.io.tdb.functools",
    "pycalphad.io.tdb.sys"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb._process_parameter": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb._process_phase": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb._process_typedef": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "pycalphad.io.tdb_keywords.expand_keyword"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb._setitem_raise_duplicates": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb._sympify_string": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "pycalphad.io.tdb._AST_WHITELIST",
    "pycalphad.io.tdb.ast",
    "pycalphad.io.tdb.re",
    "pycalphad.variables.P",
    "pycalphad.variables.R",
    "pycalphad.variables.T",
    "sympy.Symbol",
    "sympy.sympify",
    "type"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb._tdb_grammar": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "float",
    "int",
    "pycalphad.io.tdb.TCCommand",
    "pycalphad.io.tdb._make_piecewise_ast",
    "pycalphad.io.tdb_keywords.TDB_PARAM_TYPES",
    "pyparsing.CharsNotIn",
    "pyparsing.Group",
    "pyparsing.LineEnd",
    "pyparsing.MatchFirst",
    "pyparsing.OneOrMore",
    "pyparsing.Optional",
    "pyparsing.Regex",
    "pyparsing.SkipTo",
    "pyparsing.Suppress",
    "pyparsing.White",
    "pyparsing.Word",
    "pyparsing.ZeroOrMore",
    "pyparsing.alphanums",
    "pyparsing.alphas",
    "pyparsing.delimitedList",
    "pyparsing.nums"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb._unimplemented": {
  "data": {
   "lineno": 310
  },
  "type": "function"
 },
 "pycalphad.io.tdb.alphanums": {
  "data": {
   "shadows": "pyparsing.alphanums"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.alphas": {
  "data": {
   "shadows": "pyparsing.alphas"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.delimitedList": {
  "data": {
   "shadows": "pyparsing.delimitedList"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.expand_keyword": {
  "data": {
   "shadows": "pycalphad.io.tdb_keywords.expand_keyword"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.nums": {
  "data": {
   "shadows": "pyparsing.nums"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.precedence": {
  "data": {
   "shadows": "sympy.printing.precedence.precedence"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.read_tdb": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "len",
    "print",
    "pycalphad.io.tdb._TDB_PROCESSOR",
    "pycalphad.io.tdb._tdb_grammar",
    "pyparsing.ParseException",
    "str"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb.reflow_text": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb.sympify": {
  "data": {
   "shadows": "sympy.sympify"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.to_interval": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "list",
    "sympy.And",
    "sympy.Complement",
    "sympy.GreaterThan",
    "sympy.Intersection",
    "sympy.Interval",
    "sympy.LessThan",
    "sympy.Not",
    "sympy.Or",
    "sympy.S.Infinity",
    "sympy.S.NegativeInfinity",
    "sympy.S.true",
    "sympy.StrictGreaterThan",
    "sympy.StrictLessThan",
    "sympy.Union"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "pycalphad.io.tdb.write_tdb": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "ValueError",
    "collections.defaultdict",
    "collections.namedtuple",
    "isinstance",
    "len",
    "list",
    "paramtuple",
    "pycalphad.__version__",
    "pycalphad.io.tdb.TCPrinter",
    "pycalphad.io.tdb.datetime",
    "pycalphad.io.tdb.getpass",
    "pycalphad.io.tdb.itertools",
    "pycalphad.io.tdb.reflow_text",
    "pycalphad.variables.T",
    "range",
    "set",
    "sorted",
    "str",
    "sum",
    "sympy.And",
    "sympy.Piecewise",
    "tuple",
    "write_parameter"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb.write_tdb.write_parameter": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "isinstance",
    "pycalphad.io.tdb.TCPrinter",
    "pycalphad.variables.T",
    "sorted",
    "sympy.And",
    "sympy.Piecewise"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb_keywords": {
  "data": {
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "module"
 },
 "pycalphad.io.tdb_keywords.TDB_COMMANDS": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pycalphad.io.tdb_keywords.TDB_KEYWORDS": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pycalphad.io.tdb_keywords.TDB_PARAM_TYPES": {
  "data": {
   "lineno": 69
  },
  "type": "constant"
 },
 "pycalphad.io.tdb_keywords.TDB_PHASE_DESCRIPTIONS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "pycalphad.io.tdb_keywords.expand_keyword": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pycalphad.io.tdb_keywords.re"
   ]
  },
  "type": "function"
 },
 "pycalphad.io.tdb_keywords.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pycalphad.log": {
  "data": {
   "symbols_in_volume": [
    "pycalphad.log._f",
    "pycalphad.log._h",
    "pycalphad.log.fmt",
    "pycalphad.log.logger",
    "pycalphad.log.logging"
   ]
  },
  "type": "module"
 },
 "pycalphad.log._f": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pycalphad.log._h": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "pycalphad.log.debug_mode": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pycalphad.log.logger",
    "pycalphad.log.logging"
   ]
  },
  "type": "function"
 },
 "pycalphad.log.fmt": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "pycalphad.log.logger": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "pycalphad.log.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "pycalphad.model": {
  "data": {},
  "type": "module"
 },
 "pycalphad.model.Abs": {
  "data": {
   "shadows": "sympy.Abs"
  },
  "type": "import"
 },
 "pycalphad.model.Add": {
  "data": {
   "shadows": "sympy.Add"
  },
  "type": "import"
 },
 "pycalphad.model.DofError": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pycalphad.model.MIN_SITE_FRACTION": {
  "data": {
   "shadows": "pycalphad.core.constants.MIN_SITE_FRACTION"
  },
  "type": "import"
 },
 "pycalphad.model.Model": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object",
    "property",
    "pycalphad.variables.T",
    "sympy.S.Zero"
   ]
  },
  "type": "class"
 },
 "pycalphad.model.Model._Muggianu_correction_dict": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "len",
    "staticmethod",
    "sympy.Add",
    "sympy.S.One"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.__eq__": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.__hash__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "hash",
    "repr"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "dict",
    "len",
    "pycalphad.log.logger.debug",
    "pycalphad.model.DofError",
    "pycalphad.variables.SiteFraction",
    "set",
    "sorted",
    "str",
    "sympy.Symbol"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.__ne__": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "pycalphad.model.Model._array_validity": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model._interaction_test": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model._purity_test": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model._site_ratio_normalization": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "enumerate",
    "pycalphad.variables.SiteFraction",
    "set",
    "sympy.S.Zero"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.ast": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "list",
    "property",
    "sympy.Add"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.atomic_ordering_energy": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "len",
    "list",
    "pycalphad.variables.SiteFraction",
    "set",
    "sorted",
    "sympy.Add",
    "sympy.S.Zero"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.build_phase": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "getattr",
    "len",
    "list",
    "sympy.S"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.degree_of_ordering": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "property",
    "pycalphad.variables.SiteFraction",
    "set",
    "sorted",
    "sympy.Abs",
    "sympy.S.Zero"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.einstein_energy": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "param_search",
    "pycalphad.variables.R",
    "pycalphad.variables.T",
    "sympy.exp",
    "sympy.log",
    "tinydb.where"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.excess_mixing_energy": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "param_search",
    "tinydb.where"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.ideal_mixing_energy": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pycalphad.core.constants.MIN_SITE_FRACTION",
    "pycalphad.variables.R",
    "pycalphad.variables.SiteFraction",
    "pycalphad.variables.T",
    "set",
    "sympy.Piecewise",
    "sympy.S.Zero",
    "sympy.log"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.magnetic_energy": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "param_search",
    "pycalphad.variables.R",
    "pycalphad.variables.T",
    "sympy.Piecewise",
    "sympy.S.Zero",
    "sympy.log",
    "tinydb.where"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.mole_fraction": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "len",
    "list",
    "pycalphad.variables.SiteFraction",
    "staticmethod",
    "str",
    "sympy.S.Zero"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.redlich_kister_sum": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "param_search",
    "pycalphad.model.copy",
    "pycalphad.variables.SiteFraction",
    "set",
    "sympy.Add",
    "sympy.Mul",
    "sympy.Pow",
    "sympy.S.One",
    "tinydb.where"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.reference_energy": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "param_search",
    "tinydb.where"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.standard_mole_fraction": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "enumerate",
    "pycalphad.variables.SiteFraction",
    "set",
    "sympy.S.Zero"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.symbol_replace": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "AttributeError",
    "len",
    "pycalphad.model._MAX_PARAM_NESTING",
    "pycalphad.variables.StateVariable",
    "range",
    "staticmethod",
    "sympy.Symbol"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.twostate_energy": {
  "data": {
   "lineno": 608,
   "symbols_in_volume": [
    "param_search",
    "pycalphad.variables.R",
    "pycalphad.variables.T",
    "sympy.S.Zero",
    "sympy.exp",
    "sympy.log",
    "tinydb.where"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.variables": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "property",
    "pycalphad.variables.StateVariable",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Model.xiong_magnetic_energy": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "ValueError",
    "param_search",
    "pycalphad.variables.R",
    "pycalphad.variables.T",
    "sympy.Piecewise",
    "sympy.S.Zero",
    "sympy.log",
    "sympy.zoo",
    "tinydb.where"
   ]
  },
  "type": "function"
 },
 "pycalphad.model.Mul": {
  "data": {
   "shadows": "sympy.Mul"
  },
  "type": "import"
 },
 "pycalphad.model.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pycalphad.model.Piecewise": {
  "data": {
   "shadows": "sympy.Piecewise"
  },
  "type": "import"
 },
 "pycalphad.model.Pow": {
  "data": {
   "shadows": "sympy.Pow"
  },
  "type": "import"
 },
 "pycalphad.model.S": {
  "data": {
   "shadows": "sympy.S"
  },
  "type": "import"
 },
 "pycalphad.model.Symbol": {
  "data": {
   "shadows": "sympy.Symbol"
  },
  "type": "import"
 },
 "pycalphad.model.TestModel": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "pycalphad.model.Model"
   ]
  },
  "type": "class"
 },
 "pycalphad.model.TestModel.__init__": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "len",
    "list",
    "numpy.float",
    "numpy.int",
    "numpy.ones",
    "numpy.ones_like",
    "numpy.random.dirichlet",
    "pycalphad.variables.SiteFraction",
    "range",
    "set",
    "sorted",
    "sympy.Add",
    "sympy.sin",
    "zip"
   ]
  },
  "type": "function"
 },
 "pycalphad.model._MAX_PARAM_NESTING": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pycalphad.model.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "pycalphad.model.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pycalphad.model.exp": {
  "data": {
   "shadows": "sympy.exp"
  },
  "type": "import"
 },
 "pycalphad.model.log": {
  "data": {
   "shadows": "sympy.log"
  },
  "type": "import"
 },
 "pycalphad.model.logger": {
  "data": {
   "shadows": "pycalphad.log.logger"
  },
  "type": "import"
 },
 "pycalphad.model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycalphad.model.oo": {
  "data": {
   "shadows": "sympy.oo"
  },
  "type": "import"
 },
 "pycalphad.model.sin": {
  "data": {
   "shadows": "sympy.sin"
  },
  "type": "import"
 },
 "pycalphad.model.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "pycalphad.model.where": {
  "data": {
   "shadows": "tinydb.where"
  },
  "type": "import"
 },
 "pycalphad.model.zoo": {
  "data": {
   "shadows": "sympy.zoo"
  },
  "type": "import"
 },
 "pycalphad.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pycalphad.plot": {
  "data": {},
  "type": "module"
 },
 "pycalphad.plot.binary": {
  "data": {},
  "type": "module"
 },
 "pycalphad.plot.binary.binplot": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "len",
    "numpy.atleast_1d",
    "pycalphad.equilibrium",
    "pycalphad.plot.eqplot.eqplot",
    "pycalphad.variables.Composition",
    "pycalphad.variables.P",
    "pycalphad.variables.T"
   ]
  },
  "type": "function"
 },
 "pycalphad.plot.binary.eqplot": {
  "data": {
   "shadows": "pycalphad.plot.eqplot.eqplot"
  },
  "type": "import"
 },
 "pycalphad.plot.binary.equilibrium": {
  "data": {
   "shadows": "pycalphad.equilibrium"
  },
  "type": "import"
 },
 "pycalphad.plot.binary.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycalphad.plot.binary.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "pycalphad.plot.eqplot": {
  "data": {
   "symbols_in_volume": [
    "pycalphad.variables.P",
    "pycalphad.variables.T"
   ]
  },
  "type": "module"
 },
 "pycalphad.plot.eqplot.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pycalphad.plot.eqplot._map_coord_to_variable": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pycalphad.variables.P",
    "pycalphad.variables.T",
    "pycalphad.variables.X"
   ]
  },
  "type": "function"
 },
 "pycalphad.plot.eqplot._plot_labels": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pycalphad.plot.eqplot.eqplot": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "NotImplementedError",
    "ValueError",
    "collections.OrderedDict",
    "isinstance",
    "len",
    "list",
    "map",
    "matplotlib.collections.LineCollection",
    "matplotlib.patches.Patch",
    "matplotlib.pyplot.gca",
    "numpy.array",
    "numpy.asarray",
    "numpy.concatenate",
    "numpy.int",
    "numpy.max",
    "numpy.min",
    "numpy.mod",
    "numpy.newaxis",
    "numpy.nonzero",
    "numpy.rollaxis",
    "numpy.sum",
    "numpy.take",
    "pycalphad.core.utils.unpack_condition",
    "pycalphad.plot.eqplot._map_coord_to_variable",
    "pycalphad.plot.eqplot._plot_labels",
    "pycalphad.variables.Composition",
    "pycalphad.variables.P",
    "pycalphad.variables.T",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "pycalphad.plot.eqplot.mc": {
  "data": {
   "shadows": "matplotlib.collections"
  },
  "type": "import"
 },
 "pycalphad.plot.eqplot.mpatches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "pycalphad.plot.eqplot.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycalphad.plot.eqplot.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "pycalphad.plot.eqplot.unpack_condition": {
  "data": {
   "shadows": "pycalphad.core.utils.unpack_condition"
  },
  "type": "import"
 },
 "pycalphad.plot.eqplot.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "pycalphad.plot.utils": {
  "data": {},
  "type": "module"
 },
 "pycalphad.plot.utils.mpatches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "pycalphad.plot.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pycalphad.plot.utils.phase_legend": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "len",
    "matplotlib.patches.Patch",
    "numpy.mod"
   ]
  },
  "type": "function"
 },
 "pycalphad.pycalphad.io.tdb": {
  "data": {
   "shadows": "pycalphad.io.tdb"
  },
  "type": "import"
 },
 "pycalphad.refdata": {
  "data": {
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pycalphad.variables.T",
    "sympy.And",
    "sympy.Piecewise",
    "sympy.Symbol",
    "sympy.log"
   ]
  },
  "type": "module"
 },
 "pycalphad.refdata.And": {
  "data": {
   "shadows": "sympy.And"
  },
  "type": "import"
 },
 "pycalphad.refdata.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pycalphad.refdata.Piecewise": {
  "data": {
   "shadows": "sympy.Piecewise"
  },
  "type": "import"
 },
 "pycalphad.refdata.SGTE91": {
  "data": {
   "lineno": 181
  },
  "type": "constant"
 },
 "pycalphad.refdata.SGTE91Stable": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "pycalphad.refdata.Symbol": {
  "data": {
   "shadows": "sympy.Symbol"
  },
  "type": "import"
 },
 "pycalphad.refdata.T": {
  "data": {
   "shadows": "pycalphad.variables.T"
  },
  "type": "import"
 },
 "pycalphad.refdata.log": {
  "data": {
   "shadows": "sympy.log"
  },
  "type": "import"
 },
 "pycalphad.v": {
  "data": {
   "shadows": "pycalphad.variables"
  },
  "type": "import"
 },
 "pycalphad.variables": {
  "data": {
   "symbols_in_volume": [
    "pycalphad.variables.ChemicalPotential",
    "pycalphad.variables.Composition",
    "pycalphad.variables.SiteFraction",
    "pycalphad.variables.StateVariable",
    "sympy.Float"
   ]
  },
  "type": "module"
 },
 "pycalphad.variables.ChemicalPotential": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pycalphad.variables.StateVariable"
   ]
  },
  "type": "class"
 },
 "pycalphad.variables.ChemicalPotential.__getnewargs__": {
  "data": {
   "lineno": 120
  },
  "type": "function"
 },
 "pycalphad.variables.ChemicalPotential.__new__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pycalphad.variables.StateVariable"
   ]
  },
  "type": "function"
 },
 "pycalphad.variables.ChemicalPotential.__str__": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "pycalphad.variables.ChemicalPotential._latex": {
  "data": {
   "lineno": 123
  },
  "type": "function"
 },
 "pycalphad.variables.Composition": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pycalphad.variables.StateVariable"
   ]
  },
  "type": "class"
 },
 "pycalphad.variables.Composition.__getnewargs__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "pycalphad.variables.Composition.__new__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pycalphad.variables.StateVariable"
   ]
  },
  "type": "function"
 },
 "pycalphad.variables.Composition._latex": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "pycalphad.variables.Float": {
  "data": {
   "shadows": "sympy.Float"
  },
  "type": "import"
 },
 "pycalphad.variables.MU": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "pycalphad.variables.PhaseFraction": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pycalphad.variables.StateVariable"
   ]
  },
  "type": "class"
 },
 "pycalphad.variables.PhaseFraction.__getnewargs__": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "pycalphad.variables.PhaseFraction.__new__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pycalphad.variables.StateVariable",
    "str"
   ]
  },
  "type": "function"
 },
 "pycalphad.variables.PhaseFraction._latex": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pycalphad.variables.SiteFraction": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "pycalphad.variables.StateVariable"
   ]
  },
  "type": "class"
 },
 "pycalphad.variables.SiteFraction.__getnewargs__": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "pycalphad.variables.SiteFraction.__new__": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "pycalphad.variables.StateVariable",
    "str"
   ]
  },
  "type": "function"
 },
 "pycalphad.variables.SiteFraction.__str__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "pycalphad.variables.SiteFraction._latex": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "pycalphad.variables.StateVariable": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "sympy.Symbol"
   ]
  },
  "type": "class"
 },
 "pycalphad.variables.StateVariable.__new__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "sympy.Symbol.__new__"
   ]
  },
  "type": "function"
 },
 "pycalphad.variables.Symbol": {
  "data": {
   "shadows": "sympy.Symbol"
  },
  "type": "import"
 },
 "pycalphad.variables.X": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 }
}