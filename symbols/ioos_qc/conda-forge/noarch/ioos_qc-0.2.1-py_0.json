{
 "ioos_qc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ioos_qc.config": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger"
  ],
  "type": "module"
 },
 "ioos_qc.config.NcQcConfig": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ioos_qc.config.NcQcConfig.__init__": {
  "lineno": 79,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "ioos_qc.utils.dict_update",
   "pathlib.Path",
   "ruamel.yaml.Loader",
   "ruamel.yaml.load",
   "simplejson.loads",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "ioos_qc.config.NcQcConfig.run": {
  "lineno": 127,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "ioos_qc.utils.dict_update",
   "xarray.open_dataset"
  ],
  "type": "function"
 },
 "ioos_qc.config.NcQcConfig.save_to_netcdf": {
  "lineno": 148,
  "symbols_in_volume": [
   "importlib.import_module",
   "ioos_qc.utils.GeoNumpyDateEncoder",
   "ioos_qc.utils.cf_safe_name",
   "netCDF4.Dataset",
   "numpy.byte",
   "pathlib.Path",
   "simplejson.dumps"
  ],
  "type": "function"
 },
 "ioos_qc.config.QcConfig": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ioos_qc.config.QcConfig.__init__": {
  "lineno": 23,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pathlib.Path",
   "ruamel.yaml.Loader",
   "ruamel.yaml.load"
  ],
  "type": "function"
 },
 "ioos_qc.config.QcConfig.__str__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ioos_qc.config.QcConfig.run": {
  "lineno": 39,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "copy.deepcopy",
   "importlib.import_module",
   "inspect.signature"
  ],
  "type": "function"
 },
 "ioos_qc.gliders": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "ioos_qc.gliders.pressure_check": {
  "lineno": 7,
  "symbols_in_volume": [
   "ioos_qc.qartod.QartodFlags.GOOD",
   "ioos_qc.qartod.QartodFlags.SUSPECT",
   "numpy.diff",
   "numpy.mean",
   "numpy.ones_like",
   "numpy.sign",
   "numpy.where"
  ],
  "type": "function"
 },
 "ioos_qc.qartod": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "logging.getLogger",
   "numbers.Real"
  ],
  "type": "module"
 },
 "ioos_qc.qartod.ClimatologyConfig": {
  "lineno": 208,
  "symbols_in_volume": [
   "collections.namedtuple"
  ],
  "type": "class"
 },
 "ioos_qc.qartod.ClimatologyConfig.__init__": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ioos_qc.qartod.ClimatologyConfig.add": {
  "lineno": 237,
  "symbols_in_volume": [
   "ioos_qc.utils.isfixedlength",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "ioos_qc.qartod.ClimatologyConfig.members": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "function"
 },
 "ioos_qc.qartod.ClimatologyConfig.values": {
  "lineno": 224,
  "symbols_in_volume": [
   "ioos_qc.utils.isnan"
  ],
  "type": "function"
 },
 "ioos_qc.qartod.QartodFlags": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "ioos_qc.qartod.attenuated_signal_test": {
  "lineno": 501,
  "symbols_in_volume": [
   "ioos_qc.utils.isfixedlength",
   "numpy.array",
   "numpy.floating",
   "numpy.ma.MaskedArray",
   "numpy.ma.masked_invalid",
   "numpy.ma.ones",
   "numpy.ptp",
   "numpy.std",
   "typing.Sequence",
   "typing.Tuple",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "ioos_qc.qartod.climatology_test": {
  "lineno": 262,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.errstate",
   "numpy.floating",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.masked_invalid",
   "numpy.ma.ones",
   "typing.Dict",
   "typing.Sequence",
   "typing.Tuple",
   "typing.Union",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "ioos_qc.qartod.flat_line_test": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.diff",
   "numpy.floating",
   "numpy.full",
   "numpy.ma.MaskedArray",
   "numpy.ma.masked_invalid",
   "numpy.median",
   "typing.Sequence",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "ioos_qc.qartod.flat_line_test.rolling_window": {
  "lineno": 465,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.lib.stride_tricks.as_strided",
   "numpy.ma.MaskedArray",
   "numpy.ma.masked_invalid"
  ],
  "type": "function"
 },
 "ioos_qc.qartod.flat_line_test.run_test": {
  "lineno": 476,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.full",
   "numpy.insert",
   "numpy.ma.filled",
   "numpy.max",
   "numpy.min"
  ],
  "type": "function"
 },
 "ioos_qc.qartod.gross_range_test": {
  "lineno": 157,
  "symbols_in_volume": [
   "ioos_qc.utils.isfixedlength",
   "numpy.array",
   "numpy.errstate",
   "numpy.floating",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.masked_invalid",
   "numpy.ma.ones",
   "typing.Sequence",
   "typing.Tuple",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "ioos_qc.qartod.location_test": {
  "lineno": 80,
  "symbols_in_volume": [
   "collections.namedtuple",
   "ioos_qc.utils.isfixedlength",
   "numpy.array",
   "numpy.errstate",
   "numpy.float64",
   "numpy.floating",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.masked_invalid",
   "numpy.ma.ones",
   "numpy.ma.zeros",
   "pygc.great_distance",
   "typing.Sequence",
   "typing.Tuple",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "ioos_qc.qartod.mapdates": {
  "lineno": 39,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.datetime64",
   "numpy.issubdtype"
  ],
  "type": "function"
 },
 "ioos_qc.qartod.qartod_compare": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.ma.MaskedArray",
   "numpy.ma.empty",
   "numpy.where",
   "typing.Sequence"
  ],
  "type": "function"
 },
 "ioos_qc.qartod.rate_of_change_test": {
  "lineno": 378,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.diff",
   "numpy.errstate",
   "numpy.floating",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.masked_invalid",
   "numpy.ma.ones",
   "numpy.ma.zeros",
   "typing.Sequence",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "ioos_qc.qartod.spike_test": {
  "lineno": 322,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.array",
   "numpy.errstate",
   "numpy.float64",
   "numpy.floating",
   "numpy.ma.core.MaskedArray",
   "numpy.ma.masked_invalid",
   "numpy.ma.ones",
   "numpy.zeros",
   "typing.Sequence",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "ioos_qc.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.getLogger",
   "numbers.Real"
  ],
  "type": "module"
 },
 "ioos_qc.utils.GeoNumpyDateEncoder": {
  "lineno": 99,
  "symbols_in_volume": [
   "geojson.GeoJSONEncoder"
  ],
  "type": "class"
 },
 "ioos_qc.utils.GeoNumpyDateEncoder.default": {
  "lineno": 101,
  "symbols_in_volume": [
   "datetime.date",
   "datetime.datetime",
   "geojson.factory.GeoJSON.to_instance",
   "numpy.asscalar",
   "numpy.generic",
   "numpy.isnan",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "ioos_qc.utils.cf_safe_name": {
  "lineno": 88,
  "symbols_in_volume": [
   "re.match",
   "re.sub"
  ],
  "type": "function"
 },
 "ioos_qc.utils.check_timestamps": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array",
   "numpy.array_equal",
   "numpy.diff",
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "ioos_qc.utils.dict_update": {
  "lineno": 73,
  "symbols_in_volume": [
   "collections.Mapping"
  ],
  "type": "function"
 },
 "ioos_qc.utils.isfixedlength": {
  "lineno": 15,
  "symbols_in_volume": [
   "typing.Union"
  ],
  "type": "function"
 },
 "ioos_qc.utils.isnan": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.ma.masked",
   "numpy.nan"
  ],
  "type": "function"
 },
 "tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_config": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.StreamHandler",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "tests.test_config.ConfigClimatologyFromFileTest": {
  "lineno": 255,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_config.ConfigClimatologyFromFileTest.setUp": {
  "lineno": 257,
  "symbols_in_volume": [
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigClimatologyFromFileTest.tearDown": {
  "lineno": 289,
  "symbols_in_volume": [
   "os.close",
   "os.remove"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigClimatologyFromFileTest.test_climatology_config_test": {
  "lineno": 293,
  "symbols_in_volume": [
   "ioos_qc.config.QcConfig",
   "numpy.datetime64",
   "numpy.ma.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigClimatologyFromFileTest.test_climatology_test_depths": {
  "lineno": 313,
  "symbols_in_volume": [
   "ioos_qc.config.QcConfig",
   "numpy.datetime64",
   "numpy.ma.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigClimatologyTest": {
  "lineno": 159,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_config.ConfigClimatologyTest.setUp": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigClimatologyTest.test_climatology_config_test": {
  "lineno": 194,
  "symbols_in_volume": [
   "ioos_qc.config.QcConfig",
   "numpy.datetime64",
   "numpy.ma.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigClimatologyTest.test_climatology_test_depths": {
  "lineno": 214,
  "symbols_in_volume": [
   "ioos_qc.config.QcConfig",
   "numpy.datetime64",
   "numpy.ma.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigLoadTest": {
  "lineno": 25,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_config.ConfigLoadTest.setUp": {
  "lineno": 27,
  "symbols_in_volume": [
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigLoadTest.tearDown": {
  "lineno": 54,
  "symbols_in_volume": [
   "os.close",
   "os.remove"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigLoadTest.test_load_file_path": {
  "lineno": 64,
  "symbols_in_volume": [
   "ioos_qc.config.QcConfig"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigLoadTest.test_load_path_object": {
  "lineno": 68,
  "symbols_in_volume": [
   "ioos_qc.config.QcConfig",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigLoadTest.test_load_yaml_dict_object": {
  "lineno": 58,
  "symbols_in_volume": [
   "ioos_qc.config.QcConfig",
   "ruamel.yaml.Loader",
   "ruamel.yaml.load"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigRunTest": {
  "lineno": 73,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_config.ConfigRunTest.setUp": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_config.ConfigRunTest.test_different_kwargs_run": {
  "lineno": 97,
  "symbols_in_volume": [
   "copy.deepcopy",
   "ioos_qc.config.QcConfig",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigRunTest.test_run": {
  "lineno": 85,
  "symbols_in_volume": [
   "ioos_qc.config.QcConfig",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigRunTest.test_with_empty_config": {
  "lineno": 148,
  "symbols_in_volume": [
   "ioos_qc.config.QcConfig"
  ],
  "type": "function"
 },
 "tests.test_config.ConfigRunTest.test_with_values_in_config": {
  "lineno": 124,
  "symbols_in_volume": [
   "copy.deepcopy",
   "ioos_qc.config.QcConfig",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_config.TestLoadNcConfigFromFile": {
  "lineno": 433,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_config.TestLoadNcConfigFromFile.setUp": {
  "lineno": 435,
  "symbols_in_volume": [
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "tests.test_config.TestLoadNcConfigFromFile.tearDown": {
  "lineno": 465,
  "symbols_in_volume": [
   "os.close",
   "os.remove"
  ],
  "type": "function"
 },
 "tests.test_config.TestLoadNcConfigFromFile.test_load_file_path": {
  "lineno": 475,
  "symbols_in_volume": [
   "ioos_qc.config.NcQcConfig"
  ],
  "type": "function"
 },
 "tests.test_config.TestLoadNcConfigFromFile.test_load_path_object": {
  "lineno": 479,
  "symbols_in_volume": [
   "ioos_qc.config.NcQcConfig",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "tests.test_config.TestLoadNcConfigFromFile.test_load_yaml_dict_object": {
  "lineno": 469,
  "symbols_in_volume": [
   "ioos_qc.config.NcQcConfig",
   "ruamel.yaml.Loader",
   "ruamel.yaml.load"
  ],
  "type": "function"
 },
 "tests.test_config.TestReadNcConfig": {
  "lineno": 354,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_config.TestReadNcConfig.setUp": {
  "lineno": 356,
  "symbols_in_volume": [
   "netCDF4.Dataset",
   "numpy.array",
   "simplejson.dumps",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "tests.test_config.TestReadNcConfig.tearDown": {
  "lineno": 376,
  "symbols_in_volume": [
   "os.close",
   "os.remove"
  ],
  "type": "function"
 },
 "tests.test_config.TestReadNcConfig.test_comparing_nc_and_qc_from_dict": {
  "lineno": 411,
  "symbols_in_volume": [
   "ioos_qc.config.NcQcConfig",
   "ioos_qc.config.QcConfig",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_config.TestReadNcConfig.test_comparing_nc_and_qc_from_nc": {
  "lineno": 396,
  "symbols_in_volume": [
   "ioos_qc.config.NcQcConfig",
   "ioos_qc.config.QcConfig",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_config.TestReadNcConfig.test_loading_dict": {
  "lineno": 385,
  "symbols_in_volume": [
   "ioos_qc.config.NcQcConfig"
  ],
  "type": "function"
 },
 "tests.test_config.TestReadNcConfig.test_loading_netcdf": {
  "lineno": 380,
  "symbols_in_volume": [
   "ioos_qc.config.NcQcConfig"
  ],
  "type": "function"
 },
 "tests.test_config.TestRunNcConfig": {
  "lineno": 484,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_config.TestRunNcConfig.setUp": {
  "lineno": 486,
  "symbols_in_volume": [
   "netCDF4.Dataset",
   "simplejson.dumps",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "tests.test_config.TestRunNcConfig.test_running_save_nc": {
  "lineno": 506,
  "symbols_in_volume": [
   "ioos_qc.config.NcQcConfig",
   "netCDF4.Dataset",
   "numpy.testing.assert_array_equal",
   "simplejson.dumps"
  ],
  "type": "function"
 },
 "tests.test_config.TestRunNcConfigClimatology": {
  "lineno": 536,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_config.TestRunNcConfigClimatology.setUp": {
  "lineno": 538,
  "symbols_in_volume": [
   "ioos_qc.utils.GeoNumpyDateEncoder",
   "netCDF4.Dataset",
   "numpy.datetime64",
   "simplejson.dumps",
   "tempfile.mkstemp"
  ],
  "type": "function"
 },
 "tests.test_config.TestRunNcConfigClimatology.tearDown": {
  "lineno": 646,
  "symbols_in_volume": [
   "os.close",
   "os.remove"
  ],
  "type": "function"
 },
 "tests.test_config.TestRunNcConfigClimatology.test_load_climatology_from_netcdf": {
  "lineno": 650,
  "symbols_in_volume": [
   "ioos_qc.config.NcQcConfig",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_config.TestRunNcConfigClimatology.test_running_climatology_save_netcdf": {
  "lineno": 671,
  "symbols_in_volume": [
   "ioos_qc.config.NcQcConfig",
   "ioos_qc.utils.GeoNumpyDateEncoder",
   "netCDF4.Dataset",
   "numpy.testing.assert_array_equal",
   "simplejson.dumps"
  ],
  "type": "function"
 },
 "tests.test_gliders": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_gliders.TestGliderChecks": {
  "lineno": 12,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_gliders.TestGliderChecks.test_pressure_downcast": {
  "lineno": 14,
  "symbols_in_volume": [
   "ioos_qc.gliders.pressure_check",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_gliders.TestGliderChecks.test_pressure_shallow": {
  "lineno": 27,
  "symbols_in_volume": [
   "ioos_qc.gliders.pressure_check",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_gliders.TestGliderChecks.test_pressure_upcast": {
  "lineno": 20,
  "symbols_in_volume": [
   "ioos_qc.gliders.pressure_check",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_gliders.TestGliderChecks.test_using_config": {
  "lineno": 33,
  "symbols_in_volume": [
   "ioos_qc.config.QcConfig",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod": {
  "lineno": null,
  "symbols_in_volume": [
   "logging.INFO",
   "logging.StreamHandler",
   "logging.getLogger"
  ],
  "type": "module"
 },
 "tests.test_qartod.QartodAttenuatedSignalTest": {
  "lineno": 760,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_qartod.QartodAttenuatedSignalTest.test_attenuated_signal": {
  "lineno": 762,
  "symbols_in_volume": [
   "ioos_qc.qartod.attenuated_signal_test",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodAttenuatedSignalTest.test_attenuated_signal_missing": {
  "lineno": 835,
  "symbols_in_volume": [
   "ioos_qc.qartod.attenuated_signal_test",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodAttenuatedSignalTest.test_attenuated_signal_range": {
  "lineno": 810,
  "symbols_in_volume": [
   "ioos_qc.qartod.attenuated_signal_test",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodClimatologyTest": {
  "lineno": 263,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_qartod.QartodClimatologyTest.setUp": {
  "lineno": 265,
  "symbols_in_volume": [
   "ioos_qc.qartod.ClimatologyConfig",
   "numpy.datetime64"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodClimatologyTest.test_climatology_test": {
  "lineno": 290,
  "symbols_in_volume": [
   "ioos_qc.qartod.climatology_test",
   "numpy.asarray",
   "numpy.datetime64",
   "numpy.floating",
   "numpy.ma.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodClimatologyTest.test_climatology_test_depths": {
  "lineno": 355,
  "symbols_in_volume": [
   "ioos_qc.qartod.climatology_test",
   "numpy.asarray",
   "numpy.datetime64",
   "numpy.floating",
   "numpy.ma.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodClimatologyTest.test_climatology_test_fail": {
  "lineno": 318,
  "symbols_in_volume": [
   "ioos_qc.qartod.climatology_test",
   "numpy.asarray",
   "numpy.datetime64",
   "numpy.floating",
   "numpy.ma.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLinePerformanceTest": {
  "lineno": 722,
  "symbols_in_volume": [
   "unittest.TestCase",
   "unittest.skip"
  ],
  "type": "class"
 },
 "tests.test_qartod.QartodFlatLinePerformanceTest.perf_test": {
  "lineno": 736,
  "symbols_in_volume": [
   "time.time"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLinePerformanceTest.setUp": {
  "lineno": 725,
  "symbols_in_volume": [
   "pandas.read_csv"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLinePerformanceTest.test_flat_line": {
  "lineno": 756,
  "symbols_in_volume": [
   "ioos_qc.qartod.flat_line_test"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLineTest": {
  "lineno": 564,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_qartod.QartodFlatLineTest.setUp": {
  "lineno": 566,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.datetime64",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLineTest.test_flat_line": {
  "lineno": 574,
  "symbols_in_volume": [
   "ioos_qc.qartod.flat_line_test",
   "numpy.array",
   "numpy.asarray",
   "numpy.floating",
   "numpy.ones_like",
   "numpy.random.random",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLineTest.test_flat_line_missing_values": {
  "lineno": 701,
  "symbols_in_volume": [
   "ioos_qc.qartod.flat_line_test",
   "numpy.asarray",
   "numpy.floating",
   "numpy.ma.masked",
   "numpy.testing.assert_array_equal",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLineTest.test_flat_line_short_timeseries": {
  "lineno": 665,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLineTest.test_flat_line_short_timeseries.check": {
  "lineno": 667,
  "symbols_in_volume": [
   "ioos_qc.qartod.flat_line_test",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLineTest.test_flat_line_starting_from_beginning": {
  "lineno": 645,
  "symbols_in_volume": [
   "ioos_qc.qartod.flat_line_test",
   "numpy.asarray",
   "numpy.floating",
   "numpy.testing.assert_array_equal",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLineTest.test_flat_line_with_spike": {
  "lineno": 685,
  "symbols_in_volume": [
   "ioos_qc.qartod.flat_line_test",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodGrossRangeTest": {
  "lineno": 157,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_qartod.QartodGrossRangeTest.test_gross_range_bad_input": {
  "lineno": 198,
  "symbols_in_volume": [
   "ioos_qc.qartod.gross_range_test",
   "numpy.array"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodGrossRangeTest.test_gross_range_check": {
  "lineno": 159,
  "symbols_in_volume": [
   "ioos_qc.qartod.gross_range_test",
   "numpy.array",
   "numpy.floating",
   "numpy.integer",
   "numpy.ma.array",
   "numpy.testing.assert_array_equal",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodGrossRangeTest.test_gross_range_check_masked": {
  "lineno": 220,
  "symbols_in_volume": [
   "ioos_qc.qartod.gross_range_test",
   "numpy.array",
   "numpy.floating",
   "numpy.ma.array",
   "numpy.ma.masked",
   "numpy.nan",
   "numpy.testing.assert_array_equal",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodLocationTest": {
  "lineno": 27,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_qartod.QartodLocationTest.test_location": {
  "lineno": 29,
  "symbols_in_volume": [
   "ioos_qc.qartod.location_test",
   "numpy.NaN",
   "numpy.array",
   "numpy.ma.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodLocationTest.test_location_bad_input": {
  "lineno": 101,
  "symbols_in_volume": [
   "ioos_qc.qartod.location_test"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodLocationTest.test_location_bbox": {
  "lineno": 118,
  "symbols_in_volume": [
   "ioos_qc.qartod.location_test",
   "numpy.asarray",
   "numpy.floating",
   "numpy.ma.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodLocationTest.test_location_distance_threshold": {
  "lineno": 140,
  "symbols_in_volume": [
   "ioos_qc.qartod.location_test",
   "numpy.array",
   "numpy.ma.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodLocationTest.test_single_location_nan": {
  "lineno": 78,
  "symbols_in_volume": [
   "ioos_qc.qartod.location_test",
   "numpy.array",
   "numpy.ma.array",
   "numpy.nan",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodLocationTest.test_single_location_none": {
  "lineno": 55,
  "symbols_in_volume": [
   "ioos_qc.qartod.location_test",
   "numpy.array",
   "numpy.ma.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodRateOfChangeTest": {
  "lineno": 517,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_qartod.QartodRateOfChangeTest.setUp": {
  "lineno": 519,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.datetime64",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodRateOfChangeTest.test_rate_of_change": {
  "lineno": 524,
  "symbols_in_volume": [
   "ioos_qc.qartod.rate_of_change_test",
   "numpy.asarray",
   "numpy.floating",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodRateOfChangeTest.test_rate_of_change_missing_values": {
  "lineno": 541,
  "symbols_in_volume": [
   "ioos_qc.qartod.rate_of_change_test",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodRateOfChangeTest.test_rate_of_change_negative_values": {
  "lineno": 552,
  "symbols_in_volume": [
   "ioos_qc.qartod.rate_of_change_test",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodSpikeTest": {
  "lineno": 403,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_qartod.QartodSpikeTest.setUp": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_qartod.QartodSpikeTest.test_spike": {
  "lineno": 409,
  "symbols_in_volume": [
   "ioos_qc.qartod.spike_test",
   "numpy.asarray",
   "numpy.floating",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodSpikeTest.test_spike_masked": {
  "lineno": 462,
  "symbols_in_volume": [
   "ioos_qc.qartod.spike_test",
   "numpy.asarray",
   "numpy.floating",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodSpikeTest.test_spike_negative_vals": {
  "lineno": 435,
  "symbols_in_volume": [
   "ioos_qc.qartod.spike_test",
   "numpy.asarray",
   "numpy.floating",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodSpikeTest.test_spike_realdata": {
  "lineno": 488,
  "symbols_in_volume": [
   "ioos_qc.qartod.spike_test",
   "numpy.asarray",
   "numpy.floating",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.QartodUtilsTests": {
  "lineno": 871,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_qartod.QartodUtilsTests.test_qartod_compare": {
  "lineno": 873,
  "symbols_in_volume": [
   "ioos_qc.qartod.qartod_compare",
   "numpy.array",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "tests.test_qartod.dask_arr": {
  "lineno": 17,
  "symbols_in_volume": [
   "dask.array.from_array"
  ],
  "type": "function"
 },
 "tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_utils.AuxillaryCheckTest": {
  "lineno": 10,
  "symbols_in_volume": [
   "numpy.arange",
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "tests.test_utils.AuxillaryCheckTest.test_bad_interval": {
  "lineno": 27,
  "symbols_in_volume": [
   "ioos_qc.utils.check_timestamps",
   "numpy.timedelta64"
  ],
  "type": "function"
 },
 "tests.test_utils.AuxillaryCheckTest.test_bad_time_repeat": {
  "lineno": 21,
  "symbols_in_volume": [
   "ioos_qc.utils.check_timestamps",
   "numpy.concatenate",
   "numpy.repeat"
  ],
  "type": "function"
 },
 "tests.test_utils.AuxillaryCheckTest.test_bad_time_sorting": {
  "lineno": 16,
  "symbols_in_volume": [
   "ioos_qc.utils.check_timestamps"
  ],
  "type": "function"
 }
}