{
 "ioos_qc": {
  "data": {},
  "type": "module"
 },
 "ioos_qc.__version__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "ioos_qc.config": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ioos_qc.config.logging"
   ]
  },
  "type": "module"
 },
 "ioos_qc.config.GeoNumpyDateEncoder": {
  "data": {
   "shadows": "ioos_qc.utils.GeoNumpyDateEncoder"
  },
  "type": "import"
 },
 "ioos_qc.config.L": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "ioos_qc.config.NcQcConfig": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ioos_qc.config.QcConfig"
   ]
  },
  "type": "class"
 },
 "ioos_qc.config.NcQcConfig.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "BaseException",
    "collections.OrderedDict",
    "dict",
    "ioos_qc.utils.dict_update",
    "isinstance",
    "open",
    "pathlib.Path",
    "ruamel.yaml.Loader",
    "ruamel.yaml.load",
    "simplejson.loads",
    "str",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "ioos_qc.config.NcQcConfig.run": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "ioos_qc.config.L",
    "ioos_qc.config.QcConfig",
    "ioos_qc.utils.dict_update",
    "xarray.open_dataset"
   ]
  },
  "type": "function"
 },
 "ioos_qc.config.NcQcConfig.save_to_netcdf": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "getattr",
    "importlib.import_module",
    "ioos_qc.config.L",
    "ioos_qc.utils.GeoNumpyDateEncoder",
    "ioos_qc.utils.cf_safe_name",
    "isinstance",
    "len",
    "list",
    "max",
    "min",
    "netCDF4.Dataset",
    "numpy.byte",
    "pathlib.Path",
    "set",
    "simplejson.dumps",
    "str"
   ]
  },
  "type": "function"
 },
 "ioos_qc.config.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "ioos_qc.config.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "ioos_qc.config.QcConfig": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ioos_qc.config.QcConfig.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "dict",
    "isinstance",
    "open",
    "pathlib.Path",
    "ruamel.yaml.Loader",
    "ruamel.yaml.load",
    "str"
   ]
  },
  "type": "function"
 },
 "ioos_qc.config.QcConfig.__str__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "ioos_qc.config.QcConfig.run": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ImportError",
    "ValueError",
    "collections.OrderedDict",
    "copy.deepcopy",
    "getattr",
    "hasattr",
    "importlib.import_module",
    "inspect.signature",
    "ioos_qc.config.L",
    "runfunc"
   ]
  },
  "type": "function"
 },
 "ioos_qc.config.cf_safe_name": {
  "data": {
   "shadows": "ioos_qc.utils.cf_safe_name"
  },
  "type": "import"
 },
 "ioos_qc.config.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "ioos_qc.config.dict_update": {
  "data": {
   "shadows": "ioos_qc.utils.dict_update"
  },
  "type": "import"
 },
 "ioos_qc.config.import_module": {
  "data": {
   "shadows": "importlib.import_module"
  },
  "type": "import"
 },
 "ioos_qc.config.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "ioos_qc.config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ioos_qc.config.nc4": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "ioos_qc.config.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ioos_qc.config.signature": {
  "data": {
   "shadows": "inspect.signature"
  },
  "type": "import"
 },
 "ioos_qc.config.xr": {
  "data": {
   "shadows": "xarray"
  },
  "type": "import"
 },
 "ioos_qc.config.yaml": {
  "data": {
   "shadows": "ruamel.yaml"
  },
  "type": "import"
 },
 "ioos_qc.gliders": {
  "data": {},
  "type": "module"
 },
 "ioos_qc.gliders.QartodFlags": {
  "data": {
   "shadows": "ioos_qc.qartod.QartodFlags"
  },
  "type": "import"
 },
 "ioos_qc.gliders.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ioos_qc.gliders.pressure_check": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ioos_qc.qartod.QartodFlags.GOOD",
    "ioos_qc.qartod.QartodFlags.SUSPECT",
    "numpy.diff",
    "numpy.mean",
    "numpy.ones_like",
    "numpy.sign",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "collections.namedtuple",
    "ioos_qc.qartod.QartodFlags",
    "ioos_qc.qartod.logging",
    "numbers.Real"
   ]
  },
  "type": "module"
 },
 "ioos_qc.qartod.ClimatologyConfig": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "collections.namedtuple",
    "object"
   ]
  },
  "type": "class"
 },
 "ioos_qc.qartod.ClimatologyConfig.__init__": {
  "data": {
   "lineno": 216
  },
  "type": "function"
 },
 "ioos_qc.qartod.ClimatologyConfig.add": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ioos_qc.qartod.N",
    "ioos_qc.qartod.mapdates",
    "ioos_qc.qartod.span",
    "ioos_qc.utils.isfixedlength",
    "sorted",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod.ClimatologyConfig.members": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod.ClimatologyConfig.values": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ioos_qc.qartod.span",
    "ioos_qc.utils.isnan"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "ioos_qc.qartod.FLAGS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "ioos_qc.qartod.L": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "ioos_qc.qartod.N": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "ioos_qc.qartod.QartodFlags": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "ioos_qc.qartod.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "ioos_qc.qartod.Sequence": {
  "data": {
   "shadows": "typing.Sequence"
  },
  "type": "import"
 },
 "ioos_qc.qartod.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "ioos_qc.qartod.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ioos_qc.qartod.attenuated_signal_test": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "ValueError",
    "ioos_qc.qartod.N",
    "ioos_qc.qartod.QartodFlags",
    "ioos_qc.qartod.span",
    "ioos_qc.qartod.warnings",
    "ioos_qc.utils.isfixedlength",
    "numpy.array",
    "numpy.floating",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked_invalid",
    "numpy.ma.ones",
    "numpy.ptp",
    "numpy.std",
    "reversed",
    "sorted",
    "str",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod.climatology_test": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "enumerate",
    "ioos_qc.qartod.ClimatologyConfig",
    "ioos_qc.qartod.N",
    "ioos_qc.qartod.QartodFlags",
    "ioos_qc.qartod.mapdates",
    "ioos_qc.qartod.warnings",
    "isinstance",
    "numpy.array",
    "numpy.errstate",
    "numpy.floating",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.masked_invalid",
    "numpy.ma.ones",
    "str",
    "typing.Dict",
    "typing.Sequence",
    "typing.Tuple",
    "typing.Union",
    "zip"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod.flat_line_test": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "float",
    "int",
    "ioos_qc.qartod.N",
    "ioos_qc.qartod.QartodFlags",
    "ioos_qc.qartod.warnings",
    "len",
    "numpy.array",
    "numpy.diff",
    "numpy.floating",
    "numpy.full",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked_invalid",
    "numpy.median",
    "run_test",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod.flat_line_test.rolling_window": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "numpy.lib.stride_tricks.as_strided",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked_invalid"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod.flat_line_test.run_test": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.abs",
    "numpy.full",
    "numpy.insert",
    "numpy.ma.filled",
    "numpy.max",
    "numpy.min",
    "rolling_window"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod.great_distance": {
  "data": {
   "shadows": "pygc.great_distance"
  },
  "type": "import"
 },
 "ioos_qc.qartod.gross_range_test": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "ioos_qc.qartod.N",
    "ioos_qc.qartod.QartodFlags",
    "ioos_qc.qartod.span",
    "ioos_qc.qartod.warnings",
    "ioos_qc.utils.isfixedlength",
    "numpy.array",
    "numpy.errstate",
    "numpy.floating",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.masked_invalid",
    "numpy.ma.ones",
    "sorted",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod.isfixedlength": {
  "data": {
   "shadows": "ioos_qc.utils.isfixedlength"
  },
  "type": "import"
 },
 "ioos_qc.qartod.isnan": {
  "data": {
   "shadows": "ioos_qc.utils.isnan"
  },
  "type": "import"
 },
 "ioos_qc.qartod.location_test": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "bboxnt",
    "collections.namedtuple",
    "ioos_qc.qartod.N",
    "ioos_qc.qartod.QartodFlags",
    "ioos_qc.qartod.warnings",
    "ioos_qc.utils.isfixedlength",
    "numpy.array",
    "numpy.errstate",
    "numpy.float64",
    "numpy.floating",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.masked_invalid",
    "numpy.ma.ones",
    "numpy.ma.zeros",
    "pygc.great_distance",
    "typing.Sequence",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ioos_qc.qartod.mapdates": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "hasattr",
    "numpy.array",
    "numpy.datetime64",
    "numpy.issubdtype"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "ioos_qc.qartod.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ioos_qc.qartod.qartod_compare": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "all",
    "ioos_qc.qartod.N",
    "ioos_qc.qartod.QartodFlags",
    "numpy.ma.MaskedArray",
    "numpy.ma.empty",
    "numpy.where",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod.rate_of_change_test": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "float",
    "ioos_qc.qartod.N",
    "ioos_qc.qartod.QartodFlags",
    "ioos_qc.qartod.warnings",
    "numpy.abs",
    "numpy.array",
    "numpy.diff",
    "numpy.errstate",
    "numpy.floating",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.masked_invalid",
    "numpy.ma.ones",
    "numpy.ma.zeros",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod.span": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "ioos_qc.qartod.spike_test": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ioos_qc.qartod.N",
    "ioos_qc.qartod.QartodFlags",
    "ioos_qc.qartod.warnings",
    "numpy.abs",
    "numpy.array",
    "numpy.errstate",
    "numpy.float64",
    "numpy.floating",
    "numpy.ma.core.MaskedArray",
    "numpy.ma.masked_invalid",
    "numpy.ma.ones",
    "numpy.zeros",
    "typing.Sequence"
   ]
  },
  "type": "function"
 },
 "ioos_qc.qartod.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "ioos_qc.utils": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "ioos_qc.utils.logging",
    "numbers.Real"
   ]
  },
  "type": "module"
 },
 "ioos_qc.utils.GeoNumpyDateEncoder": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ioos_qc.utils.geojson"
   ]
  },
  "type": "class"
 },
 "ioos_qc.utils.GeoNumpyDateEncoder.default": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "datetime.date",
    "datetime.datetime",
    "ioos_qc.utils.geojson",
    "isinstance",
    "numpy.asscalar",
    "numpy.generic",
    "numpy.isnan",
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "ioos_qc.utils.L": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "ioos_qc.utils.N": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "ioos_qc.utils.Real": {
  "data": {
   "shadows": "numbers.Real"
  },
  "type": "import"
 },
 "ioos_qc.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "ioos_qc.utils.cf_safe_name": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "ioos_qc.utils.re",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "ioos_qc.utils.check_timestamps": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ioos_qc.utils.N",
    "numpy.any",
    "numpy.array",
    "numpy.array_equal",
    "numpy.diff",
    "numpy.ndarray",
    "sorted"
   ]
  },
  "type": "function"
 },
 "ioos_qc.utils.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "ioos_qc.utils.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "ioos_qc.utils.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "ioos_qc.utils.dict_update": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ioos_qc.utils.collections",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "ioos_qc.utils.geojson": {
  "data": {
   "shadows": "geojson"
  },
  "type": "import"
 },
 "ioos_qc.utils.isfixedlength": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "int",
    "isinstance",
    "len",
    "list",
    "tuple",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "ioos_qc.utils.isnan": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.ma.masked",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "ioos_qc.utils.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "ioos_qc.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "ioos_qc.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "tests": {
  "data": {},
  "type": "module"
 },
 "tests.test_config": {
  "data": {
   "symbols_in_volume": [
    "tests.test_config.L",
    "tests.test_config.logging"
   ]
  },
  "type": "module"
 },
 "tests.test_config.ConfigClimatologyFromFileTest": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "tests.test_config.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_config.ConfigClimatologyFromFileTest.setUp": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "open",
    "tests.test_config.tempfile"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigClimatologyFromFileTest.tearDown": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "tests.test_config.os"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigClimatologyFromFileTest.test_climatology_config_test": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "ioos_qc.config.QcConfig",
    "numpy.datetime64",
    "numpy.ma.array",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigClimatologyFromFileTest.test_climatology_test_depths": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "ioos_qc.config.QcConfig",
    "numpy.datetime64",
    "numpy.ma.array",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigClimatologyTest": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "tests.test_config.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_config.ConfigClimatologyTest.setUp": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.datetime64"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigClimatologyTest.test_climatology_config_test": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "ioos_qc.config.QcConfig",
    "numpy.datetime64",
    "numpy.ma.array",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigClimatologyTest.test_climatology_test_depths": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "ioos_qc.config.QcConfig",
    "numpy.datetime64",
    "numpy.ma.array",
    "numpy.testing.assert_array_equal",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigLoadTest": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "tests.test_config.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_config.ConfigLoadTest.setUp": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "open",
    "tests.test_config.tempfile"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigLoadTest.tearDown": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "tests.test_config.os"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigLoadTest.test_load_file_path": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "ioos_qc.config.QcConfig"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigLoadTest.test_load_path_object": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ioos_qc.config.QcConfig",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigLoadTest.test_load_yaml_dict_object": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ioos_qc.config.QcConfig",
    "open",
    "ruamel.yaml.Loader",
    "ruamel.yaml.load"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigRunTest": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "tests.test_config.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_config.ConfigRunTest.setUp": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "tests.test_config.ConfigRunTest.test_different_kwargs_run": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "copy.deepcopy",
    "ioos_qc.config.QcConfig",
    "list",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigRunTest.test_run": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ioos_qc.config.QcConfig",
    "list",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigRunTest.test_with_empty_config": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "ioos_qc.config.QcConfig",
    "list",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_config.ConfigRunTest.test_with_values_in_config": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "copy.deepcopy",
    "ioos_qc.config.QcConfig",
    "list",
    "numpy.array",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_config.GeoNumpyDateEncoder": {
  "data": {
   "shadows": "ioos_qc.utils.GeoNumpyDateEncoder"
  },
  "type": "import"
 },
 "tests.test_config.L": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "tests.test_config.NcQcConfig": {
  "data": {
   "shadows": "ioos_qc.config.NcQcConfig"
  },
  "type": "import"
 },
 "tests.test_config.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "tests.test_config.QcConfig": {
  "data": {
   "shadows": "ioos_qc.config.QcConfig"
  },
  "type": "import"
 },
 "tests.test_config.TestLoadNcConfigFromFile": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "tests.test_config.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_config.TestLoadNcConfigFromFile.setUp": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "open",
    "tests.test_config.tempfile"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestLoadNcConfigFromFile.tearDown": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "tests.test_config.os"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestLoadNcConfigFromFile.test_load_file_path": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "ioos_qc.config.NcQcConfig"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestLoadNcConfigFromFile.test_load_path_object": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "ioos_qc.config.NcQcConfig",
    "pathlib.Path"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestLoadNcConfigFromFile.test_load_yaml_dict_object": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "ioos_qc.config.NcQcConfig",
    "open",
    "ruamel.yaml.Loader",
    "ruamel.yaml.load"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestReadNcConfig": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "tests.test_config.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_config.TestReadNcConfig.setUp": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "len",
    "list",
    "netCDF4.Dataset",
    "numpy.array",
    "range",
    "simplejson.dumps",
    "tests.test_config.tempfile"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestReadNcConfig.tearDown": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "tests.test_config.os"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestReadNcConfig.test_comparing_nc_and_qc_from_dict": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "ioos_qc.config.NcQcConfig",
    "ioos_qc.config.QcConfig",
    "list",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestReadNcConfig.test_comparing_nc_and_qc_from_nc": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "ioos_qc.config.NcQcConfig",
    "ioos_qc.config.QcConfig",
    "list",
    "numpy.testing.assert_array_equal",
    "range"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestReadNcConfig.test_loading_dict": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "ioos_qc.config.NcQcConfig"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestReadNcConfig.test_loading_netcdf": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "ioos_qc.config.NcQcConfig"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestRunNcConfig": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "tests.test_config.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_config.TestRunNcConfig.setUp": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "len",
    "list",
    "netCDF4.Dataset",
    "range",
    "simplejson.dumps",
    "tests.test_config.tempfile"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestRunNcConfig.test_running_save_nc": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "ioos_qc.config.NcQcConfig",
    "netCDF4.Dataset",
    "numpy.testing.assert_array_equal",
    "simplejson.dumps"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestRunNcConfigClimatology": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "tests.test_config.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_config.TestRunNcConfigClimatology.setUp": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "ioos_qc.utils.GeoNumpyDateEncoder",
    "len",
    "netCDF4.Dataset",
    "numpy.datetime64",
    "simplejson.dumps",
    "tests.test_config.tempfile",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestRunNcConfigClimatology.tearDown": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "tests.test_config.os"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestRunNcConfigClimatology.test_load_climatology_from_netcdf": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "ioos_qc.config.NcQcConfig",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_config.TestRunNcConfigClimatology.test_running_climatology_save_netcdf": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "ioos_qc.config.NcQcConfig",
    "ioos_qc.utils.GeoNumpyDateEncoder",
    "netCDF4.Dataset",
    "numpy.testing.assert_array_equal",
    "simplejson.dumps",
    "sorted"
   ]
  },
  "type": "function"
 },
 "tests.test_config.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "tests.test_config.json": {
  "data": {
   "shadows": "simplejson"
  },
  "type": "import"
 },
 "tests.test_config.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "tests.test_config.nc4": {
  "data": {
   "shadows": "netCDF4"
  },
  "type": "import"
 },
 "tests.test_config.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_config.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "tests.test_config.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "tests.test_config.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "tests.test_config.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tests.test_config.yaml": {
  "data": {
   "shadows": "ruamel.yaml"
  },
  "type": "import"
 },
 "tests.test_gliders": {
  "data": {},
  "type": "module"
 },
 "tests.test_gliders.QcConfig": {
  "data": {
   "shadows": "ioos_qc.config.QcConfig"
  },
  "type": "import"
 },
 "tests.test_gliders.TestGliderChecks": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "tests.test_gliders.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_gliders.TestGliderChecks.test_pressure_downcast": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "ioos_qc.gliders.pressure_check",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_gliders.TestGliderChecks.test_pressure_shallow": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ioos_qc.gliders.pressure_check",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_gliders.TestGliderChecks.test_pressure_upcast": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "ioos_qc.gliders.pressure_check",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_gliders.TestGliderChecks.test_using_config": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ioos_qc.config.QcConfig",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_gliders.gliders": {
  "data": {
   "shadows": "ioos_qc.gliders"
  },
  "type": "import"
 },
 "tests.test_gliders.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_gliders.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "tests.test_gliders.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tests.test_qartod": {
  "data": {
   "symbols_in_volume": [
    "tests.test_qartod.L",
    "tests.test_qartod.logging"
   ]
  },
  "type": "module"
 },
 "tests.test_qartod.L": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "tests.test_qartod.QartodAttenuatedSignalTest": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "tests.test_qartod.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_qartod.QartodAttenuatedSignalTest.test_attenuated_signal": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "ioos_qc.qartod.attenuated_signal_test",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodAttenuatedSignalTest.test_attenuated_signal_missing": {
  "data": {
   "lineno": 835,
   "symbols_in_volume": [
    "ioos_qc.qartod.attenuated_signal_test",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodAttenuatedSignalTest.test_attenuated_signal_range": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "ioos_qc.qartod.attenuated_signal_test",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodClimatologyTest": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "tests.test_qartod.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_qartod.QartodClimatologyTest.setUp": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ioos_qc.qartod.ClimatologyConfig",
    "numpy.datetime64"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodClimatologyTest.test_climatology_test": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ioos_qc.qartod.climatology_test",
    "numpy.asarray",
    "numpy.datetime64",
    "numpy.floating",
    "numpy.ma.array",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodClimatologyTest.test_climatology_test_depths": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "ioos_qc.qartod.climatology_test",
    "numpy.asarray",
    "numpy.datetime64",
    "numpy.floating",
    "numpy.ma.array",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodClimatologyTest.test_climatology_test_fail": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "ioos_qc.qartod.climatology_test",
    "numpy.asarray",
    "numpy.datetime64",
    "numpy.floating",
    "numpy.ma.array",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLinePerformanceTest": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "tests.test_qartod.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_qartod.QartodFlatLinePerformanceTest.perf_test": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": [
    "method",
    "range",
    "tests.test_qartod.L",
    "tests.test_qartod.time"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLinePerformanceTest.setUp": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLinePerformanceTest.test_flat_line": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "ioos_qc.qartod.flat_line_test"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLineTest": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "tests.test_qartod.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_qartod.QartodFlatLineTest.setUp": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "int",
    "numpy.arange",
    "numpy.datetime64",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLineTest.test_flat_line": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "ioos_qc.qartod.flat_line_test",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.floating",
    "numpy.ones_like",
    "numpy.random.random",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLineTest.test_flat_line_missing_values": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "ioos_qc.qartod.flat_line_test",
    "numpy.asarray",
    "numpy.floating",
    "numpy.ma.masked",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr",
    "tests.test_qartod.warnings"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLineTest.test_flat_line_short_timeseries": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "check"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLineTest.test_flat_line_short_timeseries.check": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "ioos_qc.qartod.flat_line_test",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLineTest.test_flat_line_starting_from_beginning": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "ioos_qc.qartod.flat_line_test",
    "numpy.asarray",
    "numpy.floating",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr",
    "tests.test_qartod.warnings"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodFlatLineTest.test_flat_line_with_spike": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "ioos_qc.qartod.flat_line_test",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodGrossRangeTest": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "tests.test_qartod.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_qartod.QartodGrossRangeTest.test_gross_range_bad_input": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "ioos_qc.qartod.gross_range_test",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodGrossRangeTest.test_gross_range_check": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "ioos_qc.qartod.gross_range_test",
    "numpy.array",
    "numpy.floating",
    "numpy.integer",
    "numpy.ma.array",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr",
    "tests.test_qartod.warnings"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodGrossRangeTest.test_gross_range_check_masked": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ioos_qc.qartod.gross_range_test",
    "numpy.array",
    "numpy.floating",
    "numpy.ma.array",
    "numpy.ma.masked",
    "numpy.nan",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr",
    "tests.test_qartod.warnings"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodLocationTest": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "tests.test_qartod.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_qartod.QartodLocationTest.test_location": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ioos_qc.qartod.location_test",
    "numpy.NaN",
    "numpy.array",
    "numpy.ma.array",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodLocationTest.test_location_bad_input": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "ioos_qc.qartod.location_test"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodLocationTest.test_location_bbox": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ioos_qc.qartod.location_test",
    "numpy.asarray",
    "numpy.floating",
    "numpy.ma.array",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodLocationTest.test_location_distance_threshold": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ioos_qc.qartod.location_test",
    "numpy.array",
    "numpy.ma.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodLocationTest.test_single_location_nan": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ioos_qc.qartod.location_test",
    "numpy.array",
    "numpy.ma.array",
    "numpy.nan",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodLocationTest.test_single_location_none": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ioos_qc.qartod.location_test",
    "numpy.array",
    "numpy.ma.array",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodRateOfChangeTest": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "tests.test_qartod.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_qartod.QartodRateOfChangeTest.setUp": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.datetime64",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodRateOfChangeTest.test_rate_of_change": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "ioos_qc.qartod.rate_of_change_test",
    "numpy.asarray",
    "numpy.floating",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodRateOfChangeTest.test_rate_of_change_missing_values": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "ioos_qc.qartod.rate_of_change_test",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodRateOfChangeTest.test_rate_of_change_negative_values": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "ioos_qc.qartod.rate_of_change_test",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodSpikeTest": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "tests.test_qartod.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_qartod.QartodSpikeTest.setUp": {
  "data": {
   "lineno": 405
  },
  "type": "function"
 },
 "tests.test_qartod.QartodSpikeTest.test_spike": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "ioos_qc.qartod.spike_test",
    "numpy.asarray",
    "numpy.floating",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodSpikeTest.test_spike_masked": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "ioos_qc.qartod.spike_test",
    "numpy.asarray",
    "numpy.floating",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodSpikeTest.test_spike_negative_vals": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "ioos_qc.qartod.spike_test",
    "numpy.asarray",
    "numpy.floating",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodSpikeTest.test_spike_realdata": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "ioos_qc.qartod.spike_test",
    "numpy.asarray",
    "numpy.floating",
    "numpy.testing.assert_array_equal",
    "tests.test_qartod.dask_arr"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.QartodUtilsTests": {
  "data": {
   "lineno": 871,
   "symbols_in_volume": [
    "tests.test_qartod.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_qartod.QartodUtilsTests.test_qartod_compare": {
  "data": {
   "lineno": 873,
   "symbols_in_volume": [
    "ioos_qc.qartod.qartod_compare",
    "numpy.array",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.da": {
  "data": {
   "shadows": "dask.array"
  },
  "type": "import"
 },
 "tests.test_qartod.dask_arr": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ImportError",
    "dask.array.from_array"
   ]
  },
  "type": "function"
 },
 "tests.test_qartod.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "tests.test_qartod.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_qartod.npt": {
  "data": {
   "shadows": "numpy.testing"
  },
  "type": "import"
 },
 "tests.test_qartod.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_qartod.qartod": {
  "data": {
   "shadows": "ioos_qc.qartod"
  },
  "type": "import"
 },
 "tests.test_qartod.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "tests.test_qartod.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tests.test_qartod.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "tests.test_utils.AuxillaryCheckTest": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.arange",
    "tests.test_utils.unittest"
   ]
  },
  "type": "class"
 },
 "tests.test_utils.AuxillaryCheckTest.test_bad_interval": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ioos_qc.utils.check_timestamps",
    "numpy.timedelta64"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.AuxillaryCheckTest.test_bad_time_repeat": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ioos_qc.utils.check_timestamps",
    "numpy.concatenate",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.AuxillaryCheckTest.test_bad_time_sorting": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "ioos_qc.utils.check_timestamps"
   ]
  },
  "type": "function"
 },
 "tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "tests.test_utils.utils": {
  "data": {
   "shadows": "ioos_qc.utils"
  },
  "type": "import"
 }
}