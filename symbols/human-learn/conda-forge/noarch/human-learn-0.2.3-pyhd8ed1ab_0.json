{
 "hulearn": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.classification": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.classification.functionclassifier": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.classification.functionclassifier.FunctionClassifier": {
  "lineno": 6,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "hulearn.classification.functionclassifier.FunctionClassifier.__init__": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.classification.functionclassifier.FunctionClassifier.fit": {
  "lineno": 44,
  "symbols_in_volume": [
   "sklearn.utils.multiclass.unique_labels"
  ],
  "type": "function"
 },
 "hulearn.classification.functionclassifier.FunctionClassifier.get_params": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.classification.functionclassifier.FunctionClassifier.predict": {
  "lineno": 55,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "hulearn.classification.functionclassifier.FunctionClassifier.set_params": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.classification.interactiveclassifier": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.classification.interactiveclassifier.InteractiveClassifier": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.ClassifierMixin"
  ],
  "type": "class"
 },
 "hulearn.classification.interactiveclassifier.InteractiveClassifier.__init__": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.classification.interactiveclassifier.InteractiveClassifier._clean_poly_data": {
  "lineno": 81,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.classification.interactiveclassifier.InteractiveClassifier._count_hits": {
  "lineno": 106,
  "symbols_in_volume": [
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "hulearn.classification.interactiveclassifier.InteractiveClassifier.fit": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.classification.interactiveclassifier.InteractiveClassifier.from_json": {
  "lineno": 58,
  "symbols_in_volume": [
   "json.loads",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "hulearn.classification.interactiveclassifier.InteractiveClassifier.poly_data": {
  "lineno": 85,
  "symbols_in_volume": [
   "shapely.geometry.polygon.Polygon"
  ],
  "type": "function"
 },
 "hulearn.classification.interactiveclassifier.InteractiveClassifier.predict": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.array",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "hulearn.classification.interactiveclassifier.InteractiveClassifier.predict_proba": {
  "lineno": 122,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "hulearn.common": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.common.df_to_dictlist": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.common.flatten": {
  "lineno": 4,
  "symbols_in_volume": [
   "collections.abc.Iterable"
  ],
  "type": "function"
 },
 "hulearn.datasets": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.datasets.load_fish": {
  "lineno": 37,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_csv",
   "pkg_resources.resource_filename"
  ],
  "type": "function"
 },
 "hulearn.datasets.load_titanic": {
  "lineno": 7,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.read_csv",
   "pkg_resources.resource_filename"
  ],
  "type": "function"
 },
 "hulearn.experimental": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.experimental.interactive": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.experimental.interactive.InteractiveCharts": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "hulearn.experimental.interactive.InteractiveCharts.__init__": {
  "lineno": 40,
  "symbols_in_volume": [
   "bokeh.io.output_notebook"
  ],
  "type": "function"
 },
 "hulearn.experimental.interactive.InteractiveCharts.add_chart": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.experimental.interactive.InteractiveCharts.data": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.experimental.interactive.InteractiveCharts.to_json": {
  "lineno": 103,
  "symbols_in_volume": [
   "clumper.Clumper"
  ],
  "type": "function"
 },
 "hulearn.experimental.interactive.SingleInteractiveChart": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "class"
 },
 "hulearn.experimental.interactive.SingleInteractiveChart.__init__": {
  "lineno": 128,
  "symbols_in_volume": [
   "bokeh.models.ColumnDataSource",
   "bokeh.models.PolyDrawTool",
   "bokeh.models.PolyEditTool",
   "bokeh.models.annotations.Label",
   "bokeh.plotting.figure",
   "pkg_resources.resource_filename",
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "hulearn.experimental.interactive.SingleInteractiveChart._replace_xy": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.experimental.interactive.SingleInteractiveChart.app": {
  "lineno": 177,
  "symbols_in_volume": [
   "bokeh.layouts.row",
   "bokeh.models.widgets.Div"
  ],
  "type": "function"
 },
 "hulearn.experimental.interactive.SingleInteractiveChart.data": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.experimental.interactive.SingleInteractiveChart.show": {
  "lineno": 184,
  "symbols_in_volume": [
   "bokeh.plotting.show"
  ],
  "type": "function"
 },
 "hulearn.experimental.interactive.color_dot": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.outlier": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.outlier.functionoutlier": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.outlier.functionoutlier.FunctionOutlierDetector": {
  "lineno": 5,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.OutlierMixin"
  ],
  "type": "class"
 },
 "hulearn.outlier.functionoutlier.FunctionOutlierDetector.__init__": {
  "lineno": 17,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.outlier.functionoutlier.FunctionOutlierDetector.fit": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.outlier.functionoutlier.FunctionOutlierDetector.get_params": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.outlier.functionoutlier.FunctionOutlierDetector.predict": {
  "lineno": 32,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "hulearn.outlier.functionoutlier.FunctionOutlierDetector.set_params": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.outlier.interactiveoutlier": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.outlier.interactiveoutlier.InteractiveOutlierDetector": {
  "lineno": 12,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.OutlierMixin"
  ],
  "type": "class"
 },
 "hulearn.outlier.interactiveoutlier.InteractiveOutlierDetector.__init__": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.outlier.interactiveoutlier.InteractiveOutlierDetector._count_hits": {
  "lineno": 97,
  "symbols_in_volume": [
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "hulearn.outlier.interactiveoutlier.InteractiveOutlierDetector.fit": {
  "lineno": 105,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.outlier.interactiveoutlier.InteractiveOutlierDetector.from_json": {
  "lineno": 56,
  "symbols_in_volume": [
   "json.loads",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "hulearn.outlier.interactiveoutlier.InteractiveOutlierDetector.poly_data": {
  "lineno": 76,
  "symbols_in_volume": [
   "shapely.geometry.polygon.Polygon"
  ],
  "type": "function"
 },
 "hulearn.outlier.interactiveoutlier.InteractiveOutlierDetector.predict": {
  "lineno": 124,
  "symbols_in_volume": [
   "numpy.where"
  ],
  "type": "function"
 },
 "hulearn.outlier.interactiveoutlier.InteractiveOutlierDetector.score": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "hulearn.preprocessing": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.preprocessing.interactivepreprocessor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.preprocessing.interactivepreprocessor.InteractivePreprocessor": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator"
  ],
  "type": "class"
 },
 "hulearn.preprocessing.interactivepreprocessor.InteractivePreprocessor.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.preprocessing.interactivepreprocessor.InteractivePreprocessor._count_hits": {
  "lineno": 67,
  "symbols_in_volume": [
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "hulearn.preprocessing.interactivepreprocessor.InteractivePreprocessor.fit": {
  "lineno": 75,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.preprocessing.interactivepreprocessor.InteractivePreprocessor.from_json": {
  "lineno": 26,
  "symbols_in_volume": [
   "json.loads",
   "pathlib.Path"
  ],
  "type": "function"
 },
 "hulearn.preprocessing.interactivepreprocessor.InteractivePreprocessor.pandas_pipe": {
  "lineno": 120,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat"
  ],
  "type": "function"
 },
 "hulearn.preprocessing.interactivepreprocessor.InteractivePreprocessor.poly_data": {
  "lineno": 46,
  "symbols_in_volume": [
   "shapely.geometry.polygon.Polygon"
  ],
  "type": "function"
 },
 "hulearn.preprocessing.interactivepreprocessor.InteractivePreprocessor.transform": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "hulearn.preprocessing.pipetransformer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.preprocessing.pipetransformer.PipeTransformer": {
  "lineno": 5,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "hulearn.preprocessing.pipetransformer.PipeTransformer.__init__": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.preprocessing.pipetransformer.PipeTransformer.fit": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.preprocessing.pipetransformer.PipeTransformer.get_params": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.preprocessing.pipetransformer.PipeTransformer.set_params": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.preprocessing.pipetransformer.PipeTransformer.transform": {
  "lineno": 74,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "hulearn.regression": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.regression.functionregressor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "hulearn.regression.functionregressor.FunctionRegressor": {
  "lineno": 5,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.RegressorMixin"
  ],
  "type": "class"
 },
 "hulearn.regression.functionregressor.FunctionRegressor.__init__": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.regression.functionregressor.FunctionRegressor.fit": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.regression.functionregressor.FunctionRegressor.get_params": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.regression.functionregressor.FunctionRegressor.predict": {
  "lineno": 31,
  "symbols_in_volume": [
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "hulearn.regression.functionregressor.FunctionRegressor.set_params": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "hulearn.this": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "sklearn.utils.estimator_checks.check_classifier_data_not_an_array",
   "sklearn.utils.estimator_checks.check_classifiers_classes",
   "sklearn.utils.estimator_checks.check_classifiers_one_label",
   "sklearn.utils.estimator_checks.check_classifiers_train",
   "sklearn.utils.estimator_checks.check_complex_data",
   "sklearn.utils.estimator_checks.check_decision_proba_consistency",
   "sklearn.utils.estimator_checks.check_dict_unchanged",
   "sklearn.utils.estimator_checks.check_dont_overwrite_parameters",
   "sklearn.utils.estimator_checks.check_dtype_object",
   "sklearn.utils.estimator_checks.check_estimator_sparse_data",
   "sklearn.utils.estimator_checks.check_estimators_dtypes",
   "sklearn.utils.estimator_checks.check_estimators_empty_data_messages",
   "sklearn.utils.estimator_checks.check_estimators_fit_returns_self",
   "sklearn.utils.estimator_checks.check_estimators_nan_inf",
   "sklearn.utils.estimator_checks.check_estimators_overwrite_params",
   "sklearn.utils.estimator_checks.check_estimators_partial_fit_n_features",
   "sklearn.utils.estimator_checks.check_estimators_pickle",
   "sklearn.utils.estimator_checks.check_estimators_unfitted",
   "sklearn.utils.estimator_checks.check_fit1d",
   "sklearn.utils.estimator_checks.check_fit2d_1feature",
   "sklearn.utils.estimator_checks.check_fit2d_1sample",
   "sklearn.utils.estimator_checks.check_fit2d_predict1d",
   "sklearn.utils.estimator_checks.check_fit_score_takes_y",
   "sklearn.utils.estimator_checks.check_get_params_invariance",
   "sklearn.utils.estimator_checks.check_methods_subset_invariance",
   "sklearn.utils.estimator_checks.check_non_transformer_estimators_n_iter",
   "sklearn.utils.estimator_checks.check_outliers_fit_predict",
   "sklearn.utils.estimator_checks.check_outliers_train",
   "sklearn.utils.estimator_checks.check_pipeline_consistency",
   "sklearn.utils.estimator_checks.check_regressor_data_not_an_array",
   "sklearn.utils.estimator_checks.check_regressors_int",
   "sklearn.utils.estimator_checks.check_regressors_no_decision_function",
   "sklearn.utils.estimator_checks.check_regressors_train",
   "sklearn.utils.estimator_checks.check_sample_weights_invariance",
   "sklearn.utils.estimator_checks.check_sample_weights_list",
   "sklearn.utils.estimator_checks.check_sample_weights_pandas_series",
   "sklearn.utils.estimator_checks.check_set_params",
   "sklearn.utils.estimator_checks.check_supervised_y_2d",
   "sklearn.utils.estimator_checks.check_supervised_y_no_nan",
   "sklearn.utils.estimator_checks.check_transformer_data_not_an_array",
   "sklearn.utils.estimator_checks.check_transformer_general",
   "sklearn.utils.estimator_checks.check_transformers_unfitted"
  ],
  "type": "module"
 },
 "tests.conftest.id_func": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.conftest.random_xy_dataset_clf": {
  "lineno": 23,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.random.normal",
   "numpy.random.seed",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.random_xy_dataset_regr": {
  "lineno": 12,
  "symbols_in_volume": [
   "itertools.product",
   "numpy.random.normal",
   "numpy.random.seed",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "tests.conftest.select_tests": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_docstrings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "tests.test_docstrings.handle_docstring": {
  "lineno": 7,
  "symbols_in_volume": [],
  "type": "function"
 },
 "tests.test_docstrings.test_mappers_docstrings": {
  "lineno": 25,
  "symbols_in_volume": [
   "hulearn.common.df_to_dictlist",
   "hulearn.common.flatten",
   "hulearn.datasets.load_titanic",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 }
}