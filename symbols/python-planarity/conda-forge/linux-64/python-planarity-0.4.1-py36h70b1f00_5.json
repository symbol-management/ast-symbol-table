{
 "planarity": {
  "data": {},
  "type": "module"
 },
 "planarity.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "planarity.planarity_functions": {
  "data": {},
  "type": "module"
 },
 "planarity.planarity_functions.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "planarity.planarity_functions.ascii": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "planarity.planarity_functions.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.planarity_functions.is_planar": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "planarity.planarity_functions.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.planarity_functions.kuratowski_edges": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "planarity.planarity_functions.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.planarity_functions.mapping": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "planarity.planarity_functions.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.planarity_functions.planarity": {
  "data": {
   "shadows": "planarity"
  },
  "type": "import"
 },
 "planarity.planarity_functions.write": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "planarity.planarity_functions.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.planarity_networkx": {
  "data": {},
  "type": "module"
 },
 "planarity.planarity_networkx.Circle": {
  "data": {
   "shadows": "matplotlib.patches.Circle"
  },
  "type": "import"
 },
 "planarity.planarity_networkx.PatchCollection": {
  "data": {
   "shadows": "matplotlib.collections.PatchCollection"
  },
  "type": "import"
 },
 "planarity.planarity_networkx.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "planarity.planarity_networkx.draw": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ImportError",
    "dict",
    "int",
    "matplotlib.collections.PatchCollection",
    "matplotlib.patches.Circle",
    "matplotlib.pyplot.axis",
    "matplotlib.pyplot.gca",
    "matplotlib.pyplot.hlines",
    "matplotlib.pyplot.text",
    "matplotlib.pyplot.vlines",
    "matplotlib.pyplot.xlim",
    "matplotlib.pyplot.ylim",
    "max",
    "min",
    "planarity.planarity_networkx.networkx_graph",
    "planarity.planarity_networkx.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.planarity_networkx.kuratowski_subgraph": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ImportError",
    "networkx.Graph",
    "planarity.planarity_networkx.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.planarity_networkx.networkx_graph": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ImportError",
    "networkx.Graph"
   ]
  },
  "type": "function"
 },
 "planarity.planarity_networkx.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "planarity.planarity_networkx.pgraph_graph": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "planarity.planarity_networkx.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.planarity_networkx.planarity": {
  "data": {
   "shadows": "planarity"
  },
  "type": "import"
 },
 "planarity.planarity_networkx.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "planarity.test": {
  "data": {
   "shadows": "run"
  },
  "type": "import"
 },
 "planarity.tests": {
  "data": {},
  "type": "module"
 },
 "planarity.tests.test": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "planarity.tests.test.run"
   ]
  },
  "type": "module"
 },
 "planarity.tests.test.nose": {
  "data": {
   "shadows": "nose"
  },
  "type": "import"
 },
 "planarity.tests.test.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "planarity.tests.test.run": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "ImportError",
    "os.path.dirname",
    "os.path.join",
    "os.path.pardir",
    "planarity.tests.test.nose"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity": {
  "data": {},
  "type": "module"
 },
 "planarity.tests.test_planarity.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity.TestPlanarity": {
  "data": {
   "lineno": 9
  },
  "type": "class"
 },
 "planarity.tests.test_planarity.TestPlanarity.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity.TestPlanarity.test_draw_text": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "planarity.tests.test_planarity.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity.TestPlanarity.test_goldner_harary": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "nose.tools.assert_true",
    "planarity.tests.test_planarity.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity.TestPlanarity.test_is_planar_adj_input": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "planarity.tests.test_planarity.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity.TestPlanarity.test_is_planar_adj_input_function": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "nose.tools.assert_false",
    "planarity.tests.test_planarity.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity.TestPlanarity.test_is_planar_adj_list": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "nose.tools.assert_false",
    "planarity.tests.test_planarity.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity.TestPlanarity.test_is_planar_adj_set": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "nose.tools.assert_false",
    "planarity.tests.test_planarity.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity.TestPlanarity.test_is_planar_adj_symmetric": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "nose.tools.assert_false",
    "planarity.tests.test_planarity.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity.TestPlanarity.test_is_planar_edgelist_input": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "planarity.tests.test_planarity.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity.TestPlanarity.test_is_planar_edgelist_input_function": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "nose.tools.assert_false",
    "planarity.tests.test_planarity.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity.TestPlanarity.test_kuratowski_k5": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "planarity.tests.test_planarity.planarity",
    "sorted"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity.TestPlanarity.test_kuratowski_k5_function": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "planarity.tests.test_planarity.planarity",
    "sorted"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity.TestPlanarity.test_no_kuratowski_k5m": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "planarity.tests.test_planarity.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity.TestPlanarity.test_write_adjlist": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "open",
    "planarity.tests.test_planarity.os",
    "planarity.tests.test_planarity.planarity",
    "planarity.tests.test_planarity.tempfile"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity.planarity": {
  "data": {
   "shadows": "planarity"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity_networkx": {
  "data": {},
  "type": "module"
 },
 "planarity.tests.test_planarity_networkx.SkipTest": {
  "data": {
   "shadows": "nose.SkipTest"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity_networkx.TestPlanarityNetworkX": {
  "data": {
   "lineno": 5
  },
  "type": "class"
 },
 "planarity.tests.test_planarity_networkx.TestPlanarityNetworkX.setUp": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "ImportError",
    "networkx.complete_bipartite_graph",
    "networkx.complete_graph",
    "networkx.path_graph",
    "nose.SkipTest"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity_networkx.TestPlanarityNetworkX.test_goldner_harary": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "networkx.Graph",
    "nose.tools.assert_true",
    "planarity.tests.test_planarity_networkx.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity_networkx.TestPlanarityNetworkX.test_is_planar": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "planarity.tests.test_planarity_networkx.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity_networkx.TestPlanarityNetworkX.test_is_planar_unions": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ImportError",
    "itertools.combinations",
    "itertools.product",
    "networkx.disjoint_union",
    "nose.SkipTest",
    "nose.tools.assert_false",
    "nose.tools.assert_true",
    "planarity.tests.test_planarity_networkx.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity_networkx.TestPlanarityNetworkX.test_kuratowski_k5": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "networkx.complete_graph",
    "nose.tools.assert_equal",
    "planarity.tests.test_planarity_networkx.planarity",
    "sorted"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity_networkx.TestPlanarityNetworkX.test_kuratowski_k5m": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "list",
    "networkx.complete_graph",
    "nose.tools.assert_equal",
    "planarity.tests.test_planarity_networkx.planarity"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity_networkx.TestPlanarityNetworkX.test_networkx_graph": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "networkx.Graph",
    "nose.tools.assert_equal",
    "planarity.tests.test_planarity_networkx.planarity",
    "sorted"
   ]
  },
  "type": "function"
 },
 "planarity.tests.test_planarity_networkx.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity_networkx.assert_false": {
  "data": {
   "shadows": "nose.tools.assert_false"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity_networkx.assert_true": {
  "data": {
   "shadows": "nose.tools.assert_true"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity_networkx.combinations": {
  "data": {
   "shadows": "itertools.combinations"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity_networkx.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity_networkx.planarity": {
  "data": {
   "shadows": "planarity"
  },
  "type": "import"
 },
 "planarity.tests.test_planarity_networkx.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 }
}