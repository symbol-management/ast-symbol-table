{
 "synphot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot._astropy_init": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.config.configuration.ConfigurationDefaultMissingError",
   "astropy.config.configuration.ConfigurationDefaultMissingWarning",
   "astropy.config.configuration.update_default_config",
   "astropy.tests.runner.TestRunner.make_test_runner_in",
   "os.environ.get",
   "os.path.dirname",
   "os.path.isfile",
   "os.path.join",
   "warnings.warn"
  ],
  "type": "module"
 },
 "synphot.binning": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.binning._slow_calcbinflux": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64",
   "numpy.sum"
  ],
  "type": "function"
 },
 "synphot.binning.calculate_bin_centers": {
  "lineno": 129,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "synphot.binning.calculate_bin_edges": {
  "lineno": 51,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "synphot.binning.calculate_bin_widths": {
  "lineno": 95,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "numpy.abs"
  ],
  "type": "function"
 },
 "synphot.binning.pixel_range": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.binning.wave_range": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.argmin",
   "numpy.modf"
  ],
  "type": "function"
 },
 "synphot.blackbody": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.expm1",
   "numpy.isnan",
   "warnings.catch_warnings",
   "warnings.simplefilter"
  ],
  "type": "module"
 },
 "synphot.blackbody.BlackBody1D": {
  "lineno": 34,
  "symbols_in_volume": [
   "astropy.modeling.core.Fittable1DModel",
   "astropy.modeling.parameters.Parameter",
   "astropy.units.K",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "astropy.units.spectral"
  ],
  "type": "class"
 },
 "synphot.blackbody.BlackBody1D._parameter_units_for_data_units": {
  "lineno": 153,
  "symbols_in_volume": [
   "astropy.units.Hz",
   "astropy.units.K"
  ],
  "type": "function"
 },
 "synphot.blackbody.BlackBody1D.evaluate": {
  "lineno": 96,
  "symbols_in_volume": [
   "astropy.constants.sigma_sb.to",
   "astropy.units.Hz",
   "astropy.units.K",
   "astropy.units.Quantity",
   "astropy.units.sr.to",
   "astropy.units.temperature",
   "numpy.pi.to"
  ],
  "type": "function"
 },
 "synphot.blackbody.BlackBody1D.input_units": {
  "lineno": 146,
  "symbols_in_volume": [
   "astropy.units.Hz"
  ],
  "type": "function"
 },
 "synphot.blackbody.BlackBody1D.lambda_max": {
  "lineno": 157,
  "symbols_in_volume": [
   "astropy.constants.b_wien"
  ],
  "type": "function"
 },
 "synphot.blackbody.blackbody_lambda": {
  "lineno": 234,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "astropy.units.spectral_density",
   "astropy.units.sr"
  ],
  "type": "function"
 },
 "synphot.blackbody.blackbody_nu": {
  "lineno": 163,
  "symbols_in_volume": [
   "astropy.constants.c",
   "astropy.constants.h",
   "astropy.constants.k_B",
   "astropy.units.Hz",
   "astropy.units.K",
   "astropy.units.Quantity",
   "astropy.units.add_enabled_equivalencies",
   "astropy.units.spectral",
   "astropy.units.spectral_density",
   "astropy.units.sr",
   "astropy.units.temperature",
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.all",
   "numpy.any",
   "numpy.expm1",
   "numpy.float64",
   "numpy.inf",
   "numpy.isfinite",
   "numpy.isnan",
   "numpy.where",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy",
   "astropy.utils.introspection.minversion"
  ],
  "type": "module"
 },
 "synphot.config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.config.Conf": {
  "lineno": 16,
  "symbols_in_volume": [
   "astropy.config.ConfigItem",
   "astropy.config.ConfigNamespace"
  ],
  "type": "class"
 },
 "synphot.docstrings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.exceptions.DisjointError": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.DuplicateWavelength": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.ExtrapolationNotAllowed": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.IncompatibleSources": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.InterpolationNotAllowed": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.OverlapError": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.PartialOverlap": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.SynphotError": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.TableFormatError": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.TableFormatError.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.exceptions.UndefinedBinset": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.UnsortedWavelength": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.ZeroWavelength": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.models": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.models.BaseGaussian1D": {
  "lineno": 442,
  "symbols_in_volume": [
   "astropy.modeling.models.Gaussian1D",
   "math.pi",
   "math.sqrt"
  ],
  "type": "class"
 },
 "synphot.models.BaseGaussian1D.sampleset": {
  "lineno": 449,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "synphot.models.BlackBody1D": {
  "lineno": 42,
  "symbols_in_volume": [
   "astropy.modeling.Fittable1DModel",
   "astropy.modeling.Parameter"
  ],
  "type": "class"
 },
 "synphot.models.BlackBody1D.__init__": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.models.BlackBody1D.bounding_box": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.log10"
  ],
  "type": "function"
 },
 "synphot.models.BlackBody1D.evaluate": {
  "lineno": 105,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.PHOTLAM",
   "astropy.units.spectral_density",
   "astropy.units.sr",
   "astropy.units.sr.to",
   "numpy.ascontiguousarray",
   "numpy.seterr",
   "synphot.blackbody.blackbody_nu"
  ],
  "type": "function"
 },
 "synphot.models.BlackBody1D.integrate": {
  "lineno": 138,
  "symbols_in_volume": [
   "astropy.constants.sigma_sb",
   "astropy.units.K",
   "astropy.units.Quantity",
   "astropy.units.add_enabled_equivalencies",
   "astropy.units.temperature",
   "math.pi"
  ],
  "type": "function"
 },
 "synphot.models.BlackBody1D.lambda_max": {
  "lineno": 58,
  "symbols_in_volume": [
   "astropy.constants.b_wien.value.to_value",
   "astropy.units.AA",
   "astropy.units.m.to_value"
  ],
  "type": "function"
 },
 "synphot.models.BlackBody1D.sampleset": {
  "lineno": 84,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.asarray",
   "numpy.logspace"
  ],
  "type": "function"
 },
 "synphot.models.BlackBodyNorm1D": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.models.BlackBodyNorm1D.__init__": {
  "lineno": 162,
  "symbols_in_volume": [
   "astropy.constants.R_sun.value",
   "astropy.constants.kpc.value",
   "numpy.pi"
  ],
  "type": "function"
 },
 "synphot.models.BlackBodyNorm1D.evaluate": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.models.BlackBodyNorm1D.integrate": {
  "lineno": 186,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.models.Box1D": {
  "lineno": 190,
  "symbols_in_volume": [
   "astropy.modeling.models.Box1D"
  ],
  "type": "class"
 },
 "synphot.models.Box1D._calc_sampleset": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "synphot.models.Box1D.integrate": {
  "lineno": 228,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "astropy.units.add_enabled_equivalencies",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.models.Box1D.sampleset": {
  "lineno": 205,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "synphot.models.ConstFlux1D": {
  "lineno": 236,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D"
  ],
  "type": "class"
 },
 "synphot.models.ConstFlux1D.__init__": {
  "lineno": 252,
  "symbols_in_volume": [
   "astropy.units.ABmag",
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.PHOTLAM",
   "astropy.units.Quantity",
   "astropy.units.STmag",
   "astropy.units.convert_flux"
  ],
  "type": "function"
 },
 "synphot.models.ConstFlux1D.evaluate": {
  "lineno": 271,
  "symbols_in_volume": [
   "astropy.units.PHOTLAM",
   "astropy.units.convert_flux",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "synphot.models.ConstFlux1D.integrate": {
  "lineno": 289,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Hz",
   "astropy.units.Quantity",
   "astropy.units.add_enabled_equivalencies",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.models.Empirical1D": {
  "lineno": 303,
  "symbols_in_volume": [
   "astropy.modeling.models.Tabular1D"
  ],
  "type": "class"
 },
 "synphot.models.Empirical1D.__init__": {
  "lineno": 325,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "synphot.models.Empirical1D._process_neg_flux": {
  "lineno": 360,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.asarray",
   "numpy.isscalar",
   "numpy.where",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.models.Empirical1D.evaluate": {
  "lineno": 402,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "numpy.isscalar",
   "numpy.nan",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "synphot.models.Empirical1D.is_tapered": {
  "lineno": 394,
  "symbols_in_volume": [
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "synphot.models.Empirical1D.sampleset": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "synphot.models.Gaussian1D": {
  "lineno": 478,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.models.Gaussian1D.integrate": {
  "lineno": 483,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "astropy.units.add_enabled_equivalencies",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.models.GaussianAbsorption1D": {
  "lineno": 493,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.models.GaussianAbsorption1D.evaluate": {
  "lineno": 498,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.models.GaussianAbsorption1D.fit_deriv": {
  "lineno": 505,
  "symbols_in_volume": [
   "operator.neg"
  ],
  "type": "function"
 },
 "synphot.models.GaussianFlux1D": {
  "lineno": 515,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.models.GaussianFlux1D.__init__": {
  "lineno": 540,
  "symbols_in_volume": [
   "astropy.stats.funcs.gaussian_fwhm_to_sigma",
   "astropy.stats.funcs.gaussian_sigma_to_fwhm",
   "astropy.units.AA",
   "astropy.units.AA.to_value",
   "astropy.units.PHOTLAM",
   "astropy.units.Quantity",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "astropy.units.spectral_density"
  ],
  "type": "function"
 },
 "synphot.models.GaussianFlux1D.integrate": {
  "lineno": 571,
  "symbols_in_volume": [
   "astropy.units.PHOTLAM"
  ],
  "type": "function"
 },
 "synphot.models.Lorentz1D": {
  "lineno": 576,
  "symbols_in_volume": [
   "astropy.modeling.models.Lorentz1D"
  ],
  "type": "class"
 },
 "synphot.models.Lorentz1D.integrate": {
  "lineno": 604,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "astropy.units.add_enabled_equivalencies",
   "astropy.units.dimensionless_angles",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.spectral",
   "numpy.arctan"
  ],
  "type": "function"
 },
 "synphot.models.Lorentz1D.sampleset": {
  "lineno": 581,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "synphot.models.MexicanHat1D": {
  "lineno": 679,
  "symbols_in_volume": [
   "astropy.modeling.models.RickerWavelet1D"
  ],
  "type": "class"
 },
 "synphot.models.PowerLawFlux1D": {
  "lineno": 683,
  "symbols_in_volume": [
   "astropy.modeling.models.PowerLaw1D"
  ],
  "type": "class"
 },
 "synphot.models.PowerLawFlux1D.__init__": {
  "lineno": 706,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.PHOTLAM",
   "astropy.units.Quantity",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.models.PowerLawFlux1D.evaluate": {
  "lineno": 724,
  "symbols_in_volume": [
   "astropy.units.PHOTLAM",
   "astropy.units.convert_flux"
  ],
  "type": "function"
 },
 "synphot.models.PowerLawFlux1D.integrate": {
  "lineno": 731,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "astropy.units.add_enabled_equivalencies",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.models.RickerWavelet1D": {
  "lineno": 617,
  "symbols_in_volume": [
   "astropy.modeling.models.RickerWavelet1D"
  ],
  "type": "class"
 },
 "synphot.models.RickerWavelet1D.integrate": {
  "lineno": 645,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "astropy.units.add_enabled_equivalencies",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.models.RickerWavelet1D.integrate._int_subregion": {
  "lineno": 664,
  "symbols_in_volume": [
   "numpy.exp"
  ],
  "type": "function"
 },
 "synphot.models.RickerWavelet1D.sampleset": {
  "lineno": 622,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "synphot.models.Trapezoid1D": {
  "lineno": 743,
  "symbols_in_volume": [
   "astropy.modeling.models.Trapezoid1D"
  ],
  "type": "class"
 },
 "synphot.models.Trapezoid1D.integrate": {
  "lineno": 762,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "astropy.units.add_enabled_equivalencies",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.models.Trapezoid1D.sampleset": {
  "lineno": 748,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "synphot.models._get_meta": {
  "lineno": 904,
  "symbols_in_volume": [
   "astropy.modeling.Model"
  ],
  "type": "function"
 },
 "synphot.models._get_sampleset": {
  "lineno": 773,
  "symbols_in_volume": [
   "astropy.modeling.Model"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_metadata": {
  "lineno": 912,
  "symbols_in_volume": [
   "astropy.utils.metadata.merge"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_metadata_compat": {
  "lineno": 922,
  "symbols_in_volume": [
   "astropy.modeling.core.CompoundModel",
   "collections.defaultdict",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_metadata_compat._get_meta_compat": {
  "lineno": 926,
  "symbols_in_volume": [
   "astropy.modeling.Model"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_metadata_compat._merge_meta_compat": {
  "lineno": 935,
  "symbols_in_volume": [
   "astropy.utils.metadata.merge"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset": {
  "lineno": 781,
  "symbols_in_volume": [
   "astropy.modeling.models.RedshiftScaleFactor",
   "astropy.modeling.models.Scale"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset_compat": {
  "lineno": 817,
  "symbols_in_volume": [
   "astropy.modeling.core.CompoundModel"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset_compat._get_sampleset_compat": {
  "lineno": 820,
  "symbols_in_volume": [
   "astropy.modeling.Model"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset_compat._merge_sampleset_compat": {
  "lineno": 832,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset_compat._shift_wavelengths_compat": {
  "lineno": 838,
  "symbols_in_volume": [
   "astropy.modeling.models.RedshiftScaleFactor",
   "astropy.modeling.models.Scale"
  ],
  "type": "function"
 },
 "synphot.models.get_metadata": {
  "lineno": 950,
  "symbols_in_volume": [
   "astropy.modeling.Model",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "synphot.models.get_waveset": {
  "lineno": 872,
  "symbols_in_volume": [
   "astropy.modeling.Model"
  ],
  "type": "function"
 },
 "synphot.observation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.observation.Observation": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.observation.Observation.__init__": {
  "lineno": 75,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.observation.Observation.__mul__": {
  "lineno": 227,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation._get_binned_arrays": {
  "lineno": 289,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.observation.Observation._init_bins": {
  "lineno": 146,
  "symbols_in_volume": [
   "astropy.log.info",
   "numpy.searchsorted"
  ],
  "type": "function"
 },
 "synphot.observation.Observation._validate_binned_wavelengths": {
  "lineno": 238,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.as_spectrum": {
  "lineno": 665,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.bandpass": {
  "lineno": 207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.bin_edges": {
  "lineno": 217,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.binflux": {
  "lineno": 222,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.binned_pixelrange": {
  "lineno": 337,
  "symbols_in_volume": [
   "astropy.units.spectral",
   "astropy.units.validate_quantity"
  ],
  "type": "function"
 },
 "synphot.observation.Observation.binned_waverange": {
  "lineno": 303,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.spectral",
   "astropy.units.validate_quantity"
  ],
  "type": "function"
 },
 "synphot.observation.Observation.binset": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.countrate": {
  "lineno": 514,
  "symbols_in_volume": [
   "astropy.units.convert_flux",
   "astropy.units.count",
   "astropy.units.s",
   "astropy.units.spectral",
   "astropy.units.validate_quantity",
   "astropy.utils.exceptions.AstropyUserWarning",
   "math.fsum",
   "numpy.searchsorted",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.observation.Observation.effective_wavelength": {
  "lineno": 360,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.PHOTLAM",
   "astropy.units.convert_flux",
   "astropy.utils.exceptions.AstropyDeprecationWarning",
   "numpy.trapz",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.observation.Observation.effstim": {
  "lineno": 422,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.OBMAG.to_string",
   "astropy.units.STmag",
   "astropy.units.VEGAMAG",
   "astropy.units.VEGAMAG.to_string",
   "astropy.units.convert_flux",
   "astropy.units.count",
   "astropy.units.mag",
   "astropy.units.validate_unit",
   "math.log10",
   "numpy.log10",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.observation.Observation.plot": {
  "lineno": 623,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.sample_binned": {
  "lineno": 245,
  "symbols_in_volume": [
   "astropy.units.convert_flux",
   "numpy.allclose",
   "numpy.searchsorted"
  ],
  "type": "function"
 },
 "synphot.observation.Observation.spectrum": {
  "lineno": 202,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.taper": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.reddening": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.reddening.ExtinctionCurve": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.reddening.ExtinctionModel1D": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.reddening.ExtinctionModel1D.sampleset": {
  "lineno": 27,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.reddening.ReddeningLaw": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.reddening.ReddeningLaw.extinction_curve": {
  "lineno": 43,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.mag",
   "numbers.Real"
  ],
  "type": "function"
 },
 "synphot.reddening.ReddeningLaw.from_extinction_model": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.reddening.ReddeningLaw.from_file": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.reddening.ReddeningLaw.to_fits": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.reddening.etau_madau": {
  "lineno": 250,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.validate_quantity",
   "numbers.Real",
   "numpy.array",
   "numpy.exp",
   "numpy.float",
   "numpy.isscalar",
   "numpy.where",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "synphot.setup_package": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.relpath"
  ],
  "type": "module"
 },
 "synphot.setup_package.generate_c_docstrings": {
  "lineno": 21,
  "symbols_in_volume": [
   "extension_helpers.import_file",
   "extension_helpers.write_if_different",
   "io.StringIO",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.setup_package.get_extensions": {
  "lineno": 103,
  "symbols_in_volume": [
   "collections.defaultdict",
   "numpy.get_include",
   "os.path.join",
   "setuptools.Extension"
  ],
  "type": "function"
 },
 "synphot.setup_package.string_escape": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.specio": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.specio.read_ascii_spec": {
  "lineno": 100,
  "symbols_in_volume": [
   "astropy.io.ascii.read",
   "astropy.units.AA",
   "astropy.units.FLAM",
   "astropy.units.validate_unit",
   "numpy.float64"
  ],
  "type": "function"
 },
 "synphot.specio.read_fits_spec": {
  "lineno": 147,
  "symbols_in_volume": [
   "astropy.io.fits.open",
   "astropy.units.AA",
   "astropy.units.FLAM",
   "astropy.units.validate_unit",
   "astropy.utils.exceptions.AstropyUserWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.specio.read_remote_spec": {
  "lineno": 26,
  "symbols_in_volume": [
   "astropy.utils.data.get_readable_fileobj"
  ],
  "type": "function"
 },
 "synphot.specio.read_spec": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.specio.write_fits_spec": {
  "lineno": 218,
  "symbols_in_volume": [
   "astropy.io.fits.BinTableHDU.from_columns",
   "astropy.io.fits.ColDefs",
   "astropy.io.fits.Column",
   "astropy.io.fits.HDUList",
   "astropy.io.fits.PrimaryHDU",
   "astropy.log.info",
   "astropy.units.AA",
   "astropy.units.FLAM",
   "astropy.units.Quantity",
   "astropy.units.validate_unit",
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.abs",
   "numpy.append",
   "numpy.insert",
   "numpy.where",
   "os.path.basename",
   "synphot.__version__",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.spectrum": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.spectrum.BaseSourceSpectrum": {
  "lineno": 895,
  "symbols_in_volume": [
   "astropy.units.PHOTLAM"
  ],
  "type": "class"
 },
 "synphot.spectrum.BaseSourceSpectrum.__call__": {
  "lineno": 922,
  "symbols_in_volume": [
   "astropy.units.convert_flux"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSourceSpectrum._validate_flux_unit": {
  "lineno": 902,
  "symbols_in_volume": [
   "astropy.units.validate_unit"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSourceSpectrum.normalize": {
  "lineno": 955,
  "symbols_in_volume": [
   "astropy.units.ABmag",
   "astropy.units.LogUnit",
   "astropy.units.OBMAG.to_string",
   "astropy.units.Quantity",
   "astropy.units.STmag",
   "astropy.units.VEGAMAG.to_string",
   "astropy.units.count",
   "astropy.units.mag",
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.log10",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum": {
  "lineno": 37,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.K",
   "astropy.units.dimensionless_unscaled"
  ],
  "type": "class"
 },
 "synphot.spectrum.BaseSpectrum.__add__": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__call__": {
  "lineno": 354,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__div__": {
  "lineno": 413,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__init__": {
  "lineno": 131,
  "symbols_in_volume": [
   "astropy.modeling.Model",
   "astropy.modeling.core.CompoundModel"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__mul__": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__rmul__": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__str__": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__sub__": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__truediv__": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._do_plot": {
  "lineno": 719,
  "symbols_in_volume": [
   "astropy.log.error",
   "astropy.log.info",
   "astropy.units.dimensionless_unscaled",
   "matplotlib.pyplot.draw",
   "matplotlib.pyplot.savefig",
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._get_arrays": {
  "lineno": 707,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._get_meta": {
  "lineno": 201,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._merge_meta": {
  "lineno": 212,
  "symbols_in_volume": [
   "astropy.utils.metadata.merge"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._process_flux_param": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._process_generic_param": {
  "lineno": 250,
  "symbols_in_volume": [
   "astropy.units.Quantity"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._process_wave_param": {
  "lineno": 259,
  "symbols_in_volume": [
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._validate_flux_unit": {
  "lineno": 283,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._validate_other_mul_div": {
  "lineno": 383,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.dimensionless_unscaled",
   "numbers.Number",
   "numbers.Real",
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._validate_wavelengths": {
  "lineno": 339,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.avgwave": {
  "lineno": 543,
  "symbols_in_volume": [
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.barlam": {
  "lineno": 571,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.force_extrapolation": {
  "lineno": 627,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.from_spectrum1d": {
  "lineno": 824,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.integrate": {
  "lineno": 419,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.THROUGHPUT",
   "astropy.units.add_enabled_equivalencies",
   "astropy.units.cm",
   "astropy.units.convert_flux",
   "astropy.units.erg",
   "astropy.units.photon",
   "astropy.units.s",
   "astropy.units.spectral",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.model": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.pivot": {
  "lineno": 599,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.plot": {
  "lineno": 782,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.taper": {
  "lineno": 656,
  "symbols_in_volume": [
   "numpy.insert"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.to_spectrum1d": {
  "lineno": 856,
  "symbols_in_volume": [
   "specutils.Spectrum1D"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.warnings": {
  "lineno": 311,
  "symbols_in_volume": [
   "warnings.setter"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.waverange": {
  "lineno": 326,
  "symbols_in_volume": [
   "astropy.units.Quantity"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.waveset": {
  "lineno": 317,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseUnitlessSpectrum": {
  "lineno": 1391,
  "symbols_in_volume": [
   "astropy.units.THROUGHPUT"
  ],
  "type": "class"
 },
 "synphot.spectrum.BaseUnitlessSpectrum.__mul__": {
  "lineno": 1410,
  "symbols_in_volume": [
   "astropy.modeling.models.Scale",
   "astropy.units.Quantity",
   "numbers.Number"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseUnitlessSpectrum.__truediv__": {
  "lineno": 1428,
  "symbols_in_volume": [
   "astropy.modeling.models.Scale",
   "astropy.units.Quantity",
   "numbers.Number"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseUnitlessSpectrum._process_flux_param": {
  "lineno": 1395,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseUnitlessSpectrum._validate_flux_unit": {
  "lineno": 1399,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.validate_unit"
  ],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum": {
  "lineno": 1118,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.spectrum.SourceSpectrum.__add__": {
  "lineno": 1218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__init__": {
  "lineno": 1138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__mul__": {
  "lineno": 1232,
  "symbols_in_volume": [
   "astropy.modeling.models.Scale",
   "astropy.units.Quantity",
   "numbers.Number"
  ],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__str__": {
  "lineno": 1207,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__sub__": {
  "lineno": 1225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__truediv__": {
  "lineno": 1247,
  "symbols_in_volume": [
   "astropy.modeling.models.Scale",
   "astropy.units.Quantity",
   "numbers.Number"
  ],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum._process_flux_param": {
  "lineno": 1144,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.convert_flux"
  ],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum._validate_other_add_sub": {
  "lineno": 1212,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.from_file": {
  "lineno": 1336,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.from_vega": {
  "lineno": 1366,
  "symbols_in_volume": [
   "os.path.basename"
  ],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.model": {
  "lineno": 1154,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.plot": {
  "lineno": 1261,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.to_fits": {
  "lineno": 1294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.z": {
  "lineno": 1181,
  "symbols_in_volume": [
   "astropy.modeling.models.RedshiftScaleFactor",
   "astropy.modeling.models.Scale",
   "numbers.Real"
  ],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.z_type": {
  "lineno": 1199,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement": {
  "lineno": 1444,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.spectrum.SpectralElement.check_overlap": {
  "lineno": 1453,
  "symbols_in_volume": [
   "astropy.modeling.core.CompoundModel",
   "astropy.units.Quantity",
   "numpy.allclose"
  ],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.efficiency": {
  "lineno": 1839,
  "symbols_in_volume": [
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.emflx": {
  "lineno": 1859,
  "symbols_in_volume": [
   "astropy.units.FLAM"
  ],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.equivwidth": {
  "lineno": 1796,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.from_file": {
  "lineno": 1924,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.from_filter": {
  "lineno": 1958,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.fwhm": {
  "lineno": 1721,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.photbw": {
  "lineno": 1660,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sqrt",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.rectwidth": {
  "lineno": 1812,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.rmswidth": {
  "lineno": 1606,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.tlambda": {
  "lineno": 1737,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.to_fits": {
  "lineno": 1886,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.tpeak": {
  "lineno": 1754,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.unit_response": {
  "lineno": 1573,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.AREA",
   "astropy.units.FLAM",
   "astropy.units.HC",
   "astropy.units.s.to",
   "astropy.units.validate_quantity",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.wpeak": {
  "lineno": 1773,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_binning": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_binning.TestBinRange": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_binning.TestBinRange.setup_class": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_pixel_range_almosteq": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_pixel_range_descending_order": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_pixel_range_exceptions": {
  "lineno": 141,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_pixel_range_mode": {
  "lineno": 150,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_wave_range_descending_order": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_wave_range_exceptions": {
  "lineno": 82,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_wave_range_mode": {
  "lineno": 106,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_wave_range_mode_none": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_binning.test_calcbinflux": {
  "lineno": 190,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.utils.data.get_pkg_data_filename",
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.array",
   "numpy.interp",
   "numpy.ones",
   "numpy.searchsorted",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "os.path.join",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.test_calculate_bin_centers": {
  "lineno": 44,
  "symbols_in_volume": [
   "astropy.units.AA",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.test_calculate_bin_edges": {
  "lineno": 22,
  "symbols_in_volume": [
   "astropy.units.AA",
   "numpy.arange",
   "numpy.float",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.test_calculate_bin_exceptions": {
  "lineno": 64,
  "symbols_in_volume": [
   "astropy.units.AA",
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.test_calculate_bin_widths": {
  "lineno": 33,
  "symbols_in_volume": [
   "astropy.units.AA",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.test_center_edge_center_roundtrip": {
  "lineno": 55,
  "symbols_in_volume": [
   "astropy.units.micron",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_blackbody": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_blackbody.test_blackbody_synphot": {
  "lineno": 14,
  "symbols_in_volume": [
   "astropy.constants.R_sun",
   "astropy.constants.kpc",
   "astropy.units.AA",
   "astropy.units.sr",
   "numpy.errstate",
   "numpy.log10",
   "numpy.pi",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_integrator.TestSourceConstFlux1D": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_integrator.TestSourceConstFlux1D.setup_class": {
  "lineno": 32,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.FLAM",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.ph",
   "astropy.units.s",
   "numpy.arange"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator.TestSourceConstFlux1D.test_integrate": {
  "lineno": 38,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.Jy",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator.TestSourceConstFlux1D.test_integrate_freq_space": {
  "lineno": 62,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.Hz",
   "astropy.units.Jy",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator.TestSourceConstFlux1D.test_integrate_wontfix": {
  "lineno": 52,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator.test_bandpass_Const1D": {
  "lineno": 85,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "numpy.arange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator.test_bandpass_Gaussian1D": {
  "lineno": 109,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator.test_bandpass_Lorentz1D": {
  "lineno": 123,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator.test_bandpass_RickerWavelet1D": {
  "lineno": 148,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "numpy.arange",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator.test_bandpass_Trapezoid1D": {
  "lineno": 174,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator.test_source_Lorentz1D": {
  "lineno": 130,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.ph",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator.test_source_RickerWavelet1D": {
  "lineno": 169,
  "symbols_in_volume": [
   "pytest.xfail"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator.test_trapz_box1d": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.tests.test_models": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_models.TestBlackBody1D": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_models.TestBlackBody1D.setup_class": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_models.TestBlackBody1D.test_eval": {
  "lineno": 64,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestBlackBody1D.test_lambda_max": {
  "lineno": 56,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestBlackBody1D.test_multi_n_models": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestBlackBody1D.test_sampleset": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_models.TestConstFlux1D.setup_class": {
  "lineno": 81,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D.test_invalid_units": {
  "lineno": 115,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.OBMAG",
   "astropy.units.VEGAMAG",
   "astropy.units.count",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D.test_linear": {
  "lineno": 84,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.Jy",
   "astropy.units.PHOTLAM",
   "astropy.units.PHOTNU",
   "astropy.units.Quantity",
   "astropy.units.convert_flux",
   "astropy.units.mJy",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D.test_mag": {
  "lineno": 102,
  "symbols_in_volume": [
   "astropy.units.ABmag",
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.PHOTLAM",
   "astropy.units.STmag",
   "astropy.units.convert_flux",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D.test_multi_n_models": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_models.TestEmpirical1D.setup_class": {
  "lineno": 124,
  "symbols_in_volume": [
   "astropy.units.PHOTLAM",
   "astropy.units.convert_flux",
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_eval": {
  "lineno": 136,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.convert_flux",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_extrap": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_neg_array": {
  "lineno": 164,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_neg_scalar": {
  "lineno": 179,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_sampleset": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_taper": {
  "lineno": 194,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.setup_class": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_eval": {
  "lineno": 221,
  "symbols_in_volume": [
   "astropy.units.PHOTLAM",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_invalid_units": {
  "lineno": 251,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.OBMAG",
   "astropy.units.VEGAMAG",
   "astropy.units.count",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_multi_n_models": {
  "lineno": 232,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.PHOTLAM",
   "astropy.units.convert_flux",
   "astropy.units.micron",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_normalization": {
  "lineno": 229,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_valid_mag": {
  "lineno": 245,
  "symbols_in_volume": [
   "astropy.units.ABmag",
   "astropy.units.STmag",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.setup_module": {
  "lineno": 33,
  "symbols_in_volume": [
   "astropy.constants.astropyconst13.h",
   "astropy.constants.astropyconst13.k_B",
   "astropy.constants.astropyconst13.sigma_sb",
   "astropy.constants.h",
   "astropy.constants.k_B",
   "astropy.constants.si.h",
   "astropy.constants.si.k_B",
   "astropy.constants.si.sigma_sb",
   "astropy.constants.sigma_sb"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.teardown_module": {
  "lineno": 42,
  "symbols_in_volume": [
   "astropy.constants.astropyconst20.h",
   "astropy.constants.astropyconst20.k_B",
   "astropy.constants.astropyconst20.sigma_sb",
   "astropy.constants.h",
   "astropy.constants.k_B",
   "astropy.constants.si.h",
   "astropy.constants.si.k_B",
   "astropy.constants.si.sigma_sb",
   "astropy.constants.sigma_sb"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.test_get_metadata": {
  "lineno": 258,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "module"
 },
 "synphot.tests.test_observation.TestCountRate": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_observation.TestCountRate.setup_class": {
  "lineno": 349,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.PHOTLAM",
   "astropy.units.convert_flux",
   "astropy.units.count",
   "numpy.arange"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRate.test_disjoint_waverange": {
  "lineno": 406,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRate.test_force": {
  "lineno": 390,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRate.test_spectrum1d_source": {
  "lineno": 361,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.count",
   "astropy.units.s",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRate.test_waverange": {
  "lineno": 369,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.count",
   "astropy.units.s",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRate.test_waverange_no_bin": {
  "lineno": 380,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRateNegFlux": {
  "lineno": 411,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_observation.TestCountRateNegFlux.setup_class": {
  "lineno": 413,
  "symbols_in_volume": [
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRateNegFlux.test_neg_handling": {
  "lineno": 418,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestInitWithForce": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_observation.TestInitWithForce.setup_class": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestInitWithForce.test_exceptions": {
  "lineno": 182,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestInitWithForce.test_force": {
  "lineno": 169,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "pytest.mark.parametrize",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestMathOperators": {
  "lineno": 189,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_observation.TestMathOperators.setup_class": {
  "lineno": 191,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestMathOperators.test_addsub": {
  "lineno": 213,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestMathOperators.test_div": {
  "lineno": 209,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestMathOperators.test_mul": {
  "lineno": 197,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar": {
  "lineno": 220,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_observation.TestObsPar.setup_class": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_avglam": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_barlam": {
  "lineno": 235,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_efflam": {
  "lineno": 250,
  "symbols_in_volume": [
   "astropy.tests.helper.catch_warnings",
   "astropy.utils.exceptions.AstropyDeprecationWarning",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_efflam_erg": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_efflam_exception": {
  "lineno": 265,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim": {
  "lineno": 271,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.Jy",
   "astropy.units.PHOTLAM",
   "astropy.units.PHOTNU",
   "astropy.units.mJy",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_analytic": {
  "lineno": 320,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_count": {
  "lineno": 285,
  "symbols_in_volume": [
   "astropy.units.OBMAG",
   "astropy.units.count",
   "numpy.log10",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_exceptions": {
  "lineno": 335,
  "symbols_in_volume": [
   "astropy.units.VEGAMAG",
   "astropy.units.mag",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_mag": {
  "lineno": 310,
  "symbols_in_volume": [
   "astropy.units.ABmag",
   "astropy.units.STmag",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_vegamag": {
  "lineno": 327,
  "symbols_in_volume": [
   "astropy.units.VEGAMAG",
   "numpy.testing.assert_allclose",
   "pytest.mark.remote_data"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_normalize": {
  "lineno": 244,
  "symbols_in_volume": [
   "astropy.units.PHOTLAM",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_pivot": {
  "lineno": 240,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_observation.TestObservation.setup_class": {
  "lineno": 38,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "numpy.arange",
   "numpy.float64"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_as_spectrum": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_binned_data": {
  "lineno": 69,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.PHOTLAM",
   "astropy.units.nm",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_binned_pixelrange": {
  "lineno": 126,
  "symbols_in_volume": [
   "astropy.units.nm"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_binned_waverange": {
  "lineno": 118,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.nm",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_default_binset_from_bandpass": {
  "lineno": 130,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_default_binset_from_spectrum": {
  "lineno": 134,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_array_equal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_disjoint_spec": {
  "lineno": 57,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_inherit_warnings": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_invalid_input_spec": {
  "lineno": 47,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_reversed_binset": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_sampled_binned_exceptions": {
  "lineno": 112,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_taper": {
  "lineno": 65,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_undefined_binset": {
  "lineno": 145,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.test_countrate_neg_leak": {
  "lineno": 436,
  "symbols_in_volume": [
   "astropy.utils.data.get_pkg_data_filename",
   "numpy.fromfile",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_reddening.TestExtinction": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_reddening.TestExtinction.setup_class": {
  "lineno": 32,
  "symbols_in_volume": [
   "astropy.units.mag",
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_extcurve_call": {
  "lineno": 52,
  "symbols_in_volume": [
   "astropy.units.AA",
   "numpy.squeeze",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_extcurve_call_2": {
  "lineno": 61,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.micron",
   "dust_extinction.parameter_averages.CCM89",
   "numpy.arange",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_invalid_ebv": {
  "lineno": 38,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_mul_spec": {
  "lineno": 77,
  "symbols_in_volume": [
   "astropy.units.micron",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_qso_countrate": {
  "lineno": 88,
  "symbols_in_volume": [
   "astropy.units.STmag",
   "astropy.units.mag",
   "astropy.utils.data.get_pkg_data_filename",
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_allclose",
   "os.path.join",
   "pytest.warns"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_redlaw_call": {
  "lineno": 42,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.add_enabled_equivalencies",
   "astropy.units.micron",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestWriteReddeningLaw": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_reddening.TestWriteReddeningLaw.setup_class": {
  "lineno": 158,
  "symbols_in_volume": [
   "numpy.linspace",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestWriteReddeningLaw.teardown_class": {
  "lineno": 183,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestWriteReddeningLaw.test_write": {
  "lineno": 165,
  "symbols_in_volume": [
   "astropy.io.fits.getheader",
   "numpy.testing.assert_allclose",
   "os.path.join",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.test_etau_madau": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.test_etau_madau_exceptions": {
  "lineno": 122,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.test_redlaw_from_model": {
  "lineno": 134,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.mark.remote_data"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.test_redlaw_from_model_exception": {
  "lineno": 151,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_specio": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_specio.TestReadWriteFITS": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.setup_class": {
  "lineno": 56,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.PHOTLAM",
   "numpy.array",
   "numpy.float64",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.teardown_class": {
  "lineno": 152,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.test_array_data": {
  "lineno": 66,
  "symbols_in_volume": [
   "astropy.io.fits.getheader",
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_allclose",
   "os.path.join",
   "pytest.warns"
  ],
  "type": "function"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.test_exceptions": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "os.path.join",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.test_quantity_data": {
  "lineno": 98,
  "symbols_in_volume": [
   "astropy.io.fits.getheader",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_specio.test_read_ascii_spec": {
  "lineno": 41,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.FLAM",
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_specio.test_read_remote_spec": {
  "lineno": 24,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "pytest.mark.remote_data"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_spectrum_bandpass.TestBoxBandpass": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_bandpass.TestBoxBandpass.setup_class": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestBoxBandpass.test_conversion": {
  "lineno": 178,
  "symbols_in_volume": [
   "astropy.units.nm",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestBoxBandpass.test_eval": {
  "lineno": 173,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestBoxBandpass.test_fwhm": {
  "lineno": 184,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestBoxBandpass.test_integrate": {
  "lineno": 195,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestBoxBandpass.test_multi_n_models": {
  "lineno": 205,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestBoxBandpass.test_taper": {
  "lineno": 190,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.nm",
   "numpy.arange"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestBuildModelsBandpass": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_bandpass.TestBuildModelsBandpass.test_GaussianAbsorption1D": {
  "lineno": 215,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.setup_class": {
  "lineno": 53,
  "symbols_in_volume": [
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_avgwave": {
  "lineno": 80,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_barlam": {
  "lineno": 85,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_call": {
  "lineno": 63,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_emflx": {
  "lineno": 162,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.FLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_equivwidth": {
  "lineno": 148,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_fwhm": {
  "lineno": 115,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.dimensionless_unscaled",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_integrate": {
  "lineno": 71,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_invalid_flux_unit": {
  "lineno": 58,
  "symbols_in_volume": [
   "astropy.units.UnitsError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_pivot": {
  "lineno": 90,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_qtlam": {
  "lineno": 158,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_rectw": {
  "lineno": 153,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_rmswidth": {
  "lineno": 100,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.dimensionless_unscaled",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_tlambda": {
  "lineno": 135,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_tpeak": {
  "lineno": 139,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_uresp": {
  "lineno": 95,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.FLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestEmpiricalBandpassFromFile.test_wpeak": {
  "lineno": 144,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestSpecutilsBridgeBandpass": {
  "lineno": 223,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_spectrum_bandpass.TestSpecutilsBridgeBandpass.test_from_spectrum1d_Empirical1D_bandpass": {
  "lineno": 225,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.THROUGHPUT",
   "astropy.utils.exceptions.AstropyUserWarning",
   "pytest.warns",
   "specutils.Spectrum1D"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestSpecutilsBridgeBandpass.test_from_spectrum1d_Empirical1D_bandpass_masked": {
  "lineno": 240,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.THROUGHPUT",
   "numpy.array",
   "specutils.Spectrum1D"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestSpecutilsBridgeBandpass.test_to_spectrum1d_Const1D": {
  "lineno": 263,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.nm",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestSpecutilsBridgeBandpass.test_to_spectrum1d_Empirical1D_bandpass": {
  "lineno": 254,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.TestSpecutilsBridgeBandpass.test_to_spectrum1d_compound_bandpass": {
  "lineno": 277,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "specutils.analysis.line_flux"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.test_filter": {
  "lineno": 26,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.mark.remote_data"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_bandpass.test_filter_exception": {
  "lineno": 45,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_spectrum_misc.TestCheckOverlap": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_misc.TestCheckOverlap.setup_class": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestCheckOverlap.test_exceptions": {
  "lineno": 101,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestCheckOverlap.test_full": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestCheckOverlap.test_none": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestCheckOverlap.test_partial_most": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestCheckOverlap.test_partial_notmost": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestCheckOverlap.test_special_cases": {
  "lineno": 90,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestForceExtrap": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_misc.TestForceExtrap.test_analytical": {
  "lineno": 122,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestForceExtrap.test_empirical": {
  "lineno": 110,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestMathOperators": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_misc.TestMathOperators.setup_class": {
  "lineno": 225,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.nm"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestMathOperators.test_bandpass_addsub": {
  "lineno": 326,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestMathOperators.test_bandpass_mul_div_bandpass": {
  "lineno": 352,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestMathOperators.test_bandpass_mul_div_exceptions": {
  "lineno": 361,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestMathOperators.test_bandpass_mul_div_exceptions.DummyObject": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_misc.TestMathOperators.test_bandpass_mul_div_scalar": {
  "lineno": 337,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.Quantity",
   "astropy.units.dimensionless_unscaled",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestMathOperators.test_source_add": {
  "lineno": 236,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestMathOperators.test_source_addsub_circular": {
  "lineno": 254,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestMathOperators.test_source_addsub_exception": {
  "lineno": 259,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestMathOperators.test_source_mul_div_exceptions": {
  "lineno": 309,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestMathOperators.test_source_mul_div_scalar": {
  "lineno": 263,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM",
   "astropy.units.Quantity",
   "astropy.units.dimensionless_unscaled",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestMathOperators.test_source_mul_div_spec": {
  "lineno": 284,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM",
   "astropy.units.dimensionless_unscaled",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestMathOperators.test_source_sub": {
  "lineno": 244,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestWaveset": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_misc.TestWaveset.test_box1d": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestWaveset.test_complicated_tree": {
  "lineno": 193,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestWaveset.test_composite": {
  "lineno": 166,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestWaveset.test_composite_none": {
  "lineno": 160,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestWaveset.test_exceptions": {
  "lineno": 218,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestWaveset.test_none": {
  "lineno": 135,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestWaveset.test_redshift": {
  "lineno": 180,
  "symbols_in_volume": [
   "astropy.modeling.models.RedshiftScaleFactor",
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestWaveset.test_redshift_none": {
  "lineno": 189,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestWaveset.test_sampleset": {
  "lineno": 139,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestWriteSpec": {
  "lineno": 382,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_misc.TestWriteSpec.setup_class": {
  "lineno": 384,
  "symbols_in_volume": [
   "numpy.ones",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestWriteSpec.teardown_class": {
  "lineno": 422,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.TestWriteSpec.test_write": {
  "lineno": 393,
  "symbols_in_volume": [
   "astropy.io.fits.getheader",
   "numpy.testing.assert_allclose",
   "os.path.join",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.setup_module": {
  "lineno": 28,
  "symbols_in_volume": [
   "astropy.constants.astropyconst13.h",
   "astropy.constants.h",
   "astropy.constants.si.h"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_misc.teardown_module": {
  "lineno": 35,
  "symbols_in_volume": [
   "astropy.constants.astropyconst20.h",
   "astropy.constants.astropyconst40.h",
   "astropy.constants.h",
   "astropy.constants.si.h"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_spectrum_source.TestBlackBodySource": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_source.TestBlackBodySource.setup_class": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestBlackBodySource.test_eval": {
  "lineno": 183,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM",
   "numpy.arange"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestBlackBodySource.test_integrate": {
  "lineno": 193,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.ph",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestBlackBodySource.test_integrate_fixme": {
  "lineno": 204,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.cm",
   "astropy.units.ph",
   "astropy.units.s",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestBuildModelsSource": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_source.TestBuildModelsSource.test_BrokenPowerLaw1D": {
  "lineno": 333,
  "symbols_in_volume": [
   "astropy.modeling.models.BrokenPowerLaw1D",
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestBuildModelsSource.test_Const1D": {
  "lineno": 340,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestBuildModelsSource.test_ConstFlux1D": {
  "lineno": 345,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.Jy",
   "astropy.units.add_enabled_equivalencies",
   "astropy.units.spectral_density"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestBuildModelsSource.test_ExponentialCutoffPowerLaw1D": {
  "lineno": 351,
  "symbols_in_volume": [
   "astropy.modeling.models.ExponentialCutoffPowerLaw1D",
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestBuildModelsSource.test_LogParabola1D": {
  "lineno": 359,
  "symbols_in_volume": [
   "astropy.modeling.models.LogParabola1D",
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestBuildModelsSource.test_Lorentz1D": {
  "lineno": 365,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestBuildModelsSource.test_PowerLaw1D": {
  "lineno": 377,
  "symbols_in_volume": [
   "astropy.modeling.models.PowerLaw1D",
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestBuildModelsSource.test_RickerWavelet1D": {
  "lineno": 371,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestEmpiricalSourceFromFile": {
  "lineno": 91,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_source.TestEmpiricalSourceFromFile.setup_class": {
  "lineno": 93,
  "symbols_in_volume": [
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestEmpiricalSourceFromFile.test_call": {
  "lineno": 120,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.FLAM",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestEmpiricalSourceFromFile.test_conversion": {
  "lineno": 138,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.FNU",
   "astropy.units.micron"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestEmpiricalSourceFromFile.test_integrate": {
  "lineno": 145,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.FLAM",
   "astropy.units.Jy",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestEmpiricalSourceFromFile.test_invalid_flux_unit": {
  "lineno": 98,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestEmpiricalSourceFromFile.test_invalid_models": {
  "lineno": 103,
  "symbols_in_volume": [
   "astropy.io.fits.HDUList",
   "astropy.modeling.models.RedshiftScaleFactor",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestEmpiricalSourceFromFile.test_metadata": {
  "lineno": 112,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestEmpiricalSourceFromFile.test_neg_flux": {
  "lineno": 129,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_array_equal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestEmpiricalSourceFromFile.test_taper": {
  "lineno": 161,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.FLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestGaussianSource": {
  "lineno": 212,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_source.TestGaussianSource.setup_class": {
  "lineno": 214,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestGaussianSource.test_alt_source": {
  "lineno": 261,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestGaussianSource.test_eval": {
  "lineno": 219,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestGaussianSource.test_fwhm": {
  "lineno": 254,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestGaussianSource.test_symmetry": {
  "lineno": 251,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestGaussianSource.test_totalflux": {
  "lineno": 224,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.FLAM",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.nm",
   "astropy.units.ph",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestNormalize": {
  "lineno": 383,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_source.TestNormalize._compare_countrate": {
  "lineno": 412,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.ct",
   "astropy.units.s",
   "astropy.utils.exceptions.AstropyUserWarning",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestNormalize._select_sp": {
  "lineno": 403,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestNormalize.setup_class": {
  "lineno": 385,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestNormalize.test_exceptions": {
  "lineno": 500,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "astropy.units.VEGAMAG",
   "astropy.units.ct",
   "numpy.ones",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestNormalize.test_renorm_density": {
  "lineno": 426,
  "symbols_in_volume": [
   "astropy.units.ABmag",
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.Jy",
   "astropy.units.PHOTNU",
   "astropy.units.STmag",
   "astropy.units.mJy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestNormalize.test_renorm_noband_jy": {
  "lineno": 471,
  "symbols_in_volume": [
   "astropy.units.Jy",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestNormalize.test_renorm_nondensity": {
  "lineno": 449,
  "symbols_in_volume": [
   "astropy.units.OBMAG",
   "astropy.units.count",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestNormalize.test_renorm_partial_most": {
  "lineno": 490,
  "symbols_in_volume": [
   "astropy.units.Jy",
   "astropy.utils.exceptions.AstropyUserWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestNormalize.test_renorm_partial_notmost": {
  "lineno": 476,
  "symbols_in_volume": [
   "astropy.units.Jy",
   "astropy.utils.exceptions.AstropyUserWarning",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestNormalize.test_renorm_vegamag": {
  "lineno": 460,
  "symbols_in_volume": [
   "astropy.units.VEGAMAG",
   "pytest.mark.parametrize",
   "pytest.mark.remote_data"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestPowerLawSource": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_source.TestPowerLawSource.setup_class": {
  "lineno": 283,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.PHOTLAM",
   "numpy.arange"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestPowerLawSource.test_eval": {
  "lineno": 295,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestPowerLawSource.test_integrate": {
  "lineno": 307,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.ph",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestPowerLawSource.test_integrate_wontfix": {
  "lineno": 319,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestPowerLawSource.test_no_default_wave": {
  "lineno": 288,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestPowerLawSource.test_normalization": {
  "lineno": 304,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM",
   "astropy.units.nm"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestRedShift": {
  "lineno": 520,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum_source.TestRedShift.setup_class": {
  "lineno": 526,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestRedShift.test_composite_redshift": {
  "lineno": 552,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestRedShift.test_conserve_flux_redshift": {
  "lineno": 563,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestRedShift.test_const_flux_redshift": {
  "lineno": 557,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.Jy"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestRedShift.test_property": {
  "lineno": 536,
  "symbols_in_volume": [
   "astropy.modeling.core.CompoundModel",
   "astropy.modeling.core._CompoundModel",
   "astropy.units.AA",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestSpecutilsBridgeSource": {
  "lineno": 572,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_spectrum_source.TestSpecutilsBridgeSource.test_from_spectrum1d_Empirical1D_source": {
  "lineno": 574,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.FLAM",
   "astropy.utils.exceptions.AstropyUserWarning",
   "pytest.warns",
   "specutils.Spectrum1D"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestSpecutilsBridgeSource.test_from_spectrum1d_Empirical1D_source_masked": {
  "lineno": 598,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.FLAM",
   "numpy.array",
   "specutils.Spectrum1D"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestSpecutilsBridgeSource.test_to_spectrum1d_ConstFlux1D": {
  "lineno": 649,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.PHOTLAM",
   "astropy.units.nm",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestSpecutilsBridgeSource.test_to_spectrum1d_Empirical1D_source": {
  "lineno": 612,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.count",
   "astropy.units.nJy",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestSpecutilsBridgeSource.test_to_spectrum1d_GaussianFlux1D": {
  "lineno": 634,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.FLAM",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "specutils.analysis.gaussian_fwhm"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.TestSpecutilsBridgeSource.test_to_spectrum1d_compound_source": {
  "lineno": 664,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.FLAM",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.nm",
   "astropy.units.s",
   "specutils.analysis.line_flux"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.setup_module": {
  "lineno": 38,
  "symbols_in_volume": [
   "astropy.constants.astropyconst13.h",
   "astropy.constants.astropyconst13.k_B",
   "astropy.constants.astropyconst13.sigma_sb",
   "astropy.constants.h",
   "astropy.constants.k_B",
   "astropy.constants.si.h",
   "astropy.constants.si.k_B",
   "astropy.constants.si.sigma_sb",
   "astropy.constants.sigma_sb"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.teardown_module": {
  "lineno": 47,
  "symbols_in_volume": [
   "astropy.constants.astropyconst20.h",
   "astropy.constants.astropyconst20.k_B",
   "astropy.constants.astropyconst20.sigma_sb",
   "astropy.constants.astropyconst40.h",
   "astropy.constants.astropyconst40.k_B",
   "astropy.constants.astropyconst40.sigma_sb",
   "astropy.constants.h",
   "astropy.constants.k_B",
   "astropy.constants.si.h",
   "astropy.constants.si.k_B",
   "astropy.constants.si.sigma_sb",
   "astropy.constants.sigma_sb"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.test_flux_conversion_vega": {
  "lineno": 69,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.Jy",
   "astropy.units.PHOTLAM",
   "astropy.units.VEGAMAG",
   "astropy.units.convert_flux",
   "pytest.mark.parametrize",
   "pytest.mark.remote_data"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.test_gaussian_source_watts": {
  "lineno": 270,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.FLAM",
   "astropy.units.W",
   "astropy.units.m",
   "astropy.units.um"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum_source.test_load_vspec": {
  "lineno": 62,
  "symbols_in_volume": [
   "pytest.mark.remote_data"
  ],
  "type": "function"
 },
 "synphot.tests.test_thermal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.setup_class": {
  "lineno": 40,
  "symbols_in_volume": [
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.test_from_file_exceptions": {
  "lineno": 62,
  "symbols_in_volume": [
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.test_properties": {
  "lineno": 49,
  "symbols_in_volume": [
   "astropy.units.K"
  ],
  "type": "function"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.test_taper": {
  "lineno": 45,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.test_thermal_source": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_thermal.setup_module": {
  "lineno": 20,
  "symbols_in_volume": [
   "astropy.constants.astropyconst13.h",
   "astropy.constants.astropyconst13.k_B",
   "astropy.constants.astropyconst13.sigma_sb",
   "astropy.constants.h",
   "astropy.constants.k_B",
   "astropy.constants.si.h",
   "astropy.constants.si.k_B",
   "astropy.constants.si.sigma_sb",
   "astropy.constants.sigma_sb"
  ],
  "type": "function"
 },
 "synphot.tests.test_thermal.teardown_module": {
  "lineno": 29,
  "symbols_in_volume": [
   "astropy.constants.astropyconst20.h",
   "astropy.constants.astropyconst20.k_B",
   "astropy.constants.astropyconst20.sigma_sb",
   "astropy.constants.h",
   "astropy.constants.k_B",
   "astropy.constants.si.h",
   "astropy.constants.si.k_B",
   "astropy.constants.si.sigma_sb",
   "astropy.constants.sigma_sb"
  ],
  "type": "function"
 },
 "synphot.tests.test_units": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.ABmag",
   "astropy.units.AREA",
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.Hz",
   "astropy.units.Jy",
   "astropy.units.OBMAG",
   "astropy.units.PHOTLAM",
   "astropy.units.PHOTNU",
   "astropy.units.STmag",
   "astropy.units.VEGAMAG",
   "astropy.units.count",
   "astropy.units.micron"
  ],
  "type": "module"
 },
 "synphot.tests.test_units.test_flux_conversion": {
  "lineno": 119,
  "symbols_in_volume": [
   "astropy.units.ABmag",
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.Jy",
   "astropy.units.OBMAG",
   "astropy.units.PHOTLAM",
   "astropy.units.PHOTNU",
   "astropy.units.STmag",
   "astropy.units.convert_flux",
   "astropy.units.count",
   "astropy.units.mJy",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_units.test_flux_conversion_exceptions": {
  "lineno": 162,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.PHOTLAM",
   "astropy.units.UnitsError",
   "astropy.units.VEGAMAG",
   "astropy.units.convert_flux",
   "astropy.units.count",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_units.test_implicit_assumptions": {
  "lineno": 41,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.AREA.physical_type",
   "astropy.units.HC.unit",
   "astropy.units.SR_PER_ARCSEC2",
   "astropy.units.THROUGHPUT.physical_type",
   "astropy.units.erg",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_units.test_validate_quantity": {
  "lineno": 92,
  "symbols_in_volume": [
   "astropy.units.AREA",
   "astropy.units.m",
   "astropy.units.micron",
   "astropy.units.spectral",
   "astropy.units.validate_quantity",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_units.test_validate_unit": {
  "lineno": 49,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.ABmag",
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.K",
   "astropy.units.OBMAG",
   "astropy.units.PHOTLAM",
   "astropy.units.PHOTNU",
   "astropy.units.STmag",
   "astropy.units.THROUGHPUT",
   "astropy.units.VEGAMAG",
   "astropy.units.m",
   "astropy.units.micron",
   "astropy.units.validate_unit",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_units.test_validate_unit_exceptions": {
  "lineno": 82,
  "symbols_in_volume": [
   "astropy.units.validate_unit",
   "astropy.units.validate_wave_unit",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_units.test_validate_wave_unit": {
  "lineno": 72,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Hz",
   "astropy.units.micron",
   "astropy.units.validate_wave_unit",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_units.test_wave_conversion": {
  "lineno": 104,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Hz",
   "astropy.units.micron",
   "astropy.units.spectral",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_utils.TestMergeWave": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_utils.TestMergeWave.setup_class": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_utils.TestMergeWave.test_merge_none": {
  "lineno": 98,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.TestMergeWave.test_merge_same": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.TestMergeWave.test_merge_thres": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.test_download_bad_root": {
  "lineno": 119,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.test_download_data": {
  "lineno": 132,
  "symbols_in_volume": [
   "os.path.isdir",
   "os.path.join",
   "os.remove"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.test_download_data_cache_only": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_utils.test_genwave": {
  "lineno": 73,
  "symbols_in_volume": [
   "astropy.units.micron",
   "numpy.arange",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.test_overlap_status": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.test_validate_totalflux": {
  "lineno": 31,
  "symbols_in_volume": [
   "astropy.units.FLAM"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.test_validate_totalflux_invalid": {
  "lineno": 37,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.Jy",
   "astropy.units.PHOTLAM",
   "numpy.inf",
   "numpy.nan",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.test_validate_wavelengths": {
  "lineno": 49,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.micron",
   "numpy.arange",
   "numpy.testing.assert_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.thermal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.thermal.ThermalSpectralElement": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.thermal.ThermalSpectralElement.__init__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.beam_fill_factor": {
  "lineno": 62,
  "symbols_in_volume": [
   "astropy.units.validate_quantity"
  ],
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.from_file": {
  "lineno": 94,
  "symbols_in_volume": [
   "astropy.io.fits.getheader"
  ],
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.taper": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.temperature": {
  "lineno": 52,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.validate_quantity"
  ],
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.thermal_source": {
  "lineno": 72,
  "symbols_in_volume": [
   "astropy.units.SR_PER_ARCSEC2"
  ],
  "type": "function"
 },
 "synphot.units": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.constants.c.to",
   "astropy.constants.h.cgs",
   "astropy.units.AA",
   "astropy.units.Hz",
   "astropy.units.add_enabled_units",
   "astropy.units.arcsec",
   "astropy.units.cm",
   "astropy.units.def_unit",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.erg",
   "astropy.units.mag",
   "astropy.units.photon",
   "astropy.units.rad.to",
   "astropy.units.s"
  ],
  "type": "module"
 },
 "synphot.units._convert_flux": {
  "lineno": 259,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.UnitsError",
   "astropy.units.count"
  ],
  "type": "function"
 },
 "synphot.units.convert_flux": {
  "lineno": 169,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "astropy.units.UnitConversionError",
   "astropy.units.spectral_density"
  ],
  "type": "function"
 },
 "synphot.units.spectral_density_count": {
  "lineno": 128,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.count",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.units.spectral_density_count.converter_count": {
  "lineno": 153,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.units.spectral_density_count.converter_obmag": {
  "lineno": 159,
  "symbols_in_volume": [
   "numpy.log10"
  ],
  "type": "function"
 },
 "synphot.units.spectral_density_count.iconverter_count": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.units.spectral_density_count.iconverter_obmag": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.units.spectral_density_integrated": {
  "lineno": 68,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.photon",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "synphot.units.spectral_density_integrated.converter_phot_f_la_to_f_la": {
  "lineno": 80,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.units.spectral_density_integrated.iconverter_phot_f_la_to_f_la": {
  "lineno": 83,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.units.spectral_density_vega": {
  "lineno": 90,
  "symbols_in_volume": [
   "astropy.units.spectral_density"
  ],
  "type": "function"
 },
 "synphot.units.spectral_density_vega.converter": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64",
   "numpy.isfinite",
   "numpy.log10",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "synphot.units.spectral_density_vega.iconverter": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.units.validate_quantity": {
  "lineno": 382,
  "symbols_in_volume": [
   "astropy.units.Quantity"
  ],
  "type": "function"
 },
 "synphot.units.validate_unit": {
  "lineno": 306,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.ABmag",
   "astropy.units.Jy",
   "astropy.units.LogUnit",
   "astropy.units.STmag",
   "astropy.units.Unit",
   "astropy.units.UnitBase",
   "astropy.units.micron"
  ],
  "type": "function"
 },
 "synphot.units.validate_wave_unit": {
  "lineno": 369,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.utils.download_data": {
  "lineno": 255,
  "symbols_in_volume": [
   "astropy.config.ConfigItem",
   "astropy.utils.data.download_file",
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists",
   "os.path.isdir",
   "os.sep",
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "synphot.utils.generate_wavelengths": {
  "lineno": 142,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.validate_unit",
   "numpy.arange",
   "numpy.float64",
   "numpy.linspace",
   "numpy.log10",
   "numpy.logspace"
  ],
  "type": "function"
 },
 "synphot.utils.merge_wavelengths": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.union1d",
   "numpy.where"
  ],
  "type": "function"
 },
 "synphot.utils.overlap_status": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.utils.validate_totalflux": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.isinf",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "synphot.utils.validate_wavelengths": {
  "lineno": 76,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.validate_wave_unit",
   "numpy.alltrue",
   "numpy.any",
   "numpy.asarray",
   "numpy.isscalar",
   "numpy.sort",
   "numpy.where"
  ],
  "type": "function"
 },
 "synphot.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 }
}