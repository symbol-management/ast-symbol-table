{
 "*": {
  "data": {
   "imports": [
    "astropy.tests.pytest_plugins"
   ]
  },
  "type": "star-import"
 },
 "synphot": {
  "data": {},
  "type": "module"
 },
 "synphot._astropy_init": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "NameError",
    "TypeError",
    "__package__",
    "astropy.config.configuration.ConfigurationDefaultMissingError",
    "astropy.config.configuration.ConfigurationDefaultMissingWarning",
    "astropy.config.configuration.update_default_config",
    "astropy.tests.runner.TestRunner.make_test_runner_in",
    "synphot._astropy_init.__all__",
    "synphot._astropy_init.builtins",
    "synphot._astropy_init.config_dir",
    "synphot._astropy_init.config_template",
    "synphot._astropy_init.os",
    "synphot._astropy_init.test",
    "synphot._astropy_init.wmsg",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "synphot._astropy_init.ConfigurationDefaultMissingError": {
  "data": {
   "shadows": "astropy.config.configuration.ConfigurationDefaultMissingError"
  },
  "type": "import"
 },
 "synphot._astropy_init.ConfigurationDefaultMissingWarning": {
  "data": {
   "shadows": "astropy.config.configuration.ConfigurationDefaultMissingWarning"
  },
  "type": "import"
 },
 "synphot._astropy_init.TestRunner": {
  "data": {
   "shadows": "astropy.tests.runner.TestRunner"
  },
  "type": "import"
 },
 "synphot._astropy_init.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "synphot._astropy_init.__githash__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "synphot._astropy_init.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "synphot._astropy_init.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "synphot._astropy_init.config_dir": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "synphot._astropy_init.config_template": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "synphot._astropy_init.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "synphot._astropy_init.test": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "synphot._astropy_init.update_default_config": {
  "data": {
   "shadows": "astropy.config.configuration.update_default_config"
  },
  "type": "import"
 },
 "synphot._astropy_init.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "synphot._astropy_init.wmsg": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "synphot.binning": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "synphot.binning._slow_calcbinflux"
   ]
  },
  "type": "module"
 },
 "synphot.binning.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "synphot.binning._slow_calcbinflux": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "numpy.float64",
    "numpy.sum",
    "range"
   ]
  },
  "type": "function"
 },
 "synphot.binning.calcbinflux": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "synphot.binning.calculate_bin_centers": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.Quantity",
    "isinstance",
    "numpy.empty",
    "numpy.float64",
    "range"
   ]
  },
  "type": "function"
 },
 "synphot.binning.calculate_bin_edges": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.Quantity",
    "isinstance",
    "numpy.empty",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "synphot.binning.calculate_bin_widths": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.Quantity",
    "isinstance",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "synphot.binning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.binning.pixel_range": {
  "data": {
   "lineno": 361
  },
  "type": "function"
 },
 "synphot.binning.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.binning.wave_range": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "float",
    "int",
    "isinstance",
    "numpy.abs",
    "numpy.argmin",
    "numpy.modf"
   ]
  },
  "type": "function"
 },
 "synphot.compat": {
  "data": {
   "symbols_in_volume": [
    "astropy.utils.introspection.minversion",
    "synphot.compat.astropy"
   ]
  },
  "type": "module"
 },
 "synphot.compat.ASTROPY_LT_2_0": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "synphot.compat.ASTROPY_LT_4_0": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "synphot.compat.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "synphot.compat.astropy": {
  "data": {
   "shadows": "astropy"
  },
  "type": "import"
 },
 "synphot.compat.minversion": {
  "data": {
   "shadows": "astropy.utils.introspection.minversion"
  },
  "type": "import"
 },
 "synphot.config": {
  "data": {
   "symbols_in_volume": [
    "synphot.config.Conf"
   ]
  },
  "type": "module"
 },
 "synphot.config.Conf": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.config.ConfigItem",
    "astropy.config.ConfigNamespace"
   ]
  },
  "type": "class"
 },
 "synphot.config.ConfigItem": {
  "data": {
   "shadows": "astropy.config.ConfigItem"
  },
  "type": "import"
 },
 "synphot.config.ConfigNamespace": {
  "data": {
   "shadows": "astropy.config.ConfigNamespace"
  },
  "type": "import"
 },
 "synphot.config.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "synphot.config.conf": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "synphot.conftest": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "NameError",
    "astropy.tests.helper.enable_deprecations_as_exceptions",
    "astropy.tests.plugins.display.PYTEST_HEADER_MODULES",
    "astropy.tests.plugins.display.TESTED_VERSIONS",
    "astropy.version.version",
    "synphot.conftest.os",
    "synphot.conftest.packagename"
   ]
  },
  "type": "module"
 },
 "synphot.conftest.PYTEST_HEADER_MODULES": {
  "data": {
   "shadows": "astropy.tests.plugins.display.PYTEST_HEADER_MODULES"
  },
  "type": "import"
 },
 "synphot.conftest.TESTED_VERSIONS": {
  "data": {
   "shadows": "astropy.tests.plugins.display.TESTED_VERSIONS"
  },
  "type": "import"
 },
 "synphot.conftest.astropy_version": {
  "data": {
   "shadows": "astropy.version.version"
  },
  "type": "import"
 },
 "synphot.conftest.enable_deprecations_as_exceptions": {
  "data": {
   "shadows": "astropy.tests.helper.enable_deprecations_as_exceptions"
  },
  "type": "import"
 },
 "synphot.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "synphot.conftest.packagename": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "synphot.conftest.version": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "synphot.cython_version": {
  "data": {},
  "type": "module"
 },
 "synphot.cython_version.cython_version": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "synphot.docstrings": {
  "data": {},
  "type": "module"
 },
 "synphot.docstrings.calcbinflux": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "synphot.exceptions": {
  "data": {},
  "type": "module"
 },
 "synphot.exceptions.DisjointError": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "synphot.exceptions.OverlapError"
   ]
  },
  "type": "class"
 },
 "synphot.exceptions.DuplicateWavelength": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "synphot.exceptions.TableFormatError"
   ]
  },
  "type": "class"
 },
 "synphot.exceptions.ExtrapolationNotAllowed": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "synphot.exceptions.SynphotError"
   ]
  },
  "type": "class"
 },
 "synphot.exceptions.IncompatibleSources": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "synphot.exceptions.SynphotError"
   ]
  },
  "type": "class"
 },
 "synphot.exceptions.InterpolationNotAllowed": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "synphot.exceptions.SynphotError"
   ]
  },
  "type": "class"
 },
 "synphot.exceptions.OverlapError": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "synphot.exceptions.SynphotError"
   ]
  },
  "type": "class"
 },
 "synphot.exceptions.PartialOverlap": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "synphot.exceptions.OverlapError"
   ]
  },
  "type": "class"
 },
 "synphot.exceptions.SynphotError": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "synphot.exceptions.TableFormatError": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "synphot.exceptions.SynphotError"
   ]
  },
  "type": "class"
 },
 "synphot.exceptions.TableFormatError.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "list",
    "super",
    "synphot.exceptions.TableFormatError",
    "tuple"
   ]
  },
  "type": "function"
 },
 "synphot.exceptions.UndefinedBinset": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "synphot.exceptions.SynphotError"
   ]
  },
  "type": "class"
 },
 "synphot.exceptions.UnsortedWavelength": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "synphot.exceptions.TableFormatError"
   ]
  },
  "type": "class"
 },
 "synphot.exceptions.ZeroWavelength": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "synphot.exceptions.TableFormatError"
   ]
  },
  "type": "class"
 },
 "synphot.exceptions.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "synphot.models": {
  "data": {},
  "type": "module"
 },
 "synphot.models.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "synphot.models.BaseGaussian1D": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian1D"
   ]
  },
  "type": "class"
 },
 "synphot.models.BaseGaussian1D.sampleset": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "list",
    "map",
    "numpy.arange",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "synphot.models.BlackBody1D": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.modeling.Fittable1DModel",
    "astropy.modeling.Parameter"
   ]
  },
  "type": "class"
 },
 "synphot.models.BlackBody1D.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "super",
    "synphot.models.BlackBody1D"
   ]
  },
  "type": "function"
 },
 "synphot.models.BlackBody1D.bounding_box": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.log10"
   ]
  },
  "type": "function"
 },
 "synphot.models.BlackBody1D.evaluate": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "astropy.modeling.blackbody.blackbody_nu",
    "astropy.units.AA",
    "astropy.units.PHOTLAM",
    "astropy.units.spectral_density",
    "astropy.units.sr",
    "astropy.units.sr.to",
    "numpy.ascontiguousarray",
    "numpy.seterr",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "synphot.models.BlackBody1D.lambda_max": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "astropy.constants.b_wien.value.to",
    "astropy.units.AA",
    "astropy.units.m.to",
    "property"
   ]
  },
  "type": "function"
 },
 "synphot.models.BlackBody1D.sampleset": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "functools.partial",
    "list",
    "map",
    "numpy.asarray",
    "numpy.logspace"
   ]
  },
  "type": "function"
 },
 "synphot.models.BlackBodyNorm1D": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "synphot.models.BlackBody1D"
   ]
  },
  "type": "class"
 },
 "synphot.models.BlackBodyNorm1D.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "astropy.constants.R_sun.value",
    "astropy.constants.kpc.value",
    "numpy.pi",
    "super",
    "synphot.models.BlackBodyNorm1D"
   ]
  },
  "type": "function"
 },
 "synphot.models.BlackBodyNorm1D.evaluate": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "super",
    "synphot.models.BlackBodyNorm1D"
   ]
  },
  "type": "function"
 },
 "synphot.models.Box1D": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "astropy.modeling.models.Box1D"
   ]
  },
  "type": "class"
 },
 "synphot.models.Box1D._calc_sampleset": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.arange",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "synphot.models.Box1D.sampleset": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "functools.partial",
    "list",
    "map",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "synphot.models.CompoundModel": {
  "data": {
   "shadows": "astropy.modeling.core.CompoundModel"
  },
  "type": "import"
 },
 "synphot.models.ConstFlux1D": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "astropy.modeling.models.Const1D"
   ]
  },
  "type": "class"
 },
 "synphot.models.ConstFlux1D.__init__": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.units.ABmag",
    "astropy.units.FLAM",
    "astropy.units.FNU",
    "astropy.units.PHOTLAM",
    "astropy.units.Quantity",
    "astropy.units.STmag",
    "astropy.units.convert_flux",
    "isinstance",
    "super",
    "synphot.models.ConstFlux1D"
   ]
  },
  "type": "function"
 },
 "synphot.models.ConstFlux1D.evaluate": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "astropy.units.PHOTLAM",
    "astropy.units.convert_flux",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "synphot.models.Empirical1D": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "astropy.modeling.models.Tabular1D"
   ]
  },
  "type": "class"
 },
 "synphot.models.Empirical1D.__init__": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.nan",
    "super",
    "synphot.models.Empirical1D"
   ]
  },
  "type": "function"
 },
 "synphot.models.Empirical1D._process_neg_flux": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "astropy.utils.exceptions.AstropyUserWarning",
    "len",
    "numpy.asarray",
    "numpy.isscalar",
    "numpy.where",
    "synphot.models.warnings"
   ]
  },
  "type": "function"
 },
 "synphot.models.Empirical1D.evaluate": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.isscalar",
    "numpy.nan",
    "numpy.squeeze",
    "super",
    "synphot.models.Empirical1D"
   ]
  },
  "type": "function"
 },
 "synphot.models.Empirical1D.is_tapered": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "numpy.array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.models.Empirical1D.sampleset": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "synphot.models.Fittable1DModel": {
  "data": {
   "shadows": "astropy.modeling.Fittable1DModel"
  },
  "type": "import"
 },
 "synphot.models.Gaussian1D": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "synphot.models.BaseGaussian1D"
   ]
  },
  "type": "class"
 },
 "synphot.models.GaussianAbsorption1D": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "synphot.models.BaseGaussian1D"
   ]
  },
  "type": "class"
 },
 "synphot.models.GaussianAbsorption1D.evaluate": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "staticmethod",
    "synphot.models.Gaussian1D"
   ]
  },
  "type": "function"
 },
 "synphot.models.GaussianAbsorption1D.fit_deriv": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "list",
    "map",
    "staticmethod",
    "synphot.models.Gaussian1D",
    "synphot.models.operator"
   ]
  },
  "type": "function"
 },
 "synphot.models.GaussianFlux1D": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "synphot.models.Gaussian1D"
   ]
  },
  "type": "class"
 },
 "synphot.models.GaussianFlux1D.__init__": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "astropy.stats.funcs.gaussian_fwhm_to_sigma",
    "astropy.stats.funcs.gaussian_sigma_to_fwhm",
    "astropy.units.AA",
    "astropy.units.AA.to",
    "astropy.units.PHOTLAM",
    "astropy.units.Quantity",
    "astropy.units.cm",
    "astropy.units.erg",
    "astropy.units.s",
    "astropy.units.spectral_density",
    "isinstance",
    "numpy.pi",
    "numpy.sqrt",
    "super",
    "synphot.models.GaussianFlux1D"
   ]
  },
  "type": "function"
 },
 "synphot.models.Lorentz1D": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "astropy.modeling.models.Lorentz1D"
   ]
  },
  "type": "class"
 },
 "synphot.models.Lorentz1D.sampleset": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "list",
    "map",
    "numpy.arange",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "synphot.models.MexicanHat1D": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "astropy.modeling.models.MexicanHat1D"
   ]
  },
  "type": "class"
 },
 "synphot.models.MexicanHat1D.sampleset": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "list",
    "map",
    "numpy.arange",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "synphot.models.Model": {
  "data": {
   "shadows": "astropy.modeling.Model"
  },
  "type": "import"
 },
 "synphot.models.Parameter": {
  "data": {
   "shadows": "astropy.modeling.Parameter"
  },
  "type": "import"
 },
 "synphot.models.PowerLawFlux1D": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "astropy.modeling.models.PowerLaw1D"
   ]
  },
  "type": "class"
 },
 "synphot.models.PowerLawFlux1D.__init__": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.units.AA",
    "astropy.units.PHOTLAM",
    "astropy.units.Quantity",
    "astropy.units.spectral",
    "isinstance",
    "super",
    "synphot.models.PowerLawFlux1D"
   ]
  },
  "type": "function"
 },
 "synphot.models.PowerLawFlux1D.evaluate": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "astropy.units.PHOTLAM",
    "astropy.units.convert_flux"
   ]
  },
  "type": "function"
 },
 "synphot.models.Tabular1D": {
  "data": {
   "shadows": "astropy.modeling.models.Tabular1D"
  },
  "type": "import"
 },
 "synphot.models.Trapezoid1D": {
  "data": {
   "lineno": 635,
   "symbols_in_volume": [
    "astropy.modeling.models.Trapezoid1D"
   ]
  },
  "type": "class"
 },
 "synphot.models.Trapezoid1D.sampleset": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "list",
    "numpy.asarray",
    "zip"
   ]
  },
  "type": "function"
 },
 "synphot.models.__all__": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "synphot.models._get_meta": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "astropy.modeling.Model",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "synphot.models._get_sampleset": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "astropy.modeling.Model",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_metadata": {
  "data": {
   "lineno": 796,
   "symbols_in_volume": [
    "astropy.utils.metadata.merge",
    "hasattr",
    "synphot.models._get_meta"
   ]
  },
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_metadata_compat": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "astropy.modeling.core.CompoundModel",
    "collections.defaultdict",
    "copy.deepcopy",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_metadata_compat._get_meta_compat": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "astropy.modeling.Model",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_metadata_compat._merge_meta_compat": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "_get_meta_compat",
    "astropy.utils.metadata.merge"
   ]
  },
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "astropy.modeling.models.RedshiftScaleFactor",
    "astropy.modeling.models.Scale",
    "hasattr",
    "isinstance",
    "merge_wavelengths",
    "synphot.models._get_sampleset"
   ]
  },
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset_compat": {
  "data": {
   "lineno": 701,
   "symbols_in_volume": [
    "_get_sampleset_compat",
    "astropy.modeling.core.CompoundModel",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset_compat._get_sampleset_compat": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "astropy.modeling.Model",
    "hasattr",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset_compat._merge_sampleset_compat": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "_get_sampleset_compat",
    "merge_wavelengths"
   ]
  },
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset_compat._shift_wavelengths_compat": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "_get_sampleset_compat",
    "astropy.modeling.models.RedshiftScaleFactor",
    "astropy.modeling.models.Scale",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "synphot.models._models": {
  "data": {
   "shadows": "astropy.modeling.models"
  },
  "type": "import"
 },
 "synphot.models.blackbody_nu": {
  "data": {
   "shadows": "astropy.modeling.blackbody.blackbody_nu"
  },
  "type": "import"
 },
 "synphot.models.const": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "synphot.models.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "synphot.models.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "synphot.models.gaussian_fwhm_to_sigma": {
  "data": {
   "shadows": "astropy.stats.funcs.gaussian_fwhm_to_sigma"
  },
  "type": "import"
 },
 "synphot.models.gaussian_sigma_to_fwhm": {
  "data": {
   "shadows": "astropy.stats.funcs.gaussian_sigma_to_fwhm"
  },
  "type": "import"
 },
 "synphot.models.get_metadata": {
  "data": {
   "lineno": 834,
   "symbols_in_volume": [
    "SynphotError",
    "astropy.modeling.Model",
    "copy.deepcopy",
    "isinstance",
    "synphot.models._model_tree_evaluate_metadata",
    "synphot.models._model_tree_evaluate_metadata_compat"
   ]
  },
  "type": "function"
 },
 "synphot.models.get_waveset": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "SynphotError",
    "astropy.modeling.Model",
    "isinstance",
    "synphot.models._model_tree_evaluate_sampleset",
    "synphot.models._model_tree_evaluate_sampleset_compat"
   ]
  },
  "type": "function"
 },
 "synphot.models.metadata": {
  "data": {
   "shadows": "astropy.utils.metadata"
  },
  "type": "import"
 },
 "synphot.models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.models.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "synphot.models.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "synphot.models.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.models.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "synphot.observation": {
  "data": {},
  "type": "module"
 },
 "synphot.observation.AstropyDeprecationWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyDeprecationWarning"
  },
  "type": "import"
 },
 "synphot.observation.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "synphot.observation.Observation": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "synphot.observation.Observation.__init__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "astropy.utils.exceptions.AstropyUserWarning",
    "isinstance",
    "super",
    "synphot.observation.Observation",
    "synphot.observation.warnings"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.__mul__": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "self.__class__",
    "self._force",
    "self.bandpass",
    "self.binset",
    "self.spectrum"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation._get_binned_arrays": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.spectral",
    "isinstance",
    "self._validate_binned_wavelengths",
    "self.sample_binned"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation._init_bins": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "astropy.log.info",
    "numpy.searchsorted",
    "self",
    "self._binflux",
    "self._binset.size"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation._validate_binned_wavelengths": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "self._validate_wavelengths",
    "self.binset"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.as_spectrum": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "SourceSpectrum",
    "self",
    "self._get_arrays",
    "self._get_binned_arrays",
    "self._internal_flux_unit",
    "str"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.bandpass": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "property",
    "self._band"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.bin_edges": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "property",
    "self._bin_edges"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.binflux": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "property",
    "self._binflux"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.binned_pixelrange": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "astropy.units.spectral",
    "astropy.units.validate_quantity",
    "self._internal_wave_unit",
    "self.binset.value"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.binned_waverange": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.spectral",
    "astropy.units.validate_quantity",
    "isinstance",
    "self._internal_wave_unit",
    "self.binset"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.binset": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "property",
    "self._binset"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.countrate": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "astropy.units.convert_flux",
    "astropy.units.count",
    "astropy.units.s",
    "astropy.units.spectral",
    "astropy.units.validate_quantity",
    "astropy.utils.exceptions.AstropyUserWarning",
    "max",
    "min",
    "numpy.searchsorted",
    "self",
    "self._internal_wave_unit",
    "self._validate_binned_wavelengths",
    "self._validate_wavelengths",
    "self.bin_edges.value",
    "self.sample_binned",
    "synphot.observation.math",
    "synphot.observation.warnings"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.effective_wavelength": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "abs",
    "astropy.units.FLAM",
    "astropy.units.PHOTLAM",
    "astropy.units.convert_flux",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "numpy.trapz",
    "self",
    "self._internal_wave_unit",
    "self._validate_binned_wavelengths",
    "self._validate_wavelengths",
    "self.sample_binned",
    "synphot.observation.warnings"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.effstim": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "abs",
    "astropy.units.FLAM",
    "astropy.units.OBMAG.to_string",
    "astropy.units.STmag",
    "astropy.units.VEGAMAG",
    "astropy.units.VEGAMAG.to_string",
    "astropy.units.convert_flux",
    "astropy.units.count",
    "astropy.units.mag",
    "astropy.units.validate_unit",
    "numpy.log10",
    "numpy.trapz",
    "self",
    "self._internal_flux_unit",
    "self._validate_wavelengths",
    "self.bandpass",
    "self.bandpass._validate_wavelengths",
    "self.bandpass.integrate",
    "self.bandpass.pivot",
    "self.countrate",
    "self.integrate",
    "synphot.observation.math"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.plot": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "self._do_plot",
    "self._get_arrays",
    "self._get_binned_arrays"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.sample_binned": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "astropy.units.convert_flux",
    "numpy.allclose",
    "numpy.searchsorted",
    "self._validate_binned_wavelengths",
    "self.binflux",
    "self.binset",
    "self.binset.value"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.spectrum": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "property",
    "self._spec"
   ]
  },
  "type": "function"
 },
 "synphot.observation.Observation.taper": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "synphot.observation.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "synphot.observation.log": {
  "data": {
   "shadows": "astropy.log"
  },
  "type": "import"
 },
 "synphot.observation.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "synphot.observation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.observation.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.observation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "synphot.reddening": {
  "data": {},
  "type": "module"
 },
 "synphot.reddening.ExtinctionCurve": {
  "data": {
   "lineno": 230
  },
  "type": "class"
 },
 "synphot.reddening.ExtinctionModel1D": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "synphot.reddening.ExtinctionModel1D.sampleset": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "synphot.reddening.ReddeningLaw": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "synphot.reddening.ReddeningLaw.extinction_curve": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.mag",
    "isinstance",
    "self",
    "self.meta.get",
    "synphot.reddening.ExtinctionCurve",
    "synphot.reddening.ExtinctionModel1D",
    "synphot.reddening.numbers"
   ]
  },
  "type": "function"
 },
 "synphot.reddening.ReddeningLaw.from_extinction_model": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "cfgitem",
    "cfgitem.description",
    "classmethod",
    "cls",
    "cls._internal_flux_unit"
   ]
  },
  "type": "function"
 },
 "synphot.reddening.ReddeningLaw.from_file": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "synphot.reddening.ReddeningLaw.to_fits": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "self._get_arrays",
    "self._internal_flux_unit",
    "self.meta"
   ]
  },
  "type": "function"
 },
 "synphot.reddening.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "synphot.reddening.etau_madau": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.validate_quantity",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.exp",
    "numpy.float",
    "numpy.isscalar",
    "numpy.where",
    "numpy.zeros_like",
    "range",
    "synphot.reddening.ExtinctionCurve",
    "synphot.reddening.ExtinctionModel1D",
    "synphot.reddening.numbers"
   ]
  },
  "type": "function"
 },
 "synphot.reddening.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.reddening.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "synphot.reddening.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.setup_package": {
  "data": {
   "symbols_in_volume": [
    "synphot.setup_package.os"
   ]
  },
  "type": "module"
 },
 "synphot.setup_package.Extension": {
  "data": {
   "shadows": "setuptools.Extension"
  },
  "type": "import"
 },
 "synphot.setup_package.LOCALROOT": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "synphot.setup_package.docstrings": {
  "data": {
   "shadows": "synphot.docstrings"
  },
  "type": "import"
 },
 "synphot.setup_package.generate_c_docstrings": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy_helpers.setup_helpers.write_if_different",
    "isinstance",
    "len",
    "min",
    "range",
    "str",
    "synphot.docstrings",
    "synphot.docstrings.__dict__",
    "synphot.docstrings.encode",
    "synphot.docstrings.items",
    "synphot.setup_package.LOCALROOT",
    "synphot.setup_package.io",
    "synphot.setup_package.os",
    "synphot.setup_package.string_escape"
   ]
  },
  "type": "function"
 },
 "synphot.setup_package.get_extensions": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "astropy_helpers.setup_helpers.DistutilsExtensionArgs",
    "dict",
    "setuptools.Extension",
    "str",
    "synphot.setup_package.LOCALROOT",
    "synphot.setup_package.generate_c_docstrings",
    "synphot.setup_package.os"
   ]
  },
  "type": "function"
 },
 "synphot.setup_package.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "synphot.setup_package.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "synphot.setup_package.setup_helpers": {
  "data": {
   "shadows": "astropy_helpers.setup_helpers"
  },
  "type": "import"
 },
 "synphot.setup_package.string_escape": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "synphot.specio": {
  "data": {},
  "type": "module"
 },
 "synphot.specio.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "synphot.specio.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "synphot.specio.__version__": {
  "data": {
   "shadows": "synphot.__version__"
  },
  "type": "import"
 },
 "synphot.specio.ascii": {
  "data": {
   "shadows": "astropy.io.ascii"
  },
  "type": "import"
 },
 "synphot.specio.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "synphot.specio.get_readable_fileobj": {
  "data": {
   "shadows": "astropy.utils.data.get_readable_fileobj"
  },
  "type": "import"
 },
 "synphot.specio.log": {
  "data": {
   "shadows": "astropy.log"
  },
  "type": "import"
 },
 "synphot.specio.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.specio.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "synphot.specio.read_ascii_spec": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "astropy.io.ascii.read",
    "astropy.units.AA",
    "astropy.units.FLAM",
    "astropy.units.validate_unit",
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "synphot.specio.read_fits_spec": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.open",
    "astropy.units.AA",
    "astropy.units.FLAM",
    "astropy.units.validate_unit",
    "astropy.utils.exceptions.AstropyUserWarning",
    "dict",
    "isinstance",
    "str",
    "synphot.specio.warnings"
   ]
  },
  "type": "function"
 },
 "synphot.specio.read_remote_spec": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "astropy.utils.data.get_readable_fileobj",
    "synphot.specio.read_spec"
   ]
  },
  "type": "function"
 },
 "synphot.specio.read_spec": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "isinstance",
    "read_func",
    "str"
   ]
  },
  "type": "function"
 },
 "synphot.specio.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.specio.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "synphot.specio.write_fits_spec": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "astropy.io.fits.BinTableHDU.from_columns",
    "astropy.io.fits.ColDefs",
    "astropy.io.fits.Column",
    "astropy.io.fits.HDUList",
    "astropy.io.fits.PrimaryHDU",
    "astropy.log.info",
    "astropy.units.AA",
    "astropy.units.FLAM",
    "astropy.units.Quantity",
    "astropy.units.validate_unit",
    "astropy.utils.exceptions.AstropyUserWarning",
    "isinstance",
    "len",
    "numpy.abs",
    "numpy.append",
    "numpy.insert",
    "numpy.where",
    "synphot.__version__",
    "synphot.specio.os",
    "synphot.specio.warnings"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum": {
  "data": {},
  "type": "module"
 },
 "synphot.spectrum.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "synphot.spectrum.BaseSourceSpectrum": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "astropy.units.PHOTLAM",
    "synphot.spectrum.BaseSpectrum"
   ]
  },
  "type": "class"
 },
 "synphot.spectrum.BaseSourceSpectrum.__call__": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "astropy.units.convert_flux",
    "self._internal_flux_unit",
    "self._validate_wavelengths",
    "self.model"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSourceSpectrum._validate_flux_unit": {
  "data": {
   "lineno": 789,
   "symbols_in_volume": [
    "astropy.units.validate_unit",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSourceSpectrum.normalize": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.units.ABmag",
    "astropy.units.LogUnit",
    "astropy.units.OBMAG.to_string",
    "astropy.units.Quantity",
    "astropy.units.STmag",
    "astropy.units.VEGAMAG.to_string",
    "astropy.units.count",
    "astropy.units.mag",
    "astropy.utils.exceptions.AstropyUserWarning",
    "isinstance",
    "numpy.log10",
    "self",
    "self.__mul__",
    "self._internal_flux_unit",
    "self.force_extrapolation",
    "sp",
    "sp.integrate",
    "synphot.spectrum.SourceSpectrum",
    "synphot.spectrum.warnings"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.K",
    "astropy.units.dimensionless_unscaled",
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.spectrum.BaseSpectrum.__add__": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__call__": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__div__": {
  "data": {
   "lineno": 409
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "astropy.modeling.Model",
    "astropy.modeling.core.CompoundModel",
    "get_metadata",
    "isinstance",
    "issubclass",
    "modelclass",
    "synphot.spectrum.BaseSpectrum"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__mul__": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__rmul__": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__str__": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__sub__": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__truediv__": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._do_plot": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "ImportError",
    "astropy.log.error",
    "astropy.log.info",
    "astropy.units.dimensionless_unscaled",
    "matplotlib.pyplot.draw",
    "matplotlib.pyplot.savefig",
    "matplotlib.pyplot.subplots",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._get_arrays": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.spectral",
    "isinstance",
    "self",
    "self._validate_wavelengths"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._get_meta": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "copy.deepcopy",
    "dict",
    "hasattr",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._merge_meta": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "astropy.utils.metadata.merge",
    "staticmethod",
    "synphot.spectrum.BaseSpectrum"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._process_flux_param": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._process_generic_param": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._process_wave_param": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "astropy.units.spectral"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._validate_flux_unit": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "NotImplementedError",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._validate_other_mul_div": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.dimensionless_unscaled",
    "isinstance",
    "numpy.isscalar",
    "staticmethod",
    "synphot.spectrum.numbers"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._validate_wavelengths": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.avgwave": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "abs",
    "numpy.trapz",
    "self",
    "self._internal_wave_unit",
    "self._validate_wavelengths"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.barlam": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "abs",
    "numpy.exp",
    "numpy.log",
    "numpy.trapz",
    "self",
    "self._internal_wave_unit",
    "self._validate_wavelengths"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.force_extrapolation": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "isinstance",
    "numpy.nan",
    "self._model",
    "self._model.fill_value"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.integrate": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "abs",
    "astropy.units.FLAM",
    "astropy.units.PHOTLAM",
    "astropy.units.THROUGHPUT",
    "astropy.units.cm",
    "astropy.units.erg",
    "astropy.units.photon",
    "astropy.units.s",
    "m",
    "numpy.trapz",
    "self",
    "self._internal_flux_unit",
    "self._internal_wave_unit"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.model": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.pivot": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "abs",
    "numpy.sqrt",
    "numpy.trapz",
    "self",
    "self._internal_wave_unit",
    "self._validate_wavelengths"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.plot": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "self._do_plot",
    "self._get_arrays"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.taper": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "isinstance",
    "numpy.insert",
    "self",
    "self.__class__",
    "self._model",
    "self._model.lookup_table",
    "self._validate_wavelengths"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.warnings": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "synphot.spectrum.warnings"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.waverange": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "property"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.waveset": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "get_waveset",
    "property"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseUnitlessSpectrum": {
  "data": {
   "lineno": 1276,
   "symbols_in_volume": [
    "astropy.units.THROUGHPUT",
    "synphot.spectrum.BaseSpectrum"
   ]
  },
  "type": "class"
 },
 "synphot.spectrum.BaseUnitlessSpectrum.__mul__": {
  "data": {
   "lineno": 1295,
   "symbols_in_volume": [
    "astropy.modeling.models.Scale",
    "astropy.units.Quantity",
    "isinstance",
    "self",
    "self.__class__",
    "self._merge_meta",
    "self._validate_other_mul_div",
    "self.model",
    "synphot.spectrum.BaseUnitlessSpectrum",
    "synphot.spectrum.numbers"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseUnitlessSpectrum.__truediv__": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "astropy.modeling.models.Scale",
    "astropy.units.Quantity",
    "isinstance",
    "self",
    "self.__class__",
    "self._merge_meta",
    "self._validate_other_mul_div",
    "self.model",
    "synphot.spectrum.BaseUnitlessSpectrum",
    "synphot.spectrum.numbers"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseUnitlessSpectrum._process_flux_param": {
  "data": {
   "lineno": 1280,
   "symbols_in_volume": [
    "self._internal_flux_unit",
    "self._process_generic_param"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.BaseUnitlessSpectrum._validate_flux_unit": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "astropy.units.validate_unit",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.CompoundModel": {
  "data": {
   "shadows": "astropy.modeling.core.CompoundModel"
  },
  "type": "import"
 },
 "synphot.spectrum.Model": {
  "data": {
   "shadows": "astropy.modeling.Model"
  },
  "type": "import"
 },
 "synphot.spectrum.RedshiftScaleFactor": {
  "data": {
   "shadows": "astropy.modeling.models.RedshiftScaleFactor"
  },
  "type": "import"
 },
 "synphot.spectrum.Scale": {
  "data": {
   "shadows": "astropy.modeling.models.Scale"
  },
  "type": "import"
 },
 "synphot.spectrum.SourceSpectrum": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": [
    "synphot.spectrum.BaseSourceSpectrum"
   ]
  },
  "type": "class"
 },
 "synphot.spectrum.SourceSpectrum.__add__": {
  "data": {
   "lineno": 1103,
   "symbols_in_volume": [
    "self",
    "self.__class__",
    "self._merge_meta",
    "self._validate_other_add_sub",
    "self.model"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__init__": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "modelclass",
    "self",
    "self._valid_z_types",
    "self.z",
    "self.z_type",
    "super",
    "synphot.spectrum.SourceSpectrum"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__mul__": {
  "data": {
   "lineno": 1117,
   "symbols_in_volume": [
    "astropy.modeling.models.Scale",
    "astropy.units.Quantity",
    "isinstance",
    "self",
    "self.__class__",
    "self._merge_meta",
    "self._validate_other_mul_div",
    "self.model",
    "synphot.spectrum.numbers"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__str__": {
  "data": {
   "lineno": 1092,
   "symbols_in_volume": [
    "self.__class__.__name__",
    "self.model",
    "self.z",
    "str"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__sub__": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "self",
    "self.__class__",
    "self._merge_meta",
    "self._validate_other_add_sub",
    "self.model"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__truediv__": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "astropy.modeling.models.Scale",
    "astropy.units.Quantity",
    "isinstance",
    "self",
    "self.__class__",
    "self._merge_meta",
    "self._validate_other_mul_div",
    "self.model",
    "synphot.spectrum.BaseUnitlessSpectrum",
    "synphot.spectrum.numbers"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum._process_flux_param": {
  "data": {
   "lineno": 1029,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.convert_flux",
    "isinstance",
    "self._internal_flux_unit",
    "self._redshift_model",
    "self._validate_flux_unit"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum._validate_other_add_sub": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "isinstance",
    "self.__class__",
    "self.__class__.__name__"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.from_file": {
  "data": {
   "lineno": 1221,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.from_vega": {
  "data": {
   "lineno": 1251,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "synphot.spectrum.os"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.model": {
  "data": {
   "lineno": 1039,
   "symbols_in_volume": [
    "m",
    "property",
    "self._internal_wave_unit.physical_type",
    "self._model",
    "self._redshift_flux_model",
    "self._redshift_model",
    "self._redshift_model.inverse",
    "self.z",
    "self.z_type"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.plot": {
  "data": {
   "lineno": 1146,
   "symbols_in_volume": [
    "self._do_plot",
    "self._get_arrays"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.to_fits": {
  "data": {
   "lineno": 1179,
   "symbols_in_volume": [
    "self._get_arrays",
    "self.meta"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.z": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "astropy.modeling.models.RedshiftScaleFactor",
    "astropy.modeling.models.Scale",
    "float",
    "isinstance",
    "self._redshift_flux_model",
    "self._redshift_model",
    "self._z",
    "self.z_type",
    "synphot.spectrum.numbers"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.z_type": {
  "data": {
   "lineno": 1084,
   "symbols_in_volume": [
    "self._valid_z_types",
    "self._z_type"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement": {
  "data": {
   "lineno": 1329,
   "symbols_in_volume": [
    "synphot.spectrum.BaseUnitlessSpectrum"
   ]
  },
  "type": "class"
 },
 "synphot.spectrum.SpectralElement.check_overlap": {
  "data": {
   "lineno": 1338,
   "symbols_in_volume": [
    "astropy.modeling.core.CompoundModel",
    "isinstance",
    "numpy.allclose",
    "numpy.array",
    "other",
    "self",
    "self._validate_wavelengths",
    "self.integrate",
    "self.waveset",
    "synphot.spectrum.BaseSpectrum"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.efficiency": {
  "data": {
   "lineno": 1724,
   "symbols_in_volume": [
    "abs",
    "astropy.units.dimensionless_unscaled",
    "numpy.trapz",
    "self",
    "self._validate_wavelengths"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.emflx": {
  "data": {
   "lineno": 1745,
   "symbols_in_volume": [
    "astropy.units.FLAM",
    "self.equivwidth",
    "self.tlambda",
    "self.unit_response"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.equivwidth": {
  "data": {
   "lineno": 1680,
   "symbols_in_volume": [
    "self.integrate"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.from_file": {
  "data": {
   "lineno": 1809,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "cls._internal_flux_unit"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.from_filter": {
  "data": {
   "lineno": 1843,
   "symbols_in_volume": [
    "cfgitem",
    "cfgitem.description",
    "classmethod",
    "cls",
    "cls._internal_flux_unit"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.fwhm": {
  "data": {
   "lineno": 1605,
   "symbols_in_volume": [
    "numpy.log",
    "numpy.sqrt",
    "self.photbw"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.photbw": {
  "data": {
   "lineno": 1543,
   "symbols_in_volume": [
    "abs",
    "astropy.units.Quantity",
    "isinstance",
    "numpy.log",
    "numpy.sqrt",
    "numpy.trapz",
    "self",
    "self._internal_flux_unit",
    "self._internal_wave_unit",
    "self._validate_wavelengths",
    "self.barlam",
    "synphot.spectrum.numbers"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.rectwidth": {
  "data": {
   "lineno": 1698,
   "symbols_in_volume": [
    "self._internal_wave_unit",
    "self.equivwidth",
    "self.tpeak"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.rmswidth": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "abs",
    "astropy.units.Quantity",
    "isinstance",
    "numpy.sqrt",
    "numpy.trapz",
    "self",
    "self._internal_flux_unit",
    "self._internal_wave_unit",
    "self._validate_wavelengths",
    "self.avgwave",
    "synphot.spectrum.numbers"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.tlambda": {
  "data": {
   "lineno": 1621,
   "symbols_in_volume": [
    "self",
    "self.avgwave"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.to_fits": {
  "data": {
   "lineno": 1771,
   "symbols_in_volume": [
    "self._get_arrays",
    "self._internal_flux_unit",
    "self.meta"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.tpeak": {
  "data": {
   "lineno": 1638,
   "symbols_in_volume": [
    "self",
    "self._validate_wavelengths"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.unit_response": {
  "data": {
   "lineno": 1455,
   "symbols_in_volume": [
    "abs",
    "astropy.units.AREA",
    "astropy.units.FLAM",
    "astropy.units.HC",
    "astropy.units.validate_quantity",
    "numpy.trapz",
    "self",
    "self._validate_wavelengths"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.wpeak": {
  "data": {
   "lineno": 1657,
   "symbols_in_volume": [
    "self",
    "self._validate_wavelengths",
    "self.tpeak"
   ]
  },
  "type": "function"
 },
 "synphot.spectrum.__all__": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "synphot.spectrum.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "synphot.spectrum.log": {
  "data": {
   "shadows": "astropy.log"
  },
  "type": "import"
 },
 "synphot.spectrum.metadata": {
  "data": {
   "shadows": "astropy.utils.metadata"
  },
  "type": "import"
 },
 "synphot.spectrum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.spectrum.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "synphot.spectrum.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "synphot.spectrum.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "synphot.spectrum.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.spectrum.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "synphot.tests": {
  "data": {},
  "type": "module"
 },
 "synphot.tests.setup_package": {
  "data": {},
  "type": "module"
 },
 "synphot.tests.setup_package.get_package_data": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "synphot.tests.test_binning": {
  "data": {},
  "type": "module"
 },
 "synphot.tests.test_binning.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "synphot.tests.test_binning.TestBinRange": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_binning.TestBinRange.setup_class": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "generate_wavelengths"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_pixel_range_almosteq": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "synphot.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_pixel_range_descending_order": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_pixel_range_exceptions": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "synphot.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_pixel_range_mode": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "synphot.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_wave_range_descending_order": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_wave_range_exceptions": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "synphot.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_wave_range_mode": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "synphot.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_wave_range_mode_none": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "synphot.tests.test_binning.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "synphot.tests.test_binning.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.tests.test_binning.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "synphot.tests.test_binning.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "synphot.tests.test_binning.test_calcbinflux": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ImportError",
    "astropy.units.dimensionless_unscaled",
    "astropy.utils.data.get_pkg_data_filename",
    "astropy.utils.exceptions.AstropyUserWarning",
    "generate_wavelengths",
    "merge_wavelengths",
    "numpy.array",
    "numpy.interp",
    "numpy.ones",
    "numpy.searchsorted",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "synphot.tests.test_binning.os",
    "synphot.tests.test_binning.warnings"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_binning.test_calculate_bin_centers": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "astropy.units.AA",
    "numpy.testing.assert_array_equal",
    "synphot.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_binning.test_calculate_bin_edges": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.units.AA",
    "numpy.arange",
    "numpy.float",
    "numpy.testing.assert_array_equal",
    "synphot.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_binning.test_calculate_bin_exceptions": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "astropy.units.AA",
    "numpy.array",
    "synphot.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_binning.test_calculate_bin_widths": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "astropy.units.AA",
    "numpy.testing.assert_array_equal",
    "synphot.tests.test_binning.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_binning.test_center_edge_center_roundtrip": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "astropy.units.micron",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_binning.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.tests.test_binning.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "synphot.tests.test_integrator": {
  "data": {},
  "type": "module"
 },
 "synphot.tests.test_integrator.Const1D": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "synphot.tests.test_integrator.Const1D.integral": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.modeling.models.Polynomial1D",
    "property"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_integrator.Polynomial1D": {
  "data": {
   "shadows": "astropy.modeling.models.Polynomial1D"
  },
  "type": "import"
 },
 "synphot.tests.test_integrator.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "synphot.tests.test_integrator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.tests.test_integrator.test_analytic_source": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "SourceSpectrum",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_integrator.Const1D"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_integrator.test_trapz_box1d": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "Box1D",
    "abs",
    "m",
    "numpy.testing.assert_allclose",
    "numpy.trapz"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_integrator.test_trapz_spec": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "SourceSpectrum",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.minversion",
    "synphot.tests.test_models.astropy",
    "synphot.tests.test_models.scipy"
   ]
  },
  "type": "module"
 },
 "synphot.tests.test_models.ASTROPY_LT_20": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "synphot.tests.test_models.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "synphot.tests.test_models.Const1D": {
  "data": {
   "shadows": "astropy.modeling.models.Const1D"
  },
  "type": "import"
 },
 "synphot.tests.test_models.HAS_SCIPY": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "synphot.tests.test_models.TestBlackBody1D": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_models.TestBlackBody1D.setup_class": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "BlackBody1D"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestBlackBody1D.test_eval": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestBlackBody1D.test_lambda_max": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestBlackBody1D.test_multi_n_models": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "BlackBody1D",
    "m2",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestBlackBody1D.test_sampleset": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_models.TestConstFlux1D.setup_class": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D.test_invalid_units": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ConstFlux1D",
    "NotImplementedError",
    "astropy.units.AA",
    "astropy.units.OBMAG",
    "astropy.units.VEGAMAG",
    "astropy.units.count",
    "synphot.tests.test_models.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D.test_linear": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ConstFlux1D",
    "astropy.units.FLAM",
    "astropy.units.FNU",
    "astropy.units.Jy",
    "astropy.units.PHOTLAM",
    "astropy.units.PHOTNU",
    "astropy.units.Quantity",
    "astropy.units.convert_flux",
    "astropy.units.mJy",
    "isinstance",
    "m",
    "m._flux_unit",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_models.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D.test_mag": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "ConstFlux1D",
    "astropy.units.ABmag",
    "astropy.units.FLAM",
    "astropy.units.FNU",
    "astropy.units.PHOTLAM",
    "astropy.units.STmag",
    "astropy.units.convert_flux",
    "m",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_models.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D.test_multi_n_models": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ConstFlux1D",
    "m",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_models.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_models.TestEmpirical1D.setup_class": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "Empirical1D",
    "astropy.units.PHOTLAM",
    "astropy.units.convert_flux",
    "astropy.utils.data.get_pkg_data_filename",
    "synphot.tests.test_models.os"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_eval": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Empirical1D",
    "astropy.units.FLAM",
    "astropy.units.convert_flux",
    "m2",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_extrap": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "Empirical1D",
    "m2",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_neg_array": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "Empirical1D",
    "astropy.utils.exceptions.AstropyUserWarning",
    "m2",
    "m2.meta",
    "numpy.testing.assert_array_equal",
    "synphot.tests.test_models.pytest",
    "synphot.tests.test_models.warnings"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_neg_scalar": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "Empirical1D",
    "astropy.utils.exceptions.AstropyUserWarning",
    "m2",
    "m2.meta",
    "numpy.testing.assert_array_equal",
    "synphot.tests.test_models.pytest",
    "synphot.tests.test_models.warnings"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_sampleset": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_taper": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "Empirical1D",
    "m2",
    "m2.is_tapered",
    "synphot.tests.test_models.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.setup_class": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "PowerLawFlux1D",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_eval": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "astropy.units.PHOTLAM",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_invalid_units": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "NotImplementedError",
    "PowerLawFlux1D",
    "astropy.units.AA",
    "astropy.units.OBMAG",
    "astropy.units.VEGAMAG",
    "astropy.units.count",
    "synphot.tests.test_models.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_multi_n_models": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "PowerLawFlux1D",
    "astropy.units.FLAM",
    "astropy.units.PHOTLAM",
    "astropy.units.convert_flux",
    "astropy.units.micron",
    "m2",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_normalization": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_valid_mag": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "PowerLawFlux1D",
    "astropy.units.ABmag",
    "astropy.units.STmag",
    "m",
    "m._flux_unit",
    "m.amplitude",
    "synphot.tests.test_models.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.astropy": {
  "data": {
   "shadows": "astropy"
  },
  "type": "import"
 },
 "synphot.tests.test_models.astropyconst13": {
  "data": {
   "shadows": "astropy.constants.astropyconst13"
  },
  "type": "import"
 },
 "synphot.tests.test_models.astropyconst20": {
  "data": {
   "shadows": "astropy.constants.astropyconst20"
  },
  "type": "import"
 },
 "synphot.tests.test_models.const": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "synphot.tests.test_models.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "synphot.tests.test_models.minversion": {
  "data": {
   "shadows": "astropy.utils.minversion"
  },
  "type": "import"
 },
 "synphot.tests.test_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.tests.test_models.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "synphot.tests.test_models.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "synphot.tests.test_models.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "synphot.tests.test_models.setup_module": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "astropy.constants.astropyconst13.h",
    "astropy.constants.astropyconst13.k_B",
    "astropy.constants.astropyconst13.sigma_sb",
    "astropy.constants.h",
    "astropy.constants.k_B",
    "astropy.constants.si.h",
    "astropy.constants.si.k_B",
    "astropy.constants.si.sigma_sb",
    "astropy.constants.sigma_sb",
    "synphot.tests.test_models.ASTROPY_LT_20"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.si": {
  "data": {
   "shadows": "astropy.constants.si"
  },
  "type": "import"
 },
 "synphot.tests.test_models.teardown_module": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.constants.astropyconst20.h",
    "astropy.constants.astropyconst20.k_B",
    "astropy.constants.astropyconst20.sigma_sb",
    "astropy.constants.h",
    "astropy.constants.k_B",
    "astropy.constants.si.h",
    "astropy.constants.si.k_B",
    "astropy.constants.si.sigma_sb",
    "astropy.constants.sigma_sb",
    "synphot.tests.test_models.ASTROPY_LT_20"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.test_get_metadata": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "astropy.modeling.models.Const1D",
    "get_metadata",
    "len",
    "list",
    "m",
    "m2",
    "m2.meta"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_models.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.tests.test_models.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "synphot.tests.test_observation": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.data.get_pkg_data_filename",
    "astropy.utils.minversion",
    "synphot.tests.test_observation.os",
    "synphot.tests.test_observation.scipy"
   ]
  },
  "type": "module"
 },
 "synphot.tests.test_observation.AstropyDeprecationWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyDeprecationWarning"
  },
  "type": "import"
 },
 "synphot.tests.test_observation.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "synphot.tests.test_observation.Const1D": {
  "data": {
   "shadows": "astropy.modeling.models.Const1D"
  },
  "type": "import"
 },
 "synphot.tests.test_observation.HAS_SCIPY": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "synphot.tests.test_observation.TestCountRate": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_observation.TestCountRate.setup_class": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "Observation",
    "SourceSpectrum",
    "SpectralElement",
    "astropy.units.PHOTLAM",
    "astropy.units.convert_flux",
    "astropy.units.count",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRate.test_disjoint_waverange": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRate.test_force": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "astropy.utils.exceptions.AstropyUserWarning",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRate.test_waverange": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRate.test_waverange_no_bin": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRateNegFlux": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_observation.TestCountRateNegFlux.setup_class": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "SpectralElement.from_file",
    "astropy.utils.data.get_pkg_data_filename",
    "synphot.tests.test_observation.os"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRateNegFlux.test_neg_handling": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "Observation",
    "SourceSpectrum.from_file",
    "astropy.utils.exceptions.AstropyUserWarning",
    "numpy.testing.assert_allclose",
    "obs",
    "obs.countrate",
    "obs.warnings",
    "synphot.tests.test_observation.pytest",
    "synphot.tests.test_observation.warnings"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestInitWithForce": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_observation.TestInitWithForce.setup_class": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "SourceSpectrum",
    "SpectralElement",
    "numpy.arange",
    "numpy.ones_like"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestInitWithForce.test_exceptions": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "Observation",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestInitWithForce.test_force": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "Observation",
    "astropy.utils.exceptions.AstropyUserWarning",
    "obs",
    "obs.warnings",
    "synphot.tests.test_observation.pytest",
    "synphot.tests.test_observation.warnings"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestMathOperators": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_observation.TestMathOperators.setup_class": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "Observation",
    "SourceSpectrum",
    "SpectralElement",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestMathOperators.test_addsub": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "NotImplementedError",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestMathOperators.test_div": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "NotImplementedError",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestMathOperators.test_mul": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "SpectralElement",
    "astropy.modeling.models.Const1D",
    "numpy.testing.assert_allclose",
    "obs2",
    "obs2.sample_binned",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_observation.TestObsPar.setup_class": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "Observation",
    "SourceSpectrum.from_file",
    "SpectralElement.from_file",
    "synphot.tests.test_observation._bandfile",
    "synphot.tests.test_observation._specfile"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_avglam": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_barlam": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_efflam": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "len",
    "numpy.testing.assert_allclose",
    "str",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_efflam_erg": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_efflam_exception": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "astropy.units.FLAM",
    "astropy.units.FNU",
    "astropy.units.Jy",
    "astropy.units.PHOTLAM",
    "astropy.units.PHOTNU",
    "astropy.units.mJy",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_analytic": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "Observation",
    "SourceSpectrum",
    "SpectralElement",
    "astropy.units.FLAM",
    "numpy.testing.assert_allclose",
    "obs",
    "obs.effstim"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_count": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "astropy.units.OBMAG",
    "astropy.units.count",
    "numpy.log10",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_exceptions": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "astropy.units.VEGAMAG",
    "astropy.units.mag",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_mag": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "astropy.units.ABmag",
    "astropy.units.STmag",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_vegamag": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "SourceSpectrum.from_vega",
    "astropy.units.VEGAMAG",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_normalize": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "astropy.units.PHOTLAM",
    "numpy.testing.assert_allclose",
    "obs2",
    "obs2.countrate"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_pivot": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_observation.TestObservation.setup_class": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "Observation",
    "SourceSpectrum",
    "astropy.units.FLAM",
    "numpy.arange",
    "numpy.float64",
    "synphot.tests.test_observation._bandfile"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_as_spectrum": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "sp1",
    "sp1.waveset",
    "sp2",
    "sp2.waveset"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_binned_data": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "astropy.units.FLAM",
    "astropy.units.PHOTLAM",
    "astropy.units.nm",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_binned_pixelrange": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "astropy.units.nm"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_binned_waverange": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.nm",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_default_binset_from_bandpass": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "Observation",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_default_binset_from_spectrum": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "Observation",
    "SourceSpectrum",
    "SpectralElement",
    "astropy.modeling.models.Const1D",
    "astropy.units.cm",
    "astropy.units.erg",
    "astropy.units.s",
    "astropy.utils.exceptions.AstropyUserWarning",
    "numpy.testing.assert_array_equal",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_disjoint_spec": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "Observation",
    "SourceSpectrum",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_inherit_warnings": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "sorted"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_invalid_input_spec": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "Observation",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_reversed_binset": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "Observation",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_sampled_binned_exceptions": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_taper": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "NotImplementedError",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_undefined_binset": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "Observation",
    "SpectralElement",
    "astropy.modeling.models.Const1D",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation._bandfile": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "synphot.tests.test_observation._specfile": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "synphot.tests.test_observation.catch_warnings": {
  "data": {
   "shadows": "astropy.tests.helper.catch_warnings"
  },
  "type": "import"
 },
 "synphot.tests.test_observation.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "synphot.tests.test_observation.minversion": {
  "data": {
   "shadows": "astropy.utils.minversion"
  },
  "type": "import"
 },
 "synphot.tests.test_observation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.tests.test_observation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "synphot.tests.test_observation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "synphot.tests.test_observation.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "synphot.tests.test_observation.test_countrate_neg_leak": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "Observation",
    "SourceSpectrum.from_file",
    "SpectralElement.from_file",
    "astropy.utils.data.get_pkg_data_filename",
    "numpy.fromfile",
    "obs",
    "obs.countrate",
    "synphot.tests.test_observation.os",
    "synphot.tests.test_observation.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_observation.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.tests.test_observation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "synphot.tests.test_reddening": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.minversion",
    "synphot.tests.test_reddening.scipy"
   ]
  },
  "type": "module"
 },
 "synphot.tests.test_reddening.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "synphot.tests.test_reddening.HAS_SCIPY": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "synphot.tests.test_reddening.TestExtinction": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_reddening.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_reddening.TestExtinction.setup_class": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "astropy.units.mag",
    "astropy.utils.data.get_pkg_data_filename",
    "synphot.tests.test_reddening.os"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_extcurve_call": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "astropy.units.AA",
    "numpy.squeeze",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_invalid_ebv": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "astropy.units.FLAM",
    "synphot.tests.test_reddening.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_mul_spec": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.units.micron",
    "numpy.testing.assert_allclose",
    "sp2"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_qso_countrate": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Observation",
    "SourceSpectrum.from_file",
    "astropy.units.STmag",
    "astropy.units.mag",
    "astropy.utils.data.get_pkg_data_filename",
    "astropy.utils.exceptions.AstropyUserWarning",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_reddening.os",
    "synphot.tests.test_reddening.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_redlaw_call": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "astropy.units.micron",
    "astropy.units.spectral",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_reddening.TestWriteReddeningLaw": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_reddening.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_reddening.TestWriteReddeningLaw.setup_class": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "ReddeningLaw",
    "numpy.linspace",
    "synphot.tests.test_reddening.tempfile"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_reddening.TestWriteReddeningLaw.teardown_class": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "synphot.tests.test_reddening.shutil"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_reddening.TestWriteReddeningLaw.test_write": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ReddeningLaw.from_file",
    "astropy.io.fits.getheader",
    "numpy.testing.assert_allclose",
    "redlaw2",
    "synphot.tests.test_reddening.os",
    "synphot.tests.test_reddening.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_reddening.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "synphot.tests.test_reddening.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "synphot.tests.test_reddening.minversion": {
  "data": {
   "shadows": "astropy.utils.minversion"
  },
  "type": "import"
 },
 "synphot.tests.test_reddening.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.tests.test_reddening.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "synphot.tests.test_reddening.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "synphot.tests.test_reddening.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "synphot.tests.test_reddening.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "synphot.tests.test_reddening.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "synphot.tests.test_reddening.test_etau_madau": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "etau_madau",
    "extcurve",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_reddening.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_reddening.test_etau_madau_exceptions": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "etau_madau",
    "synphot.tests.test_reddening.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_reddening.test_redlaw_from_model": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "synphot.tests.test_reddening.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_reddening.test_redlaw_from_model_exception": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "synphot.tests.test_reddening.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_reddening.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.tests.test_specio": {
  "data": {},
  "type": "module"
 },
 "synphot.tests.test_specio.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "synphot.tests.test_specio.TestReadWriteFITS": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.setup_class": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.PHOTLAM",
    "numpy.array",
    "numpy.float64",
    "synphot.tests.test_specio.tempfile"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.teardown_class": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "synphot.tests.test_specio.shutil"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.test_array_data": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "astropy.io.fits.getheader",
    "astropy.utils.exceptions.AstropyUserWarning",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_specio.os",
    "synphot.tests.test_specio.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.test_exceptions": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float64",
    "synphot.tests.test_specio.os",
    "synphot.tests.test_specio.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.test_quantity_data": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "astropy.io.fits.getheader",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_specio.os"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_specio.assert_quantity_allclose": {
  "data": {
   "shadows": "astropy.tests.helper.assert_quantity_allclose"
  },
  "type": "import"
 },
 "synphot.tests.test_specio.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "synphot.tests.test_specio.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "synphot.tests.test_specio.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.tests.test_specio.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "synphot.tests.test_specio.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "synphot.tests.test_specio.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "synphot.tests.test_specio.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "synphot.tests.test_specio.test_read_ascii_spec": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.AA",
    "astropy.units.FLAM",
    "astropy.utils.data.get_pkg_data_filename",
    "synphot.tests.test_specio.os"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_specio.test_read_remote_spec": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "dict",
    "isinstance",
    "synphot.tests.test_specio.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_specio.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.minversion",
    "synphot.tests.test_spectrum.astropy",
    "synphot.tests.test_spectrum.scipy"
   ]
  },
  "type": "module"
 },
 "synphot.tests.test_spectrum.ASTROPY_LT_20": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "synphot.tests.test_spectrum.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.BrokenPowerLaw1D": {
  "data": {
   "shadows": "astropy.modeling.models.BrokenPowerLaw1D"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.Const1D": {
  "data": {
   "shadows": "astropy.modeling.models.Const1D"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.ExponentialCutoffPowerLaw1D": {
  "data": {
   "shadows": "astropy.modeling.models.ExponentialCutoffPowerLaw1D"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.HAS_SCIPY": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "synphot.tests.test_spectrum.LogParabola1D": {
  "data": {
   "shadows": "astropy.modeling.models.LogParabola1D"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.PowerLaw1D": {
  "data": {
   "shadows": "astropy.modeling.models.PowerLaw1D"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.RedshiftScaleFactor": {
  "data": {
   "shadows": "astropy.modeling.models.RedshiftScaleFactor"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.TestBlackBodySource": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestBlackBodySource.setup_class": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "SourceSpectrum"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBlackBodySource.test_eval": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBoxBandpass": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestBoxBandpass.setup_class": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "SpectralElement"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBoxBandpass.test_conversion": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "SpectralElement",
    "astropy.units.nm",
    "bp2",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBoxBandpass.test_eval": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBoxBandpass.test_fwhm": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBoxBandpass.test_multi_n_models": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "SpectralElement",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBoxBandpass.test_taper": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "astropy.units.nm",
    "bp2",
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_BrokenPowerLaw1D": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.modeling.models.BrokenPowerLaw1D",
    "numpy.testing.assert_allclose",
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_Const1D": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.modeling.models.Const1D",
    "numpy.testing.assert_array_equal",
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_ConstFlux1D": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.units.Jy",
    "astropy.units.convert_flux",
    "numpy.testing.assert_allclose",
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_ExponentialCutoffPowerLaw1D": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.modeling.models.ExponentialCutoffPowerLaw1D",
    "numpy.testing.assert_allclose",
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_GaussianAbsorption1D": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "SpectralElement",
    "bp",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_LogParabola1D": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.modeling.models.LogParabola1D",
    "numpy.testing.assert_allclose",
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_Lorentz1D": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "SourceSpectrum",
    "numpy.testing.assert_allclose",
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_MexicanHat1D": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "SourceSpectrum",
    "numpy.testing.assert_allclose",
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_PowerLaw1D": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.modeling.models.PowerLaw1D",
    "numpy.testing.assert_allclose",
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap.setup_class": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "SpectralElement"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap.test_exceptions": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap.test_full": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "SourceSpectrum",
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap.test_none": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "SourceSpectrum",
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap.test_partial_most": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "SourceSpectrum",
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap.test_partial_notmost": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "SourceSpectrum",
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap.test_special_cases": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "SourceSpectrum",
    "SpectralElement",
    "astropy.modeling.models.Const1D",
    "bp",
    "bp.check_overlap",
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.setup_class": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "astropy.utils.data.get_pkg_data_filename",
    "synphot.tests.test_spectrum.os"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_avgwave": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_barlam": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_call": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_emflx": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "astropy.units.FLAM",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_equivwidth": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "astropy.units.AA",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_fwhm": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.dimensionless_unscaled",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_integrate": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "astropy.units.AA",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_invalid_flux_unit": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "SpectralElement",
    "astropy.units.UnitsError",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_pivot": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_qtlam": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "astropy.units.dimensionless_unscaled",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_rectw": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_rmswidth": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.dimensionless_unscaled",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_tlambda": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_tpeak": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_uresp": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "astropy.units.FLAM",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_wpeak": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.setup_class": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "astropy.utils.data.get_pkg_data_filename",
    "synphot.tests.test_spectrum.os"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_call": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "astropy.units.FLAM",
    "astropy.units.convert_flux",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_conversion": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "astropy.units.FNU",
    "astropy.units.micron",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_integrate": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "astropy.units.FLAM",
    "astropy.units.Jy",
    "astropy.units.cm",
    "astropy.units.erg",
    "astropy.units.s",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_invalid_flux_unit": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "SourceSpectrum",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_invalid_models": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.io.fits.HDUList",
    "astropy.modeling.models.RedshiftScaleFactor",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_metadata": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "str"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_neg_flux": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.utils.exceptions.AstropyUserWarning",
    "numpy.testing.assert_array_equal",
    "sp",
    "sp.warnings",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_taper": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.units.FLAM",
    "numpy.testing.assert_allclose",
    "sp",
    "sp._get_arrays"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestForceExtrap": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestForceExtrap.test_analytical": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "SourceSpectrum",
    "numpy.testing.assert_allclose",
    "sp",
    "sp.force_extrapolation"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestForceExtrap.test_empirical": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "SourceSpectrum",
    "numpy.testing.assert_allclose",
    "sp",
    "sp.force_extrapolation",
    "sp.z",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestGaussianSource": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestGaussianSource.setup_class": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.units.cm",
    "astropy.units.erg",
    "astropy.units.s"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestGaussianSource.test_alt_source": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.units.AA",
    "numpy.testing.assert_allclose",
    "sp2"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestGaussianSource.test_eval": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestGaussianSource.test_fwhm": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "SpectralElement",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestGaussianSource.test_symmetry": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestGaussianSource.test_totalflux": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.units.AA",
    "astropy.units.FLAM",
    "astropy.units.cm",
    "astropy.units.nm.to",
    "astropy.units.photon",
    "astropy.units.s",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestMathOperators.setup_class": {
  "data": {
   "lineno": 901,
   "symbols_in_volume": [
    "SourceSpectrum",
    "SpectralElement",
    "astropy.units.FLAM",
    "astropy.units.nm"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_bandpass_addsub": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "NotImplementedError",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_bandpass_mul_div_bandpass": {
  "data": {
   "lineno": 1024,
   "symbols_in_volume": [
    "ans1",
    "ans1.waveset",
    "ans2",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_bandpass_mul_div_exceptions": {
  "data": {
   "lineno": 1033,
   "symbols_in_volume": [
    "DummyObject",
    "astropy.units.AA",
    "astropy.units.Quantity",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_bandpass_mul_div_exceptions.DummyObject": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_bandpass_mul_div_scalar": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "ans1",
    "ans2",
    "ans3",
    "astropy.units.Quantity",
    "astropy.units.dimensionless_unscaled",
    "isinstance",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_source_add": {
  "data": {
   "lineno": 912,
   "symbols_in_volume": [
    "ans",
    "ans.waveset",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_source_addsub_circular": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": [
    "ans",
    "ans.waveset",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_source_addsub_exception": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": [
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_source_mul_div_exceptions": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.Quantity",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_source_mul_div_scalar": {
  "data": {
   "lineno": 938,
   "symbols_in_volume": [
    "ans1",
    "ans2",
    "ans3",
    "astropy.units.Quantity",
    "astropy.units.dimensionless_unscaled",
    "isinstance",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_source_mul_div_spec": {
  "data": {
   "lineno": 957,
   "symbols_in_volume": [
    "ans1",
    "ans1.waveset",
    "ans2",
    "ans3",
    "ans4",
    "astropy.units.dimensionless_unscaled",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_source_sub": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "ans",
    "ans.waveset",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestNormalize._compare_countrate": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "Observation",
    "astropy.utils.exceptions.AstropyUserWarning",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_spectrum.warnings"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize._select_sp": {
  "data": {
   "lineno": 641,
   "symbols_in_volume": [
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.setup_class": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "SourceSpectrum",
    "SpectralElement",
    "SpectralElement.from_file",
    "astropy.units.cm",
    "astropy.units.erg",
    "astropy.units.s",
    "astropy.utils.data.get_pkg_data_filename",
    "synphot.tests.test_spectrum.os"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.test_exceptions": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "SourceSpectrum",
    "SpectralElement",
    "astropy.modeling.models.Const1D",
    "astropy.units.VEGAMAG",
    "astropy.units.ct",
    "bp",
    "numpy.ones",
    "sp",
    "sp.normalize",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.test_renorm_density": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "astropy.units.ABmag",
    "astropy.units.FLAM",
    "astropy.units.FNU",
    "astropy.units.Jy",
    "astropy.units.PHOTNU",
    "astropy.units.STmag",
    "astropy.units.mJy",
    "sp",
    "sp.normalize",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.test_renorm_noband_jy": {
  "data": {
   "lineno": 708,
   "symbols_in_volume": [
    "NotImplementedError",
    "astropy.units.Jy",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.test_renorm_nondensity": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "astropy.units.OBMAG",
    "astropy.units.count",
    "sp",
    "sp.normalize",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.test_renorm_partial_most": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "SpectralElement",
    "astropy.units.Jy",
    "astropy.utils.exceptions.AstropyUserWarning",
    "bp",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.test_renorm_partial_notmost": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.units.Jy",
    "astropy.utils.exceptions.AstropyUserWarning",
    "sp",
    "sp.normalize",
    "sp.warnings",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.test_renorm_vegamag": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "astropy.units.VEGAMAG",
    "sp",
    "sp.normalize",
    "synphot.tests.test_spectrum._vspec",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestPowerLawSource": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestPowerLawSource.setup_class": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "SourceSpectrum"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestPowerLawSource.test_eval": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestPowerLawSource.test_no_default_wave": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestPowerLawSource.test_normalization": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "astropy.units.nm",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestRedShift": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestRedShift.setup_class": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.units.cm",
    "astropy.units.erg",
    "astropy.units.s"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestRedShift.test_composite_redshift": {
  "data": {
   "lineno": 878,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "sp2",
    "sp2.z"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestRedShift.test_conserve_flux_redshift": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "SourceSpectrum",
    "numpy.testing.assert_allclose",
    "sp",
    "sp.integrate",
    "sp.z"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestRedShift.test_const_flux_redshift": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.units.Jy",
    "numpy.testing.assert_allclose",
    "sp",
    "sp_z0"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestRedShift.test_property": {
  "data": {
   "lineno": 862,
   "symbols_in_volume": [
    "astropy.modeling.core.CompoundModel",
    "astropy.modeling.core._CompoundModel",
    "astropy.units.AA",
    "isinstance",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_box1d": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "SpectralElement",
    "bp",
    "bp.model.sampleset",
    "bp.waveset.value",
    "bp2",
    "bp2.waveset.value",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_complicated_tree": {
  "data": {
   "lineno": 816,
   "symbols_in_volume": [
    "SourceSpectrum",
    "SpectralElement",
    "astropy.modeling.models.Const1D",
    "bp",
    "bp2",
    "numpy.testing.assert_array_equal",
    "sp",
    "sp2"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_composite": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "SourceSpectrum",
    "SpectralElement",
    "astropy.units.cm",
    "astropy.units.erg",
    "astropy.units.s",
    "numpy.testing.assert_allclose",
    "sp",
    "sp.waveset.value"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_composite_none": {
  "data": {
   "lineno": 784,
   "symbols_in_volume": [
    "SpectralElement",
    "astropy.modeling.models.Const1D",
    "bp",
    "bp.waveset",
    "bp2",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_exceptions": {
  "data": {
   "lineno": 841,
   "symbols_in_volume": [
    "get_waveset",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_none": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.modeling.models.Const1D",
    "sp",
    "sp.waveset"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_redshift": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.modeling.models.RedshiftScaleFactor",
    "astropy.units.cm",
    "astropy.units.erg",
    "astropy.units.s",
    "m",
    "numpy.testing.assert_allclose",
    "sp",
    "sp.waveset.value",
    "sp.z"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_redshift_none": {
  "data": {
   "lineno": 812,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.modeling.models.Const1D",
    "sp",
    "sp.waveset"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_sampleset": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.units.cm",
    "astropy.units.erg",
    "astropy.units.s",
    "numpy.testing.assert_array_equal",
    "sp",
    "sp.model.sampleset",
    "sp.waveset.value"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWriteSpec": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestWriteSpec.setup_class": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "SourceSpectrum",
    "SpectralElement",
    "numpy.ones",
    "synphot.tests.test_spectrum.tempfile"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWriteSpec.teardown_class": {
  "data": {
   "lineno": 1095,
   "symbols_in_volume": [
    "synphot.tests.test_spectrum.shutil"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWriteSpec.test_write": {
  "data": {
   "lineno": 1066,
   "symbols_in_volume": [
    "astropy.io.fits.getheader",
    "numpy.testing.assert_allclose",
    "sp1",
    "sp1.waveset",
    "sp2",
    "sp2.waveset",
    "synphot.tests.test_spectrum.os",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum._vspec": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "synphot.tests.test_spectrum.astropy": {
  "data": {
   "shadows": "astropy"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.astropyconst13": {
  "data": {
   "shadows": "astropy.constants.astropyconst13"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.astropyconst20": {
  "data": {
   "shadows": "astropy.constants.astropyconst20"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.const": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.minversion": {
  "data": {
   "shadows": "astropy.utils.minversion"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.modeling": {
  "data": {
   "shadows": "astropy.modeling"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.setup_module": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "astropy.constants.astropyconst13.h",
    "astropy.constants.astropyconst13.k_B",
    "astropy.constants.astropyconst13.sigma_sb",
    "astropy.constants.h",
    "astropy.constants.k_B",
    "astropy.constants.si.h",
    "astropy.constants.si.k_B",
    "astropy.constants.si.sigma_sb",
    "astropy.constants.sigma_sb",
    "synphot.tests.test_spectrum.ASTROPY_LT_20"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.si": {
  "data": {
   "shadows": "astropy.constants.si"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.teardown_module": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "astropy.constants.astropyconst20.h",
    "astropy.constants.astropyconst20.k_B",
    "astropy.constants.astropyconst20.sigma_sb",
    "astropy.constants.h",
    "astropy.constants.k_B",
    "astropy.constants.si.h",
    "astropy.constants.si.k_B",
    "astropy.constants.si.sigma_sb",
    "astropy.constants.sigma_sb",
    "synphot.tests.test_spectrum.ASTROPY_LT_20"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.test_filter": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "isinstance",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.test_filter_exception": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.test_flux_conversion_vega": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "astropy.units.Jy",
    "astropy.units.PHOTLAM",
    "astropy.units.VEGAMAG",
    "astropy.units.convert_flux",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_spectrum._vspec",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.test_gaussian_source_watts": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.units.FLAM",
    "astropy.units.W",
    "astropy.units.m",
    "astropy.units.um",
    "numpy.testing.assert_allclose",
    "sp",
    "sp.integrate"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.test_load_vspec": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "synphot.tests.test_spectrum._vspec",
    "synphot.tests.test_spectrum.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_spectrum.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.tests.test_spectrum.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "synphot.tests.test_thermal": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.minversion",
    "synphot.tests.test_thermal.astropy",
    "synphot.tests.test_thermal.scipy"
   ]
  },
  "type": "module"
 },
 "synphot.tests.test_thermal.ASTROPY_LT_20": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "synphot.tests.test_thermal.HAS_SCIPY": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "object",
    "synphot.tests.test_thermal.pytest"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.setup_class": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.utils.data.get_pkg_data_filename",
    "synphot.tests.test_thermal.os"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.test_from_file_exceptions": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "astropy.utils.data.get_pkg_data_filename",
    "synphot.tests.test_thermal.os",
    "synphot.tests.test_thermal.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.test_properties": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "astropy.units.K"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.test_taper": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "NotImplementedError",
    "synphot.tests.test_thermal.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.test_thermal_source": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "sp"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_thermal.astropy": {
  "data": {
   "shadows": "astropy"
  },
  "type": "import"
 },
 "synphot.tests.test_thermal.astropyconst13": {
  "data": {
   "shadows": "astropy.constants.astropyconst13"
  },
  "type": "import"
 },
 "synphot.tests.test_thermal.astropyconst20": {
  "data": {
   "shadows": "astropy.constants.astropyconst20"
  },
  "type": "import"
 },
 "synphot.tests.test_thermal.const": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "synphot.tests.test_thermal.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "synphot.tests.test_thermal.minversion": {
  "data": {
   "shadows": "astropy.utils.minversion"
  },
  "type": "import"
 },
 "synphot.tests.test_thermal.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.tests.test_thermal.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "synphot.tests.test_thermal.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "synphot.tests.test_thermal.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "synphot.tests.test_thermal.setup_module": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "astropy.constants.astropyconst13.h",
    "astropy.constants.astropyconst13.k_B",
    "astropy.constants.astropyconst13.sigma_sb",
    "astropy.constants.h",
    "astropy.constants.k_B",
    "astropy.constants.si.h",
    "astropy.constants.si.k_B",
    "astropy.constants.si.sigma_sb",
    "astropy.constants.sigma_sb",
    "synphot.tests.test_thermal.ASTROPY_LT_20"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_thermal.si": {
  "data": {
   "shadows": "astropy.constants.si"
  },
  "type": "import"
 },
 "synphot.tests.test_thermal.teardown_module": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "astropy.constants.astropyconst20.h",
    "astropy.constants.astropyconst20.k_B",
    "astropy.constants.astropyconst20.sigma_sb",
    "astropy.constants.h",
    "astropy.constants.k_B",
    "astropy.constants.si.h",
    "astropy.constants.si.k_B",
    "astropy.constants.si.sigma_sb",
    "astropy.constants.sigma_sb",
    "synphot.tests.test_thermal.ASTROPY_LT_20"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_thermal.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.tests.test_units": {
  "data": {
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.ABmag",
    "astropy.units.AREA",
    "astropy.units.FLAM",
    "astropy.units.FNU",
    "astropy.units.Hz",
    "astropy.units.Jy",
    "astropy.units.OBMAG",
    "astropy.units.PHOTLAM",
    "astropy.units.PHOTNU",
    "astropy.units.STmag",
    "astropy.units.VEGAMAG",
    "astropy.units.count",
    "astropy.units.micron"
   ]
  },
  "type": "module"
 },
 "synphot.tests.test_units._area": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "synphot.tests.test_units._flux_abmag": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "synphot.tests.test_units._flux_count": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "synphot.tests.test_units._flux_flam": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "synphot.tests.test_units._flux_fnu": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "synphot.tests.test_units._flux_jy": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "synphot.tests.test_units._flux_obmag": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "synphot.tests.test_units._flux_photlam": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "synphot.tests.test_units._flux_photnu": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "synphot.tests.test_units._flux_stmag": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "synphot.tests.test_units._flux_vegamag": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "synphot.tests.test_units._freq": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "synphot.tests.test_units._wave": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "synphot.tests.test_units._wave_angstrom": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "synphot.tests.test_units._wavenum_micron": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "synphot.tests.test_units.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.tests.test_units.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "synphot.tests.test_units.test_flux_conversion": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "astropy.units.ABmag",
    "astropy.units.FLAM",
    "astropy.units.FNU",
    "astropy.units.Jy",
    "astropy.units.OBMAG",
    "astropy.units.PHOTLAM",
    "astropy.units.PHOTNU",
    "astropy.units.STmag",
    "astropy.units.convert_flux",
    "astropy.units.count",
    "astropy.units.mJy",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "synphot.tests.test_units._area",
    "synphot.tests.test_units._flux_abmag",
    "synphot.tests.test_units._flux_count",
    "synphot.tests.test_units._flux_flam",
    "synphot.tests.test_units._flux_fnu",
    "synphot.tests.test_units._flux_jy",
    "synphot.tests.test_units._flux_obmag",
    "synphot.tests.test_units._flux_photlam",
    "synphot.tests.test_units._flux_photnu",
    "synphot.tests.test_units._flux_stmag",
    "synphot.tests.test_units._wave",
    "synphot.tests.test_units.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_units.test_flux_conversion_exceptions": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.PHOTLAM",
    "astropy.units.UnitsError",
    "astropy.units.VEGAMAG",
    "astropy.units.convert_flux",
    "astropy.units.count",
    "synphot.tests.test_units._flux_fnu",
    "synphot.tests.test_units._flux_obmag",
    "synphot.tests.test_units._flux_photlam",
    "synphot.tests.test_units._wave",
    "synphot.tests.test_units.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_units.test_implicit_assumptions": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.AREA.physical_type",
    "astropy.units.HC.unit",
    "astropy.units.SR_PER_ARCSEC2",
    "astropy.units.THROUGHPUT.physical_type",
    "astropy.units.erg",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_units.test_validate_quantity": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "astropy.units.AREA",
    "astropy.units.m",
    "astropy.units.micron",
    "astropy.units.spectral",
    "astropy.units.validate_quantity",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_units._wave_angstrom",
    "synphot.tests.test_units._wavenum_micron",
    "synphot.tests.test_units.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_units.test_validate_unit": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.ABmag",
    "astropy.units.FLAM",
    "astropy.units.FNU",
    "astropy.units.K",
    "astropy.units.OBMAG",
    "astropy.units.PHOTLAM",
    "astropy.units.PHOTNU",
    "astropy.units.STmag",
    "astropy.units.THROUGHPUT",
    "astropy.units.VEGAMAG",
    "astropy.units.m",
    "astropy.units.micron",
    "astropy.units.validate_unit",
    "synphot.tests.test_units.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_units.test_validate_unit_exceptions": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.validate_unit",
    "astropy.units.validate_wave_unit",
    "synphot.tests.test_units.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_units.test_validate_wave_unit": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.Hz",
    "astropy.units.micron",
    "astropy.units.validate_wave_unit",
    "synphot.tests.test_units.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_units.test_wave_conversion": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.Hz",
    "astropy.units.micron",
    "astropy.units.spectral",
    "numpy.testing.assert_allclose",
    "synphot.tests.test_units._freq",
    "synphot.tests.test_units._wave_angstrom",
    "synphot.tests.test_units._wavenum_micron",
    "synphot.tests.test_units.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_units.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.tests.test_utils": {
  "data": {},
  "type": "module"
 },
 "synphot.tests.test_utils.TestMergeWave": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "synphot.tests.test_utils.TestMergeWave.setup_class": {
  "data": {
   "lineno": 92
  },
  "type": "function"
 },
 "synphot.tests.test_utils.TestMergeWave.test_merge_none": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_utils.TestMergeWave.test_merge_same": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_utils.TestMergeWave.test_merge_thres": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.all",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.tests.test_utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "synphot.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "synphot.tests.test_utils.test_download_bad_root": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "OSError",
    "str",
    "synphot.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_utils.test_download_data": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len",
    "open",
    "synphot.tests.test_utils.os"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_utils.test_genwave": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "astropy.units.micron",
    "isinstance",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "str",
    "synphot.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_utils.test_overlap_status": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "numpy.arange",
    "synphot.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_utils.test_validate_totalflux": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.inf",
    "numpy.nan",
    "synphot.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_utils.test_validate_wavelengths": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.micron",
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "synphot.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "synphot.tests.test_utils.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.thermal": {
  "data": {},
  "type": "module"
 },
 "synphot.thermal.ThermalSpectralElement": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "synphot.thermal.ThermalSpectralElement.__init__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "super",
    "synphot.thermal.ThermalSpectralElement"
   ]
  },
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.beam_fill_factor": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "astropy.units.validate_quantity"
   ]
  },
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.from_file": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "astropy.io.fits.getheader",
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.taper": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.temperature": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "astropy.units.K",
    "astropy.units.validate_quantity"
   ]
  },
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.thermal_source": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "SourceSpectrum",
    "astropy.units.SR_PER_ARCSEC2"
   ]
  },
  "type": "function"
 },
 "synphot.thermal.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "synphot.thermal.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "synphot.thermal.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.units": {
  "data": {
   "symbols_in_volume": [
    "astropy.constants.c.to",
    "astropy.constants.h.cgs",
    "astropy.units.AA",
    "astropy.units.Hz",
    "astropy.units.add_enabled_units",
    "astropy.units.arcsec",
    "astropy.units.cm",
    "astropy.units.def_unit",
    "astropy.units.dimensionless_unscaled",
    "astropy.units.erg",
    "astropy.units.mag",
    "astropy.units.photon",
    "astropy.units.rad.to",
    "astropy.units.s",
    "synphot.units.C",
    "synphot.units.FLAM",
    "synphot.units.FNU",
    "synphot.units.H",
    "synphot.units.OBMAG",
    "synphot.units.PHOTLAM",
    "synphot.units.PHOTNU",
    "synphot.units.VEGAMAG"
   ]
  },
  "type": "module"
 },
 "synphot.units.AREA": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "synphot.units.C": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "synphot.units.FLAM": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "synphot.units.FNU": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "synphot.units.H": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "synphot.units.HC": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "synphot.units.OBMAG": {
  "data": {
   "lineno": 51
  },
  "type": "constant"
 },
 "synphot.units.PHOTLAM": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "synphot.units.PHOTNU": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "synphot.units.SR_PER_ARCSEC2": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "synphot.units.THROUGHPUT": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "synphot.units.VEGAMAG": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "synphot.units.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "synphot.units._convert_flux": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.UnitsError",
    "astropy.units.count",
    "isinstance",
    "synphot.units.AREA",
    "synphot.units.OBMAG",
    "synphot.units.PHOTLAM",
    "synphot.units.VEGAMAG",
    "synphot.units.spectral_density_count",
    "synphot.units.spectral_density_vega",
    "vegaspec"
   ]
  },
  "type": "function"
 },
 "synphot.units.const": {
  "data": {
   "shadows": "astropy.constants"
  },
  "type": "import"
 },
 "synphot.units.convert_flux": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.Quantity",
    "astropy.units.UnitConversionError",
    "astropy.units.spectral_density",
    "isinstance",
    "synphot.units.PHOTLAM",
    "synphot.units._convert_flux",
    "synphot.units.validate_unit"
   ]
  },
  "type": "function"
 },
 "synphot.units.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.units.spectral_density_count": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.count",
    "astropy.units.spectral",
    "calculate_bin_edges",
    "calculate_bin_widths",
    "synphot.units.AREA",
    "synphot.units.OBMAG",
    "synphot.units.PHOTLAM"
   ]
  },
  "type": "function"
 },
 "synphot.units.spectral_density_count.converter_count": {
  "data": {
   "lineno": 127
  },
  "type": "function"
 },
 "synphot.units.spectral_density_count.converter_obmag": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "numpy.log10"
   ]
  },
  "type": "function"
 },
 "synphot.units.spectral_density_count.iconverter_count": {
  "data": {
   "lineno": 130
  },
  "type": "function"
 },
 "synphot.units.spectral_density_count.iconverter_obmag": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "synphot.units.spectral_density_vega": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "astropy.units.spectral_density",
    "synphot.units.PHOTLAM",
    "synphot.units.VEGAMAG"
   ]
  },
  "type": "function"
 },
 "synphot.units.spectral_density_vega.converter": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.log10",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "synphot.units.spectral_density_vega.iconverter": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "synphot.units.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.units.validate_quantity": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "isinstance",
    "synphot.units.validate_unit"
   ]
  },
  "type": "function"
 },
 "synphot.units.validate_unit": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.AA",
    "astropy.units.ABmag",
    "astropy.units.Jy",
    "astropy.units.LogUnit",
    "astropy.units.STmag",
    "astropy.units.Unit",
    "astropy.units.UnitBase",
    "astropy.units.micron",
    "isinstance",
    "str",
    "synphot.units.THROUGHPUT"
   ]
  },
  "type": "function"
 },
 "synphot.units.validate_wave_unit": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "synphot.units.validate_unit"
   ]
  },
  "type": "function"
 },
 "synphot.utils": {
  "data": {},
  "type": "module"
 },
 "synphot.utils.ConfigItem": {
  "data": {
   "shadows": "astropy.config.ConfigItem"
  },
  "type": "import"
 },
 "synphot.utils.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "synphot.utils.copyfile": {
  "data": {
   "shadows": "shutil.copyfile"
  },
  "type": "import"
 },
 "synphot.utils.download_data": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "Exception",
    "OSError",
    "astropy.config.ConfigItem",
    "astropy.utils.data.download_file",
    "cfgitem",
    "isinstance",
    "print",
    "shutil.copyfile",
    "str",
    "synphot.utils.os"
   ]
  },
  "type": "function"
 },
 "synphot.utils.download_file": {
  "data": {
   "shadows": "astropy.utils.data.download_file"
  },
  "type": "import"
 },
 "synphot.utils.generate_wavelengths": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "astropy.units.AA",
    "astropy.units.validate_unit",
    "numpy.arange",
    "numpy.float64",
    "numpy.linspace",
    "numpy.log10",
    "numpy.logspace"
   ]
  },
  "type": "function"
 },
 "synphot.utils.merge_wavelengths": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "len",
    "numpy.append",
    "numpy.union1d",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "synphot.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "synphot.utils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "synphot.utils.overlap_status": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "synphot.utils.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "synphot.utils.validate_totalflux": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.isinf",
    "numpy.isnan"
   ]
  },
  "type": "function"
 },
 "synphot.utils.validate_wavelengths": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.validate_wave_unit",
    "isinstance",
    "numpy.alltrue",
    "numpy.any",
    "numpy.asarray",
    "numpy.isscalar",
    "numpy.sort",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "synphot.version": {
  "data": {
   "symbols_in_volume": [
    "synphot.version.bugfix",
    "synphot.version.datetime",
    "synphot.version.major",
    "synphot.version.minor"
   ]
  },
  "type": "module"
 },
 "synphot.version.astropy_helpers_version": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "synphot.version.bugfix": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "synphot.version.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "synphot.version.debug": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "synphot.version.githash": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "synphot.version.major": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "synphot.version.minor": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "synphot.version.release": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "synphot.version.timestamp": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "synphot.version.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "synphot.version.version": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "synphot.version.version_info": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 }
}