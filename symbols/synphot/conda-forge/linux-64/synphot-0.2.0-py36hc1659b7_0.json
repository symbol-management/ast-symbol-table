{
 "synphot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot._astropy_init": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.config.configuration.ConfigurationDefaultMissingError",
   "astropy.config.configuration.ConfigurationDefaultMissingWarning",
   "astropy.config.configuration.update_default_config",
   "astropy.tests.runner.TestRunner.make_test_runner_in",
   "builtins._ASTROPY_SETUP_",
   "os.environ.get",
   "os.path.dirname",
   "os.path.isfile",
   "os.path.join",
   "warnings.warn"
  ],
  "type": "module"
 },
 "synphot.binning": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.binning._slow_calcbinflux": {
  "lineno": 17,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.float64",
   "numpy.sum"
  ],
  "type": "function"
 },
 "synphot.binning.calculate_bin_centers": {
  "lineno": 129,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "synphot.binning.calculate_bin_edges": {
  "lineno": 51,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "numpy.empty",
   "numpy.float64"
  ],
  "type": "function"
 },
 "synphot.binning.calculate_bin_widths": {
  "lineno": 95,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "numpy.abs"
  ],
  "type": "function"
 },
 "synphot.binning.pixel_range": {
  "lineno": 361,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.binning.wave_range": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.argmin",
   "numpy.modf"
  ],
  "type": "function"
 },
 "synphot.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy",
   "astropy.utils.introspection.minversion"
  ],
  "type": "module"
 },
 "synphot.config": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.config.Conf": {
  "lineno": 16,
  "symbols_in_volume": [
   "astropy.config.ConfigItem",
   "astropy.config.ConfigNamespace"
  ],
  "type": "class"
 },
 "synphot.conftest": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.tests.helper.enable_deprecations_as_exceptions",
   "astropy.tests.plugins.display.PYTEST_HEADER_MODULES",
   "astropy.tests.plugins.display.TESTED_VERSIONS",
   "astropy.version.version",
   "os.path.basename",
   "os.path.dirname"
  ],
  "type": "module"
 },
 "synphot.cython_version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.docstrings": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.exceptions.DisjointError": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.DuplicateWavelength": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.ExtrapolationNotAllowed": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.IncompatibleSources": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.InterpolationNotAllowed": {
  "lineno": 84,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.OverlapError": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.PartialOverlap": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.SynphotError": {
  "lineno": 11,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.TableFormatError": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.TableFormatError.__init__": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.exceptions.UndefinedBinset": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.UnsortedWavelength": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.exceptions.ZeroWavelength": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.models": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.models.BaseGaussian1D": {
  "lineno": 407,
  "symbols_in_volume": [
   "astropy.modeling.models.Gaussian1D"
  ],
  "type": "class"
 },
 "synphot.models.BaseGaussian1D.sampleset": {
  "lineno": 412,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "synphot.models.BlackBody1D": {
  "lineno": 39,
  "symbols_in_volume": [
   "astropy.modeling.Fittable1DModel",
   "astropy.modeling.Parameter"
  ],
  "type": "class"
 },
 "synphot.models.BlackBody1D.__init__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.models.BlackBody1D.bounding_box": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.log10"
  ],
  "type": "function"
 },
 "synphot.models.BlackBody1D.evaluate": {
  "lineno": 102,
  "symbols_in_volume": [
   "astropy.modeling.blackbody.blackbody_nu",
   "astropy.units.AA",
   "astropy.units.PHOTLAM",
   "astropy.units.spectral_density",
   "astropy.units.sr",
   "astropy.units.sr.to",
   "numpy.ascontiguousarray",
   "numpy.seterr"
  ],
  "type": "function"
 },
 "synphot.models.BlackBody1D.lambda_max": {
  "lineno": 55,
  "symbols_in_volume": [
   "astropy.constants.b_wien.value.to",
   "astropy.units.AA",
   "astropy.units.m.to"
  ],
  "type": "function"
 },
 "synphot.models.BlackBody1D.sampleset": {
  "lineno": 81,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.asarray",
   "numpy.logspace"
  ],
  "type": "function"
 },
 "synphot.models.BlackBodyNorm1D": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.models.BlackBodyNorm1D.__init__": {
  "lineno": 156,
  "symbols_in_volume": [
   "astropy.constants.R_sun.value",
   "astropy.constants.kpc.value",
   "numpy.pi"
  ],
  "type": "function"
 },
 "synphot.models.BlackBodyNorm1D.evaluate": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.models.Box1D": {
  "lineno": 181,
  "symbols_in_volume": [
   "astropy.modeling.models.Box1D"
  ],
  "type": "class"
 },
 "synphot.models.Box1D._calc_sampleset": {
  "lineno": 186,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "synphot.models.Box1D.sampleset": {
  "lineno": 196,
  "symbols_in_volume": [
   "functools.partial",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "synphot.models.ConstFlux1D": {
  "lineno": 220,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D"
  ],
  "type": "class"
 },
 "synphot.models.ConstFlux1D.__init__": {
  "lineno": 236,
  "symbols_in_volume": [
   "astropy.units.ABmag",
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.PHOTLAM",
   "astropy.units.Quantity",
   "astropy.units.STmag",
   "astropy.units.convert_flux"
  ],
  "type": "function"
 },
 "synphot.models.ConstFlux1D.evaluate": {
  "lineno": 255,
  "symbols_in_volume": [
   "astropy.units.PHOTLAM",
   "astropy.units.convert_flux",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "synphot.models.Empirical1D": {
  "lineno": 274,
  "symbols_in_volume": [
   "astropy.modeling.models.Tabular1D"
  ],
  "type": "class"
 },
 "synphot.models.Empirical1D.__init__": {
  "lineno": 296,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "synphot.models.Empirical1D._process_neg_flux": {
  "lineno": 331,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.asarray",
   "numpy.isscalar",
   "numpy.where",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.models.Empirical1D.evaluate": {
  "lineno": 373,
  "symbols_in_volume": [
   "numpy.isscalar",
   "numpy.nan",
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "synphot.models.Empirical1D.is_tapered": {
  "lineno": 365,
  "symbols_in_volume": [
   "numpy.array_equal"
  ],
  "type": "function"
 },
 "synphot.models.Empirical1D.sampleset": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.squeeze"
  ],
  "type": "function"
 },
 "synphot.models.Gaussian1D": {
  "lineno": 441,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.models.GaussianAbsorption1D": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.models.GaussianAbsorption1D.evaluate": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.models.GaussianAbsorption1D.fit_deriv": {
  "lineno": 461,
  "symbols_in_volume": [
   "operator.neg"
  ],
  "type": "function"
 },
 "synphot.models.GaussianFlux1D": {
  "lineno": 471,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.models.GaussianFlux1D.__init__": {
  "lineno": 496,
  "symbols_in_volume": [
   "astropy.stats.funcs.gaussian_fwhm_to_sigma",
   "astropy.stats.funcs.gaussian_sigma_to_fwhm",
   "astropy.units.AA",
   "astropy.units.AA.to",
   "astropy.units.PHOTLAM",
   "astropy.units.Quantity",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "astropy.units.spectral_density",
   "numpy.pi",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "synphot.models.Lorentz1D": {
  "lineno": 528,
  "symbols_in_volume": [
   "astropy.modeling.models.Lorentz1D"
  ],
  "type": "class"
 },
 "synphot.models.Lorentz1D.sampleset": {
  "lineno": 533,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "synphot.models.MexicanHat1D": {
  "lineno": 557,
  "symbols_in_volume": [
   "astropy.modeling.models.MexicanHat1D"
  ],
  "type": "class"
 },
 "synphot.models.MexicanHat1D.sampleset": {
  "lineno": 562,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "synphot.models.PowerLawFlux1D": {
  "lineno": 586,
  "symbols_in_volume": [
   "astropy.modeling.models.PowerLaw1D"
  ],
  "type": "class"
 },
 "synphot.models.PowerLawFlux1D.__init__": {
  "lineno": 609,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.PHOTLAM",
   "astropy.units.Quantity",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.models.PowerLawFlux1D.evaluate": {
  "lineno": 627,
  "symbols_in_volume": [
   "astropy.units.PHOTLAM",
   "astropy.units.convert_flux"
  ],
  "type": "function"
 },
 "synphot.models.Trapezoid1D": {
  "lineno": 635,
  "symbols_in_volume": [
   "astropy.modeling.models.Trapezoid1D"
  ],
  "type": "class"
 },
 "synphot.models.Trapezoid1D.sampleset": {
  "lineno": 640,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "synphot.models._get_meta": {
  "lineno": 788,
  "symbols_in_volume": [
   "astropy.modeling.Model"
  ],
  "type": "function"
 },
 "synphot.models._get_sampleset": {
  "lineno": 657,
  "symbols_in_volume": [
   "astropy.modeling.Model"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_metadata": {
  "lineno": 796,
  "symbols_in_volume": [
   "astropy.utils.metadata.merge"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_metadata_compat": {
  "lineno": 806,
  "symbols_in_volume": [
   "astropy.modeling.core.CompoundModel",
   "collections.defaultdict",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_metadata_compat._get_meta_compat": {
  "lineno": 810,
  "symbols_in_volume": [
   "astropy.modeling.Model"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_metadata_compat._merge_meta_compat": {
  "lineno": 819,
  "symbols_in_volume": [
   "astropy.utils.metadata.merge"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset": {
  "lineno": 665,
  "symbols_in_volume": [
   "astropy.modeling.models.RedshiftScaleFactor",
   "astropy.modeling.models.Scale"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset_compat": {
  "lineno": 701,
  "symbols_in_volume": [
   "astropy.modeling.core.CompoundModel"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset_compat._get_sampleset_compat": {
  "lineno": 704,
  "symbols_in_volume": [
   "astropy.modeling.Model"
  ],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset_compat._merge_sampleset_compat": {
  "lineno": 716,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.models._model_tree_evaluate_sampleset_compat._shift_wavelengths_compat": {
  "lineno": 722,
  "symbols_in_volume": [
   "astropy.modeling.models.RedshiftScaleFactor",
   "astropy.modeling.models.Scale"
  ],
  "type": "function"
 },
 "synphot.models.get_metadata": {
  "lineno": 834,
  "symbols_in_volume": [
   "astropy.modeling.Model",
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "synphot.models.get_waveset": {
  "lineno": 756,
  "symbols_in_volume": [
   "astropy.modeling.Model"
  ],
  "type": "function"
 },
 "synphot.observation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.observation.Observation": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.observation.Observation.__init__": {
  "lineno": 75,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.observation.Observation.__mul__": {
  "lineno": 223,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation._get_binned_arrays": {
  "lineno": 285,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.observation.Observation._init_bins": {
  "lineno": 142,
  "symbols_in_volume": [
   "astropy.log.info",
   "numpy.searchsorted"
  ],
  "type": "function"
 },
 "synphot.observation.Observation._validate_binned_wavelengths": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.as_spectrum": {
  "lineno": 658,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.bandpass": {
  "lineno": 203,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.bin_edges": {
  "lineno": 213,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.binflux": {
  "lineno": 218,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.binned_pixelrange": {
  "lineno": 333,
  "symbols_in_volume": [
   "astropy.units.spectral",
   "astropy.units.validate_quantity"
  ],
  "type": "function"
 },
 "synphot.observation.Observation.binned_waverange": {
  "lineno": 299,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.spectral",
   "astropy.units.validate_quantity"
  ],
  "type": "function"
 },
 "synphot.observation.Observation.binset": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.countrate": {
  "lineno": 507,
  "symbols_in_volume": [
   "astropy.units.convert_flux",
   "astropy.units.count",
   "astropy.units.s",
   "astropy.units.spectral",
   "astropy.units.validate_quantity",
   "astropy.utils.exceptions.AstropyUserWarning",
   "math.fsum",
   "numpy.searchsorted",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.observation.Observation.effective_wavelength": {
  "lineno": 356,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.PHOTLAM",
   "astropy.units.convert_flux",
   "astropy.utils.exceptions.AstropyDeprecationWarning",
   "numpy.trapz",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.observation.Observation.effstim": {
  "lineno": 418,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.OBMAG.to_string",
   "astropy.units.STmag",
   "astropy.units.VEGAMAG",
   "astropy.units.VEGAMAG.to_string",
   "astropy.units.convert_flux",
   "astropy.units.count",
   "astropy.units.mag",
   "astropy.units.validate_unit",
   "math.log10",
   "numpy.log10",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.observation.Observation.plot": {
  "lineno": 616,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.sample_binned": {
  "lineno": 241,
  "symbols_in_volume": [
   "astropy.units.convert_flux",
   "numpy.allclose",
   "numpy.searchsorted"
  ],
  "type": "function"
 },
 "synphot.observation.Observation.spectrum": {
  "lineno": 198,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.observation.Observation.taper": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.reddening": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.reddening.ExtinctionCurve": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.reddening.ExtinctionModel1D": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.reddening.ExtinctionModel1D.sampleset": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.reddening.ReddeningLaw": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.reddening.ReddeningLaw.extinction_curve": {
  "lineno": 42,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.mag",
   "numbers.Real"
  ],
  "type": "function"
 },
 "synphot.reddening.ReddeningLaw.from_extinction_model": {
  "lineno": 165,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.reddening.ReddeningLaw.from_file": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.reddening.ReddeningLaw.to_fits": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.reddening.etau_madau": {
  "lineno": 244,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.validate_quantity",
   "numbers.Real",
   "numpy.array",
   "numpy.exp",
   "numpy.float",
   "numpy.isscalar",
   "numpy.where",
   "numpy.zeros_like"
  ],
  "type": "function"
 },
 "synphot.setup_package": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.relpath"
  ],
  "type": "module"
 },
 "synphot.setup_package.generate_c_docstrings": {
  "lineno": 21,
  "symbols_in_volume": [
   "astropy_helpers.setup_helpers.write_if_different",
   "io.StringIO",
   "os.path.join",
   "synphot.docstrings",
   "synphot.docstrings.__dict__",
   "synphot.docstrings.encode",
   "synphot.docstrings.items"
  ],
  "type": "function"
 },
 "synphot.setup_package.get_extensions": {
  "lineno": 103,
  "symbols_in_volume": [
   "astropy_helpers.setup_helpers.DistutilsExtensionArgs",
   "os.path.join",
   "setuptools.Extension"
  ],
  "type": "function"
 },
 "synphot.setup_package.string_escape": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.specio": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.specio.read_ascii_spec": {
  "lineno": 100,
  "symbols_in_volume": [
   "astropy.io.ascii.read",
   "astropy.units.AA",
   "astropy.units.FLAM",
   "astropy.units.validate_unit",
   "numpy.float64"
  ],
  "type": "function"
 },
 "synphot.specio.read_fits_spec": {
  "lineno": 147,
  "symbols_in_volume": [
   "astropy.io.fits.open",
   "astropy.units.AA",
   "astropy.units.FLAM",
   "astropy.units.validate_unit",
   "astropy.utils.exceptions.AstropyUserWarning",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.specio.read_remote_spec": {
  "lineno": 26,
  "symbols_in_volume": [
   "astropy.utils.data.get_readable_fileobj"
  ],
  "type": "function"
 },
 "synphot.specio.read_spec": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.specio.write_fits_spec": {
  "lineno": 218,
  "symbols_in_volume": [
   "astropy.io.fits.BinTableHDU.from_columns",
   "astropy.io.fits.ColDefs",
   "astropy.io.fits.Column",
   "astropy.io.fits.HDUList",
   "astropy.io.fits.PrimaryHDU",
   "astropy.log.info",
   "astropy.units.AA",
   "astropy.units.FLAM",
   "astropy.units.Quantity",
   "astropy.units.validate_unit",
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.abs",
   "numpy.append",
   "numpy.insert",
   "numpy.where",
   "os.path.basename",
   "synphot.__version__",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.spectrum": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.spectrum.BaseSourceSpectrum": {
  "lineno": 782,
  "symbols_in_volume": [
   "astropy.units.PHOTLAM"
  ],
  "type": "class"
 },
 "synphot.spectrum.BaseSourceSpectrum.__call__": {
  "lineno": 809,
  "symbols_in_volume": [
   "astropy.units.convert_flux"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSourceSpectrum._validate_flux_unit": {
  "lineno": 789,
  "symbols_in_volume": [
   "astropy.units.validate_unit"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSourceSpectrum.normalize": {
  "lineno": 842,
  "symbols_in_volume": [
   "astropy.units.ABmag",
   "astropy.units.LogUnit",
   "astropy.units.OBMAG.to_string",
   "astropy.units.Quantity",
   "astropy.units.STmag",
   "astropy.units.VEGAMAG.to_string",
   "astropy.units.count",
   "astropy.units.mag",
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.log10",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum": {
  "lineno": 37,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.K",
   "astropy.units.dimensionless_unscaled"
  ],
  "type": "class"
 },
 "synphot.spectrum.BaseSpectrum.__add__": {
  "lineno": 371,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__call__": {
  "lineno": 350,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__div__": {
  "lineno": 409,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__init__": {
  "lineno": 127,
  "symbols_in_volume": [
   "astropy.modeling.Model",
   "astropy.modeling.core.CompoundModel"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__mul__": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__rmul__": {
  "lineno": 401,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__str__": {
  "lineno": 331,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__sub__": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.__truediv__": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._do_plot": {
  "lineno": 676,
  "symbols_in_volume": [
   "astropy.log.error",
   "astropy.log.info",
   "astropy.units.dimensionless_unscaled",
   "matplotlib.pyplot.draw",
   "matplotlib.pyplot.savefig",
   "matplotlib.pyplot.subplots"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._get_arrays": {
  "lineno": 664,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._get_meta": {
  "lineno": 197,
  "symbols_in_volume": [
   "copy.deepcopy"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._merge_meta": {
  "lineno": 208,
  "symbols_in_volume": [
   "astropy.utils.metadata.merge"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._process_flux_param": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._process_generic_param": {
  "lineno": 246,
  "symbols_in_volume": [
   "astropy.units.Quantity"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._process_wave_param": {
  "lineno": 255,
  "symbols_in_volume": [
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._validate_flux_unit": {
  "lineno": 279,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._validate_other_mul_div": {
  "lineno": 379,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.dimensionless_unscaled",
   "numbers.Number",
   "numbers.Real",
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum._validate_wavelengths": {
  "lineno": 335,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.avgwave": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.barlam": {
  "lineno": 528,
  "symbols_in_volume": [
   "numpy.exp",
   "numpy.log",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.force_extrapolation": {
  "lineno": 584,
  "symbols_in_volume": [
   "numpy.nan"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.integrate": {
  "lineno": 415,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.PHOTLAM",
   "astropy.units.THROUGHPUT",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.photon",
   "astropy.units.s",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.model": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.pivot": {
  "lineno": 556,
  "symbols_in_volume": [
   "numpy.sqrt",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.plot": {
  "lineno": 739,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.taper": {
  "lineno": 613,
  "symbols_in_volume": [
   "numpy.insert"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.warnings": {
  "lineno": 307,
  "symbols_in_volume": [
   "warnings.setter"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.waverange": {
  "lineno": 322,
  "symbols_in_volume": [
   "astropy.units.Quantity"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseSpectrum.waveset": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseUnitlessSpectrum": {
  "lineno": 1276,
  "symbols_in_volume": [
   "astropy.units.THROUGHPUT"
  ],
  "type": "class"
 },
 "synphot.spectrum.BaseUnitlessSpectrum.__mul__": {
  "lineno": 1295,
  "symbols_in_volume": [
   "astropy.modeling.models.Scale",
   "astropy.units.Quantity",
   "numbers.Number"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseUnitlessSpectrum.__truediv__": {
  "lineno": 1313,
  "symbols_in_volume": [
   "astropy.modeling.models.Scale",
   "astropy.units.Quantity",
   "numbers.Number"
  ],
  "type": "function"
 },
 "synphot.spectrum.BaseUnitlessSpectrum._process_flux_param": {
  "lineno": 1280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.BaseUnitlessSpectrum._validate_flux_unit": {
  "lineno": 1284,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.units.validate_unit"
  ],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum": {
  "lineno": 1003,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.spectrum.SourceSpectrum.__add__": {
  "lineno": 1103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__init__": {
  "lineno": 1023,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__mul__": {
  "lineno": 1117,
  "symbols_in_volume": [
   "astropy.modeling.models.Scale",
   "astropy.units.Quantity",
   "numbers.Number"
  ],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__str__": {
  "lineno": 1092,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__sub__": {
  "lineno": 1110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.__truediv__": {
  "lineno": 1132,
  "symbols_in_volume": [
   "astropy.modeling.models.Scale",
   "astropy.units.Quantity",
   "numbers.Number"
  ],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum._process_flux_param": {
  "lineno": 1029,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.convert_flux"
  ],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum._validate_other_add_sub": {
  "lineno": 1097,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.from_file": {
  "lineno": 1221,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.from_vega": {
  "lineno": 1251,
  "symbols_in_volume": [
   "os.path.basename"
  ],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.model": {
  "lineno": 1039,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.plot": {
  "lineno": 1146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.to_fits": {
  "lineno": 1179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.z": {
  "lineno": 1066,
  "symbols_in_volume": [
   "astropy.modeling.models.RedshiftScaleFactor",
   "astropy.modeling.models.Scale",
   "numbers.Real"
  ],
  "type": "function"
 },
 "synphot.spectrum.SourceSpectrum.z_type": {
  "lineno": 1084,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement": {
  "lineno": 1329,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.spectrum.SpectralElement.check_overlap": {
  "lineno": 1338,
  "symbols_in_volume": [
   "astropy.modeling.core.CompoundModel",
   "numpy.allclose",
   "numpy.array"
  ],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.efficiency": {
  "lineno": 1724,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.emflx": {
  "lineno": 1745,
  "symbols_in_volume": [
   "astropy.units.FLAM"
  ],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.equivwidth": {
  "lineno": 1680,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.from_file": {
  "lineno": 1809,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.from_filter": {
  "lineno": 1843,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.fwhm": {
  "lineno": 1605,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.sqrt"
  ],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.photbw": {
  "lineno": 1543,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "numbers.Real",
   "numpy.log",
   "numpy.sqrt",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.rectwidth": {
  "lineno": 1698,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.rmswidth": {
  "lineno": 1488,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "numbers.Real",
   "numpy.sqrt",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.tlambda": {
  "lineno": 1621,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.to_fits": {
  "lineno": 1771,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.tpeak": {
  "lineno": 1638,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.unit_response": {
  "lineno": 1455,
  "symbols_in_volume": [
   "astropy.units.AREA",
   "astropy.units.FLAM",
   "astropy.units.HC",
   "astropy.units.validate_quantity",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.spectrum.SpectralElement.wpeak": {
  "lineno": 1657,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.setup_package": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.setup_package.get_package_data": {
  "lineno": 4,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_binning": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_binning.TestBinRange": {
  "lineno": 76,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_binning.TestBinRange.setup_class": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_pixel_range_almosteq": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_pixel_range_descending_order": {
  "lineno": 180,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_pixel_range_exceptions": {
  "lineno": 141,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_pixel_range_mode": {
  "lineno": 150,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_wave_range_descending_order": {
  "lineno": 134,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_wave_range_exceptions": {
  "lineno": 82,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_wave_range_mode": {
  "lineno": 106,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.TestBinRange.test_wave_range_mode_none": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_binning.test_calcbinflux": {
  "lineno": 190,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "astropy.utils.data.get_pkg_data_filename",
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.array",
   "numpy.interp",
   "numpy.ones",
   "numpy.searchsorted",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "os.path.join",
   "warnings.warn"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.test_calculate_bin_centers": {
  "lineno": 44,
  "symbols_in_volume": [
   "astropy.units.AA",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.test_calculate_bin_edges": {
  "lineno": 22,
  "symbols_in_volume": [
   "astropy.units.AA",
   "numpy.arange",
   "numpy.float",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.test_calculate_bin_exceptions": {
  "lineno": 64,
  "symbols_in_volume": [
   "astropy.units.AA",
   "numpy.array",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.test_calculate_bin_widths": {
  "lineno": 33,
  "symbols_in_volume": [
   "astropy.units.AA",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_binning.test_center_edge_center_roundtrip": {
  "lineno": 55,
  "symbols_in_volume": [
   "astropy.units.micron",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_integrator.Const1D": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_integrator.Const1D.integral": {
  "lineno": 18,
  "symbols_in_volume": [
   "astropy.modeling.models.Polynomial1D"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator.test_analytic_source": {
  "lineno": 24,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator.test_trapz_box1d": {
  "lineno": 37,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "numpy.trapz"
  ],
  "type": "function"
 },
 "synphot.tests.test_integrator.test_trapz_spec": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy",
   "astropy.utils.minversion",
   "scipy"
  ],
  "type": "module"
 },
 "synphot.tests.test_models.TestBlackBody1D": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_models.TestBlackBody1D.setup_class": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_models.TestBlackBody1D.test_eval": {
  "lineno": 79,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestBlackBody1D.test_lambda_max": {
  "lineno": 71,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestBlackBody1D.test_multi_n_models": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestBlackBody1D.test_sampleset": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D": {
  "lineno": 94,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_models.TestConstFlux1D.setup_class": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D.test_invalid_units": {
  "lineno": 130,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.OBMAG",
   "astropy.units.VEGAMAG",
   "astropy.units.count",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D.test_linear": {
  "lineno": 99,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.Jy",
   "astropy.units.PHOTLAM",
   "astropy.units.PHOTNU",
   "astropy.units.Quantity",
   "astropy.units.convert_flux",
   "astropy.units.mJy",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D.test_mag": {
  "lineno": 117,
  "symbols_in_volume": [
   "astropy.units.ABmag",
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.PHOTLAM",
   "astropy.units.STmag",
   "astropy.units.convert_flux",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestConstFlux1D.test_multi_n_models": {
  "lineno": 126,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D": {
  "lineno": 137,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_models.TestEmpirical1D.setup_class": {
  "lineno": 140,
  "symbols_in_volume": [
   "astropy.units.PHOTLAM",
   "astropy.units.convert_flux",
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_eval": {
  "lineno": 152,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.convert_flux",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_extrap": {
  "lineno": 218,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_neg_array": {
  "lineno": 180,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_neg_scalar": {
  "lineno": 195,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_sampleset": {
  "lineno": 149,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestEmpirical1D.test_taper": {
  "lineno": 210,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.setup_class": {
  "lineno": 233,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_eval": {
  "lineno": 237,
  "symbols_in_volume": [
   "astropy.units.PHOTLAM",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_invalid_units": {
  "lineno": 267,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.OBMAG",
   "astropy.units.VEGAMAG",
   "astropy.units.count",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_multi_n_models": {
  "lineno": 248,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.PHOTLAM",
   "astropy.units.convert_flux",
   "astropy.units.micron",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_normalization": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_models.TestPowerLawFlux1D.test_valid_mag": {
  "lineno": 261,
  "symbols_in_volume": [
   "astropy.units.ABmag",
   "astropy.units.STmag",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.setup_module": {
  "lineno": 45,
  "symbols_in_volume": [
   "astropy.constants.astropyconst13.h",
   "astropy.constants.astropyconst13.k_B",
   "astropy.constants.astropyconst13.sigma_sb",
   "astropy.constants.h",
   "astropy.constants.k_B",
   "astropy.constants.si.h",
   "astropy.constants.si.k_B",
   "astropy.constants.si.sigma_sb",
   "astropy.constants.sigma_sb"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.teardown_module": {
  "lineno": 56,
  "symbols_in_volume": [
   "astropy.constants.astropyconst20.h",
   "astropy.constants.astropyconst20.k_B",
   "astropy.constants.astropyconst20.sigma_sb",
   "astropy.constants.h",
   "astropy.constants.k_B",
   "astropy.constants.si.h",
   "astropy.constants.si.k_B",
   "astropy.constants.si.sigma_sb",
   "astropy.constants.sigma_sb"
  ],
  "type": "function"
 },
 "synphot.tests.test_models.test_get_metadata": {
  "lineno": 274,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.utils.data.get_pkg_data_filename",
   "astropy.utils.minversion",
   "os.path.join",
   "scipy"
  ],
  "type": "module"
 },
 "synphot.tests.test_observation.TestCountRate": {
  "lineno": 353,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_observation.TestCountRate.setup_class": {
  "lineno": 360,
  "symbols_in_volume": [
   "astropy.units.PHOTLAM",
   "astropy.units.convert_flux",
   "astropy.units.count",
   "numpy.arange"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRate.test_disjoint_waverange": {
  "lineno": 409,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRate.test_force": {
  "lineno": 393,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRate.test_waverange": {
  "lineno": 371,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRate.test_waverange_no_bin": {
  "lineno": 383,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRateNegFlux": {
  "lineno": 414,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_observation.TestCountRateNegFlux.setup_class": {
  "lineno": 417,
  "symbols_in_volume": [
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestCountRateNegFlux.test_neg_handling": {
  "lineno": 422,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestInitWithForce": {
  "lineno": 168,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_observation.TestInitWithForce.setup_class": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ones_like"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestInitWithForce.test_exceptions": {
  "lineno": 193,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestInitWithForce.test_force": {
  "lineno": 180,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "pytest.mark.parametrize",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestMathOperators": {
  "lineno": 200,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_observation.TestMathOperators.setup_class": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.arange"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestMathOperators.test_addsub": {
  "lineno": 224,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestMathOperators.test_div": {
  "lineno": 220,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestMathOperators.test_mul": {
  "lineno": 208,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar": {
  "lineno": 231,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_observation.TestObsPar.setup_class": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_avglam": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_barlam": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_efflam": {
  "lineno": 262,
  "symbols_in_volume": [
   "astropy.tests.helper.catch_warnings",
   "astropy.utils.exceptions.AstropyDeprecationWarning",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_efflam_erg": {
  "lineno": 271,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_efflam_exception": {
  "lineno": 277,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim": {
  "lineno": 283,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.Jy",
   "astropy.units.PHOTLAM",
   "astropy.units.PHOTNU",
   "astropy.units.mJy",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_analytic": {
  "lineno": 332,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_count": {
  "lineno": 297,
  "symbols_in_volume": [
   "astropy.units.OBMAG",
   "astropy.units.count",
   "numpy.log10",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_exceptions": {
  "lineno": 347,
  "symbols_in_volume": [
   "astropy.units.VEGAMAG",
   "astropy.units.mag",
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_mag": {
  "lineno": 322,
  "symbols_in_volume": [
   "astropy.units.ABmag",
   "astropy.units.STmag",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_effstim_vegamag": {
  "lineno": 339,
  "symbols_in_volume": [
   "astropy.units.VEGAMAG",
   "numpy.testing.assert_allclose",
   "pytest.mark.remote_data"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_normalize": {
  "lineno": 256,
  "symbols_in_volume": [
   "astropy.units.PHOTLAM",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObsPar.test_pivot": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation": {
  "lineno": 45,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_observation.TestObservation.setup_class": {
  "lineno": 48,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "numpy.arange",
   "numpy.float64"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_as_spectrum": {
  "lineno": 160,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_binned_data": {
  "lineno": 79,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.PHOTLAM",
   "astropy.units.nm",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_binned_pixelrange": {
  "lineno": 136,
  "symbols_in_volume": [
   "astropy.units.nm"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_binned_waverange": {
  "lineno": 128,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.nm",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_default_binset_from_bandpass": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_default_binset_from_spectrum": {
  "lineno": 144,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_array_equal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_disjoint_spec": {
  "lineno": 67,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_inherit_warnings": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_invalid_input_spec": {
  "lineno": 57,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_reversed_binset": {
  "lineno": 115,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_sampled_binned_exceptions": {
  "lineno": 122,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_taper": {
  "lineno": 75,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.TestObservation.test_undefined_binset": {
  "lineno": 155,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_observation.test_countrate_neg_leak": {
  "lineno": 440,
  "symbols_in_volume": [
   "astropy.utils.data.get_pkg_data_filename",
   "numpy.fromfile",
   "os.path.join",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.utils.minversion",
   "scipy"
  ],
  "type": "module"
 },
 "synphot.tests.test_reddening.TestExtinction": {
  "lineno": 37,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_reddening.TestExtinction.setup_class": {
  "lineno": 40,
  "symbols_in_volume": [
   "astropy.units.mag",
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_extcurve_call": {
  "lineno": 59,
  "symbols_in_volume": [
   "astropy.units.AA",
   "numpy.squeeze",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_invalid_ebv": {
  "lineno": 46,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_mul_spec": {
  "lineno": 68,
  "symbols_in_volume": [
   "astropy.units.micron",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_qso_countrate": {
  "lineno": 79,
  "symbols_in_volume": [
   "astropy.units.STmag",
   "astropy.units.mag",
   "astropy.utils.data.get_pkg_data_filename",
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_allclose",
   "os.path.join",
   "pytest.warns"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestExtinction.test_redlaw_call": {
  "lineno": 50,
  "symbols_in_volume": [
   "astropy.units.micron",
   "astropy.units.spectral",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestWriteReddeningLaw": {
  "lineno": 150,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_reddening.TestWriteReddeningLaw.setup_class": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.linspace",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestWriteReddeningLaw.teardown_class": {
  "lineno": 178,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.TestWriteReddeningLaw.test_write": {
  "lineno": 160,
  "symbols_in_volume": [
   "astropy.io.fits.getheader",
   "numpy.testing.assert_allclose",
   "os.path.join",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.test_etau_madau": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.test_etau_madau_exceptions": {
  "lineno": 114,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.test_redlaw_from_model": {
  "lineno": 126,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.mark.remote_data",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "synphot.tests.test_reddening.test_redlaw_from_model_exception": {
  "lineno": 144,
  "symbols_in_volume": [
   "pytest.mark.skipif",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_specio": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_specio.TestReadWriteFITS": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.setup_class": {
  "lineno": 56,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.PHOTLAM",
   "numpy.array",
   "numpy.float64",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.teardown_class": {
  "lineno": 152,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.test_array_data": {
  "lineno": 66,
  "symbols_in_volume": [
   "astropy.io.fits.getheader",
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_allclose",
   "os.path.join",
   "pytest.warns"
  ],
  "type": "function"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.test_exceptions": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float64",
   "os.path.join",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_specio.TestReadWriteFITS.test_quantity_data": {
  "lineno": 98,
  "symbols_in_volume": [
   "astropy.io.fits.getheader",
   "numpy.testing.assert_allclose",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_specio.test_read_ascii_spec": {
  "lineno": 41,
  "symbols_in_volume": [
   "astropy.tests.helper.assert_quantity_allclose",
   "astropy.units.AA",
   "astropy.units.FLAM",
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_specio.test_read_remote_spec": {
  "lineno": 24,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "pytest.mark.remote_data"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy",
   "astropy.utils.minversion",
   "scipy"
  ],
  "type": "module"
 },
 "synphot.tests.test_spectrum.TestBlackBodySource": {
  "lineno": 376,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestBlackBodySource.setup_class": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBlackBodySource.test_eval": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBoxBandpass": {
  "lineno": 341,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestBoxBandpass.setup_class": {
  "lineno": 343,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBoxBandpass.test_conversion": {
  "lineno": 351,
  "symbols_in_volume": [
   "astropy.units.nm",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBoxBandpass.test_eval": {
  "lineno": 346,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBoxBandpass.test_fwhm": {
  "lineno": 357,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBoxBandpass.test_multi_n_models": {
  "lineno": 368,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBoxBandpass.test_taper": {
  "lineno": 363,
  "symbols_in_volume": [
   "astropy.units.nm",
   "numpy.arange",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels": {
  "lineno": 472,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_BrokenPowerLaw1D": {
  "lineno": 474,
  "symbols_in_volume": [
   "astropy.modeling.models.BrokenPowerLaw1D",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_Const1D": {
  "lineno": 481,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_ConstFlux1D": {
  "lineno": 486,
  "symbols_in_volume": [
   "astropy.units.Jy",
   "astropy.units.convert_flux",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_ExponentialCutoffPowerLaw1D": {
  "lineno": 492,
  "symbols_in_volume": [
   "astropy.modeling.models.ExponentialCutoffPowerLaw1D",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_GaussianAbsorption1D": {
  "lineno": 500,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_LogParabola1D": {
  "lineno": 507,
  "symbols_in_volume": [
   "astropy.modeling.models.LogParabola1D",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_Lorentz1D": {
  "lineno": 513,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_MexicanHat1D": {
  "lineno": 519,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestBuildModels.test_PowerLaw1D": {
  "lineno": 525,
  "symbols_in_volume": [
   "astropy.modeling.models.PowerLaw1D",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap": {
  "lineno": 531,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap.setup_class": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap.test_exceptions": {
  "lineno": 587,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap.test_full": {
  "lineno": 542,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap.test_none": {
  "lineno": 569,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap.test_partial_most": {
  "lineno": 556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap.test_partial_notmost": {
  "lineno": 563,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestCheckOverlap.test_special_cases": {
  "lineno": 576,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile": {
  "lineno": 217,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.setup_class": {
  "lineno": 220,
  "symbols_in_volume": [
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_avgwave": {
  "lineno": 249,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_barlam": {
  "lineno": 254,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_call": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_emflx": {
  "lineno": 334,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_equivwidth": {
  "lineno": 318,
  "symbols_in_volume": [
   "astropy.units.AA",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_fwhm": {
  "lineno": 285,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.dimensionless_unscaled",
   "numpy.testing.assert_allclose",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_integrate": {
  "lineno": 238,
  "symbols_in_volume": [
   "astropy.units.AA",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_invalid_flux_unit": {
  "lineno": 225,
  "symbols_in_volume": [
   "astropy.units.UnitsError",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_pivot": {
  "lineno": 259,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_qtlam": {
  "lineno": 329,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_rectw": {
  "lineno": 324,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_rmswidth": {
  "lineno": 270,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.dimensionless_unscaled",
   "numpy.testing.assert_allclose",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_tlambda": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_tpeak": {
  "lineno": 309,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_uresp": {
  "lineno": 264,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalBandpassFromFile.test_wpeak": {
  "lineno": 314,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile": {
  "lineno": 131,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.setup_class": {
  "lineno": 134,
  "symbols_in_volume": [
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_call": {
  "lineno": 161,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.convert_flux",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_conversion": {
  "lineno": 179,
  "symbols_in_volume": [
   "astropy.units.FNU",
   "astropy.units.micron",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_integrate": {
  "lineno": 185,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.Jy",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "numpy.testing.assert_allclose",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_invalid_flux_unit": {
  "lineno": 139,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_invalid_models": {
  "lineno": 144,
  "symbols_in_volume": [
   "astropy.io.fits.HDUList",
   "astropy.modeling.models.RedshiftScaleFactor",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_metadata": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_neg_flux": {
  "lineno": 170,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_array_equal",
   "pytest.warns"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestEmpiricalSourceFromFile.test_taper": {
  "lineno": 201,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestForceExtrap": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestForceExtrap.test_analytical": {
  "lineno": 609,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestForceExtrap.test_empirical": {
  "lineno": 596,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestGaussianSource": {
  "lineno": 391,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestGaussianSource.setup_class": {
  "lineno": 393,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestGaussianSource.test_alt_source": {
  "lineno": 427,
  "symbols_in_volume": [
   "astropy.units.AA",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestGaussianSource.test_eval": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestGaussianSource.test_fwhm": {
  "lineno": 420,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestGaussianSource.test_symmetry": {
  "lineno": 417,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestGaussianSource.test_totalflux": {
  "lineno": 403,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.FLAM",
   "astropy.units.cm",
   "astropy.units.nm.to",
   "astropy.units.photon",
   "astropy.units.s",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators": {
  "lineno": 898,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestMathOperators.setup_class": {
  "lineno": 901,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.nm"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_bandpass_addsub": {
  "lineno": 998,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_bandpass_mul_div_bandpass": {
  "lineno": 1024,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_bandpass_mul_div_exceptions": {
  "lineno": 1033,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_bandpass_mul_div_exceptions.DummyObject": {
  "lineno": 1035,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_bandpass_mul_div_scalar": {
  "lineno": 1009,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.dimensionless_unscaled",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_source_add": {
  "lineno": 912,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_source_addsub_circular": {
  "lineno": 929,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_source_addsub_exception": {
  "lineno": 934,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_source_mul_div_exceptions": {
  "lineno": 981,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_source_mul_div_scalar": {
  "lineno": 938,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.dimensionless_unscaled",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_source_mul_div_spec": {
  "lineno": 957,
  "symbols_in_volume": [
   "astropy.units.dimensionless_unscaled",
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestMathOperators.test_source_sub": {
  "lineno": 920,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize": {
  "lineno": 620,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestNormalize._compare_countrate": {
  "lineno": 650,
  "symbols_in_volume": [
   "astropy.utils.exceptions.AstropyUserWarning",
   "numpy.testing.assert_allclose",
   "warnings.catch_warnings",
   "warnings.filterwarnings"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize._select_sp": {
  "lineno": 641,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.setup_class": {
  "lineno": 623,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.test_exceptions": {
  "lineno": 737,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "astropy.units.VEGAMAG",
   "astropy.units.ct",
   "numpy.ones",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.test_renorm_density": {
  "lineno": 663,
  "symbols_in_volume": [
   "astropy.units.ABmag",
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.Jy",
   "astropy.units.PHOTNU",
   "astropy.units.STmag",
   "astropy.units.mJy",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.test_renorm_noband_jy": {
  "lineno": 708,
  "symbols_in_volume": [
   "astropy.units.Jy",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.test_renorm_nondensity": {
  "lineno": 686,
  "symbols_in_volume": [
   "astropy.units.OBMAG",
   "astropy.units.count",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.test_renorm_partial_most": {
  "lineno": 727,
  "symbols_in_volume": [
   "astropy.units.Jy",
   "astropy.utils.exceptions.AstropyUserWarning",
   "pytest.warns"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.test_renorm_partial_notmost": {
  "lineno": 713,
  "symbols_in_volume": [
   "astropy.units.Jy",
   "astropy.utils.exceptions.AstropyUserWarning",
   "pytest.raises",
   "pytest.warns"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestNormalize.test_renorm_vegamag": {
  "lineno": 697,
  "symbols_in_volume": [
   "astropy.units.VEGAMAG",
   "pytest.mark.parametrize",
   "pytest.mark.remote_data"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestPowerLawSource": {
  "lineno": 447,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestPowerLawSource.setup_class": {
  "lineno": 449,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestPowerLawSource.test_eval": {
  "lineno": 459,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestPowerLawSource.test_no_default_wave": {
  "lineno": 453,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestPowerLawSource.test_normalization": {
  "lineno": 468,
  "symbols_in_volume": [
   "astropy.units.nm",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestRedShift": {
  "lineno": 846,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestRedShift.setup_class": {
  "lineno": 852,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestRedShift.test_composite_redshift": {
  "lineno": 878,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestRedShift.test_conserve_flux_redshift": {
  "lineno": 889,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestRedShift.test_const_flux_redshift": {
  "lineno": 883,
  "symbols_in_volume": [
   "astropy.units.Jy",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestRedShift.test_property": {
  "lineno": 862,
  "symbols_in_volume": [
   "astropy.modeling.core.CompoundModel",
   "astropy.modeling.core._CompoundModel",
   "astropy.units.AA",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset": {
  "lineno": 757,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_box1d": {
  "lineno": 769,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_complicated_tree": {
  "lineno": 816,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_composite": {
  "lineno": 790,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_composite_none": {
  "lineno": 784,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_exceptions": {
  "lineno": 841,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_none": {
  "lineno": 759,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_redshift": {
  "lineno": 803,
  "symbols_in_volume": [
   "astropy.modeling.models.RedshiftScaleFactor",
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_redshift_none": {
  "lineno": 812,
  "symbols_in_volume": [
   "astropy.modeling.models.Const1D"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWaveset.test_sampleset": {
  "lineno": 763,
  "symbols_in_volume": [
   "astropy.units.cm",
   "astropy.units.erg",
   "astropy.units.s",
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWriteSpec": {
  "lineno": 1054,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_spectrum.TestWriteSpec.setup_class": {
  "lineno": 1057,
  "symbols_in_volume": [
   "numpy.ones",
   "tempfile.mkdtemp"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWriteSpec.teardown_class": {
  "lineno": 1095,
  "symbols_in_volume": [
   "shutil.rmtree"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.TestWriteSpec.test_write": {
  "lineno": 1066,
  "symbols_in_volume": [
   "astropy.io.fits.getheader",
   "numpy.testing.assert_allclose",
   "os.path.join",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.setup_module": {
  "lineno": 51,
  "symbols_in_volume": [
   "astropy.constants.astropyconst13.h",
   "astropy.constants.astropyconst13.k_B",
   "astropy.constants.astropyconst13.sigma_sb",
   "astropy.constants.h",
   "astropy.constants.k_B",
   "astropy.constants.si.h",
   "astropy.constants.si.k_B",
   "astropy.constants.si.sigma_sb",
   "astropy.constants.sigma_sb"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.teardown_module": {
  "lineno": 62,
  "symbols_in_volume": [
   "astropy.constants.astropyconst20.h",
   "astropy.constants.astropyconst20.k_B",
   "astropy.constants.astropyconst20.sigma_sb",
   "astropy.constants.h",
   "astropy.constants.k_B",
   "astropy.constants.si.h",
   "astropy.constants.si.k_B",
   "astropy.constants.si.sigma_sb",
   "astropy.constants.sigma_sb"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.test_filter": {
  "lineno": 105,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.mark.remote_data",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.test_filter_exception": {
  "lineno": 125,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.test_flux_conversion_vega": {
  "lineno": 80,
  "symbols_in_volume": [
   "astropy.units.Jy",
   "astropy.units.PHOTLAM",
   "astropy.units.VEGAMAG",
   "astropy.units.convert_flux",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize",
   "pytest.mark.remote_data",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.test_gaussian_source_watts": {
  "lineno": 436,
  "symbols_in_volume": [
   "astropy.units.FLAM",
   "astropy.units.W",
   "astropy.units.m",
   "astropy.units.um",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_spectrum.test_load_vspec": {
  "lineno": 72,
  "symbols_in_volume": [
   "pytest.mark.remote_data",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "synphot.tests.test_thermal": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy",
   "astropy.utils.minversion",
   "scipy"
  ],
  "type": "module"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement": {
  "lineno": 53,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "class"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.setup_class": {
  "lineno": 56,
  "symbols_in_volume": [
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join"
  ],
  "type": "function"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.test_from_file_exceptions": {
  "lineno": 78,
  "symbols_in_volume": [
   "astropy.utils.data.get_pkg_data_filename",
   "os.path.join",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.test_properties": {
  "lineno": 65,
  "symbols_in_volume": [
   "astropy.units.K"
  ],
  "type": "function"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.test_taper": {
  "lineno": 61,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_thermal.TestThermalSpectralElement.test_thermal_source": {
  "lineno": 69,
  "symbols_in_volume": [
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_thermal.setup_module": {
  "lineno": 32,
  "symbols_in_volume": [
   "astropy.constants.astropyconst13.h",
   "astropy.constants.astropyconst13.k_B",
   "astropy.constants.astropyconst13.sigma_sb",
   "astropy.constants.h",
   "astropy.constants.k_B",
   "astropy.constants.si.h",
   "astropy.constants.si.k_B",
   "astropy.constants.si.sigma_sb",
   "astropy.constants.sigma_sb"
  ],
  "type": "function"
 },
 "synphot.tests.test_thermal.teardown_module": {
  "lineno": 43,
  "symbols_in_volume": [
   "astropy.constants.astropyconst20.h",
   "astropy.constants.astropyconst20.k_B",
   "astropy.constants.astropyconst20.sigma_sb",
   "astropy.constants.h",
   "astropy.constants.k_B",
   "astropy.constants.si.h",
   "astropy.constants.si.k_B",
   "astropy.constants.si.sigma_sb",
   "astropy.constants.sigma_sb"
  ],
  "type": "function"
 },
 "synphot.tests.test_units": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.ABmag",
   "astropy.units.AREA",
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.Hz",
   "astropy.units.Jy",
   "astropy.units.OBMAG",
   "astropy.units.PHOTLAM",
   "astropy.units.PHOTNU",
   "astropy.units.STmag",
   "astropy.units.VEGAMAG",
   "astropy.units.count",
   "astropy.units.micron"
  ],
  "type": "module"
 },
 "synphot.tests.test_units.test_flux_conversion": {
  "lineno": 117,
  "symbols_in_volume": [
   "astropy.units.ABmag",
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.Jy",
   "astropy.units.OBMAG",
   "astropy.units.PHOTLAM",
   "astropy.units.PHOTNU",
   "astropy.units.STmag",
   "astropy.units.convert_flux",
   "astropy.units.count",
   "astropy.units.mJy",
   "numpy.testing.assert_allclose",
   "numpy.zeros",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_units.test_flux_conversion_exceptions": {
  "lineno": 160,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.PHOTLAM",
   "astropy.units.UnitsError",
   "astropy.units.VEGAMAG",
   "astropy.units.convert_flux",
   "astropy.units.count",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_units.test_implicit_assumptions": {
  "lineno": 39,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.AREA.physical_type",
   "astropy.units.HC.unit",
   "astropy.units.SR_PER_ARCSEC2",
   "astropy.units.THROUGHPUT.physical_type",
   "astropy.units.erg",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_units.test_validate_quantity": {
  "lineno": 90,
  "symbols_in_volume": [
   "astropy.units.AREA",
   "astropy.units.m",
   "astropy.units.micron",
   "astropy.units.spectral",
   "astropy.units.validate_quantity",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_units.test_validate_unit": {
  "lineno": 47,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.ABmag",
   "astropy.units.FLAM",
   "astropy.units.FNU",
   "astropy.units.K",
   "astropy.units.OBMAG",
   "astropy.units.PHOTLAM",
   "astropy.units.PHOTNU",
   "astropy.units.STmag",
   "astropy.units.THROUGHPUT",
   "astropy.units.VEGAMAG",
   "astropy.units.m",
   "astropy.units.micron",
   "astropy.units.validate_unit",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_units.test_validate_unit_exceptions": {
  "lineno": 80,
  "symbols_in_volume": [
   "astropy.units.validate_unit",
   "astropy.units.validate_wave_unit",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_units.test_validate_wave_unit": {
  "lineno": 70,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Hz",
   "astropy.units.micron",
   "astropy.units.validate_wave_unit",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_units.test_wave_conversion": {
  "lineno": 102,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Hz",
   "astropy.units.micron",
   "astropy.units.spectral",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.tests.test_utils.TestMergeWave": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.tests.test_utils.TestMergeWave.setup_class": {
  "lineno": 92,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.tests.test_utils.TestMergeWave.test_merge_none": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.TestMergeWave.test_merge_same": {
  "lineno": 112,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.TestMergeWave.test_merge_thres": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.testing.assert_allclose"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.test_download_bad_root": {
  "lineno": 117,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.test_download_data": {
  "lineno": 127,
  "symbols_in_volume": [
   "os.path.isdir",
   "os.path.join",
   "os.remove"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.test_genwave": {
  "lineno": 71,
  "symbols_in_volume": [
   "astropy.units.micron",
   "numpy.arange",
   "numpy.testing.assert_allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.test_overlap_status": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.arange",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.test_validate_totalflux": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.inf",
   "numpy.nan",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.tests.test_utils.test_validate_wavelengths": {
  "lineno": 47,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.micron",
   "numpy.arange",
   "numpy.testing.assert_array_equal",
   "pytest.raises"
  ],
  "type": "function"
 },
 "synphot.thermal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.thermal.ThermalSpectralElement": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "class"
 },
 "synphot.thermal.ThermalSpectralElement.__init__": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.beam_fill_factor": {
  "lineno": 62,
  "symbols_in_volume": [
   "astropy.units.validate_quantity"
  ],
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.from_file": {
  "lineno": 94,
  "symbols_in_volume": [
   "astropy.io.fits.getheader"
  ],
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.taper": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.temperature": {
  "lineno": 52,
  "symbols_in_volume": [
   "astropy.units.K",
   "astropy.units.validate_quantity"
  ],
  "type": "function"
 },
 "synphot.thermal.ThermalSpectralElement.thermal_source": {
  "lineno": 72,
  "symbols_in_volume": [
   "astropy.units.SR_PER_ARCSEC2"
  ],
  "type": "function"
 },
 "synphot.units": {
  "lineno": null,
  "symbols_in_volume": [
   "astropy.constants.c.to",
   "astropy.constants.h.cgs",
   "astropy.units.AA",
   "astropy.units.Hz",
   "astropy.units.add_enabled_units",
   "astropy.units.arcsec",
   "astropy.units.cm",
   "astropy.units.def_unit",
   "astropy.units.dimensionless_unscaled",
   "astropy.units.erg",
   "astropy.units.mag",
   "astropy.units.photon",
   "astropy.units.rad.to",
   "astropy.units.s"
  ],
  "type": "module"
 },
 "synphot.units._convert_flux": {
  "lineno": 228,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.UnitsError",
   "astropy.units.count"
  ],
  "type": "function"
 },
 "synphot.units.convert_flux": {
  "lineno": 143,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.Quantity",
   "astropy.units.UnitConversionError",
   "astropy.units.spectral_density"
  ],
  "type": "function"
 },
 "synphot.units.spectral_density_count": {
  "lineno": 102,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.count",
   "astropy.units.spectral"
  ],
  "type": "function"
 },
 "synphot.units.spectral_density_count.converter_count": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.units.spectral_density_count.converter_obmag": {
  "lineno": 133,
  "symbols_in_volume": [
   "numpy.log10"
  ],
  "type": "function"
 },
 "synphot.units.spectral_density_count.iconverter_count": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.units.spectral_density_count.iconverter_obmag": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.units.spectral_density_vega": {
  "lineno": 64,
  "symbols_in_volume": [
   "astropy.units.spectral_density"
  ],
  "type": "function"
 },
 "synphot.units.spectral_density_vega.converter": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.float64",
   "numpy.isfinite",
   "numpy.log10",
   "numpy.zeros"
  ],
  "type": "function"
 },
 "synphot.units.spectral_density_vega.iconverter": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.units.validate_quantity": {
  "lineno": 351,
  "symbols_in_volume": [
   "astropy.units.Quantity"
  ],
  "type": "function"
 },
 "synphot.units.validate_unit": {
  "lineno": 275,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.ABmag",
   "astropy.units.Jy",
   "astropy.units.LogUnit",
   "astropy.units.STmag",
   "astropy.units.Unit",
   "astropy.units.UnitBase",
   "astropy.units.micron"
  ],
  "type": "function"
 },
 "synphot.units.validate_wave_unit": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "synphot.utils.download_data": {
  "lineno": 255,
  "symbols_in_volume": [
   "astropy.config.ConfigItem",
   "astropy.utils.data.download_file",
   "os.makedirs",
   "os.path.dirname",
   "os.path.exists",
   "os.path.isdir",
   "os.sep",
   "shutil.copyfile"
  ],
  "type": "function"
 },
 "synphot.utils.generate_wavelengths": {
  "lineno": 142,
  "symbols_in_volume": [
   "astropy.units.AA",
   "astropy.units.validate_unit",
   "numpy.arange",
   "numpy.float64",
   "numpy.linspace",
   "numpy.log10",
   "numpy.logspace"
  ],
  "type": "function"
 },
 "synphot.utils.merge_wavelengths": {
  "lineno": 208,
  "symbols_in_volume": [
   "numpy.append",
   "numpy.union1d",
   "numpy.where"
  ],
  "type": "function"
 },
 "synphot.utils.overlap_status": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "synphot.utils.validate_totalflux": {
  "lineno": 54,
  "symbols_in_volume": [
   "numpy.isinf",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "synphot.utils.validate_wavelengths": {
  "lineno": 76,
  "symbols_in_volume": [
   "astropy.units.Quantity",
   "astropy.units.validate_wave_unit",
   "numpy.alltrue",
   "numpy.any",
   "numpy.asarray",
   "numpy.isscalar",
   "numpy.sort",
   "numpy.where"
  ],
  "type": "function"
 },
 "synphot.version": {
  "lineno": null,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "module"
 }
}