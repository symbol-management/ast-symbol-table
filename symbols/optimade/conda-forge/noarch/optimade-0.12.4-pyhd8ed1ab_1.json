{
 "optimade": {
  "data": {},
  "type": "module"
 },
 "optimade.__api_version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "optimade.__version__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "optimade.adapters": {
  "data": {},
  "type": "module"
 },
 "optimade.adapters.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "optimade.adapters.base": {
  "data": {},
  "type": "module"
 },
 "optimade.adapters.base.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "optimade.adapters.base.BaseModel": {
  "data": {
   "shadows": "pydantic.BaseModel"
  },
  "type": "import"
 },
 "optimade.adapters.base.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "optimade.adapters.base.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.adapters.base.EntryAdapter": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "optimade.models.EntryResource",
    "str",
    "typing.Callable",
    "typing.Dict"
   ]
  },
  "type": "class"
 },
 "optimade.adapters.base.EntryAdapter.__getattr__": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "AttributeError",
    "optimade.adapters.base.re",
    "str",
    "tuple",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.base.EntryAdapter.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.base.EntryAdapter._get_model_attributes": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "AttributeError",
    "getattr",
    "pydantic.BaseModel",
    "staticmethod",
    "str",
    "typing.Any",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.base.EntryAdapter.convert": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "AttributeError",
    "format",
    "str",
    "tuple",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.base.EntryAdapter.entry": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "dict",
    "optimade.adapters.logger.LOGGER.warning"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.base.EntryResource": {
  "data": {
   "shadows": "optimade.models.EntryResource"
  },
  "type": "import"
 },
 "optimade.adapters.base.LOGGER": {
  "data": {
   "shadows": "optimade.adapters.logger.LOGGER"
  },
  "type": "import"
 },
 "optimade.adapters.base.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.adapters.base.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "optimade.adapters.base.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.adapters.base.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "optimade.adapters.exceptions": {
  "data": {},
  "type": "module"
 },
 "optimade.adapters.exceptions.ConversionError": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "optimade.adapters.exceptions.__all__": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "optimade.adapters.logger": {
  "data": {
   "symbols_in_volume": [
    "optimade.adapters.logger.logging"
   ]
  },
  "type": "module"
 },
 "optimade.adapters.logger.LOGGER": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "optimade.adapters.logger.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "optimade.adapters.references": {
  "data": {},
  "type": "module"
 },
 "optimade.adapters.references.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "optimade.adapters.references.adapter": {
  "data": {},
  "type": "module"
 },
 "optimade.adapters.references.adapter.EntryAdapter": {
  "data": {
   "shadows": "optimade.adapters.base.EntryAdapter"
  },
  "type": "import"
 },
 "optimade.adapters.references.adapter.Reference": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "optimade.adapters.base.EntryAdapter",
    "optimade.models.ReferenceResource"
   ]
  },
  "type": "class"
 },
 "optimade.adapters.references.adapter.ReferenceResource": {
  "data": {
   "shadows": "optimade.models.ReferenceResource"
  },
  "type": "import"
 },
 "optimade.adapters.structures": {
  "data": {},
  "type": "module"
 },
 "optimade.adapters.structures.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "optimade.adapters.structures.adapter": {
  "data": {},
  "type": "module"
 },
 "optimade.adapters.structures.adapter.EntryAdapter": {
  "data": {
   "shadows": "optimade.adapters.base.EntryAdapter"
  },
  "type": "import"
 },
 "optimade.adapters.structures.adapter.Structure": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "optimade.adapters.base.EntryAdapter",
    "optimade.models.StructureResource"
   ]
  },
  "type": "class"
 },
 "optimade.adapters.structures.adapter.StructureResource": {
  "data": {
   "shadows": "optimade.models.StructureResource"
  },
  "type": "import"
 },
 "optimade.adapters.structures.aiida": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "aiida.orm.nodes.data.structure.StructureData",
    "type"
   ]
  },
  "type": "module"
 },
 "optimade.adapters.structures.aiida.AIIDA_NOT_FOUND": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "optimade.adapters.structures.aiida.Kind": {
  "data": {
   "shadows": "aiida.orm.nodes.data.structure.Kind"
  },
  "type": "import"
 },
 "optimade.adapters.structures.aiida.OptimadeStructure": {
  "data": {
   "shadows": "optimade.models.StructureResource"
  },
  "type": "import"
 },
 "optimade.adapters.structures.aiida.Site": {
  "data": {
   "shadows": "aiida.orm.nodes.data.structure.Site"
  },
  "type": "import"
 },
 "optimade.adapters.structures.aiida.StructureData": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "optimade.adapters.structures.aiida.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "optimade.adapters.structures.aiida.get_aiida_structure_data": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "aiida.orm.nodes.data.structure.Kind",
    "aiida.orm.nodes.data.structure.Site",
    "aiida.orm.nodes.data.structure.StructureData",
    "bool",
    "enumerate",
    "globals",
    "optimade.adapters.structures.aiida.AIIDA_NOT_FOUND",
    "optimade.adapters.structures.utils.pad_cell",
    "optimade.models.StructureResource",
    "range",
    "repr",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.aiida.pad_cell": {
  "data": {
   "shadows": "optimade.adapters.structures.utils.pad_cell"
  },
  "type": "import"
 },
 "optimade.adapters.structures.aiida.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "optimade.adapters.structures.ase": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "ase.Atoms",
    "type"
   ]
  },
  "type": "module"
 },
 "optimade.adapters.structures.ase.ASE_NOT_FOUND": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "optimade.adapters.structures.ase.Atom": {
  "data": {
   "shadows": "ase.Atom"
  },
  "type": "import"
 },
 "optimade.adapters.structures.ase.Atoms": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "optimade.adapters.structures.ase.ConversionError": {
  "data": {
   "shadows": "optimade.adapters.exceptions.ConversionError"
  },
  "type": "import"
 },
 "optimade.adapters.structures.ase.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.adapters.structures.ase.OptimadeStructure": {
  "data": {
   "shadows": "optimade.models.StructureResource"
  },
  "type": "import"
 },
 "optimade.adapters.structures.ase.OptimadeStructureSpecies": {
  "data": {
   "shadows": "optimade.models.Species"
  },
  "type": "import"
 },
 "optimade.adapters.structures.ase.StructureFeatures": {
  "data": {
   "shadows": "optimade.models.StructureFeatures"
  },
  "type": "import"
 },
 "optimade.adapters.structures.ase.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "optimade.adapters.structures.ase.get_ase_atoms": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ase.Atom",
    "ase.Atoms",
    "globals",
    "optimade.adapters.exceptions.ConversionError",
    "optimade.adapters.structures.ase.ASE_NOT_FOUND",
    "optimade.models.Species",
    "optimade.models.StructureFeatures.DISORDER",
    "optimade.models.StructureResource",
    "range",
    "repr",
    "str",
    "typing.Dict",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.ase.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "optimade.adapters.structures.cif": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy"
   ]
  },
  "type": "module"
 },
 "optimade.adapters.structures.cif.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.adapters.structures.cif.NUMPY_NOT_FOUND": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "optimade.adapters.structures.cif.OptimadeStructure": {
  "data": {
   "shadows": "optimade.models.StructureResource"
  },
  "type": "import"
 },
 "optimade.adapters.structures.cif.OptimadeStructureSpecies": {
  "data": {
   "shadows": "optimade.models.Species"
  },
  "type": "import"
 },
 "optimade.adapters.structures.cif.__all__": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "optimade.adapters.structures.cif.cell_to_cellpar": {
  "data": {
   "shadows": "optimade.adapters.structures.utils.cell_to_cellpar"
  },
  "type": "import"
 },
 "optimade.adapters.structures.cif.fractional_coordinates": {
  "data": {
   "shadows": "optimade.adapters.structures.utils.fractional_coordinates"
  },
  "type": "import"
 },
 "optimade.adapters.structures.cif.get_cif": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "globals",
    "hasattr",
    "optimade.adapters.structures.cif.NUMPY_NOT_FOUND",
    "optimade.adapters.structures.utils.cell_to_cellpar",
    "optimade.adapters.structures.utils.fractional_coordinates",
    "optimade.models.Species",
    "optimade.models.StructureResource",
    "range",
    "str",
    "typing.Dict",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.cif.np": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "optimade.adapters.structures.cif.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "optimade.adapters.structures.jarvis": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "jarvis.core.atoms.Atoms",
    "type"
   ]
  },
  "type": "module"
 },
 "optimade.adapters.structures.jarvis.Atoms": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "optimade.adapters.structures.jarvis.ConversionError": {
  "data": {
   "shadows": "optimade.adapters.exceptions.ConversionError"
  },
  "type": "import"
 },
 "optimade.adapters.structures.jarvis.JARVIS_NOT_FOUND": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "optimade.adapters.structures.jarvis.OptimadeStructure": {
  "data": {
   "shadows": "optimade.models.StructureResource"
  },
  "type": "import"
 },
 "optimade.adapters.structures.jarvis.StructureFeatures": {
  "data": {
   "shadows": "optimade.models.StructureFeatures"
  },
  "type": "import"
 },
 "optimade.adapters.structures.jarvis.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "optimade.adapters.structures.jarvis.get_jarvis_atoms": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "globals",
    "jarvis.core.atoms.Atoms",
    "optimade.adapters.exceptions.ConversionError",
    "optimade.adapters.structures.jarvis.JARVIS_NOT_FOUND",
    "optimade.models.StructureFeatures.DISORDER",
    "optimade.models.StructureResource",
    "repr",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.jarvis.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "optimade.adapters.structures.proteindatabank": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy"
   ]
  },
  "type": "module"
 },
 "optimade.adapters.structures.proteindatabank.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.adapters.structures.proteindatabank.NUMPY_NOT_FOUND": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "optimade.adapters.structures.proteindatabank.OptimadeStructure": {
  "data": {
   "shadows": "optimade.models.StructureResource"
  },
  "type": "import"
 },
 "optimade.adapters.structures.proteindatabank.OptimadeStructureSpecies": {
  "data": {
   "shadows": "optimade.models.Species"
  },
  "type": "import"
 },
 "optimade.adapters.structures.proteindatabank.__all__": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "optimade.adapters.structures.proteindatabank.cell_to_cellpar": {
  "data": {
   "shadows": "optimade.adapters.structures.utils.cell_to_cellpar"
  },
  "type": "import"
 },
 "optimade.adapters.structures.proteindatabank.cellpar_to_cell": {
  "data": {
   "shadows": "optimade.adapters.structures.utils.cellpar_to_cell"
  },
  "type": "import"
 },
 "optimade.adapters.structures.proteindatabank.fractional_coordinates": {
  "data": {
   "shadows": "optimade.adapters.structures.utils.fractional_coordinates"
  },
  "type": "import"
 },
 "optimade.adapters.structures.proteindatabank.get_pdb": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "globals",
    "len",
    "numpy.asarray",
    "numpy.linalg.solve",
    "optimade.adapters.structures.proteindatabank.NUMPY_NOT_FOUND",
    "optimade.adapters.structures.utils.cell_to_cellpar",
    "optimade.adapters.structures.utils.cellpar_to_cell",
    "optimade.adapters.structures.utils.scaled_cell",
    "optimade.models.Species",
    "optimade.models.StructureResource",
    "range",
    "str",
    "typing.Dict",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.proteindatabank.get_pdbx_mmcif": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "globals",
    "hasattr",
    "len",
    "optimade.adapters.structures.proteindatabank.NUMPY_NOT_FOUND",
    "optimade.adapters.structures.utils.cell_to_cellpar",
    "optimade.adapters.structures.utils.fractional_coordinates",
    "optimade.models.Species",
    "optimade.models.StructureResource",
    "range",
    "str",
    "typing.Dict",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.proteindatabank.np": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "optimade.adapters.structures.proteindatabank.scaled_cell": {
  "data": {
   "shadows": "optimade.adapters.structures.utils.scaled_cell"
  },
  "type": "import"
 },
 "optimade.adapters.structures.proteindatabank.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "optimade.adapters.structures.pymatgen": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "ModuleNotFoundError",
    "pymatgen.Molecule",
    "pymatgen.Structure",
    "type"
   ]
  },
  "type": "module"
 },
 "optimade.adapters.structures.pymatgen.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.adapters.structures.pymatgen.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.adapters.structures.pymatgen.Molecule": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "optimade.adapters.structures.pymatgen.OptimadeStructure": {
  "data": {
   "shadows": "optimade.models.StructureResource"
  },
  "type": "import"
 },
 "optimade.adapters.structures.pymatgen.OptimadeStructureSpecies": {
  "data": {
   "shadows": "optimade.models.Species"
  },
  "type": "import"
 },
 "optimade.adapters.structures.pymatgen.PYMATGEN_NOT_FOUND": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "optimade.adapters.structures.pymatgen.Structure": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "optimade.adapters.structures.pymatgen.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.adapters.structures.pymatgen.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "optimade.adapters.structures.pymatgen._get_molecule": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "_pymatgen_species",
    "optimade.models.StructureResource",
    "pymatgen.Molecule"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.pymatgen._get_structure": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "_pymatgen_species",
    "optimade.models.StructureResource",
    "pymatgen.Structure"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.pymatgen._pymatgen_species": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "float",
    "int",
    "optimade.models.Species",
    "range",
    "str",
    "typing.Dict",
    "typing.List",
    "zip"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.pymatgen.get_pymatgen": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "_get_molecule",
    "_get_structure",
    "all",
    "globals",
    "optimade.adapters.structures.pymatgen.PYMATGEN_NOT_FOUND",
    "optimade.models.StructureResource",
    "pymatgen.Molecule",
    "pymatgen.Structure",
    "repr",
    "typing.Union",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.pymatgen.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "optimade.adapters.structures.utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy"
   ]
  },
  "type": "module"
 },
 "optimade.adapters.structures.utils.Iterable": {
  "data": {
   "shadows": "typing.Iterable"
  },
  "type": "import"
 },
 "optimade.adapters.structures.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.adapters.structures.utils.NUMPY_NOT_FOUND": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "optimade.adapters.structures.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "optimade.adapters.structures.utils.Vector3D": {
  "data": {
   "shadows": "optimade.models.structures.Vector3D"
  },
  "type": "import"
 },
 "optimade.adapters.structures.utils._pad_iter_of_iters": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "any",
    "bool",
    "float",
    "inner",
    "list",
    "outer",
    "tuple",
    "typing.Iterable",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.utils.cell_to_cellpar": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "bool",
    "float",
    "globals",
    "numpy.arccos",
    "numpy.array",
    "numpy.asarray",
    "numpy.dot",
    "numpy.linalg.norm",
    "numpy.pi",
    "optimade.adapters.structures.utils.NUMPY_NOT_FOUND",
    "optimade.models.structures.Vector3D",
    "range",
    "typing.List",
    "typing.Tuple",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.utils.cellpar_to_cell": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "abs",
    "float",
    "globals",
    "int",
    "isinstance",
    "len",
    "numpy.array",
    "numpy.cos",
    "numpy.cross",
    "numpy.dot",
    "numpy.float64",
    "numpy.linalg.norm",
    "numpy.pi",
    "numpy.sin",
    "numpy.spacing",
    "numpy.sqrt",
    "numpy.vstack",
    "optimade.adapters.structures.utils.NUMPY_NOT_FOUND",
    "optimade.adapters.structures.utils.unit_vector",
    "optimade.models.structures.Vector3D",
    "typing.List",
    "typing.Tuple",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.utils.fractional_coordinates": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "globals",
    "numpy.asarray",
    "numpy.linalg.solve",
    "optimade.adapters.structures.utils.NUMPY_NOT_FOUND",
    "optimade.models.structures.Vector3D",
    "range",
    "tuple",
    "typing.List",
    "typing.Tuple",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.utils.np": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "optimade.adapters.structures.utils.pad_cell": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "bool",
    "float",
    "optimade.adapters.structures.utils._pad_iter_of_iters",
    "optimade.models.structures.Vector3D",
    "tuple",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.utils.scaled_cell": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "globals",
    "numpy.asarray",
    "numpy.cross",
    "numpy.dot",
    "optimade.adapters.structures.utils.NUMPY_NOT_FOUND",
    "optimade.models.structures.Vector3D",
    "range",
    "tuple",
    "typing.Tuple",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.utils.unit_vector": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "globals",
    "numpy.array",
    "numpy.linalg.norm",
    "optimade.adapters.structures.utils.NUMPY_NOT_FOUND",
    "optimade.models.structures.Vector3D",
    "warnings.warn"
   ]
  },
  "type": "function"
 },
 "optimade.adapters.structures.utils.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "optimade.filterparser": {
  "data": {},
  "type": "module"
 },
 "optimade.filterparser.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "optimade.filterparser.lark_parser": {
  "data": {
   "symbols_in_volume": [
    "optimade.filterparser.lark_parser.get_versions"
   ]
  },
  "type": "module"
 },
 "optimade.filterparser.lark_parser.Lark": {
  "data": {
   "shadows": "lark.Lark"
  },
  "type": "import"
 },
 "optimade.filterparser.lark_parser.LarkParser": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "optimade.filterparser.lark_parser.LarkParser.__init__": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "lark.Lark",
    "max",
    "open",
    "optimade.filterparser.lark_parser.ParserError",
    "optimade.filterparser.lark_parser.available_parsers"
   ]
  },
  "type": "function"
 },
 "optimade.filterparser.lark_parser.LarkParser.__repr__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "isinstance",
    "lark.Tree",
    "repr"
   ]
  },
  "type": "function"
 },
 "optimade.filterparser.lark_parser.LarkParser.parse": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Exception",
    "optimade.filterparser.lark_parser.ParserError"
   ]
  },
  "type": "function"
 },
 "optimade.filterparser.lark_parser.ParserError": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "optimade.filterparser.lark_parser.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "optimade.filterparser.lark_parser.Tree": {
  "data": {
   "shadows": "lark.Tree"
  },
  "type": "import"
 },
 "optimade.filterparser.lark_parser.available_parsers": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "optimade.filterparser.lark_parser.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "optimade.filterparser.lark_parser.get_versions": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "int",
    "len",
    "map",
    "pathlib.Path",
    "tuple"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers": {
  "data": {},
  "type": "module"
 },
 "optimade.filtertransformers.debug": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "optimade.filterparser.LarkParser",
    "optimade.filtertransformers.debug.TransformerSkeleton",
    "optimade.filtertransformers.debug.f",
    "optimade.filtertransformers.debug.p",
    "optimade.filtertransformers.debug.t",
    "optimade.filtertransformers.debug.tree",
    "print"
   ]
  },
  "type": "module"
 },
 "optimade.filtertransformers.debug.DebugTransformer": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "lark.Transformer"
   ]
  },
  "type": "class"
 },
 "optimade.filtertransformers.debug.DebugTransformer.__default__": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.DebugTransformer.__init__": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.LarkParser": {
  "data": {
   "shadows": "optimade.filterparser.LarkParser"
  },
  "type": "import"
 },
 "optimade.filtertransformers.debug.Transformer": {
  "data": {
   "shadows": "lark.Transformer"
  },
  "type": "import"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "lark.Transformer"
   ]
  },
  "type": "class"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.__default__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.__init__": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.comparison": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.constant": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.constant_first_comparison": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.expression": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.expression_clause": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.expression_phrase": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.filter": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.fuzzy_string_op_rhs": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.known_op_rhs": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.length_comparison": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.number": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.predicate_comparison": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.property": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.property_first_comparison": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.property_zip_addon": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.set_op_rhs": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.set_zip_op_rhs": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.string": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.value": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.value_list": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.value_op_rhs": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.value_zip": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.TransformerSkeleton.value_zip_list": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.debug.f": {
  "data": {
   "lineno": 175
  },
  "type": "constant"
 },
 "optimade.filtertransformers.debug.p": {
  "data": {
   "lineno": 145
  },
  "type": "constant"
 },
 "optimade.filtertransformers.debug.t": {
  "data": {
   "lineno": 147
  },
  "type": "constant"
 },
 "optimade.filtertransformers.debug.tree": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "optimade.filtertransformers.django": {
  "data": {},
  "type": "module"
 },
 "optimade.filtertransformers.django.DjangoQueryError": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "optimade.filtertransformers.django.Lark2Django": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "optimade.filtertransformers.django.Lark2Django.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "optimade.filterparser.LarkParser"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.django.Lark2Django.and_": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "optimade.filtertransformers.django.operator"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.django.Lark2Django.eq": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "django.db.models.Q"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.django.Lark2Django.evaluate": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "isinstance",
    "lark.Tree",
    "lark.lexer.Token",
    "len",
    "op_fn",
    "optimade.filtertransformers.django.DjangoQueryError",
    "optimade.filtertransformers.django.django_db_keys"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.django.Lark2Django.ge": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "django.db.models.Q"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.django.Lark2Django.gt": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "django.db.models.Q"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.django.Lark2Django.le": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "django.db.models.Q"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.django.Lark2Django.lt": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "django.db.models.Q"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.django.Lark2Django.ne": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "django.db.models.Q"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.django.Lark2Django.not_": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "optimade.filtertransformers.django.Lark2Django.or_": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "optimade.filtertransformers.django.operator"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.django.Lark2Django.parse_raw_q": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "optimade.filtertransformers.django.LarkParser": {
  "data": {
   "shadows": "optimade.filterparser.LarkParser"
  },
  "type": "import"
 },
 "optimade.filtertransformers.django.Q": {
  "data": {
   "shadows": "django.db.models.Q"
  },
  "type": "import"
 },
 "optimade.filtertransformers.django.Token": {
  "data": {
   "shadows": "lark.lexer.Token"
  },
  "type": "import"
 },
 "optimade.filtertransformers.django.Tree": {
  "data": {
   "shadows": "lark.Tree"
  },
  "type": "import"
 },
 "optimade.filtertransformers.django.django_db_keys": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "optimade.filtertransformers.django.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "optimade.filtertransformers.elasticsearch": {
  "data": {},
  "type": "module"
 },
 "optimade.filtertransformers.elasticsearch.ATOMIC_NUMBERS": {
  "data": {
   "shadows": "optimade.models.ATOMIC_NUMBERS"
  },
  "type": "import"
 },
 "optimade.filtertransformers.elasticsearch.CHEMICAL_SYMBOLS": {
  "data": {
   "shadows": "optimade.models.CHEMICAL_SYMBOLS"
  },
  "type": "import"
 },
 "optimade.filtertransformers.elasticsearch.Field": {
  "data": {
   "shadows": "elasticsearch_dsl.Field"
  },
  "type": "import"
 },
 "optimade.filtertransformers.elasticsearch.Integer": {
  "data": {
   "shadows": "elasticsearch_dsl.Integer"
  },
  "type": "import"
 },
 "optimade.filtertransformers.elasticsearch.Keyword": {
  "data": {
   "shadows": "elasticsearch_dsl.Keyword"
  },
  "type": "import"
 },
 "optimade.filtertransformers.elasticsearch.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.filtertransformers.elasticsearch.Q": {
  "data": {
   "shadows": "elasticsearch_dsl.Q"
  },
  "type": "import"
 },
 "optimade.filtertransformers.elasticsearch.Quantity": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "optimade.filtertransformers.elasticsearch.Quantity.__init__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "elasticsearch_dsl.Field",
    "elasticsearch_dsl.Keyword",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Quantity.__repr__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Text": {
  "data": {
   "shadows": "elasticsearch_dsl.Text"
  },
  "type": "import"
 },
 "optimade.filtertransformers.elasticsearch.Transformer": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "optimade.filtertransformers.elasticsearch.lark"
   ]
  },
  "type": "class"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.__default__": {
  "data": {
   "lineno": 159
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "optimade.filtertransformers.elasticsearch.Quantity",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer._field": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer._has_query": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "Exception",
    "any",
    "dict",
    "elasticsearch_dsl.Q",
    "len",
    "zip"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer._order_terms": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "optimade.filtertransformers.elasticsearch.Quantity",
    "optimade.filtertransformers.elasticsearch._rev_cmp_operators",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer._query": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "elasticsearch_dsl.Integer",
    "elasticsearch_dsl.Keyword",
    "elasticsearch_dsl.Q",
    "elasticsearch_dsl.Text",
    "optimade.filtertransformers.elasticsearch._cmp_operators"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer._wildcard_query": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "elasticsearch_dsl.Q"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.and_expr": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.cmp_op": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.contains_op": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.ends_op": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.float_literal": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.has_list_op": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "NotImplementedError",
    "elasticsearch_dsl.Q",
    "optimade.filtertransformers.elasticsearch._has_operators"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.has_only_op": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "elasticsearch_dsl.Q",
    "list",
    "optimade.models.ATOMIC_NUMBERS",
    "optimade.models.CHEMICAL_SYMBOLS",
    "values"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.has_only_op.values": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.has_op": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.int_literal": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.known_op": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "NotImplementedError",
    "elasticsearch_dsl.Q"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.length": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.list": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.not_expr": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.or_expr": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.predicate": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.predicate_tuple": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.quantity": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "Exception",
    "optimade.filtertransformers.elasticsearch.Quantity"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.quantity_tuple": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.starts_op": {
  "data": {
   "lineno": 246
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch.Transformer.string_literal": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "optimade.filtertransformers.elasticsearch._cmp_operators": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "optimade.filtertransformers.elasticsearch._has_operators": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "optimade.filtertransformers.elasticsearch._length_quantities": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "optimade.filtertransformers.elasticsearch._rev_cmp_operators": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "optimade.filtertransformers.elasticsearch.lark": {
  "data": {
   "shadows": "lark"
  },
  "type": "import"
 },
 "optimade.filtertransformers.json": {
  "data": {},
  "type": "module"
 },
 "optimade.filtertransformers.json.JSONTransformer": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "lark.Transformer"
   ]
  },
  "type": "class"
 },
 "optimade.filtertransformers.json.JSONTransformer.__default__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "dict",
    "isinstance",
    "lark.lexer.Token",
    "type"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.json.JSONTransformer.__init__": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.json.Token": {
  "data": {
   "shadows": "lark.lexer.Token"
  },
  "type": "import"
 },
 "optimade.filtertransformers.json.Transformer": {
  "data": {
   "shadows": "lark.Transformer"
  },
  "type": "import"
 },
 "optimade.filtertransformers.mongo": {
  "data": {},
  "type": "module"
 },
 "optimade.filtertransformers.mongo.BadRequest": {
  "data": {
   "shadows": "optimade.server.exceptions.BadRequest"
  },
  "type": "import"
 },
 "optimade.filtertransformers.mongo.BaseResourceMapper": {
  "data": {
   "shadows": "optimade.server.mappers.BaseResourceMapper"
  },
  "type": "import"
 },
 "optimade.filtertransformers.mongo.MongoTransformer": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "lark.Transformer"
   ]
  },
  "type": "class"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.__default__": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "optimade.server.mappers.BaseResourceMapper",
    "super"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_aliases": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "dict",
    "recursive_postprocessing"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_aliases.apply_alias": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_aliases.check_for_alias": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_length_aliases": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "dict",
    "recursive_postprocessing"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_length_aliases.check_for_size": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_length_aliases.replace_with_length_alias": {
  "data": {
   "lineno": 276
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_length_operators": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "dict",
    "recursive_postprocessing"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_length_operators.apply_length_op": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_length_operators.check_for_length_op_filter": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_mongo_id_filter": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "dict",
    "recursive_postprocessing"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_mongo_id_filter.check_for_id_key": {
  "data": {
   "lineno": 456
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_mongo_id_filter.replace_str_id_with_objectid": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "bson.ObjectId",
    "isinstance",
    "optimade.server.exceptions.BadRequest",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_relationship_filtering": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "dict",
    "recursive_postprocessing"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_relationship_filtering.check_for_entry_type": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_relationship_filtering.replace_with_relationship": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_unknown_or_null_filter": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "dict",
    "recursive_postprocessing"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_unknown_or_null_filter.check_for_known_filter": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._apply_unknown_or_null_filter.replace_known_filter_with_or": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer._recursive_expression_phrase": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.comparison": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "lark.v_args"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.constant": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "lark.v_args"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.constant_first_comparison": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.expression": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.expression_clause": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.expression_phrase": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.filter": {
  "data": {
   "lineno": 52
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.fuzzy_string_op_rhs": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "isinstance",
    "lark.Token"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.known_op_rhs": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.length_op_rhs": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "NotImplementedError",
    "len"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.non_string_value": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "lark.v_args"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.not_implemented_string": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "NotImplementedError",
    "lark.v_args"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.number": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "float",
    "int",
    "lark.v_args",
    "type_"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.postprocess": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.property": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.property_first_comparison": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.property_zip_addon": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.set_op_rhs": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "NotImplementedError",
    "len"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.set_zip_op_rhs": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.signed_int": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "int",
    "lark.v_args"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.string": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "lark.v_args"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.transform": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.value": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "lark.v_args"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.value_list": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "NotImplementedError",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.value_op_rhs": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "lark.v_args"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.value_zip": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.MongoTransformer.value_zip_list": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.ObjectId": {
  "data": {
   "shadows": "bson.ObjectId"
  },
  "type": "import"
 },
 "optimade.filtertransformers.mongo.Token": {
  "data": {
   "shadows": "lark.Token"
  },
  "type": "import"
 },
 "optimade.filtertransformers.mongo.Transformer": {
  "data": {
   "shadows": "lark.Transformer"
  },
  "type": "import"
 },
 "optimade.filtertransformers.mongo.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "optimade.filtertransformers.mongo.recursive_postprocessing": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "condition",
    "dict",
    "isinstance",
    "list",
    "optimade.filtertransformers.mongo.copy",
    "replacement"
   ]
  },
  "type": "function"
 },
 "optimade.filtertransformers.mongo.v_args": {
  "data": {
   "shadows": "lark.v_args"
  },
  "type": "import"
 },
 "optimade.grammar": {
  "data": {},
  "type": "module"
 },
 "optimade.models": {
  "data": {},
  "type": "module"
 },
 "optimade.models.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "optimade.models.baseinfo": {
  "data": {},
  "type": "module"
 },
 "optimade.models.baseinfo.AnyHttpUrl": {
  "data": {
   "shadows": "pydantic.AnyHttpUrl"
  },
  "type": "import"
 },
 "optimade.models.baseinfo.AvailableApiVersion": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "optimade.models.utils.SemanticVersion",
    "optimade.models.utils.StrictField",
    "pydantic.AnyHttpUrl",
    "pydantic.BaseModel"
   ]
  },
  "type": "class"
 },
 "optimade.models.baseinfo.AvailableApiVersion.crosscheck_url_and_version": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "int",
    "pydantic.root_validator",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "optimade.models.baseinfo.AvailableApiVersion.url_must_be_versioned_base_url": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ValueError",
    "optimade.models.baseinfo.re",
    "pydantic.validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.baseinfo.BaseInfoAttributes": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "bool",
    "optimade.models.baseinfo.AvailableApiVersion",
    "optimade.models.utils.SemanticVersion",
    "optimade.models.utils.StrictField",
    "pydantic.BaseModel",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.baseinfo.BaseInfoAttributes.formats_and_endpoints_must_be_valid": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "ValueError",
    "pydantic.validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.baseinfo.BaseInfoResource": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "id",
    "optimade.models.baseinfo.BaseInfoAttributes",
    "optimade.models.jsonapi.Resource",
    "pydantic.Field",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "optimade.models.baseinfo.BaseModel": {
  "data": {
   "shadows": "pydantic.BaseModel"
  },
  "type": "import"
 },
 "optimade.models.baseinfo.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.models.baseinfo.Field": {
  "data": {
   "shadows": "pydantic.Field"
  },
  "type": "import"
 },
 "optimade.models.baseinfo.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.models.baseinfo.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "optimade.models.baseinfo.Resource": {
  "data": {
   "shadows": "optimade.models.jsonapi.Resource"
  },
  "type": "import"
 },
 "optimade.models.baseinfo.SemanticVersion": {
  "data": {
   "shadows": "optimade.models.utils.SemanticVersion"
  },
  "type": "import"
 },
 "optimade.models.baseinfo.StrictField": {
  "data": {
   "shadows": "optimade.models.utils.StrictField"
  },
  "type": "import"
 },
 "optimade.models.baseinfo.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "optimade.models.baseinfo.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "optimade.models.baseinfo.root_validator": {
  "data": {
   "shadows": "pydantic.root_validator"
  },
  "type": "import"
 },
 "optimade.models.baseinfo.validator": {
  "data": {
   "shadows": "pydantic.validator"
  },
  "type": "import"
 },
 "optimade.models.entries": {
  "data": {},
  "type": "module"
 },
 "optimade.models.entries.Attributes": {
  "data": {
   "shadows": "optimade.models.jsonapi.Attributes"
  },
  "type": "import"
 },
 "optimade.models.entries.BaseModel": {
  "data": {
   "shadows": "pydantic.BaseModel"
  },
  "type": "import"
 },
 "optimade.models.entries.DataType": {
  "data": {
   "shadows": "optimade.models.optimade_json.DataType"
  },
  "type": "import"
 },
 "optimade.models.entries.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.models.entries.EntryInfoProperty": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "bool",
    "optimade.models.optimade_json.DataType",
    "optimade.models.utils.StrictField",
    "pydantic.BaseModel",
    "str",
    "type",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.entries.EntryInfoResource": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "optimade.models.entries.EntryInfoProperty",
    "optimade.models.utils.StrictField",
    "pydantic.BaseModel",
    "str",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "optimade.models.entries.EntryRelationships": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "optimade.models.entries.ReferenceRelationship",
    "optimade.models.entries.StructureRelationship",
    "optimade.models.jsonapi.Relationships",
    "optimade.models.utils.StrictField",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.entries.EntryResource": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "id",
    "optimade.models.entries.EntryRelationships",
    "optimade.models.entries.EntryResourceAttributes",
    "optimade.models.jsonapi.Resource",
    "optimade.models.utils.OptimadeField",
    "optimade.models.utils.StrictField",
    "optimade.models.utils.SupportLevel.MUST",
    "pydantic.Field",
    "str",
    "type",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.entries.EntryResourceAttributes": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "datetime.datetime",
    "optimade.models.jsonapi.Attributes",
    "optimade.models.utils.OptimadeField",
    "optimade.models.utils.SupportLevel.MUST",
    "optimade.models.utils.SupportLevel.OPTIONAL",
    "optimade.models.utils.SupportLevel.SHOULD",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.entries.Field": {
  "data": {
   "shadows": "pydantic.Field"
  },
  "type": "import"
 },
 "optimade.models.entries.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.models.entries.OptimadeField": {
  "data": {
   "shadows": "optimade.models.utils.OptimadeField"
  },
  "type": "import"
 },
 "optimade.models.entries.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "optimade.models.entries.ReferenceRelationship": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "optimade.models.entries.TypedRelationship"
   ]
  },
  "type": "class"
 },
 "optimade.models.entries.Relationship": {
  "data": {
   "shadows": "optimade.models.optimade_json.Relationship"
  },
  "type": "import"
 },
 "optimade.models.entries.Relationships": {
  "data": {
   "shadows": "optimade.models.jsonapi.Relationships"
  },
  "type": "import"
 },
 "optimade.models.entries.Resource": {
  "data": {
   "shadows": "optimade.models.jsonapi.Resource"
  },
  "type": "import"
 },
 "optimade.models.entries.StrictField": {
  "data": {
   "shadows": "optimade.models.utils.StrictField"
  },
  "type": "import"
 },
 "optimade.models.entries.StructureRelationship": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "optimade.models.entries.TypedRelationship"
   ]
  },
  "type": "class"
 },
 "optimade.models.entries.SupportLevel": {
  "data": {
   "shadows": "optimade.models.utils.SupportLevel"
  },
  "type": "import"
 },
 "optimade.models.entries.TypedRelationship": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "optimade.models.optimade_json.Relationship"
   ]
  },
  "type": "class"
 },
 "optimade.models.entries.TypedRelationship.check_rel_type": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "getattr",
    "hasattr",
    "isinstance",
    "list",
    "pydantic.validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.entries.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "optimade.models.entries.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "optimade.models.entries.validator": {
  "data": {
   "shadows": "pydantic.validator"
  },
  "type": "import"
 },
 "optimade.models.index_metadb": {
  "data": {},
  "type": "module"
 },
 "optimade.models.index_metadb.BaseInfoAttributes": {
  "data": {
   "shadows": "optimade.models.baseinfo.BaseInfoAttributes"
  },
  "type": "import"
 },
 "optimade.models.index_metadb.BaseInfoResource": {
  "data": {
   "shadows": "optimade.models.baseinfo.BaseInfoResource"
  },
  "type": "import"
 },
 "optimade.models.index_metadb.BaseModel": {
  "data": {
   "shadows": "pydantic.BaseModel"
  },
  "type": "import"
 },
 "optimade.models.index_metadb.BaseResource": {
  "data": {
   "shadows": "optimade.models.jsonapi.BaseResource"
  },
  "type": "import"
 },
 "optimade.models.index_metadb.DefaultRelationship": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "optimade.models.index_metadb.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.models.index_metadb.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "optimade.models.index_metadb.Field": {
  "data": {
   "shadows": "pydantic.Field"
  },
  "type": "import"
 },
 "optimade.models.index_metadb.IndexInfoAttributes": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "bool",
    "optimade.models.baseinfo.BaseInfoAttributes",
    "optimade.models.utils.StrictField"
   ]
  },
  "type": "class"
 },
 "optimade.models.index_metadb.IndexInfoResource": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "optimade.models.baseinfo.BaseInfoResource",
    "optimade.models.index_metadb.DefaultRelationship",
    "optimade.models.index_metadb.IndexInfoAttributes",
    "optimade.models.index_metadb.IndexRelationship",
    "optimade.models.utils.StrictField",
    "pydantic.Field",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.index_metadb.IndexRelationship": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "optimade.models.index_metadb.RelatedLinksResource",
    "optimade.models.utils.StrictField",
    "pydantic.BaseModel",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.index_metadb.RelatedLinksResource": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "optimade.models.jsonapi.BaseResource",
    "pydantic.Field",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "optimade.models.index_metadb.StrictField": {
  "data": {
   "shadows": "optimade.models.utils.StrictField"
  },
  "type": "import"
 },
 "optimade.models.index_metadb.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.models.index_metadb.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "optimade.models.jsonapi": {
  "data": {},
  "type": "module"
 },
 "optimade.models.jsonapi.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "optimade.models.jsonapi.AnyUrl": {
  "data": {
   "shadows": "pydantic.AnyUrl"
  },
  "type": "import"
 },
 "optimade.models.jsonapi.Attributes": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pydantic.BaseModel"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.Attributes.Config": {
  "data": {
   "lineno": 287
  },
  "type": "class"
 },
 "optimade.models.jsonapi.Attributes.check_illegal_attributes_fields": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "ValueError",
    "pydantic.root_validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.jsonapi.BaseModel": {
  "data": {
   "shadows": "pydantic.BaseModel"
  },
  "type": "import"
 },
 "optimade.models.jsonapi.BaseResource": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "id",
    "optimade.models.utils.StrictField",
    "pydantic.BaseModel",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.BaseResource.Config": {
  "data": {
   "lineno": 168
  },
  "type": "class"
 },
 "optimade.models.jsonapi.BaseResource.Config.schema_extra": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "optimade.models.jsonapi.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.models.jsonapi.Error": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "id",
    "optimade.models.jsonapi.ErrorLinks",
    "optimade.models.jsonapi.ErrorSource",
    "optimade.models.jsonapi.Meta",
    "optimade.models.utils.StrictField",
    "pydantic.BaseModel",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.Error.__hash__": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "optimade.models.jsonapi.ErrorLinks": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Link",
    "optimade.models.utils.StrictField",
    "pydantic.AnyUrl",
    "pydantic.BaseModel",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.ErrorSource": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "optimade.models.utils.StrictField",
    "pydantic.BaseModel",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.JsonApi": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Meta",
    "optimade.models.utils.StrictField",
    "pydantic.BaseModel",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.Link": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Meta",
    "optimade.models.utils.StrictField",
    "pydantic.AnyUrl",
    "pydantic.BaseModel",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.models.jsonapi.Meta": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pydantic.BaseModel"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.Meta.Config": {
  "data": {
   "lineno": 35
  },
  "type": "class"
 },
 "optimade.models.jsonapi.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "optimade.models.jsonapi.Relationship": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "optimade.models.jsonapi.BaseResource",
    "optimade.models.jsonapi.Meta",
    "optimade.models.jsonapi.RelationshipLinks",
    "optimade.models.utils.StrictField",
    "pydantic.BaseModel",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.Relationship.at_least_one_relationship_key_must_be_set": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "ValueError",
    "pydantic.root_validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.jsonapi.RelationshipLinks": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Link",
    "optimade.models.utils.StrictField",
    "pydantic.AnyUrl",
    "pydantic.BaseModel",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.RelationshipLinks.either_self_or_related_must_be_specified": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "ValueError",
    "pydantic.root_validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.jsonapi.Relationships": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "pydantic.BaseModel"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.Relationships.check_illegal_relationships_fields": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "pydantic.root_validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.jsonapi.Resource": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Attributes",
    "optimade.models.jsonapi.BaseResource",
    "optimade.models.jsonapi.Meta",
    "optimade.models.jsonapi.Relationships",
    "optimade.models.jsonapi.ResourceLinks",
    "optimade.models.utils.StrictField",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.ResourceLinks": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Link",
    "optimade.models.utils.StrictField",
    "pydantic.AnyUrl",
    "pydantic.BaseModel",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.Response": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Error",
    "optimade.models.jsonapi.JsonApi",
    "optimade.models.jsonapi.Meta",
    "optimade.models.jsonapi.Resource",
    "optimade.models.jsonapi.ToplevelLinks",
    "optimade.models.utils.StrictField",
    "pydantic.BaseModel",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.Response.Config": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "datetime.datetime",
    "datetime.timezone.utc"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.Response.either_data_meta_or_errors_must_be_set": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "pydantic.root_validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.jsonapi.StrictField": {
  "data": {
   "shadows": "optimade.models.utils.StrictField"
  },
  "type": "import"
 },
 "optimade.models.jsonapi.ToplevelLinks": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "next",
    "optimade.models.jsonapi.Link",
    "optimade.models.utils.StrictField",
    "pydantic.AnyUrl",
    "pydantic.BaseModel",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.jsonapi.ToplevelLinks.Config": {
  "data": {
   "lineno": 96
  },
  "type": "class"
 },
 "optimade.models.jsonapi.ToplevelLinks.check_additional_keys_are_links": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Link",
    "pydantic.AnyUrl",
    "pydantic.parse_obj_as",
    "pydantic.root_validator",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.models.jsonapi.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "optimade.models.jsonapi.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.models.jsonapi.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "optimade.models.jsonapi.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "optimade.models.jsonapi.parse_obj_as": {
  "data": {
   "shadows": "pydantic.parse_obj_as"
  },
  "type": "import"
 },
 "optimade.models.jsonapi.root_validator": {
  "data": {
   "shadows": "pydantic.root_validator"
  },
  "type": "import"
 },
 "optimade.models.jsonapi.timezone": {
  "data": {
   "shadows": "datetime.timezone"
  },
  "type": "import"
 },
 "optimade.models.links": {
  "data": {},
  "type": "module"
 },
 "optimade.models.links.Aggregate": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "optimade.models.links.AnyUrl": {
  "data": {
   "shadows": "pydantic.AnyUrl"
  },
  "type": "import"
 },
 "optimade.models.links.Attributes": {
  "data": {
   "shadows": "optimade.models.jsonapi.Attributes"
  },
  "type": "import"
 },
 "optimade.models.links.EntryResource": {
  "data": {
   "shadows": "optimade.models.entries.EntryResource"
  },
  "type": "import"
 },
 "optimade.models.links.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "optimade.models.links.Link": {
  "data": {
   "shadows": "optimade.models.jsonapi.Link"
  },
  "type": "import"
 },
 "optimade.models.links.LinkType": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "optimade.models.links.LinksResource": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "optimade.models.entries.EntryResource",
    "optimade.models.links.LinksResourceAttributes",
    "optimade.models.utils.StrictField",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "optimade.models.links.LinksResource.relationships_must_not_be_present": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "pydantic.root_validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.links.LinksResourceAttributes": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Attributes",
    "optimade.models.jsonapi.Link",
    "optimade.models.links.Aggregate",
    "optimade.models.links.LinkType",
    "optimade.models.utils.StrictField",
    "pydantic.AnyUrl",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.links.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "optimade.models.links.StrictField": {
  "data": {
   "shadows": "optimade.models.utils.StrictField"
  },
  "type": "import"
 },
 "optimade.models.links.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.models.links.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "optimade.models.links.root_validator": {
  "data": {
   "shadows": "pydantic.root_validator"
  },
  "type": "import"
 },
 "optimade.models.optimade_json": {
  "data": {},
  "type": "module"
 },
 "optimade.models.optimade_json.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.AnyHttpUrl": {
  "data": {
   "shadows": "pydantic.AnyHttpUrl"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.AnyUrl": {
  "data": {
   "shadows": "pydantic.AnyUrl"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.BaseModel": {
  "data": {
   "shadows": "pydantic.BaseModel"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.BaseRelationshipMeta": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Meta",
    "optimade.models.utils.StrictField",
    "str"
   ]
  },
  "type": "class"
 },
 "optimade.models.optimade_json.BaseRelationshipResource": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "optimade.models.jsonapi.BaseResource",
    "optimade.models.optimade_json.BaseRelationshipMeta",
    "optimade.models.utils.StrictField",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.optimade_json.DataType": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "optimade.models.optimade_json.DataType.from_json_type": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.models.optimade_json.DataType.from_python_type": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "classmethod",
    "isinstance",
    "object",
    "str",
    "type",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.models.optimade_json.DataType.get_values": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "classmethod",
    "sorted"
   ]
  },
  "type": "function"
 },
 "optimade.models.optimade_json.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.EmailStr": {
  "data": {
   "shadows": "pydantic.EmailStr"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.Implementation": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Link",
    "optimade.models.optimade_json.ImplementationMaintainer",
    "optimade.models.utils.StrictField",
    "pydantic.AnyHttpUrl",
    "pydantic.AnyUrl",
    "pydantic.BaseModel",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.optimade_json.ImplementationMaintainer": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "optimade.models.utils.StrictField",
    "pydantic.BaseModel",
    "pydantic.EmailStr"
   ]
  },
  "type": "class"
 },
 "optimade.models.optimade_json.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.OptimadeError": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Error",
    "optimade.models.utils.StrictField",
    "str"
   ]
  },
  "type": "class"
 },
 "optimade.models.optimade_json.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.Provider": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Link",
    "optimade.models.utils.StrictField",
    "pydantic.AnyHttpUrl",
    "pydantic.BaseModel",
    "str",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.optimade_json.Relationship": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Relationship",
    "optimade.models.optimade_json.BaseRelationshipResource",
    "optimade.models.utils.StrictField",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.optimade_json.ResponseMeta": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime",
    "int",
    "optimade.models.jsonapi.Link",
    "optimade.models.jsonapi.Meta",
    "optimade.models.optimade_json.Implementation",
    "optimade.models.optimade_json.Provider",
    "optimade.models.optimade_json.ResponseMetaQuery",
    "optimade.models.optimade_json.Warnings",
    "optimade.models.utils.SemanticVersion",
    "optimade.models.utils.StrictField",
    "pydantic.AnyHttpUrl",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.optimade_json.ResponseMetaQuery": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "optimade.models.utils.StrictField",
    "pydantic.BaseModel",
    "str"
   ]
  },
  "type": "class"
 },
 "optimade.models.optimade_json.SemanticVersion": {
  "data": {
   "shadows": "optimade.models.utils.SemanticVersion"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.StrictField": {
  "data": {
   "shadows": "optimade.models.utils.StrictField"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.Success": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Response",
    "optimade.models.optimade_json.ResponseMeta",
    "optimade.models.utils.StrictField"
   ]
  },
  "type": "class"
 },
 "optimade.models.optimade_json.Success.either_data_meta_or_errors_must_be_set": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "pydantic.root_validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.optimade_json.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.Warnings": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "optimade.models.optimade_json.OptimadeError",
    "optimade.models.utils.StrictField",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "optimade.models.optimade_json.Warnings.Config": {
  "data": {
   "lineno": 160
  },
  "type": "class"
 },
 "optimade.models.optimade_json.Warnings.Config.schema_extra": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "staticmethod",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "optimade.models.optimade_json.Warnings.status_must_not_be_specified": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "pydantic.root_validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.optimade_json.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "optimade.models.optimade_json.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.jsonapi": {
  "data": {
   "shadows": "optimade.models.jsonapi"
  },
  "type": "import"
 },
 "optimade.models.optimade_json.root_validator": {
  "data": {
   "shadows": "pydantic.root_validator"
  },
  "type": "import"
 },
 "optimade.models.references": {
  "data": {},
  "type": "module"
 },
 "optimade.models.references.AnyUrl": {
  "data": {
   "shadows": "pydantic.AnyUrl"
  },
  "type": "import"
 },
 "optimade.models.references.BaseModel": {
  "data": {
   "shadows": "pydantic.BaseModel"
  },
  "type": "import"
 },
 "optimade.models.references.EntryResource": {
  "data": {
   "shadows": "optimade.models.entries.EntryResource"
  },
  "type": "import"
 },
 "optimade.models.references.EntryResourceAttributes": {
  "data": {
   "shadows": "optimade.models.entries.EntryResourceAttributes"
  },
  "type": "import"
 },
 "optimade.models.references.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.models.references.OptimadeField": {
  "data": {
   "shadows": "optimade.models.utils.OptimadeField"
  },
  "type": "import"
 },
 "optimade.models.references.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "optimade.models.references.Person": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "optimade.models.utils.OptimadeField",
    "optimade.models.utils.SupportLevel.MUST",
    "optimade.models.utils.SupportLevel.OPTIONAL",
    "pydantic.BaseModel",
    "str",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.references.ReferenceResource": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "optimade.models.entries.EntryResource",
    "optimade.models.references.ReferenceResourceAttributes",
    "optimade.models.utils.OptimadeField",
    "optimade.models.utils.SupportLevel.MUST",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "optimade.models.references.ReferenceResource.validate_attributes": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "pydantic.validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.references.ReferenceResourceAttributes": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "optimade.models.entries.EntryResourceAttributes",
    "optimade.models.references.Person",
    "optimade.models.utils.OptimadeField",
    "optimade.models.utils.SupportLevel.OPTIONAL",
    "pydantic.AnyUrl",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.references.SupportLevel": {
  "data": {
   "shadows": "optimade.models.utils.SupportLevel"
  },
  "type": "import"
 },
 "optimade.models.references.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "optimade.models.references.validator": {
  "data": {
   "shadows": "pydantic.validator"
  },
  "type": "import"
 },
 "optimade.models.responses": {
  "data": {},
  "type": "module"
 },
 "optimade.models.responses.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "optimade.models.responses.BaseInfoResource": {
  "data": {
   "shadows": "optimade.models.baseinfo.BaseInfoResource"
  },
  "type": "import"
 },
 "optimade.models.responses.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.models.responses.EntryInfoResource": {
  "data": {
   "shadows": "optimade.models.entries.EntryInfoResource"
  },
  "type": "import"
 },
 "optimade.models.responses.EntryInfoResponse": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "optimade.models.entries.EntryInfoResource",
    "optimade.models.optimade_json.Success",
    "optimade.models.utils.StrictField"
   ]
  },
  "type": "class"
 },
 "optimade.models.responses.EntryResource": {
  "data": {
   "shadows": "optimade.models.entries.EntryResource"
  },
  "type": "import"
 },
 "optimade.models.responses.EntryResponseMany": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "optimade.models.entries.EntryResource",
    "optimade.models.optimade_json.Success",
    "pydantic.Field",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.responses.EntryResponseOne": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "optimade.models.entries.EntryResource",
    "optimade.models.optimade_json.Success",
    "pydantic.Field",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.responses.ErrorResponse": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "optimade.models.jsonapi.Response",
    "optimade.models.optimade_json.OptimadeError",
    "optimade.models.optimade_json.ResponseMeta",
    "optimade.models.utils.StrictField",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "optimade.models.responses.ErrorResponse.data_must_be_skipped": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "pydantic.root_validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.responses.Field": {
  "data": {
   "shadows": "pydantic.Field"
  },
  "type": "import"
 },
 "optimade.models.responses.IndexInfoResource": {
  "data": {
   "shadows": "optimade.models.index_metadb.IndexInfoResource"
  },
  "type": "import"
 },
 "optimade.models.responses.IndexInfoResponse": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "optimade.models.index_metadb.IndexInfoResource",
    "optimade.models.optimade_json.Success",
    "optimade.models.utils.StrictField"
   ]
  },
  "type": "class"
 },
 "optimade.models.responses.InfoResponse": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "optimade.models.baseinfo.BaseInfoResource",
    "optimade.models.optimade_json.Success",
    "optimade.models.utils.StrictField"
   ]
  },
  "type": "class"
 },
 "optimade.models.responses.LinksResource": {
  "data": {
   "shadows": "optimade.models.links.LinksResource"
  },
  "type": "import"
 },
 "optimade.models.responses.LinksResponse": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "optimade.models.links.LinksResource",
    "optimade.models.responses.EntryResponseMany",
    "optimade.models.utils.StrictField",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.responses.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.models.responses.OptimadeError": {
  "data": {
   "shadows": "optimade.models.optimade_json.OptimadeError"
  },
  "type": "import"
 },
 "optimade.models.responses.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "optimade.models.responses.ReferenceResource": {
  "data": {
   "shadows": "optimade.models.references.ReferenceResource"
  },
  "type": "import"
 },
 "optimade.models.responses.ReferenceResponseMany": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "optimade.models.references.ReferenceResource",
    "optimade.models.responses.EntryResponseMany",
    "optimade.models.utils.StrictField",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.responses.ReferenceResponseOne": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "optimade.models.references.ReferenceResource",
    "optimade.models.responses.EntryResponseOne",
    "optimade.models.utils.StrictField",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.responses.Response": {
  "data": {
   "shadows": "optimade.models.jsonapi.Response"
  },
  "type": "import"
 },
 "optimade.models.responses.ResponseMeta": {
  "data": {
   "shadows": "optimade.models.optimade_json.ResponseMeta"
  },
  "type": "import"
 },
 "optimade.models.responses.StrictField": {
  "data": {
   "shadows": "optimade.models.utils.StrictField"
  },
  "type": "import"
 },
 "optimade.models.responses.StructureResource": {
  "data": {
   "shadows": "optimade.models.structures.StructureResource"
  },
  "type": "import"
 },
 "optimade.models.responses.StructureResponseMany": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "optimade.models.responses.EntryResponseMany",
    "optimade.models.structures.StructureResource",
    "optimade.models.utils.StrictField",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.responses.StructureResponseOne": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "optimade.models.responses.EntryResponseOne",
    "optimade.models.structures.StructureResource",
    "optimade.models.utils.StrictField",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Union"
   ]
  },
  "type": "class"
 },
 "optimade.models.responses.Success": {
  "data": {
   "shadows": "optimade.models.optimade_json.Success"
  },
  "type": "import"
 },
 "optimade.models.responses.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.models.responses.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "optimade.models.responses.root_validator": {
  "data": {
   "shadows": "pydantic.root_validator"
  },
  "type": "import"
 },
 "optimade.models.structures": {
  "data": {
   "symbols_in_volume": [
    "float",
    "optimade.models.utils.CHEMICAL_SYMBOLS",
    "optimade.models.utils.EXTRA_SYMBOLS",
    "pydantic.conlist",
    "sys.float_info.epsilon",
    "typing.Union"
   ]
  },
  "type": "module"
 },
 "optimade.models.structures.ANONYMOUS_ELEMENTS": {
  "data": {
   "shadows": "optimade.models.utils.ANONYMOUS_ELEMENTS"
  },
  "type": "import"
 },
 "optimade.models.structures.Assembly": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "float",
    "int",
    "optimade.models.utils.OptimadeField",
    "optimade.models.utils.SupportLevel.MUST",
    "optimade.models.utils.SupportLevel.OPTIONAL",
    "pydantic.BaseModel",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "optimade.models.structures.Assembly.check_self_consistency": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pydantic.validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.Assembly.validate_sites_in_groups": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pydantic.validator",
    "set"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.BaseModel": {
  "data": {
   "shadows": "pydantic.BaseModel"
  },
  "type": "import"
 },
 "optimade.models.structures.CHEMICAL_FORMULA_REGEXP": {
  "data": {
   "shadows": "optimade.models.utils.CHEMICAL_FORMULA_REGEXP"
  },
  "type": "import"
 },
 "optimade.models.structures.CHEMICAL_SYMBOLS": {
  "data": {
   "shadows": "optimade.models.utils.CHEMICAL_SYMBOLS"
  },
  "type": "import"
 },
 "optimade.models.structures.EPS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "optimade.models.structures.EXTENDED_CHEMICAL_SYMBOLS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "optimade.models.structures.EXTRA_SYMBOLS": {
  "data": {
   "shadows": "optimade.models.utils.EXTRA_SYMBOLS"
  },
  "type": "import"
 },
 "optimade.models.structures.EntryResource": {
  "data": {
   "shadows": "optimade.models.entries.EntryResource"
  },
  "type": "import"
 },
 "optimade.models.structures.EntryResourceAttributes": {
  "data": {
   "shadows": "optimade.models.entries.EntryResourceAttributes"
  },
  "type": "import"
 },
 "optimade.models.structures.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "optimade.models.structures.IntEnum": {
  "data": {
   "shadows": "enum.IntEnum"
  },
  "type": "import"
 },
 "optimade.models.structures.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.models.structures.OptimadeField": {
  "data": {
   "shadows": "optimade.models.utils.OptimadeField"
  },
  "type": "import"
 },
 "optimade.models.structures.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "optimade.models.structures.Periodicity": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "enum.IntEnum"
   ]
  },
  "type": "class"
 },
 "optimade.models.structures.Species": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "float",
    "int",
    "optimade.models.utils.OptimadeField",
    "optimade.models.utils.SupportLevel.MUST",
    "optimade.models.utils.SupportLevel.OPTIONAL",
    "pydantic.BaseModel",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.structures.Species.attached_nattached_mutually_exclusive": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pydantic.root_validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.Species.validate_chemical_symbols": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "ValueError",
    "optimade.models.structures.EXTENDED_CHEMICAL_SYMBOLS",
    "pydantic.validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.Species.validate_concentration": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pydantic.validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.Species.validate_minimum_list_length": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pydantic.validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.StrictField": {
  "data": {
   "shadows": "optimade.models.utils.StrictField"
  },
  "type": "import"
 },
 "optimade.models.structures.StructureFeatures": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "optimade.models.structures.StructureResource": {
  "data": {
   "lineno": 1000,
   "symbols_in_volume": [
    "optimade.models.entries.EntryResource",
    "optimade.models.structures.StructureResourceAttributes",
    "optimade.models.utils.StrictField",
    "optimade.models.utils.SupportLevel.MUST",
    "str",
    "type"
   ]
  },
  "type": "class"
 },
 "optimade.models.structures.StructureResourceAttributes": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "float",
    "int",
    "optimade.models.entries.EntryResourceAttributes",
    "optimade.models.structures.Assembly",
    "optimade.models.structures.Periodicity",
    "optimade.models.structures.Species",
    "optimade.models.structures.StructureFeatures",
    "optimade.models.structures.Vector3D",
    "optimade.models.structures.Vector3D_unknown",
    "optimade.models.utils.CHEMICAL_FORMULA_REGEXP",
    "optimade.models.utils.OptimadeField",
    "optimade.models.utils.SupportLevel.MUST",
    "optimade.models.utils.SupportLevel.OPTIONAL",
    "optimade.models.utils.SupportLevel.SHOULD",
    "pydantic.conlist",
    "str",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.models.structures.StructureResourceAttributes.check_anonymous_formula": {
  "data": {
   "lineno": 801,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "int",
    "len",
    "optimade.models.structures.re",
    "optimade.models.utils.ANONYMOUS_ELEMENTS",
    "pydantic.validator",
    "sorted",
    "tuple"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.StructureResourceAttributes.check_ordered_formula": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "optimade.models.structures.re",
    "optimade.models.utils.CHEMICAL_SYMBOLS",
    "pydantic.validator",
    "sorted"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.StructureResourceAttributes.check_periodic_dimensions": {
  "data": {
   "lineno": 845,
   "symbols_in_volume": [
    "ValueError",
    "pydantic.validator",
    "sum"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.StructureResourceAttributes.element_must_be_chemical_symbol": {
  "data": {
   "lineno": 825,
   "symbols_in_volume": [
    "ValueError",
    "optimade.models.utils.CHEMICAL_SYMBOLS",
    "pydantic.validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.StructureResourceAttributes.elements_must_be_alphabetical": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "ValueError",
    "pydantic.validator",
    "sorted"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.StructureResourceAttributes.null_values_for_whole_vector": {
  "data": {
   "lineno": 880,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "float",
    "isinstance",
    "pydantic.validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.StructureResourceAttributes.ratios_must_sum_to_one": {
  "data": {
   "lineno": 837,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "optimade.models.structures.EPS",
    "pydantic.validator",
    "sum"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.StructureResourceAttributes.required_if_dimension_types_has_one": {
  "data": {
   "lineno": 860,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "optimade.models.structures.Periodicity",
    "pydantic.validator",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.StructureResourceAttributes.validate_nsites": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pydantic.validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.StructureResourceAttributes.validate_species": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pydantic.validator",
    "set"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.StructureResourceAttributes.validate_species_at_sites": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "len",
    "pydantic.validator"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.StructureResourceAttributes.validate_structure_features": {
  "data": {
   "lineno": 931,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "len",
    "optimade.models.structures.StructureFeatures",
    "pydantic.validator",
    "sorted"
   ]
  },
  "type": "function"
 },
 "optimade.models.structures.SupportLevel": {
  "data": {
   "shadows": "optimade.models.utils.SupportLevel"
  },
  "type": "import"
 },
 "optimade.models.structures.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.models.structures.Vector3D": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "optimade.models.structures.Vector3D_unknown": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "optimade.models.structures.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "optimade.models.structures.conlist": {
  "data": {
   "shadows": "pydantic.conlist"
  },
  "type": "import"
 },
 "optimade.models.structures.float_info": {
  "data": {
   "shadows": "sys.float_info"
  },
  "type": "import"
 },
 "optimade.models.structures.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "optimade.models.structures.root_validator": {
  "data": {
   "shadows": "pydantic.root_validator"
  },
  "type": "import"
 },
 "optimade.models.structures.validator": {
  "data": {
   "shadows": "pydantic.validator"
  },
  "type": "import"
 },
 "optimade.models.utils": {
  "data": {
   "symbols_in_volume": [
    "enumerate",
    "list",
    "optimade.models.utils.ATOMIC_NUMBERS",
    "optimade.models.utils.CHEMICAL_SYMBOLS",
    "optimade.models.utils.anonymous_element_generator",
    "optimade.models.utils.inspect",
    "optimade.models.utils.itertools",
    "pydantic.Field",
    "tuple"
   ]
  },
  "type": "module"
 },
 "optimade.models.utils.ANONYMOUS_ELEMENTS": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "optimade.models.utils.ATOMIC_NUMBERS": {
  "data": {
   "lineno": 325
  },
  "type": "constant"
 },
 "optimade.models.utils.CHEMICAL_FORMULA_REGEXP": {
  "data": {
   "lineno": 200
  },
  "type": "constant"
 },
 "optimade.models.utils.CHEMICAL_SYMBOLS": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "optimade.models.utils.EXTRA_SYMBOLS": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "optimade.models.utils.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "optimade.models.utils.Field": {
  "data": {
   "shadows": "pydantic.Field"
  },
  "type": "import"
 },
 "optimade.models.utils.OptimadeField": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "isinstance",
    "optimade.models.utils.StrictField",
    "optimade.models.utils.SupportLevel",
    "pydantic.Field",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "optimade.models.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "optimade.models.utils.SemanticVersion": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "optimade.models.utils.re",
    "str"
   ]
  },
  "type": "class"
 },
 "optimade.models.utils.SemanticVersion.__get_validators__": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "optimade.models.utils.SemanticVersion.__modify_schema__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "optimade.models.utils.SemanticVersion._match": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "optimade.models.utils.SemanticVersion.base_version": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.models.utils.SemanticVersion.build_metadata": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.models.utils.SemanticVersion.major": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "optimade.models.utils.SemanticVersion.minor": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "optimade.models.utils.SemanticVersion.patch": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "optimade.models.utils.SemanticVersion.prerelease": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "property",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.models.utils.SemanticVersion.validate": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.models.utils.StrictField": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "RuntimeError",
    "optimade.models.utils._PYDANTIC_FIELD_KWARGS",
    "optimade.models.utils.warnings",
    "pydantic.Field",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.models.utils.SupportLevel": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "optimade.models.utils._PYDANTIC_FIELD_KWARGS": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "optimade.models.utils.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "optimade.models.utils.anonymous_element_generator": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "list",
    "optimade.models.utils.itertools",
    "string.ascii_lowercase"
   ]
  },
  "type": "function"
 },
 "optimade.models.utils.ascii_lowercase": {
  "data": {
   "shadows": "string.ascii_lowercase"
  },
  "type": "import"
 },
 "optimade.models.utils.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "optimade.models.utils.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "optimade.models.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "optimade.models.utils.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "optimade.server": {
  "data": {},
  "type": "module"
 },
 "optimade.server.config": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "optimade.server.config.ServerConfig",
    "pathlib.Path.home",
    "str"
   ]
  },
  "type": "module"
 },
 "optimade.server.config.AnyHttpUrl": {
  "data": {
   "shadows": "pydantic.AnyHttpUrl"
  },
  "type": "import"
 },
 "optimade.server.config.BaseSettings": {
  "data": {
   "shadows": "pydantic.BaseSettings"
  },
  "type": "import"
 },
 "optimade.server.config.CONFIG": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "optimade.server.config.DEFAULT_CONFIG_FILE_PATH": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "optimade.server.config.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.server.config.Enum": {
  "data": {
   "shadows": "enum.Enum"
  },
  "type": "import"
 },
 "optimade.server.config.Field": {
  "data": {
   "shadows": "pydantic.Field"
  },
  "type": "import"
 },
 "optimade.server.config.Implementation": {
  "data": {
   "shadows": "optimade.models.Implementation"
  },
  "type": "import"
 },
 "optimade.server.config.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.server.config.Literal": {
  "data": {
   "shadows": "typing_extensions.Literal"
  },
  "type": "import"
 },
 "optimade.server.config.LogLevel": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "enum.Enum"
   ]
  },
  "type": "class"
 },
 "optimade.server.config.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "optimade.server.config.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "optimade.server.config.Provider": {
  "data": {
   "shadows": "optimade.models.Provider"
  },
  "type": "import"
 },
 "optimade.server.config.ServerConfig": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "aliases",
    "bool",
    "int",
    "optimade.__version__",
    "optimade.models.Implementation",
    "optimade.models.Provider",
    "optimade.server.config.LogLevel",
    "pathlib.Path",
    "pydantic.AnyHttpUrl",
    "pydantic.BaseSettings",
    "pydantic.Field",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing_extensions.Literal"
   ]
  },
  "type": "class"
 },
 "optimade.server.config.ServerConfig.Config": {
  "data": {
   "lineno": 179
  },
  "type": "class"
 },
 "optimade.server.config.ServerConfig.load_settings": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "open",
    "optimade.server.config.DEFAULT_CONFIG_FILE_PATH",
    "optimade.server.config.json",
    "optimade.server.config.warnings",
    "pathlib.Path",
    "pydantic.root_validator",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.config.ServerConfig.set_implementation_version": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "optimade.__version__",
    "pydantic.validator"
   ]
  },
  "type": "function"
 },
 "optimade.server.config.__version__": {
  "data": {
   "shadows": "optimade.__version__"
  },
  "type": "import"
 },
 "optimade.server.config.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "optimade.server.config.root_validator": {
  "data": {
   "shadows": "pydantic.root_validator"
  },
  "type": "import"
 },
 "optimade.server.config.validator": {
  "data": {
   "shadows": "pydantic.validator"
  },
  "type": "import"
 },
 "optimade.server.config.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "optimade.server.data": {
  "data": {
   "symbols_in_volume": [
    "FileNotFoundError",
    "globals",
    "open",
    "optimade.server.data.data_paths",
    "pathlib.Path"
   ]
  },
  "type": "module"
 },
 "optimade.server.data.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "optimade.server.data.bson.json_util": {
  "data": {
   "shadows": "bson.json_util"
  },
  "type": "import"
 },
 "optimade.server.data.data_paths": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "optimade.server.entry_collections": {
  "data": {},
  "type": "module"
 },
 "optimade.server.entry_collections.__all__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "optimade.server.entry_collections.entry_collections": {
  "data": {},
  "type": "module"
 },
 "optimade.server.entry_collections.entry_collections.ABC": {
  "data": {
   "shadows": "abc.ABC"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.BadRequest": {
  "data": {
   "shadows": "optimade.server.exceptions.BadRequest"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.BaseResourceMapper": {
  "data": {
   "shadows": "optimade.server.mappers.BaseResourceMapper"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.EntryCollection": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "abc.ABC"
   ]
  },
  "type": "class"
 },
 "optimade.server.entry_collections.entry_collections.EntryCollection.__init__": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "lark.Transformer",
    "optimade.filterparser.LarkParser",
    "optimade.models.EntryResource",
    "optimade.server.config.CONFIG.provider.prefix",
    "optimade.server.config.CONFIG.provider_fields.get",
    "optimade.server.mappers.BaseResourceMapper"
   ]
  },
  "type": "function"
 },
 "optimade.server.entry_collections.entry_collections.EntryCollection.__len__": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int"
   ]
  },
  "type": "function"
 },
 "optimade.server.entry_collections.entry_collections.EntryCollection.all_fields": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "property",
    "set"
   ]
  },
  "type": "function"
 },
 "optimade.server.entry_collections.entry_collections.EntryCollection.count": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "int"
   ]
  },
  "type": "function"
 },
 "optimade.server.entry_collections.entry_collections.EntryCollection.find": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "abc.abstractmethod",
    "bool",
    "int",
    "optimade.models.EntryResource",
    "optimade.server.query_params.EntryListingQueryParams",
    "set",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.server.entry_collections.entry_collections.EntryCollection.get_attribute_fields": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "optimade.server.entry_collections.entry_collections.EntryCollection.handle_query_params": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "optimade.server.config.CONFIG.page_limit",
    "optimade.server.config.CONFIG.page_limit_max",
    "optimade.server.exceptions.BadRequest",
    "optimade.server.exceptions.Forbidden",
    "optimade.server.query_params.EntryListingQueryParams",
    "optimade.server.query_params.SingleEntryQueryParams",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.entry_collections.entry_collections.EntryCollection.parse_sort_params": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "all",
    "int",
    "len",
    "optimade.server.entry_collections.entry_collections.re",
    "optimade.server.entry_collections.entry_collections.warnings",
    "optimade.server.exceptions.BadRequest",
    "optimade.server.warnings.FieldValueNotRecognized",
    "str",
    "tuple",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.server.entry_collections.entry_collections.EntryListingQueryParams": {
  "data": {
   "shadows": "optimade.server.query_params.EntryListingQueryParams"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.EntryResource": {
  "data": {
   "shadows": "optimade.models.EntryResource"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.FieldValueNotRecognized": {
  "data": {
   "shadows": "optimade.server.warnings.FieldValueNotRecognized"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.Forbidden": {
  "data": {
   "shadows": "optimade.server.exceptions.Forbidden"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.LarkParser": {
  "data": {
   "shadows": "optimade.filterparser.LarkParser"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.SingleEntryQueryParams": {
  "data": {
   "shadows": "optimade.server.query_params.SingleEntryQueryParams"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.Transformer": {
  "data": {
   "shadows": "lark.Transformer"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.abstractmethod": {
  "data": {
   "shadows": "abc.abstractmethod"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.entry_collections.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo": {
  "data": {
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bool",
    "int",
    "mongomock.MongoClient",
    "optimade.server.config.CONFIG.mongo_uri",
    "optimade.server.config.CONFIG.use_real_mongo",
    "optimade.server.entry_collections.mongo.CI_FORCE_MONGO",
    "optimade.server.entry_collections.mongo.os",
    "optimade.server.logger.LOGGER.info",
    "pymongo.MongoClient"
   ]
  },
  "type": "module"
 },
 "optimade.server.entry_collections.mongo.BaseResourceMapper": {
  "data": {
   "shadows": "optimade.server.mappers.BaseResourceMapper"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.CI_FORCE_MONGO": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "optimade.server.entry_collections.mongo.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.EntryCollection": {
  "data": {
   "shadows": "optimade.server.entry_collections.EntryCollection"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.EntryListingQueryParams": {
  "data": {
   "shadows": "optimade.server.query_params.EntryListingQueryParams"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.EntryResource": {
  "data": {
   "shadows": "optimade.models.EntryResource"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.HTTPException": {
  "data": {
   "shadows": "fastapi.HTTPException"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.LOGGER": {
  "data": {
   "shadows": "optimade.server.logger.LOGGER"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.LarkParser": {
  "data": {
   "shadows": "optimade.filterparser.LarkParser"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.MongoClient": {
  "data": {
   "shadows": "mongomock.MongoClient"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.MongoCollection": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "optimade.server.entry_collections.EntryCollection"
   ]
  },
  "type": "class"
 },
 "optimade.server.entry_collections.mongo.MongoCollection.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "optimade.filterparser.LarkParser",
    "optimade.filtertransformers.mongo.MongoTransformer",
    "optimade.models.EntryResource",
    "optimade.server.entry_collections.mongo.mongomock",
    "optimade.server.mappers.BaseResourceMapper",
    "super",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.entry_collections.mongo.MongoCollection.__len__": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "optimade.server.entry_collections.mongo.MongoCollection._check_aliases": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "RuntimeError",
    "aliases",
    "any"
   ]
  },
  "type": "function"
 },
 "optimade.server.entry_collections.mongo.MongoCollection.count": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "int",
    "list"
   ]
  },
  "type": "function"
 },
 "optimade.server.entry_collections.mongo.MongoCollection.find": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "bool",
    "fastapi.HTTPException",
    "getattr",
    "int",
    "isinstance",
    "len",
    "optimade.models.EntryResource",
    "optimade.server.query_params.EntryListingQueryParams",
    "optimade.server.query_params.SingleEntryQueryParams",
    "set",
    "str",
    "typing.List",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.entry_collections.mongo.MongoTransformer": {
  "data": {
   "shadows": "optimade.filtertransformers.mongo.MongoTransformer"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.SingleEntryQueryParams": {
  "data": {
   "shadows": "optimade.server.query_params.SingleEntryQueryParams"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.client": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "optimade.server.entry_collections.mongo.mongomock": {
  "data": {
   "shadows": "mongomock"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "optimade.server.entry_collections.mongo.pymongo.collection": {
  "data": {
   "shadows": "pymongo.collection"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "NotImplementedError",
    "fastapi.Request",
    "fastapi.exceptions.RequestValidationError",
    "fastapi.exceptions.StarletteHTTPException",
    "fastapi.responses.JSONResponse",
    "lark.exceptions.VisitError",
    "optimade.server.exception_handlers.general_exception_handler",
    "optimade.server.exception_handlers.grammar_not_implemented_handler",
    "optimade.server.exception_handlers.http_exception_handler",
    "optimade.server.exception_handlers.not_implemented_handler",
    "optimade.server.exception_handlers.request_validation_exception_handler",
    "optimade.server.exception_handlers.validation_exception_handler",
    "pydantic.ValidationError",
    "typing.Callable",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "optimade.server.exception_handlers.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.ErrorResponse": {
  "data": {
   "shadows": "optimade.models.ErrorResponse"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.ErrorSource": {
  "data": {
   "shadows": "optimade.models.ErrorSource"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.JSONResponse": {
  "data": {
   "shadows": "fastapi.responses.JSONResponse"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.LOGGER": {
  "data": {
   "shadows": "optimade.server.logger.LOGGER"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.OptimadeError": {
  "data": {
   "shadows": "optimade.models.OptimadeError"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.Request": {
  "data": {
   "shadows": "fastapi.Request"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.RequestValidationError": {
  "data": {
   "shadows": "fastapi.exceptions.RequestValidationError"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.StarletteHTTPException": {
  "data": {
   "shadows": "fastapi.exceptions.StarletteHTTPException"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.ValidationError": {
  "data": {
   "shadows": "pydantic.ValidationError"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.VisitError": {
  "data": {
   "shadows": "lark.exceptions.VisitError"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.general_exception": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "fastapi.Request",
    "fastapi.encoders.jsonable_encoder",
    "fastapi.responses.JSONResponse",
    "int",
    "optimade.models.ErrorResponse",
    "optimade.models.OptimadeError",
    "optimade.server.config.CONFIG.debug",
    "optimade.server.config.CONFIG.provider.prefix",
    "optimade.server.exception_handlers.traceback",
    "optimade.server.logger.LOGGER.error",
    "optimade.server.routers.utils.meta_values",
    "str",
    "type",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "optimade.server.exception_handlers.general_exception_handler": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "Exception",
    "fastapi.Request",
    "optimade.server.exception_handlers.general_exception"
   ]
  },
  "type": "function"
 },
 "optimade.server.exception_handlers.grammar_not_implemented_handler": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "fastapi.Request",
    "getattr",
    "lark.exceptions.VisitError",
    "optimade.models.OptimadeError",
    "optimade.server.exception_handlers.general_exception",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.exception_handlers.http_exception_handler": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "fastapi.Request",
    "fastapi.exceptions.StarletteHTTPException",
    "optimade.server.exception_handlers.general_exception"
   ]
  },
  "type": "function"
 },
 "optimade.server.exception_handlers.jsonable_encoder": {
  "data": {
   "shadows": "fastapi.encoders.jsonable_encoder"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.meta_values": {
  "data": {
   "shadows": "optimade.server.routers.utils.meta_values"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.not_implemented_handler": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "NotImplementedError",
    "fastapi.Request",
    "optimade.models.OptimadeError",
    "optimade.server.exception_handlers.general_exception",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.exception_handlers.request_validation_exception_handler": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "fastapi.Request",
    "fastapi.exceptions.RequestValidationError",
    "optimade.server.exception_handlers.general_exception"
   ]
  },
  "type": "function"
 },
 "optimade.server.exception_handlers.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "optimade.server.exception_handlers.validation_exception_handler": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "fastapi.Request",
    "list",
    "optimade.models.ErrorSource",
    "optimade.models.OptimadeError",
    "optimade.server.exception_handlers.general_exception",
    "pydantic.ValidationError",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.exceptions": {
  "data": {},
  "type": "module"
 },
 "optimade.server.exceptions.BadRequest": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "fastapi.HTTPException",
    "optimade.server.exceptions.StrReprMixin"
   ]
  },
  "type": "class"
 },
 "optimade.server.exceptions.BadRequest.__init__": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "dict",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "optimade.server.exceptions.Forbidden": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "fastapi.HTTPException",
    "optimade.server.exceptions.StrReprMixin"
   ]
  },
  "type": "class"
 },
 "optimade.server.exceptions.Forbidden.__init__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "dict",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "optimade.server.exceptions.HTTPException": {
  "data": {
   "shadows": "fastapi.HTTPException"
  },
  "type": "import"
 },
 "optimade.server.exceptions.StrReprMixin": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "fastapi.HTTPException"
   ]
  },
  "type": "class"
 },
 "optimade.server.exceptions.StrReprMixin.__str__": {
  "data": {
   "lineno": 16
  },
  "type": "function"
 },
 "optimade.server.exceptions.VersionNotSupported": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "fastapi.HTTPException",
    "optimade.server.exceptions.StrReprMixin"
   ]
  },
  "type": "class"
 },
 "optimade.server.exceptions.VersionNotSupported.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "dict",
    "int",
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "optimade.server.exceptions.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "optimade.server.logger": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "OSError",
    "optimade.server.config.CONFIG.debug",
    "optimade.server.config.CONFIG.log_dir",
    "optimade.server.config.CONFIG.log_level.value.upper",
    "optimade.server.logger.CONSOLE_FORMATTER",
    "optimade.server.logger.CONSOLE_HANDLER",
    "optimade.server.logger.FILE_FORMATTER",
    "optimade.server.logger.FILE_HANDLER",
    "optimade.server.logger.LOGGER",
    "optimade.server.logger.LOGS_DIR",
    "optimade.server.logger.logging",
    "optimade.server.logger.os",
    "optimade.server.logger.sys",
    "pathlib.Path",
    "uvicorn.logging.DefaultFormatter"
   ]
  },
  "type": "module"
 },
 "optimade.server.logger.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.logger.CONSOLE_FORMATTER": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "optimade.server.logger.CONSOLE_HANDLER": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "optimade.server.logger.DefaultFormatter": {
  "data": {
   "shadows": "uvicorn.logging.DefaultFormatter"
  },
  "type": "import"
 },
 "optimade.server.logger.FILE_FORMATTER": {
  "data": {
   "lineno": 67
  },
  "type": "constant"
 },
 "optimade.server.logger.FILE_HANDLER": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "optimade.server.logger.LOGGER": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "optimade.server.logger.LOGS_DIR": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "optimade.server.logger.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "optimade.server.logger.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "optimade.server.logger.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "optimade.server.logger.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "optimade.server.main": {
  "data": {
   "symbols_in_volume": [
    "fastapi.FastAPI",
    "fastapi.middleware.cors.CORSMiddleware",
    "optimade.__api_version__",
    "optimade.__version__",
    "optimade.server.config.CONFIG.config_file",
    "optimade.server.config.CONFIG.debug",
    "optimade.server.config.CONFIG.use_real_mongo",
    "optimade.server.exception_handlers.OPTIMADE_EXCEPTIONS",
    "optimade.server.logger.LOGGER.info",
    "optimade.server.logger.LOGGER.warn",
    "optimade.server.main.add_major_version_base_url",
    "optimade.server.main.add_optional_versioned_base_urls",
    "optimade.server.main.app",
    "optimade.server.main.config_warnings",
    "optimade.server.main.load_entries",
    "optimade.server.main.warnings",
    "optimade.server.middleware.OPTIMADE_MIDDLEWARE",
    "optimade.server.routers.ENTRY_COLLECTIONS.items",
    "optimade.server.routers.info",
    "optimade.server.routers.landing",
    "optimade.server.routers.links",
    "optimade.server.routers.references",
    "optimade.server.routers.structures",
    "optimade.server.routers.utils.BASE_URL_PREFIXES",
    "optimade.server.routers.versions"
   ]
  },
  "type": "module"
 },
 "optimade.server.main.BASE_URL_PREFIXES": {
  "data": {
   "shadows": "optimade.server.routers.utils.BASE_URL_PREFIXES"
  },
  "type": "import"
 },
 "optimade.server.main.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.main.CORSMiddleware": {
  "data": {
   "shadows": "fastapi.middleware.cors.CORSMiddleware"
  },
  "type": "import"
 },
 "optimade.server.main.ENTRY_COLLECTIONS": {
  "data": {
   "shadows": "optimade.server.routers.ENTRY_COLLECTIONS"
  },
  "type": "import"
 },
 "optimade.server.main.FastAPI": {
  "data": {
   "shadows": "fastapi.FastAPI"
  },
  "type": "import"
 },
 "optimade.server.main.LOGGER": {
  "data": {
   "shadows": "optimade.server.logger.LOGGER"
  },
  "type": "import"
 },
 "optimade.server.main.MongoCollection": {
  "data": {
   "shadows": "optimade.server.entry_collections.MongoCollection"
  },
  "type": "import"
 },
 "optimade.server.main.OPTIMADE_EXCEPTIONS": {
  "data": {
   "shadows": "optimade.server.exception_handlers.OPTIMADE_EXCEPTIONS"
  },
  "type": "import"
 },
 "optimade.server.main.OPTIMADE_MIDDLEWARE": {
  "data": {
   "shadows": "optimade.server.middleware.OPTIMADE_MIDDLEWARE"
  },
  "type": "import"
 },
 "optimade.server.main.ObjectId": {
  "data": {
   "shadows": "bson.objectid.ObjectId"
  },
  "type": "import"
 },
 "optimade.server.main.__api_version__": {
  "data": {
   "shadows": "optimade.__api_version__"
  },
  "type": "import"
 },
 "optimade.server.main.__version__": {
  "data": {
   "shadows": "optimade.__version__"
  },
  "type": "import"
 },
 "optimade.server.main.add_major_version_base_url": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "fastapi.FastAPI",
    "optimade.server.main.app",
    "optimade.server.routers.info",
    "optimade.server.routers.landing",
    "optimade.server.routers.links",
    "optimade.server.routers.references",
    "optimade.server.routers.structures",
    "optimade.server.routers.utils.BASE_URL_PREFIXES"
   ]
  },
  "type": "function"
 },
 "optimade.server.main.add_optional_versioned_base_urls": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "fastapi.FastAPI",
    "optimade.server.main.app",
    "optimade.server.routers.info",
    "optimade.server.routers.landing",
    "optimade.server.routers.links",
    "optimade.server.routers.references",
    "optimade.server.routers.structures",
    "optimade.server.routers.utils.BASE_URL_PREFIXES"
   ]
  },
  "type": "function"
 },
 "optimade.server.main.app": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "optimade.server.main.bson.json_util": {
  "data": {
   "shadows": "bson.json_util"
  },
  "type": "import"
 },
 "optimade.server.main.config_warnings": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "optimade.server.main.data": {
  "data": {
   "shadows": "optimade.server.data"
  },
  "type": "import"
 },
 "optimade.server.main.get_providers": {
  "data": {
   "shadows": "optimade.server.routers.utils.get_providers"
  },
  "type": "import"
 },
 "optimade.server.main.info": {
  "data": {
   "shadows": "optimade.server.routers.info"
  },
  "type": "import"
 },
 "optimade.server.main.landing": {
  "data": {
   "shadows": "optimade.server.routers.landing"
  },
  "type": "import"
 },
 "optimade.server.main.links": {
  "data": {
   "shadows": "optimade.server.routers.links"
  },
  "type": "import"
 },
 "optimade.server.main.load_entries": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "bson.objectid.ObjectId",
    "getattr",
    "optimade.server.data",
    "optimade.server.entry_collections.MongoCollection",
    "optimade.server.logger.LOGGER.debug",
    "optimade.server.routers.utils.get_providers",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.main.references": {
  "data": {
   "shadows": "optimade.server.routers.references"
  },
  "type": "import"
 },
 "optimade.server.main.structures": {
  "data": {
   "shadows": "optimade.server.routers.structures"
  },
  "type": "import"
 },
 "optimade.server.main.versions": {
  "data": {
   "shadows": "optimade.server.routers.versions"
  },
  "type": "import"
 },
 "optimade.server.main.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "optimade.server.main_index": {
  "data": {
   "symbols_in_volume": [
    "bson.objectid.ObjectId",
    "fastapi.FastAPI",
    "fastapi.middleware.cors.CORSMiddleware",
    "open",
    "optimade.__api_version__",
    "optimade.__version__",
    "optimade.server.config.CONFIG.config_file",
    "optimade.server.config.CONFIG.debug",
    "optimade.server.config.CONFIG.index_links_path",
    "optimade.server.config.CONFIG.index_links_path.exists",
    "optimade.server.config.CONFIG.use_real_mongo",
    "optimade.server.exception_handlers.OPTIMADE_EXCEPTIONS",
    "optimade.server.logger.LOGGER.debug",
    "optimade.server.logger.LOGGER.info",
    "optimade.server.logger.LOGGER.warn",
    "optimade.server.main_index.add_major_version_base_url",
    "optimade.server.main_index.add_optional_versioned_base_urls",
    "optimade.server.main_index.app",
    "optimade.server.main_index.config_warnings",
    "optimade.server.main_index.data",
    "optimade.server.main_index.json",
    "optimade.server.main_index.processed",
    "optimade.server.main_index.providers",
    "optimade.server.main_index.warnings",
    "optimade.server.middleware.OPTIMADE_MIDDLEWARE",
    "optimade.server.routers.index_info",
    "optimade.server.routers.links",
    "optimade.server.routers.links.links_coll.collection.insert_many",
    "optimade.server.routers.links.links_coll.collection.replace_one",
    "optimade.server.routers.utils.BASE_URL_PREFIXES",
    "optimade.server.routers.utils.get_providers",
    "optimade.server.routers.utils.mongo_id_for_database",
    "optimade.server.routers.versions"
   ]
  },
  "type": "module"
 },
 "optimade.server.main_index.BASE_URL_PREFIXES": {
  "data": {
   "shadows": "optimade.server.routers.utils.BASE_URL_PREFIXES"
  },
  "type": "import"
 },
 "optimade.server.main_index.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.main_index.CORSMiddleware": {
  "data": {
   "shadows": "fastapi.middleware.cors.CORSMiddleware"
  },
  "type": "import"
 },
 "optimade.server.main_index.FastAPI": {
  "data": {
   "shadows": "fastapi.FastAPI"
  },
  "type": "import"
 },
 "optimade.server.main_index.LOGGER": {
  "data": {
   "shadows": "optimade.server.logger.LOGGER"
  },
  "type": "import"
 },
 "optimade.server.main_index.OPTIMADE_EXCEPTIONS": {
  "data": {
   "shadows": "optimade.server.exception_handlers.OPTIMADE_EXCEPTIONS"
  },
  "type": "import"
 },
 "optimade.server.main_index.OPTIMADE_MIDDLEWARE": {
  "data": {
   "shadows": "optimade.server.middleware.OPTIMADE_MIDDLEWARE"
  },
  "type": "import"
 },
 "optimade.server.main_index.ObjectId": {
  "data": {
   "shadows": "bson.objectid.ObjectId"
  },
  "type": "import"
 },
 "optimade.server.main_index.__api_version__": {
  "data": {
   "shadows": "optimade.__api_version__"
  },
  "type": "import"
 },
 "optimade.server.main_index.__version__": {
  "data": {
   "shadows": "optimade.__version__"
  },
  "type": "import"
 },
 "optimade.server.main_index.add_major_version_base_url": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "fastapi.FastAPI",
    "optimade.server.main_index.app",
    "optimade.server.routers.index_info",
    "optimade.server.routers.links",
    "optimade.server.routers.utils.BASE_URL_PREFIXES"
   ]
  },
  "type": "function"
 },
 "optimade.server.main_index.add_optional_versioned_base_urls": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "fastapi.FastAPI",
    "optimade.server.main_index.app",
    "optimade.server.routers.index_info.router",
    "optimade.server.routers.links.router",
    "optimade.server.routers.utils.BASE_URL_PREFIXES"
   ]
  },
  "type": "function"
 },
 "optimade.server.main_index.app": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "optimade.server.main_index.bson.json_util": {
  "data": {
   "shadows": "bson.json_util"
  },
  "type": "import"
 },
 "optimade.server.main_index.config_warnings": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "optimade.server.main_index.data": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "optimade.server.main_index.get_providers": {
  "data": {
   "shadows": "optimade.server.routers.utils.get_providers"
  },
  "type": "import"
 },
 "optimade.server.main_index.index_info": {
  "data": {
   "shadows": "optimade.server.routers.index_info"
  },
  "type": "import"
 },
 "optimade.server.main_index.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "optimade.server.main_index.links": {
  "data": {
   "shadows": "optimade.server.routers.links"
  },
  "type": "import"
 },
 "optimade.server.main_index.links_coll": {
  "data": {
   "shadows": "optimade.server.routers.links.links_coll"
  },
  "type": "import"
 },
 "optimade.server.main_index.mongo_id_for_database": {
  "data": {
   "shadows": "optimade.server.routers.utils.mongo_id_for_database"
  },
  "type": "import"
 },
 "optimade.server.main_index.processed": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "optimade.server.main_index.providers": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "optimade.server.main_index.versions": {
  "data": {
   "shadows": "optimade.server.routers.versions"
  },
  "type": "import"
 },
 "optimade.server.main_index.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "optimade.server.mappers": {
  "data": {},
  "type": "module"
 },
 "optimade.server.mappers.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "optimade.server.mappers.entries": {
  "data": {},
  "type": "module"
 },
 "optimade.server.mappers.entries.BaseResourceMapper": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "set",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "optimade.server.mappers.entries.BaseResourceMapper.alias_for": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.mappers.entries.BaseResourceMapper.alias_of": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "classmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.mappers.entries.BaseResourceMapper.all_aliases": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "classmethod",
    "optimade.server.config.CONFIG.aliases.get",
    "optimade.server.config.CONFIG.provider.prefix",
    "optimade.server.config.CONFIG.provider_fields.get",
    "str",
    "tuple",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.server.mappers.entries.BaseResourceMapper.all_length_aliases": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "classmethod",
    "optimade.server.config.CONFIG.length_aliases.get",
    "str",
    "tuple",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.server.mappers.entries.BaseResourceMapper.get_required_fields": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "classmethod",
    "set"
   ]
  },
  "type": "function"
 },
 "optimade.server.mappers.entries.BaseResourceMapper.length_alias_for": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "optimade.server.mappers.entries.BaseResourceMapper.map_back": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "Exception",
    "classmethod",
    "dict",
    "list"
   ]
  },
  "type": "function"
 },
 "optimade.server.mappers.entries.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.mappers.entries.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "optimade.server.mappers.entries.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "optimade.server.mappers.entries.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "optimade.server.mappers.links": {
  "data": {},
  "type": "module"
 },
 "optimade.server.mappers.links.BaseResourceMapper": {
  "data": {
   "shadows": "optimade.server.mappers.entries.BaseResourceMapper"
  },
  "type": "import"
 },
 "optimade.server.mappers.links.LinksMapper": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "optimade.server.mappers.entries.BaseResourceMapper"
   ]
  },
  "type": "class"
 },
 "optimade.server.mappers.links.LinksMapper.map_back": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "classmethod",
    "dict",
    "super"
   ]
  },
  "type": "function"
 },
 "optimade.server.mappers.links.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "optimade.server.mappers.references": {
  "data": {},
  "type": "module"
 },
 "optimade.server.mappers.references.BaseResourceMapper": {
  "data": {
   "shadows": "optimade.server.mappers.entries.BaseResourceMapper"
  },
  "type": "import"
 },
 "optimade.server.mappers.references.ReferenceMapper": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "optimade.server.mappers.entries.BaseResourceMapper"
   ]
  },
  "type": "class"
 },
 "optimade.server.mappers.references.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "optimade.server.mappers.structures": {
  "data": {},
  "type": "module"
 },
 "optimade.server.mappers.structures.BaseResourceMapper": {
  "data": {
   "shadows": "optimade.server.mappers.entries.BaseResourceMapper"
  },
  "type": "import"
 },
 "optimade.server.mappers.structures.StructureMapper": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "optimade.server.mappers.entries.BaseResourceMapper"
   ]
  },
  "type": "class"
 },
 "optimade.server.mappers.structures.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "optimade.server.middleware": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "optimade.server.middleware.AddWarnings",
    "optimade.server.middleware.CheckWronglyVersionedBaseUrls",
    "optimade.server.middleware.EnsureQueryParamIntegrity",
    "optimade.server.middleware.HandleApiHint",
    "starlette.middleware.base.BaseHTTPMiddleware",
    "typing.Tuple"
   ]
  },
  "type": "module"
 },
 "optimade.server.middleware.AddWarnings": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "bytes",
    "call_next",
    "isinstance",
    "len",
    "optimade.server.middleware.warnings",
    "optimade.server.warnings.OptimadeWarning",
    "simplejson.dumps",
    "simplejson.loads",
    "starlette.middleware.base.BaseHTTPMiddleware",
    "starlette.requests.Request",
    "starlette.responses.StreamingResponse",
    "str"
   ]
  },
  "type": "class"
 },
 "optimade.server.middleware.AddWarnings.chunk_it_up": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "int",
    "len",
    "range",
    "staticmethod",
    "str",
    "typing.Generator"
   ]
  },
  "type": "function"
 },
 "optimade.server.middleware.AddWarnings.showwarning": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "Warning",
    "int",
    "isinstance",
    "optimade.models.Warnings",
    "optimade.server.config.CONFIG.debug",
    "optimade.server.middleware.linecache",
    "optimade.server.middleware.warnings",
    "optimade.server.warnings.OptimadeWarning",
    "str",
    "typing.IO",
    "typing.Optional",
    "typing.Type"
   ]
  },
  "type": "function"
 },
 "optimade.server.middleware.BASE_URL_PREFIXES": {
  "data": {
   "shadows": "optimade.server.routers.utils.BASE_URL_PREFIXES"
  },
  "type": "import"
 },
 "optimade.server.middleware.BadRequest": {
  "data": {
   "shadows": "optimade.server.exceptions.BadRequest"
  },
  "type": "import"
 },
 "optimade.server.middleware.BaseHTTPMiddleware": {
  "data": {
   "shadows": "starlette.middleware.base.BaseHTTPMiddleware"
  },
  "type": "import"
 },
 "optimade.server.middleware.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.middleware.CheckWronglyVersionedBaseUrls": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "call_next",
    "starlette.middleware.base.BaseHTTPMiddleware",
    "starlette.requests.Request"
   ]
  },
  "type": "class"
 },
 "optimade.server.middleware.CheckWronglyVersionedBaseUrls.check_url": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "optimade.server.exceptions.VersionNotSupported",
    "optimade.server.middleware.re",
    "optimade.server.routers.utils.BASE_URL_PREFIXES.values",
    "optimade.server.routers.utils.get_base_url",
    "starlette.datastructures.URL",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "optimade.server.middleware.EnsureQueryParamIntegrity": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "call_next",
    "starlette.middleware.base.BaseHTTPMiddleware",
    "starlette.requests.Request",
    "str"
   ]
  },
  "type": "class"
 },
 "optimade.server.middleware.EnsureQueryParamIntegrity.check_url": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "optimade.server.exceptions.BadRequest",
    "set",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.middleware.FieldValueNotRecognized": {
  "data": {
   "shadows": "optimade.server.warnings.FieldValueNotRecognized"
  },
  "type": "import"
 },
 "optimade.server.middleware.Generator": {
  "data": {
   "shadows": "typing.Generator"
  },
  "type": "import"
 },
 "optimade.server.middleware.HandleApiHint": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "call_next",
    "len",
    "optimade.server.middleware.warnings",
    "optimade.server.routers.utils.get_base_url",
    "optimade.server.warnings.QueryParamNotUsed",
    "starlette.middleware.base.BaseHTTPMiddleware",
    "starlette.requests.Request",
    "starlette.responses.RedirectResponse",
    "str"
   ]
  },
  "type": "class"
 },
 "optimade.server.middleware.HandleApiHint.handle_api_hint": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "int",
    "len",
    "optimade.server.exceptions.VersionNotSupported",
    "optimade.server.middleware.re",
    "optimade.server.middleware.warnings",
    "optimade.server.routers.utils.BASE_URL_PREFIXES",
    "optimade.server.routers.utils.BASE_URL_PREFIXES.values",
    "optimade.server.warnings.FieldValueNotRecognized",
    "optimade.server.warnings.TooManyValues",
    "staticmethod",
    "str",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.middleware.HandleApiHint.is_versioned_base_url": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "bool",
    "len",
    "optimade.server.middleware.re",
    "optimade.server.routers.utils.get_base_url",
    "staticmethod",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.middleware.IO": {
  "data": {
   "shadows": "typing.IO"
  },
  "type": "import"
 },
 "optimade.server.middleware.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.server.middleware.OptimadeWarning": {
  "data": {
   "shadows": "optimade.server.warnings.OptimadeWarning"
  },
  "type": "import"
 },
 "optimade.server.middleware.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "optimade.server.middleware.QueryParamNotUsed": {
  "data": {
   "shadows": "optimade.server.warnings.QueryParamNotUsed"
  },
  "type": "import"
 },
 "optimade.server.middleware.RedirectResponse": {
  "data": {
   "shadows": "starlette.responses.RedirectResponse"
  },
  "type": "import"
 },
 "optimade.server.middleware.Request": {
  "data": {
   "shadows": "starlette.requests.Request"
  },
  "type": "import"
 },
 "optimade.server.middleware.StarletteURL": {
  "data": {
   "shadows": "starlette.datastructures.URL"
  },
  "type": "import"
 },
 "optimade.server.middleware.StreamingResponse": {
  "data": {
   "shadows": "starlette.responses.StreamingResponse"
  },
  "type": "import"
 },
 "optimade.server.middleware.TooManyValues": {
  "data": {
   "shadows": "optimade.server.warnings.TooManyValues"
  },
  "type": "import"
 },
 "optimade.server.middleware.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "optimade.server.middleware.Type": {
  "data": {
   "shadows": "typing.Type"
  },
  "type": "import"
 },
 "optimade.server.middleware.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.server.middleware.VersionNotSupported": {
  "data": {
   "shadows": "optimade.server.exceptions.VersionNotSupported"
  },
  "type": "import"
 },
 "optimade.server.middleware.Warnings": {
  "data": {
   "shadows": "optimade.models.Warnings"
  },
  "type": "import"
 },
 "optimade.server.middleware.get_base_url": {
  "data": {
   "shadows": "optimade.server.routers.utils.get_base_url"
  },
  "type": "import"
 },
 "optimade.server.middleware.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "optimade.server.middleware.linecache": {
  "data": {
   "shadows": "linecache"
  },
  "type": "import"
 },
 "optimade.server.middleware.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "optimade.server.middleware.urllib.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "optimade.server.middleware.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "optimade.server.query_params": {
  "data": {},
  "type": "module"
 },
 "optimade.server.query_params.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.query_params.EmailStr": {
  "data": {
   "shadows": "pydantic.EmailStr"
  },
  "type": "import"
 },
 "optimade.server.query_params.EntryListingQueryParams": {
  "data": {
   "lineno": 7
  },
  "type": "class"
 },
 "optimade.server.query_params.EntryListingQueryParams.__init__": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "fastapi.Query",
    "filter",
    "int",
    "optimade.server.config.CONFIG.page_limit",
    "pydantic.EmailStr",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.query_params.Query": {
  "data": {
   "shadows": "fastapi.Query"
  },
  "type": "import"
 },
 "optimade.server.query_params.SingleEntryQueryParams": {
  "data": {
   "lineno": 174
  },
  "type": "class"
 },
 "optimade.server.query_params.SingleEntryQueryParams.__init__": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "fastapi.Query",
    "pydantic.EmailStr",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers": {
  "data": {},
  "type": "module"
 },
 "optimade.server.routers.ENTRY_COLLECTIONS": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "optimade.server.routers.index_info": {
  "data": {
   "symbols_in_volume": [
    "fastapi.APIRouter"
   ]
  },
  "type": "module"
 },
 "optimade.server.routers.index_info.APIRouter": {
  "data": {
   "shadows": "fastapi.APIRouter"
  },
  "type": "import"
 },
 "optimade.server.routers.index_info.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.routers.index_info.ErrorResponse": {
  "data": {
   "shadows": "optimade.models.ErrorResponse"
  },
  "type": "import"
 },
 "optimade.server.routers.index_info.IndexInfoAttributes": {
  "data": {
   "shadows": "optimade.models.IndexInfoAttributes"
  },
  "type": "import"
 },
 "optimade.server.routers.index_info.IndexInfoResource": {
  "data": {
   "shadows": "optimade.models.IndexInfoResource"
  },
  "type": "import"
 },
 "optimade.server.routers.index_info.IndexInfoResponse": {
  "data": {
   "shadows": "optimade.models.IndexInfoResponse"
  },
  "type": "import"
 },
 "optimade.server.routers.index_info.IndexRelationship": {
  "data": {
   "shadows": "optimade.models.IndexRelationship"
  },
  "type": "import"
 },
 "optimade.server.routers.index_info.RelatedLinksResource": {
  "data": {
   "shadows": "optimade.models.RelatedLinksResource"
  },
  "type": "import"
 },
 "optimade.server.routers.index_info.Request": {
  "data": {
   "shadows": "fastapi.Request"
  },
  "type": "import"
 },
 "optimade.server.routers.index_info.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.server.routers.index_info.__api_version__": {
  "data": {
   "shadows": "optimade.__api_version__"
  },
  "type": "import"
 },
 "optimade.server.routers.index_info.get_base_url": {
  "data": {
   "shadows": "optimade.server.routers.utils.get_base_url"
  },
  "type": "import"
 },
 "optimade.server.routers.index_info.get_info": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "fastapi.Request",
    "optimade.__api_version__",
    "optimade.__api_version__.split",
    "optimade.models.ErrorResponse",
    "optimade.models.IndexInfoAttributes",
    "optimade.models.IndexInfoResource",
    "optimade.models.IndexInfoResource.schema",
    "optimade.models.IndexInfoResponse",
    "optimade.models.IndexRelationship",
    "optimade.models.RelatedLinksResource.schema",
    "optimade.server.config.CONFIG.default_db",
    "optimade.server.routers.index_info.router",
    "optimade.server.routers.utils.get_base_url",
    "optimade.server.routers.utils.meta_values",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.index_info.meta_values": {
  "data": {
   "shadows": "optimade.server.routers.utils.meta_values"
  },
  "type": "import"
 },
 "optimade.server.routers.index_info.router": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "optimade.server.routers.info": {
  "data": {
   "symbols_in_volume": [
    "fastapi.APIRouter"
   ]
  },
  "type": "module"
 },
 "optimade.server.routers.info.APIRouter": {
  "data": {
   "shadows": "fastapi.APIRouter"
  },
  "type": "import"
 },
 "optimade.server.routers.info.BaseInfoAttributes": {
  "data": {
   "shadows": "optimade.models.BaseInfoAttributes"
  },
  "type": "import"
 },
 "optimade.server.routers.info.BaseInfoResource": {
  "data": {
   "shadows": "optimade.models.BaseInfoResource"
  },
  "type": "import"
 },
 "optimade.server.routers.info.ENTRY_INFO_SCHEMAS": {
  "data": {
   "shadows": "optimade.server.schemas.ENTRY_INFO_SCHEMAS"
  },
  "type": "import"
 },
 "optimade.server.routers.info.EntryInfoResource": {
  "data": {
   "shadows": "optimade.models.EntryInfoResource"
  },
  "type": "import"
 },
 "optimade.server.routers.info.EntryInfoResponse": {
  "data": {
   "shadows": "optimade.models.EntryInfoResponse"
  },
  "type": "import"
 },
 "optimade.server.routers.info.ErrorResponse": {
  "data": {
   "shadows": "optimade.models.ErrorResponse"
  },
  "type": "import"
 },
 "optimade.server.routers.info.InfoResponse": {
  "data": {
   "shadows": "optimade.models.InfoResponse"
  },
  "type": "import"
 },
 "optimade.server.routers.info.Request": {
  "data": {
   "shadows": "fastapi.Request"
  },
  "type": "import"
 },
 "optimade.server.routers.info.StarletteHTTPException": {
  "data": {
   "shadows": "fastapi.exceptions.StarletteHTTPException"
  },
  "type": "import"
 },
 "optimade.server.routers.info.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.server.routers.info.__api_version__": {
  "data": {
   "shadows": "optimade.__api_version__"
  },
  "type": "import"
 },
 "optimade.server.routers.info.get_base_url": {
  "data": {
   "shadows": "optimade.server.routers.utils.get_base_url"
  },
  "type": "import"
 },
 "optimade.server.routers.info.get_entry_info": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "fastapi.Request",
    "fastapi.exceptions.StarletteHTTPException",
    "list",
    "optimade.models.EntryInfoResource",
    "optimade.models.EntryInfoResponse",
    "optimade.models.ErrorResponse",
    "optimade.server.routers.info.router",
    "optimade.server.routers.utils.meta_values",
    "optimade.server.schemas.ENTRY_INFO_SCHEMAS",
    "optimade.server.schemas.ENTRY_INFO_SCHEMAS.keys",
    "optimade.server.schemas.retrieve_queryable_properties",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.info.get_info": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "fastapi.Request",
    "list",
    "optimade.__api_version__",
    "optimade.__api_version__.split",
    "optimade.models.BaseInfoAttributes",
    "optimade.models.BaseInfoResource",
    "optimade.models.BaseInfoResource.schema",
    "optimade.models.ErrorResponse",
    "optimade.models.InfoResponse",
    "optimade.server.routers.info.router",
    "optimade.server.routers.utils.get_base_url",
    "optimade.server.routers.utils.meta_values",
    "optimade.server.schemas.ENTRY_INFO_SCHEMAS.keys",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.info.meta_values": {
  "data": {
   "shadows": "optimade.server.routers.utils.meta_values"
  },
  "type": "import"
 },
 "optimade.server.routers.info.retrieve_queryable_properties": {
  "data": {
   "shadows": "optimade.server.schemas.retrieve_queryable_properties"
  },
  "type": "import"
 },
 "optimade.server.routers.info.router": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "optimade.server.routers.landing": {
  "data": {
   "symbols_in_volume": [
    "fastapi.Request",
    "fastapi.templating.Jinja2Templates",
    "list",
    "optimade.__api_version__",
    "optimade.__api_version__.split",
    "optimade.server.config.CONFIG.index_base_url",
    "optimade.server.routers.ENTRY_COLLECTIONS.keys",
    "optimade.server.routers.landing.TEMPLATES",
    "optimade.server.routers.landing.context",
    "optimade.server.routers.landing.major_version",
    "optimade.server.routers.landing.meta",
    "optimade.server.routers.landing.template_dir",
    "optimade.server.routers.landing.versioned_url",
    "optimade.server.routers.utils.get_base_url",
    "optimade.server.routers.utils.meta_values",
    "pathlib.Path",
    "starlette.routing.Route",
    "starlette.routing.Router"
   ]
  },
  "type": "module"
 },
 "optimade.server.routers.landing.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.routers.landing.ENTRY_COLLECTIONS": {
  "data": {
   "shadows": "optimade.server.routers.ENTRY_COLLECTIONS"
  },
  "type": "import"
 },
 "optimade.server.routers.landing.Jinja2Templates": {
  "data": {
   "shadows": "fastapi.templating.Jinja2Templates"
  },
  "type": "import"
 },
 "optimade.server.routers.landing.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "optimade.server.routers.landing.Request": {
  "data": {
   "shadows": "fastapi.Request"
  },
  "type": "import"
 },
 "optimade.server.routers.landing.Route": {
  "data": {
   "shadows": "starlette.routing.Route"
  },
  "type": "import"
 },
 "optimade.server.routers.landing.Router": {
  "data": {
   "shadows": "starlette.routing.Router"
  },
  "type": "import"
 },
 "optimade.server.routers.landing.TEMPLATES": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "optimade.server.routers.landing.__api_version__": {
  "data": {
   "shadows": "optimade.__api_version__"
  },
  "type": "import"
 },
 "optimade.server.routers.landing.context": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "optimade.server.routers.landing.get_base_url": {
  "data": {
   "shadows": "optimade.server.routers.utils.get_base_url"
  },
  "type": "import"
 },
 "optimade.server.routers.landing.major_version": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "optimade.server.routers.landing.meta": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "optimade.server.routers.landing.meta_values": {
  "data": {
   "shadows": "optimade.server.routers.utils.meta_values"
  },
  "type": "import"
 },
 "optimade.server.routers.landing.router": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "optimade.server.routers.landing.template_dir": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "optimade.server.routers.landing.versioned_url": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "optimade.server.routers.links": {
  "data": {
   "symbols_in_volume": [
    "fastapi.APIRouter",
    "optimade.models.LinksResource",
    "optimade.server.config.CONFIG.links_collection",
    "optimade.server.config.CONFIG.mongo_database",
    "optimade.server.entry_collections.MongoCollection",
    "optimade.server.entry_collections.client",
    "optimade.server.mappers.LinksMapper"
   ]
  },
  "type": "module"
 },
 "optimade.server.routers.links.APIRouter": {
  "data": {
   "shadows": "fastapi.APIRouter"
  },
  "type": "import"
 },
 "optimade.server.routers.links.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.routers.links.Depends": {
  "data": {
   "shadows": "fastapi.Depends"
  },
  "type": "import"
 },
 "optimade.server.routers.links.EntryListingQueryParams": {
  "data": {
   "shadows": "optimade.server.query_params.EntryListingQueryParams"
  },
  "type": "import"
 },
 "optimade.server.routers.links.ErrorResponse": {
  "data": {
   "shadows": "optimade.models.ErrorResponse"
  },
  "type": "import"
 },
 "optimade.server.routers.links.LinksMapper": {
  "data": {
   "shadows": "optimade.server.mappers.LinksMapper"
  },
  "type": "import"
 },
 "optimade.server.routers.links.LinksResource": {
  "data": {
   "shadows": "optimade.models.LinksResource"
  },
  "type": "import"
 },
 "optimade.server.routers.links.LinksResponse": {
  "data": {
   "shadows": "optimade.models.LinksResponse"
  },
  "type": "import"
 },
 "optimade.server.routers.links.MongoCollection": {
  "data": {
   "shadows": "optimade.server.entry_collections.MongoCollection"
  },
  "type": "import"
 },
 "optimade.server.routers.links.Request": {
  "data": {
   "shadows": "fastapi.Request"
  },
  "type": "import"
 },
 "optimade.server.routers.links.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.server.routers.links.client": {
  "data": {
   "shadows": "optimade.server.entry_collections.client"
  },
  "type": "import"
 },
 "optimade.server.routers.links.get_entries": {
  "data": {
   "shadows": "optimade.server.routers.utils.get_entries"
  },
  "type": "import"
 },
 "optimade.server.routers.links.get_links": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "fastapi.Depends",
    "fastapi.Request",
    "optimade.models.ErrorResponse",
    "optimade.models.LinksResponse",
    "optimade.server.query_params.EntryListingQueryParams",
    "optimade.server.routers.links.links_coll",
    "optimade.server.routers.links.router",
    "optimade.server.routers.utils.get_entries",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.links.links_coll": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "optimade.server.routers.links.router": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "optimade.server.routers.references": {
  "data": {
   "symbols_in_volume": [
    "fastapi.APIRouter",
    "optimade.models.ReferenceResource",
    "optimade.server.config.CONFIG.mongo_database",
    "optimade.server.config.CONFIG.references_collection",
    "optimade.server.entry_collections.MongoCollection",
    "optimade.server.entry_collections.client",
    "optimade.server.mappers.ReferenceMapper"
   ]
  },
  "type": "module"
 },
 "optimade.server.routers.references.APIRouter": {
  "data": {
   "shadows": "fastapi.APIRouter"
  },
  "type": "import"
 },
 "optimade.server.routers.references.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.routers.references.Depends": {
  "data": {
   "shadows": "fastapi.Depends"
  },
  "type": "import"
 },
 "optimade.server.routers.references.EntryListingQueryParams": {
  "data": {
   "shadows": "optimade.server.query_params.EntryListingQueryParams"
  },
  "type": "import"
 },
 "optimade.server.routers.references.ErrorResponse": {
  "data": {
   "shadows": "optimade.models.ErrorResponse"
  },
  "type": "import"
 },
 "optimade.server.routers.references.MongoCollection": {
  "data": {
   "shadows": "optimade.server.entry_collections.MongoCollection"
  },
  "type": "import"
 },
 "optimade.server.routers.references.ReferenceMapper": {
  "data": {
   "shadows": "optimade.server.mappers.ReferenceMapper"
  },
  "type": "import"
 },
 "optimade.server.routers.references.ReferenceResource": {
  "data": {
   "shadows": "optimade.models.ReferenceResource"
  },
  "type": "import"
 },
 "optimade.server.routers.references.ReferenceResponseMany": {
  "data": {
   "shadows": "optimade.models.ReferenceResponseMany"
  },
  "type": "import"
 },
 "optimade.server.routers.references.ReferenceResponseOne": {
  "data": {
   "shadows": "optimade.models.ReferenceResponseOne"
  },
  "type": "import"
 },
 "optimade.server.routers.references.Request": {
  "data": {
   "shadows": "fastapi.Request"
  },
  "type": "import"
 },
 "optimade.server.routers.references.SingleEntryQueryParams": {
  "data": {
   "shadows": "optimade.server.query_params.SingleEntryQueryParams"
  },
  "type": "import"
 },
 "optimade.server.routers.references.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.server.routers.references.client": {
  "data": {
   "shadows": "optimade.server.entry_collections.client"
  },
  "type": "import"
 },
 "optimade.server.routers.references.get_entries": {
  "data": {
   "shadows": "optimade.server.routers.utils.get_entries"
  },
  "type": "import"
 },
 "optimade.server.routers.references.get_references": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "fastapi.Depends",
    "fastapi.Request",
    "optimade.models.ErrorResponse",
    "optimade.models.ReferenceResponseMany",
    "optimade.server.query_params.EntryListingQueryParams",
    "optimade.server.routers.references.references_coll",
    "optimade.server.routers.references.router",
    "optimade.server.routers.utils.get_entries",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.references.get_single_entry": {
  "data": {
   "shadows": "optimade.server.routers.utils.get_single_entry"
  },
  "type": "import"
 },
 "optimade.server.routers.references.get_single_reference": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "fastapi.Depends",
    "fastapi.Request",
    "optimade.models.ErrorResponse",
    "optimade.models.ReferenceResponseOne",
    "optimade.server.query_params.SingleEntryQueryParams",
    "optimade.server.routers.references.references_coll",
    "optimade.server.routers.references.router",
    "optimade.server.routers.utils.get_single_entry",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.references.references_coll": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "optimade.server.routers.references.router": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "optimade.server.routers.structures": {
  "data": {
   "symbols_in_volume": [
    "fastapi.APIRouter",
    "optimade.models.StructureResource",
    "optimade.server.config.CONFIG.mongo_database",
    "optimade.server.config.CONFIG.structures_collection",
    "optimade.server.entry_collections.MongoCollection",
    "optimade.server.entry_collections.client",
    "optimade.server.mappers.StructureMapper"
   ]
  },
  "type": "module"
 },
 "optimade.server.routers.structures.APIRouter": {
  "data": {
   "shadows": "fastapi.APIRouter"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.Depends": {
  "data": {
   "shadows": "fastapi.Depends"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.EntryListingQueryParams": {
  "data": {
   "shadows": "optimade.server.query_params.EntryListingQueryParams"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.ErrorResponse": {
  "data": {
   "shadows": "optimade.models.ErrorResponse"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.MongoCollection": {
  "data": {
   "shadows": "optimade.server.entry_collections.MongoCollection"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.Request": {
  "data": {
   "shadows": "fastapi.Request"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.SingleEntryQueryParams": {
  "data": {
   "shadows": "optimade.server.query_params.SingleEntryQueryParams"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.StructureMapper": {
  "data": {
   "shadows": "optimade.server.mappers.StructureMapper"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.StructureResource": {
  "data": {
   "shadows": "optimade.models.StructureResource"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.StructureResponseMany": {
  "data": {
   "shadows": "optimade.models.StructureResponseMany"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.StructureResponseOne": {
  "data": {
   "shadows": "optimade.models.StructureResponseOne"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.client": {
  "data": {
   "shadows": "optimade.server.entry_collections.client"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.get_entries": {
  "data": {
   "shadows": "optimade.server.routers.utils.get_entries"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.get_single_entry": {
  "data": {
   "shadows": "optimade.server.routers.utils.get_single_entry"
  },
  "type": "import"
 },
 "optimade.server.routers.structures.get_single_structure": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "fastapi.Depends",
    "fastapi.Request",
    "optimade.models.ErrorResponse",
    "optimade.models.StructureResponseOne",
    "optimade.server.query_params.SingleEntryQueryParams",
    "optimade.server.routers.structures.router",
    "optimade.server.routers.structures.structures_coll",
    "optimade.server.routers.utils.get_single_entry",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.structures.get_structures": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "fastapi.Depends",
    "fastapi.Request",
    "optimade.models.ErrorResponse",
    "optimade.models.StructureResponseMany",
    "optimade.server.query_params.EntryListingQueryParams",
    "optimade.server.routers.structures.router",
    "optimade.server.routers.structures.structures_coll",
    "optimade.server.routers.utils.get_entries",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.structures.router": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "optimade.server.routers.structures.structures_coll": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "optimade.server.routers.utils": {
  "data": {
   "symbols_in_volume": [
    "optimade.__api_version__.split"
   ]
  },
  "type": "module"
 },
 "optimade.server.routers.utils.BASE_URL_PREFIXES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "optimade.server.routers.utils.BadRequest": {
  "data": {
   "shadows": "optimade.server.exceptions.BadRequest"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.CONFIG": {
  "data": {
   "shadows": "optimade.server.config.CONFIG"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.ENTRY_COLLECTIONS": {
  "data": {
   "shadows": "optimade.server.routers.ENTRY_COLLECTIONS"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.EntryCollection": {
  "data": {
   "shadows": "optimade.server.entry_collections.EntryCollection"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.EntryListingQueryParams": {
  "data": {
   "shadows": "optimade.server.query_params.EntryListingQueryParams"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.EntryResource": {
  "data": {
   "shadows": "optimade.models.EntryResource"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.EntryResponseMany": {
  "data": {
   "shadows": "optimade.models.EntryResponseMany"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.EntryResponseOne": {
  "data": {
   "shadows": "optimade.models.EntryResponseOne"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.HTTPException": {
  "data": {
   "shadows": "fastapi.HTTPException"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.LOGGER": {
  "data": {
   "shadows": "optimade.server.logger.LOGGER"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.ObjectId": {
  "data": {
   "shadows": "bson.objectid.ObjectId"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.Request": {
  "data": {
   "shadows": "fastapi.Request"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.ResponseMeta": {
  "data": {
   "shadows": "optimade.models.ResponseMeta"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.ResponseMetaQuery": {
  "data": {
   "shadows": "optimade.models.ResponseMetaQuery"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.SingleEntryQueryParams": {
  "data": {
   "shadows": "optimade.server.query_params.SingleEntryQueryParams"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.StarletteURL": {
  "data": {
   "shadows": "starlette.datastructures.URL"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.ToplevelLinks": {
  "data": {
   "shadows": "optimade.models.ToplevelLinks"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.__api_version__": {
  "data": {
   "shadows": "optimade.__api_version__"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.get_base_url": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "isinstance",
    "optimade.server.config.CONFIG.base_url",
    "optimade.server.config.CONFIG.base_url.rstrip",
    "optimade.server.routers.utils.urllib",
    "starlette.datastructures.URL",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.utils.get_entries": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "fastapi.Request",
    "getattr",
    "int",
    "len",
    "optimade.models.EntryResponseMany",
    "optimade.models.ToplevelLinks",
    "optimade.server.entry_collections.EntryCollection",
    "optimade.server.query_params.EntryListingQueryParams",
    "optimade.server.routers.ENTRY_COLLECTIONS",
    "optimade.server.routers.utils.get_base_url",
    "optimade.server.routers.utils.get_included_relationships",
    "optimade.server.routers.utils.handle_response_fields",
    "optimade.server.routers.utils.meta_values",
    "optimade.server.routers.utils.urllib",
    "response"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.utils.get_included_relationships": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "collections.defaultdict",
    "dict",
    "isinstance",
    "list",
    "optimade.models.EntryResource",
    "optimade.server.entry_collections.EntryCollection",
    "optimade.server.exceptions.BadRequest",
    "optimade.server.query_params.EntryListingQueryParams",
    "sorted",
    "str",
    "typing.Dict",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.utils.get_providers": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "ImportError",
    "list",
    "optimade.server.data.providers.get",
    "optimade.server.logger.LOGGER.warning",
    "optimade.server.routers.utils.mongo_id_for_database",
    "optimade.server.routers.utils.requests",
    "simplejson.JSONDecodeError"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.utils.get_single_entry": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "fastapi.HTTPException",
    "fastapi.Request",
    "getattr",
    "len",
    "optimade.models.EntryResponseOne",
    "optimade.models.ToplevelLinks",
    "optimade.server.entry_collections.EntryCollection",
    "optimade.server.query_params.SingleEntryQueryParams",
    "optimade.server.routers.ENTRY_COLLECTIONS",
    "optimade.server.routers.utils.get_included_relationships",
    "optimade.server.routers.utils.handle_response_fields",
    "optimade.server.routers.utils.meta_values",
    "response",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.utils.handle_response_fields": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "list",
    "optimade.models.EntryResource",
    "set",
    "typing.List",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.meta_values": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bool",
    "datetime.datetime.now",
    "int",
    "isinstance",
    "optimade.__api_version__",
    "optimade.models.ResponseMeta",
    "optimade.models.ResponseMetaQuery",
    "optimade.server.config.CONFIG.implementation",
    "optimade.server.config.CONFIG.provider",
    "optimade.server.routers.utils.re",
    "optimade.server.routers.utils.urllib",
    "starlette.datastructures.URL",
    "str",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.utils.mongo_id_for_database": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "bson.objectid.ObjectId",
    "len",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.utils.providers": {
  "data": {
   "shadows": "optimade.server.data.providers"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "optimade.server.routers.utils.urllib": {
  "data": {
   "shadows": "urllib"
  },
  "type": "import"
 },
 "optimade.server.routers.versions": {
  "data": {
   "symbols_in_volume": [
    "fastapi.APIRouter"
   ]
  },
  "type": "module"
 },
 "optimade.server.routers.versions.APIRouter": {
  "data": {
   "shadows": "fastapi.APIRouter"
  },
  "type": "import"
 },
 "optimade.server.routers.versions.BASE_URL_PREFIXES": {
  "data": {
   "shadows": "optimade.server.routers.utils.BASE_URL_PREFIXES"
  },
  "type": "import"
 },
 "optimade.server.routers.versions.CsvResponse": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "fastapi.responses.Response"
   ]
  },
  "type": "class"
 },
 "optimade.server.routers.versions.Request": {
  "data": {
   "shadows": "fastapi.Request"
  },
  "type": "import"
 },
 "optimade.server.routers.versions.Response": {
  "data": {
   "shadows": "fastapi.responses.Response"
  },
  "type": "import"
 },
 "optimade.server.routers.versions.get_versions": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "fastapi.Request",
    "optimade.server.routers.utils.BASE_URL_PREFIXES.replace",
    "optimade.server.routers.versions.CsvResponse",
    "optimade.server.routers.versions.router"
   ]
  },
  "type": "function"
 },
 "optimade.server.routers.versions.router": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "optimade.server.schemas": {
  "data": {
   "symbols_in_volume": [
    "optimade.models.ReferenceResource.schema",
    "optimade.models.StructureResource.schema"
   ]
  },
  "type": "module"
 },
 "optimade.server.schemas.DataType": {
  "data": {
   "shadows": "optimade.models.DataType"
  },
  "type": "import"
 },
 "optimade.server.schemas.ENTRY_INFO_SCHEMAS": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "optimade.server.schemas.ReferenceResource": {
  "data": {
   "shadows": "optimade.models.ReferenceResource"
  },
  "type": "import"
 },
 "optimade.server.schemas.StructureResource": {
  "data": {
   "shadows": "optimade.models.StructureResource"
  },
  "type": "import"
 },
 "optimade.server.schemas.retrieve_queryable_properties": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "dict",
    "list",
    "optimade.models.DataType.from_json_type"
   ]
  },
  "type": "function"
 },
 "optimade.server.warnings": {
  "data": {},
  "type": "module"
 },
 "optimade.server.warnings.FieldValueNotRecognized": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "optimade.server.warnings.OptimadeWarning"
   ]
  },
  "type": "class"
 },
 "optimade.server.warnings.OptimadeWarning": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "Warning"
   ]
  },
  "type": "class"
 },
 "optimade.server.warnings.OptimadeWarning.__init__": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "str",
    "super"
   ]
  },
  "type": "function"
 },
 "optimade.server.warnings.OptimadeWarning.__repr__": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.warnings.OptimadeWarning.__str__": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.server.warnings.QueryParamNotUsed": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "optimade.server.warnings.OptimadeWarning"
   ]
  },
  "type": "class"
 },
 "optimade.server.warnings.TooManyValues": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "optimade.server.warnings.OptimadeWarning"
   ]
  },
  "type": "class"
 },
 "optimade.validator": {
  "data": {},
  "type": "module"
 },
 "optimade.validator.__all__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "optimade.validator.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "optimade.validator.config": {
  "data": {
   "symbols_in_volume": [
    "optimade.models.DataType.FLOAT",
    "optimade.models.DataType.INTEGER",
    "optimade.models.DataType.LIST",
    "optimade.models.DataType.STRING",
    "optimade.models.DataType.TIMESTAMP",
    "optimade.models.IndexInfoResponse",
    "optimade.models.InfoResponse",
    "optimade.server.schemas.ENTRY_INFO_SCHEMAS",
    "optimade.server.schemas.retrieve_queryable_properties",
    "optimade.validator.config.ValidatorConfig",
    "optimade.validator.config.exclusive_ops",
    "optimade.validator.utils.ValidatorLinksResponse",
    "optimade.validator.utils.ValidatorReferenceResponseMany",
    "optimade.validator.utils.ValidatorReferenceResponseOne",
    "optimade.validator.utils.ValidatorStructureResponseMany",
    "optimade.validator.utils.ValidatorStructureResponseOne"
   ]
  },
  "type": "module"
 },
 "optimade.validator.config.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "optimade.validator.config.BaseResourceMapper": {
  "data": {
   "shadows": "optimade.server.mappers.BaseResourceMapper"
  },
  "type": "import"
 },
 "optimade.validator.config.BaseSettings": {
  "data": {
   "shadows": "pydantic.BaseSettings"
  },
  "type": "import"
 },
 "optimade.validator.config.DataType": {
  "data": {
   "shadows": "optimade.models.DataType"
  },
  "type": "import"
 },
 "optimade.validator.config.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.validator.config.ENTRY_INFO_SCHEMAS": {
  "data": {
   "shadows": "optimade.server.schemas.ENTRY_INFO_SCHEMAS"
  },
  "type": "import"
 },
 "optimade.validator.config.Field": {
  "data": {
   "shadows": "pydantic.Field"
  },
  "type": "import"
 },
 "optimade.validator.config.IndexInfoResponse": {
  "data": {
   "shadows": "optimade.models.IndexInfoResponse"
  },
  "type": "import"
 },
 "optimade.validator.config.InfoResponse": {
  "data": {
   "shadows": "optimade.models.InfoResponse"
  },
  "type": "import"
 },
 "optimade.validator.config.Set": {
  "data": {
   "shadows": "typing.Set"
  },
  "type": "import"
 },
 "optimade.validator.config.VALIDATOR_CONFIG": {
  "data": {
   "lineno": 163
  },
  "type": "constant"
 },
 "optimade.validator.config.ValidatorConfig": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "optimade.models.DataType",
    "optimade.server.mappers.BaseResourceMapper.TOP_LEVEL_NON_ATTRIBUTES_FIELDS",
    "optimade.validator.config._ENTRY_SCHEMAS",
    "optimade.validator.config._EXCLUSIVE_OPERATORS",
    "optimade.validator.config._INCLUSIVE_OPERATORS",
    "optimade.validator.config._NON_ENTRY_ENDPOINTS",
    "optimade.validator.config._RESPONSE_CLASSES",
    "optimade.validator.config._RESPONSE_CLASSES_INDEX",
    "optimade.validator.config._UNIQUE_PROPERTIES",
    "pydantic.BaseSettings",
    "pydantic.Field",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Set"
   ]
  },
  "type": "class"
 },
 "optimade.validator.config.ValidatorLinksResponse": {
  "data": {
   "shadows": "optimade.validator.utils.ValidatorLinksResponse"
  },
  "type": "import"
 },
 "optimade.validator.config.ValidatorReferenceResponseMany": {
  "data": {
   "shadows": "optimade.validator.utils.ValidatorReferenceResponseMany"
  },
  "type": "import"
 },
 "optimade.validator.config.ValidatorReferenceResponseOne": {
  "data": {
   "shadows": "optimade.validator.utils.ValidatorReferenceResponseOne"
  },
  "type": "import"
 },
 "optimade.validator.config.ValidatorStructureResponseMany": {
  "data": {
   "shadows": "optimade.validator.utils.ValidatorStructureResponseMany"
  },
  "type": "import"
 },
 "optimade.validator.config.ValidatorStructureResponseOne": {
  "data": {
   "shadows": "optimade.validator.utils.ValidatorStructureResponseOne"
  },
  "type": "import"
 },
 "optimade.validator.config._ENTRY_SCHEMAS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "optimade.validator.config._EXCLUSIVE_OPERATORS": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "optimade.validator.config._INCLUSIVE_OPERATORS": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "optimade.validator.config._NON_ENTRY_ENDPOINTS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "optimade.validator.config._RESPONSE_CLASSES": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "optimade.validator.config._RESPONSE_CLASSES_INDEX": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "optimade.validator.config._UNIQUE_PROPERTIES": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "optimade.validator.config.__all__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "optimade.validator.config.exclusive_ops": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "optimade.validator.config.retrieve_queryable_properties": {
  "data": {
   "shadows": "optimade.server.schemas.retrieve_queryable_properties"
  },
  "type": "import"
 },
 "optimade.validator.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "optimade.validator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "optimade.validator.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "optimade.validator.utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "optimade.validator.utils.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "optimade.validator.utils.Callable": {
  "data": {
   "shadows": "typing.Callable"
  },
  "type": "import"
 },
 "optimade.validator.utils.Client": {
  "data": {
   "lineno": 163
  },
  "type": "class"
 },
 "optimade.validator.utils.Client.__init__": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.validator.utils.Client.get": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "optimade.validator.utils.ResponseError",
    "optimade.validator.utils.requests",
    "optimade.validator.utils.sys",
    "optimade.validator.utils.time",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.validator.utils.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.validator.utils.EntryResource": {
  "data": {
   "shadows": "optimade.models.EntryResource"
  },
  "type": "import"
 },
 "optimade.validator.utils.Field": {
  "data": {
   "shadows": "pydantic.Field"
  },
  "type": "import"
 },
 "optimade.validator.utils.InternalError": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "optimade.validator.utils.LinksResource": {
  "data": {
   "shadows": "optimade.models.LinksResource"
  },
  "type": "import"
 },
 "optimade.validator.utils.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.validator.utils.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "optimade.validator.utils.ReferenceResource": {
  "data": {
   "shadows": "optimade.models.ReferenceResource"
  },
  "type": "import"
 },
 "optimade.validator.utils.ResponseError": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "optimade.validator.utils.ResponseMeta": {
  "data": {
   "shadows": "optimade.models.ResponseMeta"
  },
  "type": "import"
 },
 "optimade.validator.utils.StructureResource": {
  "data": {
   "shadows": "optimade.models.StructureResource"
  },
  "type": "import"
 },
 "optimade.validator.utils.Success": {
  "data": {
   "shadows": "optimade.models.optimade_json.Success"
  },
  "type": "import"
 },
 "optimade.validator.utils.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "optimade.validator.utils.ValidationError": {
  "data": {
   "shadows": "pydantic.ValidationError"
  },
  "type": "import"
 },
 "optimade.validator.utils.ValidatorEntryResponseMany": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "optimade.models.EntryResource",
    "optimade.models.ResponseMeta",
    "optimade.models.optimade_json.Success",
    "pydantic.Field",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.validator.utils.ValidatorEntryResponseOne": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "optimade.models.EntryResource",
    "optimade.models.ResponseMeta",
    "optimade.models.optimade_json.Success",
    "pydantic.Field",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.validator.utils.ValidatorLinksResponse": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "optimade.models.LinksResource",
    "optimade.models.ResponseMeta",
    "optimade.models.optimade_json.Success",
    "pydantic.Field",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "optimade.validator.utils.ValidatorReferenceResponseMany": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "optimade.models.ReferenceResource",
    "optimade.validator.utils.ValidatorEntryResponseMany",
    "pydantic.Field",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "optimade.validator.utils.ValidatorReferenceResponseOne": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "optimade.models.ReferenceResource",
    "optimade.validator.utils.ValidatorEntryResponseOne",
    "pydantic.Field"
   ]
  },
  "type": "class"
 },
 "optimade.validator.utils.ValidatorResults": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "int",
    "list",
    "optimade.validator.utils.dataclasses",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "class"
 },
 "optimade.validator.utils.ValidatorResults.add_failure": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "RuntimeError",
    "optimade.validator.utils.print_failure",
    "optimade.validator.utils.print_notify",
    "optimade.validator.utils.print_warning",
    "pprint",
    "print",
    "str",
    "typing.Optional",
    "warning_pprint"
   ]
  },
  "type": "function"
 },
 "optimade.validator.utils.ValidatorResults.add_success": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "RuntimeError",
    "optimade.validator.utils.print_success",
    "pretty_print",
    "print",
    "str",
    "typing.Optional"
   ]
  },
  "type": "function"
 },
 "optimade.validator.utils.ValidatorStructureResponseMany": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "optimade.models.StructureResource",
    "optimade.validator.utils.ValidatorEntryResponseMany",
    "pydantic.Field",
    "typing.List"
   ]
  },
  "type": "class"
 },
 "optimade.validator.utils.ValidatorStructureResponseOne": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "optimade.models.StructureResource",
    "optimade.validator.utils.ValidatorEntryResponseOne",
    "pydantic.Field"
   ]
  },
  "type": "class"
 },
 "optimade.validator.utils.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "optimade.validator.utils.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "optimade.validator.utils.print_failure": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.validator.utils.print_notify": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.validator.utils.print_success": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.validator.utils.print_warning": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.validator.utils.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "optimade.validator.utils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "optimade.validator.utils.tb": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "optimade.validator.utils.test_case": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Callable",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.validator.utils.test_case.wrapper": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "AttributeError",
    "Exception",
    "KeyboardInterrupt",
    "SystemExit",
    "bool",
    "functools.wraps",
    "isinstance",
    "optimade.validator.utils.InternalError",
    "optimade.validator.utils.ResponseError",
    "pydantic.ValidationError",
    "simplejson.JSONDecodeError",
    "str",
    "test_fn",
    "test_fn.__name__",
    "traceback",
    "traceback.format_exc",
    "traceback.split"
   ]
  },
  "type": "function"
 },
 "optimade.validator.utils.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "optimade.validator.utils.urllib.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 },
 "optimade.validator.utils.wraps": {
  "data": {
   "shadows": "functools.wraps"
  },
  "type": "import"
 },
 "optimade.validator.validate": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "Exception",
    "ImplementationValidator",
    "TypeError",
    "ValueError",
    "int",
    "optimade.validator.argparse",
    "optimade.validator.os",
    "optimade.validator.sys",
    "optimade.validator.traceback",
    "str",
    "vars"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "optimade.validator.validator.Any": {
  "data": {
   "shadows": "typing.Any"
  },
  "type": "import"
 },
 "optimade.validator.validator.CONF": {
  "data": {
   "shadows": "optimade.validator.config.VALIDATOR_CONFIG"
  },
  "type": "import"
 },
 "optimade.validator.validator.Client": {
  "data": {
   "shadows": "optimade.validator.utils.Client"
  },
  "type": "import"
 },
 "optimade.validator.validator.DataType": {
  "data": {
   "shadows": "optimade.models.DataType"
  },
  "type": "import"
 },
 "optimade.validator.validator.Dict": {
  "data": {
   "shadows": "typing.Dict"
  },
  "type": "import"
 },
 "optimade.validator.validator.EntryInfoResponse": {
  "data": {
   "shadows": "optimade.models.EntryInfoResponse"
  },
  "type": "import"
 },
 "optimade.validator.validator.ImplementationValidator": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "bool",
    "typing.Optional"
   ]
  },
  "type": "class"
 },
 "optimade.validator.validator.ImplementationValidator.__init__": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "RuntimeError",
    "SystemExit",
    "bool",
    "int",
    "optimade.validator.config.VALIDATOR_CONFIG.response_classes",
    "optimade.validator.config.VALIDATOR_CONFIG.response_classes_index",
    "optimade.validator.utils.Client",
    "optimade.validator.utils.ValidatorResults",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._check_entry_info": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._check_response_fields": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "len",
    "list",
    "min",
    "optimade.validator.config.VALIDATOR_CONFIG.top_level_non_attribute_fields",
    "optimade.validator.utils.test_case",
    "optimade.validator.validator.random",
    "set",
    "sorted",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._construct_queries_for_property": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "bool",
    "optimade.models.DataType",
    "optimade.models.SupportLevel.OPTIONAL",
    "optimade.validator.config.VALIDATOR_CONFIG.entry_schemas",
    "optimade.validator.config.VALIDATOR_CONFIG.entry_schemas.get",
    "optimade.validator.utils.ResponseError",
    "optimade.validator.utils.test_case",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._construct_single_property_filters": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "any",
    "bool",
    "dict",
    "isinstance",
    "len",
    "list",
    "optimade.models.DataType",
    "optimade.models.DataType.DICTIONARY",
    "optimade.models.DataType.FLOAT",
    "optimade.models.DataType.INTEGER",
    "optimade.models.DataType.LIST",
    "optimade.models.DataType.STRING",
    "optimade.models.DataType.TIMESTAMP",
    "optimade.models.SupportLevel.OPTIONAL",
    "optimade.models.SupportLevel.SHOULD",
    "optimade.validator.config.VALIDATOR_CONFIG.entry_schemas.get",
    "optimade.validator.config.VALIDATOR_CONFIG.exclusive_operators",
    "optimade.validator.config.VALIDATOR_CONFIG.inclusive_operators",
    "optimade.validator.config.VALIDATOR_CONFIG.unique_properties",
    "optimade.validator.utils.ResponseError",
    "set",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._deserialize_response": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "optimade.validator.utils.ResponseError",
    "optimade.validator.utils.test_case",
    "optimade.validator.validator.requests",
    "response_cls",
    "simplejson.JSONDecodeError",
    "simplejson.dumps",
    "str",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._format_test_value": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "isinstance",
    "optimade.models.DataType",
    "optimade.models.DataType.LIST",
    "optimade.models.DataType.STRING",
    "set",
    "sorted",
    "staticmethod",
    "str",
    "typing.Any"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._get_archetypal_entry": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "optimade.validator.utils.test_case",
    "optimade.validator.validator.random",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._get_available_endpoints": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "TypeError",
    "optimade.validator.config.VALIDATOR_CONFIG.non_entry_endpoints",
    "optimade.validator.utils.ResponseError",
    "optimade.validator.utils.test_case",
    "str",
    "typing.Any",
    "typing.Dict",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._get_endpoint": {
  "data": {
   "lineno": 1194,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "optimade.validator.utils.ResponseError",
    "optimade.validator.utils.test_case",
    "optimade.validator.validator.requests",
    "str",
    "typing.List",
    "typing.Optional",
    "typing.Tuple",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._get_single_id_from_multi_entry_endpoint": {
  "data": {
   "lineno": 1071,
   "symbols_in_volume": [
    "optimade.validator.utils.ResponseError",
    "optimade.validator.utils.test_case"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._recurse_through_endpoint": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "bool",
    "list",
    "optimade.models.SupportLevel.OPTIONAL",
    "optimade.validator.config.VALIDATOR_CONFIG.entry_schemas.get",
    "optimade.validator.utils.ResponseError",
    "optimade.validator.utils.test_case",
    "str",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._setup_log": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "optimade.validator.validator.logging",
    "optimade.validator.validator.sys"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._test_as_type": {
  "data": {
   "lineno": 981
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._test_bad_version_returns_553": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "optimade.validator.validator.VERSIONS_REGEXP",
    "optimade.validator.validator.re"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._test_data_available_matches_data_returned": {
  "data": {
   "lineno": 883,
   "symbols_in_volume": [
    "bool",
    "optimade.validator.utils.ResponseError",
    "optimade.validator.utils.test_case",
    "str",
    "typing.Any",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._test_info_or_links_endpoint": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "bool",
    "str",
    "typing.Any",
    "typing.Union"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._test_multi_entry_endpoint": {
  "data": {
   "lineno": 839,
   "symbols_in_volume": [
    "optimade.validator.config.VALIDATOR_CONFIG.entry_schemas",
    "optimade.validator.config.VALIDATOR_CONFIG.entry_schemas.keys",
    "optimade.validator.config.VALIDATOR_CONFIG.top_level_non_attribute_fields",
    "optimade.validator.utils.ValidatorEntryResponseMany",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._test_must_properties": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "bool",
    "len",
    "optimade.models.SupportLevel.MUST",
    "optimade.validator.config.VALIDATOR_CONFIG.entry_schemas",
    "optimade.validator.config.VALIDATOR_CONFIG.entry_schemas.get",
    "optimade.validator.utils.ResponseError",
    "optimade.validator.utils.test_case",
    "set",
    "str",
    "typing.List",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._test_page_limit": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "TypeError",
    "bool",
    "dict",
    "int",
    "isinstance",
    "len",
    "optimade.validator.utils.ResponseError",
    "optimade.validator.utils.test_case",
    "optimade.validator.validator.requests",
    "simplejson.JSONDecodeError",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._test_single_entry_endpoint": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "optimade.validator.config.VALIDATOR_CONFIG.entry_schemas",
    "optimade.validator.config.VALIDATOR_CONFIG.entry_schemas.keys",
    "optimade.validator.config.VALIDATOR_CONFIG.top_level_non_attribute_fields",
    "optimade.validator.utils.ValidatorEntryResponseOne",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._test_versions_endpoint": {
  "data": {
   "lineno": 909,
   "symbols_in_volume": [
    "optimade.validator.config.VALIDATOR_CONFIG.versions_endpoint",
    "optimade.validator.validator.VERSIONS_REGEXP",
    "optimade.validator.validator.re"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator._test_versions_endpoint_content": {
  "data": {
   "lineno": 928,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "optimade.validator.config.VALIDATOR_CONFIG.versions_endpoint",
    "optimade.validator.utils.ResponseError",
    "optimade.validator.utils.test_case",
    "optimade.validator.validator.requests",
    "str",
    "typing.Optional",
    "typing.Tuple"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator.print_summary": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "optimade.validator.utils.print_failure",
    "optimade.validator.utils.print_notify",
    "optimade.validator.utils.print_success",
    "optimade.validator.utils.print_warning",
    "optimade.validator.validator.dataclasses",
    "print",
    "simplejson.dumps"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.ImplementationValidator.validate_implementation": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "RuntimeError",
    "bool",
    "optimade.models.EntryInfoResponse",
    "optimade.validator.config.VALIDATOR_CONFIG.info_endpoint",
    "optimade.validator.config.VALIDATOR_CONFIG.links_endpoint",
    "optimade.validator.config.VALIDATOR_CONFIG.versions_endpoint",
    "print"
   ]
  },
  "type": "function"
 },
 "optimade.validator.validator.List": {
  "data": {
   "shadows": "typing.List"
  },
  "type": "import"
 },
 "optimade.validator.validator.Optional": {
  "data": {
   "shadows": "typing.Optional"
  },
  "type": "import"
 },
 "optimade.validator.validator.ResponseError": {
  "data": {
   "shadows": "optimade.validator.utils.ResponseError"
  },
  "type": "import"
 },
 "optimade.validator.validator.SupportLevel": {
  "data": {
   "shadows": "optimade.models.SupportLevel"
  },
  "type": "import"
 },
 "optimade.validator.validator.Tuple": {
  "data": {
   "shadows": "typing.Tuple"
  },
  "type": "import"
 },
 "optimade.validator.validator.Union": {
  "data": {
   "shadows": "typing.Union"
  },
  "type": "import"
 },
 "optimade.validator.validator.VERSIONS_REGEXP": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "optimade.validator.validator.ValidatorEntryResponseMany": {
  "data": {
   "shadows": "optimade.validator.utils.ValidatorEntryResponseMany"
  },
  "type": "import"
 },
 "optimade.validator.validator.ValidatorEntryResponseOne": {
  "data": {
   "shadows": "optimade.validator.utils.ValidatorEntryResponseOne"
  },
  "type": "import"
 },
 "optimade.validator.validator.ValidatorResults": {
  "data": {
   "shadows": "optimade.validator.utils.ValidatorResults"
  },
  "type": "import"
 },
 "optimade.validator.validator.__all__": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "optimade.validator.validator.dataclasses": {
  "data": {
   "shadows": "dataclasses"
  },
  "type": "import"
 },
 "optimade.validator.validator.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "optimade.validator.validator.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "optimade.validator.validator.print_failure": {
  "data": {
   "shadows": "optimade.validator.utils.print_failure"
  },
  "type": "import"
 },
 "optimade.validator.validator.print_notify": {
  "data": {
   "shadows": "optimade.validator.utils.print_notify"
  },
  "type": "import"
 },
 "optimade.validator.validator.print_success": {
  "data": {
   "shadows": "optimade.validator.utils.print_success"
  },
  "type": "import"
 },
 "optimade.validator.validator.print_warning": {
  "data": {
   "shadows": "optimade.validator.utils.print_warning"
  },
  "type": "import"
 },
 "optimade.validator.validator.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "optimade.validator.validator.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "optimade.validator.validator.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "optimade.validator.validator.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "optimade.validator.validator.test_case": {
  "data": {
   "shadows": "optimade.validator.utils.test_case"
  },
  "type": "import"
 },
 "optimade.validator.validator.urllib.parse": {
  "data": {
   "shadows": "urllib.parse"
  },
  "type": "import"
 }
}