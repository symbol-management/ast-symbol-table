{
 "talib": {
  "lineno": null,
  "symbols_in_volume": [
   "atexit.register"
  ],
  "type": "module"
 },
 "talib._pandas_wrapper": {
  "lineno": 14,
  "symbols_in_volume": [],
  "type": "function"
 },
 "talib._pandas_wrapper.wrapper": {
  "lineno": 15,
  "symbols_in_volume": [
   "functools.wraps",
   "itertools.chain",
   "pandas.Series"
  ],
  "type": "function"
 },
 "talib.abstract": {
  "lineno": null,
  "symbols_in_volume": [
   "talib._ta_lib"
  ],
  "type": "module"
 },
 "talib.abstract.Function": {
  "lineno": 13,
  "symbols_in_volume": [],
  "type": "function"
 },
 "talib.deprecated": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "talib.get_function_groups": {
  "lineno": 280,
  "symbols_in_volume": [],
  "type": "function"
 },
 "talib.get_functions": {
  "lineno": 271,
  "symbols_in_volume": [],
  "type": "function"
 },
 "talib.stream": {
  "lineno": null,
  "symbols_in_volume": [
   "talib._ta_lib"
  ],
  "type": "module"
 },
 "talib.test_abstract": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "talib.test_abstract.test_MAVP": {
  "lineno": 110,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "nose.tools.assert_raises",
   "nose.tools.assert_true",
   "numpy.arange",
   "talib.abstract.MAVP",
   "talib.test_data.ford_2012"
  ],
  "type": "function"
 },
 "talib.test_abstract.test_SMA": {
  "lineno": 67,
  "symbols_in_volume": [
   "talib.abstract.Function",
   "talib.abstract.SMA",
   "talib.func.SMA",
   "talib.test_data.assert_np_arrays_equal",
   "talib.test_data.assert_np_arrays_not_equal",
   "talib.test_data.ford_2012"
  ],
  "type": "function"
 },
 "talib.test_abstract.test_STOCH": {
  "lineno": 83,
  "symbols_in_volume": [
   "talib.abstract.Function",
   "talib.func.STOCH",
   "talib.test_data.assert_np_arrays_equal",
   "talib.test_data.assert_np_arrays_not_equal",
   "talib.test_data.ford_2012"
  ],
  "type": "function"
 },
 "talib.test_abstract.test_call_doesnt_cache_parameters": {
  "lineno": 297,
  "symbols_in_volume": [
   "talib.abstract.Function",
   "talib.func.SMA",
   "talib.test_data.assert_np_arrays_equal",
   "talib.test_data.ford_2012"
  ],
  "type": "function"
 },
 "talib.test_abstract.test_call_supports_same_signature_as_func_module": {
  "lineno": 259,
  "symbols_in_volume": [
   "nose.tools.assert_raises",
   "talib.abstract.Function",
   "talib.func.ADX",
   "talib.test_data.assert_np_arrays_equal",
   "talib.test_data.ford_2012"
  ],
  "type": "function"
 },
 "talib.test_abstract.test_call_without_arguments": {
  "lineno": 312,
  "symbols_in_volume": [
   "nose.tools.assert_raises",
   "talib.abstract.Function"
  ],
  "type": "function"
 },
 "talib.test_abstract.test_doji_candle": {
  "lineno": 105,
  "symbols_in_volume": [
   "talib.abstract.Function",
   "talib.func.CDLDOJI",
   "talib.test_data.assert_np_arrays_equal",
   "talib.test_data.ford_2012"
  ],
  "type": "function"
 },
 "talib.test_abstract.test_info": {
  "lineno": 119,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "ordereddict.OrderedDict",
   "talib.MA_Type.EMA",
   "talib.abstract.Function"
  ],
  "type": "function"
 },
 "talib.test_abstract.test_input_arrays": {
  "lineno": 183,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "nose.tools.assert_raises",
   "nose.tools.assert_true",
   "numpy.random.rand",
   "talib.abstract.Function",
   "talib.test_data.ford_2012"
  ],
  "type": "function"
 },
 "talib.test_abstract.test_input_names": {
  "lineno": 164,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "ordereddict.OrderedDict",
   "talib.abstract.Function"
  ],
  "type": "function"
 },
 "talib.test_abstract.test_lookback": {
  "lineno": 253,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "talib.abstract.Function"
  ],
  "type": "function"
 },
 "talib.test_abstract.test_pandas": {
  "lineno": 20,
  "symbols_in_volume": [
   "nose.tools.assert_true",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.Series",
   "talib.abstract.Function",
   "talib.func.SMA",
   "talib.func.STOCH",
   "talib.test_data.assert_np_arrays_equal",
   "talib.test_data.ford_2012",
   "talib.test_data.ford_2012.items"
  ],
  "type": "function"
 },
 "talib.test_abstract.test_pandas_series": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "talib.BBANDS",
   "talib.SMA",
   "talib.func.BBANDS",
   "talib.func.SMA",
   "talib.test_data.ford_2012"
  ],
  "type": "function"
 },
 "talib.test_abstract.test_parameter_type_checking": {
  "lineno": 276,
  "symbols_in_volume": [
   "nose.tools.assert_raises",
   "talib.abstract.Function",
   "talib.test_data.ford_2012"
  ],
  "type": "function"
 },
 "talib.test_abstract.test_parameters": {
  "lineno": 221,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "ordereddict.OrderedDict",
   "talib.MA_Type.EMA",
   "talib.MA_Type.T3",
   "talib.MA_Type.WMA",
   "talib.abstract.Function"
  ],
  "type": "function"
 },
 "talib.test_data": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray"
  ],
  "type": "module"
 },
 "talib.test_data.assert_np_arrays_equal": {
  "lineno": 217,
  "symbols_in_volume": [
   "nose.tools.assert_equal",
   "nose.tools.assert_true",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "talib.test_data.assert_np_arrays_not_equal": {
  "lineno": 224,
  "symbols_in_volume": [
   "nose.tools.assert_not_equal",
   "nose.tools.assert_true",
   "numpy.isnan"
  ],
  "type": "function"
 },
 "talib.test_func": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "talib.test_func.test_BBANDS": {
  "lineno": 94,
  "symbols_in_volume": [
   "nose.tools.assert_true",
   "numpy.isnan",
   "numpy.where",
   "talib.MA_Type.EMA",
   "talib.func.BBANDS",
   "talib.test_data.series"
  ],
  "type": "function"
 },
 "talib.test_func.test_CDL3BLACKCROWS": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.array",
   "talib.func.CDL3BLACKCROWS",
   "talib.test_data.assert_np_arrays_equal"
  ],
  "type": "function"
 },
 "talib.test_func.test_DEMA": {
  "lineno": 107,
  "symbols_in_volume": [
   "nose.tools.assert_true",
   "numpy.isnan",
   "numpy.where",
   "talib.func.DEMA",
   "talib.test_data.series"
  ],
  "type": "function"
 },
 "talib.test_func.test_EMAEMA": {
  "lineno": 116,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "nose.tools.assert_true",
   "numpy.isnan",
   "numpy.where",
   "talib.func.EMA",
   "talib.test_data.series"
  ],
  "type": "function"
 },
 "talib.test_func.test_MAVP": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "talib.func.MAVP",
   "talib.func.SMA",
   "talib.test_data.assert_np_arrays_equal"
  ],
  "type": "function"
 },
 "talib.test_func.test_MAX": {
  "lineno": 74,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "numpy.isnan",
   "numpy.where",
   "talib.func.MAX",
   "talib.test_data.series"
  ],
  "type": "function"
 },
 "talib.test_func.test_MIN": {
  "lineno": 62,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "numpy.array",
   "numpy.isnan",
   "numpy.nan",
   "numpy.where",
   "talib.func.MIN",
   "talib.test_data.assert_np_arrays_equal",
   "talib.test_data.series"
  ],
  "type": "function"
 },
 "talib.test_func.test_MOM": {
  "lineno": 83,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "talib.func.MOM",
   "talib.test_data.assert_np_arrays_equal"
  ],
  "type": "function"
 },
 "talib.test_func.test_RSI": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "talib.func.RSI",
   "talib.test_data.assert_np_arrays_equal"
  ],
  "type": "function"
 },
 "talib.test_func.test_compatibility": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "talib.func.EMA",
   "talib.set_compatibility",
   "talib.test_data.assert_np_arrays_equal"
  ],
  "type": "function"
 },
 "talib.test_func.test_input_lengths": {
  "lineno": 19,
  "symbols_in_volume": [
   "nose.tools.assert_raises",
   "numpy.arange",
   "talib.func.BOP"
  ],
  "type": "function"
 },
 "talib.test_func.test_input_nans": {
  "lineno": 31,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "talib.func.AROON",
   "talib.test_data.assert_np_arrays_equal"
  ],
  "type": "function"
 },
 "talib.test_func.test_input_wrong_type": {
  "lineno": 14,
  "symbols_in_volume": [
   "nose.tools.assert_raises",
   "numpy.arange",
   "talib.func.MOM"
  ],
  "type": "function"
 },
 "talib.test_func.test_num_functions": {
  "lineno": 11,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "talib.get_functions"
  ],
  "type": "function"
 },
 "talib.test_func.test_talib_version": {
  "lineno": 8,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "talib.__ta_version__"
  ],
  "type": "function"
 },
 "talib.test_func.test_unstable_period": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.nan",
   "talib.func.EMA",
   "talib.set_unstable_period",
   "talib.test_data.assert_np_arrays_equal"
  ],
  "type": "function"
 },
 "talib.test_pandas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "talib.test_pandas.test_MAVP": {
  "lineno": 27,
  "symbols_in_volume": [
   "nose.tools.assert_is_instance",
   "numpy.nan",
   "pandas.Series",
   "talib.MAVP",
   "talib.SMA",
   "talib.test_data.assert_np_arrays_equal"
  ],
  "type": "function"
 },
 "talib.test_pandas.test_MOM": {
  "lineno": 8,
  "symbols_in_volume": [
   "nose.tools.assert_is_instance",
   "numpy.nan",
   "pandas.Series",
   "talib.MOM",
   "talib.test_data.assert_np_arrays_equal"
  ],
  "type": "function"
 },
 "talib.test_stream": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "talib.test_stream.test_CDL3BLACKCROWS": {
  "lineno": 43,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "numpy.array",
   "talib.stream.CDL3BLACKCROWS"
  ],
  "type": "function"
 },
 "talib.test_stream.test_CDL3BLACKCROWS_pandas": {
  "lineno": 52,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "pandas.Series",
   "talib.stream.CDL3BLACKCROWS"
  ],
  "type": "function"
 },
 "talib.test_stream.test_streaming": {
  "lineno": 9,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "nose.tools.assert_true",
   "numpy.array",
   "numpy.isnan",
   "talib.stream.MOM"
  ],
  "type": "function"
 },
 "talib.test_stream.test_streaming_pandas": {
  "lineno": 26,
  "symbols_in_volume": [
   "nose.tools.assert_equals",
   "nose.tools.assert_true",
   "numpy.isnan",
   "pandas.Series",
   "talib.stream.MOM"
  ],
  "type": "function"
 }
}