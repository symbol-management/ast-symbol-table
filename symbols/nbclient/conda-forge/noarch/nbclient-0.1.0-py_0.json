{
 "nbclient": {
  "data": {},
  "type": "module"
 },
 "nbclient.__version__": {
  "data": {
   "shadows": "version"
  },
  "type": "import"
 },
 "nbclient._version": {
  "data": {},
  "type": "module"
 },
 "nbclient._version.version": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "nbclient.client": {
  "data": {},
  "type": "module"
 },
 "nbclient.client.Any": {
  "data": {
   "shadows": "traitlets.Any"
  },
  "type": "import"
 },
 "nbclient.client.Bool": {
  "data": {
   "shadows": "traitlets.Bool"
  },
  "type": "import"
 },
 "nbclient.client.Dict": {
  "data": {
   "shadows": "traitlets.Dict"
  },
  "type": "import"
 },
 "nbclient.client.Empty": {
  "data": {
   "shadows": "queue.Empty"
  },
  "type": "import"
 },
 "nbclient.client.Enum": {
  "data": {
   "shadows": "traitlets.Enum"
  },
  "type": "import"
 },
 "nbclient.client.Integer": {
  "data": {
   "shadows": "traitlets.Integer"
  },
  "type": "import"
 },
 "nbclient.client.KernelManager": {
  "data": {
   "shadows": "jupyter_client.KernelManager"
  },
  "type": "import"
 },
 "nbclient.client.List": {
  "data": {
   "shadows": "traitlets.List"
  },
  "type": "import"
 },
 "nbclient.client.LoggingConfigurable": {
  "data": {
   "shadows": "traitlets.config.configurable.LoggingConfigurable"
  },
  "type": "import"
 },
 "nbclient.client.NotebookClient": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "textwrap.dedent",
    "traitlets.Any",
    "traitlets.Bool",
    "traitlets.Dict",
    "traitlets.Enum",
    "traitlets.Integer",
    "traitlets.List",
    "traitlets.Type",
    "traitlets.Unicode",
    "traitlets.config.configurable.LoggingConfigurable"
   ]
  },
  "type": "class"
 },
 "nbclient.client.NotebookClient.__init__": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient._check_alive": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "DeadKernelError"
   ]
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient._check_raise_for_error": {
  "data": {
   "lineno": 480
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient._get_buffer_data": {
  "data": {
   "lineno": 715,
   "symbols_in_volume": [
    "nbclient.client.base64",
    "zip"
   ]
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient._get_timeout": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient._handle_timeout": {
  "data": {
   "lineno": 433
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient._kernel_manager_class_default": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "jupyter_client.KernelManager",
    "traitlets.default"
   ]
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient._passed_deadline": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "time.monotonic"
   ]
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient._poll_for_reply": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "queue.Empty"
   ]
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient._serialize_widget_state": {
  "data": {
   "lineno": 706
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient._timeout_with_deadline": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "time.monotonic"
   ]
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient._update_display_id": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "ValueError",
    "nbformat.v4.output_from_msg"
   ]
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient._wait_for_reply": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "queue.Empty"
   ]
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient.clear_display_id_mapping": {
  "data": {
   "lineno": 693
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient.clear_output": {
  "data": {
   "lineno": 683
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient.execute": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "enumerate"
   ]
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient.execute_cell": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "queue.Empty",
    "time.monotonic"
   ]
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient.handle_comm_msg": {
  "data": {
   "lineno": 698
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient.output": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "nbformat.v4.output_from_msg"
   ]
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient.process_message": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "CellExecutionComplete"
   ]
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient.reset_execution_trackers": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient.set_widgets_metadata": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient.setup_kernel": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "contextlib.contextmanager"
   ]
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient.start_kernel_manager": {
  "data": {
   "lineno": 271
  },
  "type": "function"
 },
 "nbclient.client.NotebookClient.start_new_kernel_client": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "function"
 },
 "nbclient.client.Type": {
  "data": {
   "shadows": "traitlets.Type"
  },
  "type": "import"
 },
 "nbclient.client.Unicode": {
  "data": {
   "shadows": "traitlets.Unicode"
  },
  "type": "import"
 },
 "nbclient.client.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "nbclient.client.contextmanager": {
  "data": {
   "shadows": "contextlib.contextmanager"
  },
  "type": "import"
 },
 "nbclient.client.dedent": {
  "data": {
   "shadows": "textwrap.dedent"
  },
  "type": "import"
 },
 "nbclient.client.default": {
  "data": {
   "shadows": "traitlets.default"
  },
  "type": "import"
 },
 "nbclient.client.execute": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "nbclient.client.NotebookClient"
   ]
  },
  "type": "function"
 },
 "nbclient.client.monotonic": {
  "data": {
   "shadows": "time.monotonic"
  },
  "type": "import"
 },
 "nbclient.client.output_from_msg": {
  "data": {
   "shadows": "nbformat.v4.output_from_msg"
  },
  "type": "import"
 },
 "nbclient.exceptions": {
  "data": {},
  "type": "module"
 },
 "nbclient.exceptions.CellExecutionComplete": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "nbclient.exceptions.CellExecutionError": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "nbclient.exceptions.CellExecutionError.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "nbclient.exceptions.CellExecutionError",
    "super"
   ]
  },
  "type": "function"
 },
 "nbclient.exceptions.CellExecutionError.__str__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "nbclient.exceptions.CellExecutionError.__unicode__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "nbclient.exceptions.CellExecutionError.from_cell_and_msg": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "classmethod",
    "cls"
   ]
  },
  "type": "function"
 },
 "nbclient.exceptions.CellTimeoutError": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "TimeoutError"
   ]
  },
  "type": "class"
 },
 "nbclient.exceptions.CellTimeoutError.error_from_timeout_and_cell": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "len"
   ]
  },
  "type": "function"
 },
 "nbclient.exceptions.DeadKernelError": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "RuntimeError"
   ]
  },
  "type": "class"
 },
 "nbclient.exceptions.exec_err_msg": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "nbclient.exceptions.timeout_err_msg": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "nbclient.tests": {
  "data": {},
  "type": "module"
 },
 "nbclient.tests.base": {
  "data": {},
  "type": "module"
 },
 "nbclient.tests.base.NBClientTestsBase": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "nbclient.tests.base.unittest"
   ]
  },
  "type": "class"
 },
 "nbclient.tests.base.NBClientTestsBase.build_notebook": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "nbformat.v4.new_code_cell",
    "nbformat.v4.new_markdown_cell",
    "nbformat.v4.new_notebook",
    "nbformat.v4.new_output"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.base.NBClientTestsBase.build_resources": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "nbclient.tests.base.NBClientTestsBase.merge_dicts": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.base.nbformat": {
  "data": {
   "shadows": "nbformat.v4"
  },
  "type": "import"
 },
 "nbclient.tests.base.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "nbclient.tests.fake_kernelmanager": {
  "data": {},
  "type": "module"
 },
 "nbclient.tests.fake_kernelmanager.FakeCustomKernelManager": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "jupyter_client.manager.KernelManager"
   ]
  },
  "type": "class"
 },
 "nbclient.tests.fake_kernelmanager.FakeCustomKernelManager.__init__": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "nbclient.tests.fake_kernelmanager.FakeCustomKernelManager",
    "super"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.fake_kernelmanager.FakeCustomKernelManager.client": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "nbclient.tests.fake_kernelmanager.FakeCustomKernelManager",
    "super"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.fake_kernelmanager.FakeCustomKernelManager.start_kernel": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "nbclient.tests.fake_kernelmanager.FakeCustomKernelManager",
    "super"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.fake_kernelmanager.KernelManager": {
  "data": {
   "shadows": "jupyter_client.manager.KernelManager"
  },
  "type": "import"
 },
 "nbclient.tests.test_client": {
  "data": {
   "symbols_in_volume": [
    "nbclient.tests.test_client.IPython",
    "nbclient.tests.test_client.os",
    "nbclient.tests.test_client.re"
   ]
  },
  "type": "module"
 },
 "nbclient.tests.test_client.Empty": {
  "data": {
   "shadows": "queue.Empty"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.IPY_MAJOR": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "nbclient.tests.test_client.IPython": {
  "data": {
   "shadows": "IPython"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.KernelSpecManager": {
  "data": {
   "shadows": "jupyter_client.kernelspec.KernelSpecManager"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.MagicMock": {
  "data": {
   "shadows": "unittest.mock.MagicMock"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.NotebookNode": {
  "data": {
   "shadows": "nbformat.NotebookNode"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.ProcessPool": {
  "data": {
   "shadows": "pebble.ProcessPool"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.TestExecute": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "NBClientTestsBase"
   ]
  },
  "type": "class"
 },
 "nbclient.tests.test_client.TestExecute.test_allow_errors": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "dict",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.os",
    "nbclient.tests.test_client.pytest",
    "nbclient.tests.test_client.run_notebook",
    "nbclient.tests.test_client.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_constructor": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "NotebookClient"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_custom_kernel_manager": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "NotebookClient",
    "nbclient.tests.test_client.copy",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.io",
    "nbclient.tests.test_client.nbformat",
    "nbclient.tests.test_client.os",
    "testpath.modified_env"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_disable_stdin": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "dict",
    "len",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.os",
    "nbclient.tests.test_client.run_notebook"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_empty_kernel_name": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "jupyter_client.kernelspec.KernelSpecManager",
    "nbclient.tests.test_client.assert_notebooks_equal",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.os",
    "nbclient.tests.test_client.pytest",
    "nbclient.tests.test_client.run_notebook",
    "traitlets.TraitError"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_empty_path": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "nbclient.tests.test_client.assert_notebooks_equal",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.os",
    "nbclient.tests.test_client.run_notebook"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_execute_function": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "execute",
    "nbclient.tests.test_client.assert_notebooks_equal",
    "nbclient.tests.test_client.copy",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.io",
    "nbclient.tests.test_client.nbformat",
    "nbclient.tests.test_client.os"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_force_raise_errors": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "dict",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.os",
    "nbclient.tests.test_client.pytest",
    "nbclient.tests.test_client.run_notebook",
    "nbclient.tests.test_client.sys",
    "str"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_kernel_death": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "NotebookClient",
    "RuntimeError",
    "TimeoutError",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.io",
    "nbclient.tests.test_client.nbformat",
    "nbclient.tests.test_client.os",
    "nbclient.tests.test_client.pytest",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_populate_language_info": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "NotebookClient",
    "nbclient.tests.test_client.nbformat"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_process_message_wrapper": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "WrappedPreProc",
    "nbclient.tests.test_client.assert_notebooks_equal",
    "nbclient.tests.test_client.copy",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.io",
    "nbclient.tests.test_client.nbformat",
    "nbclient.tests.test_client.os"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_process_message_wrapper.WrappedPreProc": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "NotebookClient"
   ]
  },
  "type": "class"
 },
 "nbclient.tests.test_client.TestExecute.test_process_message_wrapper.WrappedPreProc.process_message": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_timeout": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "TimeoutError",
    "dict",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.os",
    "nbclient.tests.test_client.pytest",
    "nbclient.tests.test_client.run_notebook",
    "str"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_timeout_func": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "TimeoutError",
    "dict",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.os",
    "nbclient.tests.test_client.pytest",
    "nbclient.tests.test_client.run_notebook"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_timeout_func.timeout_func": {
  "data": {
   "lineno": 360
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestExecute.test_widgets": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "dict",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.os",
    "nbclient.tests.test_client.run_notebook"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "NBClientTestsBase"
   ]
  },
  "type": "class"
 },
 "nbclient.tests.test_client.TestRunCell.test_allow_errors": {
  "data": {
   "lineno": 1152,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_busy_message": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_clear_output_message": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_clear_output_wait_message": {
  "data": {
   "lineno": 670,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_clear_output_wait_then_message_message": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_clear_output_wait_then_update_display_message": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_deadline_exec_reply": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "TimeoutError",
    "nbclient.tests.test_client.prepare_cell_mocks",
    "nbclient.tests.test_client.pytest",
    "queue.Empty",
    "unittest.mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_deadline_iopub": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "TimeoutError",
    "nbclient.tests.test_client.prepare_cell_mocks",
    "nbclient.tests.test_client.pytest",
    "queue.Empty"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_display_data_message": {
  "data": {
   "lineno": 926,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_display_data_same_id_message": {
  "data": {
   "lineno": 951,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_display_data_without_id_message": {
  "data": {
   "lineno": 904,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_error_and_error_status_messages": {
  "data": {
   "lineno": 1104,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_error_message": {
  "data": {
   "lineno": 1088,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_error_message_only": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_eventual_deadline_iopub": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "TimeoutError",
    "list",
    "nbclient.tests.test_client.prepare_cell_mocks",
    "nbclient.tests.test_client.pytest",
    "queue.Empty",
    "unittest.mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_execute_input_message": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_execute_result_message": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_execute_result_with_display_message": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_execution_count_message": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_execution_count_message_ignored_on_override": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_execution_count_with_stream_message": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_idle_message": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_message_for_wrong_parent": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_no_source": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks",
    "nbformat.NotebookNode"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_non_code_cell": {
  "data": {
   "lineno": 1188,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks",
    "nbformat.NotebookNode"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_raises_exception_tag": {
  "data": {
   "lineno": 1170,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_stream_messages": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_unknown_comm_message": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_update_display_data_message": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_update_display_data_mismatch_id_message": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_update_display_data_without_id_message": {
  "data": {
   "lineno": 1004,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_widget_comm_buffer_message": {
  "data": {
   "lineno": 805,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TestRunCell.test_widget_comm_message": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "nbclient.tests.test_client.prepare_cell_mocks"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.TraitError": {
  "data": {
   "shadows": "traitlets.TraitError"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.addr_pat": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "nbclient.tests.test_client.assert_notebooks_equal": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "nbclient.tests.test_client.normalize_output",
    "zip"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.b64decode": {
  "data": {
   "shadows": "base64.b64decode"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.b64encode": {
  "data": {
   "shadows": "base64.b64encode"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.current_dir": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "nbclient.tests.test_client.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.ipython_input_pat": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "nbclient.tests.test_client.modified_env": {
  "data": {
   "shadows": "testpath.modified_env"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.nbformat": {
  "data": {
   "shadows": "nbformat"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.normalize_base64": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "base64.b64decode",
    "base64.b64encode"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.normalize_output": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "dict",
    "ipython_genutils.py3compat.string_types",
    "isinstance",
    "nbclient.tests.test_client.addr_pat",
    "nbclient.tests.test_client.ipython_input_pat",
    "nbclient.tests.test_client.normalize_base64",
    "nbclient.tests.test_client.re",
    "nbclient.tests.test_client.xmltodict",
    "nbconvert.filters.strip_ansi"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.notebook_resources": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.os"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.patch": {
  "data": {
   "shadows": "unittest.mock.patch"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.prepare_cell_mocks": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.prepare_cell_mocks.iopub_messages_mock": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "unittest.mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.prepare_cell_mocks.prepared_wrapper": {
  "data": {
   "lineno": 107
  },
  "type": "function"
 },
 "nbclient.tests.test_client.prepare_cell_mocks.prepared_wrapper.test_mock_wrapper": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "NotebookClient",
    "func",
    "iopub_messages_mock",
    "nbclient.tests.test_client.functools",
    "nbformat.NotebookNode",
    "shell_channel_message_mock",
    "unittest.mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.prepare_cell_mocks.shell_channel_message_mock": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "unittest.mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.run_notebook": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotebookClient",
    "nbclient.tests.test_client.copy",
    "nbclient.tests.test_client.io",
    "nbclient.tests.test_client.nbformat",
    "testpath.modified_env"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.string_types": {
  "data": {
   "shadows": "ipython_genutils.py3compat.string_types"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.strip_ansi": {
  "data": {
   "shadows": "nbconvert.filters.strip_ansi"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.test_many_parallel_notebooks": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "NBClientTestsBase",
    "dict",
    "enumerate",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.os",
    "nbclient.tests.test_client.run_notebook",
    "pebble.ProcessPool",
    "range"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.test_parallel_notebooks": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "dict",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.notebook_resources",
    "nbclient.tests.test_client.os",
    "nbclient.tests.test_client.run_notebook",
    "nbclient.tests.test_client.threading",
    "str",
    "testpath.modified_env"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.test_run_all_notebooks": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "dict",
    "nbclient.tests.test_client.assert_notebooks_equal",
    "nbclient.tests.test_client.current_dir",
    "nbclient.tests.test_client.notebook_resources",
    "nbclient.tests.test_client.os",
    "nbclient.tests.test_client.pytest",
    "nbclient.tests.test_client.run_notebook"
   ]
  },
  "type": "function"
 },
 "nbclient.tests.test_client.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "nbclient.tests.test_client.xmltodict": {
  "data": {
   "shadows": "xmltodict"
  },
  "type": "import"
 }
}