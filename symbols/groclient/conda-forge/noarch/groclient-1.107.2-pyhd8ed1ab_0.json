{
 "*": {
  "data": {
   "imports": [
    "groclient.lib"
   ]
  },
  "type": "star-import"
 },
 "api": {
  "data": {},
  "type": "module"
 },
 "api.client": {
  "data": {},
  "type": "module"
 },
 "api.client.Client": {
  "data": {
   "shadows": "groclient.GroClient"
  },
  "type": "import"
 },
 "api.client.batch_client": {
  "data": {
   "symbols_in_volume": [
    "api.client.batch_client.logger",
    "groclient.lib.get_default_logger"
   ]
  },
  "type": "module"
 },
 "api.client.batch_client.BatchClient": {
  "data": {
   "shadows": "groclient.GroClient"
  },
  "type": "import"
 },
 "api.client.batch_client.BatchError": {
  "data": {
   "shadows": "groclient.client.BatchError"
  },
  "type": "import"
 },
 "api.client.batch_client.get_default_logger": {
  "data": {
   "shadows": "groclient.lib.get_default_logger"
  },
  "type": "import"
 },
 "api.client.batch_client.logger": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "api.client.cfg": {
  "data": {
   "symbols_in_volume": [
    "api.client.cfg.logger",
    "groclient.lib.get_default_logger"
   ]
  },
  "type": "module"
 },
 "api.client.cfg.get_default_logger": {
  "data": {
   "shadows": "groclient.lib.get_default_logger"
  },
  "type": "import"
 },
 "api.client.cfg.logger": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "api.client.crop_model": {
  "data": {
   "symbols_in_volume": [
    "api.client.crop_model.logger",
    "groclient.lib.get_default_logger"
   ]
  },
  "type": "module"
 },
 "api.client.crop_model.CropModel": {
  "data": {
   "shadows": "groclient.crop_model.CropModel"
  },
  "type": "import"
 },
 "api.client.crop_model.get_default_logger": {
  "data": {
   "shadows": "groclient.lib.get_default_logger"
  },
  "type": "import"
 },
 "api.client.crop_model.logger": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "api.client.gro_client": {
  "data": {
   "symbols_in_volume": [
    "api.client.gro_client.logger",
    "groclient.lib.get_default_logger"
   ]
  },
  "type": "module"
 },
 "api.client.gro_client.APIError": {
  "data": {
   "shadows": "groclient.client.APIError"
  },
  "type": "import"
 },
 "api.client.gro_client.GroClient": {
  "data": {
   "shadows": "groclient.GroClient"
  },
  "type": "import"
 },
 "api.client.gro_client.get_default_logger": {
  "data": {
   "shadows": "groclient.lib.get_default_logger"
  },
  "type": "import"
 },
 "api.client.gro_client.logger": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "api.client.lib": {
  "data": {
   "symbols_in_volume": [
    "api.client.lib.logger",
    "get_default_logger"
   ]
  },
  "type": "module"
 },
 "api.client.lib.logger": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "api.client.samples": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.analogous_years": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.analogous_years.lib": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.analogous_years.lib.distance_matrix": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.analogous_years.lib.distance_matrix.MaxAbsScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MaxAbsScaler"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.distance_matrix.dtw": {
  "data": {
   "shadows": "dtw.dtw"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.distance_matrix.dtw_dist_matrix": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "dtw.dtw",
    "len",
    "numpy.zeros",
    "pandas.DataFrame",
    "range",
    "scipy.spatial.distance.euclidean"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.distance_matrix.euclidean": {
  "data": {
   "shadows": "scipy.spatial.distance.euclidean"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.distance_matrix.euclidean_dist_matrix": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "scipy.spatial.distance.pdist",
    "scipy.spatial.distance.squareform"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.distance_matrix.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.distance_matrix.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.distance_matrix.pdist": {
  "data": {
   "shadows": "scipy.spatial.distance.pdist"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.distance_matrix.scaled_labeled_method_distances": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "sklearn.preprocessing.MaxAbsScaler"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.distance_matrix.squareform": {
  "data": {
   "shadows": "scipy.spatial.distance.squareform"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test.MaxAbsScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.MaxAbsScaler"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_data": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_dates": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_methods": {
  "data": {
   "lineno": 28
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test.distance_matrix": {
  "data": {
   "shadows": "api.client.samples.analogous_years.lib.distance_matrix"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test.euclidean": {
  "data": {
   "shadows": "scipy.spatial.distance.euclidean"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test.test_euclidean_distance_matrix": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.distance_matrix.euclidean_dist_matrix",
    "numpy.zeros",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "range",
    "scipy.spatial.distance.euclidean"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test.test_scaled_labeled_method_distances": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.distance_matrix.scaled_labeled_method_distances",
    "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_data",
    "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_dates",
    "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_methods",
    "pandas.util.testing.assert_frame_equal",
    "sklearn.preprocessing.MaxAbsScaler"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test.test_scaled_labeled_method_distances_invalid_date": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "KeyError",
    "api.client.samples.analogous_years.lib.distance_matrix.scaled_labeled_method_distances",
    "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_data",
    "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_dates",
    "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_methods",
    "api.client.samples.analogous_years.lib.distance_matrix_test.pytest"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.distance_matrix_test.test_scaled_labeled_method_distances_invalid_method": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "api.client.samples.analogous_years.lib.distance_matrix.scaled_labeled_method_distances",
    "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_data",
    "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_dates",
    "api.client.samples.analogous_years.lib.distance_matrix_test.create_test_methods",
    "api.client.samples.analogous_years.lib.distance_matrix_test.pytest"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.feature_extractions": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.analogous_years.lib.feature_extractions.PCA": {
  "data": {
   "shadows": "sklearn.decomposition.PCA"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.feature_extractions.StandardScaler": {
  "data": {
   "shadows": "sklearn.preprocessing.StandardScaler"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.feature_extractions.cumulative": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.feature_extractions.extract_features": {
  "data": {
   "shadows": "tsfresh.extract_features"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.feature_extractions.feature_scaling": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.feature_extractions.rm_const_cols",
    "numpy.inf",
    "numpy.nan",
    "sklearn.preprocessing.StandardScaler"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.feature_extractions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.feature_extractions.pca_transformation": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "api.client.samples.analogous_years.lib.feature_extractions.feature_scaling",
    "max",
    "min",
    "numpy.cumsum",
    "numpy.round",
    "pandas.DataFrame",
    "range",
    "sklearn.decomposition.PCA"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.feature_extractions.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.feature_extractions.rm_const_cols": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.feature_extractions.ts_feature_extraction": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pca_transformation",
    "rm_const_cols",
    "tsfresh.extract_features"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.feature_extractions_test": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.analogous_years.lib.feature_extractions_test.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.feature_extractions_test.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.feature_extractions_test.create_test_data": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.feature_extractions_test.feature_extractions": {
  "data": {
   "shadows": "api.client.samples.analogous_years.lib.feature_extractions"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.feature_extractions_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.feature_extractions_test.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.feature_extractions_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.feature_extractions_test.test_cumulative": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.feature_extractions.cumulative",
    "api.client.samples.analogous_years.lib.feature_extractions_test.create_test_data",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.feature_extractions_test.test_feature_scaling": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.feature_extractions.feature_scaling",
    "api.client.samples.analogous_years.lib.feature_extractions.rm_const_cols",
    "api.client.samples.analogous_years.lib.feature_extractions_test.create_test_data",
    "list",
    "numpy.array",
    "numpy.nanstd",
    "numpy.testing.assert_almost_equal"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.feature_extractions_test.test_pca_transformation": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "ValueError",
    "api.client.samples.analogous_years.lib.feature_extractions.pca_transformation",
    "api.client.samples.analogous_years.lib.feature_extractions_test.create_test_data",
    "api.client.samples.analogous_years.lib.feature_extractions_test.pytest"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.feature_extractions_test.test_rm_const_cols": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.feature_extractions.rm_const_cols",
    "api.client.samples.analogous_years.lib.feature_extractions_test.create_test_data",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation": {
  "data": {
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.final_ranks_computation.matplotlib"
   ]
  },
  "type": "module"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.DEFAULT_API_HOST": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.GroClient": {
  "data": {
   "shadows": "groclient.GroClient"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.analogous_years": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.final_ranks_computation.DEFAULT_API_HOST",
    "api.client.samples.analogous_years.lib.final_ranks_computation.combined_methods_distances",
    "api.client.samples.analogous_years.lib.final_ranks_computation.common_start_date",
    "api.client.samples.analogous_years.lib.final_ranks_computation.enso_data",
    "api.client.samples.analogous_years.lib.final_ranks_computation.ranked_df_dictionary",
    "groclient.GroClient",
    "len",
    "numpy.power",
    "numpy.sqrt",
    "numpy.zeros",
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.ay_cumulative": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.distance_matrix.euclidean_dist_matrix",
    "api.client.samples.analogous_years.lib.feature_extractions.cumulative"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.ay_dtw": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.distance_matrix.dtw_dist_matrix",
    "api.client.samples.analogous_years.lib.get_transform_data.stack_time_periods_by_ddmm"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.ay_euclidean": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.distance_matrix.euclidean_dist_matrix",
    "api.client.samples.analogous_years.lib.get_transform_data.stack_time_periods_by_ddmm"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.ay_tsfresh": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.distance_matrix.euclidean_dist_matrix",
    "api.client.samples.analogous_years.lib.feature_extractions.ts_feature_extraction"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.combined_methods_distances": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.final_ranks_computation.merge_using_index_column",
    "functools.reduce",
    "list"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.common_start_date": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "Exception",
    "len",
    "max",
    "range"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.distance_matrix": {
  "data": {
   "shadows": "api.client.samples.analogous_years.lib.distance_matrix"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.enso_data": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.feature_extractions": {
  "data": {
   "shadows": "api.client.samples.analogous_years.lib.feature_extractions"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.generate_correlation_matrix": {
  "data": {
   "lineno": 249
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.generate_correlation_scatterplots": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.final_ranks_computation.DEFAULT_API_HOST",
    "api.client.samples.analogous_years.lib.final_ranks_computation.os",
    "groclient.GroClient",
    "seaborn.pairplot",
    "seaborn.set"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.get_file_name": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.final_ranks_computation.DEFAULT_API_HOST",
    "groclient.GroClient",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.get_transform_data": {
  "data": {
   "shadows": "api.client.samples.analogous_years.lib.get_transform_data"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.merge_using_index_column": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pandas.merge"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.ranked_df_dictionary": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.distance_matrix.scaled_labeled_method_distances",
    "api.client.samples.analogous_years.lib.final_ranks_computation.ay_cumulative",
    "api.client.samples.analogous_years.lib.final_ranks_computation.ay_dtw",
    "api.client.samples.analogous_years.lib.final_ranks_computation.ay_euclidean",
    "api.client.samples.analogous_years.lib.final_ranks_computation.ay_tsfresh",
    "api.client.samples.analogous_years.lib.final_ranks_computation.time_series",
    "value"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.reduce": {
  "data": {
   "shadows": "functools.reduce"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.save_to_csv": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.final_ranks_computation.DEFAULT_API_HOST",
    "api.client.samples.analogous_years.lib.final_ranks_computation.os",
    "groclient.GroClient"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.sns": {
  "data": {
   "shadows": "seaborn"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation.time_series": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "Exception",
    "api.client.samples.analogous_years.lib.get_transform_data.extract_time_periods_by_dates",
    "api.client.samples.analogous_years.lib.get_transform_data.get_data"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation_test": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation_test.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation_test.combined_methods_distances": {
  "data": {
   "shadows": "api.client.samples.analogous_years.lib.final_ranks_computation.combined_methods_distances"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation_test.data_combined_methods": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation_test.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.final_ranks_computation_test.test_combined_methods_distances": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.final_ranks_computation.combined_methods_distances",
    "api.client.samples.analogous_years.lib.final_ranks_computation_test.data_combined_methods",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.analogous_years.lib.get_transform_data.combine_subregions": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data.dates_to_period_string": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data.extract_time_periods_by_dates": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.get_transform_data.dates_to_period_string",
    "api.client.samples.analogous_years.lib.get_transform_data.loop_initiation_dates",
    "dateutil.relativedelta.relativedelta",
    "pandas.concat",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data.get_data": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "combine_subregions",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data.loop_initiation_dates": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "ValueError",
    "dateutil.parser.parse",
    "dateutil.relativedelta.relativedelta"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data.parse": {
  "data": {
   "shadows": "dateutil.parser.parse"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.get_transform_data.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.get_transform_data.relativedelta": {
  "data": {
   "shadows": "dateutil.relativedelta.relativedelta"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.get_transform_data.stack_time_periods_by_ddmm": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pandas.pivot_table"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.GroClient": {
  "data": {
   "shadows": "groclient.GroClient"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.create_test_data": {
  "data": {
   "lineno": 11
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.create_test_data_for_get_data": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.get_transform_data": {
  "data": {
   "shadows": "api.client.samples.analogous_years.lib.get_transform_data"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.test_combine_subregions_nodate": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "KeyError",
    "api.client.samples.analogous_years.lib.get_transform_data.combine_subregions",
    "api.client.samples.analogous_years.lib.get_transform_data_test.create_test_data",
    "api.client.samples.analogous_years.lib.get_transform_data_test.pytest",
    "pandas.DataFrame",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.test_combine_subregions_with_nosubregion": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.get_transform_data.combine_subregions",
    "api.client.samples.analogous_years.lib.get_transform_data_test.create_test_data",
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.test_combine_subregions_with_subregion": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.get_transform_data.combine_subregions",
    "api.client.samples.analogous_years.lib.get_transform_data_test.create_test_data",
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.test_dates_to_period_string": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.get_transform_data.dates_to_period_string",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.test_extract_time_periods_by_dates_invalid_test_data": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "KeyError",
    "api.client.samples.analogous_years.lib.get_transform_data.extract_time_periods_by_dates",
    "api.client.samples.analogous_years.lib.get_transform_data_test.create_test_data",
    "api.client.samples.analogous_years.lib.get_transform_data_test.pytest",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.test_extract_time_periods_by_dates_invalid_test_dates": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError",
    "api.client.samples.analogous_years.lib.get_transform_data.extract_time_periods_by_dates",
    "api.client.samples.analogous_years.lib.get_transform_data_test.create_test_data",
    "api.client.samples.analogous_years.lib.get_transform_data_test.pytest",
    "pandas.DataFrame",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.test_extract_time_periods_by_dates_with_non_unique_dates": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.get_transform_data.extract_time_periods_by_dates",
    "api.client.samples.analogous_years.lib.get_transform_data_test.create_test_data",
    "list",
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.test_get_data": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.get_transform_data.get_data",
    "api.client.samples.analogous_years.lib.get_transform_data_test.create_test_data_for_get_data",
    "api.client.samples.analogous_years.lib.get_transform_data_test.mock",
    "groclient.GroClient",
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.test_loop_initiation_dates": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.get_transform_data.loop_initiation_dates",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.test_loop_initiation_dates_invalid_final_greater_than_max": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "ValueError",
    "api.client.samples.analogous_years.lib.get_transform_data.loop_initiation_dates",
    "api.client.samples.analogous_years.lib.get_transform_data_test.pytest",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.test_loop_initiation_dates_invalid_final_greater_than_year_from_initial": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "api.client.samples.analogous_years.lib.get_transform_data.loop_initiation_dates",
    "api.client.samples.analogous_years.lib.get_transform_data_test.pytest",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.test_loop_initiation_dates_invalid_initial_greater_than_final": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ValueError",
    "api.client.samples.analogous_years.lib.get_transform_data.loop_initiation_dates",
    "api.client.samples.analogous_years.lib.get_transform_data_test.pytest",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.test_stack_time_periods_by_ddmm_nonunique_dates": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "KeyError",
    "api.client.samples.analogous_years.lib.get_transform_data.stack_time_periods_by_ddmm",
    "api.client.samples.analogous_years.lib.get_transform_data_test.create_test_data",
    "api.client.samples.analogous_years.lib.get_transform_data_test.pytest",
    "pandas.DataFrame",
    "pandas.to_datetime"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.get_transform_data_test.test_stack_time_periods_by_ddmm_unique_dates": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.get_transform_data.stack_time_periods_by_ddmm",
    "api.client.samples.analogous_years.lib.get_transform_data_test.create_test_data",
    "numpy.nan",
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.lib.utils": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.analogous_years.lib.utils.validation": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.analogous_years.lib.utils.validation.top_k": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.run_analogous_years": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "api.client.samples.analogous_years.run_analogous_years.main"
   ]
  },
  "type": "module"
 },
 "api.client.samples.analogous_years.run_analogous_years.API_HOST": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "api.client.samples.analogous_years.run_analogous_years.GroClient": {
  "data": {
   "shadows": "groclient.GroClient"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.run_analogous_years.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.run_analogous_years.check_if_exists": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception",
    "api.client.samples.analogous_years.run_analogous_years.API_HOST",
    "groclient.GroClient"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.run_analogous_years.final_ranks_computation": {
  "data": {
   "shadows": "api.client.samples.analogous_years.lib.final_ranks_computation"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.run_analogous_years.get_data_series_list": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.run_analogous_years.API_HOST",
    "api.client.samples.analogous_years.run_analogous_years.check_if_exists",
    "api.client.samples.analogous_years.run_analogous_years.list_length_validator",
    "checking",
    "functools.partial",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.run_analogous_years.list_length_validator": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.run_analogous_years.argparse",
    "len"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.run_analogous_years.main": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.lib.final_ranks_computation.analogous_years",
    "api.client.samples.analogous_years.lib.final_ranks_computation.generate_correlation_matrix",
    "api.client.samples.analogous_years.lib.final_ranks_computation.generate_correlation_scatterplots",
    "api.client.samples.analogous_years.lib.final_ranks_computation.get_file_name",
    "api.client.samples.analogous_years.lib.final_ranks_computation.save_to_csv",
    "api.client.samples.analogous_years.run_analogous_years.argparse",
    "api.client.samples.analogous_years.run_analogous_years.get_data_series_list",
    "api.client.samples.analogous_years.run_analogous_years.os",
    "api.client.samples.analogous_years.run_analogous_years.str2bool",
    "api.client.samples.analogous_years.run_analogous_years.valid_date",
    "float",
    "int",
    "str"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.run_analogous_years.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.run_analogous_years.parse": {
  "data": {
   "shadows": "dateutil.parser.parse"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.run_analogous_years.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "api.client.samples.analogous_years.run_analogous_years.str2bool": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "api.client.samples.analogous_years.run_analogous_years.argparse",
    "bool",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "api.client.samples.analogous_years.run_analogous_years.valid_date": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ValueError",
    "api.client.samples.analogous_years.run_analogous_years.argparse",
    "dateutil.parser.parse"
   ]
  },
  "type": "function"
 },
 "api.client.samples.batch_queries.batch_queries": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "api.client.samples.batch_queries.batch_queries.main"
   ]
  },
  "type": "module"
 },
 "api.client.samples.batch_queries.batch_queries.GroClient": {
  "data": {
   "shadows": "groclient.GroClient"
  },
  "type": "import"
 },
 "api.client.samples.batch_queries.batch_queries.main": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "api.client.samples.batch_queries.batch_queries.os",
    "dict",
    "groclient.GroClient",
    "len",
    "print",
    "zip"
   ]
  },
  "type": "function"
 },
 "api.client.samples.batch_queries.batch_queries.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "api.client.samples.crop_models": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.crop_models.cash_crops": {
  "data": {
   "symbols_in_volume": [
    "api.client.samples.crop_models.cash_crops.ACCESS_TOKEN",
    "api.client.samples.crop_models.cash_crops.ANNUAL",
    "api.client.samples.crop_models.cash_crops.API_HOST",
    "api.client.samples.crop_models.cash_crops.AVOCADOS",
    "api.client.samples.crop_models.cash_crops.BRAZIL",
    "api.client.samples.crop_models.cash_crops.BRAZ_ARABICA",
    "api.client.samples.crop_models.cash_crops.CASSAVA",
    "api.client.samples.crop_models.cash_crops.CEPEA",
    "api.client.samples.crop_models.cash_crops.COCOA",
    "api.client.samples.crop_models.cash_crops.COMPOSITE_PRICES",
    "api.client.samples.crop_models.cash_crops.DAILY",
    "api.client.samples.crop_models.cash_crops.ETA_PCT",
    "api.client.samples.crop_models.cash_crops.ETA_PCT_MEDIAN",
    "api.client.samples.crop_models.cash_crops.ET_VALUE",
    "api.client.samples.crop_models.cash_crops.FEWSNET1D",
    "api.client.samples.crop_models.cash_crops.FEWSNET1M",
    "api.client.samples.crop_models.cash_crops.GIMMS_MODIS",
    "api.client.samples.crop_models.cash_crops.GLOBCOVER",
    "api.client.samples.crop_models.cash_crops.GRINDINGS",
    "api.client.samples.crop_models.cash_crops.GROYM",
    "api.client.samples.crop_models.cash_crops.HARV_AREA",
    "api.client.samples.crop_models.cash_crops.ICCO",
    "api.client.samples.crop_models.cash_crops.ICO",
    "api.client.samples.crop_models.cash_crops.KENYA_NAIROBI",
    "api.client.samples.crop_models.cash_crops.LAND_COVER",
    "api.client.samples.crop_models.cash_crops.LST",
    "api.client.samples.crop_models.cash_crops.LST_SRC",
    "api.client.samples.crop_models.cash_crops.MOISTURE",
    "api.client.samples.crop_models.cash_crops.MONTHLY",
    "api.client.samples.crop_models.cash_crops.NAFIS",
    "api.client.samples.crop_models.cash_crops.NDVI_DIFF_10YR_MEAN",
    "api.client.samples.crop_models.cash_crops.POINT_IN_TIME",
    "api.client.samples.crop_models.cash_crops.POTENT_ETA",
    "api.client.samples.crop_models.cash_crops.PRODUCER_PRICE",
    "api.client.samples.crop_models.cash_crops.RAINFED_CROPLAND",
    "api.client.samples.crop_models.cash_crops.SAO_PAULO",
    "api.client.samples.crop_models.cash_crops.SIXTEENDAY",
    "api.client.samples.crop_models.cash_crops.SMOS",
    "api.client.samples.crop_models.cash_crops.SOIL_AVAIL",
    "api.client.samples.crop_models.cash_crops.SOYBEANS",
    "api.client.samples.crop_models.cash_crops.SUGARCANE",
    "api.client.samples.crop_models.cash_crops.TEMPERATURE",
    "api.client.samples.crop_models.cash_crops.UNICA",
    "api.client.samples.crop_models.cash_crops.UNITED_STATES",
    "api.client.samples.crop_models.cash_crops.VEG_ANOMALIES",
    "api.client.samples.crop_models.cash_crops.WEEKLY",
    "api.client.samples.crop_models.cash_crops.WHOLESALE_PX",
    "api.client.samples.crop_models.cash_crops.WORLD",
    "api.client.samples.crop_models.cash_crops.YIELD",
    "api.client.samples.crop_models.cash_crops.client",
    "api.client.samples.crop_models.cash_crops.os",
    "groclient.GroClient",
    "print"
   ]
  },
  "type": "module"
 },
 "api.client.samples.crop_models.cash_crops.ACCESS_TOKEN": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.ANNUAL": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.API_HOST": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.AVOCADOS": {
  "data": {
   "lineno": 66
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.BRAZIL": {
  "data": {
   "lineno": 71
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.BRAZ_ARABICA": {
  "data": {
   "lineno": 62
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.CASSAVA": {
  "data": {
   "lineno": 61
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.CEPEA": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.COCOA": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.COFFEE": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.COMPOSITE_PRICES": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.COTTON_LINT": {
  "data": {
   "lineno": 59
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.DAILY": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.EIGHTDAY": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.ETA_PCT": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.ETA_PCT_MEDIAN": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.ET_VALUE": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.FEWSNET1D": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.FEWSNET1M": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.GIMMS_MODIS": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.GLOBCOVER": {
  "data": {
   "lineno": 86
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.GRINDINGS": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.GROYM": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.GroClient": {
  "data": {
   "shadows": "groclient.GroClient"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.cash_crops.HARV_AREA": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.ICCO": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.ICO": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.KENYA_NAIROBI": {
  "data": {
   "lineno": 72
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.LAND_COVER": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.LST": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.LST_SRC": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.MATO_GROSSO": {
  "data": {
   "lineno": 75
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.MOISTURE": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.MONTHLY": {
  "data": {
   "lineno": 96
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.NAFIS": {
  "data": {
   "lineno": 88
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.NDVI_DIFF_10YR_MEAN": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.POINT_IN_TIME": {
  "data": {
   "lineno": 99
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.POTENT_ETA": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.PRODUCER_PRICE": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.QUARTERLY": {
  "data": {
   "lineno": 97
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.RAINFED_CROPLAND": {
  "data": {
   "lineno": 64
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.SAO_PAULO": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.SIXTEENDAY": {
  "data": {
   "lineno": 95
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.SMOS": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.SOIL_AVAIL": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.SOIL_MOISTURE": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.SOYBEANS": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.SUGARCANE": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.TEMPERATURE": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.UNICA": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.UNITED_STATES": {
  "data": {
   "lineno": 73
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.VEG_ANOMALIES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.WEEKLY": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.WHOLESALE_PX": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.WORLD": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.YIELD": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.client": {
  "data": {
   "lineno": 103
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.cash_crops.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.crop_model": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.crop_models.crop_model.CropModel": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "api.client.crop_model.CropModel"
   ]
  },
  "type": "class"
 },
 "api.client.samples.crop_models.crop_model.CropModel.__init__": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "api.client.samples.crop_models.crop_model.CropModel",
    "super"
   ]
  },
  "type": "function"
 },
 "api.client.samples.crop_models.crop_model.crop_model": {
  "data": {
   "shadows": "api.client.crop_model"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.crop_model.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.crop_model.map": {
  "data": {
   "shadows": "builtins.map"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.crop_model.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.crop_model.str": {
  "data": {
   "shadows": "builtins.str"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.crop_model.unicodecsv": {
  "data": {
   "shadows": "unicodecsv"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.crop_model.zip": {
  "data": {
   "shadows": "builtins.zip"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.soybeans": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "api.client.samples.crop_models.soybeans.main"
   ]
  },
  "type": "module"
 },
 "api.client.samples.crop_models.soybeans.CropModel": {
  "data": {
   "shadows": "api.client.crop_model.CropModel"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.soybeans.add_brazil_soybeans_yield": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "print"
   ]
  },
  "type": "function"
 },
 "api.client.samples.crop_models.soybeans.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.soybeans.get_brazil_soybeans_weighted_ndvi": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "api.client.samples.crop_models.soybeans.groclient.lib": {
  "data": {
   "shadows": "groclient.lib"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.soybeans.main": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "api.client.crop_model.CropModel",
    "api.client.samples.crop_models.soybeans.add_brazil_soybeans_yield",
    "api.client.samples.crop_models.soybeans.argparse",
    "api.client.samples.crop_models.soybeans.get_brazil_soybeans_weighted_ndvi",
    "api.client.samples.crop_models.soybeans.os",
    "print"
   ]
  },
  "type": "function"
 },
 "api.client.samples.crop_models.soybeans.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.soybeans.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.soybeans.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.sugar": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "api.client.samples.crop_models.sugar.main"
   ]
  },
  "type": "module"
 },
 "api.client.samples.crop_models.sugar.API_HOST": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "api.client.samples.crop_models.sugar.CropModel": {
  "data": {
   "shadows": "api.client.crop_model.CropModel"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.sugar.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.sugar.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.sugar.groclient.lib": {
  "data": {
   "shadows": "groclient.lib"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.sugar.main": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "api.client.crop_model.CropModel",
    "api.client.samples.crop_models.sugar.API_HOST",
    "api.client.samples.crop_models.sugar.argparse",
    "api.client.samples.crop_models.sugar.getpass",
    "api.client.samples.crop_models.sugar.os",
    "api.client.samples.crop_models.sugar.sys",
    "api.client.samples.crop_models.sugar.unicodecsv",
    "open",
    "print"
   ]
  },
  "type": "function"
 },
 "api.client.samples.crop_models.sugar.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.sugar.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.sugar.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "api.client.samples.crop_models.sugar.unicodecsv": {
  "data": {
   "shadows": "unicodecsv"
  },
  "type": "import"
 },
 "api.client.samples.quick_start": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "api.client.samples.quick_start.main",
    "api.client.samples.quick_start.os"
   ]
  },
  "type": "module"
 },
 "api.client.samples.quick_start.ACCESS_TOKEN": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "api.client.samples.quick_start.API_HOST": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "api.client.samples.quick_start.GroClient": {
  "data": {
   "shadows": "groclient.GroClient"
  },
  "type": "import"
 },
 "api.client.samples.quick_start.OUTPUT_FILENAME": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "api.client.samples.quick_start.main": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "api.client.samples.quick_start.ACCESS_TOKEN",
    "api.client.samples.quick_start.API_HOST",
    "api.client.samples.quick_start.OUTPUT_FILENAME",
    "api.client.samples.quick_start.unicodecsv",
    "groclient.GroClient",
    "open"
   ]
  },
  "type": "function"
 },
 "api.client.samples.quick_start.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "api.client.samples.quick_start.unicodecsv": {
  "data": {
   "shadows": "unicodecsv"
  },
  "type": "import"
 },
 "api.client.samples.search": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "api.client.samples.search.main",
    "api.client.samples.search.os"
   ]
  },
  "type": "module"
 },
 "api.client.samples.search.ACCESS_TOKEN": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "api.client.samples.search.API_HOST": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "api.client.samples.search.GroClient": {
  "data": {
   "shadows": "groclient.GroClient"
  },
  "type": "import"
 },
 "api.client.samples.search.main": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "api.client.samples.search.ACCESS_TOKEN",
    "api.client.samples.search.API_HOST",
    "groclient.GroClient",
    "len",
    "next",
    "print",
    "set"
   ]
  },
  "type": "function"
 },
 "api.client.samples.search.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.similar_regions.find_similar_regions": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "api.client.samples.similar_regions.find_similar_regions.main"
   ]
  },
  "type": "module"
 },
 "api.client.samples.similar_regions.find_similar_regions.SimilarRegion": {
  "data": {
   "shadows": "api.client.samples.similar_regions.similar_region.SimilarRegion"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.find_similar_regions.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.find_similar_regions.csv": {
  "data": {
   "shadows": "unicodecsv"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.find_similar_regions.main": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "api.client.samples.similar_regions.find_similar_regions.argparse",
    "api.client.samples.similar_regions.metric.metric_properties",
    "api.client.samples.similar_regions.metric.metric_weights",
    "api.client.samples.similar_regions.similar_region.SimilarRegion",
    "int",
    "open",
    "print",
    "str",
    "unicodecsv.DictWriter",
    "unicodecsv.QUOTE_MINIMAL"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.find_similar_regions.metric_properties": {
  "data": {
   "shadows": "api.client.samples.similar_regions.metric.metric_properties"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.find_similar_regions.metric_weights": {
  "data": {
   "shadows": "api.client.samples.similar_regions.metric.metric_weights"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.metric": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.similar_regions.metric.metric_properties": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "api.client.samples.similar_regions.metric.metric_weights": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "api.client.samples.similar_regions.similar_region": {
  "data": {
   "symbols_in_volume": [
    "api.client.samples.similar_regions.similar_region.os"
   ]
  },
  "type": "module"
 },
 "api.client.samples.similar_regions.similar_region.ACCESS_TOKEN": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "api.client.samples.similar_regions.similar_region.API_HOST": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "api.client.samples.similar_regions.similar_region.BallTree": {
  "data": {
   "shadows": "sklearn.neighbors.BallTree"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.similar_region.BatchError": {
  "data": {
   "shadows": "groclient.client.BatchError"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.similar_region.DROP_MODE": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "api.client.samples.similar_regions.similar_region.DistanceMetric": {
  "data": {
   "shadows": "sklearn.neighbors.DistanceMetric"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.similar_region.GroClient": {
  "data": {
   "shadows": "groclient.client.GroClient"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.similar_region.MAX_RETRY_FAILED_REGIONS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "api.client.samples.similar_regions.similar_region.OK_TO_PROCEED_REGION_FRACTION": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "api.client.samples.similar_regions.similar_region.REGIONS_PER_QUERY": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion.__init__": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "__name__",
    "api.client.samples.similar_regions.similar_region.ACCESS_TOKEN",
    "api.client.samples.similar_regions.similar_region.API_HOST",
    "api.client.samples.similar_regions.similar_region.T_INT_PER_YEAR",
    "api.client.samples.similar_regions.similar_region.logging",
    "api.client.samples.similar_regions.similar_region.os",
    "api.client.samples.similar_regions.similar_region.tempfile",
    "dict",
    "groclient.client.GroClient",
    "len",
    "set",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion._data_download": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "api.client.samples.similar_regions.similar_region.os",
    "enumerate",
    "len",
    "list",
    "numpy.array",
    "numpy.concatenate",
    "numpy.load",
    "numpy.nan",
    "numpy.savez_compressed",
    "numpy.zeros",
    "set",
    "sorted",
    "str"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion._drop_incomplete": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "api.client.samples.similar_regions.similar_region.DROP_MODE",
    "api.client.samples.similar_regions.similar_region.OK_TO_PROCEED_REGION_FRACTION",
    "dict",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.MultiIndex.from_product",
    "range",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion._fill_block": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "datetime.date",
    "divmod",
    "int",
    "len",
    "min",
    "numpy.nan",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion._get_distances": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "max",
    "numpy.abs",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion._get_distances_means": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "max",
    "numpy.abs",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion._initialize_regions": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "dict",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion._load_property_for_regions": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "api.client.samples.similar_regions.similar_region.ACCESS_TOKEN",
    "api.client.samples.similar_regions.similar_region.API_HOST",
    "api.client.samples.similar_regions.similar_region.MAX_RETRY_FAILED_REGIONS",
    "api.client.samples.similar_regions.similar_region.REGIONS_PER_QUERY",
    "api.client.samples.similar_regions.similar_region.math",
    "dict",
    "groclient.client.GroClient",
    "len",
    "min",
    "numpy.concatenate",
    "numpy.nan",
    "numpy.zeros",
    "range",
    "tqdm.tqdm"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion._load_property_for_regions.map_response": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "groclient.client.BatchError",
    "len",
    "type"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion._load_property_from_file": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "Exception",
    "int",
    "numpy.array",
    "numpy.divmod",
    "numpy.tile",
    "numpy.where",
    "numpy.zeros",
    "pandas.read_csv",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion._merge_into_prop_data": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "dict",
    "len",
    "range",
    "sorted",
    "zip"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion._normalize": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "len",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion._reformat": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.concatenate"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion.build": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "len",
    "set",
    "sklearn.neighbors.BallTree",
    "sklearn.neighbors.DistanceMetric.get_metric"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion.build.dist_function": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "max",
    "numpy.sqrt",
    "numpy.sum",
    "numpy.trace",
    "scipy.linalg.sqrtm"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.SimilarRegion.similar_to": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "min",
    "numpy.array",
    "numpy.concatenate",
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.similar_region.T_INT_PER_YEAR": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "api.client.samples.similar_regions.similar_region.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.similar_region.get_default_logger": {
  "data": {
   "shadows": "groclient.lib.get_default_logger"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.similar_region.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.similar_region.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.similar_region.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.similar_region.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.similar_region.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.similar_region.sqrtm": {
  "data": {
   "shadows": "scipy.linalg.sqrtm"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.similar_region.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.similar_region.tqdm": {
  "data": {
   "shadows": "tqdm.tqdm"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.test_transform": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "api.client.samples.similar_regions.test_transform.unittest"
   ]
  },
  "type": "module"
 },
 "api.client.samples.similar_regions.test_transform.FourierCoef": {
  "data": {
   "shadows": "api.client.samples.similar_regions.transform.FourierCoef"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.test_transform.TransformTests": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "api.client.samples.similar_regions.test_transform.unittest"
   ]
  },
  "type": "class"
 },
 "api.client.samples.similar_regions.test_transform.TransformTests.setUp": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "api.client.samples.similar_regions.transform.FourierCoef"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.test_transform.TransformTests.test_fill_in_days": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "api.client.samples.similar_regions.transform._fill_in_blank_days",
    "datetime.datetime",
    "float",
    "numpy.array",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.test_transform.TransformTests.test_fourier": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "numpy.argmax",
    "numpy.linspace",
    "numpy.pi",
    "numpy.sin",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.test_transform._fill_in_blank_days": {
  "data": {
   "shadows": "api.client.samples.similar_regions.transform._fill_in_blank_days"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.test_transform.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.test_transform.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.test_transform.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.transform": {
  "data": {},
  "type": "module"
 },
 "api.client.samples.similar_regions.transform.FourierCoef": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "api.client.samples.similar_regions.transform.Transformer"
   ]
  },
  "type": "class"
 },
 "api.client.samples.similar_regions.transform.FourierCoef.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.transform.FourierCoef.transform": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.abs",
    "numpy.r_.astype",
    "scipy.fftpack.fft"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.transform.Transformer": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "sklearn.base.TransformerMixin"
   ]
  },
  "type": "class"
 },
 "api.client.samples.similar_regions.transform.Transformer.__init__": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.transform.Transformer.get_num_features": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.transform.Transformer.transform": {
  "data": {
   "lineno": 27
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.transform.TransformerMixin": {
  "data": {
   "shadows": "sklearn.base.TransformerMixin"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.transform._fill_in_blank_days": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "api.client.samples.similar_regions.transform.dateparser",
    "datetime.timedelta",
    "float",
    "len",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.transform._impute": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "datetime.datetime.strptime",
    "float",
    "len",
    "numpy.arange",
    "numpy.interp"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.transform.dateparser": {
  "data": {
   "shadows": "dateparser"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.transform.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.transform.fft": {
  "data": {
   "shadows": "scipy.fftpack.fft"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.transform.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "api.client.samples.similar_regions.transform.post_process_timeseries": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "_impute",
    "api.client.samples.similar_regions.transform.FourierCoef"
   ]
  },
  "type": "function"
 },
 "api.client.samples.similar_regions.transform.timedelta": {
  "data": {
   "shadows": "datetime.timedelta"
  },
  "type": "import"
 },
 "api.client.utils": {
  "data": {
   "shadows": "groclient.utils"
  },
  "type": "import"
 },
 "groclient": {
  "data": {},
  "type": "module"
 },
 "groclient.CropModel": {
  "data": {
   "shadows": "groclient.crop_model.CropModel"
  },
  "type": "import"
 },
 "groclient.GroClient": {
  "data": {
   "shadows": "groclient.client.GroClient"
  },
  "type": "import"
 },
 "groclient.__main__": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "main"
   ]
  },
  "type": "module"
 },
 "groclient.__version__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "groclient.batch_client_test": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "groclient.batch_client_test.BatchError": {
  "data": {
   "shadows": "groclient.client.BatchError"
  },
  "type": "import"
 },
 "groclient.batch_client_test.BatchTests": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "groclient.batch_client_test.mock_rank_series_by_source",
    "groclient.batch_client_test.mock_tornado_fetch",
    "mock.MagicMock",
    "mock.patch",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "groclient.batch_client_test.BatchTests.setUp": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "groclient.GroClient",
    "groclient.batch_client_test.MOCK_HOST",
    "groclient.batch_client_test.MOCK_TOKEN",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "groclient.batch_client_test.BatchTests.tearDown": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "tornado.ioloop.IOLoop.clear_current"
   ]
  },
  "type": "function"
 },
 "groclient.batch_client_test.BatchTests.test_async_get_df": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "datetime.date"
   ]
  },
  "type": "function"
 },
 "groclient.batch_client_test.BatchTests.test_batch_async_get_data_points": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "groclient.batch_client_test.BatchTests.test_batch_async_get_data_points_bad_request_error": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "groclient.client.BatchError",
    "groclient.mock_data.mock_error_selection",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "groclient.batch_client_test.BatchTests.test_batch_async_get_data_points_map_errors": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "Exception",
    "groclient.mock_data.mock_error_selection"
   ]
  },
  "type": "function"
 },
 "groclient.batch_client_test.BatchTests.test_batch_async_get_data_points_map_errors.raise_exception": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "Exception",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "groclient.batch_client_test.BatchTests.test_batch_async_get_data_points_map_function": {
  "data": {
   "lineno": 103
  },
  "type": "function"
 },
 "groclient.batch_client_test.BatchTests.test_batch_async_get_data_points_map_function.sum_results": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "groclient.batch_client_test.BatchTests.test_batch_async_get_data_points_multiple_clients": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "groclient.GroClient",
    "groclient.batch_client_test.MOCK_HOST",
    "groclient.batch_client_test.MOCK_TOKEN",
    "id"
   ]
  },
  "type": "function"
 },
 "groclient.batch_client_test.BatchTests.test_batch_async_rank_series_by_source": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "groclient.mock_data.mock_data_series",
    "len"
   ]
  },
  "type": "function"
 },
 "groclient.batch_client_test.Future": {
  "data": {
   "shadows": "tornado.concurrent.Future"
  },
  "type": "import"
 },
 "groclient.batch_client_test.GroClient": {
  "data": {
   "shadows": "groclient.GroClient"
  },
  "type": "import"
 },
 "groclient.batch_client_test.HTTPError": {
  "data": {
   "shadows": "tornado.httpclient.HTTPError"
  },
  "type": "import"
 },
 "groclient.batch_client_test.HTTPResponse": {
  "data": {
   "shadows": "tornado.httpclient.HTTPResponse"
  },
  "type": "import"
 },
 "groclient.batch_client_test.IOLoop": {
  "data": {
   "shadows": "tornado.ioloop.IOLoop"
  },
  "type": "import"
 },
 "groclient.batch_client_test.MOCK_HOST": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "groclient.batch_client_test.MOCK_TOKEN": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "groclient.batch_client_test.MagicMock": {
  "data": {
   "shadows": "mock.MagicMock"
  },
  "type": "import"
 },
 "groclient.batch_client_test.StringIO": {
  "data": {
   "shadows": "StringIO.StringIO"
  },
  "type": "import"
 },
 "groclient.batch_client_test.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "groclient.batch_client_test.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "groclient.batch_client_test.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "groclient.batch_client_test.mock_data_series": {
  "data": {
   "shadows": "groclient.mock_data.mock_data_series"
  },
  "type": "import"
 },
 "groclient.batch_client_test.mock_error_selection": {
  "data": {
   "shadows": "groclient.mock_data.mock_error_selection"
  },
  "type": "import"
 },
 "groclient.batch_client_test.mock_list_of_series_points": {
  "data": {
   "shadows": "groclient.mock_data.mock_list_of_series_points"
  },
  "type": "import"
 },
 "groclient.batch_client_test.mock_rank_series_by_source": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "groclient.mock_data.mock_data_series"
   ]
  },
  "type": "function"
 },
 "groclient.batch_client_test.mock_tornado_fetch": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "StringIO.StringIO",
    "groclient.batch_client_test.json",
    "groclient.mock_data.mock_list_of_series_points",
    "groclient.utils.str_camel_to_snake",
    "int",
    "tornado.concurrent.Future",
    "tornado.httpclient.HTTPError",
    "tornado.httpclient.HTTPResponse"
   ]
  },
  "type": "function"
 },
 "groclient.batch_client_test.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "groclient.batch_client_test.str_camel_to_snake": {
  "data": {
   "shadows": "groclient.utils.str_camel_to_snake"
  },
  "type": "import"
 },
 "groclient.cfg": {
  "data": {},
  "type": "module"
 },
 "groclient.cfg.API_HOST": {
  "data": {
   "lineno": 1
  },
  "type": "constant"
 },
 "groclient.cfg.MAX_QUERIES_PER_SECOND": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "groclient.cfg.MAX_RESULT_COMBINATION_DEPTH": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "groclient.cfg.MAX_RETRIES": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "groclient.cfg.MAX_SERIES_PER_COMB": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "groclient.cfg.TIMEOUT": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "groclient.cli": {
  "data": {},
  "type": "module"
 },
 "groclient.cli.GroClient": {
  "data": {
   "shadows": "groclient.GroClient"
  },
  "type": "import"
 },
 "groclient.cli.argparse": {
  "data": {
   "shadows": "argparse"
  },
  "type": "import"
 },
 "groclient.cli.getpass": {
  "data": {
   "shadows": "getpass"
  },
  "type": "import"
 },
 "groclient.cli.groclient.cfg": {
  "data": {
   "shadows": "groclient.cfg"
  },
  "type": "import"
 },
 "groclient.cli.groclient.lib": {
  "data": {
   "shadows": "groclient.lib"
  },
  "type": "import"
 },
 "groclient.cli.main": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "groclient.GroClient",
    "groclient.cli.argparse",
    "groclient.cli.getpass",
    "groclient.cli.os",
    "groclient.cli.pick_random_data_series",
    "groclient.cli.print_one_data_series",
    "groclient.cli.write_one_data_series",
    "next",
    "print"
   ]
  },
  "type": "function"
 },
 "groclient.cli.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "groclient.cli.pick_random_data_series": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "int",
    "len",
    "random.random"
   ]
  },
  "type": "function"
 },
 "groclient.cli.print_one_data_series": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "print"
   ]
  },
  "type": "function"
 },
 "groclient.cli.random": {
  "data": {
   "shadows": "random.random"
  },
  "type": "import"
 },
 "groclient.cli.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "groclient.cli.unicodecsv": {
  "data": {
   "shadows": "unicodecsv"
  },
  "type": "import"
 },
 "groclient.cli.write_one_data_series": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "groclient.cli.unicodecsv",
    "open",
    "str"
   ]
  },
  "type": "function"
 },
 "groclient.client": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "groclient.client.APIError": {
  "data": {
   "shadows": "groclient.lib.APIError"
  },
  "type": "import"
 },
 "groclient.client.AsyncHTTPClient": {
  "data": {
   "shadows": "tornado.httpclient.AsyncHTTPClient"
  },
  "type": "import"
 },
 "groclient.client.BatchError": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "groclient.lib.APIError"
   ]
  },
  "type": "class"
 },
 "groclient.client.BatchError.__init__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "Exception",
    "hasattr",
    "tornado.escape.json_decode"
   ]
  },
  "type": "function"
 },
 "groclient.client.DATA_SERIES_UNIQUE_TYPES_ID": {
  "data": {
   "shadows": "groclient.constants.DATA_SERIES_UNIQUE_TYPES_ID"
  },
  "type": "import"
 },
 "groclient.client.ENTITY_KEY_TO_TYPE": {
  "data": {
   "shadows": "groclient.constants.ENTITY_KEY_TO_TYPE"
  },
  "type": "import"
 },
 "groclient.client.GroClient": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "groclient.client.GroClient.GDH": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "KeyError",
    "groclient.client.pandas",
    "groclient.constants.DATA_SERIES_UNIQUE_TYPES_ID",
    "groclient.utils.intersect",
    "groclient.utils.zip_selections",
    "int",
    "tuple"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.__del__": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "groclient.client.GroClient.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "Exception",
    "groclient.client.pandas",
    "groclient.lib.get_default_logger",
    "set",
    "tornado.httpclient.AsyncHTTPClient",
    "tornado.ioloop.IOLoop"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.add_data_series": {
  "data": {
   "lineno": 1316
  },
  "type": "function"
 },
 "groclient.client.GroClient.add_points_to_df": {
  "data": {
   "lineno": 962,
   "symbols_in_volume": [
    "groclient.client.pandas",
    "groclient.utils.dict_unnest"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.add_single_data_series": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "dict",
    "frozenset",
    "groclient.utils.dict_unnest"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.async_get_data": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "groclient.cfg.MAX_RETRIES",
    "groclient.cfg.TIMEOUT",
    "groclient.client.BatchError",
    "groclient.client.json",
    "groclient.client.time",
    "groclient.lib.get_version_info",
    "groclient.lib.redirect",
    "hasattr",
    "log_request",
    "tornado.escape.json_decode",
    "tornado.gen.Return",
    "tornado.gen.coroutine",
    "tornado.httpclient.HTTPError",
    "tornado.httpclient.HTTPRequest",
    "urllib.urlencode"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.async_get_data.log_request": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "dict",
    "groclient.client.time"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.async_get_df": {
  "data": {
   "lineno": 954
  },
  "type": "function"
 },
 "groclient.client.GroClient.async_rank_series_by_source": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "list",
    "tornado.gen.Return",
    "tornado.gen.coroutine"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.batch_async_get_data_points": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "map_result"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.batch_async_queue": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "len",
    "list",
    "tornado.queues.Queue",
    "type"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.batch_async_queue.consumer": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "func",
    "list",
    "map_result",
    "tornado.gen.coroutine",
    "type"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.batch_async_queue.main": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "groclient.cfg.MAX_QUERIES_PER_SECOND",
    "producer",
    "range",
    "tornado.gen.coroutine"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.batch_async_queue.map_result": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "groclient.client.GroClient.batch_async_queue.producer": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "enumerate",
    "groclient.client.time"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.batch_async_rank_series_by_source": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "map_result"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.convert_unit": {
  "data": {
   "lineno": 1443,
   "symbols_in_volume": [
    "Exception",
    "groclient.lib.convert_value"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.find_data_series": {
  "data": {
   "lineno": 1210,
   "symbols_in_volume": [
    "dict",
    "frozenset",
    "groclient.cfg.MAX_RESULT_COMBINATION_DEPTH",
    "groclient.cfg.MAX_SERIES_PER_COMB",
    "groclient.client.itertools",
    "groclient.constants.ENTITY_KEY_TO_TYPE",
    "result_filter",
    "set"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_allowed_units": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "groclient.lib.get_allowed_units"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_available": {
  "data": {
   "lineno": 382,
   "symbols_in_volume": [
    "groclient.lib.get_available"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_available_timefrequency": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "groclient.lib.get_available_timefrequency"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_data_points": {
  "data": {
   "lineno": 991,
   "symbols_in_volume": [
    "functools.partial",
    "groclient.lib.get_data_points",
    "list",
    "map"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_data_points_generator": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "groclient.client.BatchError",
    "groclient.lib.get_data_call_params",
    "groclient.lib.list_of_series_to_single_series",
    "tornado.gen.Return",
    "tornado.gen.coroutine"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_data_series": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "groclient.lib.get_data_series"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_data_series_list": {
  "data": {
   "lineno": 1169,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_descendant": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "groclient.lib.get_descendant"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_descendant_regions": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "groclient.lib.get_descendant_regions"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_df": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "functools.partial",
    "groclient.constants.DATA_SERIES_UNIQUE_TYPES_ID",
    "groclient.utils.intersect"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_df.get_name": {
  "data": {
   "lineno": 939,
   "symbols_in_volume": [
    "groclient.constants.ENTITY_KEY_TO_TYPE"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_geo_centre": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "groclient.lib.get_geo_centre"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_geojson": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "groclient.lib.get_geojson"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_geojsons": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "groclient.lib.get_geojsons"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_logger": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_names_for_selection": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "groclient.constants.ENTITY_KEY_TO_TYPE"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_provinces": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "groclient.lib.REGION_LEVELS"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.get_top": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "groclient.lib.get_top"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.list_available": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "groclient.lib.list_available"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.lookup": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "groclient.lib.lookup"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.lookup_belongs": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "groclient.lib.lookup_belongs"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.lookup_unit_abbreviation": {
  "data": {
   "lineno": 485
  },
  "type": "function"
 },
 "groclient.client.GroClient.rank_series_by_source": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "groclient.lib.rank_series_by_source"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.search": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "groclient.lib.search"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.search_and_lookup": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "groclient.lib.search_and_lookup"
   ]
  },
  "type": "function"
 },
 "groclient.client.GroClient.search_for_entity": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "groclient.client.HTTPError": {
  "data": {
   "shadows": "tornado.httpclient.HTTPError"
  },
  "type": "import"
 },
 "groclient.client.HTTPRequest": {
  "data": {
   "shadows": "tornado.httpclient.HTTPRequest"
  },
  "type": "import"
 },
 "groclient.client.IOLoop": {
  "data": {
   "shadows": "tornado.ioloop.IOLoop"
  },
  "type": "import"
 },
 "groclient.client.Queue": {
  "data": {
   "shadows": "tornado.queues.Queue"
  },
  "type": "import"
 },
 "groclient.client.cfg": {
  "data": {
   "shadows": "groclient.cfg"
  },
  "type": "import"
 },
 "groclient.client.dict_unnest": {
  "data": {
   "shadows": "groclient.utils.dict_unnest"
  },
  "type": "import"
 },
 "groclient.client.gen": {
  "data": {
   "shadows": "tornado.gen"
  },
  "type": "import"
 },
 "groclient.client.intersect": {
  "data": {
   "shadows": "groclient.utils.intersect"
  },
  "type": "import"
 },
 "groclient.client.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "groclient.client.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "groclient.client.json_decode": {
  "data": {
   "shadows": "tornado.escape.json_decode"
  },
  "type": "import"
 },
 "groclient.client.lib": {
  "data": {
   "shadows": "groclient.lib"
  },
  "type": "import"
 },
 "groclient.client.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "groclient.client.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "groclient.client.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "groclient.client.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "groclient.client.urlencode": {
  "data": {
   "shadows": "urllib.urlencode"
  },
  "type": "import"
 },
 "groclient.client.zip_selections": {
  "data": {
   "shadows": "groclient.utils.zip_selections"
  },
  "type": "import"
 },
 "groclient.client_test": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "groclient.client_test.GroClient": {
  "data": {
   "shadows": "groclient.GroClient"
  },
  "type": "import"
 },
 "groclient.client_test.GroClientTests": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "groclient.client_test.mock_get_allowed_units",
    "groclient.client_test.mock_get_available",
    "groclient.client_test.mock_get_available_timefrequency",
    "groclient.client_test.mock_get_data_points",
    "groclient.client_test.mock_get_data_series",
    "groclient.client_test.mock_get_descendant",
    "groclient.client_test.mock_get_descendant_regions",
    "groclient.client_test.mock_get_geo_centre",
    "groclient.client_test.mock_get_geojson",
    "groclient.client_test.mock_get_geojsons",
    "groclient.client_test.mock_get_top",
    "groclient.client_test.mock_list_available",
    "groclient.client_test.mock_lookup",
    "groclient.client_test.mock_rank_series_by_source",
    "groclient.client_test.mock_search",
    "mock.MagicMock",
    "mock.patch",
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "groclient.client_test.GroClientTests.setUp": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "groclient.GroClient",
    "groclient.client_test.MOCK_HOST",
    "groclient.client_test.MOCK_TOKEN",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_GDH": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "datetime.date",
    "len"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_add_data_series": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "groclient.mock_data.mock_data_series"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_add_points_to_df": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "datetime.date",
    "groclient.mock_data.mock_data_series"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_add_single_data_series_adds_copy": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "dict",
    "groclient.mock_data.mock_data_series",
    "len"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_add_single_data_series_allows_metadata": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "dict",
    "groclient.mock_data.mock_data_series",
    "len"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_convert_unit": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_find_data_series": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_find_data_series.only_accept_production_quantity": {
  "data": {
   "lineno": 436
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_allowed_units": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_available": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_available_timefrequency": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_data_points": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "dict",
    "groclient.mock_data.mock_data_series"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_data_series": {
  "data": {
   "lineno": 254
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_data_series_list": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "groclient.mock_data.mock_data_series"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_descendant": {
  "data": {
   "lineno": 305
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_descendant_regions": {
  "data": {
   "lineno": 312
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_df": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "datetime.date",
    "groclient.mock_data.mock_data_series",
    "groclient.utils.zip_selections"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_df_show_available_date": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "datetime.date",
    "groclient.mock_data.mock_data_series"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_df_show_revisions": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "datetime.date",
    "groclient.mock_data.mock_data_series"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_geo_centre": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_geojson": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_geojsons": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_logger": {
  "data": {
   "lineno": 235
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_names_for_selection": {
  "data": {
   "lineno": 465
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_provinces": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "groclient.mock_data.mock_entities"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_get_top": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_list_available": {
  "data": {
   "lineno": 242
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_lookup": {
  "data": {
   "lineno": 245
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_lookup_belongs": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_lookup_unit_abbreviation": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_rank_series_by_source": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "next"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_search": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "dict",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_search_and_lookup": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "next"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.GroClientTests.test_search_for_entity": {
  "data": {
   "lineno": 457
  },
  "type": "function"
 },
 "groclient.client_test.MOCK_HOST": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "groclient.client_test.MOCK_TOKEN": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "groclient.client_test.MagicMock": {
  "data": {
   "shadows": "mock.MagicMock"
  },
  "type": "import"
 },
 "groclient.client_test.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "groclient.client_test.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "groclient.client_test.mock_data_points": {
  "data": {
   "shadows": "groclient.mock_data.mock_data_points"
  },
  "type": "import"
 },
 "groclient.client_test.mock_data_series": {
  "data": {
   "shadows": "groclient.mock_data.mock_data_series"
  },
  "type": "import"
 },
 "groclient.client_test.mock_entities": {
  "data": {
   "shadows": "groclient.mock_data.mock_entities"
  },
  "type": "import"
 },
 "groclient.client_test.mock_get_allowed_units": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "groclient.mock_data.mock_entities.values"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.mock_get_available": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "groclient.mock_data.mock_entities.values",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.mock_get_available_timefrequency": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "groclient.client_test.mock_get_data_points": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "groclient.mock_data.mock_data_points",
    "int",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.mock_get_data_series": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "dict",
    "groclient.mock_data.mock_data_series"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.mock_get_descendant": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "groclient.mock_data.mock_entities.values"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.mock_get_descendant_regions": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "groclient.mock_data.mock_entities.values",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.mock_get_geo_centre": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "groclient.client_test.mock_get_geojson": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "groclient.client_test.mock_get_geojsons": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "groclient.client_test.mock_get_top": {
  "data": {
   "lineno": 153
  },
  "type": "function"
 },
 "groclient.client_test.mock_list_available": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "dict",
    "groclient.mock_data.mock_data_series"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.mock_lookup": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "groclient.mock_data.mock_entities",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.mock_rank_series_by_source": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "groclient.mock_data.mock_data_series"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.mock_search": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "groclient.mock_data.mock_entities.values"
   ]
  },
  "type": "function"
 },
 "groclient.client_test.patch": {
  "data": {
   "shadows": "mock.patch"
  },
  "type": "import"
 },
 "groclient.client_test.zip_selections": {
  "data": {
   "shadows": "groclient.utils.zip_selections"
  },
  "type": "import"
 },
 "groclient.constants": {
  "data": {
   "symbols_in_volume": [
    "groclient.constants.DATA_SERIES_UNIQUE_TYPES_ID"
   ]
  },
  "type": "module"
 },
 "groclient.constants.DATA_POINTS_UNIQUE_COLS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "groclient.constants.DATA_SERIES_UNIQUE_TYPES_ID": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "groclient.constants.ENTITY_KEY_TO_TYPE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "groclient.constants.ENTITY_TYPES_PLURAL": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "groclient.constants.REGION_LEVELS": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "groclient.crop_model": {
  "data": {},
  "type": "module"
 },
 "groclient.crop_model.CropModel": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "groclient.client.GroClient"
   ]
  },
  "type": "class"
 },
 "groclient.crop_model.CropModel.compute_crop_weighted_series": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "builtins.zip",
    "groclient.crop_model.pandas",
    "set",
    "weighting_func"
   ]
  },
  "type": "function"
 },
 "groclient.crop_model.CropModel.compute_gdd": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "Exception",
    "datetime.datetime.strptime",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "groclient.crop_model.CropModel.compute_weights": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "builtins.map",
    "builtins.zip",
    "float",
    "groclient.crop_model.numpy",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "groclient.crop_model.CropModel.compute_weights.mapper": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "groclient.crop_model.CropModel.growing_degree_days": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "Exception",
    "StopIteration",
    "float",
    "next"
   ]
  },
  "type": "function"
 },
 "groclient.crop_model.GroClient": {
  "data": {
   "shadows": "groclient.client.GroClient"
  },
  "type": "import"
 },
 "groclient.crop_model.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "groclient.crop_model.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "groclient.crop_model.map": {
  "data": {
   "shadows": "builtins.map"
  },
  "type": "import"
 },
 "groclient.crop_model.numpy": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "groclient.crop_model.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "groclient.crop_model.zip": {
  "data": {
   "shadows": "builtins.zip"
  },
  "type": "import"
 },
 "groclient.lib": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "__name__",
    "groclient.lib._VERSIONS",
    "groclient.lib.doctest",
    "groclient.lib.platform",
    "pkg_resources.DistributionNotFound",
    "pkg_resources.get_distribution"
   ]
  },
  "type": "module"
 },
 "groclient.lib.APIError": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "groclient.lib.APIError.__init__": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "groclient.lib.DATA_SERIES_UNIQUE_TYPES_ID": {
  "data": {
   "shadows": "groclient.constants.DATA_SERIES_UNIQUE_TYPES_ID"
  },
  "type": "import"
 },
 "groclient.lib.DistributionNotFound": {
  "data": {
   "shadows": "pkg_resources.DistributionNotFound"
  },
  "type": "import"
 },
 "groclient.lib.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "groclient.lib.REGION_LEVELS": {
  "data": {
   "shadows": "groclient.constants.REGION_LEVELS"
  },
  "type": "import"
 },
 "groclient.lib._VERSIONS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "groclient.lib.cfg": {
  "data": {
   "shadows": "groclient.cfg"
  },
  "type": "import"
 },
 "groclient.lib.convert_value": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "float"
   ]
  },
  "type": "function"
 },
 "groclient.lib.doctest": {
  "data": {
   "shadows": "doctest"
  },
  "type": "import"
 },
 "groclient.lib.get_access_token": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Exception",
    "groclient.cfg.MAX_RETRIES",
    "groclient.lib.get_default_logger",
    "groclient.lib.requests"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_allowed_units": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "backports.functools_lru_cache.lru_cache",
    "groclient.lib.get_data"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_available": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "backports.functools_lru_cache.lru_cache",
    "groclient.lib.get_data"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_available_timefrequency": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "dict",
    "groclient.lib.get_data",
    "groclient.lib.get_params_from_selection",
    "groclient.lib.make_key",
    "iter",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_data": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "groclient.cfg.MAX_RETRIES",
    "groclient.lib.APIError",
    "groclient.lib.get_default_logger",
    "groclient.lib.get_version_info",
    "groclient.lib.redirect",
    "groclient.lib.requests",
    "groclient.lib.time",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_data_call_params": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "groclient.lib.get_params_from_selection",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_data_points": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "groclient.lib.get_data",
    "groclient.lib.get_data_call_params",
    "groclient.lib.list_of_series_to_single_series"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_data_series": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "any",
    "groclient.lib.get_data",
    "groclient.lib.get_default_logger",
    "groclient.lib.get_params_from_selection"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_default_logger": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "__name__",
    "groclient.lib.logging"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_descendant": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "builtins.str",
    "groclient.lib.get_data",
    "groclient.lib.lookup"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_descendant_regions": {
  "data": {
   "lineno": 624,
   "symbols_in_volume": [
    "builtins.str",
    "groclient.lib.get_data",
    "groclient.lib.lookup"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_distribution": {
  "data": {
   "shadows": "pkg_resources.get_distribution"
  },
  "type": "import"
 },
 "groclient.lib.get_geo_centre": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "groclient.lib.get_data"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_geojson": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "groclient.lib.get_geojsons",
    "groclient.lib.json"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_geojsons": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "backports.functools_lru_cache.lru_cache",
    "groclient.lib.get_data"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_params_from_selection": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_source_ranking": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "dict",
    "groclient.lib.get_data",
    "groclient.lib.get_params_from_selection",
    "groclient.lib.make_key",
    "iter",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_top": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "groclient.lib.get_data",
    "groclient.lib.get_params_from_selection"
   ]
  },
  "type": "function"
 },
 "groclient.lib.get_version_info": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "groclient.lib._VERSIONS"
   ]
  },
  "type": "function"
 },
 "groclient.lib.groclient.utils": {
  "data": {
   "shadows": "groclient.utils"
  },
  "type": "import"
 },
 "groclient.lib.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "groclient.lib.list_available": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "dict",
    "groclient.lib.get_data",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.lib.list_of_series_to_single_series": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "dict",
    "isinstance",
    "len",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.lib.logging": {
  "data": {
   "shadows": "logging"
  },
  "type": "import"
 },
 "groclient.lib.lookup": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "TypeError",
    "groclient.lib.lookup_batch",
    "groclient.lib.lookup_single",
    "int",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.lib.lookup_batch": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "groclient.lib.get_data"
   ]
  },
  "type": "function"
 },
 "groclient.lib.lookup_belongs": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "builtins.str",
    "groclient.lib.lookup"
   ]
  },
  "type": "function"
 },
 "groclient.lib.lookup_single": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "Exception",
    "KeyError",
    "backports.functools_lru_cache.lru_cache",
    "builtins.str",
    "groclient.lib.get_data"
   ]
  },
  "type": "function"
 },
 "groclient.lib.make_key": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "groclient.lib.memoize": {
  "data": {
   "shadows": "backports.functools_lru_cache.lru_cache"
  },
  "type": "import"
 },
 "groclient.lib.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "groclient.lib.rank_series_by_source": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "ValueError",
    "collections.OrderedDict",
    "enumerate",
    "groclient.constants.DATA_SERIES_UNIQUE_TYPES_ID",
    "groclient.lib.get_source_ranking",
    "groclient.lib.json"
   ]
  },
  "type": "function"
 },
 "groclient.lib.redirect": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "groclient.lib.requests": {
  "data": {
   "shadows": "requests"
  },
  "type": "import"
 },
 "groclient.lib.search": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "backports.functools_lru_cache.lru_cache",
    "groclient.lib.get_data"
   ]
  },
  "type": "function"
 },
 "groclient.lib.search_and_lookup": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "builtins.str",
    "groclient.lib.lookup",
    "groclient.lib.search"
   ]
  },
  "type": "function"
 },
 "groclient.lib.str": {
  "data": {
   "shadows": "builtins.str"
  },
  "type": "import"
 },
 "groclient.lib.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "groclient.lib.universal_search": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "backports.functools_lru_cache.lru_cache",
    "groclient.lib.get_data"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test": {
  "data": {},
  "type": "module"
 },
 "groclient.lib_test.DATA_SERIES_UNIQUE_TYPES_ID": {
  "data": {
   "shadows": "groclient.constants.DATA_SERIES_UNIQUE_TYPES_ID"
  },
  "type": "import"
 },
 "groclient.lib_test.LOOKUP_MAP": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "groclient.lib_test.MOCK_HOST": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "groclient.lib_test.MOCK_TOKEN": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "groclient.lib_test.dict_assign": {
  "data": {
   "shadows": "groclient.utils.dict_assign"
  },
  "type": "import"
 },
 "groclient.lib_test.get_distribution": {
  "data": {
   "shadows": "pkg_resources.get_distribution"
  },
  "type": "import"
 },
 "groclient.lib_test.initialize_requests_mocker_and_get_mock_data": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "groclient.lib_test.lib": {
  "data": {
   "shadows": "groclient.lib"
  },
  "type": "import"
 },
 "groclient.lib_test.lookup_mock": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "groclient.lib_test.LOOKUP_MAP",
    "int",
    "isinstance",
    "list",
    "str"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.mock": {
  "data": {
   "shadows": "mock"
  },
  "type": "import"
 },
 "groclient.lib_test.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "groclient.lib_test.platform": {
  "data": {
   "shadows": "platform"
  },
  "type": "import"
 },
 "groclient.lib_test.test_descendant_regions": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "groclient.lib.get_descendant_regions",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.lookup_mock",
    "groclient.lib_test.mock"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_get_available": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "groclient.lib.get_available",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.initialize_requests_mocker_and_get_mock_data",
    "groclient.lib_test.mock"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_get_data_points": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "groclient.lib.get_data_points",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.initialize_requests_mocker_and_get_mock_data",
    "groclient.lib_test.mock"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_get_data_series": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "groclient.lib.get_data_series",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.initialize_requests_mocker_and_get_mock_data",
    "groclient.lib_test.mock"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_get_descendant": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "groclient.lib.get_descendant",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.lookup_mock",
    "groclient.lib_test.mock"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_get_geo_centre": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "groclient.lib.get_geo_centre",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.initialize_requests_mocker_and_get_mock_data",
    "groclient.lib_test.mock"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_get_geo_json": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "groclient.lib.get_geojson",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.mock"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_get_geo_jsons": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "groclient.lib.get_geojsons",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.initialize_requests_mocker_and_get_mock_data",
    "groclient.lib_test.mock"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_get_source_ranking": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "groclient.lib.get_source_ranking",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.mock",
    "len"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_get_top": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "groclient.lib.get_top",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.mock"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_list_available": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "groclient.lib.list_available",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.initialize_requests_mocker_and_get_mock_data",
    "groclient.lib_test.mock"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_list_available_snake_to_camel": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "groclient.lib.list_available",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.initialize_requests_mocker_and_get_mock_data",
    "groclient.lib_test.mock"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_list_of_series_to_single_series": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "groclient.lib.list_of_series_to_single_series",
    "len"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_lookup_belongs": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "groclient.lib.lookup_belongs",
    "groclient.lib_test.LOOKUP_MAP",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.mock",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_lookup_with_numpy": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "groclient.lib.lookup",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.initialize_requests_mocker_and_get_mock_data",
    "groclient.lib_test.mock",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_multiple_lookups": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "groclient.lib.lookup",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.initialize_requests_mocker_and_get_mock_data",
    "groclient.lib_test.mock"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_rank_series_by_source": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "enumerate",
    "groclient.lib.rank_series_by_source",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.mock",
    "groclient.utils.dict_assign"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_search": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "groclient.lib.search",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.initialize_requests_mocker_and_get_mock_data",
    "groclient.lib_test.mock"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_search_and_lookup": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "groclient.lib.search_and_lookup",
    "groclient.lib_test.LOOKUP_MAP",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.mock",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.lib_test.test_single_lookup": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "groclient.lib.lookup",
    "groclient.lib_test.MOCK_HOST",
    "groclient.lib_test.MOCK_TOKEN",
    "groclient.lib_test.initialize_requests_mocker_and_get_mock_data",
    "groclient.lib_test.mock"
   ]
  },
  "type": "function"
 },
 "groclient.mock_data": {
  "data": {},
  "type": "module"
 },
 "groclient.mock_data.mock_data_points": {
  "data": {
   "lineno": 148
  },
  "type": "constant"
 },
 "groclient.mock_data.mock_data_series": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "groclient.mock_data.mock_entities": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "groclient.mock_data.mock_error_selection": {
  "data": {
   "lineno": 193
  },
  "type": "constant"
 },
 "groclient.mock_data.mock_list_of_series_points": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "groclient.utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "groclient.utils.DATA_SERIES_UNIQUE_TYPES_ID": {
  "data": {
   "shadows": "groclient.constants.DATA_SERIES_UNIQUE_TYPES_ID"
  },
  "type": "import"
 },
 "groclient.utils.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "groclient.utils.dict_assign": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "dict"
   ]
  },
  "type": "function"
 },
 "groclient.utils.dict_reformat_keys": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "format_func"
   ]
  },
  "type": "function"
 },
 "groclient.utils.dict_unnest": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "dict",
    "enumerate",
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.utils.intersect": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "filter",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.utils.list_chunk": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "float",
    "int",
    "len",
    "math.ceil",
    "range"
   ]
  },
  "type": "function"
 },
 "groclient.utils.memoize": {
  "data": {
   "shadows": "backports.functools_lru_cache.lru_cache"
  },
  "type": "import"
 },
 "groclient.utils.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "groclient.utils.str_camel_to_snake": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "backports.functools_lru_cache.lru_cache",
    "groclient.utils.re"
   ]
  },
  "type": "function"
 },
 "groclient.utils.str_snake_to_camel": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "backports.functools_lru_cache.lru_cache",
    "list"
   ]
  },
  "type": "function"
 },
 "groclient.utils.zip_selections": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "dict",
    "groclient.constants.DATA_SERIES_UNIQUE_TYPES_ID",
    "list",
    "zip"
   ]
  },
  "type": "function"
 },
 "groclient.utils_test": {
  "data": {},
  "type": "module"
 },
 "groclient.utils_test.TestCase": {
  "data": {
   "shadows": "unittest.TestCase"
  },
  "type": "import"
 },
 "groclient.utils_test.UtilsTests": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "groclient.utils_test.UtilsTests.test_dict_reformat_keys": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "groclient.utils.dict_reformat_keys",
    "groclient.utils.str_camel_to_snake",
    "groclient.utils.str_snake_to_camel"
   ]
  },
  "type": "function"
 },
 "groclient.utils_test.UtilsTests.test_dict_unnest": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "groclient.utils.dict_unnest"
   ]
  },
  "type": "function"
 },
 "groclient.utils_test.UtilsTests.test_intersect": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "groclient.utils.intersect"
   ]
  },
  "type": "function"
 },
 "groclient.utils_test.UtilsTests.test_list_chunk": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "groclient.utils.list_chunk"
   ]
  },
  "type": "function"
 },
 "groclient.utils_test.UtilsTests.test_str_camel_to_snake": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "groclient.utils.str_camel_to_snake"
   ]
  },
  "type": "function"
 },
 "groclient.utils_test.UtilsTests.test_str_snake_to_camel": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "groclient.utils.str_snake_to_camel"
   ]
  },
  "type": "function"
 },
 "groclient.utils_test.UtilsTests.test_zip_selections": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "groclient.utils.zip_selections"
   ]
  },
  "type": "function"
 },
 "groclient.utils_test.dict_reformat_keys": {
  "data": {
   "shadows": "groclient.utils.dict_reformat_keys"
  },
  "type": "import"
 },
 "groclient.utils_test.dict_unnest": {
  "data": {
   "shadows": "groclient.utils.dict_unnest"
  },
  "type": "import"
 },
 "groclient.utils_test.intersect": {
  "data": {
   "shadows": "groclient.utils.intersect"
  },
  "type": "import"
 },
 "groclient.utils_test.list_chunk": {
  "data": {
   "shadows": "groclient.utils.list_chunk"
  },
  "type": "import"
 },
 "groclient.utils_test.str_camel_to_snake": {
  "data": {
   "shadows": "groclient.utils.str_camel_to_snake"
  },
  "type": "import"
 },
 "groclient.utils_test.str_snake_to_camel": {
  "data": {
   "shadows": "groclient.utils.str_snake_to_camel"
  },
  "type": "import"
 },
 "groclient.utils_test.zip_selections": {
  "data": {
   "shadows": "groclient.utils.zip_selections"
  },
  "type": "import"
 }
}