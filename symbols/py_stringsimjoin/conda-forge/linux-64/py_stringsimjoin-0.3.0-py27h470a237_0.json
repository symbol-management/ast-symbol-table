{
 "py_stringsimjoin": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.OverlapFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.PositionFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.position_filter.PositionFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.PrefixFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.SizeFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.size_filter.SizeFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.SuffixFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.__use_cython__": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "py_stringsimjoin.__version__": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "py_stringsimjoin.apply_matcher": {
  "data": {
   "shadows": "py_stringsimjoin.matcher.apply_matcher.apply_matcher"
  },
  "type": "import"
 },
 "py_stringsimjoin.cosine_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.cosine_join.cosine_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.dataframe_column_to_str": {
  "data": {
   "shadows": "py_stringsimjoin.utils.converter.dataframe_column_to_str"
  },
  "type": "import"
 },
 "py_stringsimjoin.datasets": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.datasets.base": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.datasets.base.dirname": {
  "data": {
   "shadows": "os.path.dirname"
  },
  "type": "import"
 },
 "py_stringsimjoin.datasets.base.join": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "py_stringsimjoin.datasets.base.load_books_dataset": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join",
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.datasets.base.load_person_dataset": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join",
    "pandas.read_csv"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.datasets.base.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.dice_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.dice_join.dice_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.edit_distance_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.filter.filter": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.filter.filter.Filter": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.filter.filter.Filter.__init__": {
  "data": {
   "lineno": 14
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.filter.Filter.filter_candset": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "min",
    "pandas.concat",
    "py_stringsimjoin.filter.filter._filter_candset_split",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch",
    "py_stringsimjoin.utils.generic_helper.split_table",
    "py_stringsimjoin.utils.validation.validate_attr",
    "py_stringsimjoin.utils.validation.validate_attr_type",
    "py_stringsimjoin.utils.validation.validate_input_table",
    "py_stringsimjoin.utils.validation.validate_key_attr",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.filter.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.filter._filter_candset_split": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "len",
    "list",
    "py_stringsimjoin.filter.filter.pyprind",
    "py_stringsimjoin.utils.generic_helper.build_dict_from_table"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.filter.build_dict_from_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.build_dict_from_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.filter.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.filter.get_num_processes_to_launch": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.filter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.filter.pyprind": {
  "data": {
   "shadows": "pyprind"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.filter.split_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.split_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.filter.validate_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.filter.validate_attr_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.filter.validate_input_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_input_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.filter.validate_key_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_key_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.filter_utils": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.filter.filter_utils.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.filter_utils.floor": {
  "data": {
   "shadows": "math.floor"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.filter_utils.get_overlap_threshold": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "math.ceil",
    "math.sqrt",
    "max",
    "round"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.filter_utils.get_prefix_length": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "int",
    "math.ceil",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.filter_utils.get_size_lower_bound": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "int",
    "math.ceil",
    "round"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.filter_utils.get_size_upper_bound": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "int",
    "math.floor",
    "round",
    "sys.maxsize"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.filter_utils.maxsize": {
  "data": {
   "shadows": "sys.maxsize"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.filter_utils.sqrt": {
  "data": {
   "shadows": "math.sqrt"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.filter.overlap_filter.COMP_OP_MAP": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.Filter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter.Filter"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.InvertedIndex": {
  "data": {
   "shadows": "py_stringsimjoin.index.inverted_index.InvertedIndex"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.OverlapFilter": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "py_stringsimjoin.filter.filter.Filter"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.filter.overlap_filter.OverlapFilter.__init__": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "py_stringsimjoin.utils.validation.validate_comp_op_for_sim_measure",
    "py_stringsimjoin.utils.validation.validate_threshold",
    "py_stringsimjoin.utils.validation.validate_tokenizer",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.overlap_filter.OverlapFilter.filter_pair": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pandas.isnull",
    "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP",
    "py_stringsimjoin.utils.simfunctions.overlap"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.overlap_filter.OverlapFilter.filter_tables": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "min",
    "pandas.concat",
    "py_stringsimjoin.filter.overlap_filter._filter_tables_split",
    "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array",
    "py_stringsimjoin.utils.generic_helper.get_attrs_to_project",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "py_stringsimjoin.utils.generic_helper.split_table",
    "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value",
    "py_stringsimjoin.utils.validation.validate_attr",
    "py_stringsimjoin.utils.validation.validate_attr_type",
    "py_stringsimjoin.utils.validation.validate_input_table",
    "py_stringsimjoin.utils.validation.validate_key_attr",
    "py_stringsimjoin.utils.validation.validate_output_attrs",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.overlap_filter.OverlapFilter.find_candidates": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.overlap_filter.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter._filter_tables_split": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "comp_fn",
    "len",
    "pandas.DataFrame",
    "py_stringsimjoin.filter.overlap_filter.pyprind",
    "py_stringsimjoin.index.inverted_index.InvertedIndex",
    "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP",
    "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices",
    "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables",
    "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables",
    "py_stringsimjoin.utils.simfunctions.overlap",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.overlap_filter.convert_dataframe_to_array": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.find_output_attribute_indices": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.get_attrs_to_project": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_attrs_to_project"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.get_num_processes_to_launch": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.get_output_header_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.get_output_row_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.get_pairs_with_missing_value": {
  "data": {
   "shadows": "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.overlap": {
  "data": {
   "shadows": "py_stringsimjoin.utils.simfunctions.overlap"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.pyprind": {
  "data": {
   "shadows": "pyprind"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.split_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.split_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.validate_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.validate_attr_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.validate_comp_op_for_sim_measure": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_comp_op_for_sim_measure"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.validate_input_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_input_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.validate_key_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_key_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.validate_output_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_output_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.validate_threshold": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_threshold"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.overlap_filter.validate_tokenizer": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_tokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.filter.position_filter.Filter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter.Filter"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.PositionFilter": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "py_stringsimjoin.filter.filter.Filter"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.filter.position_filter.PositionFilter.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "py_stringsimjoin.utils.validation.validate_sim_measure_type",
    "py_stringsimjoin.utils.validation.validate_threshold",
    "py_stringsimjoin.utils.validation.validate_tokenizer_for_sim_measure",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.position_filter.PositionFilter.filter_pair": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "min",
    "pandas.isnull",
    "py_stringsimjoin.filter.filter_utils.get_overlap_threshold",
    "py_stringsimjoin.filter.filter_utils.get_prefix_length",
    "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_lists",
    "py_stringsimjoin.utils.token_ordering.order_using_token_ordering"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.position_filter.PositionFilter.filter_tables": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "min",
    "pandas.concat",
    "py_stringsimjoin.filter.position_filter._filter_tables_split",
    "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array",
    "py_stringsimjoin.utils.generic_helper.get_attrs_to_project",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "py_stringsimjoin.utils.generic_helper.split_table",
    "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value",
    "py_stringsimjoin.utils.validation.validate_attr",
    "py_stringsimjoin.utils.validation.validate_attr_type",
    "py_stringsimjoin.utils.validation.validate_input_table",
    "py_stringsimjoin.utils.validation.validate_key_attr",
    "py_stringsimjoin.utils.validation.validate_output_attrs",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.position_filter.PositionFilter.find_candidates": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "len",
    "max",
    "min",
    "py_stringsimjoin.filter.filter_utils.get_overlap_threshold",
    "py_stringsimjoin.filter.filter_utils.get_prefix_length",
    "py_stringsimjoin.filter.filter_utils.get_size_lower_bound",
    "py_stringsimjoin.filter.filter_utils.get_size_upper_bound",
    "six.moves.xrange"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.position_filter.PositionIndex": {
  "data": {
   "shadows": "py_stringsimjoin.index.position_index.PositionIndex"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter._filter_tables_split": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "py_stringsimjoin.filter.position_filter.pyprind",
    "py_stringsimjoin.index.position_index.PositionIndex",
    "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices",
    "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables",
    "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables",
    "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_tables",
    "py_stringsimjoin.utils.token_ordering.order_using_token_ordering",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.position_filter.convert_dataframe_to_array": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.find_output_attribute_indices": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.gen_token_ordering_for_lists": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_lists"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.gen_token_ordering_for_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.get_attrs_to_project": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_attrs_to_project"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.get_num_processes_to_launch": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.get_output_header_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.get_output_row_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.get_overlap_threshold": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter_utils.get_overlap_threshold"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.get_pairs_with_missing_value": {
  "data": {
   "shadows": "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.get_prefix_length": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter_utils.get_prefix_length"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.get_size_lower_bound": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter_utils.get_size_lower_bound"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.get_size_upper_bound": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter_utils.get_size_upper_bound"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.order_using_token_ordering": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.order_using_token_ordering"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.pyprind": {
  "data": {
   "shadows": "pyprind"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.split_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.split_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.validate_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.validate_attr_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.validate_input_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_input_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.validate_key_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_key_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.validate_output_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_output_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.validate_sim_measure_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_sim_measure_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.validate_threshold": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_threshold"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.validate_tokenizer_for_sim_measure": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_tokenizer_for_sim_measure"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.position_filter.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.filter.prefix_filter.Filter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter.Filter"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.PrefixFilter": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "py_stringsimjoin.filter.filter.Filter"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.filter.prefix_filter.PrefixFilter.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "py_stringsimjoin.utils.validation.validate_sim_measure_type",
    "py_stringsimjoin.utils.validation.validate_threshold",
    "py_stringsimjoin.utils.validation.validate_tokenizer_for_sim_measure",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.prefix_filter.PrefixFilter.filter_pair": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "len",
    "pandas.isnull",
    "py_stringsimjoin.filter.filter_utils.get_prefix_length",
    "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_lists",
    "py_stringsimjoin.utils.token_ordering.order_using_token_ordering",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.prefix_filter.PrefixFilter.filter_tables": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "min",
    "pandas.concat",
    "py_stringsimjoin.filter.prefix_filter._filter_tables_split",
    "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array",
    "py_stringsimjoin.utils.generic_helper.get_attrs_to_project",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "py_stringsimjoin.utils.generic_helper.split_table",
    "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value",
    "py_stringsimjoin.utils.validation.validate_attr",
    "py_stringsimjoin.utils.validation.validate_attr_type",
    "py_stringsimjoin.utils.validation.validate_input_table",
    "py_stringsimjoin.utils.validation.validate_key_attr",
    "py_stringsimjoin.utils.validation.validate_output_attrs",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.prefix_filter.PrefixFilter.find_candidates": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "len",
    "py_stringsimjoin.filter.filter_utils.get_prefix_length",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.prefix_filter.PrefixIndex": {
  "data": {
   "shadows": "py_stringsimjoin.index.prefix_index.PrefixIndex"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter._filter_tables_split": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "py_stringsimjoin.filter.prefix_filter.pyprind",
    "py_stringsimjoin.index.prefix_index.PrefixIndex",
    "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices",
    "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables",
    "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables",
    "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_tables",
    "py_stringsimjoin.utils.token_ordering.order_using_token_ordering"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.prefix_filter.convert_dataframe_to_array": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.find_output_attribute_indices": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.gen_token_ordering_for_lists": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_lists"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.gen_token_ordering_for_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.get_attrs_to_project": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_attrs_to_project"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.get_num_processes_to_launch": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.get_output_header_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.get_output_row_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.get_pairs_with_missing_value": {
  "data": {
   "shadows": "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.get_prefix_length": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter_utils.get_prefix_length"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.order_using_token_ordering": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.order_using_token_ordering"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.pyprind": {
  "data": {
   "shadows": "pyprind"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.split_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.split_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.validate_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.validate_attr_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.validate_input_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_input_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.validate_key_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_key_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.validate_output_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_output_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.validate_sim_measure_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_sim_measure_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.validate_threshold": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_threshold"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.prefix_filter.validate_tokenizer_for_sim_measure": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_tokenizer_for_sim_measure"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.filter.size_filter.Filter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter.Filter"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.SizeFilter": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "py_stringsimjoin.filter.filter.Filter"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.filter.size_filter.SizeFilter.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "py_stringsimjoin.utils.validation.validate_sim_measure_type",
    "py_stringsimjoin.utils.validation.validate_threshold",
    "py_stringsimjoin.utils.validation.validate_tokenizer_for_sim_measure",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.size_filter.SizeFilter.filter_pair": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "len",
    "pandas.isnull",
    "py_stringsimjoin.filter.filter_utils.get_size_lower_bound",
    "py_stringsimjoin.filter.filter_utils.get_size_upper_bound"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.size_filter.SizeFilter.filter_tables": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "min",
    "pandas.concat",
    "py_stringsimjoin.filter.size_filter._filter_tables_split",
    "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array",
    "py_stringsimjoin.utils.generic_helper.get_attrs_to_project",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "py_stringsimjoin.utils.generic_helper.split_table",
    "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value",
    "py_stringsimjoin.utils.validation.validate_attr",
    "py_stringsimjoin.utils.validation.validate_attr_type",
    "py_stringsimjoin.utils.validation.validate_input_table",
    "py_stringsimjoin.utils.validation.validate_key_attr",
    "py_stringsimjoin.utils.validation.validate_output_attrs",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.size_filter.SizeFilter.find_candidates": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "py_stringsimjoin.filter.filter_utils.get_size_lower_bound",
    "py_stringsimjoin.filter.filter_utils.get_size_upper_bound",
    "set",
    "six.moves.xrange"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.size_filter.SizeIndex": {
  "data": {
   "shadows": "py_stringsimjoin.index.size_index.SizeIndex"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter._filter_tables_split": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "py_stringsimjoin.filter.size_filter.pyprind",
    "py_stringsimjoin.index.size_index.SizeIndex",
    "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices",
    "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables",
    "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.size_filter.convert_dataframe_to_array": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.find_output_attribute_indices": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.get_attrs_to_project": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_attrs_to_project"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.get_num_processes_to_launch": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.get_output_header_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.get_output_row_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.get_pairs_with_missing_value": {
  "data": {
   "shadows": "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.get_size_lower_bound": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter_utils.get_size_lower_bound"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.get_size_upper_bound": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter_utils.get_size_upper_bound"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.pyprind": {
  "data": {
   "shadows": "pyprind"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.split_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.split_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.validate_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.validate_attr_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.validate_input_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_input_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.validate_key_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_key_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.validate_output_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_output_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.validate_sim_measure_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_sim_measure_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.validate_threshold": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_threshold"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.validate_tokenizer_for_sim_measure": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_tokenizer_for_sim_measure"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.size_filter.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.filter.suffix_filter.Filter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter.Filter"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.SuffixFilter": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "py_stringsimjoin.filter.filter.Filter"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.filter.suffix_filter.SuffixFilter.__init__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "py_stringsimjoin.utils.validation.validate_sim_measure_type",
    "py_stringsimjoin.utils.validation.validate_threshold",
    "py_stringsimjoin.utils.validation.validate_tokenizer_for_sim_measure",
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.suffix_filter.SuffixFilter._binary_search": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "int",
    "math.floor"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.suffix_filter.SuffixFilter._est_hamming_dist_lower_bound": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "abs",
    "int",
    "len",
    "math.floor",
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.suffix_filter.SuffixFilter._filter_suffix": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "py_stringsimjoin.filter.filter_utils.get_overlap_threshold"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.suffix_filter.SuffixFilter._partition": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "len",
    "min"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.suffix_filter.SuffixFilter.filter_pair": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "pandas.isnull",
    "py_stringsimjoin.filter.filter_utils.get_prefix_length",
    "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_lists",
    "py_stringsimjoin.utils.token_ordering.order_using_token_ordering"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.suffix_filter.SuffixFilter.filter_tables": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "min",
    "pandas.concat",
    "py_stringsimjoin.filter.suffix_filter._filter_tables_split",
    "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array",
    "py_stringsimjoin.utils.generic_helper.get_attrs_to_project",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "py_stringsimjoin.utils.generic_helper.split_table",
    "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value",
    "py_stringsimjoin.utils.validation.validate_attr",
    "py_stringsimjoin.utils.validation.validate_attr_type",
    "py_stringsimjoin.utils.validation.validate_input_table",
    "py_stringsimjoin.utils.validation.validate_key_attr",
    "py_stringsimjoin.utils.validation.validate_output_attrs",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.suffix_filter._filter_tables_split": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "py_stringsimjoin.filter.filter_utils.get_prefix_length",
    "py_stringsimjoin.filter.suffix_filter.pyprind",
    "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices",
    "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables",
    "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables",
    "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_tables",
    "py_stringsimjoin.utils.token_ordering.order_using_token_ordering"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.filter.suffix_filter.ceil": {
  "data": {
   "shadows": "math.ceil"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.convert_dataframe_to_array": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.find_output_attribute_indices": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.floor": {
  "data": {
   "shadows": "math.floor"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.gen_token_ordering_for_lists": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_lists"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.gen_token_ordering_for_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.get_attrs_to_project": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_attrs_to_project"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.get_num_processes_to_launch": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.get_output_header_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.get_output_row_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.get_overlap_threshold": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter_utils.get_overlap_threshold"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.get_pairs_with_missing_value": {
  "data": {
   "shadows": "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.get_prefix_length": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter_utils.get_prefix_length"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.order_using_token_ordering": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.order_using_token_ordering"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.pyprind": {
  "data": {
   "shadows": "pyprind"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.split_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.split_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.validate_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.validate_attr_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.validate_input_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_input_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.validate_key_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_key_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.validate_output_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_output_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.validate_sim_measure_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_sim_measure_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.validate_threshold": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_threshold"
  },
  "type": "import"
 },
 "py_stringsimjoin.filter.suffix_filter.validate_tokenizer_for_sim_measure": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_tokenizer_for_sim_measure"
  },
  "type": "import"
 },
 "py_stringsimjoin.get_install_path": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_install_path"
  },
  "type": "import"
 },
 "py_stringsimjoin.index": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.index.index": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.index.index.Index": {
  "data": {
   "lineno": 1,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.index.inverted_index": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.index.inverted_index.Index": {
  "data": {
   "shadows": "py_stringsimjoin.index.index.Index"
  },
  "type": "import"
 },
 "py_stringsimjoin.index.inverted_index.InvertedIndex": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "py_stringsimjoin.index.index.Index"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.index.inverted_index.InvertedIndex.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.index.inverted_index.InvertedIndex.build": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.index.inverted_index.InvertedIndex.probe": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "py_stringsimjoin.index.position_index": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.index.position_index.Index": {
  "data": {
   "shadows": "py_stringsimjoin.index.index.Index"
  },
  "type": "import"
 },
 "py_stringsimjoin.index.position_index.PositionIndex": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "py_stringsimjoin.index.index.Index"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.index.position_index.PositionIndex.__init__": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "super",
    "sys.maxsize"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.index.position_index.PositionIndex.build": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "len",
    "py_stringsimjoin.filter.filter_utils.get_prefix_length",
    "py_stringsimjoin.utils.token_ordering.order_using_token_ordering"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.index.position_index.PositionIndex.get_size": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "py_stringsimjoin.index.position_index.PositionIndex.probe": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "py_stringsimjoin.index.position_index.get_prefix_length": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter_utils.get_prefix_length"
  },
  "type": "import"
 },
 "py_stringsimjoin.index.position_index.maxsize": {
  "data": {
   "shadows": "sys.maxsize"
  },
  "type": "import"
 },
 "py_stringsimjoin.index.position_index.order_using_token_ordering": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.order_using_token_ordering"
  },
  "type": "import"
 },
 "py_stringsimjoin.index.prefix_index": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.index.prefix_index.Index": {
  "data": {
   "shadows": "py_stringsimjoin.index.index.Index"
  },
  "type": "import"
 },
 "py_stringsimjoin.index.prefix_index.PrefixIndex": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "py_stringsimjoin.index.index.Index"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.index.prefix_index.PrefixIndex.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.index.prefix_index.PrefixIndex.build": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "len",
    "py_stringsimjoin.filter.filter_utils.get_prefix_length",
    "py_stringsimjoin.utils.token_ordering.order_using_token_ordering"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.index.prefix_index.PrefixIndex.probe": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "py_stringsimjoin.index.prefix_index.get_prefix_length": {
  "data": {
   "shadows": "py_stringsimjoin.filter.filter_utils.get_prefix_length"
  },
  "type": "import"
 },
 "py_stringsimjoin.index.prefix_index.order_using_token_ordering": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.order_using_token_ordering"
  },
  "type": "import"
 },
 "py_stringsimjoin.index.size_index": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.index.size_index.Index": {
  "data": {
   "shadows": "py_stringsimjoin.index.index.Index"
  },
  "type": "import"
 },
 "py_stringsimjoin.index.size_index.SizeIndex": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": [
    "py_stringsimjoin.index.index.Index"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.index.size_index.SizeIndex.__init__": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "super",
    "sys.maxsize"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.index.size_index.SizeIndex.build": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.index.size_index.SizeIndex.probe": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "py_stringsimjoin.index.size_index.maxsize": {
  "data": {
   "shadows": "sys.maxsize"
  },
  "type": "import"
 },
 "py_stringsimjoin.jaccard_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.jaccard_join.jaccard_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.join": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.join.cosine_join": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.join.cosine_join.__use_cython__": {
  "data": {
   "shadows": "py_stringsimjoin.__use_cython__"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join.cosine_join": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "py_stringsimjoin.__use_cython__",
    "py_stringsimjoin.join.cosine_join_cy.cosine_join_cy",
    "py_stringsimjoin.join.cosine_join_py.cosine_join_py"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.join.cosine_join.cosine_join_cy": {
  "data": {
   "shadows": "py_stringsimjoin.join.cosine_join_cy.cosine_join_cy"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join.cosine_join_py": {
  "data": {
   "shadows": "py_stringsimjoin.join.cosine_join_py.cosine_join_py"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.join.cosine_join_py.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.convert_dataframe_to_array": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.cosine_join_py": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "min",
    "pandas.concat",
    "py_stringsimjoin.join.set_sim_join.set_sim_join",
    "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array",
    "py_stringsimjoin.utils.generic_helper.get_attrs_to_project",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "py_stringsimjoin.utils.generic_helper.split_table",
    "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value",
    "py_stringsimjoin.utils.validation.validate_attr",
    "py_stringsimjoin.utils.validation.validate_attr_type",
    "py_stringsimjoin.utils.validation.validate_comp_op_for_sim_measure",
    "py_stringsimjoin.utils.validation.validate_input_table",
    "py_stringsimjoin.utils.validation.validate_key_attr",
    "py_stringsimjoin.utils.validation.validate_output_attrs",
    "py_stringsimjoin.utils.validation.validate_threshold",
    "py_stringsimjoin.utils.validation.validate_tokenizer",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.join.cosine_join_py.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.get_attrs_to_project": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_attrs_to_project"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.get_num_processes_to_launch": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.get_pairs_with_missing_value": {
  "data": {
   "shadows": "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.set_sim_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.set_sim_join.set_sim_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.split_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.split_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.validate_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.validate_attr_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.validate_comp_op_for_sim_measure": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_comp_op_for_sim_measure"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.validate_input_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_input_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.validate_key_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_key_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.validate_output_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_output_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.validate_threshold": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_threshold"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.cosine_join_py.validate_tokenizer": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_tokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.join.dice_join.__use_cython__": {
  "data": {
   "shadows": "py_stringsimjoin.__use_cython__"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join.dice_join": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "py_stringsimjoin.__use_cython__",
    "py_stringsimjoin.join.dice_join_cy.dice_join_cy",
    "py_stringsimjoin.join.dice_join_py.dice_join_py"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.join.dice_join.dice_join_cy": {
  "data": {
   "shadows": "py_stringsimjoin.join.dice_join_cy.dice_join_cy"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join.dice_join_py": {
  "data": {
   "shadows": "py_stringsimjoin.join.dice_join_py.dice_join_py"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.join.dice_join_py.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.convert_dataframe_to_array": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.dice_join_py": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "min",
    "pandas.concat",
    "py_stringsimjoin.join.set_sim_join.set_sim_join",
    "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array",
    "py_stringsimjoin.utils.generic_helper.get_attrs_to_project",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "py_stringsimjoin.utils.generic_helper.split_table",
    "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value",
    "py_stringsimjoin.utils.validation.validate_attr",
    "py_stringsimjoin.utils.validation.validate_attr_type",
    "py_stringsimjoin.utils.validation.validate_comp_op_for_sim_measure",
    "py_stringsimjoin.utils.validation.validate_input_table",
    "py_stringsimjoin.utils.validation.validate_key_attr",
    "py_stringsimjoin.utils.validation.validate_output_attrs",
    "py_stringsimjoin.utils.validation.validate_threshold",
    "py_stringsimjoin.utils.validation.validate_tokenizer",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.join.dice_join_py.get_attrs_to_project": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_attrs_to_project"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.get_num_processes_to_launch": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.get_pairs_with_missing_value": {
  "data": {
   "shadows": "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.set_sim_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.set_sim_join.set_sim_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.split_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.split_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.validate_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.validate_attr_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.validate_comp_op_for_sim_measure": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_comp_op_for_sim_measure"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.validate_input_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_input_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.validate_key_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_key_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.validate_output_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_output_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.validate_threshold": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_threshold"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.dice_join_py.validate_tokenizer": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_tokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.join.edit_distance_join.QgramTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join.__use_cython__": {
  "data": {
   "shadows": "py_stringsimjoin.__use_cython__"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join.edit_distance_join": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.__use_cython__",
    "py_stringsimjoin.join.edit_distance_join_cy.edit_distance_join_cy",
    "py_stringsimjoin.join.edit_distance_join_py.edit_distance_join_py"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.join.edit_distance_join.edit_distance_join_cy": {
  "data": {
   "shadows": "py_stringsimjoin.join.edit_distance_join_cy.edit_distance_join_cy"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join.edit_distance_join_py": {
  "data": {
   "shadows": "py_stringsimjoin.join.edit_distance_join_py.edit_distance_join_py"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.join.edit_distance_join_py.COMP_OP_MAP": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.PrefixFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.PrefixIndex": {
  "data": {
   "shadows": "py_stringsimjoin.index.prefix_index.PrefixIndex"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.QgramTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py._edit_distance_join_split": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "comp_fn",
    "len",
    "pandas.DataFrame",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter",
    "py_stringsimjoin.index.prefix_index.PrefixIndex",
    "py_stringsimjoin.join.edit_distance_join_py.pyprind",
    "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP",
    "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices",
    "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables",
    "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_tables",
    "py_stringsimjoin.utils.token_ordering.order_using_token_ordering",
    "sim_fn"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.join.edit_distance_join_py.convert_dataframe_to_array": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.edit_distance_join_py": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "int",
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "math.floor",
    "min",
    "pandas.concat",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.join.edit_distance_join_py._edit_distance_join_split",
    "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array",
    "py_stringsimjoin.utils.generic_helper.get_attrs_to_project",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "py_stringsimjoin.utils.generic_helper.split_table",
    "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value",
    "py_stringsimjoin.utils.validation.validate_attr",
    "py_stringsimjoin.utils.validation.validate_attr_type",
    "py_stringsimjoin.utils.validation.validate_comp_op_for_sim_measure",
    "py_stringsimjoin.utils.validation.validate_input_table",
    "py_stringsimjoin.utils.validation.validate_key_attr",
    "py_stringsimjoin.utils.validation.validate_output_attrs",
    "py_stringsimjoin.utils.validation.validate_threshold",
    "py_stringsimjoin.utils.validation.validate_tokenizer_for_sim_measure",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.join.edit_distance_join_py.find_output_attribute_indices": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.floor": {
  "data": {
   "shadows": "math.floor"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.gen_token_ordering_for_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.get_attrs_to_project": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_attrs_to_project"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.get_num_processes_to_launch": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.get_output_header_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.get_output_row_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.get_pairs_with_missing_value": {
  "data": {
   "shadows": "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.get_sim_function": {
  "data": {
   "shadows": "py_stringsimjoin.utils.simfunctions.get_sim_function"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.order_using_token_ordering": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.order_using_token_ordering"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.pyprind": {
  "data": {
   "shadows": "pyprind"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.remove_non_ascii": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_non_ascii"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.split_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.split_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.validate_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.validate_attr_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.validate_comp_op_for_sim_measure": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_comp_op_for_sim_measure"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.validate_input_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_input_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.validate_key_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_key_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.validate_output_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_output_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.validate_threshold": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_threshold"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.edit_distance_join_py.validate_tokenizer_for_sim_measure": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_tokenizer_for_sim_measure"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.join.jaccard_join.__use_cython__": {
  "data": {
   "shadows": "py_stringsimjoin.__use_cython__"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join.jaccard_join": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "py_stringsimjoin.__use_cython__",
    "py_stringsimjoin.join.jaccard_join_cy.jaccard_join_cy",
    "py_stringsimjoin.join.jaccard_join_py.jaccard_join_py"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.join.jaccard_join.jaccard_join_cy": {
  "data": {
   "shadows": "py_stringsimjoin.join.jaccard_join_cy.jaccard_join_cy"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join.jaccard_join_py": {
  "data": {
   "shadows": "py_stringsimjoin.join.jaccard_join_py.jaccard_join_py"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.join.jaccard_join_py.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.convert_dataframe_to_array": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.get_attrs_to_project": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_attrs_to_project"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.get_num_processes_to_launch": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.get_pairs_with_missing_value": {
  "data": {
   "shadows": "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.jaccard_join_py": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "min",
    "pandas.concat",
    "py_stringsimjoin.join.set_sim_join.set_sim_join",
    "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array",
    "py_stringsimjoin.utils.generic_helper.get_attrs_to_project",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "py_stringsimjoin.utils.generic_helper.split_table",
    "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value",
    "py_stringsimjoin.utils.validation.validate_attr",
    "py_stringsimjoin.utils.validation.validate_attr_type",
    "py_stringsimjoin.utils.validation.validate_comp_op_for_sim_measure",
    "py_stringsimjoin.utils.validation.validate_input_table",
    "py_stringsimjoin.utils.validation.validate_key_attr",
    "py_stringsimjoin.utils.validation.validate_output_attrs",
    "py_stringsimjoin.utils.validation.validate_threshold",
    "py_stringsimjoin.utils.validation.validate_tokenizer",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.join.jaccard_join_py.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.set_sim_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.set_sim_join.set_sim_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.split_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.split_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.validate_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.validate_attr_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.validate_comp_op_for_sim_measure": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_comp_op_for_sim_measure"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.validate_input_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_input_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.validate_key_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_key_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.validate_output_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_output_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.validate_threshold": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_threshold"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.jaccard_join_py.validate_tokenizer": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_tokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.join.overlap_coefficient_join.__use_cython__": {
  "data": {
   "shadows": "py_stringsimjoin.__use_cython__"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": [
    "py_stringsimjoin.__use_cython__",
    "py_stringsimjoin.join.overlap_coefficient_join_cy.overlap_coefficient_join_cy",
    "py_stringsimjoin.join.overlap_coefficient_join_py.overlap_coefficient_join_py"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join_cy": {
  "data": {
   "shadows": "py_stringsimjoin.join.overlap_coefficient_join_cy.overlap_coefficient_join_cy"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join_py": {
  "data": {
   "shadows": "py_stringsimjoin.join.overlap_coefficient_join_py.overlap_coefficient_join_py"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.COMP_OP_MAP": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.InvertedIndex": {
  "data": {
   "shadows": "py_stringsimjoin.index.inverted_index.InvertedIndex"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.OverlapFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py._overlap_coefficient_join_split": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "comp_fn",
    "float",
    "len",
    "min",
    "pandas.DataFrame",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter",
    "py_stringsimjoin.index.inverted_index.InvertedIndex",
    "py_stringsimjoin.join.overlap_coefficient_join_py.pyprind",
    "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP",
    "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices",
    "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables",
    "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.convert_dataframe_to_array": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.find_output_attribute_indices": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.get_attrs_to_project": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_attrs_to_project"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.get_num_processes_to_launch": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.get_output_header_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.get_output_row_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.get_pairs_with_missing_value": {
  "data": {
   "shadows": "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.overlap_coefficient_join_py": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "min",
    "pandas.concat",
    "py_stringsimjoin.join.overlap_coefficient_join_py._overlap_coefficient_join_split",
    "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array",
    "py_stringsimjoin.utils.generic_helper.get_attrs_to_project",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "py_stringsimjoin.utils.generic_helper.split_table",
    "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value",
    "py_stringsimjoin.utils.validation.validate_attr",
    "py_stringsimjoin.utils.validation.validate_attr_type",
    "py_stringsimjoin.utils.validation.validate_comp_op_for_sim_measure",
    "py_stringsimjoin.utils.validation.validate_input_table",
    "py_stringsimjoin.utils.validation.validate_key_attr",
    "py_stringsimjoin.utils.validation.validate_output_attrs",
    "py_stringsimjoin.utils.validation.validate_threshold",
    "py_stringsimjoin.utils.validation.validate_tokenizer",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.pyprind": {
  "data": {
   "shadows": "pyprind"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.split_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.split_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.validate_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.validate_attr_type": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr_type"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.validate_comp_op_for_sim_measure": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_comp_op_for_sim_measure"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.validate_input_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_input_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.validate_key_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_key_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.validate_output_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_output_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.validate_threshold": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_threshold"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_coefficient_join_py.validate_tokenizer": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_tokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_join": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.join.overlap_join.__use_cython__": {
  "data": {
   "shadows": "py_stringsimjoin.__use_cython__"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_join.overlap_join": {
  "data": {
   "lineno": 2,
   "symbols_in_volume": [
    "py_stringsimjoin.__use_cython__",
    "py_stringsimjoin.join.overlap_join_cy.overlap_join_cy",
    "py_stringsimjoin.join.overlap_join_py.overlap_join_py"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.join.overlap_join.overlap_join_cy": {
  "data": {
   "shadows": "py_stringsimjoin.join.overlap_join_cy.overlap_join_cy"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_join.overlap_join_py": {
  "data": {
   "shadows": "py_stringsimjoin.join.overlap_join_py.overlap_join_py"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_join_py": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.join.overlap_join_py.OverlapFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.overlap_join_py.overlap_join_py": {
  "data": {
   "lineno": 5,
   "symbols_in_volume": [
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter",
    "py_stringsimjoin.utils.validation.validate_tokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.join.overlap_join_py.validate_tokenizer": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_tokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.set_sim_join": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.join.set_sim_join.COMP_OP_MAP": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.set_sim_join.PositionFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.position_filter.PositionFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.set_sim_join.PositionIndex": {
  "data": {
   "shadows": "py_stringsimjoin.index.position_index.PositionIndex"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.set_sim_join.convert_dataframe_to_array": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.set_sim_join.find_output_attribute_indices": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.set_sim_join.gen_token_ordering_for_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.set_sim_join.get_output_header_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.set_sim_join.get_output_row_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.set_sim_join.get_sim_function": {
  "data": {
   "shadows": "py_stringsimjoin.utils.simfunctions.get_sim_function"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.set_sim_join.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.set_sim_join.order_using_token_ordering": {
  "data": {
   "shadows": "py_stringsimjoin.utils.token_ordering.order_using_token_ordering"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.set_sim_join.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.set_sim_join.pyprind": {
  "data": {
   "shadows": "pyprind"
  },
  "type": "import"
 },
 "py_stringsimjoin.join.set_sim_join.set_sim_join": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "comp_fn",
    "len",
    "pandas.DataFrame",
    "py_stringsimjoin.filter.position_filter.PositionFilter",
    "py_stringsimjoin.index.position_index.PositionIndex",
    "py_stringsimjoin.join.set_sim_join.pyprind",
    "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP",
    "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices",
    "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables",
    "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_tables",
    "py_stringsimjoin.utils.token_ordering.order_using_token_ordering",
    "round",
    "sim_fn",
    "six.iteritems"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.load_books_dataset": {
  "data": {
   "shadows": "py_stringsimjoin.datasets.base.load_books_dataset"
  },
  "type": "import"
 },
 "py_stringsimjoin.load_person_dataset": {
  "data": {
   "shadows": "py_stringsimjoin.datasets.base.load_person_dataset"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.matcher.apply_matcher": {
  "data": {
   "symbols_in_volume": [
    "py_stringsimjoin.matcher.apply_matcher.types",
    "py_stringsimjoin.utils.pickle.pickle_instance_method",
    "py_stringsimjoin.utils.pickle.unpickle_instance_method",
    "six.moves.copyreg.pickle"
   ]
  },
  "type": "module"
 },
 "py_stringsimjoin.matcher.apply_matcher.COMP_OP_MAP": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.Parallel": {
  "data": {
   "shadows": "joblib.Parallel"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher._apply_matcher_split": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "comp_fn",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.np.NaN",
    "py_stringsimjoin.matcher.apply_matcher.pyprind",
    "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP",
    "py_stringsimjoin.utils.generic_helper.build_dict_from_table",
    "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices",
    "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables",
    "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables",
    "sim_function"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.matcher.apply_matcher.apply_matcher": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "joblib.Parallel",
    "joblib.delayed",
    "len",
    "min",
    "pandas.concat",
    "py_stringsimjoin.matcher.apply_matcher._apply_matcher_split",
    "py_stringsimjoin.matcher.apply_matcher.generate_tokens",
    "py_stringsimjoin.utils.generic_helper.get_attrs_to_project",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "py_stringsimjoin.utils.generic_helper.split_table",
    "py_stringsimjoin.utils.validation.validate_attr",
    "py_stringsimjoin.utils.validation.validate_comp_op",
    "py_stringsimjoin.utils.validation.validate_input_table",
    "py_stringsimjoin.utils.validation.validate_key_attr",
    "py_stringsimjoin.utils.validation.validate_output_attrs",
    "py_stringsimjoin.utils.validation.validate_tokenizer",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.matcher.apply_matcher.build_dict_from_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.build_dict_from_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.copyreg": {
  "data": {
   "shadows": "six.moves.copyreg"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.delayed": {
  "data": {
   "shadows": "joblib.delayed"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.find_output_attribute_indices": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.generate_tokens": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "dict",
    "pandas.notnull",
    "zip"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.matcher.apply_matcher.get_attrs_to_project": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_attrs_to_project"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.get_num_processes_to_launch": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.get_output_header_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.get_output_row_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.pickle_instance_method": {
  "data": {
   "shadows": "py_stringsimjoin.utils.pickle.pickle_instance_method"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.pyprind": {
  "data": {
   "shadows": "pyprind"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.split_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.split_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.unpickle_instance_method": {
  "data": {
   "shadows": "py_stringsimjoin.utils.pickle.unpickle_instance_method"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.validate_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.validate_comp_op": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_comp_op"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.validate_input_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_input_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.validate_key_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_key_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.validate_output_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_output_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.matcher.apply_matcher.validate_tokenizer": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_tokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.overlap_coefficient_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.overlap_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.overlap_join.overlap_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.profile_table_for_join": {
  "data": {
   "shadows": "py_stringsimjoin.profiler.profiler.profile_table_for_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.profiler": {
  "data": {
   "symbols_in_volume": [
    "pandas.set_option"
   ]
  },
  "type": "module"
 },
 "py_stringsimjoin.profiler.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.profiler.profiler": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.profiler.profiler._format_statistic": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.profiler.profiler.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.profiler.profiler.profile_table_for_join": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "float",
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.isnull",
    "py_stringsimjoin.profiler.profiler._format_statistic",
    "py_stringsimjoin.utils.validation.validate_attr",
    "py_stringsimjoin.utils.validation.validate_input_table",
    "round",
    "sum"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.profiler.profiler.validate_attr": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_attr"
  },
  "type": "import"
 },
 "py_stringsimjoin.profiler.profiler.validate_input_table": {
  "data": {
   "shadows": "py_stringsimjoin.utils.validation.validate_input_table"
  },
  "type": "import"
 },
 "py_stringsimjoin.series_to_str": {
  "data": {
   "shadows": "py_stringsimjoin.utils.converter.series_to_str"
  },
  "type": "import"
 },
 "py_stringsimjoin.similarity_measure": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.tests": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.tests.test_apply_matcher": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_apply_matcher.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.setUp": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "pandas.merge",
    "pandas.notnull",
    "pandas.read_csv",
    "py_stringsimjoin.tests.test_apply_matcher.os",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_apply_matcher": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "comp_fn",
    "float",
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "set",
    "sim_func",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_apply_matcher_n_jobs_above_1": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "comp_fn",
    "float",
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "py_stringmatching.similarity_measure.jaccard.Jaccard",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "set",
    "sim_func",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_apply_matcher_with_allow_missing": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "comp_fn",
    "float",
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "pandas.isnull",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "set",
    "sim_func",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_apply_matcher_with_join_attr_of_type_int": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "comp_fn",
    "float",
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "set",
    "sim_func",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_empty_candset": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "sim_func"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_invalid_candset": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "sim_func"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_invalid_candset_l_key_attr": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "sim_func"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_invalid_candset_r_key_attr": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "sim_func"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_invalid_comp_op": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "sim_func"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_invalid_l_join_attr": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "sim_func"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_invalid_l_key_attr": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "sim_func"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_invalid_l_out_attr": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "sim_func"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_invalid_ltable": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "sim_func"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_invalid_r_join_attr": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "sim_func"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_invalid_r_key_attr": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "sim_func"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_invalid_r_out_attr": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "sim_func"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_invalid_rtable": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "sim_func"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.ApplyMatcherTestCases.test_invalid_tokenizer": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "pandas.DataFrame",
    "py_stringsimjoin.matcher.apply_matcher.apply_matcher",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "sim_func"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_apply_matcher.COMP_OP_MAP": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_L_OUT_PREFIX": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "py_stringsimjoin.tests.test_apply_matcher.DEFAULT_R_OUT_PREFIX": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "py_stringsimjoin.tests.test_apply_matcher.Jaccard": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.jaccard.Jaccard"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_apply_matcher.OverlapFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_apply_matcher.QgramTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_apply_matcher.apply_matcher": {
  "data": {
   "shadows": "py_stringsimjoin.matcher.apply_matcher.apply_matcher"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_apply_matcher.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_apply_matcher.assert_list_equal": {
  "data": {
   "shadows": "nose.tools.assert_list_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_apply_matcher.dataframe_column_to_str": {
  "data": {
   "shadows": "py_stringsimjoin.utils.converter.dataframe_column_to_str"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_apply_matcher.get_sim_function": {
  "data": {
   "shadows": "py_stringsimjoin.utils.simfunctions.get_sim_function"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_apply_matcher.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_apply_matcher.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_apply_matcher.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_apply_matcher.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_converter_utils": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_converter_utils.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.setUp": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.np.NaN",
    "pandas.np.random.randint",
    "pandas.np.random.randn",
    "py_stringsimjoin.tests.test_converter_utils.random",
    "py_stringsimjoin.tests.test_converter_utils.string",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_float_col": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "float",
    "nose.tools.assert_equal",
    "object",
    "pandas.DataFrame",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_float_col_with_inplace": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "float",
    "nose.tools.assert_equal",
    "object",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "sum"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_float_col_with_int_val": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "float",
    "int",
    "nose.tools.assert_equal",
    "object",
    "pandas.DataFrame",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_float_col_with_return_col": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "float",
    "nose.tools.assert_equal",
    "object",
    "pandas.Series",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_int_col": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "int",
    "nose.tools.assert_equal",
    "object",
    "pandas.DataFrame",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_int_col_with_inplace": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "int",
    "nose.tools.assert_equal",
    "object",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "sum"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_int_col_with_return_col": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "int",
    "nose.tools.assert_equal",
    "object",
    "pandas.Series",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_invalid_col_name": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_invalid_dataframe": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_invalid_flag_combination": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_invalid_inplace_flag": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_invalid_return_col_flag": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_nan_col_with_inplace": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "float",
    "nose.tools.assert_equal",
    "object",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "sum"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_str_col": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "object",
    "pandas.DataFrame",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_str_col_with_inplace": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "object",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "sum"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.DataframeColumnToStrTestCases.test_str_col_with_return_col": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "object",
    "pandas.Series",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.SeriesToStrTestCases": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_converter_utils.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_converter_utils.SeriesToStrTestCases.setUp": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pandas.Series",
    "pandas.np.NaN",
    "pandas.np.random.randint",
    "pandas.np.random.randn",
    "py_stringsimjoin.tests.test_converter_utils.random",
    "py_stringsimjoin.tests.test_converter_utils.string",
    "range"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.SeriesToStrTestCases.test_empty_series_with_inplace": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "int",
    "len",
    "nose.tools.assert_equal",
    "object",
    "pandas.Series",
    "py_stringsimjoin.utils.converter.series_to_str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.SeriesToStrTestCases.test_float_col": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "float",
    "nose.tools.assert_equal",
    "object",
    "pandas.Series",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.series_to_str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.SeriesToStrTestCases.test_float_col_with_inplace": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "float",
    "nose.tools.assert_equal",
    "object",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.series_to_str",
    "sum"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.SeriesToStrTestCases.test_float_col_with_int_val": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "float",
    "int",
    "nose.tools.assert_equal",
    "object",
    "pandas.Series",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.series_to_str",
    "str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.SeriesToStrTestCases.test_int_col": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "int",
    "nose.tools.assert_equal",
    "object",
    "pandas.Series",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.series_to_str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.SeriesToStrTestCases.test_int_col_with_inplace": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "int",
    "nose.tools.assert_equal",
    "object",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.series_to_str",
    "sum"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.SeriesToStrTestCases.test_invalid_inplace_flag": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.utils.converter.series_to_str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.SeriesToStrTestCases.test_invalid_series": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.utils.converter.series_to_str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.SeriesToStrTestCases.test_nan_col_with_inplace": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "float",
    "nose.tools.assert_equal",
    "object",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.series_to_str",
    "sum"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.SeriesToStrTestCases.test_str_col": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "object",
    "pandas.Series",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.series_to_str",
    "sum",
    "type"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.SeriesToStrTestCases.test_str_col_with_inplace": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "object",
    "pandas.isnull",
    "py_stringsimjoin.utils.converter.series_to_str",
    "sum"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_converter_utils.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_converter_utils.assert_list_equal": {
  "data": {
   "shadows": "nose.tools.assert_list_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_converter_utils.dataframe_column_to_str": {
  "data": {
   "shadows": "py_stringsimjoin.utils.converter.dataframe_column_to_str"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_converter_utils.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_converter_utils.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_converter_utils.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_converter_utils.series_to_str": {
  "data": {
   "shadows": "py_stringsimjoin.utils.converter.series_to_str"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_converter_utils.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_converter_utils.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.COMP_OP_MAP": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.DEFAULT_COMP_OP": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.DEFAULT_L_OUT_PREFIX": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.DEFAULT_R_OUT_PREFIX": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.DelimiterTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_edit_dist_join.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.setUp": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.test_edit_distance_join_invalid_comp_op_ge": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.test_edit_distance_join_invalid_comp_op_gt": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.test_edit_distance_join_invalid_l_join_attr": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.test_edit_distance_join_invalid_l_key_attr": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.test_edit_distance_join_invalid_l_out_attr": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.test_edit_distance_join_invalid_ltable": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.test_edit_distance_join_invalid_r_join_attr": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.test_edit_distance_join_invalid_r_key_attr": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.test_edit_distance_join_invalid_r_out_attr": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.test_edit_distance_join_invalid_rtable": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.test_edit_distance_join_invalid_threshold_below": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.test_edit_distance_join_invalid_tokenizer": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.test_edit_distance_join_numeric_l_join_attr": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.EditDistJoinInvalidTestCases.test_edit_distance_join_numeric_r_join_attr": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.QgramTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.assert_list_equal": {
  "data": {
   "shadows": "nose.tools.assert_list_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.dataframe_column_to_str": {
  "data": {
   "shadows": "py_stringsimjoin.utils.converter.dataframe_column_to_str"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.edit_distance_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.edit_distance_join.edit_distance_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.get_sim_function": {
  "data": {
   "shadows": "py_stringsimjoin.utils.simfunctions.get_sim_function"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.nottest": {
  "data": {
   "shadows": "nose.tools.nottest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.test_edit_distance_join": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "functools.partial",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.tests.test_edit_dist_join.os",
    "py_stringsimjoin.tests.test_edit_dist_join.test_valid_join",
    "six.iteritems",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.test_valid_join": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "comp_fn",
    "float",
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "nose.tools.nottest",
    "overlap",
    "pandas.isnull",
    "pandas.merge",
    "pandas.notnull",
    "pandas.read_csv",
    "py_stringsimjoin.join.edit_distance_join.edit_distance_join",
    "py_stringsimjoin.tests.test_edit_dist_join.DEFAULT_COMP_OP",
    "py_stringsimjoin.tests.test_edit_dist_join.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_edit_dist_join.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.tests.test_edit_dist_join.os",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "set",
    "sim_func",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_edit_dist_join.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_helper_functions": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.tests.test_helper_functions.GetNumProcessesToLaunchTestCases": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_helper_functions.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_helper_functions.GetNumProcessesToLaunchTestCases.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_helper_functions.multiprocessing"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_helper_functions.GetNumProcessesToLaunchTestCases.test_n_jobs_0": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_helper_functions.GetNumProcessesToLaunchTestCases.test_n_jobs_1": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_helper_functions.GetNumProcessesToLaunchTestCases.test_n_jobs_above_cpu_count": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_helper_functions.GetNumProcessesToLaunchTestCases.test_n_jobs_invalid_negative_value": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_helper_functions.GetNumProcessesToLaunchTestCases.test_n_jobs_minus_1": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_helper_functions.GetNumProcessesToLaunchTestCases.test_n_jobs_valid_negative_value": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_helper_functions.GetNumProcessesToLaunchTestCases.test_n_jobs_valid_positive_value": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_helper_functions.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_helper_functions.assert_list_equal": {
  "data": {
   "shadows": "nose.tools.assert_list_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_helper_functions.get_num_processes_to_launch": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_helper_functions.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_helper_functions.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_helper_functions.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_helper_functions.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join": {
  "data": {
   "symbols_in_volume": [
    "py_stringsimjoin.join.cosine_join.cosine_join",
    "py_stringsimjoin.join.dice_join.dice_join",
    "py_stringsimjoin.join.jaccard_join.jaccard_join",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "module"
 },
 "py_stringsimjoin.tests.test_join.COMP_OP_MAP": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_join.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.setUp": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_invalid_comp_op_le": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_invalid_comp_op_lt": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_invalid_l_join_attr": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_invalid_l_key_attr": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_invalid_l_out_attr": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_invalid_ltable": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_invalid_r_join_attr": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_invalid_r_key_attr": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_invalid_r_out_attr": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_invalid_rtable": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_invalid_threshold_above": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_invalid_threshold_below": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_invalid_threshold_zero": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_invalid_tokenizer": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_numeric_l_join_attr": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.CosineJoinInvalidTestCases.test_cosine_join_numeric_r_join_attr": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.cosine_join.cosine_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DEFAULT_COMP_OP": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "py_stringsimjoin.tests.test_join.DEFAULT_L_OUT_PREFIX": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "py_stringsimjoin.tests.test_join.DEFAULT_R_OUT_PREFIX": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "py_stringsimjoin.tests.test_join.DelimiterTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_join.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.setUp": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_invalid_comp_op_le": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_invalid_comp_op_lt": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_invalid_l_join_attr": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_invalid_l_key_attr": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_invalid_l_out_attr": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_invalid_ltable": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_invalid_r_join_attr": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_invalid_r_key_attr": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_invalid_r_out_attr": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_invalid_rtable": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_invalid_threshold_above": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_invalid_threshold_below": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_invalid_threshold_zero": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_invalid_tokenizer": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_numeric_l_join_attr": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.DiceJoinInvalidTestCases.test_dice_join_numeric_r_join_attr": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.dice_join.dice_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JOIN_FN_MAP": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_join.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.setUp": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_invalid_comp_op_le": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_invalid_comp_op_lt": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_invalid_l_join_attr": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_invalid_l_key_attr": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_invalid_l_out_attr": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_invalid_ltable": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_invalid_r_join_attr": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_invalid_r_key_attr": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_invalid_r_out_attr": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_invalid_rtable": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_invalid_threshold_above": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_invalid_threshold_below": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_invalid_threshold_zero": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_invalid_tokenizer": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_numeric_l_join_attr": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.JaccardJoinInvalidTestCases.test_jaccard_join_numeric_r_join_attr": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.jaccard_join.jaccard_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_join.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.setUp": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_invalid_comp_op_le": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_invalid_comp_op_lt": {
  "data": {
   "lineno": 672,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_invalid_l_join_attr": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_invalid_l_key_attr": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_invalid_l_out_attr": {
  "data": {
   "lineno": 684,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_invalid_ltable": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_invalid_r_join_attr": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_invalid_r_key_attr": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_invalid_r_out_attr": {
  "data": {
   "lineno": 691,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_invalid_rtable": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_invalid_threshold_above": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_invalid_threshold_below": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_invalid_threshold_zero": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_invalid_tokenizer": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_numeric_l_join_attr": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.OverlapCoefficientJoinInvalidTestCases.test_overlap_coefficient_join_numeric_r_join_attr": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.QgramTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.assert_list_equal": {
  "data": {
   "shadows": "nose.tools.assert_list_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.cosine_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.cosine_join.cosine_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.dataframe_column_to_str": {
  "data": {
   "shadows": "py_stringsimjoin.utils.converter.dataframe_column_to_str"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.dice_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.dice_join.dice_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.get_sim_function": {
  "data": {
   "shadows": "py_stringsimjoin.utils.simfunctions.get_sim_function"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.jaccard_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.jaccard_join.jaccard_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.nottest": {
  "data": {
   "shadows": "nose.tools.nottest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.overlap_coefficient_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.overlap_coefficient_join.overlap_coefficient_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.overlap_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.overlap_join.overlap_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.partial": {
  "data": {
   "shadows": "functools.partial"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_join.test_set_sim_join": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "functools.partial",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.tests.test_join.os",
    "py_stringsimjoin.tests.test_join.test_valid_join",
    "six.iteritems",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.test_valid_join": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "comp_fn",
    "float",
    "join_fn",
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "nose.tools.nottest",
    "pandas.isnull",
    "pandas.merge",
    "pandas.notnull",
    "pandas.read_csv",
    "py_stringsimjoin.tests.test_join.DEFAULT_COMP_OP",
    "py_stringsimjoin.tests.test_join.DEFAULT_L_OUT_PREFIX",
    "py_stringsimjoin.tests.test_join.DEFAULT_R_OUT_PREFIX",
    "py_stringsimjoin.tests.test_join.JOIN_FN_MAP",
    "py_stringsimjoin.tests.test_join.os",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "round",
    "set",
    "sim_func",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_join.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_filter": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.tests.test_overlap_filter.DelimiterTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_overlap_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.setUp": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.merge",
    "pandas.np.NaN",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_candset_with_join_attr_of_type_int": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.merge",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_candset_with_numeric_l_filter_attr": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "pandas.DataFrame",
    "pandas.merge",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_candset_with_numeric_r_filter_attr": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "pandas.DataFrame",
    "pandas.merge",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_empty_candset": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_filter_candset": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "nose.tools.nottest",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_invalid_candset": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_invalid_candset_l_key_attr": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_invalid_candset_r_key_attr": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_invalid_ltable": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_invalid_ltable_l_filter_attr": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_invalid_ltable_l_key_attr": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_invalid_rtable": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_invalid_rtable_r_filter_attr": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_invalid_rtable_r_key_attr": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_ltable_l_key_attr_with_missing_value": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_njobs_above_1": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_overlap_dlm_1": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_overlap_dlm_1_allow_missing": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterCandsetTestCases.test_rtable_r_key_attr_with_missing_value": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterPairTestCases": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_overlap_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterPairTestCases.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterPairTestCases.test_empty_lstring": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterPairTestCases.test_empty_rstring": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterPairTestCases.test_empty_strings": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterPairTestCases.test_filter_pair": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "nose.tools.nottest",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterPairTestCases.test_overlap_dlm_1_eq_pass": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterPairTestCases.test_overlap_dlm_1_gt_prune": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterPairTestCases.test_overlap_dlm_1_pass": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterPairTestCases.test_overlap_dlm_1_prune": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterPairTestCases.test_overlap_pass_missing_both": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pandas.np.NaN"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterPairTestCases.test_overlap_pass_missing_left": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterPairTestCases.test_overlap_pass_missing_right": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pandas.np.NaN"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterTablesTestCases": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_overlap_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterTablesTestCases.setUp": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.np.NaN",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterTablesTestCases.test_empty_ltable": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterTablesTestCases.test_empty_rtable": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterTablesTestCases.test_empty_tables": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterTablesTestCases.test_filter_tables": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "nose.tools.nottest",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterTablesTestCases.test_overlap_dlm_1": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterTablesTestCases.test_overlap_dlm_1_eq": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterTablesTestCases.test_overlap_dlm_1_gt": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterTablesTestCases.test_overlap_dlm_1_njobs_above_1": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterTablesTestCases.test_overlap_dlm_1_with_allow_missing": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterTablesTestCases.test_overlap_dlm_1_with_out_attrs": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterTablesTestCases.test_overlap_dlm_1_with_out_prefix": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.FilterTablesTestCases.test_overlap_dlm_3": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_overlap_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.setUp": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.test_invalid_comp_op_le": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.test_invalid_comp_op_lt": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.test_invalid_l_filter_attr": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.test_invalid_l_key_attr": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.test_invalid_l_out_attr": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.test_invalid_ltable": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.test_invalid_r_filter_attr": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.test_invalid_r_key_attr": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.test_invalid_r_out_attr": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.test_invalid_rtable": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.test_invalid_threshold": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.test_invalid_tokenizer": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.test_numeric_l_filter_attr": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.OverlapFilterInvalidTestCases.test_numeric_r_filter_attr": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.overlap_filter.OverlapFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_filter.QgramTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_filter.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_filter.assert_list_equal": {
  "data": {
   "shadows": "nose.tools.assert_list_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_filter.dataframe_column_to_str": {
  "data": {
   "shadows": "py_stringsimjoin.utils.converter.dataframe_column_to_str"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_filter.nottest": {
  "data": {
   "shadows": "nose.tools.nottest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_filter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_filter.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_filter.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_filter.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_join": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.tests.test_overlap_join.DelimiterTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_overlap_join.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.setUp": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_invalid_comp_op_le": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_invalid_comp_op_lt": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_invalid_l_join_attr": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_invalid_l_key_attr": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_invalid_l_out_attr": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_invalid_ltable": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_invalid_r_join_attr": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_invalid_r_key_attr": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_invalid_r_out_attr": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_invalid_rtable": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_invalid_threshold_below": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_invalid_threshold_zero": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_invalid_tokenizer": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_numeric_l_join_attr": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinInvalidTestCases.test_overlap_join_numeric_r_join_attr": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinValidTestCases": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_overlap_join.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_overlap_join.OverlapJoinValidTestCases.test_overlap_join_using_tokenizer_with_return_set_false": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "len",
    "nose.tools.assert_equal",
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.join.overlap_join.overlap_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_overlap_join.QgramTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_join.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_join.iteritems": {
  "data": {
   "shadows": "six.iteritems"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_join.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_join.overlap_join": {
  "data": {
   "shadows": "py_stringsimjoin.join.overlap_join.overlap_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_join.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_join.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_overlap_join.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_position_filter": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.tests.test_position_filter.DelimiterTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterCandsetTestCases": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_position_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterCandsetTestCases.setUp": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.merge",
    "pandas.np.NaN",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterCandsetTestCases.test_cos_dlm_08": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterCandsetTestCases.test_dice_dlm_08": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterCandsetTestCases.test_empty_candset": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterCandsetTestCases.test_filter_candset": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "nose.tools.nottest",
    "py_stringsimjoin.filter.position_filter.PositionFilter",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterCandsetTestCases.test_jac_dlm_08": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterCandsetTestCases.test_jac_dlm_08_allow_missing": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_position_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_cos_dlm_08_pass": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_cos_dlm_08_prune": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_dice_dlm_08_pass": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_dice_dlm_08_prune": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_edit_dist_qg2_empty": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_edit_dist_qg2_empty_with_allow_empty": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_edit_dist_qg2_no_padding_empty": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_edit_dist_qg2_pass": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_edit_dist_qg2_prune": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_empty_lstring": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_empty_rstring": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_empty_strings": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_empty_strings_with_allow_empty": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_filter_pair": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "nose.tools.nottest",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_jac_dlm_08_pass": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_jac_dlm_08_prune": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_overlap_dlm_2_pass": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_overlap_dlm_2_prune": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_overlap_dlm_empty": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_overlap_dlm_empty_with_allow_empty": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_pos_filter_pass_missing_both": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.np.NaN"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_pos_filter_pass_missing_left": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterPairTestCases.test_pos_filter_pass_missing_right": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pandas.np.NaN"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_position_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.setUp": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.np.NaN",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_cos_dlm_08": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_cos_dlm_08_with_njobs_above_1": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_dice_dlm_08": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_edit_distance_qg2_2": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.np.NaN",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_empty_ltable": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_empty_rtable": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_empty_tables": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_filter_tables": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "nose.tools.nottest",
    "py_stringsimjoin.filter.position_filter.PositionFilter",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_jac_dlm_08": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_jac_dlm_08_allow_empty": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_jac_dlm_08_allow_empty_with_out_attrs": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_jac_dlm_08_allow_missing": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_jac_dlm_08_with_out_attrs": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_jac_dlm_08_with_out_prefix": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_jac_qg2_with_filter_attr_of_type_int": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.FilterTablesTestCases.test_overlap_dlm_3": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.position_filter.PositionFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_position_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.setUp": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.test_invalid_l_filter_attr": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.test_invalid_l_key_attr": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.test_invalid_l_out_attr": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.test_invalid_ltable": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.test_invalid_r_filter_attr": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.test_invalid_r_key_attr": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.test_invalid_r_out_attr": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.test_invalid_rtable": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.test_invalid_sim_measure_type": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.test_invalid_threshold": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.test_invalid_tokenizer": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.test_invalid_tokenizer_for_edit_distance": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.test_numeric_l_filter_attr": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.PositionFilterInvalidTestCases.test_numeric_r_filter_attr": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.position_filter.PositionFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_position_filter.QgramTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_position_filter.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_position_filter.assert_list_equal": {
  "data": {
   "shadows": "nose.tools.assert_list_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_position_filter.dataframe_column_to_str": {
  "data": {
   "shadows": "py_stringsimjoin.utils.converter.dataframe_column_to_str"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_position_filter.nottest": {
  "data": {
   "shadows": "nose.tools.nottest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_position_filter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_position_filter.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_position_filter.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_position_filter.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_prefix_filter": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.tests.test_prefix_filter.DelimiterTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterCandsetTestCases": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_prefix_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterCandsetTestCases.setUp": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.merge",
    "pandas.np.NaN",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterCandsetTestCases.test_cos_dlm_08": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterCandsetTestCases.test_dice_dlm_08": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterCandsetTestCases.test_empty_candset": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterCandsetTestCases.test_filter_candset": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "nose.tools.nottest",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterCandsetTestCases.test_jac_dlm_08": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterCandsetTestCases.test_jac_dlm_08_allow_missing": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_prefix_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_cos_dlm_08_pass": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_cos_dlm_08_prune": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_dice_dlm_08_pass": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_dice_dlm_08_prune": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_edit_dist_qg2_empty": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_edit_dist_qg2_empty_with_allow_empty": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_edit_dist_qg2_no_padding_empty": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_edit_dist_qg2_pass": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_edit_dist_qg2_prune": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_empty_lstring": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_empty_rstring": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_empty_strings": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_empty_strings_with_allow_empty": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_filter_pair": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "nose.tools.nottest",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_jac_dlm_08_pass": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_jac_dlm_08_prune": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_overlap_dlm_2_pass": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_overlap_dlm_2_prune": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_overlap_dlm_empty": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_overlap_dlm_empty_with_allow_empty": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_prefix_filter_pass_missing_both": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.np.NaN"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_prefix_filter_pass_missing_left": {
  "data": {
   "lineno": 85
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterPairTestCases.test_prefix_filter_pass_missing_right": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pandas.np.NaN"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_prefix_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.setUp": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.np.NaN",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_cos_dlm_08": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_dice_dlm_08": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_dice_dlm_08_with_njobs_above_1": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_edit_distance_qg2_2": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.np.NaN",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_empty_ltable": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_empty_rtable": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_empty_tables": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_filter_tables": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "nose.tools.nottest",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_jac_dlm_08": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_jac_dlm_08_allow_empty": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_jac_dlm_08_allow_empty_with_out_attrs": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_jac_dlm_08_allow_missing": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_jac_dlm_08_with_out_attrs": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_jac_dlm_08_with_out_prefix": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_jac_qg2_with_filter_attr_of_type_int": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.FilterTablesTestCases.test_overlap_dlm_3": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_prefix_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.setUp": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.test_invalid_l_filter_attr": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.test_invalid_l_key_attr": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.test_invalid_l_out_attr": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.test_invalid_ltable": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.test_invalid_r_filter_attr": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.test_invalid_r_key_attr": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.test_invalid_r_out_attr": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.test_invalid_rtable": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.test_invalid_sim_measure_type": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.test_invalid_threshold": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.test_invalid_tokenizer": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.test_invalid_tokenizer_for_edit_distance": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.test_numeric_l_filter_attr": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.PrefixFilterInvalidTestCases.test_numeric_r_filter_attr": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.prefix_filter.PrefixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_prefix_filter.QgramTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_prefix_filter.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_prefix_filter.assert_list_equal": {
  "data": {
   "shadows": "nose.tools.assert_list_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_prefix_filter.dataframe_column_to_str": {
  "data": {
   "shadows": "py_stringsimjoin.utils.converter.dataframe_column_to_str"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_prefix_filter.nottest": {
  "data": {
   "shadows": "nose.tools.nottest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_prefix_filter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_prefix_filter.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_prefix_filter.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_prefix_filter.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_profiler": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.tests.test_profiler.ProfileTableForJoinTestCases": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_profiler.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_profiler.ProfileTableForJoinTestCases.setUp": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_profiler.ProfileTableForJoinTestCases.test_profile_table_for_join": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "py_stringsimjoin.profiler.profiler.profile_table_for_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_profiler.ProfileTableForJoinTestCases.test_profile_table_for_join_invalid_profile_attr": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.profiler.profiler.profile_table_for_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_profiler.ProfileTableForJoinTestCases.test_profile_table_for_join_invalid_table": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.profiler.profiler.profile_table_for_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_profiler.ProfileTableForJoinTestCases.test_profile_table_for_join_with_profile_attrs": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "py_stringsimjoin.profiler.profiler.profile_table_for_join"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_profiler.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_profiler.assert_list_equal": {
  "data": {
   "shadows": "nose.tools.assert_list_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_profiler.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_profiler.profile_table_for_join": {
  "data": {
   "shadows": "py_stringsimjoin.profiler.profiler.profile_table_for_join"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_profiler.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_profiler.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_size_filter": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.tests.test_size_filter.DelimiterTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterCandsetTestCases": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_size_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterCandsetTestCases.setUp": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.merge",
    "pandas.np.NaN",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterCandsetTestCases.test_cos_dlm_08": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterCandsetTestCases.test_dice_dlm_08": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterCandsetTestCases.test_empty_candset": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterCandsetTestCases.test_filter_candset": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "nose.tools.nottest",
    "py_stringsimjoin.filter.size_filter.SizeFilter",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterCandsetTestCases.test_jac_dlm_08": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterCandsetTestCases.test_jac_dlm_08_allow_missing": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_size_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.setUp": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_cos_dlm_08_pass": {
  "data": {
   "lineno": 33
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_cos_dlm_08_prune": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_dice_dlm_08_pass": {
  "data": {
   "lineno": 46
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_dice_dlm_08_prune_lower": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_dice_dlm_08_prune_upper": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_edit_dist_qg2_empty": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_edit_dist_qg2_empty_with_allow_empty": {
  "data": {
   "lineno": 80
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_edit_dist_qg2_no_padding_empty": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_edit_dist_qg2_pass": {
  "data": {
   "lineno": 72
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_edit_dist_qg2_prune": {
  "data": {
   "lineno": 68
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_empty_lstring": {
  "data": {
   "lineno": 102
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_empty_rstring": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_empty_strings": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_empty_strings_with_allow_empty": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_filter_pair": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "nose.tools.nottest",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_jac_dlm_08_pass": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_jac_dlm_08_prune": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_overlap_dlm_empty": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_overlap_dlm_empty_with_allow_empty": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_overlap_dlm_pass": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_overlap_dlm_prune": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_size_filter_pass_missing_both": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pandas.np.NaN"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_size_filter_pass_missing_left": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterPairTestCases.test_size_filter_pass_missing_right": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.np.NaN"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_size_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.setUp": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.np.NaN",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_cos_dlm_08": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_dice_dlm_08": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_edit_distance_qg2_2": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.np.NaN",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_empty_ltable": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_empty_rtable": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_empty_tables": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_filter_tables": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "nose.tools.nottest",
    "py_stringsimjoin.filter.size_filter.SizeFilter",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_jac_dlm_08": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_jac_dlm_08_allow_empty": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_jac_dlm_08_allow_empty_with_out_attrs": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_jac_dlm_08_allow_missing": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_jac_dlm_08_with_njobs_above_1": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_jac_dlm_08_with_out_attrs": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_jac_dlm_08_with_out_prefix": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_jac_qg2_with_filter_attr_of_type_int": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.FilterTablesTestCases.test_overlap_dlm_3": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.QgramTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.size_filter.SizeFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_size_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.setUp": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.test_invalid_l_filter_attr": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.test_invalid_l_key_attr": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.test_invalid_l_out_attr": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.test_invalid_ltable": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.test_invalid_r_filter_attr": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.test_invalid_r_key_attr": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.test_invalid_r_out_attr": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.test_invalid_rtable": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.test_invalid_sim_measure_type": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.test_invalid_threshold": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.test_invalid_tokenizer": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.test_invalid_tokenizer_for_edit_distance": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.test_numeric_l_filter_attr": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.SizeFilterInvalidTestCases.test_numeric_r_filter_attr": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.size_filter.SizeFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_size_filter.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_size_filter.assert_list_equal": {
  "data": {
   "shadows": "nose.tools.assert_list_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_size_filter.dataframe_column_to_str": {
  "data": {
   "shadows": "py_stringsimjoin.utils.converter.dataframe_column_to_str"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_size_filter.nottest": {
  "data": {
   "shadows": "nose.tools.nottest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_size_filter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_size_filter.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_size_filter.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_size_filter.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_suffix_filter": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.tests.test_suffix_filter.COMP_OP_MAP": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_suffix_filter.DelimiterTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterCandsetTestCases": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_suffix_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterCandsetTestCases.setUp": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.merge",
    "pandas.np.NaN",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterCandsetTestCases.test_cos_dlm_08": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterCandsetTestCases.test_dice_dlm_08": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterCandsetTestCases.test_empty_candset": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterCandsetTestCases.test_filter_candset": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "nose.tools.nottest",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter",
    "set",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterCandsetTestCases.test_jac_dlm_075": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterCandsetTestCases.test_jac_dlm_075_allow_missing": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_suffix_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.setUp": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_cos_dlm_08_pass": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_cos_dlm_08_prune": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_dice_dlm_08_pass": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_dice_dlm_08_prune": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_edit_dist_qg2_empty": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_edit_dist_qg2_empty_with_allow_empty": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_edit_dist_qg2_no_padding_empty": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_edit_dist_qg2_pass": {
  "data": {
   "lineno": 70
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_edit_dist_qg2_prune": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_empty_lstring": {
  "data": {
   "lineno": 87
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_empty_rstring": {
  "data": {
   "lineno": 91
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_empty_strings": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_empty_strings_with_allow_empty": {
  "data": {
   "lineno": 99
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_filter_pair": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "nose.tools.assert_equal",
    "nose.tools.nottest",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_jac_dlm_08_pass": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_jac_dlm_08_prune": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_overlap_dlm_2_pass": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_overlap_dlm_2_prune": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_overlap_dlm_empty": {
  "data": {
   "lineno": 57
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterPairTestCases.test_overlap_dlm_empty_with_allow_empty": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_suffix_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.setUp": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.np.NaN",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_cos_dlm_08": {
  "data": {
   "lineno": 156
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_dice_dlm_08": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_edit_distance_qg2_2": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.np.NaN",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_empty_ltable": {
  "data": {
   "lineno": 251
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_empty_rtable": {
  "data": {
   "lineno": 256
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_empty_tables": {
  "data": {
   "lineno": 261
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_filter_tables": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "comp_fn",
    "int",
    "len",
    "list",
    "nose.tools.assert_equal",
    "nose.tools.assert_list_equal",
    "nose.tools.nottest",
    "pandas.isnull",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter",
    "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP",
    "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs",
    "py_stringsimjoin.utils.simfunctions.get_sim_function",
    "set",
    "sim_fn",
    "str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_jac_dlm_075": {
  "data": {
   "lineno": 137
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_jac_dlm_075_allow_empty": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_jac_dlm_075_allow_empty_with_out_attrs": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_jac_dlm_075_allow_missing": {
  "data": {
   "lineno": 224
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_jac_dlm_075_with_njobs_above_1": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_jac_dlm_075_with_out_attrs": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_jac_dlm_075_with_out_prefix": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_jac_qg2_with_filter_attr_of_type_int": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringsimjoin.utils.converter.dataframe_column_to_str"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.FilterTablesTestCases.test_overlap_dlm_3": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.QgramTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilter": {
  "data": {
   "shadows": "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "py_stringsimjoin.tests.test_suffix_filter.unittest"
   ]
  },
  "type": "class"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.setUp": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.test_invalid_l_filter_attr": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.test_invalid_l_key_attr": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.test_invalid_l_out_attr": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.test_invalid_ltable": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.test_invalid_r_filter_attr": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.test_invalid_r_key_attr": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.test_invalid_r_out_attr": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.test_invalid_rtable": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.test_invalid_sim_measure_type": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.test_invalid_threshold": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.test_invalid_tokenizer": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "TypeError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.test_invalid_tokenizer_for_edit_distance": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.test_numeric_l_filter_attr": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.SuffixFilterInvalidTestCases.test_numeric_r_filter_attr": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "AssertionError",
    "nose.tools.raises",
    "py_stringsimjoin.filter.suffix_filter.SuffixFilter"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.tests.test_suffix_filter.assert_equal": {
  "data": {
   "shadows": "nose.tools.assert_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_suffix_filter.assert_list_equal": {
  "data": {
   "shadows": "nose.tools.assert_list_equal"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_suffix_filter.dataframe_column_to_str": {
  "data": {
   "shadows": "py_stringsimjoin.utils.converter.dataframe_column_to_str"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_suffix_filter.get_sim_function": {
  "data": {
   "shadows": "py_stringsimjoin.utils.simfunctions.get_sim_function"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_suffix_filter.nottest": {
  "data": {
   "shadows": "nose.tools.nottest"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_suffix_filter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_suffix_filter.raises": {
  "data": {
   "shadows": "nose.tools.raises"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_suffix_filter.remove_redundant_attrs": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs"
  },
  "type": "import"
 },
 "py_stringsimjoin.tests.test_suffix_filter.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.utils.converter": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.utils.converter.dataframe_column_to_str": {
  "data": {
   "lineno": 3,
   "symbols_in_volume": [
    "AssertionError",
    "bool",
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.np.object",
    "py_stringsimjoin.utils.converter.series_to_str",
    "sum"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.converter.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.converter.series_to_str": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "bool",
    "int",
    "isinstance",
    "len",
    "pandas.Series",
    "pandas.isnull",
    "pandas.np.NaN",
    "pandas.np.float",
    "pandas.np.integer",
    "pandas.np.issubdtype",
    "pandas.np.object",
    "str",
    "sum"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.generic_helper": {
  "data": {
   "symbols_in_volume": [
    "py_stringsimjoin.utils.generic_helper.operator"
   ]
  },
  "type": "module"
 },
 "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "py_stringsimjoin.utils.generic_helper.build_dict_from_table": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pandas.isnull",
    "tuple"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_array": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.generic_helper.convert_dataframe_to_list": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pandas.isnull",
    "tuple"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices": {
  "data": {
   "lineno": 94
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.generic_helper.get_attrs_to_project": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.generic_helper.get_install_path": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "py_stringsimjoin.utils.generic_helper.os"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.generic_helper.get_num_processes_to_launch": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "max",
    "py_stringsimjoin.utils.generic_helper.multiprocessing"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables": {
  "data": {
   "lineno": 18
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.generic_helper.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.generic_helper.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.generic_helper.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.generic_helper.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.generic_helper.remove_non_ascii": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ord"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.generic_helper.remove_redundant_attrs": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.generic_helper.split_table": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "int",
    "len",
    "round",
    "six.moves.xrange"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.generic_helper.xrange": {
  "data": {
   "shadows": "six.moves.xrange"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.missing_value_handler": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.utils.missing_value_handler.find_output_attribute_indices": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.missing_value_handler.get_output_header_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.missing_value_handler.get_output_row_from_tables": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.missing_value_handler.get_pairs_with_missing_value": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "len",
    "list",
    "pandas.DataFrame",
    "pandas.isnull",
    "pandas.notnull",
    "pandas.np.NaN",
    "print",
    "py_stringsimjoin.utils.generic_helper.find_output_attribute_indices",
    "py_stringsimjoin.utils.generic_helper.get_output_header_from_tables",
    "py_stringsimjoin.utils.generic_helper.get_output_row_from_tables",
    "py_stringsimjoin.utils.missing_value_handler.pyprind"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.missing_value_handler.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.missing_value_handler.pyprind": {
  "data": {
   "shadows": "pyprind"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.pickle": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.utils.pickle.pickle_instance_method": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.pickle.unpickle_instance_method": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "KeyError"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.simfunctions": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.utils.simfunctions.Cosine": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.cosine.Cosine"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.simfunctions.Dice": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.dice.Dice"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.simfunctions.Jaccard": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.jaccard.Jaccard"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.simfunctions.Levenshtein": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.levenshtein.Levenshtein"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.simfunctions.OverlapCoefficient": {
  "data": {
   "shadows": "py_stringmatching.similarity_measure.overlap_coefficient.OverlapCoefficient"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.simfunctions.get_sim_function": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "py_stringmatching.similarity_measure.cosine.Cosine",
    "py_stringmatching.similarity_measure.dice.Dice",
    "py_stringmatching.similarity_measure.jaccard.Jaccard",
    "py_stringmatching.similarity_measure.levenshtein.Levenshtein",
    "py_stringmatching.similarity_measure.overlap_coefficient.OverlapCoefficient"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.simfunctions.overlap": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "set"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.token_ordering": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_lists": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "list",
    "operator.itemgetter",
    "sorted"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.token_ordering.gen_token_ordering_for_tables": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "list",
    "operator.itemgetter",
    "sorted"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.token_ordering.itemgetter": {
  "data": {
   "shadows": "operator.itemgetter"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.token_ordering.order_using_token_ordering": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.token_ordering.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.validation": {
  "data": {},
  "type": "module"
 },
 "py_stringsimjoin.utils.validation.COMP_OP_MAP": {
  "data": {
   "shadows": "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.validation.QgramTokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.validation.Tokenizer": {
  "data": {
   "shadows": "py_stringmatching.tokenizer.tokenizer.Tokenizer"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.validation.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "py_stringsimjoin.utils.validation.validate_attr": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.validation.validate_attr_type": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "AssertionError",
    "pandas.np.object"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.validation.validate_comp_op": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "AssertionError",
    "py_stringsimjoin.utils.generic_helper.COMP_OP_MAP.keys"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.validation.validate_comp_op_for_sim_measure": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.validation.validate_input_table": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.validation.validate_key_attr": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "AssertionError",
    "len",
    "sum"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.validation.validate_output_attrs": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.validation.validate_sim_measure_type": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "TypeError"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.validation.validate_threshold": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.validation.validate_tokenizer": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "py_stringmatching.tokenizer.tokenizer.Tokenizer"
   ]
  },
  "type": "function"
 },
 "py_stringsimjoin.utils.validation.validate_tokenizer_for_sim_measure": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "AssertionError",
    "TypeError",
    "isinstance",
    "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
    "py_stringmatching.tokenizer.tokenizer.Tokenizer"
   ]
  },
  "type": "function"
 }
}