{
 "feature_engine": {
  "lineno": null,
  "symbols_in_volume": [
   "feature_engine.__file__",
   "pathlib.Path"
  ],
  "type": "module"
 },
 "feature_engine.base_transformers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.base_transformers.BaseNumericalTransformer": {
  "lineno": 21,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "feature_engine.base_transformers.BaseNumericalTransformer.fit": {
  "lineno": 26,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.base_transformers.BaseNumericalTransformer.transform": {
  "lineno": 66,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._check_input_matches_training_df",
   "feature_engine.dataframe_checks._is_dataframe",
   "pandas.DataFrame",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "feature_engine.creation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.creation.combine_with_reference_feature": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.creation.combine_with_reference_feature.CombineWithReferenceFeature": {
  "lineno": 15,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "feature_engine.creation.combine_with_reference_feature.CombineWithReferenceFeature.__init__": {
  "lineno": 125,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.creation.combine_with_reference_feature.CombineWithReferenceFeature.fit": {
  "lineno": 198,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.creation.combine_with_reference_feature.CombineWithReferenceFeature.transform": {
  "lineno": 257,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._check_input_matches_training_df",
   "feature_engine.dataframe_checks._is_dataframe",
   "pandas.DataFrame",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "feature_engine.creation.mathematical_combination": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.creation.mathematical_combination.MathematicalCombination": {
  "lineno": 15,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "feature_engine.creation.mathematical_combination.MathematicalCombination.__init__": {
  "lineno": 123,
  "symbols_in_volume": [
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.creation.mathematical_combination.MathematicalCombination.fit": {
  "lineno": 184,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.creation.mathematical_combination.MathematicalCombination.transform": {
  "lineno": 249,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._check_input_matches_training_df",
   "feature_engine.dataframe_checks._is_dataframe",
   "pandas.DataFrame",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "feature_engine.dataframe_checks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.dataframe_checks._check_contains_na": {
  "lineno": 69,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.dataframe_checks._check_input_matches_training_df": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.dataframe_checks._is_dataframe": {
  "lineno": 11,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.discretisation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.discretisation.arbitrary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.discretisation.arbitrary.ArbitraryDiscretiser": {
  "lineno": 11,
  "symbols_in_volume": [
   "feature_engine.base_transformers.BaseNumericalTransformer"
  ],
  "type": "class"
 },
 "feature_engine.discretisation.arbitrary.ArbitraryDiscretiser.__init__": {
  "lineno": 73,
  "symbols_in_volume": [
   "typing.Dict"
  ],
  "type": "function"
 },
 "feature_engine.discretisation.arbitrary.ArbitraryDiscretiser.fit": {
  "lineno": 93,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.discretisation.arbitrary.ArbitraryDiscretiser.transform": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.cut"
  ],
  "type": "function"
 },
 "feature_engine.discretisation.decision_tree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.discretisation.decision_tree.DecisionTreeDiscretiser": {
  "lineno": 14,
  "symbols_in_volume": [
   "feature_engine.base_transformers.BaseNumericalTransformer"
  ],
  "type": "class"
 },
 "feature_engine.discretisation.decision_tree.DecisionTreeDiscretiser.__init__": {
  "lineno": 97,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.Dict",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.discretisation.decision_tree.DecisionTreeDiscretiser.fit": {
  "lineno": 123,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "sklearn.model_selection.GridSearchCV",
   "sklearn.tree.DecisionTreeClassifier",
   "sklearn.tree.DecisionTreeRegressor"
  ],
  "type": "function"
 },
 "feature_engine.discretisation.decision_tree.DecisionTreeDiscretiser.transform": {
  "lineno": 177,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.discretisation.equal_frequency": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.discretisation.equal_frequency.EqualFrequencyDiscretiser": {
  "lineno": 11,
  "symbols_in_volume": [
   "feature_engine.base_transformers.BaseNumericalTransformer"
  ],
  "type": "class"
 },
 "feature_engine.discretisation.equal_frequency.EqualFrequencyDiscretiser.__init__": {
  "lineno": 79,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.discretisation.equal_frequency.EqualFrequencyDiscretiser.fit": {
  "lineno": 101,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.qcut",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.discretisation.equal_frequency.EqualFrequencyDiscretiser.transform": {
  "lineno": 146,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.cut"
  ],
  "type": "function"
 },
 "feature_engine.discretisation.equal_width": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.discretisation.equal_width.EqualWidthDiscretiser": {
  "lineno": 11,
  "symbols_in_volume": [
   "feature_engine.base_transformers.BaseNumericalTransformer"
  ],
  "type": "class"
 },
 "feature_engine.discretisation.equal_width.EqualWidthDiscretiser.__init__": {
  "lineno": 84,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.discretisation.equal_width.EqualWidthDiscretiser.fit": {
  "lineno": 106,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.cut",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.discretisation.equal_width.EqualWidthDiscretiser.transform": {
  "lineno": 154,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.cut"
  ],
  "type": "function"
 },
 "feature_engine.encoding": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.encoding.base_encoder": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.encoding.base_encoder.BaseCategoricalTransformer": {
  "lineno": 16,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "feature_engine.encoding.base_encoder.BaseCategoricalTransformer._check_encoding_dictionary": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "feature_engine.encoding.base_encoder.BaseCategoricalTransformer._check_fit_input_and_variables": {
  "lineno": 19,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_or_check_categorical_variables",
   "pandas.DataFrame",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.encoding.base_encoder.BaseCategoricalTransformer._check_transform_input_and_state": {
  "lineno": 59,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._check_input_matches_training_df",
   "feature_engine.dataframe_checks._is_dataframe",
   "pandas.DataFrame",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "feature_engine.encoding.base_encoder.BaseCategoricalTransformer.inverse_transform": {
  "lineno": 152,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.base_encoder.BaseCategoricalTransformer.transform": {
  "lineno": 109,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "warnings.warn"
  ],
  "type": "function"
 },
 "feature_engine.encoding.count_frequency": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.encoding.count_frequency.CountFrequencyEncoder": {
  "lineno": 13,
  "symbols_in_volume": [
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer",
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer.inverse_transform.__doc__",
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.encoding.count_frequency.CountFrequencyEncoder.__init__": {
  "lineno": 71,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.encoding.count_frequency.CountFrequencyEncoder.fit": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.float",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.encoding.count_frequency.CountFrequencyEncoder.inverse_transform": {
  "lineno": 139,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.count_frequency.CountFrequencyEncoder.transform": {
  "lineno": 132,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.decision_tree": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.encoding.decision_tree.DecisionTreeEncoder": {
  "lineno": 15,
  "symbols_in_volume": [
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer"
  ],
  "type": "class"
 },
 "feature_engine.encoding.decision_tree.DecisionTreeEncoder.__init__": {
  "lineno": 116,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.encoding.decision_tree.DecisionTreeEncoder.fit": {
  "lineno": 138,
  "symbols_in_volume": [
   "feature_engine.discretisation.DecisionTreeDiscretiser",
   "feature_engine.encoding.ordinal.OrdinalEncoder",
   "pandas.DataFrame",
   "pandas.Series",
   "sklearn.pipeline.Pipeline",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.encoding.decision_tree.DecisionTreeEncoder.inverse_transform": {
  "lineno": 229,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.decision_tree.DecisionTreeEncoder.transform": {
  "lineno": 198,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.mean_encoding": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.encoding.mean_encoding.MeanEncoder": {
  "lineno": 12,
  "symbols_in_volume": [
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer",
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer.inverse_transform.__doc__",
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.encoding.mean_encoding.MeanEncoder.__init__": {
  "lineno": 68,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.encoding.mean_encoding.MeanEncoder.fit": {
  "lineno": 73,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "feature_engine.encoding.mean_encoding.MeanEncoder.inverse_transform": {
  "lineno": 124,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.mean_encoding.MeanEncoder.transform": {
  "lineno": 117,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.one_hot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.encoding.one_hot.OneHotEncoder": {
  "lineno": 13,
  "symbols_in_volume": [
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer"
  ],
  "type": "class"
 },
 "feature_engine.encoding.one_hot.OneHotEncoder.__init__": {
  "lineno": 114,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.encoding.one_hot.OneHotEncoder.fit": {
  "lineno": 131,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.encoding.one_hot.OneHotEncoder.inverse_transform": {
  "lineno": 228,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.one_hot.OneHotEncoder.transform": {
  "lineno": 190,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.ordinal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.encoding.ordinal.OrdinalEncoder": {
  "lineno": 12,
  "symbols_in_volume": [
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer",
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer.inverse_transform.__doc__",
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.encoding.ordinal.OrdinalEncoder.__init__": {
  "lineno": 81,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.encoding.ordinal.OrdinalEncoder.fit": {
  "lineno": 95,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.encoding.ordinal.OrdinalEncoder.inverse_transform": {
  "lineno": 165,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.ordinal.OrdinalEncoder.transform": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.probability_ratio": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.encoding.probability_ratio.PRatioEncoder": {
  "lineno": 13,
  "symbols_in_volume": [
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer",
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer.inverse_transform.__doc__",
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.encoding.probability_ratio.PRatioEncoder.__init__": {
  "lineno": 90,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.encoding.probability_ratio.PRatioEncoder.fit": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.log",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "feature_engine.encoding.probability_ratio.PRatioEncoder.inverse_transform": {
  "lineno": 188,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.probability_ratio.PRatioEncoder.transform": {
  "lineno": 181,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.rare_label": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.encoding.rare_label.RareLabelEncoder": {
  "lineno": 14,
  "symbols_in_volume": [
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer"
  ],
  "type": "class"
 },
 "feature_engine.encoding.rare_label.RareLabelEncoder.__init__": {
  "lineno": 77,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.encoding.rare_label.RareLabelEncoder.fit": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.float",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional",
   "warnings.warn"
  ],
  "type": "function"
 },
 "feature_engine.encoding.rare_label.RareLabelEncoder.inverse_transform": {
  "lineno": 205,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.rare_label.RareLabelEncoder.transform": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.woe": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.encoding.woe.WoEEncoder": {
  "lineno": 13,
  "symbols_in_volume": [
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer",
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer.inverse_transform.__doc__",
   "feature_engine.encoding.base_encoder.BaseCategoricalTransformer.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.encoding.woe.WoEEncoder.__init__": {
  "lineno": 110,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.encoding.woe.WoEEncoder.fit": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.where",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat"
  ],
  "type": "function"
 },
 "feature_engine.encoding.woe.WoEEncoder.inverse_transform": {
  "lineno": 195,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.encoding.woe.WoEEncoder.transform": {
  "lineno": 188,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.imputation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.imputation.arbitrary_number": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.imputation.arbitrary_number.ArbitraryNumberImputer": {
  "lineno": 17,
  "symbols_in_volume": [
   "feature_engine.imputation.base_imputer.BaseImputer",
   "feature_engine.imputation.base_imputer.BaseImputer.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.imputation.arbitrary_number.ArbitraryNumberImputer.__init__": {
  "lineno": 80,
  "symbols_in_volume": [
   "feature_engine.parameter_checks._define_numerical_dict",
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Optional",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.imputation.arbitrary_number.ArbitraryNumberImputer.fit": {
  "lineno": 96,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.imputation.arbitrary_number.ArbitraryNumberImputer.transform": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.imputation.base_imputer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.imputation.base_imputer.BaseImputer": {
  "lineno": 11,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "feature_engine.imputation.base_imputer.BaseImputer._check_transform_input_and_state": {
  "lineno": 14,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_input_matches_training_df",
   "feature_engine.dataframe_checks._is_dataframe",
   "pandas.DataFrame",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "feature_engine.imputation.base_imputer.BaseImputer.transform": {
  "lineno": 46,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.imputation.categorical": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.imputation.categorical.CategoricalImputer": {
  "lineno": 16,
  "symbols_in_volume": [
   "feature_engine.imputation.base_imputer.BaseImputer",
   "feature_engine.imputation.base_imputer.BaseImputer.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.imputation.categorical.CategoricalImputer.__init__": {
  "lineno": 71,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.imputation.categorical.CategoricalImputer.fit": {
  "lineno": 92,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_or_check_categorical_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.imputation.categorical.CategoricalImputer.transform": {
  "lineno": 144,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.imputation.drop_missing_data": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.imputation.drop_missing_data.DropMissingData": {
  "lineno": 13,
  "symbols_in_volume": [
   "feature_engine.imputation.base_imputer.BaseImputer"
  ],
  "type": "class"
 },
 "feature_engine.imputation.drop_missing_data.DropMissingData.__init__": {
  "lineno": 57,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.imputation.drop_missing_data.DropMissingData.fit": {
  "lineno": 69,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._is_dataframe",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.imputation.drop_missing_data.DropMissingData.return_na_data": {
  "lineno": 137,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.isnull"
  ],
  "type": "function"
 },
 "feature_engine.imputation.drop_missing_data.DropMissingData.transform": {
  "lineno": 115,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.imputation.end_tail": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.imputation.end_tail.EndTailImputer": {
  "lineno": 16,
  "symbols_in_volume": [
   "feature_engine.imputation.base_imputer.BaseImputer",
   "feature_engine.imputation.base_imputer.BaseImputer.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.imputation.end_tail.EndTailImputer.__init__": {
  "lineno": 91,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.imputation.end_tail.EndTailImputer.fit": {
  "lineno": 115,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.imputation.end_tail.EndTailImputer.transform": {
  "lineno": 175,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.imputation.mean_median": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.imputation.mean_median.MeanMedianImputer": {
  "lineno": 16,
  "symbols_in_volume": [
   "feature_engine.imputation.base_imputer.BaseImputer",
   "feature_engine.imputation.base_imputer.BaseImputer.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.imputation.mean_median.MeanMedianImputer.__init__": {
  "lineno": 55,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.imputation.mean_median.MeanMedianImputer.fit": {
  "lineno": 67,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.imputation.mean_median.MeanMedianImputer.transform": {
  "lineno": 110,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.imputation.missing_indicator": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.imputation.missing_indicator.AddMissingIndicator": {
  "lineno": 14,
  "symbols_in_volume": [
   "feature_engine.imputation.base_imputer.BaseImputer"
  ],
  "type": "class"
 },
 "feature_engine.imputation.missing_indicator.AddMissingIndicator.__init__": {
  "lineno": 62,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.imputation.missing_indicator.AddMissingIndicator.fit": {
  "lineno": 74,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._is_dataframe",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.imputation.missing_indicator.AddMissingIndicator.transform": {
  "lineno": 121,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.imputation.random_sample": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.imputation.random_sample.RandomSampleImputer": {
  "lineno": 30,
  "symbols_in_volume": [
   "feature_engine.imputation.base_imputer.BaseImputer"
  ],
  "type": "class"
 },
 "feature_engine.imputation.random_sample.RandomSampleImputer.__init__": {
  "lineno": 114,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.imputation.random_sample.RandomSampleImputer.fit": {
  "lineno": 145,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.imputation.random_sample.RandomSampleImputer.transform": {
  "lineno": 199,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.imputation.random_sample._define_seed": {
  "lineno": 15,
  "symbols_in_volume": [
   "numpy.round",
   "pandas.DataFrame",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.outliers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.outliers.artbitrary": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.outliers.artbitrary.ArbitraryOutlierCapper": {
  "lineno": 15,
  "symbols_in_volume": [
   "feature_engine.outliers.base_outlier.BaseOutlier",
   "feature_engine.outliers.base_outlier.BaseOutlier.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.outliers.artbitrary.ArbitraryOutlierCapper.__init__": {
  "lineno": 56,
  "symbols_in_volume": [
   "feature_engine.parameter_checks._define_numerical_dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.outliers.artbitrary.ArbitraryOutlierCapper.fit": {
  "lineno": 75,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.outliers.artbitrary.ArbitraryOutlierCapper.transform": {
  "lineno": 130,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.outliers.base_outlier": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.outliers.base_outlier.BaseOutlier": {
  "lineno": 13,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "feature_engine.outliers.base_outlier.BaseOutlier._check_transform_input_and_state": {
  "lineno": 16,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._check_input_matches_training_df",
   "feature_engine.dataframe_checks._is_dataframe",
   "pandas.DataFrame",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "feature_engine.outliers.base_outlier.BaseOutlier.transform": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.outliers.trimmer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.outliers.trimmer.OutlierTrimmer": {
  "lineno": 10,
  "symbols_in_volume": [
   "feature_engine.outliers.Winsorizer"
  ],
  "type": "class"
 },
 "feature_engine.outliers.trimmer.OutlierTrimmer.transform": {
  "lineno": 118,
  "symbols_in_volume": [
   "numpy.where",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.outliers.winsorizer": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.outliers.winsorizer.Winsorizer": {
  "lineno": 16,
  "symbols_in_volume": [
   "feature_engine.outliers.base_outlier.BaseOutlier",
   "feature_engine.outliers.base_outlier.BaseOutlier.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.outliers.winsorizer.Winsorizer.__init__": {
  "lineno": 120,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.outliers.winsorizer.Winsorizer.fit": {
  "lineno": 155,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.outliers.winsorizer.Winsorizer.transform": {
  "lineno": 232,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.parameter_checks": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.parameter_checks._define_numerical_dict": {
  "lineno": 4,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.selection": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.selection.base_selector": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.selection.base_selector.BaseSelector": {
  "lineno": 30,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "feature_engine.selection.base_selector.BaseSelector.transform": {
  "lineno": 33,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_input_matches_training_df",
   "feature_engine.dataframe_checks._is_dataframe",
   "pandas.DataFrame",
   "sklearn.utils.validation.check_is_fitted"
  ],
  "type": "function"
 },
 "feature_engine.selection.base_selector.get_feature_importances": {
  "lineno": 12,
  "symbols_in_volume": [
   "numpy.abs",
   "numpy.linalg.norm"
  ],
  "type": "function"
 },
 "feature_engine.selection.drop_constant_features": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "module"
 },
 "feature_engine.selection.drop_constant_features.DropConstantFeatures": {
  "lineno": 19,
  "symbols_in_volume": [
   "feature_engine.selection.base_selector.BaseSelector",
   "feature_engine.selection.base_selector.BaseSelector.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.selection.drop_constant_features.DropConstantFeatures.__init__": {
  "lineno": 74,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables"
  ],
  "type": "function"
 },
 "feature_engine.selection.drop_constant_features.DropConstantFeatures.fit": {
  "lineno": 90,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_all_variables",
   "numpy.float",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "feature_engine.selection.drop_constant_features.DropConstantFeatures.transform": {
  "lineno": 152,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.selection.drop_correlated_features": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "module"
 },
 "feature_engine.selection.drop_correlated_features.DropCorrelatedFeatures": {
  "lineno": 18,
  "symbols_in_volume": [
   "feature_engine.selection.base_selector.BaseSelector",
   "feature_engine.selection.base_selector.BaseSelector.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.selection.drop_correlated_features.DropCorrelatedFeatures.__init__": {
  "lineno": 74,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables"
  ],
  "type": "function"
 },
 "feature_engine.selection.drop_correlated_features.DropCorrelatedFeatures.fit": {
  "lineno": 98,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "feature_engine.selection.drop_correlated_features.DropCorrelatedFeatures.transform": {
  "lineno": 177,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.selection.drop_duplicate_features": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "module"
 },
 "feature_engine.selection.drop_duplicate_features.DropDuplicateFeatures": {
  "lineno": 18,
  "symbols_in_volume": [
   "feature_engine.selection.base_selector.BaseSelector",
   "feature_engine.selection.base_selector.BaseSelector.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.selection.drop_duplicate_features.DropDuplicateFeatures.__init__": {
  "lineno": 57,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables"
  ],
  "type": "function"
 },
 "feature_engine.selection.drop_duplicate_features.DropDuplicateFeatures.fit": {
  "lineno": 65,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_all_variables",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "feature_engine.selection.drop_duplicate_features.DropDuplicateFeatures.transform": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.selection.drop_features": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.selection.drop_features.DropFeatures": {
  "lineno": 8,
  "symbols_in_volume": [
   "feature_engine.selection.base_selector.BaseSelector",
   "feature_engine.selection.base_selector.BaseSelector.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.selection.drop_features.DropFeatures.__init__": {
  "lineno": 35,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.selection.drop_features.DropFeatures.fit": {
  "lineno": 45,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._is_dataframe",
   "pandas.DataFrame",
   "pandas.Series"
  ],
  "type": "function"
 },
 "feature_engine.selection.drop_features.DropFeatures.transform": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.selection.recursive_feature_addition": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "module"
 },
 "feature_engine.selection.recursive_feature_addition.RecursiveFeatureAddition": {
  "lineno": 18,
  "symbols_in_volume": [
   "feature_engine.selection.base_selector.BaseSelector",
   "feature_engine.selection.base_selector.BaseSelector.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.selection.recursive_feature_addition.RecursiveFeatureAddition.__init__": {
  "lineno": 93,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "sklearn.ensemble.RandomForestClassifier",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.selection.recursive_feature_addition.RecursiveFeatureAddition.fit": {
  "lineno": 114,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.selection.base_selector.get_feature_importances",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "sklearn.model_selection.cross_validate"
  ],
  "type": "function"
 },
 "feature_engine.selection.recursive_feature_addition.RecursiveFeatureAddition.transform": {
  "lineno": 238,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.selection.recursive_feature_elimination": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "module"
 },
 "feature_engine.selection.recursive_feature_elimination.RecursiveFeatureElimination": {
  "lineno": 18,
  "symbols_in_volume": [
   "feature_engine.selection.base_selector.BaseSelector",
   "feature_engine.selection.base_selector.BaseSelector.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.selection.recursive_feature_elimination.RecursiveFeatureElimination.__init__": {
  "lineno": 94,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "sklearn.ensemble.RandomForestClassifier",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.selection.recursive_feature_elimination.RecursiveFeatureElimination.fit": {
  "lineno": 115,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.selection.base_selector.get_feature_importances",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "sklearn.model_selection.cross_validate"
  ],
  "type": "function"
 },
 "feature_engine.selection.recursive_feature_elimination.RecursiveFeatureElimination.transform": {
  "lineno": 237,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.selection.shuffle_features": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "module"
 },
 "feature_engine.selection.shuffle_features.SelectByShuffling": {
  "lineno": 20,
  "symbols_in_volume": [
   "feature_engine.selection.base_selector.BaseSelector",
   "feature_engine.selection.base_selector.BaseSelector.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.selection.shuffle_features.SelectByShuffling.__init__": {
  "lineno": 93,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "sklearn.ensemble.RandomForestClassifier",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.selection.shuffle_features.SelectByShuffling.fit": {
  "lineno": 116,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "numpy.mean",
   "pandas.DataFrame",
   "pandas.Series",
   "sklearn.metrics.get_scorer",
   "sklearn.model_selection.cross_validate",
   "sklearn.utils.validation.check_random_state"
  ],
  "type": "function"
 },
 "feature_engine.selection.shuffle_features.SelectByShuffling.transform": {
  "lineno": 209,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.selection.single_feature_performance": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "module"
 },
 "feature_engine.selection.single_feature_performance.SelectBySingleFeaturePerformance": {
  "lineno": 18,
  "symbols_in_volume": [
   "feature_engine.selection.base_selector.BaseSelector",
   "feature_engine.selection.base_selector.BaseSelector.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.selection.single_feature_performance.SelectBySingleFeaturePerformance.__init__": {
  "lineno": 81,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "sklearn.ensemble.RandomForestClassifier",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.selection.single_feature_performance.SelectBySingleFeaturePerformance.fit": {
  "lineno": 116,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "sklearn.model_selection.cross_validate",
   "warnings.warn"
  ],
  "type": "function"
 },
 "feature_engine.selection.single_feature_performance.SelectBySingleFeaturePerformance.transform": {
  "lineno": 175,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.selection.smart_correlation_selection": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "module"
 },
 "feature_engine.selection.smart_correlation_selection.SmartCorrelatedSelection": {
  "lineno": 19,
  "symbols_in_volume": [
   "feature_engine.selection.base_selector.BaseSelector",
   "feature_engine.selection.base_selector.BaseSelector.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.selection.smart_correlation_selection.SmartCorrelatedSelection.__init__": {
  "lineno": 111,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables"
  ],
  "type": "function"
 },
 "feature_engine.selection.smart_correlation_selection.SmartCorrelatedSelection.fit": {
  "lineno": 171,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "sklearn.model_selection.cross_validate"
  ],
  "type": "function"
 },
 "feature_engine.selection.smart_correlation_selection.SmartCorrelatedSelection.transform": {
  "lineno": 306,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.selection.target_mean_selection": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "module"
 },
 "feature_engine.selection.target_mean_selection.SelectByTargetMeanPerformance": {
  "lineno": 30,
  "symbols_in_volume": [
   "feature_engine.selection.base_selector.BaseSelector",
   "feature_engine.selection.base_selector.BaseSelector.transform.__doc__"
  ],
  "type": "class"
 },
 "feature_engine.selection.target_mean_selection.SelectByTargetMeanPerformance.__init__": {
  "lineno": 116,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables"
  ],
  "type": "function"
 },
 "feature_engine.selection.target_mean_selection.SelectByTargetMeanPerformance._make_categorical_pipeline": {
  "lineno": 274,
  "symbols_in_volume": [
   "feature_engine.encoding.MeanEncoder"
  ],
  "type": "function"
 },
 "feature_engine.selection.target_mean_selection.SelectByTargetMeanPerformance._make_combined_pipeline": {
  "lineno": 278,
  "symbols_in_volume": [
   "feature_engine.discretisation.EqualFrequencyDiscretiser",
   "feature_engine.discretisation.EqualWidthDiscretiser",
   "feature_engine.encoding.MeanEncoder",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "feature_engine.selection.target_mean_selection.SelectByTargetMeanPerformance._make_numerical_pipeline": {
  "lineno": 252,
  "symbols_in_volume": [
   "feature_engine.discretisation.EqualFrequencyDiscretiser",
   "feature_engine.discretisation.EqualWidthDiscretiser",
   "feature_engine.encoding.MeanEncoder",
   "sklearn.pipeline.Pipeline"
  ],
  "type": "function"
 },
 "feature_engine.selection.target_mean_selection.SelectByTargetMeanPerformance.fit": {
  "lineno": 161,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_contains_na",
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_all_variables",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.concat",
   "sklearn.metrics.r2_score",
   "sklearn.metrics.roc_auc_score",
   "sklearn.model_selection.KFold"
  ],
  "type": "function"
 },
 "feature_engine.selection.target_mean_selection.SelectByTargetMeanPerformance.transform": {
  "lineno": 303,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.transformation": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.transformation.boxcox": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.transformation.boxcox.BoxCoxTransformer": {
  "lineno": 13,
  "symbols_in_volume": [
   "feature_engine.base_transformers.BaseNumericalTransformer"
  ],
  "type": "class"
 },
 "feature_engine.transformation.boxcox.BoxCoxTransformer.__init__": {
  "lineno": 65,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.transformation.boxcox.BoxCoxTransformer.fit": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "scipy.stats.boxcox",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.transformation.boxcox.BoxCoxTransformer.transform": {
  "lineno": 117,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "scipy.stats.boxcox"
  ],
  "type": "function"
 },
 "feature_engine.transformation.log": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.transformation.log.LogTransformer": {
  "lineno": 13,
  "symbols_in_volume": [
   "feature_engine.base_transformers.BaseNumericalTransformer"
  ],
  "type": "class"
 },
 "feature_engine.transformation.log.LogTransformer.__init__": {
  "lineno": 44,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.transformation.log.LogTransformer.fit": {
  "lineno": 56,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.transformation.log.LogTransformer.transform": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.log",
   "numpy.log10",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.transformation.power": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.transformation.power.PowerTransformer": {
  "lineno": 13,
  "symbols_in_volume": [
   "feature_engine.base_transformers.BaseNumericalTransformer"
  ],
  "type": "class"
 },
 "feature_engine.transformation.power.PowerTransformer.__init__": {
  "lineno": 43,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.transformation.power.PowerTransformer.fit": {
  "lineno": 55,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.transformation.power.PowerTransformer.transform": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.power",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.transformation.reciprocal": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.transformation.reciprocal.ReciprocalTransformer": {
  "lineno": 13,
  "symbols_in_volume": [
   "feature_engine.base_transformers.BaseNumericalTransformer"
  ],
  "type": "class"
 },
 "feature_engine.transformation.reciprocal.ReciprocalTransformer.__init__": {
  "lineno": 41,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.transformation.reciprocal.ReciprocalTransformer.fit": {
  "lineno": 47,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.transformation.reciprocal.ReciprocalTransformer.transform": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.reciprocal",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "feature_engine.transformation.yeojohnson": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.transformation.yeojohnson.YeoJohnsonTransformer": {
  "lineno": 13,
  "symbols_in_volume": [
   "feature_engine.base_transformers.BaseNumericalTransformer"
  ],
  "type": "class"
 },
 "feature_engine.transformation.yeojohnson.YeoJohnsonTransformer.__init__": {
  "lineno": 54,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.transformation.yeojohnson.YeoJohnsonTransformer.fit": {
  "lineno": 60,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "scipy.stats.yeojohnson",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.transformation.yeojohnson.YeoJohnsonTransformer.transform": {
  "lineno": 102,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "scipy.stats.yeojohnson"
  ],
  "type": "function"
 },
 "feature_engine.variable_manipulation": {
  "lineno": null,
  "symbols_in_volume": [
   "typing.List",
   "typing.Union"
  ],
  "type": "module"
 },
 "feature_engine.variable_manipulation._check_input_parameter_variables": {
  "lineno": 11,
  "symbols_in_volume": [
   "typing.Any"
  ],
  "type": "function"
 },
 "feature_engine.variable_manipulation._find_all_variables": {
  "lineno": 130,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.variable_manipulation._find_or_check_categorical_variables": {
  "lineno": 85,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.variable_manipulation._find_or_check_numerical_variables": {
  "lineno": 38,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.wrappers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.wrappers.wrappers": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "feature_engine.wrappers.wrappers.SklearnTransformerWrapper": {
  "lineno": 21,
  "symbols_in_volume": [
   "sklearn.base.BaseEstimator",
   "sklearn.base.TransformerMixin"
  ],
  "type": "class"
 },
 "feature_engine.wrappers.wrappers.SklearnTransformerWrapper.__init__": {
  "lineno": 49,
  "symbols_in_volume": [
   "feature_engine.variable_manipulation._check_input_parameter_variables",
   "sklearn.preprocessing.OneHotEncoder",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "feature_engine.wrappers.wrappers.SklearnTransformerWrapper.fit": {
  "lineno": 63,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._is_dataframe",
   "feature_engine.variable_manipulation._find_all_variables",
   "feature_engine.variable_manipulation._find_or_check_numerical_variables",
   "pandas.DataFrame",
   "sklearn.impute.SimpleImputer",
   "sklearn.preprocessing.OneHotEncoder",
   "sklearn.preprocessing.OrdinalEncoder",
   "typing.Optional"
  ],
  "type": "function"
 },
 "feature_engine.wrappers.wrappers.SklearnTransformerWrapper.transform": {
  "lineno": 110,
  "symbols_in_volume": [
   "feature_engine.dataframe_checks._check_input_matches_training_df",
   "feature_engine.dataframe_checks._is_dataframe",
   "pandas.DataFrame",
   "pandas.concat",
   "sklearn.preprocessing.OneHotEncoder"
  ],
  "type": "function"
 }
}