{
 "_pytest_mock_version": {
  "data": {},
  "type": "module"
 },
 "_pytest_mock_version.version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pytest_mock": {
  "data": {
   "symbols_in_volume": [
    "_pytest_mock_version.version",
    "pytest_mock.sys",
    "str"
   ]
  },
  "type": "module"
 },
 "pytest_mock.MockFixture": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pytest_mock.MockFixture._Patcher": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pytest_mock.MockFixture._Patcher.__call__": {
  "data": {
   "lineno": 152
  },
  "type": "function"
 },
 "pytest_mock.MockFixture._Patcher.__init__": {
  "data": {
   "lineno": 122
  },
  "type": "function"
 },
 "pytest_mock.MockFixture._Patcher._start_patch": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "hasattr",
    "mock_func"
   ]
  },
  "type": "function"
 },
 "pytest_mock.MockFixture._Patcher.dict": {
  "data": {
   "lineno": 148
  },
  "type": "function"
 },
 "pytest_mock.MockFixture._Patcher.multiple": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "pytest_mock.MockFixture._Patcher.object": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "pytest_mock.MockFixture.__init__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pytest_mock._get_mock_module"
   ]
  },
  "type": "function"
 },
 "pytest_mock.MockFixture.resetall": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pytest_mock.MockFixture.spy": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "AttributeError",
    "classmethod",
    "getattr",
    "isinstance",
    "pytest_mock.inspect",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pytest_mock.MockFixture.stopall": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "reversed"
   ]
  },
  "type": "function"
 },
 "pytest_mock.MockFixture.stub": {
  "data": {
   "lineno": 105
  },
  "type": "function"
 },
 "pytest_mock.__version__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pytest_mock._get_mock_module": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "hasattr",
    "parse_ini_boolean",
    "pytest_mock.mock",
    "pytest_mock.sys"
   ]
  },
  "type": "function"
 },
 "pytest_mock._mock_module_originals": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "pytest_mock._mock_module_patches": {
  "data": {
   "lineno": 179
  },
  "type": "constant"
 },
 "pytest_mock.assert_wrapper": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "AssertionError",
    "__wrapped_mock_method__",
    "getattr",
    "pytest_mock.text_type"
   ]
  },
  "type": "function"
 },
 "pytest_mock.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pytest_mock.mock": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pytest_mock.mocker",
    "pytest_mock.pytest",
    "pytest_mock.warnings"
   ]
  },
  "type": "function"
 },
 "pytest_mock.mocker": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "pytest_mock.MockFixture",
    "pytest_mock.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_mock.parse_ini_boolean": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "KeyError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pytest_mock.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_mock.pytest_addoption": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "pytest_mock.pytest_configure": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "pytest_mock.parse_ini_boolean",
    "pytest_mock.wrap_assert_methods"
   ]
  },
  "type": "function"
 },
 "pytest_mock.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pytest_mock.text_type": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pytest_mock.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pytest_mock.unittest.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pytest_mock.unwrap_assert_methods": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pytest_mock._mock_module_originals",
    "pytest_mock._mock_module_patches"
   ]
  },
  "type": "function"
 },
 "pytest_mock.version": {
  "data": {
   "shadows": "_pytest_mock_version.version"
  },
  "type": "import"
 },
 "pytest_mock.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pytest_mock.wrap_assert_any_call": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "pytest_mock._mock_module_originals",
    "pytest_mock.assert_wrapper"
   ]
  },
  "type": "function"
 },
 "pytest_mock.wrap_assert_called_once_with": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pytest_mock._mock_module_originals",
    "pytest_mock.assert_wrapper"
   ]
  },
  "type": "function"
 },
 "pytest_mock.wrap_assert_called_with": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "pytest_mock._mock_module_originals",
    "pytest_mock.assert_wrapper"
   ]
  },
  "type": "function"
 },
 "pytest_mock.wrap_assert_has_calls": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pytest_mock._mock_module_originals",
    "pytest_mock.assert_wrapper"
   ]
  },
  "type": "function"
 },
 "pytest_mock.wrap_assert_methods": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "AttributeError",
    "add_cleanup",
    "getattr",
    "hasattr",
    "pytest_mock._get_mock_module",
    "pytest_mock._mock_module_originals",
    "pytest_mock._mock_module_patches",
    "pytest_mock.wrap_assert_any_call",
    "pytest_mock.wrap_assert_called_once_with",
    "pytest_mock.wrap_assert_called_with",
    "pytest_mock.wrap_assert_has_calls",
    "pytest_mock.wrap_assert_not_called"
   ]
  },
  "type": "function"
 },
 "pytest_mock.wrap_assert_not_called": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pytest_mock._mock_module_originals",
    "pytest_mock.assert_wrapper"
   ]
  },
  "type": "function"
 }
}