{
 "pytest_mock": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pytest_mock.MockFixture": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "object",
    "unittest.mock.ANY",
    "unittest.mock.MagicMock",
    "unittest.mock.Mock",
    "unittest.mock.PropertyMock",
    "unittest.mock.call",
    "unittest.mock.sentinel"
   ]
  },
  "type": "class"
 },
 "pytest_mock.MockFixture._Patcher": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pytest_mock.MockFixture._Patcher.__call__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "unittest.mock.patch"
   ]
  },
  "type": "function"
 },
 "pytest_mock.MockFixture._Patcher.__init__": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "pytest_mock.MockFixture._Patcher._start_patch": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "mock_func"
   ]
  },
  "type": "function"
 },
 "pytest_mock.MockFixture._Patcher.dict": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "unittest.mock.patch.dict"
   ]
  },
  "type": "function"
 },
 "pytest_mock.MockFixture._Patcher.multiple": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "unittest.mock.patch.multiple"
   ]
  },
  "type": "function"
 },
 "pytest_mock.MockFixture._Patcher.object": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "pytest_mock.MockFixture.__init__": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "pytest_mock.MockFixture.resetall": {
  "data": {
   "lineno": 31
  },
  "type": "function"
 },
 "pytest_mock.MockFixture.spy": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "AttributeError",
    "classmethod",
    "getattr",
    "isinstance",
    "pytest_mock.inspect",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pytest_mock.MockFixture.stopall": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "reversed"
   ]
  },
  "type": "function"
 },
 "pytest_mock.MockFixture.stub": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "unittest.mock.MagicMock"
   ]
  },
  "type": "function"
 },
 "pytest_mock._mock_module_originals": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "pytest_mock._mock_module_patches": {
  "data": {
   "lineno": 150
  },
  "type": "constant"
 },
 "pytest_mock.assert_wrapper": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "AssertionError",
    "__wrapped_mock_method__"
   ]
  },
  "type": "function"
 },
 "pytest_mock.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "pytest_mock.mock": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pytest_mock.mocker",
    "pytest_mock.pytest",
    "pytest_mock.warnings"
   ]
  },
  "type": "function"
 },
 "pytest_mock.mock_module": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "pytest_mock.mocker": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "pytest_mock.MockFixture",
    "pytest_mock.pytest"
   ]
  },
  "type": "function"
 },
 "pytest_mock.parse_ini_boolean": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "KeyError",
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pytest_mock.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pytest_mock.pytest_addoption": {
  "data": {
   "lineno": 239
  },
  "type": "function"
 },
 "pytest_mock.pytest_configure": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "pytest_mock.parse_ini_boolean",
    "pytest_mock.wrap_assert_methods"
   ]
  },
  "type": "function"
 },
 "pytest_mock.unwrap_assert_methods": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "pytest_mock._mock_module_originals",
    "pytest_mock._mock_module_patches"
   ]
  },
  "type": "function"
 },
 "pytest_mock.version": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "pytest_mock.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pytest_mock.wrap_assert_any_call": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "pytest_mock._mock_module_originals",
    "pytest_mock.assert_wrapper"
   ]
  },
  "type": "function"
 },
 "pytest_mock.wrap_assert_called_once_with": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pytest_mock._mock_module_originals",
    "pytest_mock.assert_wrapper"
   ]
  },
  "type": "function"
 },
 "pytest_mock.wrap_assert_called_with": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pytest_mock._mock_module_originals",
    "pytest_mock.assert_wrapper"
   ]
  },
  "type": "function"
 },
 "pytest_mock.wrap_assert_has_calls": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "pytest_mock._mock_module_originals",
    "pytest_mock.assert_wrapper"
   ]
  },
  "type": "function"
 },
 "pytest_mock.wrap_assert_methods": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "AttributeError",
    "add_cleanup",
    "getattr",
    "hasattr",
    "pytest_mock._mock_module_originals",
    "pytest_mock._mock_module_patches",
    "pytest_mock.wrap_assert_any_call",
    "pytest_mock.wrap_assert_called_once_with",
    "pytest_mock.wrap_assert_called_with",
    "pytest_mock.wrap_assert_has_calls",
    "pytest_mock.wrap_assert_not_called",
    "unittest.mock.NonCallableMock",
    "unittest.mock.patch.object"
   ]
  },
  "type": "function"
 },
 "pytest_mock.wrap_assert_not_called": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pytest_mock._mock_module_originals",
    "pytest_mock.assert_wrapper"
   ]
  },
  "type": "function"
 }
}