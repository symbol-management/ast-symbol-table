{
 "thermotools": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "thermotools._version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "thermotools._version.get_versions": {
  "lineno": 20,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "thermotools.callback": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "thermotools.callback.CallbackInterrupt": {
  "lineno": 26,
  "symbols_in_volume": [],
  "type": "class"
 },
 "thermotools.callback.CallbackInterrupt.__init__": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "thermotools.callback.CallbackInterrupt.__str__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "thermotools.callback.generic_callback_stop": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "thermotools.cset": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "thermotools.cset._compute_csets": {
  "lineno": 239,
  "symbols_in_volume": [
   "msmtools.estimation.connected_sets",
   "msmtools.estimation.largest_connected_set",
   "numpy.array",
   "numpy.concatenate",
   "numpy.intersect1d",
   "numpy.logical_and",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.unique",
   "numpy.unravel_index",
   "numpy.where",
   "numpy.zeros",
   "scipy.sparse.coo_matrix",
   "thermotools.util._overlap_post_hoc_RE"
  ],
  "type": "function"
 },
 "thermotools.cset._overlap_BAR_variance": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.concatenate",
   "numpy.cosh",
   "numpy.float64",
   "numpy.log",
   "numpy.zeros",
   "thermotools.bar.df"
  ],
  "type": "function"
 },
 "thermotools.cset.compute_csets_TRAM": {
  "lineno": 36,
  "symbols_in_volume": [],
  "type": "function"
 },
 "thermotools.cset.compute_csets_dTRAM": {
  "lineno": 154,
  "symbols_in_volume": [
   "numpy.maximum"
  ],
  "type": "function"
 },
 "thermotools.cset.restrict_to_csets": {
  "lineno": 366,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.array",
   "numpy.count_nonzero",
   "numpy.float64",
   "numpy.intc",
   "numpy.newaxis",
   "numpy.ones",
   "numpy.zeros",
   "numpy.zeros_like"
  ],
  "type": "function"
 }
}