{
 "pygc": {
  "data": {},
  "type": "module"
 },
 "pygc.__version__": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pygc.gc": {
  "data": {},
  "type": "module"
 },
 "pygc.gc.great_circle": {
  "data": {
   "lineno": 4,
   "symbols_in_volume": {
    "numpy.degrees": {
     "line number": [
      35,
      36,
      37
     ]
    },
    "numpy.radians": {
     "line number": [
      22,
      23,
      24
     ]
    },
    "numpy.vectorize": {
     "line number": [
      29
     ]
    },
    "vector_pt": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "pygc.gc.great_distance": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "AssertionError": {
     "line number": [
      76
     ]
    },
    "AttributeError": {
     "line number": [
      74
     ]
    },
    "ValueError": {
     "line number": [
      75,
      77
     ]
    },
    "bool": {
     "line number": [
      81
     ]
    },
    "numpy.degrees": {
     "line number": [
      109,
      110
     ]
    },
    "numpy.float64": {
     "line number": [
      92,
      95,
      98
     ]
    },
    "numpy.full": {
     "line number": [
      81
     ]
    },
    "numpy.isscalar": {
     "line number": [
      80
     ]
    },
    "numpy.logical_not": {
     "line number": [
      79
     ]
    },
    "numpy.ma.isMaskedArray": {
     "line number": [
      67,
      68,
      69,
      70
     ]
    },
    "numpy.ma.masked_all": {
     "line number": [
      92,
      95,
      98
     ]
    },
    "numpy.radians": {
     "line number": [
      88,
      89,
      90,
      91,
      103,
      104,
      105,
      106
     ]
    },
    "numpy.vectorize": {
     "line number": [
      65
     ]
    },
    "vector_dist": {
     "line number": [
      87,
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "pygc.gc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pygc.gc.vinc_dist": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "numpy.absolute": {
     "line number": [
      158,
      158,
      178
     ]
    },
    "numpy.allclose": {
     "line number": [
      192,
      194
     ]
    },
    "numpy.arcsin": {
     "line number": [
      196
     ]
    },
    "numpy.arctan": {
     "line number": [
      168,
      169
     ]
    },
    "numpy.arctan2": {
     "line number": [
      189,
      222,
      225
     ]
    },
    "numpy.cos": {
     "line number": [
      180,
      181,
      182,
      182,
      186,
      187,
      187,
      191,
      191,
      198,
      199,
      201,
      202,
      207,
      209,
      222,
      223,
      223,
      223,
      225,
      226,
      226,
      226
     ]
    },
    "numpy.pi": {
     "line number": [
      161
     ]
    },
    "numpy.power": {
     "line number": [
      180,
      181,
      199,
      201,
      202,
      207,
      209,
      216,
      218
     ]
    },
    "numpy.sin": {
     "line number": [
      180,
      181,
      182,
      186,
      186,
      191,
      191,
      198,
      199,
      206,
      206,
      222,
      223,
      223,
      225,
      226,
      226
     ]
    },
    "numpy.sqrt": {
     "line number": [
      184
     ]
    },
    "numpy.tan": {
     "line number": [
      165,
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "pygc.gc.vinc_pt": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      297
     ]
    },
    "numpy.arctan": {
     "line number": [
      273
     ]
    },
    "numpy.arctan2": {
     "line number": [
      274,
      311,
      315,
      326
     ]
    },
    "numpy.cos": {
     "line number": [
      274,
      275,
      301,
      302,
      303,
      304,
      306,
      311,
      311,
      311,
      313,
      313,
      313,
      315,
      315,
      316,
      321,
      322,
      322,
      327,
      327,
      327
     ]
    },
    "numpy.pi": {
     "line number": [
      263
     ]
    },
    "numpy.power": {
     "line number": [
      303,
      305,
      306,
      312,
      313,
      322
     ]
    },
    "numpy.sin": {
     "line number": [
      275,
      301,
      305,
      311,
      311,
      313,
      313,
      315,
      315,
      316,
      316,
      321,
      326,
      326
     ]
    },
    "numpy.sqrt": {
     "line number": [
      312
     ]
    },
    "numpy.tan": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "pygc.great_circle": {
  "data": {
   "shadows": "pygc.gc.great_circle"
  },
  "type": "import"
 },
 "pygc.great_distance": {
  "data": {
   "shadows": "pygc.gc.great_distance"
  },
  "type": "import"
 },
 "pygc.tests": {
  "data": {},
  "type": "module"
 },
 "pygc.tests.test_gc": {
  "data": {},
  "type": "module"
 },
 "pygc.tests.test_gc.GreatCircleTest": {
  "data": {
   "lineno": 6,
   "symbols_in_volume": {
    "pygc.tests.test_gc.unittest": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "class"
 },
 "pygc.tests.test_gc.GreatCircleTest.test_great_circle_numpy": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      41,
      42
     ]
    },
    "pygc.great_circle": {
     "line number": [
      45,
      50,
      55,
      60,
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "pygc.tests.test_gc.GreatCircleTest.test_great_circle_scalars": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "pygc.great_circle": {
     "line number": [
      14,
      19,
      24,
      29,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "pygc.tests.test_gc.great_circle": {
  "data": {
   "shadows": "pygc.great_circle"
  },
  "type": "import"
 },
 "pygc.tests.test_gc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pygc.tests.test_gc.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pygc.tests.test_gd": {
  "data": {},
  "type": "module"
 },
 "pygc.tests.test_gd.GreatDistanceTest": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": {
    "pygc.tests.test_gd.unittest": {
     "line number": [
      7
     ]
    }
   }
  },
  "type": "class"
 },
 "pygc.tests.test_gd.GreatDistanceTest.test_great_distance_masked_numpy": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      42
     ]
    },
    "numpy.load": {
     "line number": [
      56,
      57,
      58,
      60
     ]
    },
    "numpy.ma.asarray": {
     "line number": [
      43,
      49,
      50,
      51,
      52
     ]
    },
    "numpy.ma.fix_invalid": {
     "line number": [
      59,
      61
     ]
    },
    "numpy.round": {
     "line number": [
      54
     ]
    },
    "pygc.great_distance": {
     "line number": [
      47,
      53,
      62
     ]
    },
    "pygc.tests.test_gd.os": {
     "line number": [
      56,
      56,
      57,
      57,
      58,
      58,
      60,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "pygc.tests.test_gd.GreatDistanceTest.test_great_distance_numpy": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      27,
      28,
      29,
      30,
      34,
      35
     ]
    },
    "numpy.round": {
     "line number": [
      32,
      39
     ]
    },
    "pygc.great_distance": {
     "line number": [
      31,
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "pygc.tests.test_gd.GreatDistanceTest.test_great_distance_scalars": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "numpy.allclose": {
     "line number": [
      24
     ]
    },
    "numpy.round": {
     "line number": [
      16
     ]
    },
    "pygc.great_distance": {
     "line number": [
      15,
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "pygc.tests.test_gd.great_distance": {
  "data": {
   "shadows": "pygc.great_distance"
  },
  "type": "import"
 },
 "pygc.tests.test_gd.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pygc.tests.test_gd.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pygc.tests.test_gd.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 }
}