{
 "pygeoutils": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.DistributionNotFound",
   "pkg_resources.get_distribution"
  ],
  "type": "module"
 },
 "pygeoutils.exceptions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pygeoutils.exceptions.InvalidInputType": {
  "lineno": 5,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pygeoutils.exceptions.InvalidInputType.__init__": {
  "lineno": 18,
  "symbols_in_volume": [
   "typing.Optional"
  ],
  "type": "function"
 },
 "pygeoutils.exceptions.InvalidInputType.__str__": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pygeoutils.print_versions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pygeoutils.print_versions.get_sys_info": {
  "lineno": 15,
  "symbols_in_volume": [
   "locale.getlocale",
   "os.environ.get",
   "platform.uname",
   "struct.calcsize",
   "subprocess.SubprocessError",
   "sys.byteorder",
   "sys.version"
  ],
  "type": "function"
 },
 "pygeoutils.print_versions.get_sys_info._minimal_ext_cmd": {
  "lineno": 22,
  "symbols_in_volume": [
   "os.environ.get",
   "subprocess.STDOUT",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "pygeoutils.print_versions.netcdf_and_hdf5_versions": {
  "lineno": 64,
  "symbols_in_volume": [
   "h5py.version.hdf5_version",
   "netCDF4.__hdf5libversion__",
   "netCDF4.__netcdf4libversion__"
  ],
  "type": "function"
 },
 "pygeoutils.print_versions.show_versions": {
  "lineno": 83,
  "symbols_in_volume": [
   "importlib.import_module",
   "sys.modules",
   "sys.stdout"
  ],
  "type": "function"
 },
 "pygeoutils.pygeoutils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pygeoutils.pygeoutils.MatchCRS": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pygeoutils.pygeoutils.MatchCRS.bounds": {
  "lineno": 377,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs",
   "shapely.geometry.box",
   "shapely.ops.transform",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pygeoutils.pygeoutils.MatchCRS.coords": {
  "lineno": 387,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs",
   "typing.Any",
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pygeoutils.pygeoutils.MatchCRS.geometry": {
  "lineno": 369,
  "symbols_in_volume": [
   "pyproj.Transformer.from_crs",
   "shapely.geometry.Polygon",
   "shapely.ops.transform"
  ],
  "type": "function"
 },
 "pygeoutils.pygeoutils.arcgis2geojson": {
  "lineno": 61,
  "symbols_in_volume": [
   "simplejson.dumps",
   "simplejson.loads",
   "typing.Any",
   "typing.Dict",
   "typing.Optional"
  ],
  "type": "function"
 },
 "pygeoutils.pygeoutils.arcgis2geojson.convert": {
  "lineno": 81,
  "symbols_in_volume": [
   "numbers.Number",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pygeoutils.pygeoutils.arcgis2geojson.rings2geojson": {
  "lineno": 164,
  "symbols_in_volume": [
   "numpy.isclose",
   "shapely.geometry.LineString",
   "shapely.geometry.Point"
  ],
  "type": "function"
 },
 "pygeoutils.pygeoutils.check_bbox": {
  "lineno": 398,
  "symbols_in_volume": [
   "typing.Tuple"
  ],
  "type": "function"
 },
 "pygeoutils.pygeoutils.geo2polygon": {
  "lineno": 404,
  "symbols_in_volume": [
   "shapely.geometry.Polygon",
   "shapely.geometry.box",
   "typing.Tuple",
   "typing.Union"
  ],
  "type": "function"
 },
 "pygeoutils.pygeoutils.gtiff2xarray": {
  "lineno": 251,
  "symbols_in_volume": [
   "rasterio.MemoryFile",
   "shapely.geometry.Polygon",
   "typing.Dict",
   "typing.Tuple",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.merge"
  ],
  "type": "function"
 },
 "pygeoutils.pygeoutils.gtiff2xarray._create_dataset": {
  "lineno": 288,
  "symbols_in_volume": [
   "rasterio.MemoryFile",
   "rasterio.mask.mask",
   "rasterio.vrt.WarpedVRT",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset",
   "xarray.open_rasterio"
  ],
  "type": "function"
 },
 "pygeoutils.pygeoutils.json2geodf": {
  "lineno": 23,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "geopandas.GeoDataFrame.from_features",
   "typing.Any",
   "typing.Dict",
   "typing.List",
   "typing.Union"
  ],
  "type": "function"
 },
 "pygeoutils.pygeoutils.xarray_geomask": {
  "lineno": 325,
  "symbols_in_volume": [
   "rasterio.features.geometry_mask",
   "rasterio.transform.from_bounds",
   "shapely.geometry.Polygon",
   "typing.Tuple",
   "typing.Union",
   "xarray.DataArray",
   "xarray.Dataset"
  ],
  "type": "function"
 }
}