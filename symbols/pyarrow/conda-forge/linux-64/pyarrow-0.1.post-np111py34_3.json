{
 "pyarrow": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pkg_resources.DistributionNotFound",
    "pkg_resources.get_distribution"
   ]
  },
  "type": "module"
 },
 "pyarrow.Array": {
  "data": {
   "shadows": "pyarrow.array.Array"
  },
  "type": "import"
 },
 "pyarrow.ArrayValue": {
  "data": {
   "shadows": "pyarrow.scalar.ArrayValue"
  },
  "type": "import"
 },
 "pyarrow.ArrowException": {
  "data": {
   "shadows": "pyarrow.error.ArrowException"
  },
  "type": "import"
 },
 "pyarrow.BinaryValue": {
  "data": {
   "shadows": "pyarrow.scalar.BinaryValue"
  },
  "type": "import"
 },
 "pyarrow.BooleanArray": {
  "data": {
   "shadows": "pyarrow.array.BooleanArray"
  },
  "type": "import"
 },
 "pyarrow.BooleanValue": {
  "data": {
   "shadows": "pyarrow.scalar.BooleanValue"
  },
  "type": "import"
 },
 "pyarrow.Column": {
  "data": {
   "shadows": "pyarrow.table.Column"
  },
  "type": "import"
 },
 "pyarrow.DataType": {
  "data": {
   "shadows": "pyarrow.schema.DataType"
  },
  "type": "import"
 },
 "pyarrow.DistributionNotFound": {
  "data": {
   "shadows": "pkg_resources.DistributionNotFound"
  },
  "type": "import"
 },
 "pyarrow.DoubleValue": {
  "data": {
   "shadows": "pyarrow.scalar.DoubleValue"
  },
  "type": "import"
 },
 "pyarrow.Field": {
  "data": {
   "shadows": "pyarrow.schema.Field"
  },
  "type": "import"
 },
 "pyarrow.FloatValue": {
  "data": {
   "shadows": "pyarrow.scalar.FloatValue"
  },
  "type": "import"
 },
 "pyarrow.Int16Value": {
  "data": {
   "shadows": "pyarrow.scalar.Int16Value"
  },
  "type": "import"
 },
 "pyarrow.Int32Value": {
  "data": {
   "shadows": "pyarrow.scalar.Int32Value"
  },
  "type": "import"
 },
 "pyarrow.Int64Value": {
  "data": {
   "shadows": "pyarrow.scalar.Int64Value"
  },
  "type": "import"
 },
 "pyarrow.Int8Array": {
  "data": {
   "shadows": "pyarrow.array.Int8Array"
  },
  "type": "import"
 },
 "pyarrow.Int8Value": {
  "data": {
   "shadows": "pyarrow.scalar.Int8Value"
  },
  "type": "import"
 },
 "pyarrow.ListArray": {
  "data": {
   "shadows": "pyarrow.array.ListArray"
  },
  "type": "import"
 },
 "pyarrow.ListValue": {
  "data": {
   "shadows": "pyarrow.scalar.ListValue"
  },
  "type": "import"
 },
 "pyarrow.NA": {
  "data": {
   "shadows": "pyarrow.scalar.NA"
  },
  "type": "import"
 },
 "pyarrow.NAType": {
  "data": {
   "shadows": "pyarrow.scalar.NAType"
  },
  "type": "import"
 },
 "pyarrow.NumericArray": {
  "data": {
   "shadows": "pyarrow.array.NumericArray"
  },
  "type": "import"
 },
 "pyarrow.RecordBatch": {
  "data": {
   "shadows": "pyarrow.table.RecordBatch"
  },
  "type": "import"
 },
 "pyarrow.Scalar": {
  "data": {
   "shadows": "pyarrow.scalar.Scalar"
  },
  "type": "import"
 },
 "pyarrow.Schema": {
  "data": {
   "shadows": "pyarrow.schema.Schema"
  },
  "type": "import"
 },
 "pyarrow.StringArray": {
  "data": {
   "shadows": "pyarrow.array.StringArray"
  },
  "type": "import"
 },
 "pyarrow.StringValue": {
  "data": {
   "shadows": "pyarrow.scalar.StringValue"
  },
  "type": "import"
 },
 "pyarrow.Table": {
  "data": {
   "shadows": "pyarrow.table.Table"
  },
  "type": "import"
 },
 "pyarrow.UInt16Value": {
  "data": {
   "shadows": "pyarrow.scalar.UInt16Value"
  },
  "type": "import"
 },
 "pyarrow.UInt32Value": {
  "data": {
   "shadows": "pyarrow.scalar.UInt32Value"
  },
  "type": "import"
 },
 "pyarrow.UInt64Value": {
  "data": {
   "shadows": "pyarrow.scalar.UInt64Value"
  },
  "type": "import"
 },
 "pyarrow.UInt8Array": {
  "data": {
   "shadows": "pyarrow.array.UInt8Array"
  },
  "type": "import"
 },
 "pyarrow.UInt8Value": {
  "data": {
   "shadows": "pyarrow.scalar.UInt8Value"
  },
  "type": "import"
 },
 "pyarrow.__version__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pyarrow.binary": {
  "data": {
   "shadows": "pyarrow.schema.binary"
  },
  "type": "import"
 },
 "pyarrow.bool_": {
  "data": {
   "shadows": "pyarrow.schema.bool_"
  },
  "type": "import"
 },
 "pyarrow.date": {
  "data": {
   "shadows": "pyarrow.schema.date"
  },
  "type": "import"
 },
 "pyarrow.double": {
  "data": {
   "shadows": "pyarrow.schema.double"
  },
  "type": "import"
 },
 "pyarrow.field": {
  "data": {
   "shadows": "pyarrow.schema.field"
  },
  "type": "import"
 },
 "pyarrow.float_": {
  "data": {
   "shadows": "pyarrow.schema.float_"
  },
  "type": "import"
 },
 "pyarrow.from_pandas_dataframe": {
  "data": {
   "shadows": "pyarrow.table.from_pandas_dataframe"
  },
  "type": "import"
 },
 "pyarrow.from_pandas_series": {
  "data": {
   "shadows": "pyarrow.array.from_pandas_series"
  },
  "type": "import"
 },
 "pyarrow.from_pylist": {
  "data": {
   "shadows": "pyarrow.array.from_pylist"
  },
  "type": "import"
 },
 "pyarrow.get_distribution": {
  "data": {
   "shadows": "pkg_resources.get_distribution"
  },
  "type": "import"
 },
 "pyarrow.int16": {
  "data": {
   "shadows": "pyarrow.schema.int16"
  },
  "type": "import"
 },
 "pyarrow.int32": {
  "data": {
   "shadows": "pyarrow.schema.int32"
  },
  "type": "import"
 },
 "pyarrow.int64": {
  "data": {
   "shadows": "pyarrow.schema.int64"
  },
  "type": "import"
 },
 "pyarrow.int8": {
  "data": {
   "shadows": "pyarrow.schema.int8"
  },
  "type": "import"
 },
 "pyarrow.list_": {
  "data": {
   "shadows": "pyarrow.schema.list_"
  },
  "type": "import"
 },
 "pyarrow.null": {
  "data": {
   "shadows": "pyarrow.schema.null"
  },
  "type": "import"
 },
 "pyarrow.pyarrow.config": {
  "data": {
   "shadows": "pyarrow.config"
  },
  "type": "import"
 },
 "pyarrow.schema": {
  "data": {
   "shadows": "pyarrow.schema.schema"
  },
  "type": "import"
 },
 "pyarrow.string": {
  "data": {
   "shadows": "pyarrow.schema.string"
  },
  "type": "import"
 },
 "pyarrow.struct": {
  "data": {
   "shadows": "pyarrow.schema.struct"
  },
  "type": "import"
 },
 "pyarrow.tests": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_array": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_array.fmt": {
  "data": {
   "shadows": "pyarrow.formatting"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pyarrow": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.test_getitem_NA": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyarrow.tests.test_array.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_format": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyarrow.formatting.array_format",
    "pyarrow.tests.test_array.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_long_array_format": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyarrow.formatting.array_format",
    "pyarrow.tests.test_array.pyarrow",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_repr_on_pre_init_array": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_array.pyarrow",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_format": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyarrow.formatting.array_format",
    "pyarrow.tests.test_array.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_pandas_zero_copy": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pyarrow.tests.test_array.gc",
    "pyarrow.tests.test_array.pyarrow",
    "pyarrow.tests.test_array.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_total_bytes_allocated": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pyarrow.tests.test_array.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_column": {
  "data": {
   "symbols_in_volume": [
    "pyarrow"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_column.A": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pyarrow.tests.test_column.TestColumn": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyarrow.compat.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_column.TestColumn.test_basics": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_column.A"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_column.TestColumn.test_pandas": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyarrow.tests.test_column.A"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_column.arrow": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_column.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_column.unittest": {
  "data": {
   "shadows": "pyarrow.compat.unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pyarrow.compat.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_all_none": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_convert_builtin.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_boolean": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_convert_builtin.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_bytes": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_convert_builtin.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_date": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.tests.test_convert_builtin.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_double": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_convert_builtin.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_empty_list": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_convert_builtin.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_garbage_collection": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_builtin.gc",
    "pyarrow.tests.test_convert_builtin.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_integer": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_convert_builtin.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_list_of_int": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_convert_builtin.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_mixed_nesting_levels": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_builtin.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_timestamp": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.tests.test_convert_builtin.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_unicode": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "len",
    "pyarrow.compat.u",
    "pyarrow.tests.test_convert_builtin.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.pyarrow": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.unittest": {
  "data": {
   "shadows": "pyarrow.compat.unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_convert_pandas.A": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_pandas.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion._check_pandas_roundtrip": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.from_pandas_dataframe"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.setUp": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.tearDown": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_boolean_no_nulls": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_boolean_nulls": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.seed",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_arrays",
    "pyarrow.from_pandas_series"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_boolean_object_nulls": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_bytes_to_binary": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.binary",
    "pyarrow.compat.u",
    "pyarrow.from_pandas_dataframe"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_date": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.from_pandas_dataframe",
    "pyarrow.tests.test_convert_pandas.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_float_no_nulls": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_float_nulls": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_arrays",
    "pyarrow.from_pandas_series",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_integer_no_nulls": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "min",
    "numpy.iinfo",
    "numpy.random.randint",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_integer_with_nulls": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_arrays",
    "pyarrow.from_pandas_series",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_timestamps_notimezone_no_nulls": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_timestamps_notimezone_nulls": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_unicode": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.compat.u"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_hdfs.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases._make_test_file": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.setUpClass": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "classmethod",
    "pyarrow.tests.test_hdfs.hdfs_test_client",
    "pyarrow.tests.test_hdfs.random"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.tearDownClass": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_close": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.tests.test_hdfs.hdfs_test_client",
    "pyarrow.tests.test_hdfs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_download_upload": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "io.BytesIO",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_file_context_manager": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_ls": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_mkdir": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pyarrow.tests.test_hdfs.HdfsTestCases",
    "pyarrow.tests.test_hdfs.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs.check_driver": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "classmethod",
    "pyarrow.io.have_libhdfs",
    "pyarrow.tests.test_hdfs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs.test_hdfs_orphaned_file": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pyarrow.tests.test_hdfs.hdfs_test_client"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs3": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "pyarrow.tests.test_hdfs.HdfsTestCases",
    "pyarrow.tests.test_hdfs.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs3.check_driver": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "classmethod",
    "pyarrow.io.have_libhdfs3",
    "pyarrow.tests.test_hdfs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.hdfs_test_client": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "pyarrow.io.HdfsClient.connect",
    "pyarrow.tests.test_hdfs.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.io": {
  "data": {
   "shadows": "pyarrow.io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_io.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.io": {
  "data": {
   "shadows": "pyarrow.io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.test_buffer_bytes": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.io.Buffer",
    "pyarrow.io.buffer_from_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len",
    "pyarrow.io.BytesReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_non_bytes": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.compat.u",
    "pyarrow.io.BytesReader",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_inmemory_write_after_closed": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "IOError",
    "pyarrow.io.InMemoryOutputStream",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_output_stream": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len",
    "pyarrow.io.InMemoryOutputStream",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_read": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "pyarrow.io.PythonFileInterface"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_write": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "pyarrow.io.PythonFileInterface"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.tests.test_parquet.HAVE_PARQUET",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_parquet.A": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.HAVE_PARQUET": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyarrow.tests.test_parquet._test_dataframe": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.paio": {
  "data": {
   "shadows": "pyarrow.io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.parquet": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.tests.test_parquet.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.pdt": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.pq": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.test_pandas_column_selection": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.from_pandas_dataframe",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_1_0_rountrip": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.from_pandas_dataframe",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parquet",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_2_0_rountrip": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.from_pandas_dataframe",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parquet",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_configuration_options": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.from_pandas_dataframe",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_native_file_roundtrip": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.from_pandas_dataframe",
    "pyarrow.io.BufferReader",
    "pyarrow.io.InMemoryOutputStream",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_pyfile_roundtrip": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int64",
    "numpy.random.randn",
    "open",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.from_pandas_dataframe",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_single_pylist_column_roundtrip": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "float",
    "int",
    "list",
    "map",
    "pyarrow.Table.from_arrays",
    "pyarrow.from_pylist",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parquet",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_scalars.A": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.TestScalars": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "pyarrow.compat.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bool": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.BooleanValue",
    "pyarrow.NA",
    "pyarrow.from_pylist",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bytes": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "pyarrow.BinaryValue",
    "pyarrow.NA",
    "pyarrow.compat.u",
    "pyarrow.from_pylist"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_double": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.DoubleValue",
    "pyarrow.NA",
    "pyarrow.from_pylist",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_int64": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Int64Value",
    "pyarrow.NA",
    "pyarrow.from_pylist",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_list": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pyarrow.ListValue",
    "pyarrow.NA",
    "pyarrow.from_pylist",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_null_singleton": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.NAType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_string_unicode": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.NA",
    "pyarrow.StringValue",
    "pyarrow.compat.u",
    "pyarrow.from_pylist",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.unicode_type": {
  "data": {
   "shadows": "pyarrow.compat.unicode_type"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.unittest": {
  "data": {
   "shadows": "pyarrow.compat.unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema": {
  "data": {
   "symbols_in_volume": [
    "pyarrow"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_schema.A": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pyarrow.tests.test_schema.TestTypes": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pyarrow.compat.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_schema.TestTypes.test_field": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.string",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.TestTypes.test_integers": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "factory",
    "getattr",
    "pyarrow",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.TestTypes.test_list": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.list_",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.TestTypes.test_schema": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_schema.A",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.TestTypes.test_schema_equals": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "dir",
    "print",
    "pyarrow.tests.test_schema.A"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.TestTypes.test_string": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyarrow.string",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.arrow": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.unittest": {
  "data": {
   "shadows": "pyarrow.compat.unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_table.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.test_recordbatch_basics": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "len",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.from_pylist",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_to_pandas": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_schema_equals": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.ArrowException",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_batches",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_to_pandas": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_batches"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_basics": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "len",
    "pyarrow.Table.from_arrays",
    "pyarrow.from_pylist",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_pandas": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.from_pylist",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.timestamp": {
  "data": {
   "shadows": "pyarrow.schema.timestamp"
  },
  "type": "import"
 },
 "pyarrow.total_allocated_bytes": {
  "data": {
   "shadows": "pyarrow.array.total_allocated_bytes"
  },
  "type": "import"
 },
 "pyarrow.uint16": {
  "data": {
   "shadows": "pyarrow.schema.uint16"
  },
  "type": "import"
 },
 "pyarrow.uint32": {
  "data": {
   "shadows": "pyarrow.schema.uint32"
  },
  "type": "import"
 },
 "pyarrow.uint64": {
  "data": {
   "shadows": "pyarrow.schema.uint64"
  },
  "type": "import"
 },
 "pyarrow.uint8": {
  "data": {
   "shadows": "pyarrow.schema.uint8"
  },
  "type": "import"
 }
}