{
 "pyarrow": {
  "data": {
   "symbols_in_volume": [
    "__name__",
    "pkg_resources.DistributionNotFound",
    "pkg_resources.get_distribution",
    "pyarrow.filesystem.LocalFilesystem.get_instance"
   ]
  },
  "type": "module"
 },
 "pyarrow.Array": {
  "data": {
   "shadows": "pyarrow._array.Array"
  },
  "type": "import"
 },
 "pyarrow.ArrayValue": {
  "data": {
   "shadows": "pyarrow._array.ArrayValue"
  },
  "type": "import"
 },
 "pyarrow.ArrowException": {
  "data": {
   "shadows": "pyarrow._error.ArrowException"
  },
  "type": "import"
 },
 "pyarrow.ArrowIOError": {
  "data": {
   "shadows": "pyarrow._error.ArrowIOError"
  },
  "type": "import"
 },
 "pyarrow.ArrowInvalid": {
  "data": {
   "shadows": "pyarrow._error.ArrowInvalid"
  },
  "type": "import"
 },
 "pyarrow.ArrowKeyError": {
  "data": {
   "shadows": "pyarrow._error.ArrowKeyError"
  },
  "type": "import"
 },
 "pyarrow.ArrowMemoryError": {
  "data": {
   "shadows": "pyarrow._error.ArrowMemoryError"
  },
  "type": "import"
 },
 "pyarrow.ArrowNotImplementedError": {
  "data": {
   "shadows": "pyarrow._error.ArrowNotImplementedError"
  },
  "type": "import"
 },
 "pyarrow.ArrowTypeError": {
  "data": {
   "shadows": "pyarrow._error.ArrowTypeError"
  },
  "type": "import"
 },
 "pyarrow.BinaryArray": {
  "data": {
   "shadows": "pyarrow._array.BinaryArray"
  },
  "type": "import"
 },
 "pyarrow.BinaryValue": {
  "data": {
   "shadows": "pyarrow._array.BinaryValue"
  },
  "type": "import"
 },
 "pyarrow.BooleanArray": {
  "data": {
   "shadows": "pyarrow._array.BooleanArray"
  },
  "type": "import"
 },
 "pyarrow.BooleanValue": {
  "data": {
   "shadows": "pyarrow._array.BooleanValue"
  },
  "type": "import"
 },
 "pyarrow.Buffer": {
  "data": {
   "shadows": "pyarrow._io.Buffer"
  },
  "type": "import"
 },
 "pyarrow.BufferReader": {
  "data": {
   "shadows": "pyarrow._io.BufferReader"
  },
  "type": "import"
 },
 "pyarrow.ChunkedArray": {
  "data": {
   "shadows": "pyarrow._table.ChunkedArray"
  },
  "type": "import"
 },
 "pyarrow.Column": {
  "data": {
   "shadows": "pyarrow._table.Column"
  },
  "type": "import"
 },
 "pyarrow.DataType": {
  "data": {
   "shadows": "pyarrow._array.DataType"
  },
  "type": "import"
 },
 "pyarrow.Date32Array": {
  "data": {
   "shadows": "pyarrow._array.Date32Array"
  },
  "type": "import"
 },
 "pyarrow.Date32Value": {
  "data": {
   "shadows": "pyarrow._array.Date32Value"
  },
  "type": "import"
 },
 "pyarrow.Date64Array": {
  "data": {
   "shadows": "pyarrow._array.Date64Array"
  },
  "type": "import"
 },
 "pyarrow.Date64Value": {
  "data": {
   "shadows": "pyarrow._array.Date64Value"
  },
  "type": "import"
 },
 "pyarrow.DecimalArray": {
  "data": {
   "shadows": "pyarrow._array.DecimalArray"
  },
  "type": "import"
 },
 "pyarrow.DecimalType": {
  "data": {
   "shadows": "pyarrow._array.DecimalType"
  },
  "type": "import"
 },
 "pyarrow.DecimalValue": {
  "data": {
   "shadows": "pyarrow._array.DecimalValue"
  },
  "type": "import"
 },
 "pyarrow.DictionaryArray": {
  "data": {
   "shadows": "pyarrow._array.DictionaryArray"
  },
  "type": "import"
 },
 "pyarrow.DictionaryType": {
  "data": {
   "shadows": "pyarrow._array.DictionaryType"
  },
  "type": "import"
 },
 "pyarrow.DistributionNotFound": {
  "data": {
   "shadows": "pkg_resources.DistributionNotFound"
  },
  "type": "import"
 },
 "pyarrow.DoubleValue": {
  "data": {
   "shadows": "pyarrow._array.DoubleValue"
  },
  "type": "import"
 },
 "pyarrow.Field": {
  "data": {
   "shadows": "pyarrow._array.Field"
  },
  "type": "import"
 },
 "pyarrow.FileReader": {
  "data": {
   "shadows": "pyarrow.ipc.FileReader"
  },
  "type": "import"
 },
 "pyarrow.FileWriter": {
  "data": {
   "shadows": "pyarrow.ipc.FileWriter"
  },
  "type": "import"
 },
 "pyarrow.Filesystem": {
  "data": {
   "shadows": "pyarrow.filesystem.Filesystem"
  },
  "type": "import"
 },
 "pyarrow.FixedSizeBinaryArray": {
  "data": {
   "shadows": "pyarrow._array.FixedSizeBinaryArray"
  },
  "type": "import"
 },
 "pyarrow.FixedSizeBinaryType": {
  "data": {
   "shadows": "pyarrow._array.FixedSizeBinaryType"
  },
  "type": "import"
 },
 "pyarrow.FixedSizeBinaryValue": {
  "data": {
   "shadows": "pyarrow._array.FixedSizeBinaryValue"
  },
  "type": "import"
 },
 "pyarrow.FloatValue": {
  "data": {
   "shadows": "pyarrow._array.FloatValue"
  },
  "type": "import"
 },
 "pyarrow.FloatingPointArray": {
  "data": {
   "shadows": "pyarrow._array.FloatingPointArray"
  },
  "type": "import"
 },
 "pyarrow.HdfsClient": {
  "data": {
   "shadows": "pyarrow.filesystem.HdfsClient"
  },
  "type": "import"
 },
 "pyarrow.HdfsFile": {
  "data": {
   "shadows": "pyarrow._io.HdfsFile"
  },
  "type": "import"
 },
 "pyarrow.InMemoryOutputStream": {
  "data": {
   "shadows": "pyarrow._io.InMemoryOutputStream"
  },
  "type": "import"
 },
 "pyarrow.Int16Array": {
  "data": {
   "shadows": "pyarrow._array.Int16Array"
  },
  "type": "import"
 },
 "pyarrow.Int16Value": {
  "data": {
   "shadows": "pyarrow._array.Int16Value"
  },
  "type": "import"
 },
 "pyarrow.Int32Array": {
  "data": {
   "shadows": "pyarrow._array.Int32Array"
  },
  "type": "import"
 },
 "pyarrow.Int32Value": {
  "data": {
   "shadows": "pyarrow._array.Int32Value"
  },
  "type": "import"
 },
 "pyarrow.Int64Array": {
  "data": {
   "shadows": "pyarrow._array.Int64Array"
  },
  "type": "import"
 },
 "pyarrow.Int64Value": {
  "data": {
   "shadows": "pyarrow._array.Int64Value"
  },
  "type": "import"
 },
 "pyarrow.Int8Array": {
  "data": {
   "shadows": "pyarrow._array.Int8Array"
  },
  "type": "import"
 },
 "pyarrow.Int8Value": {
  "data": {
   "shadows": "pyarrow._array.Int8Value"
  },
  "type": "import"
 },
 "pyarrow.IntegerArray": {
  "data": {
   "shadows": "pyarrow._array.IntegerArray"
  },
  "type": "import"
 },
 "pyarrow.ListArray": {
  "data": {
   "shadows": "pyarrow._array.ListArray"
  },
  "type": "import"
 },
 "pyarrow.ListValue": {
  "data": {
   "shadows": "pyarrow._array.ListValue"
  },
  "type": "import"
 },
 "pyarrow.LocalFilesystem": {
  "data": {
   "shadows": "pyarrow.filesystem.LocalFilesystem"
  },
  "type": "import"
 },
 "pyarrow.MemoryMappedFile": {
  "data": {
   "shadows": "pyarrow._io.MemoryMappedFile"
  },
  "type": "import"
 },
 "pyarrow.MemoryPool": {
  "data": {
   "shadows": "pyarrow._memory.MemoryPool"
  },
  "type": "import"
 },
 "pyarrow.NA": {
  "data": {
   "shadows": "pyarrow._array.NA"
  },
  "type": "import"
 },
 "pyarrow.NAType": {
  "data": {
   "shadows": "pyarrow._array.NAType"
  },
  "type": "import"
 },
 "pyarrow.NativeFile": {
  "data": {
   "shadows": "pyarrow._io.NativeFile"
  },
  "type": "import"
 },
 "pyarrow.NullArray": {
  "data": {
   "shadows": "pyarrow._array.NullArray"
  },
  "type": "import"
 },
 "pyarrow.NumericArray": {
  "data": {
   "shadows": "pyarrow._array.NumericArray"
  },
  "type": "import"
 },
 "pyarrow.OSFile": {
  "data": {
   "shadows": "pyarrow._io.OSFile"
  },
  "type": "import"
 },
 "pyarrow.PythonFile": {
  "data": {
   "shadows": "pyarrow._io.PythonFile"
  },
  "type": "import"
 },
 "pyarrow.RecordBatch": {
  "data": {
   "shadows": "pyarrow._table.RecordBatch"
  },
  "type": "import"
 },
 "pyarrow.Scalar": {
  "data": {
   "shadows": "pyarrow._array.Scalar"
  },
  "type": "import"
 },
 "pyarrow.Schema": {
  "data": {
   "shadows": "pyarrow._array.Schema"
  },
  "type": "import"
 },
 "pyarrow.StreamReader": {
  "data": {
   "shadows": "pyarrow.ipc.StreamReader"
  },
  "type": "import"
 },
 "pyarrow.StreamWriter": {
  "data": {
   "shadows": "pyarrow.ipc.StreamWriter"
  },
  "type": "import"
 },
 "pyarrow.StringArray": {
  "data": {
   "shadows": "pyarrow._array.StringArray"
  },
  "type": "import"
 },
 "pyarrow.StringValue": {
  "data": {
   "shadows": "pyarrow._array.StringValue"
  },
  "type": "import"
 },
 "pyarrow.Table": {
  "data": {
   "shadows": "pyarrow._table.Table"
  },
  "type": "import"
 },
 "pyarrow.Tensor": {
  "data": {
   "shadows": "pyarrow._array.Tensor"
  },
  "type": "import"
 },
 "pyarrow.Time32Array": {
  "data": {
   "shadows": "pyarrow._array.Time32Array"
  },
  "type": "import"
 },
 "pyarrow.Time32Type": {
  "data": {
   "shadows": "pyarrow._array.Time32Type"
  },
  "type": "import"
 },
 "pyarrow.Time64Array": {
  "data": {
   "shadows": "pyarrow._array.Time64Array"
  },
  "type": "import"
 },
 "pyarrow.Time64Type": {
  "data": {
   "shadows": "pyarrow._array.Time64Type"
  },
  "type": "import"
 },
 "pyarrow.TimestampArray": {
  "data": {
   "shadows": "pyarrow._array.TimestampArray"
  },
  "type": "import"
 },
 "pyarrow.TimestampType": {
  "data": {
   "shadows": "pyarrow._array.TimestampType"
  },
  "type": "import"
 },
 "pyarrow.TimestampValue": {
  "data": {
   "shadows": "pyarrow._array.TimestampValue"
  },
  "type": "import"
 },
 "pyarrow.UInt16Array": {
  "data": {
   "shadows": "pyarrow._array.UInt16Array"
  },
  "type": "import"
 },
 "pyarrow.UInt16Value": {
  "data": {
   "shadows": "pyarrow._array.UInt16Value"
  },
  "type": "import"
 },
 "pyarrow.UInt32Array": {
  "data": {
   "shadows": "pyarrow._array.UInt32Array"
  },
  "type": "import"
 },
 "pyarrow.UInt32Value": {
  "data": {
   "shadows": "pyarrow._array.UInt32Value"
  },
  "type": "import"
 },
 "pyarrow.UInt64Array": {
  "data": {
   "shadows": "pyarrow._array.UInt64Array"
  },
  "type": "import"
 },
 "pyarrow.UInt64Value": {
  "data": {
   "shadows": "pyarrow._array.UInt64Value"
  },
  "type": "import"
 },
 "pyarrow.UInt8Array": {
  "data": {
   "shadows": "pyarrow._array.UInt8Array"
  },
  "type": "import"
 },
 "pyarrow.UInt8Value": {
  "data": {
   "shadows": "pyarrow._array.UInt8Value"
  },
  "type": "import"
 },
 "pyarrow.__version__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pyarrow.array": {
  "data": {
   "shadows": "pyarrow._array.array"
  },
  "type": "import"
 },
 "pyarrow.binary": {
  "data": {
   "shadows": "pyarrow._array.binary"
  },
  "type": "import"
 },
 "pyarrow.bool_": {
  "data": {
   "shadows": "pyarrow._array.bool_"
  },
  "type": "import"
 },
 "pyarrow.concat_tables": {
  "data": {
   "shadows": "pyarrow._table.concat_tables"
  },
  "type": "import"
 },
 "pyarrow.cpu_count": {
  "data": {
   "shadows": "pyarrow._config.cpu_count"
  },
  "type": "import"
 },
 "pyarrow.create_memory_map": {
  "data": {
   "shadows": "pyarrow._io.create_memory_map"
  },
  "type": "import"
 },
 "pyarrow.date32": {
  "data": {
   "shadows": "pyarrow._array.date32"
  },
  "type": "import"
 },
 "pyarrow.date64": {
  "data": {
   "shadows": "pyarrow._array.date64"
  },
  "type": "import"
 },
 "pyarrow.decimal": {
  "data": {
   "shadows": "pyarrow._array.decimal"
  },
  "type": "import"
 },
 "pyarrow.default_memory_pool": {
  "data": {
   "shadows": "pyarrow._memory.default_memory_pool"
  },
  "type": "import"
 },
 "pyarrow.default_pool": {
  "data": {
   "shadows": "pyarrow._jemalloc.default_pool"
  },
  "type": "import"
 },
 "pyarrow.dictionary": {
  "data": {
   "shadows": "pyarrow._array.dictionary"
  },
  "type": "import"
 },
 "pyarrow.feather": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "pandas.__version__"
   ]
  },
  "type": "module"
 },
 "pyarrow.feather.FeatherError": {
  "data": {
   "shadows": "pyarrow._io.FeatherError"
  },
  "type": "import"
 },
 "pyarrow.feather.FeatherReader": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pyarrow._io.FeatherReader"
   ]
  },
  "type": "class"
 },
 "pyarrow.feather.FeatherReader.__init__": {
  "data": {
   "lineno": 36
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherReader.read": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyarrow._table.Table.from_arrays",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherWriter": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.feather.FeatherWriter.__init__": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pyarrow._io.FeatherWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherWriter.write": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "isinstance",
    "pandas.SparseDataFrame",
    "pandas.lib.infer_dtype",
    "pyarrow.compat.pdapi.is_object_dtype",
    "pyarrow.feather.six",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyarrow.feather.Table": {
  "data": {
   "shadows": "pyarrow._table.Table"
  },
  "type": "import"
 },
 "pyarrow.feather.ext": {
  "data": {
   "shadows": "pyarrow._io"
  },
  "type": "import"
 },
 "pyarrow.feather.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.feather.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.feather.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.feather.pdapi": {
  "data": {
   "shadows": "pyarrow.compat.pdapi"
  },
  "type": "import"
 },
 "pyarrow.feather.read_feather": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pyarrow.feather.FeatherReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyarrow.feather.write_feather": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.feather.FeatherWriter",
    "pyarrow.feather.gc",
    "pyarrow.feather.os",
    "pyarrow.feather.six"
   ]
  },
  "type": "function"
 },
 "pyarrow.field": {
  "data": {
   "shadows": "pyarrow._array.field"
  },
  "type": "import"
 },
 "pyarrow.filesystem": {
  "data": {},
  "type": "module"
 },
 "pyarrow.filesystem.Filesystem": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.filesystem.Filesystem.delete": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.Filesystem.exists": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.Filesystem.isdir": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.Filesystem.isfile": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.Filesystem.ls": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.Filesystem.mkdir": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.Filesystem.read_parquet": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pyarrow.parquet.ParquetDataset"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.HdfsClient": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "pyarrow._io._HdfsClient",
    "pyarrow.filesystem.Filesystem"
   ]
  },
  "type": "class"
 },
 "pyarrow.filesystem.HdfsClient.__init__": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "pyarrow.filesystem.HdfsClient.delete": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "pyarrow._io._HdfsClient.delete",
    "pyarrow.filesystem.Filesystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.HdfsClient.isdir": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pyarrow._io._HdfsClient.isdir",
    "pyarrow.filesystem.Filesystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.HdfsClient.isfile": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pyarrow._io._HdfsClient.isfile",
    "pyarrow.filesystem.Filesystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.HdfsClient.ls": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "pyarrow._io._HdfsClient.ls"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.HdfsClient.mkdir": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pyarrow._io._HdfsClient.mkdir",
    "pyarrow.filesystem.Filesystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFilesystem": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pyarrow.filesystem.Filesystem"
   ]
  },
  "type": "class"
 },
 "pyarrow.filesystem.LocalFilesystem.exists": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pyarrow.filesystem.Filesystem",
    "pyarrow.filesystem.os",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFilesystem.get_instance": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "classmethod",
    "pyarrow.filesystem.LocalFilesystem"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFilesystem.isdir": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pyarrow.filesystem.Filesystem",
    "pyarrow.filesystem.os",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFilesystem.isfile": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pyarrow.filesystem.Filesystem",
    "pyarrow.filesystem.os",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFilesystem.ls": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "os.path.join",
    "pyarrow.filesystem.Filesystem",
    "pyarrow.filesystem.os",
    "pyarrow.util.implements",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFilesystem.mkdir": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pyarrow.filesystem.Filesystem",
    "pyarrow.filesystem.os",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFilesystem.open": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "open"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.ParquetDataset": {
  "data": {
   "shadows": "pyarrow.parquet.ParquetDataset"
  },
  "type": "import"
 },
 "pyarrow.filesystem.implements": {
  "data": {
   "shadows": "pyarrow.util.implements"
  },
  "type": "import"
 },
 "pyarrow.filesystem.io": {
  "data": {
   "shadows": "pyarrow._io"
  },
  "type": "import"
 },
 "pyarrow.filesystem.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.filesystem.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "pyarrow.float16": {
  "data": {
   "shadows": "pyarrow._array.float16"
  },
  "type": "import"
 },
 "pyarrow.float32": {
  "data": {
   "shadows": "pyarrow._array.float32"
  },
  "type": "import"
 },
 "pyarrow.float64": {
  "data": {
   "shadows": "pyarrow._array.float64"
  },
  "type": "import"
 },
 "pyarrow.from_numpy_dtype": {
  "data": {
   "shadows": "pyarrow._array.from_numpy_dtype"
  },
  "type": "import"
 },
 "pyarrow.frombuffer": {
  "data": {
   "shadows": "pyarrow._io.frombuffer"
  },
  "type": "import"
 },
 "pyarrow.get_distribution": {
  "data": {
   "shadows": "pkg_resources.get_distribution"
  },
  "type": "import"
 },
 "pyarrow.get_record_batch_size": {
  "data": {
   "shadows": "pyarrow._io.get_record_batch_size"
  },
  "type": "import"
 },
 "pyarrow.get_tensor_size": {
  "data": {
   "shadows": "pyarrow._io.get_tensor_size"
  },
  "type": "import"
 },
 "pyarrow.have_libhdfs": {
  "data": {
   "shadows": "pyarrow._io.have_libhdfs"
  },
  "type": "import"
 },
 "pyarrow.have_libhdfs3": {
  "data": {
   "shadows": "pyarrow._io.have_libhdfs3"
  },
  "type": "import"
 },
 "pyarrow.int16": {
  "data": {
   "shadows": "pyarrow._array.int16"
  },
  "type": "import"
 },
 "pyarrow.int32": {
  "data": {
   "shadows": "pyarrow._array.int32"
  },
  "type": "import"
 },
 "pyarrow.int64": {
  "data": {
   "shadows": "pyarrow._array.int64"
  },
  "type": "import"
 },
 "pyarrow.int8": {
  "data": {
   "shadows": "pyarrow._array.int8"
  },
  "type": "import"
 },
 "pyarrow.ipc": {
  "data": {},
  "type": "module"
 },
 "pyarrow.ipc.FileReader": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyarrow._io._FileReader"
   ]
  },
  "type": "class"
 },
 "pyarrow.ipc.FileReader.__init__": {
  "data": {
   "lineno": 67
  },
  "type": "function"
 },
 "pyarrow.ipc.FileWriter": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyarrow._io._FileWriter"
   ]
  },
  "type": "class"
 },
 "pyarrow.ipc.FileWriter.__init__": {
  "data": {
   "lineno": 82
  },
  "type": "function"
 },
 "pyarrow.ipc.StreamReader": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "pyarrow._io._StreamReader"
   ]
  },
  "type": "class"
 },
 "pyarrow.ipc.StreamReader.__init__": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "pyarrow.ipc.StreamReader.__iter__": {
  "data": {
   "lineno": 35
  },
  "type": "function"
 },
 "pyarrow.ipc.StreamWriter": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyarrow._io._StreamWriter"
   ]
  },
  "type": "class"
 },
 "pyarrow.ipc.StreamWriter.__init__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pyarrow.ipc._io": {
  "data": {
   "shadows": "pyarrow._io"
  },
  "type": "import"
 },
 "pyarrow.jemalloc_memory_pool": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "pyarrow._jemalloc.default_pool"
   ]
  },
  "type": "function"
 },
 "pyarrow.list_": {
  "data": {
   "shadows": "pyarrow._array.list_"
  },
  "type": "import"
 },
 "pyarrow.localfs": {
  "data": {
   "lineno": 109
  },
  "type": "constant"
 },
 "pyarrow.memory_map": {
  "data": {
   "shadows": "pyarrow._io.memory_map"
  },
  "type": "import"
 },
 "pyarrow.null": {
  "data": {
   "shadows": "pyarrow._array.null"
  },
  "type": "import"
 },
 "pyarrow.pyarrow._config": {
  "data": {
   "shadows": "pyarrow._config"
  },
  "type": "import"
 },
 "pyarrow.read_tensor": {
  "data": {
   "shadows": "pyarrow._io.read_tensor"
  },
  "type": "import"
 },
 "pyarrow.schema": {
  "data": {
   "shadows": "pyarrow._array.schema"
  },
  "type": "import"
 },
 "pyarrow.set_cpu_count": {
  "data": {
   "shadows": "pyarrow._config.set_cpu_count"
  },
  "type": "import"
 },
 "pyarrow.set_memory_pool": {
  "data": {
   "shadows": "pyarrow._memory.set_memory_pool"
  },
  "type": "import"
 },
 "pyarrow.string": {
  "data": {
   "shadows": "pyarrow._array.string"
  },
  "type": "import"
 },
 "pyarrow.struct": {
  "data": {
   "shadows": "pyarrow._array.struct"
  },
  "type": "import"
 },
 "pyarrow.tests": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.conftest": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.conftest.groups": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pyarrow.tests.conftest.pytest_addoption": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyarrow.tests.conftest.groups"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_configure": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_runtest_setup": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "getattr",
    "pyarrow.tests.conftest.groups",
    "pytest.skip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.skip": {
  "data": {
   "shadows": "pytest.skip"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.pandas_examples.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_arrays": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_lists": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.pandas_examples.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_array.fmt": {
  "data": {
   "shadows": "pyarrow.formatting"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.test_array_slice": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_boxed_arrays": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.repeat",
    "object",
    "pyarrow.Array.from_pandas",
    "pyarrow.DictionaryArray.from_arrays",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_numpy": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.repeat",
    "object",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.NA",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_with_pandas": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.repeat",
    "numpy.where",
    "object",
    "pandas.Categorical.from_codes",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pyarrow.DictionaryArray.from_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_getitem_NA": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyarrow.NA",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_format": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.formatting.array_format"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_long_array_format": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.formatting.array_format",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_repr_on_pre_init_array": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "len",
    "pyarrow.Array",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_format": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.formatting.array_format"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_pandas_zero_copy": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.gc",
    "pyarrow.tests.test_array.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_total_bytes_allocated": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyarrow.compat.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_all_none": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.null"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_boolean": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.bool_"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_bytes": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_date": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.date64",
    "pyarrow.tests.test_convert_builtin.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_decimal": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_decimal_different_precisions": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_decimal_large_integer": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_decimal_negative": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_decimal_no_scale": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_decimal_no_whole_part": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_double": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.float64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_empty_list": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.null"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_fixed_size_bytes": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_fixed_size_bytes_does_not_accept_varying_lengths": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_garbage_collection": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.gc",
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_integer": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_list_of_int": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_mixed_nesting_levels": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_mixed_types_fails": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pyarrow.ArrowException",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_sequence_types": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_timestamp": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_unicode": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.unittest": {
  "data": {
   "shadows": "pyarrow.compat.unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_convert_pandas.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_pandas.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion._check_array_roundtrip": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "numpy.ma.masked_array",
    "pandas.Series",
    "pandas.isnull",
    "pandas.util.testing.assert_series_equal",
    "pyarrow.Array.from_pandas",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion._check_pandas_roundtrip": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.setUp": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.tearDown": {
  "data": {
   "lineno": 65
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_all_nones": {
  "data": {
   "lineno": 590,
   "symbols_in_volume": [
    "_check_series",
    "numpy.nan",
    "numpy.sqrt",
    "object",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_all_nones._check_series": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pyarrow.Array.from_pandas",
    "pyarrow.NA",
    "pyarrow.NullArray"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_boolean_no_nulls": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_boolean_nulls": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.seed",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Array.from_pandas",
    "pyarrow.Table.from_arrays",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_boolean_object_nulls": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DataFrame",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_bytes_to_binary": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.binary",
    "pyarrow.compat.u"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_category": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_column_of_arrays": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": [
    "dataframe_with_arrays",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_column_of_lists": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "dataframe_with_lists",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_date_infer": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.to_datetime",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.date32",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.tests.test_convert_pandas.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_date_objects_typed": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DataFrame",
    "pandas.NaT.value",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Array.from_pandas",
    "pyarrow.Table.from_arrays",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.tests.test_convert_pandas.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_dates_from_integers": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.Array.from_pandas",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.tests.test_convert_pandas.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_decimal_128_from_pandas": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.decimal",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.tests.test_convert_pandas.decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_decimal_128_to_pandas": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_convert_pandas.decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_decimal_32_from_pandas": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.decimal",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.tests.test_convert_pandas.decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_decimal_32_to_pandas": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_convert_pandas.decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_decimal_64_from_pandas": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.decimal",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.tests.test_convert_pandas.decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_decimal_64_to_pandas": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_convert_pandas.decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_fixed_size_bytes": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.binary",
    "pyarrow.field",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_fixed_size_bytes_does_not_accept_varying_lengths": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.ArrowInvalid",
    "pyarrow.Table.from_pandas",
    "pyarrow.binary",
    "pyarrow.field",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_float_no_nulls": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_float_nulls": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Array.from_pandas",
    "pyarrow.Table.from_arrays",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.schema",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_integer_no_nulls": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "max",
    "min",
    "numpy.iinfo",
    "numpy.int_",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.schema",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_integer_with_nulls": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Array.from_pandas",
    "pyarrow.Table.from_arrays",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_mixed_types_fails": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.ArrowException",
    "pyarrow.Table.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_strided_data_import": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "bool",
    "numpy.arange",
    "numpy.array",
    "numpy.random.randn",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing.rands",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_threaded_conversion": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_pandas._alltypes_example"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_timedelta": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "NotImplementedError",
    "numpy.arange",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_convert_pandas.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_timestamps_notimezone_no_nulls": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_timestamps_notimezone_nulls": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_timestamps_with_timezone": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_unicode": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas._alltypes_example": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_pandas.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_feather.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.FeatherReader": {
  "data": {
   "shadows": "pyarrow.feather.FeatherReader"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.FeatherWriter": {
  "data": {
   "shadows": "pyarrow._io.FeatherWriter"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.TestFeatherReader": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._assert_error_on_write": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._assert_error_on_write.f": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pyarrow.feather.write_feather"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._check_pandas_roundtrip": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.feather.read_feather",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.os",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._get_null_counts": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pyarrow.feather.FeatherReader",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.setUp": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.tearDown": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_no_nulls": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_nulls": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.seed",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow._io.FeatherWriter",
    "pyarrow.feather.read_feather",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_object_nulls": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_category": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_delete_partial_file_on_error": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.os",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path",
    "pyarrow.tests.test_feather.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_duplicate_columns": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_empty_strings": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_file_not_exist": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyarrow.ArrowIOError",
    "pyarrow.feather.FeatherReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_filelike_objects": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.feather.read_feather",
    "pyarrow.feather.write_feather"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_float_no_nulls": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_float_nulls": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow._io.FeatherWriter",
    "pyarrow.feather.read_feather",
    "pyarrow.tests.test_feather.random_path",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_integer_no_nulls": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_integer_with_nulls": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow._io.FeatherWriter",
    "pyarrow.feather.read_feather",
    "pyarrow.tests.test_feather.random_path",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_nan_as_null": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_non_string_columns": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_num_rows_attr": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pyarrow.feather.FeatherReader",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_out_of_float64_timestamp_with_nulls": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_overwritten_file": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_platform_numpy_integers": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_read_columns": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_sparse_dataframe": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_strings": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timedelta_with_nulls": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timestamp": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timestamp_with_nulls": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_unicode_filename": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_unsupported": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.guid": {
  "data": {
   "shadows": "pyarrow.compat.guid"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.random_path": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pyarrow.compat.guid"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.read_feather": {
  "data": {
   "shadows": "pyarrow.feather.read_feather"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.write_feather": {
  "data": {
   "shadows": "pyarrow.feather.write_feather"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_hdfs.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "object",
    "pyarrow.tests.test_hdfs.pytest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases._make_test_file": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.setUpClass": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "classmethod",
    "pyarrow.tests.test_hdfs.hdfs_test_client",
    "pyarrow.tests.test_hdfs.random"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.tearDownClass": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_close": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.tests.test_hdfs.hdfs_test_client",
    "pyarrow.tests.test_hdfs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_download_upload": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "io.BytesIO",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_file_context_manager": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_ls": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "os.path.join",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_mkdir": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_read_multiple_parquet_files": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int64",
    "os.path.join",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.compat.guid",
    "pyarrow.concat_tables",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet.parquet",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_read_whole_file": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "pyarrow.tests.test_hdfs.HdfsTestCases",
    "pyarrow.tests.test_hdfs.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs.check_driver": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "classmethod",
    "pyarrow.have_libhdfs",
    "pyarrow.tests.test_hdfs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs.test_hdfs_orphaned_file": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "pyarrow.tests.test_hdfs.hdfs_test_client"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs3": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pyarrow.tests.test_hdfs.HdfsTestCases",
    "pyarrow.tests.test_hdfs.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs3.check_driver": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "classmethod",
    "pyarrow.have_libhdfs3",
    "pyarrow.tests.test_hdfs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.guid": {
  "data": {
   "shadows": "pyarrow.compat.guid"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.hdfs_test_client": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "pyarrow.HdfsClient",
    "pyarrow.tests.test_hdfs.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.pdt": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.pq": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.test_parquet": {
  "data": {
   "shadows": "pyarrow.tests.test_parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.test_hdfs.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_io.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io._check_native_file_reader": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "FACTORY",
    "len"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io._try_delete": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "pyarrow.tests.test_io.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.guid": {
  "data": {
   "shadows": "pyarrow.compat.guid"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.sample_disk_data": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.random.randint",
    "open",
    "pyarrow.compat.guid",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.sample_disk_data.teardown": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "pyarrow.tests.test_io._try_delete"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytearray": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "bytearray",
    "isinstance",
    "pyarrow.Buffer",
    "pyarrow.frombuffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytes": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Buffer",
    "pyarrow.frombuffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "isinstance",
    "memoryview",
    "pyarrow.Buffer",
    "pyarrow.frombuffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview_is_immutable": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "isinstance",
    "memoryview",
    "pyarrow.Buffer",
    "pyarrow.frombuffer",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "make_buffer",
    "pyarrow.tests.test_io.gc"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting.make_buffer": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "bytearray",
    "pyarrow.frombuffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_non_bytes": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.BufferReader",
    "pyarrow.compat.u",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "get_buffer",
    "pyarrow.tests.test_io.gc"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference.get_buffer": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pyarrow.BufferReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_inmemory_write_after_closed": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "IOError",
    "pyarrow.InMemoryOutputStream",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_reader": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "pyarrow.memory_map",
    "pyarrow.tests.test_io._check_native_file_reader",
    "pyarrow.tests.test_io.sample_disk_data"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_retain_buffer_reference": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.gc",
    "pyarrow.tests.test_io.sample_disk_data"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_writer": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "IOError",
    "numpy.random.randint",
    "open",
    "pyarrow.compat.guid",
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_output_stream": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "len",
    "pyarrow.InMemoryOutputStream",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_nativefile_write_memoryview": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "bytearray",
    "numpy.frombuffer",
    "pyarrow.InMemoryOutputStream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_reader": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "pyarrow.OSFile",
    "pyarrow.tests.test_io._check_native_file_reader",
    "pyarrow.tests.test_io.sample_disk_data"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_writer": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "IOError",
    "numpy.random.randint",
    "open",
    "pyarrow.OSFile",
    "pyarrow.compat.guid",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_read": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_write": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_ipc.MessagingTest": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.MessagingTest._get_sink": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.io"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessagingTest._get_source": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyarrow.BufferReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessagingTest.setUp": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessagingTest.write_batches": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.RecordBatch.from_pandas",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "pyarrow.compat.unittest.TestCase",
    "pyarrow.tests.test_ipc.MessagingTest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestFile._get_writer": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pyarrow.FileWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile.test_read_all": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pyarrow.FileReader",
    "pyarrow.Table.from_batches"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile.test_simple_roundtrip": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pyarrow.FileReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestInMemoryFile": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.TestFile"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestInMemoryFile._get_sink": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pyarrow.InMemoryOutputStream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestInMemoryFile._get_source": {
  "data": {
   "lineno": 214
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pyarrow.compat.unittest.TestCase",
    "pyarrow.tests.test_ipc.MessagingTest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestSocket.StreamReaderServer": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.threading"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestSocket.StreamReaderServer.get_result": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.StreamReaderServer.init": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.socket"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.StreamReaderServer.run": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.StreamReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket._get_sink": {
  "data": {
   "lineno": 184
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket._get_writer": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "pyarrow.StreamWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.setUp": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.start_server": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.TestSocket",
    "pyarrow.tests.test_ipc.socket"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.stop_and_get_result": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.test_read_all": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "pyarrow.Table.from_batches"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.test_simple_roundtrip": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "enumerate",
    "len"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pyarrow.compat.unittest.TestCase",
    "pyarrow.tests.test_ipc.MessagingTest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestStream._get_writer": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pyarrow.StreamWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream.test_read_all": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pyarrow.StreamReader",
    "pyarrow.Table.from_batches"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream.test_simple_roundtrip": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "StopIteration",
    "enumerate",
    "len",
    "pyarrow.StreamReader",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.read_file": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "pyarrow.FileReader",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.test_get_record_batch_size": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.get_record_batch_size"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_ipc_zero_copy_numpy": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.BufferReader",
    "pyarrow.InMemoryOutputStream",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.tests.test_ipc.read_file",
    "pyarrow.tests.test_ipc.write_file"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.unittest": {
  "data": {
   "shadows": "pyarrow.compat.unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.write_file": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "pyarrow.FileWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jemalloc": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.jemalloc_memory_pool",
    "pyarrow.tests.test_jemalloc.HAVE_JEMALLOC",
    "pyarrow.tests.test_jemalloc.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_jemalloc.HAVE_JEMALLOC": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyarrow.tests.test_jemalloc.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jemalloc.jemalloc": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyarrow.tests.test_jemalloc.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jemalloc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jemalloc.test_default_memory_pool": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.default_memory_pool",
    "pyarrow.jemalloc_memory_pool",
    "pyarrow.set_memory_pool",
    "pyarrow.tests.test_jemalloc.gc",
    "pyarrow.tests.test_jemalloc.jemalloc",
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jemalloc.test_different_memory_pool": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.jemalloc_memory_pool",
    "pyarrow.tests.test_jemalloc.gc",
    "pyarrow.tests.test_jemalloc.jemalloc",
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.tests.test_parquet.HAVE_PARQUET",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_parquet.HAVE_PARQUET": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyarrow.tests.test_parquet.LocalFilesystem": {
  "data": {
   "shadows": "pyarrow.filesystem.LocalFilesystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet._filter_partition": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": [
    "bool",
    "len",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._generate_partition_directories": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "_visit_level",
    "len",
    "pyarrow.filesystem.LocalFilesystem.get_instance"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._generate_partition_directories._visit_level": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "_visit_level",
    "os.path.join",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet._filter_partition"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._random_integers": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.iinfo",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_dataframe": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.util.testing.rands",
    "pyarrow.tests.test_parquet._random_integers",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.alltypes_sample": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.guid": {
  "data": {
   "shadows": "pyarrow.compat.guid"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.make_sample_file": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.io"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.parquet": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyarrow.tests.test_parquet.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.pq": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.test_column_of_arrays": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "dataframe_with_arrays",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_column_of_lists": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "dataframe_with_lists",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_compare_schemas": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.make_sample_file",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_date_time_types": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "_assert_unsupported",
    "numpy.arange",
    "numpy.array",
    "pandas.Timestamp",
    "pyarrow.Array.from_pandas",
    "pyarrow.Table.from_arrays",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parquet",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_date_time_types._assert_unsupported": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.Table.from_arrays",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_min_chunksize": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parquet",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_multithreaded_read": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_column_selection": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_1_0_rountrip": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parquet",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_2_0_rountrip": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_configuration_options": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.random.randn",
    "numpy.random.seed",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_native_file_roundtrip": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.BufferReader",
    "pyarrow.InMemoryOutputStream",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_pyfile_roundtrip": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float32",
    "numpy.float64",
    "numpy.int64",
    "numpy.random.randn",
    "open",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_metadata_api": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.make_sample_file",
    "pyarrow.tests.test_parquet.parquet",
    "pyarrow.tests.test_parquet.pytest",
    "repr",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_piece_basics": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "pyarrow.parquet.ParquetDatasetPiece",
    "pyarrow.tests.test_parquet.parquet",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_piece_read": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetDatasetPiece",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_partition_set_dictionary_type": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pyarrow.IntegerArray",
    "pyarrow.StringArray",
    "pyarrow.compat.u",
    "pyarrow.parquet.PartitionSet",
    "pyarrow.tests.test_parquet.datetime",
    "pyarrow.tests.test_parquet.parquet",
    "pyarrow.tests.test_parquet.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pass_separate_metadata": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parquet"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_common_metadata_files": {
  "data": {
   "lineno": 606,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.random.randn",
    "os.path.join",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.parquet.write_metadata",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parquet",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_files": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "ValueError",
    "numpy.int64",
    "open",
    "os.path.join",
    "pyarrow.Table.from_arrays",
    "pyarrow.Table.from_pandas",
    "pyarrow.compat.guid",
    "pyarrow.concat_tables",
    "pyarrow.localfs.read_parquet",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet._test_dataframe",
    "pyarrow.tests.test_parquet.os",
    "pyarrow.tests.test_parquet.parquet",
    "pyarrow.tests.test_parquet.pytest",
    "range",
    "read_multiple_files"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_files.read_multiple_files": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "pyarrow.parquet.ParquetDataset"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_partitioned_directory": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.array",
    "numpy.random.randn",
    "numpy.tile",
    "object",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.parquet.ParquetDataset",
    "pyarrow.tests.test_parquet._generate_partition_directories",
    "pyarrow.tests.test_parquet.parquet",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_single_row_group": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.concat_tables",
    "pyarrow.parquet.ParquetFile",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.alltypes_sample",
    "pyarrow.tests.test_parquet.io",
    "pyarrow.tests.test_parquet.parquet",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_single_pylist_column_roundtrip": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "float",
    "int",
    "list",
    "map",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.tests.test_parquet.parquet",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_parquet.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_parquet.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_scalars.TestScalars": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pyarrow.compat.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bool": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.BooleanValue",
    "pyarrow.NA",
    "pyarrow.array",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bytes": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "pyarrow.BinaryValue",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.compat.u"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_dictionary": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "enumerate",
    "pandas.Categorical",
    "pandas.Series",
    "pyarrow.DictionaryArray.from_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_double": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.DoubleValue",
    "pyarrow.NA",
    "pyarrow.array",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_fixed_size_bytes": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "pyarrow.FixedSizeBinaryValue",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_int64": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Int64Value",
    "pyarrow.NA",
    "pyarrow.array",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_list": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pyarrow.ListValue",
    "pyarrow.NA",
    "pyarrow.array",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_null_singleton": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.NAType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_string_unicode": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.NA",
    "pyarrow.StringValue",
    "pyarrow.array",
    "pyarrow.compat.unicode_type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_timestamp": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.date_range",
    "pyarrow.Array.from_pandas",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.unicode_type": {
  "data": {
   "shadows": "pyarrow.compat.unicode_type"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.unittest": {
  "data": {
   "shadows": "pyarrow.compat.unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_schema.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.test_field": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.string",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_field_add_remove_metadata": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_field_empty": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "ReferenceError",
    "pyarrow.Field",
    "pyarrow.tests.test_schema.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_add_remove_metadata": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_time_types": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.test_schema.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_from_numpy_dtype_timestamps": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "numpy.dtype",
    "pyarrow.from_numpy_dtype",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_integers": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "factory",
    "getattr",
    "pyarrow",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_list": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.list_",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_string": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pyarrow.string",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_timestamp_with_tz": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_to_pandas_dtype": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_table.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.TestColumn": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyarrow.compat.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_table.TestColumn.test_basics": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "len",
    "pyarrow.Table.from_arrays",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.TestColumn.test_from_array": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyarrow.Column.from_array",
    "pyarrow.array",
    "pyarrow.field"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.TestColumn.test_pandas": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.test_concat_tables": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "len",
    "list",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.concat_tables",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_basics": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "len",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_to_pandas": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_slice": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_schema_equals": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.ArrowException",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_batches",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_to_pandas": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_batches"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_add_column": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "pyarrow.Column.from_array",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_basics": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "len",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_pandas": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_remove_column": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.unittest": {
  "data": {
   "shadows": "pyarrow.compat.unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_tensor._try_delete": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pyarrow.tests.test_tensor.gc",
    "pyarrow.tests.test_tensor.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.test_tensor_attrs": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "list",
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_base_object": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_tensor.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_roundtrip": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.create_memory_map",
    "pyarrow.read_tensor",
    "pyarrow.tests.test_tensor.os",
    "pyarrow.write_tensor",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_strided": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.create_memory_map",
    "pyarrow.tests.test_tensor.os",
    "pyarrow.tests.test_tensor.pytest",
    "pyarrow.write_tensor",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_numpy_roundtrip": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.tests.test_tensor.pytest",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_size": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.get_tensor_size"
   ]
  },
  "type": "function"
 },
 "pyarrow.time32": {
  "data": {
   "shadows": "pyarrow._array.time32"
  },
  "type": "import"
 },
 "pyarrow.time64": {
  "data": {
   "shadows": "pyarrow._array.time64"
  },
  "type": "import"
 },
 "pyarrow.timestamp": {
  "data": {
   "shadows": "pyarrow._array.timestamp"
  },
  "type": "import"
 },
 "pyarrow.total_allocated_bytes": {
  "data": {
   "shadows": "pyarrow._memory.total_allocated_bytes"
  },
  "type": "import"
 },
 "pyarrow.uint16": {
  "data": {
   "shadows": "pyarrow._array.uint16"
  },
  "type": "import"
 },
 "pyarrow.uint32": {
  "data": {
   "shadows": "pyarrow._array.uint32"
  },
  "type": "import"
 },
 "pyarrow.uint64": {
  "data": {
   "shadows": "pyarrow._array.uint64"
  },
  "type": "import"
 },
 "pyarrow.uint8": {
  "data": {
   "shadows": "pyarrow._array.uint8"
  },
  "type": "import"
 },
 "pyarrow.util": {
  "data": {},
  "type": "module"
 },
 "pyarrow.util.implements": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "pyarrow.util.implements.decorator": {
  "data": {
   "lineno": 22
  },
  "type": "function"
 },
 "pyarrow.write_tensor": {
  "data": {
   "shadows": "pyarrow._io.write_tensor"
  },
  "type": "import"
 }
}