{
 "*": {
  "data": {
   "imports": [
    "pyarrow._fs"
   ]
  },
  "type": "star-import"
 },
 "pyarrow": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.parse_git",
    "pyarrow.setuptools_scm"
   ]
  },
  "type": "module"
 },
 "pyarrow.Array": {
  "data": {
   "shadows": "pyarrow.lib.Array"
  },
  "type": "import"
 },
 "pyarrow.ArrayValue": {
  "data": {
   "shadows": "pyarrow.lib.ArrayValue"
  },
  "type": "import"
 },
 "pyarrow.ArrowException": {
  "data": {
   "shadows": "pyarrow.lib.ArrowException"
  },
  "type": "import"
 },
 "pyarrow.ArrowIOError": {
  "data": {
   "shadows": "pyarrow.lib.ArrowIOError"
  },
  "type": "import"
 },
 "pyarrow.ArrowInvalid": {
  "data": {
   "shadows": "pyarrow.lib.ArrowInvalid"
  },
  "type": "import"
 },
 "pyarrow.ArrowKeyError": {
  "data": {
   "shadows": "pyarrow.lib.ArrowKeyError"
  },
  "type": "import"
 },
 "pyarrow.ArrowMemoryError": {
  "data": {
   "shadows": "pyarrow.lib.ArrowMemoryError"
  },
  "type": "import"
 },
 "pyarrow.ArrowNotImplementedError": {
  "data": {
   "shadows": "pyarrow.lib.ArrowNotImplementedError"
  },
  "type": "import"
 },
 "pyarrow.ArrowSerializationError": {
  "data": {
   "shadows": "pyarrow.lib.ArrowSerializationError"
  },
  "type": "import"
 },
 "pyarrow.ArrowTypeError": {
  "data": {
   "shadows": "pyarrow.lib.ArrowTypeError"
  },
  "type": "import"
 },
 "pyarrow.BaseExtensionType": {
  "data": {
   "shadows": "pyarrow.lib.BaseExtensionType"
  },
  "type": "import"
 },
 "pyarrow.BinaryArray": {
  "data": {
   "shadows": "pyarrow.lib.BinaryArray"
  },
  "type": "import"
 },
 "pyarrow.BinaryValue": {
  "data": {
   "shadows": "pyarrow.lib.BinaryValue"
  },
  "type": "import"
 },
 "pyarrow.BooleanArray": {
  "data": {
   "shadows": "pyarrow.lib.BooleanArray"
  },
  "type": "import"
 },
 "pyarrow.BooleanValue": {
  "data": {
   "shadows": "pyarrow.lib.BooleanValue"
  },
  "type": "import"
 },
 "pyarrow.Buffer": {
  "data": {
   "shadows": "pyarrow.lib.Buffer"
  },
  "type": "import"
 },
 "pyarrow.BufferOutputStream": {
  "data": {
   "shadows": "pyarrow.lib.BufferOutputStream"
  },
  "type": "import"
 },
 "pyarrow.BufferReader": {
  "data": {
   "shadows": "pyarrow.lib.BufferReader"
  },
  "type": "import"
 },
 "pyarrow.BufferedInputStream": {
  "data": {
   "shadows": "pyarrow.lib.BufferedInputStream"
  },
  "type": "import"
 },
 "pyarrow.BufferedOutputStream": {
  "data": {
   "shadows": "pyarrow.lib.BufferedOutputStream"
  },
  "type": "import"
 },
 "pyarrow.ChunkedArray": {
  "data": {
   "shadows": "pyarrow.lib.ChunkedArray"
  },
  "type": "import"
 },
 "pyarrow.CompressedInputStream": {
  "data": {
   "shadows": "pyarrow.lib.CompressedInputStream"
  },
  "type": "import"
 },
 "pyarrow.CompressedOutputStream": {
  "data": {
   "shadows": "pyarrow.lib.CompressedOutputStream"
  },
  "type": "import"
 },
 "pyarrow.DataType": {
  "data": {
   "shadows": "pyarrow.lib.DataType"
  },
  "type": "import"
 },
 "pyarrow.Date32Array": {
  "data": {
   "shadows": "pyarrow.lib.Date32Array"
  },
  "type": "import"
 },
 "pyarrow.Date32Value": {
  "data": {
   "shadows": "pyarrow.lib.Date32Value"
  },
  "type": "import"
 },
 "pyarrow.Date64Array": {
  "data": {
   "shadows": "pyarrow.lib.Date64Array"
  },
  "type": "import"
 },
 "pyarrow.Date64Value": {
  "data": {
   "shadows": "pyarrow.lib.Date64Value"
  },
  "type": "import"
 },
 "pyarrow.Decimal128Array": {
  "data": {
   "shadows": "pyarrow.lib.Decimal128Array"
  },
  "type": "import"
 },
 "pyarrow.Decimal128Type": {
  "data": {
   "shadows": "pyarrow.lib.Decimal128Type"
  },
  "type": "import"
 },
 "pyarrow.DecimalValue": {
  "data": {
   "shadows": "pyarrow.lib.DecimalValue"
  },
  "type": "import"
 },
 "pyarrow.DeserializationCallbackError": {
  "data": {
   "shadows": "pyarrow.lib.DeserializationCallbackError"
  },
  "type": "import"
 },
 "pyarrow.DictionaryArray": {
  "data": {
   "shadows": "pyarrow.lib.DictionaryArray"
  },
  "type": "import"
 },
 "pyarrow.DictionaryMemo": {
  "data": {
   "shadows": "pyarrow.lib.DictionaryMemo"
  },
  "type": "import"
 },
 "pyarrow.DictionaryType": {
  "data": {
   "shadows": "pyarrow.lib.DictionaryType"
  },
  "type": "import"
 },
 "pyarrow.DictionaryValue": {
  "data": {
   "shadows": "pyarrow.lib.DictionaryValue"
  },
  "type": "import"
 },
 "pyarrow.DoubleValue": {
  "data": {
   "shadows": "pyarrow.lib.DoubleValue"
  },
  "type": "import"
 },
 "pyarrow.ExtensionArray": {
  "data": {
   "shadows": "pyarrow.lib.ExtensionArray"
  },
  "type": "import"
 },
 "pyarrow.ExtensionType": {
  "data": {
   "shadows": "pyarrow.lib.ExtensionType"
  },
  "type": "import"
 },
 "pyarrow.Field": {
  "data": {
   "shadows": "pyarrow.lib.Field"
  },
  "type": "import"
 },
 "pyarrow.FileSystem": {
  "data": {
   "shadows": "pyarrow.filesystem.FileSystem"
  },
  "type": "import"
 },
 "pyarrow.FixedSizeBinaryArray": {
  "data": {
   "shadows": "pyarrow.lib.FixedSizeBinaryArray"
  },
  "type": "import"
 },
 "pyarrow.FixedSizeBinaryType": {
  "data": {
   "shadows": "pyarrow.lib.FixedSizeBinaryType"
  },
  "type": "import"
 },
 "pyarrow.FixedSizeBinaryValue": {
  "data": {
   "shadows": "pyarrow.lib.FixedSizeBinaryValue"
  },
  "type": "import"
 },
 "pyarrow.FixedSizeBufferWriter": {
  "data": {
   "shadows": "pyarrow.lib.FixedSizeBufferWriter"
  },
  "type": "import"
 },
 "pyarrow.FloatValue": {
  "data": {
   "shadows": "pyarrow.lib.FloatValue"
  },
  "type": "import"
 },
 "pyarrow.FloatingPointArray": {
  "data": {
   "shadows": "pyarrow.lib.FloatingPointArray"
  },
  "type": "import"
 },
 "pyarrow.HadoopFileSystem": {
  "data": {
   "shadows": "pyarrow.hdfs.HadoopFileSystem"
  },
  "type": "import"
 },
 "pyarrow.HalfFloatValue": {
  "data": {
   "shadows": "pyarrow.lib.HalfFloatValue"
  },
  "type": "import"
 },
 "pyarrow.HdfsFile": {
  "data": {
   "shadows": "pyarrow.lib.HdfsFile"
  },
  "type": "import"
 },
 "pyarrow.Int16Array": {
  "data": {
   "shadows": "pyarrow.lib.Int16Array"
  },
  "type": "import"
 },
 "pyarrow.Int16Value": {
  "data": {
   "shadows": "pyarrow.lib.Int16Value"
  },
  "type": "import"
 },
 "pyarrow.Int32Array": {
  "data": {
   "shadows": "pyarrow.lib.Int32Array"
  },
  "type": "import"
 },
 "pyarrow.Int32Value": {
  "data": {
   "shadows": "pyarrow.lib.Int32Value"
  },
  "type": "import"
 },
 "pyarrow.Int64Array": {
  "data": {
   "shadows": "pyarrow.lib.Int64Array"
  },
  "type": "import"
 },
 "pyarrow.Int64Value": {
  "data": {
   "shadows": "pyarrow.lib.Int64Value"
  },
  "type": "import"
 },
 "pyarrow.Int8Array": {
  "data": {
   "shadows": "pyarrow.lib.Int8Array"
  },
  "type": "import"
 },
 "pyarrow.Int8Value": {
  "data": {
   "shadows": "pyarrow.lib.Int8Value"
  },
  "type": "import"
 },
 "pyarrow.IntegerArray": {
  "data": {
   "shadows": "pyarrow.lib.IntegerArray"
  },
  "type": "import"
 },
 "pyarrow.LargeBinaryArray": {
  "data": {
   "shadows": "pyarrow.lib.LargeBinaryArray"
  },
  "type": "import"
 },
 "pyarrow.LargeBinaryValue": {
  "data": {
   "shadows": "pyarrow.lib.LargeBinaryValue"
  },
  "type": "import"
 },
 "pyarrow.LargeListArray": {
  "data": {
   "shadows": "pyarrow.lib.LargeListArray"
  },
  "type": "import"
 },
 "pyarrow.LargeListType": {
  "data": {
   "shadows": "pyarrow.lib.LargeListType"
  },
  "type": "import"
 },
 "pyarrow.LargeListValue": {
  "data": {
   "shadows": "pyarrow.lib.LargeListValue"
  },
  "type": "import"
 },
 "pyarrow.LargeStringArray": {
  "data": {
   "shadows": "pyarrow.lib.LargeStringArray"
  },
  "type": "import"
 },
 "pyarrow.LargeStringValue": {
  "data": {
   "shadows": "pyarrow.lib.LargeStringValue"
  },
  "type": "import"
 },
 "pyarrow.ListArray": {
  "data": {
   "shadows": "pyarrow.lib.ListArray"
  },
  "type": "import"
 },
 "pyarrow.ListType": {
  "data": {
   "shadows": "pyarrow.lib.ListType"
  },
  "type": "import"
 },
 "pyarrow.ListValue": {
  "data": {
   "shadows": "pyarrow.lib.ListValue"
  },
  "type": "import"
 },
 "pyarrow.LocalFileSystem": {
  "data": {
   "shadows": "pyarrow.filesystem.LocalFileSystem"
  },
  "type": "import"
 },
 "pyarrow.LoggingMemoryPool": {
  "data": {
   "shadows": "pyarrow.lib.LoggingMemoryPool"
  },
  "type": "import"
 },
 "pyarrow.MemoryMappedFile": {
  "data": {
   "shadows": "pyarrow.lib.MemoryMappedFile"
  },
  "type": "import"
 },
 "pyarrow.MemoryPool": {
  "data": {
   "shadows": "pyarrow.lib.MemoryPool"
  },
  "type": "import"
 },
 "pyarrow.Message": {
  "data": {
   "shadows": "pyarrow.ipc.Message"
  },
  "type": "import"
 },
 "pyarrow.MessageReader": {
  "data": {
   "shadows": "pyarrow.ipc.MessageReader"
  },
  "type": "import"
 },
 "pyarrow.MockOutputStream": {
  "data": {
   "shadows": "pyarrow.lib.MockOutputStream"
  },
  "type": "import"
 },
 "pyarrow.NA": {
  "data": {
   "shadows": "pyarrow.lib.NA"
  },
  "type": "import"
 },
 "pyarrow.NULL": {
  "data": {
   "shadows": "pyarrow.lib._NULL"
  },
  "type": "import"
 },
 "pyarrow.NativeFile": {
  "data": {
   "shadows": "pyarrow.lib.NativeFile"
  },
  "type": "import"
 },
 "pyarrow.NullArray": {
  "data": {
   "shadows": "pyarrow.lib.NullArray"
  },
  "type": "import"
 },
 "pyarrow.NumericArray": {
  "data": {
   "shadows": "pyarrow.lib.NumericArray"
  },
  "type": "import"
 },
 "pyarrow.OSFile": {
  "data": {
   "shadows": "pyarrow.lib.OSFile"
  },
  "type": "import"
 },
 "pyarrow.ProxyMemoryPool": {
  "data": {
   "shadows": "pyarrow.lib.ProxyMemoryPool"
  },
  "type": "import"
 },
 "pyarrow.PyExtensionType": {
  "data": {
   "shadows": "pyarrow.lib.PyExtensionType"
  },
  "type": "import"
 },
 "pyarrow.PythonFile": {
  "data": {
   "shadows": "pyarrow.lib.PythonFile"
  },
  "type": "import"
 },
 "pyarrow.RecordBatch": {
  "data": {
   "shadows": "pyarrow.lib.RecordBatch"
  },
  "type": "import"
 },
 "pyarrow.RecordBatchFileReader": {
  "data": {
   "shadows": "pyarrow.ipc.RecordBatchFileReader"
  },
  "type": "import"
 },
 "pyarrow.RecordBatchFileWriter": {
  "data": {
   "shadows": "pyarrow.ipc.RecordBatchFileWriter"
  },
  "type": "import"
 },
 "pyarrow.RecordBatchStreamReader": {
  "data": {
   "shadows": "pyarrow.ipc.RecordBatchStreamReader"
  },
  "type": "import"
 },
 "pyarrow.RecordBatchStreamWriter": {
  "data": {
   "shadows": "pyarrow.ipc.RecordBatchStreamWriter"
  },
  "type": "import"
 },
 "pyarrow.ResizableBuffer": {
  "data": {
   "shadows": "pyarrow.lib.ResizableBuffer"
  },
  "type": "import"
 },
 "pyarrow.Scalar": {
  "data": {
   "shadows": "pyarrow.lib.Scalar"
  },
  "type": "import"
 },
 "pyarrow.Schema": {
  "data": {
   "shadows": "pyarrow.lib.Schema"
  },
  "type": "import"
 },
 "pyarrow.SerializationCallbackError": {
  "data": {
   "shadows": "pyarrow.lib.SerializationCallbackError"
  },
  "type": "import"
 },
 "pyarrow.SerializationContext": {
  "data": {
   "shadows": "pyarrow.lib.SerializationContext"
  },
  "type": "import"
 },
 "pyarrow.SerializedPyObject": {
  "data": {
   "shadows": "pyarrow.lib.SerializedPyObject"
  },
  "type": "import"
 },
 "pyarrow.SparseTensorCOO": {
  "data": {
   "shadows": "pyarrow.lib.SparseTensorCOO"
  },
  "type": "import"
 },
 "pyarrow.SparseTensorCSR": {
  "data": {
   "shadows": "pyarrow.lib.SparseTensorCSR"
  },
  "type": "import"
 },
 "pyarrow.StringArray": {
  "data": {
   "shadows": "pyarrow.lib.StringArray"
  },
  "type": "import"
 },
 "pyarrow.StringValue": {
  "data": {
   "shadows": "pyarrow.lib.StringValue"
  },
  "type": "import"
 },
 "pyarrow.StructArray": {
  "data": {
   "shadows": "pyarrow.lib.StructArray"
  },
  "type": "import"
 },
 "pyarrow.StructType": {
  "data": {
   "shadows": "pyarrow.lib.StructType"
  },
  "type": "import"
 },
 "pyarrow.StructValue": {
  "data": {
   "shadows": "pyarrow.lib.StructValue"
  },
  "type": "import"
 },
 "pyarrow.Table": {
  "data": {
   "shadows": "pyarrow.lib.Table"
  },
  "type": "import"
 },
 "pyarrow.Tensor": {
  "data": {
   "shadows": "pyarrow.lib.Tensor"
  },
  "type": "import"
 },
 "pyarrow.Time32Array": {
  "data": {
   "shadows": "pyarrow.lib.Time32Array"
  },
  "type": "import"
 },
 "pyarrow.Time32Type": {
  "data": {
   "shadows": "pyarrow.lib.Time32Type"
  },
  "type": "import"
 },
 "pyarrow.Time32Value": {
  "data": {
   "shadows": "pyarrow.lib.Time32Value"
  },
  "type": "import"
 },
 "pyarrow.Time64Array": {
  "data": {
   "shadows": "pyarrow.lib.Time64Array"
  },
  "type": "import"
 },
 "pyarrow.Time64Type": {
  "data": {
   "shadows": "pyarrow.lib.Time64Type"
  },
  "type": "import"
 },
 "pyarrow.Time64Value": {
  "data": {
   "shadows": "pyarrow.lib.Time64Value"
  },
  "type": "import"
 },
 "pyarrow.TimestampArray": {
  "data": {
   "shadows": "pyarrow.lib.TimestampArray"
  },
  "type": "import"
 },
 "pyarrow.TimestampType": {
  "data": {
   "shadows": "pyarrow.lib.TimestampType"
  },
  "type": "import"
 },
 "pyarrow.TimestampValue": {
  "data": {
   "shadows": "pyarrow.lib.TimestampValue"
  },
  "type": "import"
 },
 "pyarrow.UInt16Array": {
  "data": {
   "shadows": "pyarrow.lib.UInt16Array"
  },
  "type": "import"
 },
 "pyarrow.UInt16Value": {
  "data": {
   "shadows": "pyarrow.lib.UInt16Value"
  },
  "type": "import"
 },
 "pyarrow.UInt32Array": {
  "data": {
   "shadows": "pyarrow.lib.UInt32Array"
  },
  "type": "import"
 },
 "pyarrow.UInt32Value": {
  "data": {
   "shadows": "pyarrow.lib.UInt32Value"
  },
  "type": "import"
 },
 "pyarrow.UInt64Array": {
  "data": {
   "shadows": "pyarrow.lib.UInt64Array"
  },
  "type": "import"
 },
 "pyarrow.UInt64Value": {
  "data": {
   "shadows": "pyarrow.lib.UInt64Value"
  },
  "type": "import"
 },
 "pyarrow.UInt8Array": {
  "data": {
   "shadows": "pyarrow.lib.UInt8Array"
  },
  "type": "import"
 },
 "pyarrow.UInt8Value": {
  "data": {
   "shadows": "pyarrow.lib.UInt8Value"
  },
  "type": "import"
 },
 "pyarrow.UnionArray": {
  "data": {
   "shadows": "pyarrow.lib.UnionArray"
  },
  "type": "import"
 },
 "pyarrow.UnionType": {
  "data": {
   "shadows": "pyarrow.lib.UnionType"
  },
  "type": "import"
 },
 "pyarrow.UnionValue": {
  "data": {
   "shadows": "pyarrow.lib.UnionValue"
  },
  "type": "import"
 },
 "pyarrow.UnknownExtensionType": {
  "data": {
   "shadows": "pyarrow.lib.UnknownExtensionType"
  },
  "type": "import"
 },
 "pyarrow.__version__": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyarrow._deprecate_api": {
  "data": {
   "shadows": "pyarrow.util._deprecate_api"
  },
  "type": "import"
 },
 "pyarrow._generated_version": {
  "data": {},
  "type": "module"
 },
 "pyarrow._generated_version.version": {
  "data": {
   "lineno": 4
  },
  "type": "constant"
 },
 "pyarrow._get_pkg_config_executable": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "os.environ.get"
   ]
  },
  "type": "function"
 },
 "pyarrow._has_pkg_config": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "OSError",
    "pyarrow._get_pkg_config_executable",
    "pyarrow.subprocess"
   ]
  },
  "type": "function"
 },
 "pyarrow._os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow._plasma_store_entry_point": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "os.execv",
    "os.path.join",
    "pyarrow.pyarrow",
    "sys.argv"
   ]
  },
  "type": "function"
 },
 "pyarrow._read_pkg_config_variable": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "RuntimeError",
    "pyarrow._get_pkg_config_executable",
    "pyarrow.subprocess"
   ]
  },
  "type": "function"
 },
 "pyarrow._sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.allocate_buffer": {
  "data": {
   "shadows": "pyarrow.lib.allocate_buffer"
  },
  "type": "import"
 },
 "pyarrow.array": {
  "data": {
   "shadows": "pyarrow.lib.array"
  },
  "type": "import"
 },
 "pyarrow.benchmark": {
  "data": {},
  "type": "module"
 },
 "pyarrow.benchmark.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.benchmark.benchmark_PandasObjectIsNull": {
  "data": {
   "shadows": "pyarrow.lib.benchmark_PandasObjectIsNull"
  },
  "type": "import"
 },
 "pyarrow.binary": {
  "data": {
   "shadows": "pyarrow.lib.binary"
  },
  "type": "import"
 },
 "pyarrow.bool_": {
  "data": {
   "shadows": "pyarrow.lib.bool_"
  },
  "type": "import"
 },
 "pyarrow.chunked_array": {
  "data": {
   "shadows": "pyarrow.lib.chunked_array"
  },
  "type": "import"
 },
 "pyarrow.compat": {
  "data": {
   "shadows": "pyarrow.compat"
  },
  "type": "import"
 },
 "pyarrow.compress": {
  "data": {
   "shadows": "pyarrow.lib.compress"
  },
  "type": "import"
 },
 "pyarrow.concat_arrays": {
  "data": {
   "shadows": "pyarrow.lib.concat_arrays"
  },
  "type": "import"
 },
 "pyarrow.concat_tables": {
  "data": {
   "shadows": "pyarrow.lib.concat_tables"
  },
  "type": "import"
 },
 "pyarrow.cpu_count": {
  "data": {
   "shadows": "pyarrow.lib.cpu_count"
  },
  "type": "import"
 },
 "pyarrow.create_memory_map": {
  "data": {
   "shadows": "pyarrow.lib.create_memory_map"
  },
  "type": "import"
 },
 "pyarrow.csv": {
  "data": {},
  "type": "module"
 },
 "pyarrow.csv.ConvertOptions": {
  "data": {
   "shadows": "pyarrow._csv.ConvertOptions"
  },
  "type": "import"
 },
 "pyarrow.csv.ParseOptions": {
  "data": {
   "shadows": "pyarrow._csv.ParseOptions"
  },
  "type": "import"
 },
 "pyarrow.csv.ReadOptions": {
  "data": {
   "shadows": "pyarrow._csv.ReadOptions"
  },
  "type": "import"
 },
 "pyarrow.csv.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.csv.read_csv": {
  "data": {
   "shadows": "pyarrow._csv.read_csv"
  },
  "type": "import"
 },
 "pyarrow.cuda": {
  "data": {},
  "type": "module"
 },
 "pyarrow.cuda.BufferReader": {
  "data": {
   "shadows": "pyarrow._cuda.BufferReader"
  },
  "type": "import"
 },
 "pyarrow.cuda.BufferWriter": {
  "data": {
   "shadows": "pyarrow._cuda.BufferWriter"
  },
  "type": "import"
 },
 "pyarrow.cuda.Context": {
  "data": {
   "shadows": "pyarrow._cuda.Context"
  },
  "type": "import"
 },
 "pyarrow.cuda.CudaBuffer": {
  "data": {
   "shadows": "pyarrow._cuda.CudaBuffer"
  },
  "type": "import"
 },
 "pyarrow.cuda.HostBuffer": {
  "data": {
   "shadows": "pyarrow._cuda.HostBuffer"
  },
  "type": "import"
 },
 "pyarrow.cuda.IpcMemHandle": {
  "data": {
   "shadows": "pyarrow._cuda.IpcMemHandle"
  },
  "type": "import"
 },
 "pyarrow.cuda.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.cuda.new_host_buffer": {
  "data": {
   "shadows": "pyarrow._cuda.new_host_buffer"
  },
  "type": "import"
 },
 "pyarrow.cuda.read_message": {
  "data": {
   "shadows": "pyarrow._cuda.read_message"
  },
  "type": "import"
 },
 "pyarrow.cuda.read_record_batch": {
  "data": {
   "shadows": "pyarrow._cuda.read_record_batch"
  },
  "type": "import"
 },
 "pyarrow.cuda.serialize_record_batch": {
  "data": {
   "shadows": "pyarrow._cuda.serialize_record_batch"
  },
  "type": "import"
 },
 "pyarrow.date32": {
  "data": {
   "shadows": "pyarrow.lib.date32"
  },
  "type": "import"
 },
 "pyarrow.date64": {
  "data": {
   "shadows": "pyarrow.lib.date64"
  },
  "type": "import"
 },
 "pyarrow.decimal128": {
  "data": {
   "shadows": "pyarrow.lib.decimal128"
  },
  "type": "import"
 },
 "pyarrow.decompress": {
  "data": {
   "shadows": "pyarrow.lib.decompress"
  },
  "type": "import"
 },
 "pyarrow.default_memory_pool": {
  "data": {
   "shadows": "pyarrow.lib.default_memory_pool"
  },
  "type": "import"
 },
 "pyarrow.default_serialization_context": {
  "data": {
   "shadows": "pyarrow.serialization.default_serialization_context"
  },
  "type": "import"
 },
 "pyarrow.deserialize": {
  "data": {
   "shadows": "pyarrow.lib.deserialize"
  },
  "type": "import"
 },
 "pyarrow.deserialize_components": {
  "data": {
   "shadows": "pyarrow.lib.deserialize_components"
  },
  "type": "import"
 },
 "pyarrow.deserialize_from": {
  "data": {
   "shadows": "pyarrow.lib.deserialize_from"
  },
  "type": "import"
 },
 "pyarrow.deserialize_pandas": {
  "data": {
   "shadows": "pyarrow.ipc.deserialize_pandas"
  },
  "type": "import"
 },
 "pyarrow.dictionary": {
  "data": {
   "shadows": "pyarrow.lib.dictionary"
  },
  "type": "import"
 },
 "pyarrow.feather": {
  "data": {},
  "type": "module"
 },
 "pyarrow.feather.FeatherDataset": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.feather.FeatherDataset.__init__": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pyarrow.feather._check_pandas_version"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherDataset.read_pandas": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherDataset.read_table": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pyarrow.feather.FeatherReader",
    "pyarrow.lib.concat_tables"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherDataset.validate_schemas": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherError": {
  "data": {
   "shadows": "pyarrow.lib.FeatherError"
  },
  "type": "import"
 },
 "pyarrow.feather.FeatherReader": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyarrow.lib.FeatherReader"
   ]
  },
  "type": "class"
 },
 "pyarrow.feather.FeatherReader.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyarrow.feather._check_pandas_version"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherReader.read_pandas": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherReader.read_table": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "TypeError",
    "all",
    "int",
    "map",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherWriter": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.feather.FeatherWriter.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pyarrow.feather._check_pandas_version",
    "pyarrow.lib.FeatherWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherWriter.write": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "isinstance",
    "len",
    "pyarrow.feather.check_chunked_overflow",
    "pyarrow.lib.Table.from_pandas",
    "pyarrow.pandas_compat._pandas_api.has_sparse",
    "pyarrow.pandas_compat._pandas_api.pd.SparseDataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.Table": {
  "data": {
   "shadows": "pyarrow.lib.Table"
  },
  "type": "import"
 },
 "pyarrow.feather._check_pandas_version": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.pandas_compat._pandas_api.loose_version"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather._pandas_api": {
  "data": {
   "shadows": "pyarrow.pandas_compat._pandas_api"
  },
  "type": "import"
 },
 "pyarrow.feather.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.feather.check_chunked_overflow": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.lib.binary",
    "pyarrow.lib.string",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.concat_tables": {
  "data": {
   "shadows": "pyarrow.lib.concat_tables"
  },
  "type": "import"
 },
 "pyarrow.feather.ext": {
  "data": {
   "shadows": "pyarrow.lib"
  },
  "type": "import"
 },
 "pyarrow.feather.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.feather.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.feather.read_feather": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "pyarrow.feather.FeatherReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.read_table": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pyarrow.feather.FeatherReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyarrow.feather.write_feather": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "pyarrow.feather.FeatherWriter",
    "pyarrow.feather.gc",
    "pyarrow.feather.os",
    "pyarrow.feather.six"
   ]
  },
  "type": "function"
 },
 "pyarrow.field": {
  "data": {
   "shadows": "pyarrow.lib.field"
  },
  "type": "import"
 },
 "pyarrow.flight": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.flight.sys"
   ]
  },
  "type": "module"
 },
 "pyarrow.flight.Action": {
  "data": {
   "shadows": "pyarrow._flight.Action"
  },
  "type": "import"
 },
 "pyarrow.flight.ActionType": {
  "data": {
   "shadows": "pyarrow._flight.ActionType"
  },
  "type": "import"
 },
 "pyarrow.flight.BasicAuth": {
  "data": {
   "shadows": "pyarrow._flight.BasicAuth"
  },
  "type": "import"
 },
 "pyarrow.flight.CertKeyPair": {
  "data": {
   "shadows": "pyarrow._flight.CertKeyPair"
  },
  "type": "import"
 },
 "pyarrow.flight.ClientAuthHandler": {
  "data": {
   "shadows": "pyarrow._flight.ClientAuthHandler"
  },
  "type": "import"
 },
 "pyarrow.flight.DescriptorType": {
  "data": {
   "shadows": "pyarrow._flight.DescriptorType"
  },
  "type": "import"
 },
 "pyarrow.flight.FlightCallOptions": {
  "data": {
   "shadows": "pyarrow._flight.FlightCallOptions"
  },
  "type": "import"
 },
 "pyarrow.flight.FlightCancelledError": {
  "data": {
   "shadows": "pyarrow._flight.FlightCancelledError"
  },
  "type": "import"
 },
 "pyarrow.flight.FlightClient": {
  "data": {
   "shadows": "pyarrow._flight.FlightClient"
  },
  "type": "import"
 },
 "pyarrow.flight.FlightDescriptor": {
  "data": {
   "shadows": "pyarrow._flight.FlightDescriptor"
  },
  "type": "import"
 },
 "pyarrow.flight.FlightEndpoint": {
  "data": {
   "shadows": "pyarrow._flight.FlightEndpoint"
  },
  "type": "import"
 },
 "pyarrow.flight.FlightError": {
  "data": {
   "shadows": "pyarrow._flight.FlightError"
  },
  "type": "import"
 },
 "pyarrow.flight.FlightInfo": {
  "data": {
   "shadows": "pyarrow._flight.FlightInfo"
  },
  "type": "import"
 },
 "pyarrow.flight.FlightInternalError": {
  "data": {
   "shadows": "pyarrow._flight.FlightInternalError"
  },
  "type": "import"
 },
 "pyarrow.flight.FlightServerBase": {
  "data": {
   "shadows": "pyarrow._flight.FlightServerBase"
  },
  "type": "import"
 },
 "pyarrow.flight.FlightTimedOutError": {
  "data": {
   "shadows": "pyarrow._flight.FlightTimedOutError"
  },
  "type": "import"
 },
 "pyarrow.flight.FlightUnauthenticatedError": {
  "data": {
   "shadows": "pyarrow._flight.FlightUnauthenticatedError"
  },
  "type": "import"
 },
 "pyarrow.flight.FlightUnauthorizedError": {
  "data": {
   "shadows": "pyarrow._flight.FlightUnauthorizedError"
  },
  "type": "import"
 },
 "pyarrow.flight.FlightUnavailableError": {
  "data": {
   "shadows": "pyarrow._flight.FlightUnavailableError"
  },
  "type": "import"
 },
 "pyarrow.flight.GeneratorStream": {
  "data": {
   "shadows": "pyarrow._flight.GeneratorStream"
  },
  "type": "import"
 },
 "pyarrow.flight.Location": {
  "data": {
   "shadows": "pyarrow._flight.Location"
  },
  "type": "import"
 },
 "pyarrow.flight.RecordBatchStream": {
  "data": {
   "shadows": "pyarrow._flight.RecordBatchStream"
  },
  "type": "import"
 },
 "pyarrow.flight.Result": {
  "data": {
   "shadows": "pyarrow._flight.Result"
  },
  "type": "import"
 },
 "pyarrow.flight.SchemaResult": {
  "data": {
   "shadows": "pyarrow._flight.SchemaResult"
  },
  "type": "import"
 },
 "pyarrow.flight.ServerAuthHandler": {
  "data": {
   "shadows": "pyarrow._flight.ServerAuthHandler"
  },
  "type": "import"
 },
 "pyarrow.flight.Ticket": {
  "data": {
   "shadows": "pyarrow._flight.Ticket"
  },
  "type": "import"
 },
 "pyarrow.flight.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.flight.connect": {
  "data": {
   "shadows": "pyarrow._flight.connect"
  },
  "type": "import"
 },
 "pyarrow.flight.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.float16": {
  "data": {
   "shadows": "pyarrow.lib.float16"
  },
  "type": "import"
 },
 "pyarrow.float32": {
  "data": {
   "shadows": "pyarrow.lib.float32"
  },
  "type": "import"
 },
 "pyarrow.float64": {
  "data": {
   "shadows": "pyarrow.lib.float64"
  },
  "type": "import"
 },
 "pyarrow.foreign_buffer": {
  "data": {
   "shadows": "pyarrow.lib.foreign_buffer"
  },
  "type": "import"
 },
 "pyarrow.from_numpy_dtype": {
  "data": {
   "shadows": "pyarrow.lib.from_numpy_dtype"
  },
  "type": "import"
 },
 "pyarrow.fs": {
  "data": {},
  "type": "module"
 },
 "pyarrow.fs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.get_include": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.get_libraries": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "pyarrow.get_library_dirs": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "append_library_dir",
    "os.environ",
    "os.environ.get",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.exists",
    "os.path.join",
    "pyarrow._has_pkg_config",
    "pyarrow._read_pkg_config_variable",
    "sys.executable",
    "sys.platform"
   ]
  },
  "type": "function"
 },
 "pyarrow.get_library_dirs.append_library_dir": {
  "data": {
   "lineno": 243
  },
  "type": "function"
 },
 "pyarrow.get_record_batch_size": {
  "data": {
   "shadows": "pyarrow.ipc.get_record_batch_size"
  },
  "type": "import"
 },
 "pyarrow.get_tensor_size": {
  "data": {
   "shadows": "pyarrow.ipc.get_tensor_size"
  },
  "type": "import"
 },
 "pyarrow.have_libhdfs": {
  "data": {
   "shadows": "pyarrow.lib.have_libhdfs"
  },
  "type": "import"
 },
 "pyarrow.have_libhdfs3": {
  "data": {
   "shadows": "pyarrow.lib.have_libhdfs3"
  },
  "type": "import"
 },
 "pyarrow.hdfs": {
  "data": {
   "shadows": "pyarrow.hdfs"
  },
  "type": "import"
 },
 "pyarrow.hdfs.FileSystem": {
  "data": {
   "shadows": "pyarrow.filesystem.FileSystem"
  },
  "type": "import"
 },
 "pyarrow.hdfs.HadoopFileSystem": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem",
    "pyarrow.lib.HadoopFileSystem"
   ]
  },
  "type": "class"
 },
 "pyarrow.hdfs.HadoopFileSystem.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyarrow.hdfs._maybe_set_hadoop_classpath"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.__reduce__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyarrow.hdfs.HadoopFileSystem"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem._isfilestore": {
  "data": {
   "lineno": 47
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.delete": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem.delete",
    "pyarrow.hdfs.HadoopFileSystem",
    "pyarrow.util.implements",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.exists": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem.exists",
    "pyarrow.hdfs.HadoopFileSystem",
    "pyarrow.util.implements",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.isdir": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem.isdir",
    "pyarrow.hdfs.HadoopFileSystem",
    "pyarrow.util.implements",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.isfile": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem.isfile",
    "pyarrow.hdfs.HadoopFileSystem",
    "pyarrow.util.implements",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.ls": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pyarrow.hdfs.HadoopFileSystem",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.mkdir": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyarrow.hdfs.HadoopFileSystem",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.rename": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem.rename",
    "pyarrow.hdfs.HadoopFileSystem",
    "pyarrow.util.implements",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.walk": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pyarrow.hdfs._libhdfs_walk_files_dirs"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs._derive_hadoop_classpath": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pyarrow.hdfs.os",
    "pyarrow.hdfs.subprocess"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs._hadoop_classpath_glob": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pyarrow.hdfs.subprocess"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs._libhdfs_walk_files_dirs": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pyarrow.hdfs.posixpath"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs._maybe_set_hadoop_classpath": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyarrow.hdfs._derive_hadoop_classpath",
    "pyarrow.hdfs._hadoop_classpath_glob",
    "pyarrow.hdfs.os",
    "pyarrow.hdfs.re",
    "pyarrow.hdfs.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.hdfs.connect": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pyarrow.hdfs.HadoopFileSystem"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.implements": {
  "data": {
   "shadows": "pyarrow.util.implements"
  },
  "type": "import"
 },
 "pyarrow.hdfs.lib": {
  "data": {
   "shadows": "pyarrow.lib"
  },
  "type": "import"
 },
 "pyarrow.hdfs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.hdfs.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "pyarrow.hdfs.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyarrow.hdfs.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.hdfs.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.infer_type": {
  "data": {
   "shadows": "pyarrow.lib.infer_type"
  },
  "type": "import"
 },
 "pyarrow.input_stream": {
  "data": {
   "shadows": "pyarrow.lib.input_stream"
  },
  "type": "import"
 },
 "pyarrow.int16": {
  "data": {
   "shadows": "pyarrow.lib.int16"
  },
  "type": "import"
 },
 "pyarrow.int32": {
  "data": {
   "shadows": "pyarrow.lib.int32"
  },
  "type": "import"
 },
 "pyarrow.int64": {
  "data": {
   "shadows": "pyarrow.lib.int64"
  },
  "type": "import"
 },
 "pyarrow.int8": {
  "data": {
   "shadows": "pyarrow.lib.int8"
  },
  "type": "import"
 },
 "pyarrow.ipc": {
  "data": {
   "shadows": "pyarrow.ipc"
  },
  "type": "import"
 },
 "pyarrow.jemalloc_set_decay_ms": {
  "data": {
   "shadows": "pyarrow.lib.jemalloc_set_decay_ms"
  },
  "type": "import"
 },
 "pyarrow.json": {
  "data": {},
  "type": "module"
 },
 "pyarrow.json.ParseOptions": {
  "data": {
   "shadows": "pyarrow._json.ParseOptions"
  },
  "type": "import"
 },
 "pyarrow.json.ReadOptions": {
  "data": {
   "shadows": "pyarrow._json.ReadOptions"
  },
  "type": "import"
 },
 "pyarrow.json.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.json.read_json": {
  "data": {
   "shadows": "pyarrow._json.read_json"
  },
  "type": "import"
 },
 "pyarrow.jvm": {
  "data": {},
  "type": "module"
 },
 "pyarrow.jvm._from_jvm_date_type": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pyarrow.date32",
    "pyarrow.date64"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm._from_jvm_float_type": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm._from_jvm_int_type": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm._from_jvm_time_type": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pyarrow.time32",
    "pyarrow.time64"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm._from_jvm_timestamp_type": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.jvm.array": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "pyarrow.Array.from_buffers",
    "pyarrow.jvm.field",
    "pyarrow.jvm.jvm_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm.field": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.decimal128",
    "pyarrow.field",
    "pyarrow.jvm._from_jvm_date_type",
    "pyarrow.jvm._from_jvm_float_type",
    "pyarrow.jvm._from_jvm_int_type",
    "pyarrow.jvm._from_jvm_time_type",
    "pyarrow.jvm._from_jvm_timestamp_type",
    "pyarrow.null",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm.jvm_buffer": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pyarrow.foreign_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.jvm.record_batch": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.jvm.array",
    "pyarrow.jvm.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm.schema": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "pyarrow.jvm.field",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.large_binary": {
  "data": {
   "shadows": "pyarrow.lib.large_binary"
  },
  "type": "import"
 },
 "pyarrow.large_list": {
  "data": {
   "shadows": "pyarrow.lib.large_list"
  },
  "type": "import"
 },
 "pyarrow.large_string": {
  "data": {
   "shadows": "pyarrow.lib.large_string"
  },
  "type": "import"
 },
 "pyarrow.large_utf8": {
  "data": {
   "shadows": "pyarrow.lib.large_utf8"
  },
  "type": "import"
 },
 "pyarrow.list_": {
  "data": {
   "shadows": "pyarrow.lib.list_"
  },
  "type": "import"
 },
 "pyarrow.localfs": {
  "data": {
   "lineno": 162
  },
  "type": "constant"
 },
 "pyarrow.log_memory_allocations": {
  "data": {
   "shadows": "pyarrow.lib.log_memory_allocations"
  },
  "type": "import"
 },
 "pyarrow.logging_memory_pool": {
  "data": {
   "shadows": "pyarrow.lib.logging_memory_pool"
  },
  "type": "import"
 },
 "pyarrow.memory_map": {
  "data": {
   "shadows": "pyarrow.lib.memory_map"
  },
  "type": "import"
 },
 "pyarrow.null": {
  "data": {
   "shadows": "pyarrow.lib.null"
  },
  "type": "import"
 },
 "pyarrow.open_file": {
  "data": {
   "shadows": "pyarrow.ipc.open_file"
  },
  "type": "import"
 },
 "pyarrow.open_stream": {
  "data": {
   "shadows": "pyarrow.ipc.open_stream"
  },
  "type": "import"
 },
 "pyarrow.orc": {
  "data": {},
  "type": "module"
 },
 "pyarrow.orc.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "pyarrow.orc.ORCFile": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.orc.ORCFile.__init__": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pyarrow._orc.ORCReader",
    "pyarrow.orc._schema_to_indices"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc.ORCFile._select_indices": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "numbers.Integral"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc.ORCFile.nrows": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc.ORCFile.nstripes": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc.ORCFile.read": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "pyarrow.orc.ORCFile.read_stripe": {
  "data": {
   "lineno": 115
  },
  "type": "function"
 },
 "pyarrow.orc.ORCFile.schema": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc.Schema": {
  "data": {
   "shadows": "pyarrow.lib.Schema"
  },
  "type": "import"
 },
 "pyarrow.orc._is_map": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyarrow.types.is_list",
    "pyarrow.types.is_struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc._orc": {
  "data": {
   "shadows": "pyarrow._orc"
  },
  "type": "import"
 },
 "pyarrow.orc._schema_to_indices": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "itertools.count",
    "pyarrow.orc._traverse"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc._traverse": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "isinstance",
    "next",
    "pyarrow.lib.Schema",
    "pyarrow.orc._is_map",
    "pyarrow.types.is_list",
    "pyarrow.types.is_struct",
    "pyarrow.types.is_union"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.orc.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "pyarrow.orc.types": {
  "data": {
   "shadows": "pyarrow.types"
  },
  "type": "import"
 },
 "pyarrow.output_stream": {
  "data": {
   "shadows": "pyarrow.lib.output_stream"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat": {
  "data": {
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.bytes_",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "numpy.str_",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "numpy.unicode_",
    "pyarrow.compat.PY2"
   ]
  },
  "type": "module"
 },
 "pyarrow.pandas_compat.BlockManager": {
  "data": {
   "shadows": "pandas.core.internals.BlockManager"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.PY2": {
  "data": {
   "shadows": "pyarrow.compat.PY2"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.Sequence": {
  "data": {
   "shadows": "pyarrow.compat.Sequence"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat._add_any_metadata": {
  "data": {
   "lineno": 998,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "len",
    "pyarrow.Array.from_pandas",
    "pyarrow.Table.from_arrays",
    "pyarrow.field",
    "pyarrow.pandas_compat.six",
    "pyarrow.schema",
    "pyarrow.timestamp",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._backwards_compatible_index_name": {
  "data": {
   "lineno": 846,
   "symbols_in_volume": [
    "pyarrow.pandas_compat._is_generated_index_name"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._check_data_column_metadata_consistency": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "all"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._column_name_to_strings": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "map",
    "pyarrow.compat.Sequence",
    "pyarrow.pandas_compat.six",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._deserialize_column_index": {
  "data": {
   "lineno": 722,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "pyarrow.compat.u_utf8",
    "pyarrow.lib._pandas_api.pd.Index",
    "pyarrow.lib._pandas_api.pd.MultiIndex.from_tuples",
    "pyarrow.pandas_compat._column_name_to_strings",
    "pyarrow.pandas_compat._flatten_single_level_multiindex",
    "pyarrow.pandas_compat._reconstruct_columns_from_metadata",
    "pyarrow.pandas_compat.ast"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._extract_index_level": {
  "data": {
   "lineno": 815,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "pyarrow.lib.TimestampType",
    "pyarrow.lib._pandas_api.pd",
    "pyarrow.pandas_compat._backwards_compatible_index_name"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._flatten_single_level_multiindex": {
  "data": {
   "lineno": 982,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pyarrow.lib._pandas_api.pd",
    "pyarrow.pandas_compat._get_multiindex_codes"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._get_columns_to_convert": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "enumerate",
    "isinstance",
    "list",
    "pyarrow.lib._pandas_api.is_sparse",
    "pyarrow.lib._pandas_api.pd.RangeIndex",
    "pyarrow.pandas_compat._column_name_to_strings",
    "pyarrow.pandas_compat._get_columns_to_convert_given_schema",
    "pyarrow.pandas_compat._get_index_level_values",
    "pyarrow.pandas_compat._get_range_index_descriptor",
    "pyarrow.pandas_compat._index_level_name",
    "pyarrow.pandas_compat._resolve_columns_of_interest"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._get_columns_to_convert_given_schema": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "ValueError",
    "isinstance",
    "pyarrow.lib._pandas_api.is_sparse",
    "pyarrow.lib._pandas_api.pd.RangeIndex",
    "pyarrow.pandas_compat._column_name_to_strings"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._get_index_level_values": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "getattr",
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._get_multiindex_codes": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "pyarrow.lib._pandas_api.pd.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._get_range_index_descriptor": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "pyarrow.lib._pandas_api.get_rangeindex_attribute"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._get_simple_index_descriptor": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "UserWarning",
    "pyarrow.pandas_compat.get_extension_dtype_info",
    "pyarrow.pandas_compat.get_logical_type_from_numpy",
    "pyarrow.pandas_compat.warnings"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._index_level_name": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._int": {
  "data": {
   "shadows": "pandas.core.internals"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat._is_generated_index_name": {
  "data": {
   "lineno": 870,
   "symbols_in_volume": [
    "pyarrow.pandas_compat.re"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._logical_type_map": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.pandas_compat._numpy_logical_type_map": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "pyarrow.pandas_compat._pandas_api": {
  "data": {
   "shadows": "pyarrow.lib._pandas_api"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat._pandas_logical_type_map": {
  "data": {
   "lineno": 875
  },
  "type": "constant"
 },
 "pyarrow.pandas_compat._pandas_type_to_numpy_type": {
  "data": {
   "lineno": 885,
   "symbols_in_volume": [
    "KeyError",
    "numpy.dtype",
    "numpy.object_",
    "pyarrow.pandas_compat._pandas_logical_type_map"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._reconstruct_block": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "pandas.core.internals.CategoricalBlock",
    "pandas.core.internals.DatetimeTZBlock",
    "pandas.core.internals.ObjectBlock",
    "pandas.core.internals.make_block",
    "pyarrow.compat.builtin_pickle.loads",
    "pyarrow.lib._pandas_api.categorical_type.from_codes",
    "pyarrow.pandas_compat.make_datetimetz"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._reconstruct_columns_from_metadata": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.bytes_",
    "pyarrow.compat.zip_longest",
    "pyarrow.lib._pandas_api.pd",
    "pyarrow.pandas_compat._get_multiindex_codes",
    "pyarrow.pandas_compat._pandas_type_to_numpy_type",
    "pyarrow.pandas_compat.operator",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._reconstruct_index": {
  "data": {
   "lineno": 761,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "len",
    "pyarrow.lib._pandas_api.pd",
    "pyarrow.lib._pandas_api.pd.RangeIndex",
    "pyarrow.pandas_compat._extract_index_level",
    "pyarrow.pandas_compat.six"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._resolve_columns_of_interest": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._table_to_blocks": {
  "data": {
   "lineno": 972,
   "symbols_in_volume": [
    "pyarrow.lib.table_to_blocks",
    "pyarrow.pandas_compat._reconstruct_block"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.builtin_pickle": {
  "data": {
   "shadows": "pyarrow.compat.builtin_pickle"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.construct_metadata": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "dict",
    "getattr",
    "isinstance",
    "len",
    "pyarrow.__version__",
    "pyarrow.lib._pandas_api.version",
    "pyarrow.pandas_compat._get_simple_index_descriptor",
    "pyarrow.pandas_compat.get_column_metadata",
    "pyarrow.pandas_compat.json",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.dataframe_to_arrays": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "concurrent.futures.ThreadPoolExecutor",
    "convert_column",
    "len",
    "list",
    "pyarrow.cpu_count",
    "pyarrow.field",
    "pyarrow.pandas_compat._get_columns_to_convert",
    "pyarrow.pandas_compat.construct_metadata",
    "pyarrow.schema",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.dataframe_to_arrays.convert_column": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.ArrowInvalid",
    "pyarrow.ArrowNotImplementedError",
    "pyarrow.ArrowTypeError",
    "pyarrow.array",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.dataframe_to_serialized_dict": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "pandas.core.internals.CategoricalBlock",
    "pandas.core.internals.DatetimeTZBlock",
    "pandas.core.internals.ObjectBlock",
    "pyarrow.compat.builtin_pickle.HIGHEST_PROTOCOL",
    "pyarrow.compat.builtin_pickle.dumps",
    "pyarrow.lib.tzinfo_to_string",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.dataframe_to_types": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.lib._ndarray_to_arrow_type",
    "pyarrow.lib._pandas_api.is_categorical",
    "pyarrow.pandas_compat._get_columns_to_convert",
    "pyarrow.pandas_compat.construct_metadata",
    "pyarrow.pandas_compat.get_datetimetz_type"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.get_column_metadata": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pyarrow.pandas_compat.get_extension_dtype_info",
    "pyarrow.pandas_compat.get_logical_type",
    "pyarrow.pandas_compat.six",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.get_datetimetz_type": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pyarrow.from_numpy_dtype",
    "pyarrow.lib._pandas_api.is_datetimetz",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.get_extension_dtype_info": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "len",
    "pyarrow.lib.tzinfo_to_string",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.get_logical_type": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "KeyError",
    "isinstance",
    "pyarrow.lib.Decimal128Type",
    "pyarrow.lib.DictionaryType",
    "pyarrow.lib.ListType",
    "pyarrow.lib.TimestampType",
    "pyarrow.pandas_compat.get_logical_type_map"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.get_logical_type_from_numpy": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "KeyError",
    "hasattr",
    "pyarrow.compat.PY2",
    "pyarrow.lib._pandas_api.infer_dtype",
    "pyarrow.pandas_compat._numpy_logical_type_map",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.get_logical_type_map": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyarrow.lib.Type_BINARY",
    "pyarrow.lib.Type_BOOL",
    "pyarrow.lib.Type_DATE32",
    "pyarrow.lib.Type_DATE64",
    "pyarrow.lib.Type_DOUBLE",
    "pyarrow.lib.Type_FIXED_SIZE_BINARY",
    "pyarrow.lib.Type_FLOAT",
    "pyarrow.lib.Type_HALF_FLOAT",
    "pyarrow.lib.Type_INT16",
    "pyarrow.lib.Type_INT32",
    "pyarrow.lib.Type_INT64",
    "pyarrow.lib.Type_INT8",
    "pyarrow.lib.Type_NA",
    "pyarrow.lib.Type_STRING",
    "pyarrow.lib.Type_TIME32",
    "pyarrow.lib.Type_TIME64",
    "pyarrow.lib.Type_UINT16",
    "pyarrow.lib.Type_UINT32",
    "pyarrow.lib.Type_UINT64",
    "pyarrow.lib.Type_UINT8",
    "pyarrow.pandas_compat._logical_type_map"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.make_datetimetz": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "pyarrow.lib._pandas_api.datetimetz_type",
    "pyarrow.lib.string_to_tzinfo"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.make_tz_aware": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": [
    "pyarrow.lib.string_to_tzinfo"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.serialized_dict_to_dataframe": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "pandas.core.internals.BlockManager",
    "pyarrow.lib._pandas_api.data_frame",
    "pyarrow.pandas_compat._reconstruct_block"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.table_to_blockmanager": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "pandas.core.internals.BlockManager",
    "pyarrow.lib._pandas_api.pd.RangeIndex",
    "pyarrow.pandas_compat._add_any_metadata",
    "pyarrow.pandas_compat._check_data_column_metadata_consistency",
    "pyarrow.pandas_compat._deserialize_column_index",
    "pyarrow.pandas_compat._reconstruct_index",
    "pyarrow.pandas_compat._table_to_blocks"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.u_utf8": {
  "data": {
   "shadows": "pyarrow.compat.u_utf8"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.zip_longest": {
  "data": {
   "shadows": "pyarrow.compat.zip_longest"
  },
  "type": "import"
 },
 "pyarrow.parse": {
  "data": {
   "shadows": "setuptools_scm.git.parse"
  },
  "type": "import"
 },
 "pyarrow.parse_git": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "setuptools_scm.git.parse"
   ]
  },
  "type": "function"
 },
 "pyarrow.plasma": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.__path__",
    "pyarrow.plasma.os"
   ]
  },
  "type": "module"
 },
 "pyarrow.plasma.ObjectID": {
  "data": {
   "shadows": "pyarrow._plasma.ObjectID"
  },
  "type": "import"
 },
 "pyarrow.plasma.ObjectNotAvailable": {
  "data": {
   "shadows": "pyarrow._plasma.ObjectNotAvailable"
  },
  "type": "import"
 },
 "pyarrow.plasma.PlasmaBuffer": {
  "data": {
   "shadows": "pyarrow._plasma.PlasmaBuffer"
  },
  "type": "import"
 },
 "pyarrow.plasma.PlasmaClient": {
  "data": {
   "shadows": "pyarrow._plasma.PlasmaClient"
  },
  "type": "import"
 },
 "pyarrow.plasma.PlasmaObjectExists": {
  "data": {
   "shadows": "pyarrow._plasma.PlasmaObjectExists"
  },
  "type": "import"
 },
 "pyarrow.plasma.PlasmaObjectNonexistent": {
  "data": {
   "shadows": "pyarrow._plasma.PlasmaObjectNonexistent"
  },
  "type": "import"
 },
 "pyarrow.plasma.PlasmaStoreFull": {
  "data": {
   "shadows": "pyarrow._plasma.PlasmaStoreFull"
  },
  "type": "import"
 },
 "pyarrow.plasma.TF_PLASMA_OP_PATH": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyarrow.plasma.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.plasma.build_plasma_tensorflow_op": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ImportError",
    "dir",
    "print",
    "pyarrow.get_include",
    "pyarrow.get_library_dirs",
    "pyarrow.plasma.TF_PLASMA_OP_PATH",
    "pyarrow.plasma.os",
    "pyarrow.plasma.subprocess",
    "pyarrow.plasma.sys",
    "pyarrow.plasma.tf_plasma_op",
    "str",
    "tensorflow.__version__",
    "tensorflow.load_op_library",
    "tensorflow.sysconfig.get_compile_flags",
    "tensorflow.sysconfig.get_link_flags",
    "tensorflow.test.is_built_with_cuda"
   ]
  },
  "type": "function"
 },
 "pyarrow.plasma.connect": {
  "data": {
   "shadows": "pyarrow._plasma.connect"
  },
  "type": "import"
 },
 "pyarrow.plasma.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pyarrow.plasma.load_plasma_tensorflow_op": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pyarrow.plasma.TF_PLASMA_OP_PATH",
    "pyarrow.plasma.tf_plasma_op",
    "tensorflow.load_op_library"
   ]
  },
  "type": "function"
 },
 "pyarrow.plasma.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.plasma.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.plasma.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyarrow.plasma.start_plasma_store": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "pyarrow.__path__",
    "pyarrow.plasma.contextlib",
    "pyarrow.plasma.os",
    "pyarrow.plasma.shutil",
    "pyarrow.plasma.subprocess",
    "pyarrow.plasma.tempfile",
    "pyarrow.plasma.time",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.plasma.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.plasma.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.plasma.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.plasma.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "pyarrow.plasma.tf_plasma_op": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyarrow.plasma.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyarrow.proxy_memory_pool": {
  "data": {
   "shadows": "pyarrow.lib.proxy_memory_pool"
  },
  "type": "import"
 },
 "pyarrow.py_buffer": {
  "data": {
   "shadows": "pyarrow.lib.py_buffer"
  },
  "type": "import"
 },
 "pyarrow.pyarrow": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.read_message": {
  "data": {
   "shadows": "pyarrow.ipc.read_message"
  },
  "type": "import"
 },
 "pyarrow.read_record_batch": {
  "data": {
   "shadows": "pyarrow.ipc.read_record_batch"
  },
  "type": "import"
 },
 "pyarrow.read_schema": {
  "data": {
   "shadows": "pyarrow.ipc.read_schema"
  },
  "type": "import"
 },
 "pyarrow.read_serialized": {
  "data": {
   "shadows": "pyarrow.lib.read_serialized"
  },
  "type": "import"
 },
 "pyarrow.read_tensor": {
  "data": {
   "shadows": "pyarrow.ipc.read_tensor"
  },
  "type": "import"
 },
 "pyarrow.record_batch": {
  "data": {
   "shadows": "pyarrow.lib.record_batch"
  },
  "type": "import"
 },
 "pyarrow.register_default_serialization_handlers": {
  "data": {
   "shadows": "pyarrow.serialization.register_default_serialization_handlers"
  },
  "type": "import"
 },
 "pyarrow.register_extension_type": {
  "data": {
   "shadows": "pyarrow.lib.register_extension_type"
  },
  "type": "import"
 },
 "pyarrow.register_torch_serialization_handlers": {
  "data": {
   "shadows": "pyarrow.serialization.register_torch_serialization_handlers"
  },
  "type": "import"
 },
 "pyarrow.schema": {
  "data": {
   "shadows": "pyarrow.lib.schema"
  },
  "type": "import"
 },
 "pyarrow.serialization": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.compat.builtin_pickle"
   ]
  },
  "type": "module"
 },
 "pyarrow.serialization.SerializationContext": {
  "data": {
   "shadows": "pyarrow.lib.SerializationContext"
  },
  "type": "import"
 },
 "pyarrow.serialization._deserialize_numpy_array_list": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.uint8",
    "pyarrow.compat.descr_to_dtype"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._deserialize_numpy_matrix": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.matrix",
    "numpy.uint8",
    "pyarrow.compat.descr_to_dtype"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._deserialize_pyarrow_array": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pyarrow.serialization._deserialize_pyarrow_recordbatch"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._deserialize_pyarrow_recordbatch": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pyarrow.serialization.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._deserialize_pyarrow_table": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pyarrow.serialization.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._load_pickle_from_buffer": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "memoryview",
    "pyarrow.compat.builtin_pickle.loads",
    "pyarrow.serialization.six"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._pickle_to_buffer": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pyarrow.compat.builtin_pickle.HIGHEST_PROTOCOL",
    "pyarrow.compat.builtin_pickle.dumps",
    "pyarrow.lib.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_collections_serialization_handlers": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "pyarrow.serialization.collections"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_collections_serialization_handlers._deserialize_counter": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "dict",
    "pyarrow.serialization.collections",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_collections_serialization_handlers._deserialize_default_dict": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "pyarrow.serialization.collections",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_collections_serialization_handlers._deserialize_deque": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "pyarrow.serialization.collections"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_collections_serialization_handlers._deserialize_ordered_dict": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pyarrow.serialization.collections",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_collections_serialization_handlers._serialize_counter": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_collections_serialization_handlers._serialize_default_dict": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_collections_serialization_handlers._serialize_deque": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_collections_serialization_handlers._serialize_ordered_dict": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ImportError",
    "_deserialize_pandas_dataframe",
    "_serialize_pandas_dataframe",
    "hasattr",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pandas.core",
    "pandas.core.arrays",
    "pandas.core.arrays.datetimes.DatetimeArray",
    "pandas.core.arrays.interval.IntervalArray",
    "pandas.core.arrays.period.PeriodArray",
    "pyarrow.serialization._load_pickle_from_buffer",
    "pyarrow.serialization._pickle_to_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers._deserialize_pandas_dataframe": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "pyarrow.pandas_compat.serialized_dict_to_dataframe"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers._deserialize_pandas_series": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "_deserialize_pandas_dataframe"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers._serialize_pandas_dataframe": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "pandas.SparseDataFrame",
    "pyarrow.pandas_compat._pandas_api.has_sparse",
    "pyarrow.pandas_compat.dataframe_to_serialized_dict"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers._serialize_pandas_series": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "NotImplementedError",
    "_serialize_pandas_dataframe",
    "isinstance",
    "pandas.DataFrame",
    "pandas.SparseSeries",
    "pyarrow.pandas_compat._pandas_api.has_sparse"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._serialize_numpy_array_list": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.ascontiguousarray",
    "numpy.lib.format.dtype_to_descr"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._serialize_numpy_matrix": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "numpy.ascontiguousarray",
    "numpy.lib.format.dtype_to_descr"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._serialize_pyarrow_array": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "pyarrow.serialization._serialize_pyarrow_recordbatch",
    "pyarrow.serialization.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._serialize_pyarrow_recordbatch": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pyarrow.serialization.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._serialize_pyarrow_table": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pyarrow.serialization.pyarrow"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.serialization.builtin_pickle": {
  "data": {
   "shadows": "pyarrow.compat.builtin_pickle"
  },
  "type": "import"
 },
 "pyarrow.serialization.cloudpickle": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyarrow.serialization.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyarrow.serialization.default_serialization_context": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "pyarrow.lib.SerializationContext",
    "pyarrow.serialization.register_default_serialization_handlers"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.descr_to_dtype": {
  "data": {
   "shadows": "pyarrow.compat.descr_to_dtype"
  },
  "type": "import"
 },
 "pyarrow.serialization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.serialization.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.serialization.pdcompat": {
  "data": {
   "shadows": "pyarrow.pandas_compat"
  },
  "type": "import"
 },
 "pyarrow.serialization.py_buffer": {
  "data": {
   "shadows": "pyarrow.lib.py_buffer"
  },
  "type": "import"
 },
 "pyarrow.serialization.pyarrow": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.serialization.register_default_serialization_handlers": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "int",
    "long",
    "numpy.matrix",
    "numpy.ndarray",
    "pyarrow.serialization._deserialize_numpy_array_list",
    "pyarrow.serialization._deserialize_numpy_matrix",
    "pyarrow.serialization._deserialize_pyarrow_array",
    "pyarrow.serialization._deserialize_pyarrow_recordbatch",
    "pyarrow.serialization._deserialize_pyarrow_table",
    "pyarrow.serialization._register_collections_serialization_handlers",
    "pyarrow.serialization._register_custom_pandas_handlers",
    "pyarrow.serialization._serialize_numpy_array_list",
    "pyarrow.serialization._serialize_numpy_matrix",
    "pyarrow.serialization._serialize_pyarrow_array",
    "pyarrow.serialization._serialize_pyarrow_recordbatch",
    "pyarrow.serialization._serialize_pyarrow_table",
    "pyarrow.serialization.pyarrow",
    "pyarrow.serialization.sys",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.register_torch_serialization_handlers": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.serialization.torch"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.register_torch_serialization_handlers._deserialize_torch_tensor": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.serialization.torch",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.register_torch_serialization_handlers._serialize_torch_tensor": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyarrow.serialization.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.serialization.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "pyarrow.serialize": {
  "data": {
   "shadows": "pyarrow.lib.serialize"
  },
  "type": "import"
 },
 "pyarrow.serialize_pandas": {
  "data": {
   "shadows": "pyarrow.ipc.serialize_pandas"
  },
  "type": "import"
 },
 "pyarrow.serialize_to": {
  "data": {
   "shadows": "pyarrow.lib.serialize_to"
  },
  "type": "import"
 },
 "pyarrow.set_cpu_count": {
  "data": {
   "shadows": "pyarrow.lib.set_cpu_count"
  },
  "type": "import"
 },
 "pyarrow.set_memory_pool": {
  "data": {
   "shadows": "pyarrow.lib.set_memory_pool"
  },
  "type": "import"
 },
 "pyarrow.setuptools_scm": {
  "data": {
   "shadows": "setuptools_scm"
  },
  "type": "import"
 },
 "pyarrow.string": {
  "data": {
   "shadows": "pyarrow.lib.string"
  },
  "type": "import"
 },
 "pyarrow.struct": {
  "data": {
   "shadows": "pyarrow.lib.struct"
  },
  "type": "import"
 },
 "pyarrow.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.table": {
  "data": {
   "shadows": "pyarrow.lib.table"
  },
  "type": "import"
 },
 "pyarrow.tests": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.conftest": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "hypothesis.Verbosity.verbose",
    "hypothesis.settings.load_profile",
    "hypothesis.settings.register_profile",
    "pyarrow.tests.conftest.defaults",
    "pyarrow.tests.conftest.os"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.conftest.cython": {
  "data": {
   "shadows": "cython"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.datadir": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pathlib2.Path",
    "pyarrow.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.defaults": {
  "data": {
   "lineno": 60
  },
  "type": "constant"
 },
 "pyarrow.tests.conftest.fastparquet": {
  "data": {
   "shadows": "fastparquet"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.groups": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyarrow.tests.conftest.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pandas": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pathlib": {
  "data": {
   "shadows": "pathlib2"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.plasma": {
  "data": {
   "shadows": "pyarrow.plasma"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.flight": {
  "data": {
   "shadows": "pyarrow.flight"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.gandiva": {
  "data": {
   "shadows": "pyarrow.gandiva"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.orc": {
  "data": {
   "shadows": "pyarrow.orc"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.parquet": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pytest_addoption": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "bool_env",
    "pyarrow.tests.conftest.defaults",
    "pyarrow.tests.conftest.groups"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_addoption.bool_env": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.conftest.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_configure": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pyarrow.tests.conftest.groups"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_runtest_setup": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "pyarrow.tests.conftest.groups",
    "pyarrow.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.tempdir": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "pathlib2.Path",
    "pyarrow.tests.conftest.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.tensorflow": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "pyarrow.tests.deserialize_buffer": {
  "data": {
   "symbols_in_volume": [
    "open",
    "pyarrow.deserialize",
    "pyarrow.tests.deserialize_buffer.data",
    "pyarrow.tests.deserialize_buffer.sys"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.deserialize_buffer.data": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyarrow.tests.deserialize_buffer.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.deserialize_buffer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.pandas_examples.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_arrays": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_lists": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "datetime.date",
    "datetime.time",
    "numpy.array",
    "numpy.int64",
    "pandas.DataFrame",
    "pyarrow.binary",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.time32",
    "pyarrow.time64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.pandas_examples.date": {
  "data": {
   "shadows": "datetime.date"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.time": {
  "data": {
   "shadows": "datetime.time"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies": {
  "data": {
   "symbols_in_volume": [
    "hypothesis.extra.pytz.timezones",
    "hypothesis.strategies.builds",
    "hypothesis.strategies.characters",
    "hypothesis.strategies.dictionaries",
    "hypothesis.strategies.integers",
    "hypothesis.strategies.just",
    "hypothesis.strategies.one_of",
    "hypothesis.strategies.sampled_from",
    "hypothesis.strategies.text",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.decimal128",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.large_binary",
    "pyarrow.large_string",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.tests.strategies.all_types",
    "pyarrow.tests.strategies.arrays",
    "pyarrow.tests.strategies.binary_type",
    "pyarrow.tests.strategies.bool_type",
    "pyarrow.tests.strategies.chunked_arrays",
    "pyarrow.tests.strategies.complex_types",
    "pyarrow.tests.strategies.date_types",
    "pyarrow.tests.strategies.decimal_type",
    "pyarrow.tests.strategies.fields",
    "pyarrow.tests.strategies.floating_types",
    "pyarrow.tests.strategies.integer_types",
    "pyarrow.tests.strategies.large_binary_type",
    "pyarrow.tests.strategies.large_string_type",
    "pyarrow.tests.strategies.nested_complex_types",
    "pyarrow.tests.strategies.null_type",
    "pyarrow.tests.strategies.numeric_types",
    "pyarrow.tests.strategies.primitive_types",
    "pyarrow.tests.strategies.record_batches",
    "pyarrow.tests.strategies.schemas",
    "pyarrow.tests.strategies.signed_integer_types",
    "pyarrow.tests.strategies.string_type",
    "pyarrow.tests.strategies.tables",
    "pyarrow.tests.strategies.temporal_types",
    "pyarrow.tests.strategies.time_types",
    "pyarrow.tests.strategies.timestamp_types",
    "pyarrow.tests.strategies.unsigned_integer_types",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.strategies._default_array_sizes": {
  "data": {
   "lineno": 146
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_arrays": {
  "data": {
   "lineno": 260
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_chunked_arrays": {
  "data": {
   "lineno": 261
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_fields": {
  "data": {
   "lineno": 142
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_record_batches": {
  "data": {
   "lineno": 262
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_schemas": {
  "data": {
   "lineno": 143
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_tables": {
  "data": {
   "lineno": 263
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.all_types": {
  "data": {
   "lineno": 141
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.arrays": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "draw",
    "hypothesis.assume",
    "hypothesis.extra.numpy.arrays",
    "hypothesis.reject",
    "hypothesis.strategies.SearchStrategy",
    "hypothesis.strategies.binary",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.dates",
    "hypothesis.strategies.datetimes",
    "hypothesis.strategies.just",
    "hypothesis.strategies.lists",
    "hypothesis.strategies.none",
    "hypothesis.strategies.text",
    "hypothesis.strategies.times",
    "int",
    "isinstance",
    "len",
    "numpy.insert",
    "numpy.isnan",
    "numpy.uint8",
    "pyarrow.DataType",
    "pyarrow.LargeListArray",
    "pyarrow.ListArray",
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.strategies._default_array_sizes",
    "pyarrow.tests.strategies.fields",
    "pyarrow.tests.strategies.pytz",
    "pyarrow.types.is_binary",
    "pyarrow.types.is_boolean",
    "pyarrow.types.is_date",
    "pyarrow.types.is_decimal",
    "pyarrow.types.is_floating",
    "pyarrow.types.is_integer",
    "pyarrow.types.is_large_binary",
    "pyarrow.types.is_large_list",
    "pyarrow.types.is_large_string",
    "pyarrow.types.is_list",
    "pyarrow.types.is_null",
    "pyarrow.types.is_string",
    "pyarrow.types.is_struct",
    "pyarrow.types.is_time",
    "pyarrow.types.is_timestamp",
    "type",
    "type.to_pandas_dtype",
    "type.tz",
    "type.value_type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.binary_type": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.bool_type": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.chunked_arrays": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "draw",
    "hypothesis.assume",
    "hypothesis.strategies.SearchStrategy",
    "hypothesis.strategies.composite",
    "hypothesis.strategies.lists",
    "isinstance",
    "pyarrow.chunked_array",
    "pyarrow.tests.strategies.arrays",
    "pyarrow.types.is_struct",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.complex_schemas": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.complex_types": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pyarrow.tests.strategies.list_types",
    "pyarrow.tests.strategies.primitive_types",
    "pyarrow.tests.strategies.struct_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.custom_text": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.date_types": {
  "data": {
   "lineno": 70
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.decimal_type": {
  "data": {
   "lineno": 63
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.fields": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "hypothesis.strategies.booleans",
    "hypothesis.strategies.builds",
    "pyarrow.field",
    "pyarrow.tests.strategies.custom_text",
    "pyarrow.tests.strategies.metadata",
    "pyarrow.tests.strategies.primitive_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.floating_types": {
  "data": {
   "lineno": 58
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.integer_types": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.large_binary_type": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.large_string_type": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.list_types": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "hypothesis.strategies.builds",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.tests.strategies.primitive_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.metadata": {
  "data": {
   "lineno": 98
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.nested_complex_types": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "hypothesis.strategies.recursive",
    "pyarrow.tests.strategies.complex_types",
    "pyarrow.tests.strategies.primitive_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.nested_list_types": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "hypothesis.strategies.recursive",
    "pyarrow.tests.strategies.list_types",
    "pyarrow.tests.strategies.primitive_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.nested_struct_types": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "hypothesis.strategies.recursive",
    "pyarrow.tests.strategies.primitive_types",
    "pyarrow.tests.strategies.struct_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.npst": {
  "data": {
   "shadows": "hypothesis.extra.numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.null_type": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.numeric_types": {
  "data": {
   "lineno": 68
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.primitive_types": {
  "data": {
   "lineno": 87
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.record_batches": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "TypeError",
    "draw",
    "hypothesis.strategies.SearchStrategy",
    "hypothesis.strategies.composite",
    "int",
    "isinstance",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.tests.strategies._default_array_sizes",
    "pyarrow.tests.strategies.arrays",
    "pyarrow.tests.strategies.schemas",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.schemas": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "hypothesis.strategies.builds",
    "hypothesis.strategies.lists",
    "pyarrow.schema",
    "pyarrow.tests.strategies.fields",
    "pyarrow.tests.strategies.primitive_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.signed_integer_types": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.string_type": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.struct_types": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "hypothesis.strategies.builds",
    "hypothesis.strategies.lists",
    "pyarrow.struct",
    "pyarrow.tests.strategies.fields",
    "pyarrow.tests.strategies.primitive_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.tables": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "TypeError",
    "draw",
    "hypothesis.strategies.SearchStrategy",
    "hypothesis.strategies.composite",
    "int",
    "isinstance",
    "pyarrow.Table.from_arrays",
    "pyarrow.tests.strategies._default_array_sizes",
    "pyarrow.tests.strategies.arrays",
    "pyarrow.tests.strategies.schemas",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.strategies.temporal_types": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.time_types": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.timestamp_types": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "pyarrow.tests.strategies.tzst": {
  "data": {
   "shadows": "hypothesis.extra.pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.strategies.unsigned_integer_types": {
  "data": {
   "lineno": 50
  },
  "type": "constant"
 },
 "pyarrow.tests.test_array": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int64",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_array._check_cast_case": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Array",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.compat": {
  "data": {
   "shadows": "pyarrow.compat"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.past": {
  "data": {
   "shadows": "pyarrow.tests.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pickle5": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyarrow.tests.test_array.pickle_test_parametrize": {
  "data": {
   "lineno": 1004
  },
  "type": "constant"
 },
 "pyarrow.tests.test_array.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.test_array_conversions_no_sentinel_values": {
  "data": {
   "lineno": 1096,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.tests.test_array.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_diff": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_eq_raises": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_factory_invalid_type": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.tests.test_array.datetime",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_buffers": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "TypeError",
    "numpy.int16",
    "numpy.uint8",
    "pyarrow.Array.from_buffers",
    "pyarrow.int16",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_different_numpy_datetime_units_raises": {
  "data": {
   "lineno": 1206,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pyarrow.ArrowNotImplementedError",
    "pyarrow.array",
    "pyarrow.tests.test_array.datetime",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_invalid_dim_raises": {
  "data": {
   "lineno": 1336,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_large_pyints": {
  "data": {
   "lineno": 1743,
   "symbols_in_volume": [
    "OverflowError",
    "int",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_list_of_timestamps": {
  "data": {
   "lineno": 1220,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_masked": {
  "data": {
   "lineno": 1325,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.ma.array",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_ascii": {
  "data": {
   "lineno": 1244,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_datetime": {
  "data": {
   "lineno": 1183,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.tests.test_array.datetime",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.timestamp",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_datetimeD": {
  "data": {
   "lineno": 1175,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.tests.test_array.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_str_utf8": {
  "data": {
   "lineno": 1644,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "numpy.array",
    "object",
    "pyarrow.array",
    "pyarrow.string",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_unicode": {
  "data": {
   "lineno": 1273,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_strided_bool": {
  "data": {
   "lineno": 1347,
   "symbols_in_volume": [
    "bool",
    "numpy.ones",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_timestamp_with_generic_unit": {
  "data": {
   "lineno": 1234,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pyarrow.ArrowNotImplementedError",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_getitem": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_iter": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.array",
    "pyarrow.compat.Iterable",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_masked": {
  "data": {
   "lineno": 1731,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_pickle": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.pickle",
    "pyarrow.tests.test_array.pickle_test_parametrize",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_pickle5": {
  "data": {
   "lineno": 1043,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.pickle",
    "pyarrow.tests.test_array.pickle5",
    "pyarrow.tests.test_array.pickle_test_parametrize",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol": {
  "data": {
   "lineno": 1750,
   "symbols_in_volume": [
    "MyArray",
    "MyArrayInvalid",
    "TypeError",
    "ValueError",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray": {
  "data": {
   "lineno": 1752
  },
  "type": "class"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray.__arrow_array__": {
  "data": {
   "lineno": 1756,
   "symbols_in_volume": [
    "pyarrow.array",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArray.__init__": {
  "data": {
   "lineno": 1753
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArrayInvalid": {
  "data": {
   "lineno": 1777
  },
  "type": "class"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArrayInvalid.__arrow_array__": {
  "data": {
   "lineno": 1781,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_protocol.MyArrayInvalid.__init__": {
  "data": {
   "lineno": 1778
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_ref_to_ndarray_base": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.tests.test_array.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_slice": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_string_from_all_null": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "numpy.nan",
    "object",
    "pyarrow.array",
    "pyarrow.string",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_string_from_non_string": {
  "data": {
   "lineno": 1305,
   "symbols_in_volume": [
    "TypeError",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.string",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_uint64_from_py_over_range": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.uint64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_asarray": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.dtype",
    "numpy.isnan",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.lib.Int64Value",
    "pyarrow.tests.test_array.pytest",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_format": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_string_pandas_null_sentinels": {
  "data": {
   "lineno": 1137,
   "symbols_in_volume": [
    "_check_case"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_binary_string_pandas_null_sentinels._check_case": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "numpy.nan",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_buffers_nested": {
  "data": {
   "lineno": 1395,
   "symbols_in_volume": [
    "bytearray",
    "len",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.struct",
    "pyarrow.tests.test_array.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_buffers_primitive": {
  "data": {
   "lineno": 1358,
   "symbols_in_volume": [
    "bytearray",
    "len",
    "numpy.int8",
    "pyarrow.array",
    "pyarrow.int16",
    "pyarrow.tests.test_array.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_binary_to_utf8": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.string",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_chunked_array": {
  "data": {
   "lineno": 733,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.float64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_date32_to_int": {
  "data": {
   "lineno": 925,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_date64_to_int": {
  "data": {
   "lineno": 961,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.date64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_from_null": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.decimal128",
    "pyarrow.dictionary",
    "pyarrow.field",
    "pyarrow.float16",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.large_list",
    "pyarrow.lib.UnionMode_DENSE",
    "pyarrow.lib.UnionMode_SPARSE",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.timestamp",
    "pyarrow.uint8",
    "pyarrow.union",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_identities": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_integers_safe": {
  "data": {
   "lineno": 697,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.uint16",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_integers_unsafe": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.int16",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.uint16"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_none": {
  "data": {
   "lineno": 725,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_signed_to_unsigned": {
  "data": {
   "lineno": 806,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.uint16",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_time32_to_int": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.time32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_time64_to_int": {
  "data": {
   "lineno": 907,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.time64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_timestamp_to_int": {
  "data": {
   "lineno": 916,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_chunked_array_data_warns": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "FutureWarning",
    "isinstance",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_concat_array": {
  "data": {
   "lineno": 1789,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.concat_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_concat_array_different_types": {
  "data": {
   "lineno": 1795,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.concat_arrays",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_constructor_raises": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_date64_from_builtin_datetime": {
  "data": {
   "lineno": 971,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_encode_simple": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.chunked_array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_arrays_boundscheck": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "pyarrow.ArrowException",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_boxed_arrays": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.repeat",
    "object",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_numpy": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.repeat",
    "object",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.NULL",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_indices": {
  "data": {
   "lineno": 528,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_empty_cast": {
  "data": {
   "lineno": 1603,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.lib.ArrowNotImplementedError",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.tests.test_array.itertools",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_floating_point_truncate_safe": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.int32",
    "pyarrow.tests.test_array._check_cast_case"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_floating_point_truncate_unsafe": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.ArrowInvalid",
    "pyarrow.int32",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_getitem_NULL": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pyarrow.NULL",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_infer_type_masked": {
  "data": {
   "lineno": 1716,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.infer_type",
    "pyarrow.null",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_invalid_tensor_construction": {
  "data": {
   "lineno": 1436,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Tensor",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_invalid_tensor_constructor_repr": {
  "data": {
   "lineno": 1430,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Tensor",
    "pyarrow.tests.test_array.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_large_list_array_flatten": {
  "data": {
   "lineno": 1492,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.int16",
    "pyarrow.large_list"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_array_flatten": {
  "data": {
   "lineno": 1441,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_child_overflow_to_chunked": {
  "data": {
   "lineno": 1709,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_format": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_from_arrays": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "ValueError",
    "list_type_factory",
    "numpy.arange",
    "numpy.array",
    "pyarrow.LargeListArray",
    "pyarrow.ListArray",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_from_buffers": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "ValueError",
    "list_type_factory",
    "pyarrow.Array.from_buffers",
    "pyarrow.array",
    "pyarrow.int16",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_long_array_format": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_nested_dictionary_array": {
  "data": {
   "lineno": 1634,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.ListArray.from_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_numpy_binary_overflow_to_chunked": {
  "data": {
   "lineno": 1670,
   "symbols_in_volume": [
    "isinstance",
    "numpy.array",
    "pyarrow.ChunkedArray",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.utf8",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_pandas_null_sentinels_raise_error": {
  "data": {
   "lineno": 1147,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.decimal128",
    "pyarrow.tests.test_array.decimal",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_pickling": {
  "data": {
   "lineno": 1031,
   "symbols_in_volume": [
    "hypothesis.given",
    "hypothesis.strategies.integers",
    "pyarrow.tests.strategies.all_types",
    "pyarrow.tests.strategies.arrays",
    "pyarrow.tests.test_array.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_safe_cast_nan_to_int_raises": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "numpy.nan",
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_binary_from_buffers": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "len",
    "pyarrow.Array.from_buffers",
    "pyarrow.StringArray.from_buffers",
    "pyarrow.array",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_format": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_field": {
  "data": {
   "lineno": 1569,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "isinstance",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.lib.FloatArray",
    "pyarrow.lib.Int16Array",
    "pyarrow.struct",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_flatten": {
  "data": {
   "lineno": 1531,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_slice": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int8",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_from_arrays": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.struct",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_from_buffers": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.Array.from_buffers",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.struct",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_time32_time64_from_integer": {
  "data": {
   "lineno": 1110,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.datetime",
    "pyarrow.time32",
    "pyarrow.time64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_roundtrip": {
  "data": {
   "lineno": 1065,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.testing.assert_array_equal",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_unsupported_types": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_zero_copy": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "pyarrow.array",
    "pyarrow.tests.test_array.gc",
    "pyarrow.tests.test_array.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_pandas_timezone": {
  "data": {
   "lineno": 1800,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_pandas_zero_copy": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.gc",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.tests.test_array.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_total_bytes_allocated": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_array_slice": {
  "data": {
   "lineno": 654,
   "symbols_in_volume": [
    "len",
    "pyarrow.UnionArray.from_dense",
    "pyarrow.UnionArray.from_sparse",
    "pyarrow.array",
    "pyarrow.int8",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_dense": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "check_result",
    "pyarrow.UnionArray.from_dense",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_dense.check_result": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_sparse": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": [
    "check_result",
    "pyarrow.UnionArray.from_sparse",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_sparse.check_result": {
  "data": {
   "lineno": 622,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_unique_simple": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_view": {
  "data": {
   "lineno": 854,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_builder": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_builder.StringBuilder": {
  "data": {
   "shadows": "pyarrow.lib.StringBuilder"
  },
  "type": "import"
 },
 "pyarrow.tests.test_builder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_builder.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_builder.test_string_builder_append": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.nan",
    "pyarrow.Array",
    "pyarrow.lib.StringBuilder"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_builder.test_string_builder_append_after_finish": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.nan",
    "pyarrow.lib.StringBuilder"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_builder.test_string_builder_append_values": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.nan",
    "pyarrow.lib.StringBuilder"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute": {
  "data": {
   "symbols_in_volume": [
    "numpy.arange",
    "pyarrow.binary",
    "pyarrow.int16",
    "pyarrow.int8",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.struct"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_compute.all_array_types": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyarrow.tests.test_compute.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_compute.test_filter": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pyarrow.array",
    "pyarrow.tests.test_compute.all_array_types",
    "pyarrow.tests.test_compute.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_sum": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.tests.test_compute.pytest",
    "pyarrow.uint16",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "IndexError",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_compute.all_array_types",
    "pyarrow.tests.test_compute.pytest",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take_dictionary": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_compute.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_compute.test_take_indices_types": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.tests.test_compute.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin": {
  "data": {
   "symbols_in_volume": [
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.tests.test_convert_builtin._as_deque",
    "pyarrow.tests.test_convert_builtin._as_dict_values",
    "pyarrow.tests.test_convert_builtin._as_list",
    "pyarrow.tests.test_convert_builtin._as_tuple",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "zip"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_convert_builtin.MyBrokenInt": {
  "data": {
   "lineno": 68
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyBrokenInt.__int__": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.MyDate": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_builtin.datetime"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyDatetime": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_builtin.datetime"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyInt": {
  "data": {
   "lineno": 60
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.MyInt.__init__": {
  "data": {
   "lineno": 61
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.MyInt.__int__": {
  "data": {
   "lineno": 64
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable": {
  "data": {
   "lineno": 52
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable.__init__": {
  "data": {
   "lineno": 53
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable.__iter__": {
  "data": {
   "lineno": 56
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_deque": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_builtin.collections"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_dict_values": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.tests.test_convert_builtin.six"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_list": {
  "data": {
   "lineno": 132
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_tuple": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._pandas_api": {
  "data": {
   "shadows": "pyarrow.pandas_compat._pandas_api"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.check_array_mixed_unicode_bytes": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "bytearray",
    "pyarrow.array",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.check_struct_type": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pyarrow.types.is_struct",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.int_type_pairs": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyarrow.tests.test_convert_builtin.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "pyarrow.tests.test_convert_builtin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.test_array_ignore_nan_from_pandas": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": [
    "ValueError",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_array_mixed_unicode_bytes": {
  "data": {
   "lineno": 642,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.large_binary",
    "pyarrow.large_string",
    "pyarrow.string",
    "pyarrow.tests.test_convert_builtin.check_array_mixed_unicode_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_broken_integers": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "ZeroDivisionError",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_convert_builtin.MyBrokenInt",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.tests.test_convert_builtin.traceback",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_convert_with_mask": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_date32_overflow": {
  "data": {
   "lineno": 747,
   "symbols_in_volume": [
    "OverflowError",
    "pyarrow.ArrowException",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_datetime_subclassing": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.tests.test_convert_builtin.MyDate",
    "pyarrow.tests.test_convert_builtin.MyDatetime",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_decimal_array_with_none_and_nan": {
  "data": {
   "lineno": 1237,
   "symbols_in_volume": [
    "TypeError",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_double_auto_coerce_from_integer": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_double_integer_coerce_representable_range": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_iterable": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.null",
    "pyarrow.tests.test_convert_builtin.StrangeIterable"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_list": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.null",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_range": {
  "data": {
   "lineno": 1042,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.null",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_fixed_size_bytes_does_not_accept_varying_lengths": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_float32_integer_coerce_representable_range": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "ValueError",
    "f32",
    "numpy.float32",
    "pyarrow.array",
    "pyarrow.float32",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_garbage_collection": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.gc",
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_infinite_iterator": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_convert_builtin.itertools"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_iterable_types": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.StrangeIterable"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_iterator_without_size": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "iter",
    "pyarrow.array",
    "pyarrow.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_large_binary_array": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pyarrow.Array",
    "pyarrow.array",
    "pyarrow.large_binary",
    "pyarrow.large_string",
    "pyarrow.tests.test_convert_builtin.math",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_large_binary_value": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pyarrow.Array",
    "pyarrow.array",
    "pyarrow.large_binary",
    "pyarrow.large_string",
    "pyarrow.tests.test_convert_builtin.math",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_size_overflow": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "iter",
    "pyarrow.array",
    "pyarrow.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_size_underflow": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "iter",
    "pyarrow.array",
    "pyarrow.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_types": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "iter",
    "pyarrow.array",
    "pyarrow.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_list_with_non_list": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_mixed_sequence_errors": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.float32",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_multidimensional_ndarray_as_nested_list": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "AssertionError",
    "numpy.array",
    "numpy.int64",
    "pyarrow.array",
    "pyarrow.infer_type",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_ndarray_nested_numpy_double": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "inner_seq",
    "len",
    "list",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "pyarrow.array",
    "pyarrow.float64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_arrays": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.int64",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_large_lists": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.int16",
    "pyarrow.large_list",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_lists": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_ndarray_different_dtypes": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.uint32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_ndarray_in_object_array": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.empty",
    "numpy.int64",
    "object",
    "pyarrow.array",
    "pyarrow.infer_type",
    "pyarrow.int64",
    "pyarrow.list_"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_numpy_scalars_mixed_type": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.int32",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_range_types": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_all_none": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.null",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_boolean": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_bytes": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "bytearray",
    "len",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.large_binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_custom_integers": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "list",
    "map",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_convert_builtin.MyInt",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_date": {
  "data": {
   "lineno": 717,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.tests.test_convert_builtin.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_different_precisions": {
  "data": {
   "lineno": 990,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_from_integers": {
  "data": {
   "lineno": 1028,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_large_integer": {
  "data": {
   "lineno": 1020,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_negative": {
  "data": {
   "lineno": 1006,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_no_scale": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_no_whole_part": {
  "data": {
   "lineno": 1013,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_double": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.float64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_explicit_types": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "input",
    "len",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_fixed_size_bytes": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "bytearray",
    "len",
    "pyarrow.array",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "len",
    "numpy.iinfo",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_inferred": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_nested_np_nan": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_np_nan": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_mixed_types_fails": {
  "data": {
   "lineno": 969,
   "symbols_in_volume": [
    "pyarrow.ArrowTypeError",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_mixed_types_with_specified_type_fails": {
  "data": {
   "lineno": 975,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.string",
    "pyarrow.tests.test_convert_builtin.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_nesting_levels": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.ArrowTypeError",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_boolean": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "len",
    "numpy.bool",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_double": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "len",
    "np_scalar",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.isnan",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_integer": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "len",
    "np_scalar",
    "numpy.iinfo",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_integer_inferred": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "len",
    "np_scalar",
    "numpy.iinfo",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_timestamp": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "len",
    "numpy.datetime64",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_from_int_with_unit": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "AttributeError",
    "CustomClass",
    "TypeError",
    "len",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.tests.test_convert_builtin.sys",
    "pyarrow.timestamp",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_from_int_with_unit.CustomClass": {
  "data": {
   "lineno": 927
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_nanoseconds": {
  "data": {
   "lineno": 867,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.pandas_compat._pandas_api.have_pandas",
    "pyarrow.tests.test_convert_builtin.MyDatetime",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_with_unit": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_types": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_unicode": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_utf8_to_unicode": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.large_string",
    "pyarrow.string",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_signed_integer_overflow": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "OverflowError",
    "getattr",
    "pyarrow",
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts": {
  "data": {
   "lineno": 1077,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts_bytes_keys": {
  "data": {
   "lineno": 1102,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts_inference": {
  "data": {
   "lineno": 1164,
   "symbols_in_volume": [
    "len",
    "numpy.empty",
    "object",
    "pyarrow.ArrowInvalid",
    "pyarrow.ArrowTypeError",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_convert_builtin.check_struct_type",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_mixed_sequence": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_tuples": {
  "data": {
   "lineno": 1119,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.empty",
    "object",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_structarray": {
  "data": {
   "lineno": 1050,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.int64",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_structarray_from_arrays_coerce": {
  "data": {
   "lineno": 1213,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_timezone_string": {
  "data": {
   "lineno": 1252,
   "symbols_in_volume": [
    "pyarrow.lib.string_to_tzinfo",
    "pyarrow.lib.tzinfo_to_string",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.tests.test_convert_builtin.pytz"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_uint64_max_convert": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "OverflowError",
    "numpy.array",
    "numpy.iinfo",
    "numpy.uint64",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.uint64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_unsigned_integer_overflow": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "OverflowError",
    "getattr",
    "pyarrow",
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.traceback": {
  "data": {
   "shadows": "traceback"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.unittest": {
  "data": {
   "shadows": "pyarrow.compat.unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead": {
  "data": {
   "lineno": 221
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.check_names": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.read_bytes": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_bom": {
  "data": {
   "lineno": 248
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_column_types": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "decimal.Decimal",
    "pyarrow.ArrowInvalid",
    "pyarrow.bool_",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.decimal128",
    "pyarrow.float32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_csv.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_column_types_with_column_names": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.csv.ReadOptions",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_custom_bools": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "pyarrow.bool_",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_custom_nulls": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "pyarrow.csv.ConvertOptions",
    "pyarrow.int64",
    "pyarrow.null",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_empty_lines": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "pyarrow.csv.ParseOptions",
    "pyarrow.csv.ReadOptions"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_file_object": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.tests.test_csv.io",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header_autogenerate_column_names": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.csv.ReadOptions",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header_column_names": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.csv.ReadOptions",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_header_skip_rows": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.csv.ReadOptions",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_include_columns": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "KeyError",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_include_missing_columns": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.csv.ReadOptions",
    "pyarrow.int32",
    "pyarrow.null",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_invalid_csv": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_no_ending_newline": {
  "data": {
   "lineno": 620
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_options_delimiter": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "pyarrow.csv.ParseOptions"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_ints": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "pyarrow.int64",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_nulls": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.null",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_timestamps": {
  "data": {
   "lineno": 492,
   "symbols_in_volume": [
    "datetime.datetime",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_simple_varied": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "pyarrow.bool_",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_small_random_csv": {
  "data": {
   "lineno": 683,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.make_random_csv"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_stress_block_sizes": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "pyarrow.csv.ReadOptions",
    "pyarrow.tests.test_csv.make_random_csv"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_stress_convert_options_blowup": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "AttributeError",
    "clock",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.string",
    "pyarrow.tests.test_csv.make_empty_csv",
    "pyarrow.tests.test_csv.time",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCSVRead.test_trivial": {
  "data": {
   "lineno": 630
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead": {
  "data": {
   "lineno": 749
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.read_csv": {
  "data": {
   "lineno": 757,
   "symbols_in_volume": [
    "pyarrow.ArrowNotImplementedError",
    "pyarrow.csv.read_csv",
    "pyarrow.tests.test_csv.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.setUp": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.tempfile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.tearDown": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.shutil"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.BaseTestCompressedCSVRead.test_random_csv": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.make_random_csv",
    "pyarrow.tests.test_csv.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.ConvertOptions": {
  "data": {
   "shadows": "pyarrow.csv.ConvertOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.Decimal": {
  "data": {
   "shadows": "decimal.Decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.ParseOptions": {
  "data": {
   "shadows": "pyarrow.csv.ParseOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.ReadOptions": {
  "data": {
   "shadows": "pyarrow.csv.ReadOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.TestBZ2CSVRead": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.BaseTestCompressedCSVRead",
    "pyarrow.tests.test_csv.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestBZ2CSVRead.write_file": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.bz2"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestGZipCSVRead": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.BaseTestCompressedCSVRead",
    "pyarrow.tests.test_csv.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestGZipCSVRead.test_concatenated": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.gzip",
    "pyarrow.tests.test_csv.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestGZipCSVRead.write_file": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.gzip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestParallelCSVRead": {
  "data": {
   "lineno": 739,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.BaseTestCSVRead",
    "pyarrow.tests.test_csv.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestParallelCSVRead.read_csv": {
  "data": {
   "lineno": 741,
   "symbols_in_volume": [
    "pyarrow.csv.ReadOptions",
    "pyarrow.csv.read_csv"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.TestSerialCSVRead": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.BaseTestCSVRead",
    "pyarrow.tests.test_csv.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_csv.TestSerialCSVRead.read_csv": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "pyarrow.csv.ReadOptions",
    "pyarrow.csv.read_csv"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.generate_col_names": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.make_empty_csv": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyarrow.tests.test_csv.io"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.make_random_csv": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "list",
    "map",
    "numpy.random.RandomState",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_csv.generate_col_names",
    "pyarrow.tests.test_csv.io",
    "pyarrow.tests.test_csv.itertools",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.read_csv": {
  "data": {
   "shadows": "pyarrow.csv.read_csv"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.test_convert_options": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "TypeError",
    "cls",
    "isinstance",
    "list",
    "pyarrow.binary",
    "pyarrow.csv.ConvertOptions",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.null",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_csv.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.test_parse_options": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "cls",
    "pyarrow.csv.ParseOptions"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.test_read_csv_does_not_close_passed_file_handles": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "pyarrow.csv.read_csv",
    "pyarrow.tests.test_csv.io"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.test_read_options": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "cls",
    "pyarrow.csv.ReadOptions"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_csv.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyarrow.tests.test_csv.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.tests.test_cuda.has_ipc_support",
    "pyarrow.tests.test_cuda.platform",
    "pyarrow.tests.test_cuda.pytest",
    "pyarrow.tests.test_cuda.sysconfig"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_cuda.cuda": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.cuda_ipc": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.global_context": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.global_context1": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.has_ipc_support": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.make_random_buffer": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "ValueError",
    "numpy.frombuffer",
    "numpy.random.randint",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.allocate_buffer",
    "pyarrow.tests.test_cuda.global_context"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.make_recordbatch": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "numpy.int16",
    "numpy.random.randint",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.record_batch",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.other_process_for_test_IPC": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.cuda.Context",
    "pyarrow.cuda.IpcMemHandle.from_buffer",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.platform": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.setup_module": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pyarrow.tests.test_cuda.cuda"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.sysconfig": {
  "data": {
   "shadows": "sysconfig"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda.teardown_module": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferReader": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "len",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "numpy.zeros",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.make_random_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferReader_zero_size": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "len",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.make_random_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "allocate",
    "numpy.arange",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "test_writes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter.allocate": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": [
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter.test_writes": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": [
    "allocate",
    "min",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.tests.test_cuda.make_random_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_BufferWriter_edge_cases": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.make_random_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_Context": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.global_context1",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_CudaBuffer": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.pytest",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_HostBuffer": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "TypeError",
    "numpy.frombuffer",
    "numpy.uint8",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.pytest",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_IPC": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "pyarrow.tests.test_cuda.cuda_ipc",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.multiprocessing",
    "pyarrow.tests.test_cuda.other_process_for_test_IPC",
    "pyarrow.tests.test_cuda.pytest",
    "pyarrow.tests.test_cuda.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_batch_serialize": {
  "data": {
   "lineno": 660,
   "symbols_in_volume": [
    "pyarrow.read_record_batch",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.make_recordbatch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_context_allocate_del": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyarrow.tests.test_cuda.global_context"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_context_device_buffer": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "BufferError",
    "memoryview",
    "numpy.concatenate",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_context_from_object": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.ArrowTypeError",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_device": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "ValueError",
    "put",
    "pyarrow.tests.test_cuda.global_context1",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_device.put": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_host": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "ValueError",
    "put",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_host.put": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_from_to_host": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "isinstance",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.Buffer",
    "pyarrow.allocate_buffer",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_copy_to_host": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "ValueError",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.allocate_buffer",
    "pyarrow.tests.test_cuda.make_random_buffer",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_foreign_buffer": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.uint8",
    "pyarrow.ArrowIOError",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.global_context",
    "pyarrow.tests.test_cuda.pytest",
    "pyarrow.tests.test_cuda.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda.test_manage_allocate_free_host": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "numpy.uint8",
    "pyarrow.tests.test_cuda.cuda",
    "pyarrow.tests.test_cuda.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.tests.test_cuda_numba_interop.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_cuda_numba_interop.DeviceNDArray": {
  "data": {
   "shadows": "numba.cuda.cudadrv.devicearray.DeviceNDArray"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda_numba_interop.context_choice_ids": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.context_choices": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.cuda": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.dtypes": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.make_random_buffer": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "numpy.dtype",
    "numpy.frombuffer",
    "numpy.random.randint",
    "numpy.uint8",
    "pyarrow.allocate_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.nb_cuda": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cuda_numba_interop.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda_numba_interop.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda_numba_interop.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cuda_numba_interop.setup_module": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "numpy.random.seed",
    "pyarrow.tests.test_cuda_numba_interop.cuda",
    "pyarrow.tests.test_cuda_numba_interop.nb_cuda"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.teardown_module": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_context": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids",
    "pyarrow.tests.test_cuda_numba_interop.context_choices",
    "pyarrow.tests.test_cuda_numba_interop.cuda",
    "pyarrow.tests.test_cuda_numba_interop.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "MyObj",
    "ValueError",
    "len",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids",
    "pyarrow.tests.test_cuda_numba_interop.context_choices",
    "pyarrow.tests.test_cuda_numba_interop.dtypes",
    "pyarrow.tests.test_cuda_numba_interop.make_random_buffer",
    "pyarrow.tests.test_cuda_numba_interop.nb_cuda",
    "pyarrow.tests.test_cuda_numba_interop.pytest",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object.MyObj": {
  "data": {
   "lineno": 143
  },
  "type": "class"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object.MyObj.__cuda_array_interface__": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_from_object.MyObj.__init__": {
  "data": {
   "lineno": 144
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_numba_context": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "len",
    "numba.cuda.cudadrv.devicearray.DeviceNDArray",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids",
    "pyarrow.tests.test_cuda_numba_interop.context_choices",
    "pyarrow.tests.test_cuda_numba_interop.dtypes",
    "pyarrow.tests.test_cuda_numba_interop.make_random_buffer",
    "pyarrow.tests.test_cuda_numba_interop.nb_cuda",
    "pyarrow.tests.test_cuda_numba_interop.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_numba_memalloc": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "len",
    "numba.cuda.cudadrv.devicearray.DeviceNDArray",
    "numpy.dtype",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids",
    "pyarrow.tests.test_cuda_numba_interop.context_choices",
    "pyarrow.tests.test_cuda_numba_interop.cuda",
    "pyarrow.tests.test_cuda_numba_interop.dtypes",
    "pyarrow.tests.test_cuda_numba_interop.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_pyarrow_jit": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "len",
    "numba.cuda.cudadrv.devicearray.DeviceNDArray",
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids",
    "pyarrow.tests.test_cuda_numba_interop.context_choices",
    "pyarrow.tests.test_cuda_numba_interop.dtypes",
    "pyarrow.tests.test_cuda_numba_interop.make_random_buffer",
    "pyarrow.tests.test_cuda_numba_interop.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_pyarrow_jit.increment_by_one": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "pyarrow.tests.test_cuda_numba_interop.nb_cuda"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cuda_numba_interop.test_pyarrow_memalloc": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "len",
    "numba.cuda.cudadrv.devicearray.DeviceNDArray",
    "numpy.testing.assert_equal",
    "pyarrow.tests.test_cuda_numba_interop.context_choice_ids",
    "pyarrow.tests.test_cuda_numba_interop.context_choices",
    "pyarrow.tests.test_cuda_numba_interop.dtypes",
    "pyarrow.tests.test_cuda_numba_interop.make_random_buffer",
    "pyarrow.tests.test_cuda_numba_interop.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cython": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.tests.test_cython.os"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_cython.cython": {
  "data": {
   "shadows": "cython"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.here": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cython.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.setup_template": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cython.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.test_cython_api": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "TypeError",
    "__import__",
    "open",
    "pyarrow.array",
    "pyarrow.get_library_dirs",
    "pyarrow.tests.test_cython.here",
    "pyarrow.tests.test_cython.os",
    "pyarrow.tests.test_cython.pytest",
    "pyarrow.tests.test_cython.setup_template",
    "pyarrow.tests.test_cython.shutil",
    "pyarrow.tests.test_cython.subprocess",
    "pyarrow.tests.test_cython.sys",
    "pyarrow.tests.util.get_modified_env_with_pythonpath",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cython.test_util": {
  "data": {
   "shadows": "pyarrow.tests.util"
  },
  "type": "import"
 },
 "pyarrow.tests.test_deprecations": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_deprecations.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_deprecations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_extension_type.ParamExtType": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.ParamExtType.__init__": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType.__init__",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ParamExtType.__reduce__": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.ParamExtType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ParamExtType.width": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "pyarrow.ExtensionType"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__arrow_ext_deserialize__": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "classmethod",
    "pyarrow.tests.test_extension_type.PeriodType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__arrow_ext_serialize__": {
  "data": {
   "lineno": 238
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__eq__": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "pyarrow.BaseExtensionType",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.__init__": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "pyarrow.ExtensionType.__init__",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.PeriodType.freq": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.UuidType": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_extension_type.UuidType.__init__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyarrow.PyExtensionType.__init__",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.UuidType.__reduce__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.UuidType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.base64": {
  "data": {
   "shadows": "base64"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.check_example_batch": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ExtensionArray",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.example_batch": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_extension_type.ParamExtType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ipc_read_batch": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pyarrow.RecordBatchStreamReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.ipc_write_batch": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.RecordBatchStreamWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.pq": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_extension_type.registered_period_type": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "KeyError",
    "pyarrow.register_extension_type",
    "pyarrow.tests.test_extension_type.PeriodType",
    "pyarrow.tests.test_extension_type.pytest",
    "pyarrow.unregister_extension_type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_basics": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_extension_type.ParamExtType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_equality": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.UuidType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_errors": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_lifetime": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.weakref",
    "ref"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_array_pickling": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ExtensionArray",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.pickle",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type__lifetime": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.UuidType",
    "pyarrow.tests.test_extension_type.weakref",
    "wr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type__storage_type": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.UuidType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type_basics": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.UuidType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ext_type_equality": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.UuidType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "pyarrow.int64",
    "pyarrow.tests.test_extension_type.PeriodType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_equality": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.PeriodType"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_ipc": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ExtensionArray",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_extension_type.PeriodType",
    "pyarrow.tests.test_extension_type.ipc_read_batch",
    "pyarrow.tests.test_extension_type.ipc_write_batch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_ipc_unknown": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.Int64Array",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_extension_type.PeriodType",
    "pyarrow.tests.test_extension_type.ipc_read_batch",
    "pyarrow.tests.test_extension_type.ipc_write_batch",
    "pyarrow.unregister_extension_type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_generic_ext_type_register": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "pyarrow.register_extension_type",
    "pyarrow.string",
    "pyarrow.tests.test_extension_type.PeriodType",
    "pyarrow.tests.test_extension_type.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ipc": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.check_example_batch",
    "pyarrow.tests.test_extension_type.example_batch",
    "pyarrow.tests.test_extension_type.ipc_read_batch",
    "pyarrow.tests.test_extension_type.ipc_write_batch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_ipc_unknown_type": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "globals",
    "isinstance",
    "pyarrow.UnknownExtensionType",
    "pyarrow.tests.test_extension_type.ParamExtType",
    "pyarrow.tests.test_extension_type.check_example_batch",
    "pyarrow.tests.test_extension_type.example_batch",
    "pyarrow.tests.test_extension_type.ipc_read_batch",
    "pyarrow.tests.test_extension_type.ipc_write_batch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_parquet": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.ExtensionArray.from_storage",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.parquet.read_metadata",
    "pyarrow.parquet.read_table",
    "pyarrow.parquet.write_table",
    "pyarrow.read_schema",
    "pyarrow.table",
    "pyarrow.tests.test_extension_type.PeriodType",
    "pyarrow.tests.test_extension_type.base64",
    "pyarrow.tests.test_extension_type.pytest",
    "pyarrow.unregister_extension_type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.test_uuid_type_pickle": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pyarrow.tests.test_extension_type.UuidType",
    "pyarrow.tests.test_extension_type.pickle",
    "pyarrow.tests.test_extension_type.weakref",
    "range",
    "wr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_extension_type.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_feather.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.FeatherDataset": {
  "data": {
   "shadows": "pyarrow.feather.FeatherDataset"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.FeatherReader": {
  "data": {
   "shadows": "pyarrow.feather.FeatherReader"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.FeatherWriter": {
  "data": {
   "shadows": "pyarrow.lib.FeatherWriter"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.TestFeatherReader": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._assert_error_on_write": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._assert_error_on_write.f": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "pyarrow.feather.write_feather"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._check_pandas_roundtrip": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.feather.read_feather",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.os",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._get_null_counts": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "pyarrow.feather.FeatherReader",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.setUp": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.tearDown": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_all_none": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_all_null_category": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_no_nulls": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_nulls": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.seed",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.feather.read_feather",
    "pyarrow.lib.FeatherWriter",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_object_nulls": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_buffer_bounds_error": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.array",
    "pyarrow.feather.read_feather",
    "pyarrow.float64",
    "pyarrow.lib.FeatherWriter",
    "pyarrow.tests.test_feather.random_path",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_category": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_dataset": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "enumerate",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.feather.FeatherDataset",
    "pyarrow.lib.FeatherWriter",
    "pyarrow.tests.test_feather.random_path",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_delete_partial_file_on_error": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "CustomClass",
    "Exception",
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.os",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path",
    "pyarrow.tests.test_feather.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_delete_partial_file_on_error.CustomClass": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_duplicate_columns": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_empty_strings": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_file_not_exist": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "pyarrow.ArrowIOError",
    "pyarrow.feather.FeatherReader",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_filelike_objects": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.feather.read_feather",
    "pyarrow.feather.write_feather"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_float_no_nulls": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_float_nulls": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.feather.read_feather",
    "pyarrow.lib.FeatherWriter",
    "pyarrow.tests.test_feather.random_path",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_integer_no_nulls": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_integer_with_nulls": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.feather.read_feather",
    "pyarrow.lib.FeatherWriter",
    "pyarrow.tests.test_feather.random_path",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_large_dataframe": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_multithreaded_read": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_nan_as_null": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_non_string_columns": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_num_columns_attr": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.feather.FeatherReader",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.random_path",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_num_rows_attr": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pyarrow.feather.FeatherReader",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_out_of_float64_timestamp_with_nulls": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_overwritten_file": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_platform_numpy_integers": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_read_columns": {
  "data": {
   "lineno": 482,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_read_table": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.feather.read_table",
    "pyarrow.lib.FeatherWriter",
    "pyarrow.tests.test_feather.random_path",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_sparse_dataframe": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.pandas_compat._pandas_api.has_sparse",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_strings": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timedelta_with_nulls": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timestamp": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timestamp_with_nulls": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_unicode_filename": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_feather.os",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_unsupported": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.DataFrame",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pyarrow.pandas_compat": {
  "data": {
   "shadows": "pyarrow.pandas_compat"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pytestmark": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "pyarrow.tests.test_feather.random_path": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.tempfile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.read_feather": {
  "data": {
   "shadows": "pyarrow.feather.read_feather"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.read_table": {
  "data": {
   "shadows": "pyarrow.feather.read_table"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.test_chunked_binary_error_message": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.io",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.write_feather": {
  "data": {
   "shadows": "pyarrow.feather.write_feather"
  },
  "type": "import"
 },
 "pyarrow.tests.test_filesystem": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_filesystem.filesystem": {
  "data": {
   "shadows": "pyarrow.filesystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_filesystem.test_resolve_local_path": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.filesystem.LocalFileSystem",
    "pyarrow.filesystem.resolve_filesystem_and_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_filesystem.test_resolve_uri": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.filesystem.LocalFileSystem",
    "pyarrow.filesystem.resolve_filesystem_and_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_fs.ArrowIOError": {
  "data": {
   "shadows": "pyarrow.ArrowIOError"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.FileSystem": {
  "data": {
   "shadows": "pyarrow.fs.FileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.FileType": {
  "data": {
   "shadows": "pyarrow.fs.FileType"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.LocalFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.LocalFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.Selector": {
  "data": {
   "shadows": "pyarrow.fs.Selector"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.SubTreeFileSystem": {
  "data": {
   "shadows": "pyarrow.fs.SubTreeFileSystem"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.fs": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyarrow.fs.LocalFileSystem",
    "pyarrow.fs.SubTreeFileSystem",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.gzip_compress": {
  "data": {
   "shadows": "pyarrow.tests.test_io.gzip_compress"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.gzip_decompress": {
  "data": {
   "shadows": "pyarrow.tests.test_io.gzip_decompress"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.identity": {
  "data": {
   "lineno": 230
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.pathlib": {
  "data": {
   "shadows": "pathlib2"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_fs.test_cannot_instantiate_base_filesystem": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.fs.FileSystem",
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_copy_file": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.testpath"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_create_dir": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pyarrow.ArrowIOError",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pytest",
    "pyarrow.tests.test_fs.testpath"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_delete_dir": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.testpath"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_delete_file": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.testpath"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_get_target_stats": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "ValueError",
    "mtime_almost_equal",
    "pyarrow.fs.FileType.Directory",
    "pyarrow.fs.FileType.File",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pytest",
    "pyarrow.tests.test_fs.testpath",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_get_target_stats.mtime_almost_equal": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "abs",
    "datetime.datetime.utcfromtimestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_get_target_stats_with_selector": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "len",
    "list",
    "pyarrow.fs.FileType.Directory",
    "pyarrow.fs.FileType.File",
    "pyarrow.fs.Selector",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.testpath",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_move": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.testpath"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_non_path_like_input_raises": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Path",
    "TypeError",
    "pathlib2.Path",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.pytest",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_non_path_like_input_raises.Path": {
  "data": {
   "lineno": 67
  },
  "type": "class"
 },
 "pyarrow.tests.test_fs.test_open_append_stream": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "compressor",
    "decompressor",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.identity",
    "pyarrow.tests.test_fs.pytest",
    "pyarrow.tests.test_fs.testpath",
    "pyarrow.tests.test_io.gzip_compress",
    "pyarrow.tests.test_io.gzip_decompress"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_input_file": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.testpath"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_input_stream": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "compressor",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.identity",
    "pyarrow.tests.test_fs.pytest",
    "pyarrow.tests.test_fs.testpath",
    "pyarrow.tests.test_io.gzip_compress"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.test_open_output_stream": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "decompressor",
    "pyarrow.tests.test_fs.fs",
    "pyarrow.tests.test_fs.identity",
    "pyarrow.tests.test_fs.pytest",
    "pyarrow.tests.test_fs.testpath",
    "pyarrow.tests.test_io.gzip_decompress"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.testpath": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "pyarrow.tests.test_fs.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_fs.testpath.convert": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "isinstance",
    "pathlib2.Path",
    "pyarrow.fs.SubTreeFileSystem",
    "pyarrow.tests.test_fs.fs"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_gandiva.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_gandiva.gandiva": {
  "data": {
   "shadows": "pyarrow.gandiva"
  },
  "type": "import"
 },
 "pyarrow.tests.test_gandiva.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_gandiva.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_gandiva.test_boolean": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "filter",
    "filter.evaluate",
    "list",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.default_memory_pool",
    "pyarrow.float64",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.gandiva.make_filter",
    "pyarrow.tests.test_gandiva.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_filter": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "filter",
    "filter.evaluate",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.default_memory_pool",
    "pyarrow.float64",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.gandiva.make_filter",
    "pyarrow.tests.test_gandiva.pytest",
    "pyarrow.uint32",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_get_registered_function_signatures": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "hasattr",
    "list",
    "pyarrow.DataType",
    "pyarrow.gandiva.get_registered_function_signatures",
    "pyarrow.tests.test_gandiva.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_in_expr": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "filter",
    "filter.evaluate",
    "list",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.default_memory_pool",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.gandiva.make_filter",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.string",
    "pyarrow.tests.test_gandiva.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_in_expr_todo": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "filter",
    "filter.evaluate",
    "list",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.date32",
    "pyarrow.default_memory_pool",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.gandiva.make_filter",
    "pyarrow.tests.test_gandiva.datetime",
    "pyarrow.tests.test_gandiva.pytest",
    "pyarrow.time64",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_literals": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.string",
    "pyarrow.tests.test_gandiva.pytest",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_regex": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.default_memory_pool",
    "pyarrow.field",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.gandiva.make_projector",
    "pyarrow.string",
    "pyarrow.tests.test_gandiva.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_table": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.default_memory_pool",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.gandiva.make_projector",
    "pyarrow.tests.test_gandiva.pytest",
    "sum"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_gandiva.test_tree_exp_builder": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.default_memory_pool",
    "pyarrow.field",
    "pyarrow.gandiva.TreeExprBuilder",
    "pyarrow.gandiva.make_projector",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.tests.test_gandiva.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.compat.PY2",
    "pyarrow.tests.test_io.gzip"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_io.BufferedIOBase": {
  "data": {
   "shadows": "io.BufferedIOBase"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.IOBase": {
  "data": {
   "shadows": "io.IOBase"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.PY2": {
  "data": {
   "shadows": "pyarrow.compat.PY2"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.StringIO": {
  "data": {
   "shadows": "io.StringIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.TextIOWrapper": {
  "data": {
   "shadows": "io.TextIOWrapper"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io._check_native_file_reader": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "FACTORY",
    "len",
    "pyarrow.tests.test_io.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io._try_delete": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "pyarrow.tests.test_io.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.bz2": {
  "data": {
   "shadows": "bz2"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.check_compressed_concatenated": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": [
    "pyarrow.CompressedInputStream",
    "pyarrow.OSFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.check_compressed_input": {
  "data": {
   "lineno": 1070,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Buffer",
    "pyarrow.CompressedInputStream",
    "pyarrow.OSFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.check_large_seeks": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "file_factory",
    "open",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "pyarrow.tests.test_io.sys",
    "pyarrow.tests.test_io.tempfile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.guid": {
  "data": {
   "shadows": "pyarrow.compat.guid"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.gzip": {
  "data": {
   "shadows": "gzip"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.gzip_compress": {
  "data": {
   "lineno": 1244
  },
  "type": "constant"
 },
 "pyarrow.tests.test_io.gzip_decompress": {
  "data": {
   "lineno": 1245
  },
  "type": "constant"
 },
 "pyarrow.tests.test_io.make_compressed_output": {
  "data": {
   "lineno": 1139,
   "symbols_in_volume": [
    "open",
    "pyarrow.BufferOutputStream",
    "pyarrow.CompressedOutputStream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pathlib": {
  "data": {
   "shadows": "pathlib2"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.sample_disk_data": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "numpy.random.randint",
    "open",
    "pyarrow.compat.guid",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.sample_disk_data.teardown": {
  "data": {
   "lineno": 696,
   "symbols_in_volume": [
    "pyarrow.tests.test_io._try_delete"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.test_allocate_buffer": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.allocate_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_allocate_buffer_resizable": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ResizableBuffer",
    "pyarrow.allocate_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_address": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "bytearray",
    "numpy.arange",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytearray": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "bytearray",
    "isinstance",
    "pyarrow.Buffer",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytes": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Buffer",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "bytearray",
    "eq",
    "ne",
    "numpy.frombuffer",
    "numpy.int16",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals.eq": {
  "data": {
   "lineno": 400
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals.ne": {
  "data": {
   "lineno": 405
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_from_numpy": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.int8",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_getitem": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "IndexError",
    "bytearray",
    "len",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_hashing": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_hex": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_invalid": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "isinstance",
    "memoryview",
    "pyarrow.Buffer",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview_is_immutable": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "isinstance",
    "memoryview",
    "pyarrow.Buffer",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "make_buffer",
    "pyarrow.tests.test_io.gc",
    "pyarrow.tests.test_io.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting.make_buffer": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "bytearray",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_respects_immutability": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.uint8",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_slicing": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_to_numpy": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "bytearray",
    "numpy.frombuffer",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_input_stream": {
  "data": {
   "lineno": 999,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.BufferedInputStream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_input_stream_detach_non_seekable": {
  "data": {
   "lineno": 1022,
   "symbols_in_volume": [
    "EnvironmentError",
    "pyarrow.BufferReader",
    "pyarrow.BufferedInputStream",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_input_stream_detach_seekable": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.BufferedInputStream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_output_stream": {
  "data": {
   "lineno": 1037,
   "symbols_in_volume": [
    "numpy.int8",
    "numpy.zeros",
    "pyarrow.BufferedOutputStream",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffered_output_stream_detach": {
  "data": {
   "lineno": 1054,
   "symbols_in_volume": [
    "numpy.int8",
    "numpy.zeros",
    "pyarrow.BufferedOutputStream",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_non_bytes": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.BufferReader",
    "pyarrow.compat.u",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "get_buffer",
    "pyarrow.tests.test_io.gc"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference.get_buffer": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "pyarrow.BufferReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compress_decompress": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "numpy.random.randint",
    "numpy.uint8",
    "pyarrow.compress",
    "pyarrow.decompress",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_concatenated_gzip": {
  "data": {
   "lineno": 1116,
   "symbols_in_volume": [
    "pyarrow.tests.test_io.check_compressed_concatenated",
    "pyarrow.tests.test_io.gzip",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_input_bz2": {
  "data": {
   "lineno": 1098,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.tests.test_io.bz2",
    "pyarrow.tests.test_io.check_compressed_input",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_input_gzip": {
  "data": {
   "lineno": 1090,
   "symbols_in_volume": [
    "pyarrow.tests.test_io.check_compressed_input",
    "pyarrow.tests.test_io.gzip",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_input_invalid": {
  "data": {
   "lineno": 1126,
   "symbols_in_volume": [
    "IOError",
    "ValueError",
    "pyarrow.BufferReader",
    "pyarrow.CompressedInputStream",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_output_bz2": {
  "data": {
   "lineno": 1162,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.tests.test_io.bz2",
    "pyarrow.tests.test_io.make_compressed_output",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_output_gzip": {
  "data": {
   "lineno": 1153,
   "symbols_in_volume": [
    "pyarrow.tests.test_io.gzip",
    "pyarrow.tests.test_io.make_compressed_output",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_recordbatch_stream": {
  "data": {
   "lineno": 1195,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.CompressedInputStream",
    "pyarrow.CompressedOutputStream",
    "pyarrow.RecordBatchStreamReader",
    "pyarrow.RecordBatchStreamWriter",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compressed_roundtrip": {
  "data": {
   "lineno": 1174,
   "symbols_in_volume": [
    "NotImplementedError",
    "len",
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.CompressedInputStream",
    "pyarrow.CompressedOutputStream",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_foreign_buffer": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.frombuffer",
    "numpy.int32",
    "pyarrow.foreign_buffer",
    "pyarrow.tests.test_io.weakref",
    "wr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_inmemory_write_after_closed": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.BufferOutputStream",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_buffer": {
  "data": {
   "lineno": 1248,
   "symbols_in_volume": [
    "memoryview",
    "pyarrow.input_stream",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.gzip_compress"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing": {
  "data": {
   "lineno": 1261,
   "symbols_in_volume": [
    "DuckReader",
    "pyarrow.input_stream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader": {
  "data": {
   "lineno": 1263,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader.close": {
  "data": {
   "lineno": 1265
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader.closed": {
  "data": {
   "lineno": 1268,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_duck_typing.DuckReader.read": {
  "data": {
   "lineno": 1272
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_errors": {
  "data": {
   "lineno": 1388,
   "symbols_in_volume": [
    "IOError",
    "TypeError",
    "ValueError",
    "bytearray",
    "io.StringIO",
    "memoryview",
    "open",
    "pyarrow.input_stream",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path": {
  "data": {
   "lineno": 1279,
   "symbols_in_volume": [
    "open",
    "pathlib2.Path",
    "pyarrow.input_stream",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path_buffered": {
  "data": {
   "lineno": 1313,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "isinstance",
    "open",
    "pathlib2.Path",
    "pyarrow.BufferedInputStream",
    "pyarrow.OSFile",
    "pyarrow.input_stream",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path_compressed": {
  "data": {
   "lineno": 1293,
   "symbols_in_volume": [
    "open",
    "pathlib2.Path",
    "pyarrow.input_stream",
    "pyarrow.tests.test_io.gzip_compress",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_file_path_compressed_and_buffered": {
  "data": {
   "lineno": 1339,
   "symbols_in_volume": [
    "open",
    "pathlib2.Path",
    "pyarrow.input_stream",
    "pyarrow.tests.test_io.gzip_compress",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_native_file": {
  "data": {
   "lineno": 1377,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.input_stream",
    "pyarrow.tests.test_io.gzip_compress"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_input_stream_python_file": {
  "data": {
   "lineno": 1354,
   "symbols_in_volume": [
    "io.BytesIO",
    "open",
    "pyarrow.input_stream",
    "pyarrow.tests.test_io.gzip_compress",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_close_remove": {
  "data": {
   "lineno": 842,
   "symbols_in_volume": [
    "pyarrow.compat.guid",
    "pyarrow.create_memory_map",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_deref_remove": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "pyarrow.compat.guid",
    "pyarrow.create_memory_map",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_large_seeks": {
  "data": {
   "lineno": 838,
   "symbols_in_volume": [
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.check_large_seeks"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_reader": {
  "data": {
   "lineno": 734,
   "symbols_in_volume": [
    "pyarrow.memory_map",
    "pyarrow.tests.test_io._check_native_file_reader",
    "pyarrow.tests.test_io.sample_disk_data"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_resize": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.uint8",
    "open",
    "pyarrow.compat.guid",
    "pyarrow.create_memory_map",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_retain_buffer_reference": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.gc",
    "pyarrow.tests.test_io.sample_disk_data"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_writer": {
  "data": {
   "lineno": 769,
   "symbols_in_volume": [
    "IOError",
    "numpy.random.randint",
    "open",
    "pyarrow.compat.guid",
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_output_stream": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferOutputStream",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_zero_length": {
  "data": {
   "lineno": 830,
   "symbols_in_volume": [
    "open",
    "pyarrow.compat.guid",
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_mock_output_stream": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferOutputStream",
    "pyarrow.MockOutputStream",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.RecordBatchStreamWriter",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_TextIOWrapper": {
  "data": {
   "lineno": 965,
   "symbols_in_volume": [
    "io.TextIOWrapper",
    "list",
    "open",
    "pyarrow.OSFile",
    "pyarrow.compat.guid",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_modes": {
  "data": {
   "lineno": 884,
   "symbols_in_volume": [
    "open",
    "pyarrow.OSFile",
    "pyarrow.compat.guid",
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_raises_ValueError_after_close": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "open",
    "pyarrow.OSFile",
    "pyarrow.compat.guid",
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_write_reject_unicode": {
  "data": {
   "lineno": 877,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.BufferOutputStream",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_nativefile_write_memoryview": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "TypeError",
    "bytearray",
    "numpy.frombuffer",
    "pyarrow.BufferOutputStream",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_large_seeks": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "pyarrow.OSFile",
    "pyarrow.tests.test_io.check_large_seeks"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_reader": {
  "data": {
   "lineno": 754,
   "symbols_in_volume": [
    "pyarrow.OSFile",
    "pyarrow.tests.test_io._check_native_file_reader",
    "pyarrow.tests.test_io.sample_disk_data"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_writer": {
  "data": {
   "lineno": 857,
   "symbols_in_volume": [
    "IOError",
    "numpy.random.randint",
    "open",
    "pyarrow.OSFile",
    "pyarrow.compat.guid",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_buffer": {
  "data": {
   "lineno": 1405,
   "symbols_in_volume": [
    "bytearray",
    "len",
    "memoryview",
    "pyarrow.output_stream",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_destructor": {
  "data": {
   "lineno": 1525,
   "symbols_in_volume": [
    "check_data"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_destructor.check_data": {
  "data": {
   "lineno": 1532,
   "symbols_in_volume": [
    "open",
    "pyarrow.output_stream",
    "pyarrow.tests.test_io.gc",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing": {
  "data": {
   "lineno": 1418,
   "symbols_in_volume": [
    "DuckWriter",
    "pyarrow.output_stream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter": {
  "data": {
   "lineno": 1420,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.__init__": {
  "data": {
   "lineno": 1421,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.close": {
  "data": {
   "lineno": 1424
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.closed": {
  "data": {
   "lineno": 1427,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_duck_typing.DuckWriter.write": {
  "data": {
   "lineno": 1431
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_errors": {
  "data": {
   "lineno": 1562,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "bytearray",
    "io.StringIO",
    "memoryview",
    "open",
    "pyarrow.output_stream",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path": {
  "data": {
   "lineno": 1440,
   "symbols_in_volume": [
    "check_data",
    "pathlib2.Path",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path.check_data": {
  "data": {
   "lineno": 1444,
   "symbols_in_volume": [
    "open",
    "pyarrow.output_stream",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_buffered": {
  "data": {
   "lineno": 1478,
   "symbols_in_volume": [
    "ValueError",
    "check_data",
    "isinstance",
    "pathlib2.Path",
    "pyarrow.OSFile",
    "pyarrow.output_stream",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_buffered.check_data": {
  "data": {
   "lineno": 1482,
   "symbols_in_volume": [
    "isinstance",
    "open",
    "pyarrow.BufferedOutputStream",
    "pyarrow.output_stream",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed": {
  "data": {
   "lineno": 1455,
   "symbols_in_volume": [
    "ValueError",
    "check_data",
    "pathlib2.Path",
    "pyarrow.tests.test_io.gzip_decompress",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed.check_data": {
  "data": {
   "lineno": 1459,
   "symbols_in_volume": [
    "open",
    "pyarrow.output_stream",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed_and_buffered": {
  "data": {
   "lineno": 1505,
   "symbols_in_volume": [
    "check_data",
    "pyarrow.tests.test_io.gzip_decompress"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_file_path_compressed_and_buffered.check_data": {
  "data": {
   "lineno": 1509,
   "symbols_in_volume": [
    "open",
    "pyarrow.output_stream",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_python_file": {
  "data": {
   "lineno": 1544,
   "symbols_in_volume": [
    "check_data",
    "pyarrow.tests.test_io.gzip_decompress"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_output_stream_python_file.check_data": {
  "data": {
   "lineno": 1547,
   "symbols_in_volume": [
    "open",
    "pyarrow.output_stream",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_closing": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "io.BytesIO",
    "pyarrow.PythonFile",
    "pyarrow.tests.test_io.weakref",
    "wr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_correct_abc": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "io.BufferedIOBase",
    "io.BytesIO",
    "io.IOBase",
    "isinstance",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_implicit_mode": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "io.BytesIO",
    "open",
    "pyarrow.PythonFile",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_iterable": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "io.BytesIO",
    "pyarrow.PythonFile",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_large_seeks": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pyarrow.tests.test_io.check_large_seeks"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_large_seeks.factory": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "open",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_read": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "TypeError",
    "io.BytesIO",
    "io.StringIO",
    "len",
    "pyarrow.PythonFile",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_read_at": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_readall": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "io.BytesIO",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_readinto": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "bytearray",
    "io.BytesIO",
    "len",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_write": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "TypeError",
    "io.BytesIO",
    "io.StringIO",
    "len",
    "pyarrow.PythonFile",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_writelines": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "open",
    "pyarrow.PythonFile",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_uninitialized_buffer": {
  "data": {
   "lineno": 577,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead": {
  "data": {
   "lineno": 86
  },
  "type": "class"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.check_names": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.read_bytes": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_block_sizes": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.json.ParseOptions",
    "pyarrow.json.ReadOptions",
    "pyarrow.tests.test_json.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_file_object": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.tests.test_json.io",
    "pyarrow.tests.test_json.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_no_newline_at_end": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_simple_ints": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "pyarrow.int64",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_simple_nulls": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pyarrow.bool_",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.null",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_simple_varied": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "pyarrow.bool_",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_small_random_json": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "pyarrow.tests.test_json.make_random_json"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.BaseTestJSONRead.test_stress_block_sizes": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "pyarrow.json.ParseOptions",
    "pyarrow.json.ReadOptions",
    "pyarrow.tests.test_json.make_random_json"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.ParseOptions": {
  "data": {
   "shadows": "pyarrow.json.ParseOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.ReadOptions": {
  "data": {
   "shadows": "pyarrow.json.ReadOptions"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.TestParallelJSONRead": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "pyarrow.tests.test_json.BaseTestJSONRead",
    "pyarrow.tests.test_json.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_json.TestParallelJSONRead.read_json": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "pyarrow.json.ReadOptions",
    "pyarrow.json.read_json"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.TestSerialJSONRead": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "pyarrow.tests.test_json.BaseTestJSONRead",
    "pyarrow.tests.test_json.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_json.TestSerialJSONRead.read_json": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "pyarrow.json.ReadOptions",
    "pyarrow.json.read_json"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.generate_col_names": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyarrow.tests.test_json.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.make_random_json": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "int",
    "list",
    "numpy.random.RandomState",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_json.generate_col_names",
    "pyarrow.tests.test_json.itertools",
    "pyarrow.tests.test_json.json",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.read_json": {
  "data": {
   "shadows": "pyarrow.json.read_json"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pyarrow.tests.test_json.test_parse_options": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "cls",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.json.ParseOptions",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.test_read_options": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "cls",
    "pyarrow.json.ReadOptions"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_json.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.tests.test_jvm.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_jvm.ET": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm._jvm_field": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyarrow.tests.test_jvm.jpype"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm._jvm_schema": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pyarrow.tests.test_jvm._jvm_field",
    "pyarrow.tests.test_jvm.jpype",
    "pyarrow.tests.test_jvm.six",
    "schema_cls"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm._string_to_varchar_holder": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_jvm.jpype"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.jpype": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyarrow.tests.test_jvm.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.pa_jvm": {
  "data": {
   "shadows": "pyarrow.jvm"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.root_allocator": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyarrow.tests.test_jvm.jpype",
    "pyarrow.tests.test_jvm.os",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.tests.test_jvm.sys",
    "xml.etree.ElementTree.parse"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.test_jvm_array": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.jvm.array",
    "pyarrow.tests.test_jvm.jpype",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.tests.test_jvm.root_allocator",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_buffer": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pyarrow.jvm.jvm_buffer",
    "pyarrow.tests.test_jvm.root_allocator",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_record_batch": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "enumerate",
    "jvm_vsr",
    "len",
    "list",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.jvm.record_batch",
    "pyarrow.tests.test_jvm._jvm_field",
    "pyarrow.tests.test_jvm.jpype",
    "pyarrow.tests.test_jvm.json",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.tests.test_jvm.root_allocator",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_string_array": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.array",
    "pyarrow.jvm.array",
    "pyarrow.string",
    "pyarrow.tests.test_jvm._string_to_varchar_holder",
    "pyarrow.tests.test_jvm.jpype",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.tests.test_jvm.root_allocator"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_types": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.decimal128",
    "pyarrow.field",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.jvm.field",
    "pyarrow.jvm.schema",
    "pyarrow.null",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_jvm._jvm_field",
    "pyarrow.tests.test_jvm._jvm_schema",
    "pyarrow.tests.test_jvm.json",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_memory.allocate_bytes": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_memory.contextlib"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.check_allocated_bytes": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyarrow.tests.test_memory.allocate_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_memory.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_memory.test_default_allocated_bytes": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyarrow.default_memory_pool",
    "pyarrow.tests.test_memory.allocate_bytes",
    "pyarrow.tests.test_memory.check_allocated_bytes",
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.test_logging_memory_pool": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pyarrow.default_memory_pool",
    "pyarrow.logging_memory_pool",
    "pyarrow.tests.test_memory.check_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.test_proxy_memory_pool": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pyarrow.default_memory_pool",
    "pyarrow.proxy_memory_pool",
    "pyarrow.tests.test_memory.check_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_memory.test_set_memory_pool": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pyarrow.default_memory_pool",
    "pyarrow.proxy_memory_pool",
    "pyarrow.set_memory_pool",
    "pyarrow.tests.test_memory.allocate_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_misc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_misc.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_misc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_misc.test_cpu_count": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyarrow.cpu_count",
    "pyarrow.set_cpu_count"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_extension_type_constructor_errors": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "TypeError",
    "klass",
    "pyarrow.Array",
    "pyarrow.ArrayValue",
    "pyarrow.BinaryArray",
    "pyarrow.BinaryValue",
    "pyarrow.BooleanArray",
    "pyarrow.BooleanValue",
    "pyarrow.Buffer",
    "pyarrow.ChunkedArray",
    "pyarrow.Date32Array",
    "pyarrow.Date32Value",
    "pyarrow.Date64Array",
    "pyarrow.Date64Value",
    "pyarrow.Decimal128Array",
    "pyarrow.DecimalValue",
    "pyarrow.DictionaryArray",
    "pyarrow.DictionaryValue",
    "pyarrow.DoubleValue",
    "pyarrow.Field",
    "pyarrow.FixedSizeBinaryArray",
    "pyarrow.FixedSizeBinaryValue",
    "pyarrow.FloatValue",
    "pyarrow.FloatingPointArray",
    "pyarrow.HalfFloatValue",
    "pyarrow.Int16Array",
    "pyarrow.Int16Value",
    "pyarrow.Int32Array",
    "pyarrow.Int32Value",
    "pyarrow.Int64Array",
    "pyarrow.Int64Value",
    "pyarrow.Int8Array",
    "pyarrow.Int8Value",
    "pyarrow.IntegerArray",
    "pyarrow.ListArray",
    "pyarrow.ListValue",
    "pyarrow.LoggingMemoryPool",
    "pyarrow.MemoryPool",
    "pyarrow.NullArray",
    "pyarrow.NumericArray",
    "pyarrow.ProxyMemoryPool",
    "pyarrow.RecordBatch",
    "pyarrow.Schema",
    "pyarrow.StringArray",
    "pyarrow.StringValue",
    "pyarrow.StructArray",
    "pyarrow.StructValue",
    "pyarrow.Table",
    "pyarrow.Tensor",
    "pyarrow.Time32Array",
    "pyarrow.Time32Value",
    "pyarrow.Time64Array",
    "pyarrow.Time64Value",
    "pyarrow.TimestampArray",
    "pyarrow.TimestampValue",
    "pyarrow.UInt16Array",
    "pyarrow.UInt16Value",
    "pyarrow.UInt32Array",
    "pyarrow.UInt32Value",
    "pyarrow.UInt64Array",
    "pyarrow.UInt64Value",
    "pyarrow.UInt8Array",
    "pyarrow.UInt8Value",
    "pyarrow.UnionArray",
    "pyarrow.UnionValue",
    "pyarrow.ipc.Message",
    "pyarrow.ipc.MessageReader",
    "pyarrow.lib.DataType",
    "pyarrow.lib.Decimal128Type",
    "pyarrow.lib.DictionaryType",
    "pyarrow.lib.FixedSizeBinaryType",
    "pyarrow.lib.ListType",
    "pyarrow.lib.StructType",
    "pyarrow.lib.Time32Type",
    "pyarrow.lib.Time64Type",
    "pyarrow.lib.TimestampType",
    "pyarrow.lib.UnionType",
    "pyarrow.tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_get_include": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pyarrow.get_include",
    "pyarrow.tests.test_misc.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_get_library_dirs_win32": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "any",
    "pyarrow.get_library_dirs",
    "pyarrow.tests.test_misc.os",
    "pyarrow.tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.tests.test_orc.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_orc.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.check_example_file": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "pandas.DataFrame",
    "pyarrow.Table",
    "pyarrow.orc.ORCFile",
    "pyarrow.tests.test_orc.check_example_values",
    "pyarrow.tests.test_orc.fix_example_values",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.check_example_values": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.datadir": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pyarrow.tests.test_orc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.fix_example_values": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "enumerate",
    "issubclass",
    "len",
    "pandas.Series",
    "pandas.isnull",
    "pandas.to_datetime",
    "pyarrow.tests.test_orc.datetime",
    "pyarrow.tests.test_orc.decimal",
    "round",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.orc": {
  "data": {
   "shadows": "pyarrow.orc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_orc.pytestmark": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyarrow.tests.test_orc.test_example_using_json": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "pandas.read_json",
    "pyarrow.tests.test_orc.check_example_file",
    "pyarrow.tests.test_orc.datadir",
    "pyarrow.tests.test_orc.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_orc.test_orcfile_empty": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.orc.ORCFile",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_orc.datadir"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.os"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.tests.test_plasma.EXTERNAL_STORE": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyarrow.tests.test_plasma.SMALL_OBJECT_SIZE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore": {
  "data": {
   "lineno": 927,
   "symbols_in_volume": [
    "object",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore.setup_method": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.EXTERNAL_STORE",
    "pyarrow.tests.test_plasma.USE_VALGRIND"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore.teardown_method": {
  "data": {
   "lineno": 941,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.signal",
    "pyarrow.tests.test_plasma.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestEvictionToExternalStore.test_eviction": {
  "data": {
   "lineno": 953,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "object",
    "pyarrow.tests.test_plasma.USE_VALGRIND",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.setup_method": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.USE_VALGRIND"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.teardown_method": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.USE_VALGRIND",
    "pyarrow.tests.test_plasma.signal",
    "pyarrow.tests.test_plasma.sys",
    "pyarrow.tests.test_plasma.time"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_buffer_lifetime": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.MockOutputStream",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.RecordBatchStreamReader",
    "pyarrow.RecordBatchStreamWriter",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_client_death_during_get": {
  "data": {
   "lineno": 863,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.multiprocessing",
    "pyarrow.tests.test_plasma.random_object_id",
    "pyarrow.tests.test_plasma.time"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_client_death_during_get.client_blocked_in_get": {
  "data": {
   "lineno": 868,
   "symbols_in_volume": [
    "pyarrow.plasma.connect"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_client_getting_multiple_objects": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.tests.test_plasma.multiprocessing",
    "pyarrow.tests.test_plasma.random_object_id",
    "pyarrow.tests.test_plasma.time",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_client_getting_multiple_objects.client_get_multiple": {
  "data": {
   "lineno": 897,
   "symbols_in_volume": [
    "pyarrow.plasma.connect"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_connection_failure_raises_exception": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "IOError",
    "pyarrow.plasma.connect",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_contains": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_and_seal": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pyarrow.plasma.PlasmaObjectExists",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.pytest",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_existing": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "pyarrow.lib.ArrowException",
    "pyarrow.tests.test_plasma.generate_metadata",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_with_metadata": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "len",
    "numpy.frombuffer",
    "pyarrow.tests.test_plasma.generate_metadata",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_evict": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_get": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.tests.test_plasma.create_object_with_id",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_hash": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "pyarrow.lib.ArrowException",
    "pyarrow.tests.test_plasma.generate_metadata",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_illegal_functionality": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "Exception",
    "illegal_assignment",
    "pyarrow.tests.test_plasma.pytest",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_illegal_functionality.illegal_assignment": {
  "data": {
   "lineno": 680,
   "symbols_in_volume": [
    "chr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_many_hashes": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "len",
    "numpy.frombuffer",
    "pyarrow.tests.test_plasma.random_object_id",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_pickle_object_ids": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.pickle",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "pyarrow.plasma.ObjectNotAvailable",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_raw_buffer": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "bytes",
    "deserialize_or_output",
    "isinstance",
    "pyarrow.plasma.ObjectNotAvailable",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_raw_buffer.deserialize_or_output": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "pyarrow.deserialize",
    "pyarrow.plasma.ObjectNotAvailable"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": [
    "CustomType",
    "pyarrow.ArrowSerializationError",
    "pyarrow.SerializationContext",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context.CustomType": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context.CustomType.__init__": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_arrow_objects": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_equal",
    "pyarrow.BufferReader",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.get_tensor_size",
    "pyarrow.read_tensor",
    "pyarrow.tests.test_plasma.random_object_id",
    "pyarrow.write_tensor"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_full": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "assert_create_raises_plasma_full",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.SMALL_OBJECT_SIZE",
    "pyarrow.tests.test_plasma.create_object"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_full.assert_create_raises_plasma_full": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pyarrow.lib.ArrowException",
    "pyarrow.tests.test_plasma.create_object"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_pandas_dataframe": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "numpy.random.bytes",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.BufferReader",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.MockOutputStream",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.RecordBatchStreamReader",
    "pyarrow.RecordBatchStreamWriter",
    "pyarrow.plasma.ObjectID",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe": {
  "data": {
   "lineno": 728,
   "symbols_in_volume": [
    "bytearray",
    "numpy.random.bytes",
    "numpy.random.randint",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe_deletions": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "bytearray",
    "numpy.random.bytes",
    "numpy.random.randint",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe_socket": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "bytearray",
    "numpy.random.bytes",
    "numpy.random.randint",
    "pyarrow.tests.test_plasma.random_object_id",
    "pyarrow.tests.test_plasma.struct",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_use_full_memory": {
  "data": {
   "lineno": 843,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pyarrow.plasma.PlasmaStoreFull",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.SMALL_OBJECT_SIZE",
    "pyarrow.tests.test_plasma.create_object",
    "pyarrow.tests.test_plasma.pytest",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.USE_VALGRIND": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyarrow.tests.test_plasma.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.assert_get_object_equal": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "len",
    "pyarrow.plasma.buffers_equal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.create_object": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.create_object_with_id",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.create_object_with_id": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.generate_metadata",
    "pyarrow.tests.test_plasma.write_to_data_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.generate_metadata": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "bytearray",
    "pyarrow.tests.test_plasma.random",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.multiprocessing": {
  "data": {
   "shadows": "multiprocessing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.plasma": {
  "data": {
   "shadows": "pyarrow.plasma"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.random_name": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.random",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.random_object_id": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.random.bytes",
    "pyarrow.plasma.ObjectID"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.test_object_id_equality_operators": {
  "data": {
   "lineno": 992,
   "symbols_in_volume": [
    "pyarrow.plasma.ObjectID",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_object_id_randomness": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.pytest",
    "pyarrow.tests.test_plasma.subprocess"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_object_id_size": {
  "data": {
   "lineno": 984,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.plasma.ObjectID",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_plasma_client_sharing": {
  "data": {
   "lineno": 1021,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_plasma_list": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.create_object",
    "pyarrow.tests.test_plasma.pytest",
    "pyarrow.tests.test_plasma.time"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_store_capacity": {
  "data": {
   "lineno": 1094,
   "symbols_in_volume": [
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_use_huge_pages": {
  "data": {
   "lineno": 1005,
   "symbols_in_volume": [
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.create_object",
    "pyarrow.tests.test_plasma.os",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.write_to_data_buffer": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "pyarrow.tests.test_plasma.random",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_plasma_tf_op.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma_tf_op.plasma": {
  "data": {
   "shadows": "pyarrow.plasma"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma_tf_op.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "FromPlasma",
    "ToPlasma",
    "numpy.array_equal",
    "numpy.ones",
    "numpy.random.bytes",
    "numpy.random.randn",
    "numpy.split"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype.FromPlasma": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype.ToPlasma": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.test_plasma_tf_op": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "pyarrow.plasma",
    "pyarrow.plasma.build_plasma_tensorflow_op",
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.plasma.tf_plasma_op",
    "pyarrow.tests.test_plasma_tf_op.pytest",
    "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype",
    "tensorflow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_scalars.TestScalars": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyarrow.compat.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_array_to_set": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.array",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bool": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.BooleanValue",
    "pyarrow.NA",
    "pyarrow.array",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bytes": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "check_value",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.compat.u"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bytes.check_value": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.BinaryValue",
    "pyarrow.Buffer",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bytes_hash": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "hash",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_date": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.tests.test_scalars.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_dictionary": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": [
    "enumerate",
    "pandas.Categorical",
    "pandas.Series",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.tests.test_scalars.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_double": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.DoubleValue",
    "pyarrow.NA",
    "pyarrow.array",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_fixed_size_bytes": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "pyarrow.FixedSizeBinaryValue",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_float_hash": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "hash",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_half_float": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "isinstance",
    "numpy.float16",
    "pyarrow.HalfFloatValue",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.float16",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_int64": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Int64Value",
    "pyarrow.NA",
    "pyarrow.array",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_int_hash": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "hash",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_large_bytes": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "check_value",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.compat.u",
    "pyarrow.large_binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_large_bytes.check_value": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Buffer",
    "pyarrow.LargeBinaryValue",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_large_list": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "IndexError",
    "isinstance",
    "len",
    "pyarrow.LargeListValue",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.int16",
    "pyarrow.large_list",
    "pyarrow.tests.test_scalars.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_large_string_unicode": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.LargeStringValue",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.compat.unicode_type",
    "pyarrow.large_string",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_list": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "IndexError",
    "isinstance",
    "len",
    "pyarrow.ListValue",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.tests.test_scalars.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_null_equality": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyarrow.NA"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_null_singleton": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.NAType",
    "pyarrow.tests.test_scalars.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_nulls": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "pyarrow.NA",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_string_hash": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "hash",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_string_unicode": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.NA",
    "pyarrow.StringValue",
    "pyarrow.array",
    "pyarrow.compat.unicode_type",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_struct_value_subscripting": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.struct",
    "pyarrow.tests.test_scalars.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_timestamp": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "enumerate",
    "pandas.Timestamp",
    "pandas.date_range",
    "pyarrow.Array.from_pandas",
    "pyarrow.tests.test_scalars.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_timestamp_nanos_nopandas": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.tests.test_scalars.datetime",
    "pyarrow.tests.test_scalars.pytest",
    "pyarrow.tests.test_scalars.pytz",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_timestamp_no_overflow": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_scalars.datetime",
    "pyarrow.tests.test_scalars.pytz",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.unicode_type": {
  "data": {
   "shadows": "pyarrow.compat.unicode_type"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.unittest": {
  "data": {
   "shadows": "pyarrow.compat.unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_schema.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.test_empty_table": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Table",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_field_flatten": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_from_numpy_dtype": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "bool",
    "numpy.dtype",
    "numpy.unicode",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.from_numpy_dtype",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_add_remove_metadata": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_constructor_errors": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Schema",
    "pyarrow.tests.test_schema.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_duplicate_fields": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "FutureWarning",
    "UserWarning",
    "len",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equality_operators": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals_invalid_type": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.tests.test_schema.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals_propagates_check_metadata": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_from_mapping": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "TypeError",
    "collections.OrderedDict",
    "len",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_from_pandas": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "list",
    "numpy.array",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pyarrow.Schema.from_pandas",
    "pyarrow.Table.from_pandas",
    "pyarrow.tests.test_schema.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_from_tuples": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "TypeError",
    "len",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_get_fields": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_negative_indexing": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": [
    "IndexError",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_repr_with_dictionaries": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "pyarrow.dictionary",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.string",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_time_types": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.test_schema.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_comparisons": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pyarrow.int32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_for_alias": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.string",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.type_for_alias",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_integers": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "factory",
    "getattr",
    "pyarrow",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_list": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.string",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_schema_pickling": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "pyarrow.Field",
    "pyarrow.binary",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.decimal128",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int8",
    "pyarrow.lib.UnionMode_DENSE",
    "pyarrow.lib.UnionMode_SPARSE",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_schema.pickle",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.union"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_string": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pyarrow.string",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_timestamp_with_tz": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_to_pandas_dtype": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "long",
    "numpy.array",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.normal",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "numpy.zeros",
    "object",
    "pyarrow.tests.test_serialization.Bar",
    "pyarrow.tests.test_serialization.Baz",
    "pyarrow.tests.test_serialization.CustomError",
    "pyarrow.tests.test_serialization.Foo",
    "pyarrow.tests.test_serialization.NamedTupleExample",
    "pyarrow.tests.test_serialization.PRIMITIVE_OBJECTS",
    "pyarrow.tests.test_serialization.Point",
    "pyarrow.tests.test_serialization.Qux",
    "pyarrow.tests.test_serialization.SubQux",
    "pyarrow.tests.test_serialization.SubQuxPickle",
    "pyarrow.tests.test_serialization.collections",
    "pyarrow.tests.test_serialization.make_serialization_context",
    "pyarrow.tests.test_serialization.string",
    "pyarrow.tests.test_serialization.sys",
    "range",
    "set"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_serialization.Bar": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Bar.__init__": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Baz": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Baz.__init__": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Bar",
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Baz.method": {
  "data": {
   "lineno": 183
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.COMPLEX_OBJECTS": {
  "data": {
   "lineno": 151
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.CUSTOM_OBJECTS": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.CustomError": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Foo": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Foo.__eq__": {
  "data": {
   "lineno": 168
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Foo.__hash__": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Foo.__init__": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.NamedTupleExample": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.PRIMITIVE_OBJECTS": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.Point": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.Queue": {
  "data": {
   "shadows": "multiprocessing.Queue"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.Qux": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Qux.__init__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Serializable": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SerializableClass": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Serializable"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SerializableClass.__init__": {
  "data": {
   "lineno": 689
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.SubQux": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Qux"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SubQux.__init__": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Qux"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.SubQuxPickle": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Qux"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SubQuxPickle.__init__": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Qux"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization._check_component_roundtrip": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "pyarrow.SerializedPyObject.from_components",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.global_serialization_context"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.assert_equal": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "numpy.__name__",
    "numpy.testing.assert_equal",
    "print",
    "pyarrow.Array",
    "pyarrow.RecordBatch",
    "pyarrow.Table",
    "pyarrow.Tensor",
    "pyarrow.lib.is_named_tuple",
    "pyarrow.tests.test_serialization.torch",
    "range",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.deserialize_serializable": {
  "data": {
   "lineno": 682
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.global_serialization_context": {
  "data": {
   "lineno": 236
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.large_buffer": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pyarrow.allocate_buffer",
    "pyarrow.tests.test_serialization.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.large_memory_map": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.random.randint",
    "open"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.make_serialization_context": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.default_serialization_context",
    "pyarrow.tests.test_serialization.Bar",
    "pyarrow.tests.test_serialization.Baz",
    "pyarrow.tests.test_serialization.CustomError",
    "pyarrow.tests.test_serialization.Foo",
    "pyarrow.tests.test_serialization.NamedTupleExample",
    "pyarrow.tests.test_serialization.Point",
    "pyarrow.tests.test_serialization.Qux",
    "pyarrow.tests.test_serialization.SubQux",
    "pyarrow.tests.test_serialization.SubQuxPickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.serialization_roundtrip": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.deserialize_from",
    "pyarrow.serialize_to",
    "pyarrow.tests.test_serialization._check_component_roundtrip",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.global_serialization_context"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.serialize_serializable": {
  "data": {
   "lineno": 678,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.test_arrow_limits": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyarrow.memory_map",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_arrow_limits.huge_memory_map": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.large_memory_map"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "BufferClass",
    "pyarrow.default_serialization_context",
    "pyarrow.deserialize",
    "pyarrow.serialize"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.BufferClass": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.deserialize_buffer_class": {
  "data": {
   "lineno": 579
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.serialize_buffer_class": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "pyarrow.SerializationContext",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone.Foo": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_clone.custom_deserializer": {
  "data": {
   "lineno": 287
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone.custom_serializer": {
  "data": {
   "lineno": 284
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_complex_serialization": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_custom_serialization": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.CUSTOM_OBJECTS",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_datetime_serialization": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.datetime",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_default_dict_serialization": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.collections",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_buffer_in_different_process": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": [
    "pyarrow.py_buffer",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.os",
    "pyarrow.tests.test_serialization.subprocess",
    "pyarrow.tests.test_serialization.sys",
    "pyarrow.tests.test_serialization.tempfile",
    "pyarrow.tests.util.get_modified_env_with_pythonpath"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_components_in_different_process": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "print",
    "pyarrow.array",
    "pyarrow.int8",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.pickle",
    "pyarrow.tests.test_serialization.subprocess",
    "pyarrow.tests.test_serialization.sys",
    "pyarrow.tests.util.get_modified_env_with_pythonpath"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_in_different_process": {
  "data": {
   "lineno": 779,
   "symbols_in_volume": [
    "multiprocessing.Process",
    "multiprocessing.Queue",
    "pyarrow.SerializationContext",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.os",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.re",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_in_different_process.deserialize_regex": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "pyarrow.deserialize"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses": {
  "data": {
   "lineno": 653,
   "symbols_in_volume": [
    "SubFoo",
    "pyarrow.SerializationContext",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.Foo",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses.SubFoo": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses.SubFoo.__init__": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_integer_limits": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "dt",
    "numpy.iinfo",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pyarrow.ArrowInvalid",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_base_object": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "open",
    "pyarrow.OSFile",
    "pyarrow.read_serialized",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_immutable": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pyarrow.BufferReader",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.deserialize_from",
    "pyarrow.serialize_to",
    "pyarrow.tests.test_serialization.global_serialization_context",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_matrix_serialization": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.dtype",
    "numpy.matrix",
    "numpy.random.randint",
    "open",
    "pyarrow.OSFile",
    "pyarrow.read_serialized",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.os",
    "pyarrow.tests.test_serialization.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_matrix_serialization.CustomType": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_numpy_matrix_serialization.CustomType.__init__": {
  "data": {
   "lineno": 527
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_serialization": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.random.randint",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "CustomNDArray",
    "numpy.alltrue",
    "numpy.ndarray",
    "numpy.zeros",
    "pyarrow.default_serialization_context",
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.CustomNDArray": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.CustomNDArray.__new__": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.deserializer": {
  "data": {
   "lineno": 506
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.serializer": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_path_objects": {
  "data": {
   "lineno": 858,
   "symbols_in_volume": [
    "pyarrow.deserialize_from",
    "pyarrow.serialize_to",
    "pyarrow.tests.test_serialization.pathlib",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.PRIMITIVE_OBJECTS",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization_broken": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization_notbroken": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_pyarrow_objects_serialization": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "numpy.random.rand",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.Table.from_arrays",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.array",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "TempClass",
    "TypeError",
    "pyarrow.DeserializationCallbackError",
    "pyarrow.SerializationCallbackError",
    "pyarrow.SerializationContext",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error.TempClass": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error.TempClass2": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy": {
  "data": {
   "lineno": 476,
   "symbols_in_volume": [
    "DummyClass",
    "pyarrow.default_serialization_context",
    "pyarrow.serialize"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.DummyClass": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.deserialize_dummy_class": {
  "data": {
   "lineno": 485
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.serialize_dummy_class": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_determinism": {
  "data": {
   "lineno": 892,
   "symbols_in_volume": [
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_read_concatenated_records": {
  "data": {
   "lineno": 767,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.read_serialized",
    "pyarrow.serialize_to"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_recursive_objects": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "ClassA",
    "Exception",
    "numpy.array",
    "object",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_recursive_objects.ClassA": {
  "data": {
   "lineno": 900,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialize_subclasses": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "pyarrow.default_serialization_context",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.Serializable",
    "pyarrow.tests.test_serialization.SerializableClass",
    "pyarrow.tests.test_serialization.deserialize_serializable",
    "pyarrow.tests.test_serialization.serialize_serializable",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_to_buffer": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS",
    "pyarrow.tests.test_serialization.assert_equal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_to_components_invalid_cases": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.deserialize_components",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_serialization.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle": {
  "data": {
   "lineno": 819,
   "symbols_in_volume": [
    "pyarrow.SerializationContext",
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.Foo": {
  "data": {
   "lineno": 821,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.dumps1": {
  "data": {
   "lineno": 831
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.dumps2": {
  "data": {
   "lineno": 845
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.loads1": {
  "data": {
   "lineno": 834
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.loads2": {
  "data": {
   "lineno": 848
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_tensor_alignment": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "len",
    "numpy.random.normal",
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_torch_cuda": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.torch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_torch_serialization": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pyarrow.default_serialization_context",
    "pyarrow.register_torch_serialization_handlers",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip",
    "pyarrow.tests.test_serialization.torch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_util": {
  "data": {
   "shadows": "pyarrow.tests.util"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.torch": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyarrow.tests.test_sparse_tensor": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_sparse_tensor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_sparse_tensor.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_sparse_tensor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_sparse_tensor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_sparse_tensor.tensor_type_pairs": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_attrs": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.SparseTensorCOO",
    "pyarrow.SparseTensorCSR",
    "pyarrow.tests.test_sparse_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_coo_base_object": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "pyarrow.SparseTensorCOO.from_dense_numpy",
    "pyarrow.tests.test_sparse_tensor.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_coo_from_dense": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseTensorCOO.from_dense_numpy",
    "pyarrow.SparseTensorCOO.from_tensor",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_coo_numpy_roundtrip": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseTensorCOO.from_numpy",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_csr_base_object": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "pyarrow.SparseTensorCSR.from_dense_numpy",
    "pyarrow.tests.test_sparse_tensor.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_csr_from_dense": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseTensorCSR.from_dense_numpy",
    "pyarrow.SparseTensorCSR.from_tensor",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_csr_numpy_roundtrip": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.array_equal",
    "numpy.dtype",
    "pyarrow.SparseTensorCSR.from_numpy",
    "pyarrow.tests.test_sparse_tensor.pytest",
    "pyarrow.tests.test_sparse_tensor.tensor_type_pairs",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_equals": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "eq",
    "ne",
    "numpy.ascontiguousarray",
    "numpy.random.randn",
    "pyarrow.SparseTensorCOO",
    "pyarrow.SparseTensorCSR",
    "pyarrow.tests.test_sparse_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_equals.eq": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "pyarrow.tests.test_sparse_tensor.test_sparse_tensor_equals.ne": {
  "data": {
   "lineno": 111
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_strategies.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.test_strategies.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_strategies.past": {
  "data": {
   "shadows": "pyarrow.tests.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_strategies.test_arrays": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "hypothesis.given",
    "isinstance",
    "pyarrow.lib.Array",
    "pyarrow.tests.strategies.all_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_chunked_arrays": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "hypothesis.given",
    "isinstance",
    "pyarrow.lib.ChunkedArray",
    "pyarrow.tests.strategies.all_chunked_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_fields": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "hypothesis.given",
    "isinstance",
    "pyarrow.lib.Field",
    "pyarrow.tests.strategies.all_fields"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_record_batches": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "hypothesis.given",
    "isinstance",
    "pyarrow.lib.RecordBatch",
    "pyarrow.tests.strategies.all_record_batches"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_schemas": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "hypothesis.given",
    "isinstance",
    "pyarrow.lib.Schema",
    "pyarrow.tests.strategies.all_schemas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_tables": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "hypothesis.given",
    "isinstance",
    "pyarrow.lib.Table",
    "pyarrow.tests.strategies.all_tables"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_strategies.test_types": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "hypothesis.given",
    "isinstance",
    "pyarrow.lib.DataType",
    "pyarrow.tests.strategies.all_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_table.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table._table_like_slice_tests": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "IndexError",
    "factory",
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.compat": {
  "data": {
   "shadows": "pyarrow.compat"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.test_chunked_array_asarray": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.dtype",
    "numpy.isnan",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_basics": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "isinstance",
    "len",
    "list",
    "pyarrow.chunked_array",
    "pyarrow.lib.Int64Array",
    "pyarrow.string",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "eq",
    "ne",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.int32",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals.eq": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals.ne": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_flatten": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_getitem": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "IndexError",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_iter": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.compat.Iterable",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_mismatch_types": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_pickle": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.chunked_array",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_table.pickle",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_str": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_to_pandas": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "isinstance",
    "pandas.Series",
    "pyarrow.ChunkedArray",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "len",
    "list",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.concat_tables",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables_with_different_schema_metadata": {
  "data": {
   "lineno": 785,
   "symbols_in_volume": [
    "list",
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.concat_tables",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_from_arrays_schema": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "ValueError",
    "klass",
    "list",
    "pyarrow.Table.from_arrays",
    "pyarrow.Table.from_pydict",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.float32",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.timestamp",
    "pyarrow.types.is_float32",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_invalid_table_construct": {
  "data": {
   "lineno": 911,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.uint8",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.lib.ArrowInvalid",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_basics": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "IndexError",
    "collections.OrderedDict",
    "dict",
    "len",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.record_batch",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.tests.test_table.sys",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_column_sets_private_name": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.record_batch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_empty_metadata": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.record_batch",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_invalid_names": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.record_batch",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_validate_lengths": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.record_batch",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_validate_schema": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.record_batch",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_no_fields": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "len",
    "pyarrow.record_batch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_pickle": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int8",
    "pyarrow.record_batch",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pickle",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_slice_getitem": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.tests.test_table._table_like_slice_tests"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_schema_equals": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.ArrowInvalid",
    "pyarrow.Table.from_batches",
    "pyarrow.array",
    "pyarrow.record_batch",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_add_column": {
  "data": {
   "lineno": 621,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_basics": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "IndexError",
    "collections.OrderedDict",
    "dict",
    "len",
    "pyarrow.array",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.tests.test_table.sys",
    "range",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_cast_to_incompatible_schema": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_column_sets_private_name": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_combine_chunks": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "pyarrow.Table.from_batches",
    "pyarrow.array",
    "pyarrow.record_batch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_drop": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "KeyError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_equals": {
  "data": {
   "lineno": 422,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_factory_function": {
  "data": {
   "lineno": 1093,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.Table.from_pydict",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_factory_function_args": {
  "data": {
   "lineno": 1123,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_factory_function_args_pandas": {
  "data": {
   "lineno": 1143,
   "symbols_in_volume": [
    "ValueError",
    "pandas.DataFrame",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.table",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_flatten": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_arrays_invalid_names": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_arrays_preserves_column_metadata": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "dict",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_batches_and_schema": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.Table.from_batches",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.record_batch",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_lists": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "list",
    "pyarrow.Table.from_arrays",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.table",
    "pyarrow.uint16",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pandas_schema": {
  "data": {
   "lineno": 1060,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "TypeError",
    "collections.OrderedDict",
    "pandas.DataFrame",
    "pyarrow.Table.from_pandas",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.timestamp",
    "pyarrow.types.is_float32",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pydict": {
  "data": {
   "lineno": 960,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "collections.OrderedDict",
    "pyarrow.Table.from_pydict",
    "pyarrow.float64",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pydict_arrow_arrays": {
  "data": {
   "lineno": 1002,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "collections.OrderedDict",
    "klass",
    "pyarrow.Table.from_pydict",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.timestamp",
    "pyarrow.types.is_float32",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_pydict_schema": {
  "data": {
   "lineno": 1036,
   "symbols_in_volume": [
    "KeyError",
    "collections.OrderedDict",
    "klass",
    "list",
    "pyarrow.Table.from_pydict",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_function_unicode_schema": {
  "data": {
   "lineno": 1160,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.table"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_get_field": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_negative_indexing": {
  "data": {
   "lineno": 808,
   "symbols_in_volume": [
    "IndexError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_pickle": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.chunked_array",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_table.pickle",
    "pyarrow.uint32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_remove_column": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_remove_column_empty": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "len",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_rename_columns": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_safe_casting": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_select_column": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_set_column": {
  "data": {
   "lineno": 644,
   "symbols_in_volume": [
    "list",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_slice_getitem": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "pyarrow.table",
    "pyarrow.tests.test_table._table_like_slice_tests"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_to_batches": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "iter",
    "len",
    "list",
    "map",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_batches",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_unsafe_casting": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_table.pytest",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_tensor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.tensor_type_pairs": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyarrow.tests.test_tensor.test_read_tensor": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_equal",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.create_memory_map",
    "pyarrow.get_tensor_size",
    "pyarrow.memory_map",
    "pyarrow.read_tensor",
    "pyarrow.tests.test_tensor.os",
    "pyarrow.write_tensor",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_attrs": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_base_object": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_tensor.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "eq",
    "ne",
    "numpy.ascontiguousarray",
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals.eq": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals.ne": {
  "data": {
   "lineno": 146
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_hashing": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "numpy.arange",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_read_from_compressed": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.input_stream",
    "pyarrow.output_stream",
    "pyarrow.read_tensor",
    "pyarrow.write_tensor"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_roundtrip": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.create_memory_map",
    "pyarrow.read_tensor",
    "pyarrow.tests.test_tensor.os",
    "pyarrow.write_tensor",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_strided": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.create_memory_map",
    "pyarrow.read_tensor",
    "pyarrow.tests.test_tensor.os",
    "pyarrow.write_tensor",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_memoryview": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "memoryview",
    "numpy.arange",
    "numpy.float16",
    "numpy.float64",
    "numpy.frombuffer",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint64",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_tensor.pytest",
    "pyarrow.tests.test_tensor.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_numpy_roundtrip": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_tensor.pytest",
    "pyarrow.tests.test_tensor.tensor_type_pairs",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_size": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.get_tensor_size"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_types.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.get_many_types": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.decimal128",
    "pyarrow.dictionary",
    "pyarrow.field",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.large_binary",
    "pyarrow.large_list",
    "pyarrow.large_string",
    "pyarrow.lib.UnionMode_DENSE",
    "pyarrow.lib.UnionMode_SPARSE",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.union"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.h": {
  "data": {
   "shadows": "hypothesis"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.past": {
  "data": {
   "shadows": "pyarrow.tests.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.st": {
  "data": {
   "shadows": "hypothesis.strategies"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.test_bit_width": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.decimal128",
    "pyarrow.float16",
    "pyarrow.int16",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.uint32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_decimal_overflow": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.decimal128",
    "pyarrow.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_decimal_properties": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "pyarrow.decimal128"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_dictionary_ordered_equals": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "pyarrow.dictionary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_dictionary_type": {
  "data": {
   "lineno": 343,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.dictionary",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.string",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.uint32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_exact_primitive_types": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "check_func",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.types.is_date32",
    "pyarrow.types.is_date64",
    "pyarrow.types.is_float16",
    "pyarrow.types.is_float32",
    "pyarrow.types.is_float64",
    "pyarrow.types.is_int16",
    "pyarrow.types.is_int32",
    "pyarrow.types.is_int64",
    "pyarrow.types.is_int8",
    "pyarrow.types.is_time32",
    "pyarrow.types.is_time64",
    "pyarrow.types.is_uint16",
    "pyarrow.types.is_uint32",
    "pyarrow.types.is_uint64",
    "pyarrow.types.is_uint8",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_add_remove_metadata": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.tests.test_types.collections",
    "pyarrow.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_basic": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.field",
    "pyarrow.string",
    "pyarrow.tests.test_types.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_equality_operators": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_equals": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_metadata": {
  "data": {
   "lineno": 535,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fields_hashable": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fixed_size_binary_byte_width": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_hashing": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "all",
    "enumerate",
    "hash",
    "hypothesis.assume",
    "hypothesis.given",
    "hypothesis.strategies.lists",
    "len",
    "pyarrow.tests.strategies.all_fields",
    "pyarrow.tests.strategies.all_schemas",
    "pyarrow.tests.strategies.all_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_binary_string": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.large_binary",
    "pyarrow.large_string",
    "pyarrow.string",
    "pyarrow.types.is_binary",
    "pyarrow.types.is_fixed_size_binary",
    "pyarrow.types.is_large_binary",
    "pyarrow.types.is_large_string",
    "pyarrow.types.is_string",
    "pyarrow.types.is_unicode"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_boolean": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pyarrow.bool_",
    "pyarrow.int8",
    "pyarrow.types.is_boolean"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_boolean_value": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": [
    "numpy.bool_",
    "pyarrow.types.is_boolean_value"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_decimal": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pyarrow.decimal128",
    "pyarrow.int32",
    "pyarrow.types.is_decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_dictionary": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "pyarrow.dictionary",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.types.is_dictionary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_float_value": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "numpy.float64",
    "pyarrow.types.is_float_value"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_floating": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.types.is_floating"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_integer": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.types.is_integer",
    "pyarrow.types.is_signed_integer",
    "pyarrow.types.is_unsigned_integer",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_integer_value": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": [
    "numpy.int64",
    "pyarrow.types.is_integer_value"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_list": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.types.is_large_list",
    "pyarrow.types.is_list"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_nested_or_struct": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.large_list",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.types.is_nested",
    "pyarrow.types.is_struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_null": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.types.is_null"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_primitive": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.types.is_primitive"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_temporal_date_time_timestamp": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.int32",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.types.is_date",
    "pyarrow.types.is_temporal",
    "pyarrow.types.is_time",
    "pyarrow.types.is_timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_union": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.lib.UnionMode_DENSE",
    "pyarrow.lib.UnionMode_SPARSE",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.types.is_union",
    "pyarrow.union"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_large_list_type": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pyarrow.LargeListType",
    "pyarrow.large_list",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.utf8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_list_type": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pyarrow.ListType",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_types.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_pickling": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "hypothesis.example",
    "hypothesis.given",
    "pyarrow.field",
    "pyarrow.null",
    "pyarrow.tests.strategies.all_fields",
    "pyarrow.tests.strategies.all_schemas",
    "pyarrow.tests.strategies.all_types",
    "pyarrow.tests.test_types.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_struct_type": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "TypeError",
    "UserWarning",
    "collections.OrderedDict",
    "len",
    "list",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.struct",
    "pyarrow.tests.test_types.pytest",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_time32_units": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.time32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_time64_units": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.time64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_timestamp": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_type_equality_operators": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.tests.test_types.get_many_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_type_id": {
  "data": {
   "lineno": 431,
   "symbols_in_volume": [
    "int",
    "isinstance",
    "pyarrow.tests.test_types.get_many_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_types_hashable": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": [
    "enumerate",
    "hash",
    "len",
    "pyarrow.tests.test_types.get_many_types"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_types_picklable": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": [
    "pyarrow.tests.test_types.get_many_types",
    "pyarrow.tests.test_types.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_union_type": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "ValueError",
    "check_fields",
    "pyarrow.binary",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.lib.UnionMode_DENSE",
    "pyarrow.lib.UnionMode_SPARSE",
    "pyarrow.list_",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.union"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_union_type.check_fields": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.types": {
  "data": {
   "shadows": "pyarrow.types"
  },
  "type": "import"
 },
 "pyarrow.tests.util": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.util.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pyarrow.tests.util.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.util.get_modified_env_with_pythonpath": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "pyarrow.__file__",
    "pyarrow.tests.util.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.util.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.util.randdecimal": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.util.decimal",
    "pyarrow.tests.util.random",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyarrow.tests.util.random_ascii": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "bytes",
    "numpy.random.randint"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.random_seed": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "pyarrow.tests.util.contextlib",
    "pyarrow.tests.util.random"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.randsign": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pyarrow.tests.util.random"
   ]
  },
  "type": "function"
 },
 "pyarrow.time32": {
  "data": {
   "shadows": "pyarrow.lib.time32"
  },
  "type": "import"
 },
 "pyarrow.time64": {
  "data": {
   "shadows": "pyarrow.lib.time64"
  },
  "type": "import"
 },
 "pyarrow.timestamp": {
  "data": {
   "shadows": "pyarrow.lib.timestamp"
  },
  "type": "import"
 },
 "pyarrow.total_allocated_bytes": {
  "data": {
   "shadows": "pyarrow.lib.total_allocated_bytes"
  },
  "type": "import"
 },
 "pyarrow.type_for_alias": {
  "data": {
   "shadows": "pyarrow.lib.type_for_alias"
  },
  "type": "import"
 },
 "pyarrow.types": {
  "data": {
   "shadows": "pyarrow.types"
  },
  "type": "import"
 },
 "pyarrow.types._DATE_TYPES": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyarrow.types._FLOATING_TYPES": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyarrow.types._INTEGER_TYPES": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyarrow.types._NESTED_TYPES": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "pyarrow.types._SIGNED_INTEGER_TYPES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyarrow.types._TEMPORAL_TYPES": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "pyarrow.types._TIME_TYPES": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.types._UNSIGNED_INTEGER_TYPES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyarrow.types.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.types.is_binary": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "pyarrow.lib.Type_BINARY"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_boolean": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyarrow.lib.Type_BOOL"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_boolean_value": {
  "data": {
   "shadows": "pyarrow.lib.is_boolean_value"
  },
  "type": "import"
 },
 "pyarrow.types.is_date": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "pyarrow.types._DATE_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_date32": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "pyarrow.lib.Type_DATE32"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_date64": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "pyarrow.lib.Type_DATE64"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_decimal": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "pyarrow.lib.Type_DECIMAL"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_dictionary": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "pyarrow.lib.Type_DICTIONARY"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_fixed_size_binary": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "pyarrow.lib.Type_FIXED_SIZE_BINARY"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_float16": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pyarrow.lib.Type_HALF_FLOAT"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_float32": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pyarrow.lib.Type_FLOAT"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_float64": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pyarrow.lib.Type_DOUBLE"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_float_value": {
  "data": {
   "shadows": "pyarrow.lib.is_float_value"
  },
  "type": "import"
 },
 "pyarrow.types.is_floating": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "pyarrow.types._FLOATING_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_int16": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyarrow.lib.Type_INT16"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_int32": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyarrow.lib.Type_INT32"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_int64": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pyarrow.lib.Type_INT64"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_int8": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyarrow.lib.Type_INT8"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_integer": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyarrow.types._INTEGER_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_integer_value": {
  "data": {
   "shadows": "pyarrow.lib.is_integer_value"
  },
  "type": "import"
 },
 "pyarrow.types.is_large_binary": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pyarrow.lib.Type_LARGE_BINARY"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_large_list": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pyarrow.lib.Type_LARGE_LIST"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_large_string": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "pyarrow.lib.Type_LARGE_STRING"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_large_unicode": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "pyarrow.types.is_large_string"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_list": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pyarrow.lib.Type_LIST"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_map": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "pyarrow.lib.Type_MAP"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_nested": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "pyarrow.types._NESTED_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_null": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyarrow.lib.Type_NA"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_primitive": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "pyarrow.lib._is_primitive"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_signed_integer": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pyarrow.types._SIGNED_INTEGER_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_string": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "pyarrow.lib.Type_STRING"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_struct": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pyarrow.lib.Type_STRUCT"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_temporal": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "pyarrow.types._TEMPORAL_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_time": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pyarrow.types._TIME_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_time32": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pyarrow.lib.Type_TIME32"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_time64": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "pyarrow.lib.Type_TIME64"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_timestamp": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pyarrow.lib.Type_TIMESTAMP"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_uint16": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pyarrow.lib.Type_UINT16"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_uint32": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pyarrow.lib.Type_UINT32"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_uint64": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyarrow.lib.Type_UINT64"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_uint8": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pyarrow.lib.Type_UINT8"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_unicode": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "pyarrow.types.is_string"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_union": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pyarrow.lib.Type_UNION"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_unsigned_integer": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyarrow.types._UNSIGNED_INTEGER_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.lib": {
  "data": {
   "shadows": "pyarrow.lib"
  },
  "type": "import"
 },
 "pyarrow.uint16": {
  "data": {
   "shadows": "pyarrow.lib.uint16"
  },
  "type": "import"
 },
 "pyarrow.uint32": {
  "data": {
   "shadows": "pyarrow.lib.uint32"
  },
  "type": "import"
 },
 "pyarrow.uint64": {
  "data": {
   "shadows": "pyarrow.lib.uint64"
  },
  "type": "import"
 },
 "pyarrow.uint8": {
  "data": {
   "shadows": "pyarrow.lib.uint8"
  },
  "type": "import"
 },
 "pyarrow.union": {
  "data": {
   "shadows": "pyarrow.lib.union"
  },
  "type": "import"
 },
 "pyarrow.unregister_extension_type": {
  "data": {
   "shadows": "pyarrow.lib.unregister_extension_type"
  },
  "type": "import"
 },
 "pyarrow.utf8": {
  "data": {
   "shadows": "pyarrow.lib.utf8"
  },
  "type": "import"
 },
 "pyarrow.util": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pyarrow.util._deprecate_api": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pyarrow.util._deprecate_api.wrapper": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "FutureWarning",
    "api",
    "pyarrow.util.warnings"
   ]
  },
  "type": "function"
 },
 "pyarrow.util._has_pathlib": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyarrow.util._is_path_like": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "pathlib2.Path",
    "pyarrow.util._has_pathlib",
    "pyarrow.util.six"
   ]
  },
  "type": "function"
 },
 "pyarrow.util._stringify_path": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "isinstance",
    "pathlib2.Path",
    "pyarrow.util._has_pathlib",
    "pyarrow.util.six",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.util.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.util.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "pyarrow.util.get_contiguous_span": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "pyarrow.util.product"
   ]
  },
  "type": "function"
 },
 "pyarrow.util.implements": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pyarrow.util.implements.decorator": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "pyarrow.util.indent": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "pyarrow.util.pathlib": {
  "data": {
   "shadows": "pathlib2"
  },
  "type": "import"
 },
 "pyarrow.util.product": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "pyarrow.util.functools"
   ]
  },
  "type": "function"
 },
 "pyarrow.util.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyarrow.util.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyarrow.write_tensor": {
  "data": {
   "shadows": "pyarrow.ipc.write_tensor"
  },
  "type": "import"
 }
}