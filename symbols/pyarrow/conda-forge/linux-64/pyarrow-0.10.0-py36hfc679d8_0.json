{
 "pyarrow": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "LookupError",
    "__name__",
    "pkg_resources.DistributionNotFound",
    "pkg_resources.get_distribution",
    "pyarrow.compat.import_pytorch_extension",
    "pyarrow.compat.import_tensorflow_extension",
    "pyarrow.filesystem.LocalFileSystem.get_instance",
    "pyarrow.lib.py_buffer",
    "pyarrow.parse_version",
    "pyarrow.setuptools_scm",
    "pyarrow.util._deprecate_api",
    "sys.platform"
   ]
  },
  "type": "module"
 },
 "pyarrow.Array": {
  "data": {
   "shadows": "pyarrow.lib.Array"
  },
  "type": "import"
 },
 "pyarrow.ArrayValue": {
  "data": {
   "shadows": "pyarrow.lib.ArrayValue"
  },
  "type": "import"
 },
 "pyarrow.ArrowException": {
  "data": {
   "shadows": "pyarrow.lib.ArrowException"
  },
  "type": "import"
 },
 "pyarrow.ArrowIOError": {
  "data": {
   "shadows": "pyarrow.lib.ArrowIOError"
  },
  "type": "import"
 },
 "pyarrow.ArrowInvalid": {
  "data": {
   "shadows": "pyarrow.lib.ArrowInvalid"
  },
  "type": "import"
 },
 "pyarrow.ArrowKeyError": {
  "data": {
   "shadows": "pyarrow.lib.ArrowKeyError"
  },
  "type": "import"
 },
 "pyarrow.ArrowMemoryError": {
  "data": {
   "shadows": "pyarrow.lib.ArrowMemoryError"
  },
  "type": "import"
 },
 "pyarrow.ArrowNotImplementedError": {
  "data": {
   "shadows": "pyarrow.lib.ArrowNotImplementedError"
  },
  "type": "import"
 },
 "pyarrow.ArrowSerializationError": {
  "data": {
   "shadows": "pyarrow.lib.ArrowSerializationError"
  },
  "type": "import"
 },
 "pyarrow.ArrowTypeError": {
  "data": {
   "shadows": "pyarrow.lib.ArrowTypeError"
  },
  "type": "import"
 },
 "pyarrow.BinaryArray": {
  "data": {
   "shadows": "pyarrow.lib.BinaryArray"
  },
  "type": "import"
 },
 "pyarrow.BinaryValue": {
  "data": {
   "shadows": "pyarrow.lib.BinaryValue"
  },
  "type": "import"
 },
 "pyarrow.BooleanArray": {
  "data": {
   "shadows": "pyarrow.lib.BooleanArray"
  },
  "type": "import"
 },
 "pyarrow.BooleanValue": {
  "data": {
   "shadows": "pyarrow.lib.BooleanValue"
  },
  "type": "import"
 },
 "pyarrow.Buffer": {
  "data": {
   "shadows": "pyarrow.lib.Buffer"
  },
  "type": "import"
 },
 "pyarrow.BufferOutputStream": {
  "data": {
   "shadows": "pyarrow.lib.BufferOutputStream"
  },
  "type": "import"
 },
 "pyarrow.BufferReader": {
  "data": {
   "shadows": "pyarrow.lib.BufferReader"
  },
  "type": "import"
 },
 "pyarrow.ChunkedArray": {
  "data": {
   "shadows": "pyarrow.lib.ChunkedArray"
  },
  "type": "import"
 },
 "pyarrow.Column": {
  "data": {
   "shadows": "pyarrow.lib.Column"
  },
  "type": "import"
 },
 "pyarrow.DataType": {
  "data": {
   "shadows": "pyarrow.lib.DataType"
  },
  "type": "import"
 },
 "pyarrow.Date32Array": {
  "data": {
   "shadows": "pyarrow.lib.Date32Array"
  },
  "type": "import"
 },
 "pyarrow.Date32Value": {
  "data": {
   "shadows": "pyarrow.lib.Date32Value"
  },
  "type": "import"
 },
 "pyarrow.Date64Array": {
  "data": {
   "shadows": "pyarrow.lib.Date64Array"
  },
  "type": "import"
 },
 "pyarrow.Date64Value": {
  "data": {
   "shadows": "pyarrow.lib.Date64Value"
  },
  "type": "import"
 },
 "pyarrow.Decimal128Array": {
  "data": {
   "shadows": "pyarrow.lib.Decimal128Array"
  },
  "type": "import"
 },
 "pyarrow.DecimalValue": {
  "data": {
   "shadows": "pyarrow.lib.DecimalValue"
  },
  "type": "import"
 },
 "pyarrow.DeserializationCallbackError": {
  "data": {
   "shadows": "pyarrow.lib.DeserializationCallbackError"
  },
  "type": "import"
 },
 "pyarrow.DictionaryArray": {
  "data": {
   "shadows": "pyarrow.lib.DictionaryArray"
  },
  "type": "import"
 },
 "pyarrow.DictionaryValue": {
  "data": {
   "shadows": "pyarrow.lib.DictionaryValue"
  },
  "type": "import"
 },
 "pyarrow.DistributionNotFound": {
  "data": {
   "shadows": "pkg_resources.DistributionNotFound"
  },
  "type": "import"
 },
 "pyarrow.DoubleValue": {
  "data": {
   "shadows": "pyarrow.lib.DoubleValue"
  },
  "type": "import"
 },
 "pyarrow.Field": {
  "data": {
   "shadows": "pyarrow.lib.Field"
  },
  "type": "import"
 },
 "pyarrow.FileSystem": {
  "data": {
   "shadows": "pyarrow.filesystem.FileSystem"
  },
  "type": "import"
 },
 "pyarrow.FixedSizeBinaryArray": {
  "data": {
   "shadows": "pyarrow.lib.FixedSizeBinaryArray"
  },
  "type": "import"
 },
 "pyarrow.FixedSizeBinaryValue": {
  "data": {
   "shadows": "pyarrow.lib.FixedSizeBinaryValue"
  },
  "type": "import"
 },
 "pyarrow.FixedSizeBufferWriter": {
  "data": {
   "shadows": "pyarrow.lib.FixedSizeBufferWriter"
  },
  "type": "import"
 },
 "pyarrow.FloatValue": {
  "data": {
   "shadows": "pyarrow.lib.FloatValue"
  },
  "type": "import"
 },
 "pyarrow.FloatingPointArray": {
  "data": {
   "shadows": "pyarrow.lib.FloatingPointArray"
  },
  "type": "import"
 },
 "pyarrow.HadoopFileSystem": {
  "data": {
   "shadows": "pyarrow.hdfs.HadoopFileSystem"
  },
  "type": "import"
 },
 "pyarrow.HalfFloatValue": {
  "data": {
   "shadows": "pyarrow.lib.HalfFloatValue"
  },
  "type": "import"
 },
 "pyarrow.HdfsFile": {
  "data": {
   "shadows": "pyarrow.lib.HdfsFile"
  },
  "type": "import"
 },
 "pyarrow.Int16Array": {
  "data": {
   "shadows": "pyarrow.lib.Int16Array"
  },
  "type": "import"
 },
 "pyarrow.Int16Value": {
  "data": {
   "shadows": "pyarrow.lib.Int16Value"
  },
  "type": "import"
 },
 "pyarrow.Int32Array": {
  "data": {
   "shadows": "pyarrow.lib.Int32Array"
  },
  "type": "import"
 },
 "pyarrow.Int32Value": {
  "data": {
   "shadows": "pyarrow.lib.Int32Value"
  },
  "type": "import"
 },
 "pyarrow.Int64Array": {
  "data": {
   "shadows": "pyarrow.lib.Int64Array"
  },
  "type": "import"
 },
 "pyarrow.Int64Value": {
  "data": {
   "shadows": "pyarrow.lib.Int64Value"
  },
  "type": "import"
 },
 "pyarrow.Int8Array": {
  "data": {
   "shadows": "pyarrow.lib.Int8Array"
  },
  "type": "import"
 },
 "pyarrow.Int8Value": {
  "data": {
   "shadows": "pyarrow.lib.Int8Value"
  },
  "type": "import"
 },
 "pyarrow.IntegerArray": {
  "data": {
   "shadows": "pyarrow.lib.IntegerArray"
  },
  "type": "import"
 },
 "pyarrow.ListArray": {
  "data": {
   "shadows": "pyarrow.lib.ListArray"
  },
  "type": "import"
 },
 "pyarrow.ListValue": {
  "data": {
   "shadows": "pyarrow.lib.ListValue"
  },
  "type": "import"
 },
 "pyarrow.LocalFileSystem": {
  "data": {
   "shadows": "pyarrow.filesystem.LocalFileSystem"
  },
  "type": "import"
 },
 "pyarrow.MemoryMappedFile": {
  "data": {
   "shadows": "pyarrow.lib.MemoryMappedFile"
  },
  "type": "import"
 },
 "pyarrow.MemoryPool": {
  "data": {
   "shadows": "pyarrow.lib.MemoryPool"
  },
  "type": "import"
 },
 "pyarrow.Message": {
  "data": {
   "shadows": "pyarrow.ipc.Message"
  },
  "type": "import"
 },
 "pyarrow.MessageReader": {
  "data": {
   "shadows": "pyarrow.ipc.MessageReader"
  },
  "type": "import"
 },
 "pyarrow.MockOutputStream": {
  "data": {
   "shadows": "pyarrow.lib.MockOutputStream"
  },
  "type": "import"
 },
 "pyarrow.NA": {
  "data": {
   "shadows": "pyarrow.lib.NA"
  },
  "type": "import"
 },
 "pyarrow.NULL": {
  "data": {
   "shadows": "pyarrow.lib._NULL"
  },
  "type": "import"
 },
 "pyarrow.NativeFile": {
  "data": {
   "shadows": "pyarrow.lib.NativeFile"
  },
  "type": "import"
 },
 "pyarrow.NullArray": {
  "data": {
   "shadows": "pyarrow.lib.NullArray"
  },
  "type": "import"
 },
 "pyarrow.NumericArray": {
  "data": {
   "shadows": "pyarrow.lib.NumericArray"
  },
  "type": "import"
 },
 "pyarrow.OSFile": {
  "data": {
   "shadows": "pyarrow.lib.OSFile"
  },
  "type": "import"
 },
 "pyarrow.PlasmaObjectExists": {
  "data": {
   "shadows": "pyarrow.lib.PlasmaObjectExists"
  },
  "type": "import"
 },
 "pyarrow.ProxyMemoryPool": {
  "data": {
   "shadows": "pyarrow.lib.ProxyMemoryPool"
  },
  "type": "import"
 },
 "pyarrow.PythonFile": {
  "data": {
   "shadows": "pyarrow.lib.PythonFile"
  },
  "type": "import"
 },
 "pyarrow.RecordBatch": {
  "data": {
   "shadows": "pyarrow.lib.RecordBatch"
  },
  "type": "import"
 },
 "pyarrow.RecordBatchFileReader": {
  "data": {
   "shadows": "pyarrow.ipc.RecordBatchFileReader"
  },
  "type": "import"
 },
 "pyarrow.RecordBatchFileWriter": {
  "data": {
   "shadows": "pyarrow.ipc.RecordBatchFileWriter"
  },
  "type": "import"
 },
 "pyarrow.RecordBatchStreamReader": {
  "data": {
   "shadows": "pyarrow.ipc.RecordBatchStreamReader"
  },
  "type": "import"
 },
 "pyarrow.RecordBatchStreamWriter": {
  "data": {
   "shadows": "pyarrow.ipc.RecordBatchStreamWriter"
  },
  "type": "import"
 },
 "pyarrow.ResizableBuffer": {
  "data": {
   "shadows": "pyarrow.lib.ResizableBuffer"
  },
  "type": "import"
 },
 "pyarrow.Scalar": {
  "data": {
   "shadows": "pyarrow.lib.Scalar"
  },
  "type": "import"
 },
 "pyarrow.Schema": {
  "data": {
   "shadows": "pyarrow.lib.Schema"
  },
  "type": "import"
 },
 "pyarrow.SerializationCallbackError": {
  "data": {
   "shadows": "pyarrow.lib.SerializationCallbackError"
  },
  "type": "import"
 },
 "pyarrow.SerializationContext": {
  "data": {
   "shadows": "pyarrow.lib.SerializationContext"
  },
  "type": "import"
 },
 "pyarrow.SerializedPyObject": {
  "data": {
   "shadows": "pyarrow.lib.SerializedPyObject"
  },
  "type": "import"
 },
 "pyarrow.StringArray": {
  "data": {
   "shadows": "pyarrow.lib.StringArray"
  },
  "type": "import"
 },
 "pyarrow.StringValue": {
  "data": {
   "shadows": "pyarrow.lib.StringValue"
  },
  "type": "import"
 },
 "pyarrow.StructArray": {
  "data": {
   "shadows": "pyarrow.lib.StructArray"
  },
  "type": "import"
 },
 "pyarrow.StructValue": {
  "data": {
   "shadows": "pyarrow.lib.StructValue"
  },
  "type": "import"
 },
 "pyarrow.Table": {
  "data": {
   "shadows": "pyarrow.lib.Table"
  },
  "type": "import"
 },
 "pyarrow.Tensor": {
  "data": {
   "shadows": "pyarrow.lib.Tensor"
  },
  "type": "import"
 },
 "pyarrow.Time32Array": {
  "data": {
   "shadows": "pyarrow.lib.Time32Array"
  },
  "type": "import"
 },
 "pyarrow.Time32Value": {
  "data": {
   "shadows": "pyarrow.lib.Time32Value"
  },
  "type": "import"
 },
 "pyarrow.Time64Array": {
  "data": {
   "shadows": "pyarrow.lib.Time64Array"
  },
  "type": "import"
 },
 "pyarrow.Time64Value": {
  "data": {
   "shadows": "pyarrow.lib.Time64Value"
  },
  "type": "import"
 },
 "pyarrow.TimestampArray": {
  "data": {
   "shadows": "pyarrow.lib.TimestampArray"
  },
  "type": "import"
 },
 "pyarrow.TimestampValue": {
  "data": {
   "shadows": "pyarrow.lib.TimestampValue"
  },
  "type": "import"
 },
 "pyarrow.UInt16Array": {
  "data": {
   "shadows": "pyarrow.lib.UInt16Array"
  },
  "type": "import"
 },
 "pyarrow.UInt16Value": {
  "data": {
   "shadows": "pyarrow.lib.UInt16Value"
  },
  "type": "import"
 },
 "pyarrow.UInt32Array": {
  "data": {
   "shadows": "pyarrow.lib.UInt32Array"
  },
  "type": "import"
 },
 "pyarrow.UInt32Value": {
  "data": {
   "shadows": "pyarrow.lib.UInt32Value"
  },
  "type": "import"
 },
 "pyarrow.UInt64Array": {
  "data": {
   "shadows": "pyarrow.lib.UInt64Array"
  },
  "type": "import"
 },
 "pyarrow.UInt64Value": {
  "data": {
   "shadows": "pyarrow.lib.UInt64Value"
  },
  "type": "import"
 },
 "pyarrow.UInt8Array": {
  "data": {
   "shadows": "pyarrow.lib.UInt8Array"
  },
  "type": "import"
 },
 "pyarrow.UInt8Value": {
  "data": {
   "shadows": "pyarrow.lib.UInt8Value"
  },
  "type": "import"
 },
 "pyarrow.UnionArray": {
  "data": {
   "shadows": "pyarrow.lib.UnionArray"
  },
  "type": "import"
 },
 "pyarrow.UnionValue": {
  "data": {
   "shadows": "pyarrow.lib.UnionValue"
  },
  "type": "import"
 },
 "pyarrow.__version__": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "pyarrow._deprecate_api": {
  "data": {
   "shadows": "pyarrow.util._deprecate_api"
  },
  "type": "import"
 },
 "pyarrow._os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow._plasma_store_entry_point": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "os.execv",
    "os.path.join",
    "pyarrow.pyarrow",
    "sys.argv"
   ]
  },
  "type": "function"
 },
 "pyarrow._sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.allocate_buffer": {
  "data": {
   "shadows": "pyarrow.lib.allocate_buffer"
  },
  "type": "import"
 },
 "pyarrow.array": {
  "data": {
   "shadows": "pyarrow.lib.array"
  },
  "type": "import"
 },
 "pyarrow.benchmark": {
  "data": {},
  "type": "module"
 },
 "pyarrow.benchmark.benchmark_PandasObjectIsNull": {
  "data": {
   "shadows": "pyarrow.lib.benchmark_PandasObjectIsNull"
  },
  "type": "import"
 },
 "pyarrow.binary": {
  "data": {
   "shadows": "pyarrow.lib.binary"
  },
  "type": "import"
 },
 "pyarrow.bool_": {
  "data": {
   "shadows": "pyarrow.lib.bool_"
  },
  "type": "import"
 },
 "pyarrow.chunked_array": {
  "data": {
   "shadows": "pyarrow.lib.chunked_array"
  },
  "type": "import"
 },
 "pyarrow.column": {
  "data": {
   "shadows": "pyarrow.lib.column"
  },
  "type": "import"
 },
 "pyarrow.compat": {
  "data": {
   "shadows": "pyarrow.compat"
  },
  "type": "import"
 },
 "pyarrow.compress": {
  "data": {
   "shadows": "pyarrow.lib.compress"
  },
  "type": "import"
 },
 "pyarrow.concat_tables": {
  "data": {
   "shadows": "pyarrow.lib.concat_tables"
  },
  "type": "import"
 },
 "pyarrow.cpu_count": {
  "data": {
   "shadows": "pyarrow.lib.cpu_count"
  },
  "type": "import"
 },
 "pyarrow.create_memory_map": {
  "data": {
   "shadows": "pyarrow.lib.create_memory_map"
  },
  "type": "import"
 },
 "pyarrow.date32": {
  "data": {
   "shadows": "pyarrow.lib.date32"
  },
  "type": "import"
 },
 "pyarrow.date64": {
  "data": {
   "shadows": "pyarrow.lib.date64"
  },
  "type": "import"
 },
 "pyarrow.decimal128": {
  "data": {
   "shadows": "pyarrow.lib.decimal128"
  },
  "type": "import"
 },
 "pyarrow.decompress": {
  "data": {
   "shadows": "pyarrow.lib.decompress"
  },
  "type": "import"
 },
 "pyarrow.default_memory_pool": {
  "data": {
   "shadows": "pyarrow.lib.default_memory_pool"
  },
  "type": "import"
 },
 "pyarrow.default_serialization_context": {
  "data": {
   "shadows": "pyarrow.serialization.default_serialization_context"
  },
  "type": "import"
 },
 "pyarrow.deserialize": {
  "data": {
   "shadows": "pyarrow.lib.deserialize"
  },
  "type": "import"
 },
 "pyarrow.deserialize_components": {
  "data": {
   "shadows": "pyarrow.lib.deserialize_components"
  },
  "type": "import"
 },
 "pyarrow.deserialize_from": {
  "data": {
   "shadows": "pyarrow.lib.deserialize_from"
  },
  "type": "import"
 },
 "pyarrow.deserialize_pandas": {
  "data": {
   "shadows": "pyarrow.ipc.deserialize_pandas"
  },
  "type": "import"
 },
 "pyarrow.dictionary": {
  "data": {
   "shadows": "pyarrow.lib.dictionary"
  },
  "type": "import"
 },
 "pyarrow.feather": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "ImportError",
    "distutils.version.LooseVersion",
    "pandas.__version__",
    "pandas.lib.infer_dtype",
    "pyarrow.compat.pdapi.infer_dtype"
   ]
  },
  "type": "module"
 },
 "pyarrow.feather.FeatherDataset": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.feather.FeatherDataset.__init__": {
  "data": {
   "lineno": 112
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherDataset.read_pandas": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "_deprecate_nthreads"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherDataset.read_table": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pyarrow.feather.FeatherReader",
    "pyarrow.lib.concat_tables"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherDataset.validate_schemas": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherError": {
  "data": {
   "shadows": "pyarrow.lib.FeatherError"
  },
  "type": "import"
 },
 "pyarrow.feather.FeatherReader": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyarrow.lib.FeatherReader"
   ]
  },
  "type": "class"
 },
 "pyarrow.feather.FeatherReader.__init__": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherReader.read": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "FutureWarning",
    "pyarrow.feather.warnings"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherReader.read_pandas": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "_deprecate_nthreads"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherReader.read_table": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "pyarrow.lib.Table.from_arrays",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherWriter": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.feather.FeatherWriter.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pyarrow.lib.FeatherWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.FeatherWriter.write": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "enumerate",
    "isinstance",
    "len",
    "pandas.SparseDataFrame",
    "pyarrow.lib.RecordBatch.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "pyarrow.feather.RecordBatch": {
  "data": {
   "shadows": "pyarrow.lib.RecordBatch"
  },
  "type": "import"
 },
 "pyarrow.feather.Table": {
  "data": {
   "shadows": "pyarrow.lib.Table"
  },
  "type": "import"
 },
 "pyarrow.feather.concat_tables": {
  "data": {
   "shadows": "pyarrow.lib.concat_tables"
  },
  "type": "import"
 },
 "pyarrow.feather.ext": {
  "data": {
   "shadows": "pyarrow.lib"
  },
  "type": "import"
 },
 "pyarrow.feather.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.feather.infer_dtype": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "pyarrow.feather.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.feather.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.feather.pdapi": {
  "data": {
   "shadows": "pyarrow.compat.pdapi"
  },
  "type": "import"
 },
 "pyarrow.feather.read_feather": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "_deprecate_nthreads",
    "pyarrow.feather.FeatherReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.read_table": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "pyarrow.feather.FeatherReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.feather.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyarrow.feather.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyarrow.feather.write_feather": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "Exception",
    "isinstance",
    "pyarrow.feather.FeatherWriter",
    "pyarrow.feather.gc",
    "pyarrow.feather.os",
    "pyarrow.feather.six"
   ]
  },
  "type": "function"
 },
 "pyarrow.field": {
  "data": {
   "shadows": "pyarrow.lib.field"
  },
  "type": "import"
 },
 "pyarrow.filesystem": {
  "data": {},
  "type": "module"
 },
 "pyarrow.filesystem.DaskFileSystem": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem"
   ]
  },
  "type": "class"
 },
 "pyarrow.filesystem.DaskFileSystem.__init__": {
  "data": {
   "lineno": 250
  },
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem._isfilestore": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.delete": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.exists": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.isdir": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.filesystem.FileSystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.isfile": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.filesystem.FileSystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.ls": {
  "data": {
   "lineno": 291
  },
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.mkdir": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.open": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.walk": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.filesystem.FileSystem._isfilestore": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem._path_join": {
  "data": {
   "lineno": 83
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.cat": {
  "data": {
   "lineno": 29
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.delete": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.disk_usage": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.exists": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.isdir": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.isfile": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.ls": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.mkdir": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.mv": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.open": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.pathsep": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.read_parquet": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "pyarrow.parquet.ParquetDataset"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.rename": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.rm": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.stat": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem"
   ]
  },
  "type": "class"
 },
 "pyarrow.filesystem.LocalFileSystem._isfilestore": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.exists": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem",
    "pyarrow.filesystem.os",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.get_instance": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "classmethod",
    "pyarrow.filesystem.LocalFileSystem"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.isdir": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem",
    "pyarrow.filesystem.os",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.isfile": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem",
    "pyarrow.filesystem.os",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.ls": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "os.path.join",
    "pyarrow.filesystem.FileSystem",
    "pyarrow.filesystem.os",
    "pyarrow.util.implements",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.mkdir": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem",
    "pyarrow.filesystem.os",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.open": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "open",
    "pyarrow.filesystem.FileSystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.pathsep": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "property",
    "pyarrow.filesystem.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.walk": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "pyarrow.filesystem.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.ParquetDataset": {
  "data": {
   "shadows": "pyarrow.parquet.ParquetDataset"
  },
  "type": "import"
 },
 "pyarrow.filesystem.S3FSWrapper": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pyarrow.filesystem.DaskFileSystem"
   ]
  },
  "type": "class"
 },
 "pyarrow.filesystem.S3FSWrapper.isdir": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "OSError",
    "len",
    "pyarrow.filesystem.FileSystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.S3FSWrapper.isfile": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "OSError",
    "len",
    "pyarrow.filesystem.FileSystem",
    "pyarrow.util.implements"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.S3FSWrapper.walk": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": [
    "list",
    "pyarrow.filesystem.posixpath",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "pyarrow.filesystem.implements": {
  "data": {
   "shadows": "pyarrow.util.implements"
  },
  "type": "import"
 },
 "pyarrow.filesystem.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.filesystem.pjoin": {
  "data": {
   "shadows": "os.path.join"
  },
  "type": "import"
 },
 "pyarrow.filesystem.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "pyarrow.float16": {
  "data": {
   "shadows": "pyarrow.lib.float16"
  },
  "type": "import"
 },
 "pyarrow.float32": {
  "data": {
   "shadows": "pyarrow.lib.float32"
  },
  "type": "import"
 },
 "pyarrow.float64": {
  "data": {
   "shadows": "pyarrow.lib.float64"
  },
  "type": "import"
 },
 "pyarrow.foreign_buffer": {
  "data": {
   "shadows": "pyarrow.lib.foreign_buffer"
  },
  "type": "import"
 },
 "pyarrow.formatting": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "pyarrow.formatting.array_format": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "FutureWarning",
    "pyarrow.formatting.warnings"
   ]
  },
  "type": "function"
 },
 "pyarrow.formatting.indent": {
  "data": {
   "lineno": 26
  },
  "type": "function"
 },
 "pyarrow.formatting.lib": {
  "data": {
   "shadows": "pyarrow.lib"
  },
  "type": "import"
 },
 "pyarrow.formatting.value_format": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "FutureWarning",
    "isinstance",
    "pyarrow.formatting.warnings",
    "pyarrow.lib.ListValue",
    "repr",
    "textwrap.indent"
   ]
  },
  "type": "function"
 },
 "pyarrow.formatting.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyarrow.from_numpy_dtype": {
  "data": {
   "shadows": "pyarrow.lib.from_numpy_dtype"
  },
  "type": "import"
 },
 "pyarrow.frombuffer": {
  "data": {
   "lineno": 180
  },
  "type": "constant"
 },
 "pyarrow.get_distribution": {
  "data": {
   "shadows": "pkg_resources.get_distribution"
  },
  "type": "import"
 },
 "pyarrow.get_include": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join"
   ]
  },
  "type": "function"
 },
 "pyarrow.get_libraries": {
  "data": {
   "lineno": 194
  },
  "type": "function"
 },
 "pyarrow.get_library_dirs": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "os.path.dirname",
    "os.path.join",
    "os.path.split",
    "sys.platform"
   ]
  },
  "type": "function"
 },
 "pyarrow.get_record_batch_size": {
  "data": {
   "shadows": "pyarrow.ipc.get_record_batch_size"
  },
  "type": "import"
 },
 "pyarrow.get_tensor_size": {
  "data": {
   "shadows": "pyarrow.ipc.get_tensor_size"
  },
  "type": "import"
 },
 "pyarrow.have_libhdfs": {
  "data": {
   "shadows": "pyarrow.lib.have_libhdfs"
  },
  "type": "import"
 },
 "pyarrow.have_libhdfs3": {
  "data": {
   "shadows": "pyarrow.lib.have_libhdfs3"
  },
  "type": "import"
 },
 "pyarrow.hdfs": {
  "data": {
   "shadows": "pyarrow.hdfs"
  },
  "type": "import"
 },
 "pyarrow.hdfs.FileSystem": {
  "data": {
   "shadows": "pyarrow.filesystem.FileSystem"
  },
  "type": "import"
 },
 "pyarrow.hdfs.HadoopFileSystem": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem",
    "pyarrow.lib.HadoopFileSystem"
   ]
  },
  "type": "class"
 },
 "pyarrow.hdfs.HadoopFileSystem.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyarrow.hdfs._maybe_set_hadoop_classpath"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.__reduce__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "pyarrow.hdfs.HadoopFileSystem"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem._isfilestore": {
  "data": {
   "lineno": 44
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.delete": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem.delete",
    "pyarrow.hdfs.HadoopFileSystem",
    "pyarrow.util.implements",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.exists": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem.exists",
    "pyarrow.hdfs.HadoopFileSystem",
    "pyarrow.util.implements",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.isdir": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem.isdir",
    "pyarrow.hdfs.HadoopFileSystem",
    "pyarrow.util.implements",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.isfile": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem.isfile",
    "pyarrow.hdfs.HadoopFileSystem",
    "pyarrow.util.implements",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.ls": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "pyarrow.hdfs.HadoopFileSystem",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.mkdir": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pyarrow.hdfs.HadoopFileSystem",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.rename": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "pyarrow.filesystem.FileSystem.rename",
    "pyarrow.hdfs.HadoopFileSystem",
    "pyarrow.util.implements",
    "super"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.walk": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pyarrow.hdfs._libhdfs_walk_files_dirs"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs._libhdfs_walk_files_dirs": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pyarrow.hdfs.posixpath"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs._maybe_set_hadoop_classpath": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "pyarrow.hdfs.os",
    "pyarrow.hdfs.subprocess"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.connect": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pyarrow.hdfs.HadoopFileSystem"
   ]
  },
  "type": "function"
 },
 "pyarrow.hdfs.implements": {
  "data": {
   "shadows": "pyarrow.util.implements"
  },
  "type": "import"
 },
 "pyarrow.hdfs.lib": {
  "data": {
   "shadows": "pyarrow.lib"
  },
  "type": "import"
 },
 "pyarrow.hdfs.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.hdfs.posixpath": {
  "data": {
   "shadows": "posixpath"
  },
  "type": "import"
 },
 "pyarrow.hdfs.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.int16": {
  "data": {
   "shadows": "pyarrow.lib.int16"
  },
  "type": "import"
 },
 "pyarrow.int32": {
  "data": {
   "shadows": "pyarrow.lib.int32"
  },
  "type": "import"
 },
 "pyarrow.int64": {
  "data": {
   "shadows": "pyarrow.lib.int64"
  },
  "type": "import"
 },
 "pyarrow.int8": {
  "data": {
   "shadows": "pyarrow.lib.int8"
  },
  "type": "import"
 },
 "pyarrow.ipc": {
  "data": {},
  "type": "module"
 },
 "pyarrow.ipc.Message": {
  "data": {
   "shadows": "pyarrow.lib.Message"
  },
  "type": "import"
 },
 "pyarrow.ipc.MessageReader": {
  "data": {
   "shadows": "pyarrow.lib.MessageReader"
  },
  "type": "import"
 },
 "pyarrow.ipc.RecordBatchFileReader": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyarrow.ipc._ReadPandasOption",
    "pyarrow.lib._RecordBatchFileReader"
   ]
  },
  "type": "class"
 },
 "pyarrow.ipc.RecordBatchFileReader.__init__": {
  "data": {
   "lineno": 89
  },
  "type": "function"
 },
 "pyarrow.ipc.RecordBatchFileWriter": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pyarrow.lib._RecordBatchFileWriter"
   ]
  },
  "type": "class"
 },
 "pyarrow.ipc.RecordBatchFileWriter.__init__": {
  "data": {
   "lineno": 104
  },
  "type": "function"
 },
 "pyarrow.ipc.RecordBatchStreamReader": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyarrow.ipc._ReadPandasOption",
    "pyarrow.lib._RecordBatchReader"
   ]
  },
  "type": "class"
 },
 "pyarrow.ipc.RecordBatchStreamReader.__init__": {
  "data": {
   "lineno": 58
  },
  "type": "function"
 },
 "pyarrow.ipc.RecordBatchStreamWriter": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "pyarrow.lib._RecordBatchWriter"
   ]
  },
  "type": "class"
 },
 "pyarrow.ipc.RecordBatchStreamWriter.__init__": {
  "data": {
   "lineno": 73
  },
  "type": "function"
 },
 "pyarrow.ipc._ReadPandasOption": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.ipc._ReadPandasOption.read_pandas": {
  "data": {
   "lineno": 32
  },
  "type": "function"
 },
 "pyarrow.ipc.deserialize_pandas": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "_deprecate_nthreads",
    "pyarrow.BufferReader",
    "pyarrow.RecordBatchStreamReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.ipc.get_record_batch_size": {
  "data": {
   "shadows": "pyarrow.lib.get_record_batch_size"
  },
  "type": "import"
 },
 "pyarrow.ipc.get_tensor_size": {
  "data": {
   "shadows": "pyarrow.lib.get_tensor_size"
  },
  "type": "import"
 },
 "pyarrow.ipc.lib": {
  "data": {
   "shadows": "pyarrow.lib"
  },
  "type": "import"
 },
 "pyarrow.ipc.open_file": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyarrow.ipc.RecordBatchFileReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.ipc.open_stream": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "pyarrow.ipc.RecordBatchStreamReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.ipc.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.ipc.read_message": {
  "data": {
   "shadows": "pyarrow.lib.read_message"
  },
  "type": "import"
 },
 "pyarrow.ipc.read_record_batch": {
  "data": {
   "shadows": "pyarrow.lib.read_record_batch"
  },
  "type": "import"
 },
 "pyarrow.ipc.read_schema": {
  "data": {
   "shadows": "pyarrow.lib.read_schema"
  },
  "type": "import"
 },
 "pyarrow.ipc.read_tensor": {
  "data": {
   "shadows": "pyarrow.lib.read_tensor"
  },
  "type": "import"
 },
 "pyarrow.ipc.serialize_pandas": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.RecordBatchStreamWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.ipc.write_tensor": {
  "data": {
   "shadows": "pyarrow.lib.write_tensor"
  },
  "type": "import"
 },
 "pyarrow.jvm": {
  "data": {},
  "type": "module"
 },
 "pyarrow.jvm._from_jvm_date_type": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "pyarrow.date32",
    "pyarrow.date64"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm._from_jvm_float_type": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm._from_jvm_int_type": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm._from_jvm_time_type": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pyarrow.time32",
    "pyarrow.time64"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm._from_jvm_timestamp_type": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm.array": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "NotImplementedError",
    "list",
    "pyarrow.Array.from_buffers",
    "pyarrow.jvm.field",
    "pyarrow.jvm.jvm_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm.field": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "NotImplementedError",
    "dict",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.decimal128",
    "pyarrow.field",
    "pyarrow.jvm._from_jvm_date_type",
    "pyarrow.jvm._from_jvm_float_type",
    "pyarrow.jvm._from_jvm_int_type",
    "pyarrow.jvm._from_jvm_time_type",
    "pyarrow.jvm._from_jvm_timestamp_type",
    "pyarrow.null",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm.jvm_buffer": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "pyarrow.foreign_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.jvm.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.list_": {
  "data": {
   "shadows": "pyarrow.lib.list_"
  },
  "type": "import"
 },
 "pyarrow.localfs": {
  "data": {
   "lineno": 152
  },
  "type": "constant"
 },
 "pyarrow.log_memory_allocations": {
  "data": {
   "shadows": "pyarrow.lib.log_memory_allocations"
  },
  "type": "import"
 },
 "pyarrow.memory_map": {
  "data": {
   "shadows": "pyarrow.lib.memory_map"
  },
  "type": "import"
 },
 "pyarrow.null": {
  "data": {
   "shadows": "pyarrow.lib.null"
  },
  "type": "import"
 },
 "pyarrow.open_file": {
  "data": {
   "shadows": "pyarrow.ipc.open_file"
  },
  "type": "import"
 },
 "pyarrow.open_stream": {
  "data": {
   "shadows": "pyarrow.ipc.open_stream"
  },
  "type": "import"
 },
 "pyarrow.orc": {
  "data": {},
  "type": "module"
 },
 "pyarrow.orc.Integral": {
  "data": {
   "shadows": "numbers.Integral"
  },
  "type": "import"
 },
 "pyarrow.orc.ORCFile": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.orc.ORCFile.__init__": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pyarrow._orc.ORCReader",
    "pyarrow.orc._schema_to_indices"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc.ORCFile._select_indices": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "isinstance",
    "len",
    "numbers.Integral"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc.ORCFile.nrows": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc.ORCFile.nstripes": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc.ORCFile.read": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "pyarrow.orc.ORCFile.read_stripe": {
  "data": {
   "lineno": 113
  },
  "type": "function"
 },
 "pyarrow.orc.ORCFile.schema": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc.Schema": {
  "data": {
   "shadows": "pyarrow.lib.Schema"
  },
  "type": "import"
 },
 "pyarrow.orc._is_map": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "pyarrow.types.is_list",
    "pyarrow.types.is_struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc._orc": {
  "data": {
   "shadows": "pyarrow._orc"
  },
  "type": "import"
 },
 "pyarrow.orc._schema_to_indices": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "itertools.count",
    "pyarrow.orc._traverse"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc._traverse": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "isinstance",
    "next",
    "pyarrow.lib.Schema",
    "pyarrow.orc._is_map",
    "pyarrow.types.is_list",
    "pyarrow.types.is_struct",
    "pyarrow.types.is_union"
   ]
  },
  "type": "function"
 },
 "pyarrow.orc.count": {
  "data": {
   "shadows": "itertools.count"
  },
  "type": "import"
 },
 "pyarrow.orc.types": {
  "data": {
   "shadows": "pyarrow.types"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat": {
  "data": {
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.bytes_",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "numpy.str_",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "numpy.unicode_",
    "pyarrow.compat.PY2"
   ]
  },
  "type": "module"
 },
 "pyarrow.pandas_compat.DatetimeTZDtype": {
  "data": {
   "shadows": "pyarrow.compat.DatetimeTZDtype"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.PY2": {
  "data": {
   "shadows": "pyarrow.compat.PY2"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat._add_any_metadata": {
  "data": {
   "lineno": 763,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pyarrow.Array.from_pandas",
    "pyarrow.Column.from_array",
    "pyarrow.Table.from_arrays",
    "pyarrow.field",
    "pyarrow.timestamp",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._backwards_compatible_index_name": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": [
    "pyarrow.pandas_compat.re"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._column_name_to_strings": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "map",
    "pyarrow.pandas_compat.collections",
    "pyarrow.pandas_compat.six",
    "str",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._flatten_single_level_multiindex": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "pandas.Index",
    "pandas.MultiIndex"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._index_level_name": {
  "data": {
   "lineno": 300
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._int": {
  "data": {
   "shadows": "pandas.core.internals"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat._logical_type_map": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "pyarrow.pandas_compat._make_datetimetz": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "pyarrow.compat.DatetimeTZDtype",
    "pyarrow.lib.string_to_tzinfo"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._numpy_logical_type_map": {
  "data": {
   "lineno": 90
  },
  "type": "constant"
 },
 "pyarrow.pandas_compat._pandas_logical_type_map": {
  "data": {
   "lineno": 651
  },
  "type": "constant"
 },
 "pyarrow.pandas_compat._pandas_type_to_numpy_type": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "KeyError",
    "numpy.dtype",
    "pyarrow.pandas_compat._pandas_logical_type_map"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._reconstruct_block": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "pandas.Categorical.from_codes",
    "pandas.core.internals.CategoricalBlock",
    "pandas.core.internals.DatetimeTZBlock",
    "pandas.core.internals.ObjectBlock",
    "pandas.core.internals.make_block",
    "pyarrow.compat.builtin_pickle.loads",
    "pyarrow.pandas_compat._make_datetimetz"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._reconstruct_columns_from_metadata": {
  "data": {
   "lineno": 681,
   "symbols_in_volume": [
    "getattr",
    "len",
    "numpy.bytes_",
    "pandas.MultiIndex",
    "pandas.RangeIndex",
    "pyarrow.compat.zip_longest",
    "pyarrow.pandas_compat._pandas_type_to_numpy_type",
    "pyarrow.pandas_compat.operator",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat._table_to_blocks": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "pyarrow.lib.table_to_blocks",
    "pyarrow.pandas_compat._reconstruct_block"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.ast": {
  "data": {
   "shadows": "ast"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.builtin_pickle": {
  "data": {
   "shadows": "pyarrow.compat.builtin_pickle"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.construct_metadata": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "enumerate",
    "getattr",
    "len",
    "pandas.__version__",
    "pyarrow.pandas_compat.get_column_metadata",
    "pyarrow.pandas_compat.get_extension_dtype_info",
    "pyarrow.pandas_compat.get_logical_type_from_numpy",
    "pyarrow.pandas_compat.json",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.dataframe_to_arrays": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "ValueError",
    "concurrent.futures.ThreadPoolExecutor",
    "convert_column",
    "enumerate",
    "getattr",
    "len",
    "list",
    "pyarrow.cpu_count",
    "pyarrow.pandas_compat._column_name_to_strings",
    "pyarrow.pandas_compat._index_level_name",
    "pyarrow.pandas_compat.construct_metadata",
    "range",
    "type",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.dataframe_to_arrays.convert_column": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.ArrowNotImplementedError",
    "pyarrow.ArrowTypeError",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.dataframe_to_serialized_dict": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "isinstance",
    "pandas.core.internals.CategoricalBlock",
    "pandas.core.internals.DatetimeTZBlock",
    "pandas.core.internals.ObjectBlock",
    "pyarrow.compat.builtin_pickle.HIGHEST_PROTOCOL",
    "pyarrow.compat.builtin_pickle.dumps",
    "pyarrow.lib.tzinfo_to_string",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.futures": {
  "data": {
   "shadows": "concurrent.futures"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.get_column_metadata": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "pyarrow.pandas_compat.get_extension_dtype_info",
    "pyarrow.pandas_compat.get_logical_type",
    "pyarrow.pandas_compat.six",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.get_datetimetz_type": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": [
    "isinstance",
    "numpy.datetime64",
    "pyarrow.compat.DatetimeTZDtype",
    "pyarrow.from_numpy_dtype",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.get_extension_dtype_info": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "getattr",
    "hasattr",
    "len",
    "pyarrow.lib.tzinfo_to_string",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.get_logical_type": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "KeyError",
    "NotImplementedError",
    "isinstance",
    "pyarrow.lib.Decimal128Type",
    "pyarrow.lib.DictionaryType",
    "pyarrow.lib.ListType",
    "pyarrow.lib.TimestampType",
    "pyarrow.pandas_compat.get_logical_type_map",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.get_logical_type_from_numpy": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "KeyError",
    "hasattr",
    "pyarrow.compat.PY2",
    "pyarrow.pandas_compat._numpy_logical_type_map",
    "pyarrow.pandas_compat.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.get_logical_type_map": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "pyarrow.lib.Type_BINARY",
    "pyarrow.lib.Type_BOOL",
    "pyarrow.lib.Type_DATE32",
    "pyarrow.lib.Type_DATE64",
    "pyarrow.lib.Type_DOUBLE",
    "pyarrow.lib.Type_FIXED_SIZE_BINARY",
    "pyarrow.lib.Type_FLOAT",
    "pyarrow.lib.Type_HALF_FLOAT",
    "pyarrow.lib.Type_INT16",
    "pyarrow.lib.Type_INT32",
    "pyarrow.lib.Type_INT64",
    "pyarrow.lib.Type_INT8",
    "pyarrow.lib.Type_NA",
    "pyarrow.lib.Type_STRING",
    "pyarrow.lib.Type_TIME32",
    "pyarrow.lib.Type_TIME64",
    "pyarrow.lib.Type_UINT16",
    "pyarrow.lib.Type_UINT32",
    "pyarrow.lib.Type_UINT64",
    "pyarrow.lib.Type_UINT8",
    "pyarrow.pandas_compat._logical_type_map"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.infer_dtype": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "AttributeError",
    "pandas.api.types.infer_dtype",
    "pandas.lib.infer_dtype"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.operator": {
  "data": {
   "shadows": "operator"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.serialized_dict_to_dataframe": {
  "data": {
   "lineno": 458,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.core.internals.BlockManager",
    "pyarrow.pandas_compat._reconstruct_block"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyarrow.pandas_compat.table_to_blockmanager": {
  "data": {
   "lineno": 503,
   "symbols_in_volume": [
    "all",
    "frozenset",
    "hasattr",
    "isinstance",
    "len",
    "list",
    "map",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pandas.MultiIndex.from_tuples",
    "pandas.RangeIndex",
    "pandas.Series",
    "pandas.core.internals.BlockManager",
    "pyarrow.compat.DatetimeTZDtype",
    "pyarrow.pandas_compat._add_any_metadata",
    "pyarrow.pandas_compat._backwards_compatible_index_name",
    "pyarrow.pandas_compat._column_name_to_strings",
    "pyarrow.pandas_compat._flatten_single_level_multiindex",
    "pyarrow.pandas_compat._reconstruct_columns_from_metadata",
    "pyarrow.pandas_compat._table_to_blocks",
    "pyarrow.pandas_compat.ast",
    "pyarrow.pandas_compat.json",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.pandas_compat.zip_longest": {
  "data": {
   "shadows": "pyarrow.compat.zip_longest"
  },
  "type": "import"
 },
 "pyarrow.parse_version": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "setuptools_scm.version_from_scm"
   ]
  },
  "type": "function"
 },
 "pyarrow.plasma": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.__path__",
    "pyarrow.plasma.TF_PLASMA_OP_PATH",
    "pyarrow.plasma.os",
    "tensorflow.load_op_library"
   ]
  },
  "type": "module"
 },
 "pyarrow.plasma.ObjectID": {
  "data": {
   "shadows": "pyarrow._plasma.ObjectID"
  },
  "type": "import"
 },
 "pyarrow.plasma.ObjectNotAvailable": {
  "data": {
   "shadows": "pyarrow._plasma.ObjectNotAvailable"
  },
  "type": "import"
 },
 "pyarrow.plasma.PlasmaBuffer": {
  "data": {
   "shadows": "pyarrow._plasma.PlasmaBuffer"
  },
  "type": "import"
 },
 "pyarrow.plasma.PlasmaClient": {
  "data": {
   "shadows": "pyarrow._plasma.PlasmaClient"
  },
  "type": "import"
 },
 "pyarrow.plasma.TF_PLASMA_OP_PATH": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.plasma.build_plasma_tensorflow_op": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ImportError",
    "print",
    "pyarrow.__path__",
    "pyarrow.plasma.TF_PLASMA_OP_PATH",
    "pyarrow.plasma.os",
    "pyarrow.plasma.subprocess",
    "pyarrow.plasma.tf_plasma_op",
    "tensorflow.__version__",
    "tensorflow.load_op_library"
   ]
  },
  "type": "function"
 },
 "pyarrow.plasma.connect": {
  "data": {
   "shadows": "pyarrow._plasma.connect"
  },
  "type": "import"
 },
 "pyarrow.plasma.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pyarrow.plasma.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.plasma.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.plasma.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyarrow.plasma.start_plasma_store": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "Exception",
    "RuntimeError",
    "pyarrow.__path__",
    "pyarrow.plasma.contextlib",
    "pyarrow.plasma.os",
    "pyarrow.plasma.shutil",
    "pyarrow.plasma.subprocess",
    "pyarrow.plasma.tempfile",
    "pyarrow.plasma.time",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.plasma.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.plasma.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.plasma.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "pyarrow.plasma.tf_plasma_op": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "pyarrow.plasma.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "pyarrow.py_buffer": {
  "data": {
   "shadows": "pyarrow.lib.py_buffer"
  },
  "type": "import"
 },
 "pyarrow.pyarrow": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.read_message": {
  "data": {
   "shadows": "pyarrow.ipc.read_message"
  },
  "type": "import"
 },
 "pyarrow.read_record_batch": {
  "data": {
   "shadows": "pyarrow.ipc.read_record_batch"
  },
  "type": "import"
 },
 "pyarrow.read_schema": {
  "data": {
   "shadows": "pyarrow.ipc.read_schema"
  },
  "type": "import"
 },
 "pyarrow.read_serialized": {
  "data": {
   "shadows": "pyarrow.lib.read_serialized"
  },
  "type": "import"
 },
 "pyarrow.read_tensor": {
  "data": {
   "shadows": "pyarrow.ipc.read_tensor"
  },
  "type": "import"
 },
 "pyarrow.register_default_serialization_handlers": {
  "data": {
   "shadows": "pyarrow.serialization.register_default_serialization_handlers"
  },
  "type": "import"
 },
 "pyarrow.register_torch_serialization_handlers": {
  "data": {
   "shadows": "pyarrow.serialization.register_torch_serialization_handlers"
  },
  "type": "import"
 },
 "pyarrow.schema": {
  "data": {
   "shadows": "pyarrow.lib.schema"
  },
  "type": "import"
 },
 "pyarrow.serialization": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.compat.builtin_pickle",
    "pyarrow.lib._default_serialization_context",
    "pyarrow.serialization.register_default_serialization_handlers"
   ]
  },
  "type": "module"
 },
 "pyarrow.serialization.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.serialization.SerializationContext": {
  "data": {
   "shadows": "pyarrow.lib.SerializationContext"
  },
  "type": "import"
 },
 "pyarrow.serialization._default_serialization_context": {
  "data": {
   "shadows": "pyarrow.lib._default_serialization_context"
  },
  "type": "import"
 },
 "pyarrow.serialization._deserialize_numpy_array_list": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.dtype",
    "numpy.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._load_pickle_from_buffer": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "memoryview",
    "pyarrow.compat.builtin_pickle.loads",
    "pyarrow.serialization.six"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._pickle_to_buffer": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pyarrow.compat.builtin_pickle.HIGHEST_PROTOCOL",
    "pyarrow.compat.builtin_pickle.dumps",
    "pyarrow.lib.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ImportError",
    "_deserialize_pandas_dataframe",
    "_serialize_pandas_dataframe",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.Series",
    "pyarrow.serialization._load_pickle_from_buffer",
    "pyarrow.serialization._pickle_to_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers._deserialize_pandas_dataframe": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pyarrow.pandas_compat.serialized_dict_to_dataframe"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers._deserialize_pandas_series": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "_deserialize_pandas_dataframe"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers._serialize_pandas_dataframe": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "NotImplementedError",
    "isinstance",
    "pandas.SparseDataFrame",
    "pyarrow.pandas_compat.dataframe_to_serialized_dict"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers._serialize_pandas_series": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "NotImplementedError",
    "_serialize_pandas_dataframe",
    "isinstance",
    "pandas.DataFrame",
    "pandas.SparseSeries"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization._serialize_numpy_array_list": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "numpy.ascontiguousarray"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.builtin_pickle": {
  "data": {
   "shadows": "pyarrow.compat.builtin_pickle"
  },
  "type": "import"
 },
 "pyarrow.serialization.cloudpickle": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyarrow.serialization.default_serialization_context": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pyarrow.lib.SerializationContext",
    "pyarrow.serialization.register_default_serialization_handlers"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyarrow.serialization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.serialization.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.serialization.pdcompat": {
  "data": {
   "shadows": "pyarrow.pandas_compat"
  },
  "type": "import"
 },
 "pyarrow.serialization.py_buffer": {
  "data": {
   "shadows": "pyarrow.lib.py_buffer"
  },
  "type": "import"
 },
 "pyarrow.serialization.register_default_serialization_handlers": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "collections.defaultdict",
    "int",
    "long",
    "numpy.ndarray",
    "pyarrow.serialization._deserialize_numpy_array_list",
    "pyarrow.serialization._register_custom_pandas_handlers",
    "pyarrow.serialization._serialize_numpy_array_list",
    "pyarrow.serialization.sys",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.register_default_serialization_handlers._deserialize_default_dict": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "collections.defaultdict",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.register_default_serialization_handlers._deserialize_ordered_dict": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.register_default_serialization_handlers._serialize_default_dict": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.register_default_serialization_handlers._serialize_ordered_dict": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "list"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.register_torch_serialization_handlers": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.serialization.torch"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.register_torch_serialization_handlers._deserialize_torch_tensor": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "pyarrow.serialization.torch"
   ]
  },
  "type": "function"
 },
 "pyarrow.serialization.register_torch_serialization_handlers._serialize_torch_tensor": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "pyarrow.serialization.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyarrow.serialization.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.serialization.torch": {
  "data": {
   "shadows": "torch"
  },
  "type": "import"
 },
 "pyarrow.serialize": {
  "data": {
   "shadows": "pyarrow.lib.serialize"
  },
  "type": "import"
 },
 "pyarrow.serialize_pandas": {
  "data": {
   "shadows": "pyarrow.ipc.serialize_pandas"
  },
  "type": "import"
 },
 "pyarrow.serialize_to": {
  "data": {
   "shadows": "pyarrow.lib.serialize_to"
  },
  "type": "import"
 },
 "pyarrow.set_cpu_count": {
  "data": {
   "shadows": "pyarrow.lib.set_cpu_count"
  },
  "type": "import"
 },
 "pyarrow.set_memory_pool": {
  "data": {
   "shadows": "pyarrow.lib.set_memory_pool"
  },
  "type": "import"
 },
 "pyarrow.setuptools_scm": {
  "data": {
   "shadows": "setuptools_scm"
  },
  "type": "import"
 },
 "pyarrow.setuptools_scm.git": {
  "data": {
   "shadows": "setuptools_scm.git"
  },
  "type": "import"
 },
 "pyarrow.string": {
  "data": {
   "shadows": "pyarrow.lib.string"
  },
  "type": "import"
 },
 "pyarrow.struct": {
  "data": {
   "shadows": "pyarrow.lib.struct"
  },
  "type": "import"
 },
 "pyarrow.tests": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.conftest": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.tests.conftest.defaults"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.conftest.defaults": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyarrow.tests.conftest.groups": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "pyarrow.tests.conftest.mark": {
  "data": {
   "shadows": "pytest.mark"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.plasma": {
  "data": {
   "shadows": "pyarrow.plasma"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pyarrow.parquet": {
  "data": {
   "shadows": "pyarrow.parquet"
  },
  "type": "import"
 },
 "pyarrow.tests.conftest.pytest_addoption": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "pyarrow.tests.conftest.defaults",
    "pyarrow.tests.conftest.groups"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_collection_modifyitems": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pytest.mark.skip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_configure": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_runtest_setup": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "getattr",
    "pyarrow.tests.conftest.groups",
    "pytest.skip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.conftest.skip": {
  "data": {
   "shadows": "pytest.skip"
  },
  "type": "import"
 },
 "pyarrow.tests.deserialize_buffer": {
  "data": {
   "symbols_in_volume": [
    "open",
    "pyarrow.deserialize",
    "pyarrow.tests.deserialize_buffer.data",
    "pyarrow.tests.deserialize_buffer.sys"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.deserialize_buffer.data": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyarrow.tests.deserialize_buffer.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.deserialize_buffer.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.pandas_examples.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_arrays": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "numpy.arange",
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_lists": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "numpy.array",
    "numpy.int64",
    "pandas.DataFrame",
    "pyarrow.binary",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.pandas_examples.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.pandas_examples.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_array._check_cast_case": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.fmt": {
  "data": {
   "shadows": "pyarrow.formatting"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.get_logical_type": {
  "data": {
   "shadows": "pyarrow.pandas_compat.get_logical_type"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.pickle5": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyarrow.tests.test_array.pickle_test_parametrize": {
  "data": {
   "lineno": 640
  },
  "type": "constant"
 },
 "pyarrow.tests.test_array.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_array.test_array_conversions_no_sentinel_values": {
  "data": {
   "lineno": 752,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.tests.test_array.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_eq_raises": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_factory_invalid_type": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.tests.test_array.datetime",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_buffers": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "numpy.int16",
    "numpy.uint8",
    "pyarrow.Array.from_buffers",
    "pyarrow.int16",
    "pyarrow.list_",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_ascii": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_datetimeD": {
  "data": {
   "lineno": 766,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.tests.test_array.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_unicode": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_py_float32": {
  "data": {
   "lineno": 774,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float32",
    "pandas.Series",
    "pyarrow.array",
    "pyarrow.float32",
    "pyarrow.list_"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_getitem": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_iter": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.array",
    "pyarrow.tests.test_array.collections",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_pickle": {
  "data": {
   "lineno": 656,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.pickle",
    "pyarrow.tests.test_array.pickle_test_parametrize",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_pickle5": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.pickle",
    "pyarrow.tests.test_array.pickle5",
    "pyarrow.tests.test_array.pickle_test_parametrize",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_ref_to_ndarray_base": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.tests.test_array.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_slice": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_uint64_from_py_over_range": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.uint64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_buffers_nested": {
  "data": {
   "lineno": 889,
   "symbols_in_volume": [
    "bytearray",
    "len",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.struct",
    "pyarrow.tests.test_array.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_buffers_primitive": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": [
    "bytearray",
    "len",
    "numpy.int8",
    "pyarrow.array",
    "pyarrow.int16",
    "pyarrow.tests.test_array.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_column": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.column",
    "pyarrow.float64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_date32_to_int": {
  "data": {
   "lineno": 614,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_date64_to_int": {
  "data": {
   "lineno": 630,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.date64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_integers_safe": {
  "data": {
   "lineno": 453,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.uint16",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_integers_unsafe": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.int16",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.uint16"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_signed_to_unsigned": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.tests.test_array._check_cast_case",
    "pyarrow.uint16",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_time32_to_int": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.time32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_time64_to_int": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.time64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_timestamp_to_int": {
  "data": {
   "lineno": 605,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.array",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_timestamp_unit": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "ValueError",
    "pandas.Series",
    "pyarrow.Array.from_pandas",
    "pyarrow.array",
    "pyarrow.tests.test_array.datetime",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_constructor_raises": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_encode_simple": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.column"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_arrays_boundscheck": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "pyarrow.ArrowException",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_boxed_arrays": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.repeat",
    "object",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_numpy": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.repeat",
    "object",
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.NULL",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_with_pandas": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.repeat",
    "numpy.where",
    "object",
    "pandas.Categorical.from_codes",
    "pandas.Series",
    "pandas.util.testing.assert_series_equal",
    "pyarrow.DictionaryArray.from_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_getitem_NULL": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyarrow.NULL",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_invalid_tensor_construction": {
  "data": {
   "lineno": 930,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Tensor",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_invalid_tensor_constructor_repr": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Tensor",
    "pyarrow.tests.test_array.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_format": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.formatting.array_format"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_from_arrays": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "numpy.array",
    "pyarrow.ListArray.from_arrays",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_logical_type": {
  "data": {
   "lineno": 713,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.decimal128",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.pandas_compat.get_logical_type",
    "pyarrow.string",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_long_array_format": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.formatting.array_format",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_nested_dictionary_array": {
  "data": {
   "lineno": 973,
   "symbols_in_volume": [
    "pyarrow.DictionaryArray.from_arrays",
    "pyarrow.ListArray.from_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_format": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.formatting.array_format"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_from_buffers": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "len",
    "pyarrow.StringArray.from_buffers",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_flatten": {
  "data": {
   "lineno": 935,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_slice": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int8",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_timestamp_units_from_list": {
  "data": {
   "lineno": 983,
   "symbols_in_volume": [
    "numpy.datetime64",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_roundtrip": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.testing.assert_array_equal",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_unsupported_types": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "NotImplementedError",
    "pyarrow.array",
    "pyarrow.tests.test_array.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_numpy_zero_copy": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.testing.assert_array_equal",
    "pyarrow.array",
    "pyarrow.tests.test_array.gc",
    "pyarrow.tests.test_array.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_pandas_zero_copy": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_array.gc",
    "pyarrow.tests.test_array.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_total_bytes_allocated": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_array_slice": {
  "data": {
   "lineno": 394,
   "symbols_in_volume": [
    "len",
    "pyarrow.UnionArray.from_dense",
    "pyarrow.UnionArray.from_sparse",
    "pyarrow.array",
    "pyarrow.int8",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_dense": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "pyarrow.UnionArray.from_dense",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_sparse": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "pyarrow.UnionArray.from_sparse",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.test_unique_simple": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.column"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_array.tm": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "pyarrow.tests.test_builder": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_builder.StringBuilder": {
  "data": {
   "shadows": "pyarrow.lib.StringBuilder"
  },
  "type": "import"
 },
 "pyarrow.tests.test_builder.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_builder.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_builder.test_string_builder_append": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "isinstance",
    "len",
    "numpy.nan",
    "pyarrow.Array",
    "pyarrow.lib.StringBuilder"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_builder.test_string_builder_append_after_finish": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "numpy.nan",
    "pyarrow.lib.StringBuilder"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_builder.test_string_builder_append_values": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.nan",
    "pyarrow.lib.StringBuilder"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin": {
  "data": {
   "symbols_in_volume": [
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.tests.test_convert_builtin._as_deque",
    "pyarrow.tests.test_convert_builtin._as_dict_values",
    "pyarrow.tests.test_convert_builtin._as_list",
    "pyarrow.tests.test_convert_builtin._as_tuple",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "zip"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable": {
  "data": {
   "lineno": 47
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable.__init__": {
  "data": {
   "lineno": 48
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable.__iter__": {
  "data": {
   "lineno": 51
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_deque": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_builtin.collections"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_dict_values": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.tests.test_convert_builtin.six"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_list": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_tuple": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.check_struct_type": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "pyarrow.types.is_struct",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.int_type_pairs": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyarrow.tests.test_convert_builtin.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "pyarrow.tests.test_convert_builtin.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.pytz": {
  "data": {
   "shadows": "pytz"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.six": {
  "data": {
   "shadows": "six"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.test_datetime_subclassing": {
  "data": {
   "lineno": 544,
   "symbols_in_volume": [
    "MyDate",
    "MyDatetime",
    "len",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_datetime_subclassing.MyDate": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_builtin.datetime"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.test_datetime_subclassing.MyDatetime": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": [
    "pyarrow.tests.test_convert_builtin.datetime"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.test_decimal_array_with_none_and_nan": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_iterable": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.null",
    "pyarrow.tests.test_convert_builtin.StrangeIterable"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_list": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.null",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_range": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.null",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_fixed_size_bytes_does_not_accept_varying_lengths": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.binary",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_garbage_collection": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.gc",
    "pyarrow.total_allocated_bytes"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_infinite_iterator": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_convert_builtin.itertools"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_iterable_types": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.StrangeIterable"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_iterator_without_size": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "iter",
    "pyarrow.array",
    "pyarrow.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_size_overflow": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "iter",
    "pyarrow.array",
    "pyarrow.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_size_underflow": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "iter",
    "pyarrow.array",
    "pyarrow.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_types": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "iter",
    "pyarrow.array",
    "pyarrow.int64",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_list_with_non_list": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "pyarrow.ArrowTypeError",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_ndarray_nested_numpy_double": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "inner_seq",
    "len",
    "list",
    "numpy.array",
    "numpy.nan",
    "numpy.testing.assert_equal",
    "pyarrow.array",
    "pyarrow.float64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_arrays": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "int",
    "len",
    "numpy.array",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_nested_lists": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_range_types": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_all_none": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.null",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_boolean": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_bytes": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "bytearray",
    "len",
    "pyarrow.array",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_date": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.date64",
    "pyarrow.tests.test_convert_builtin.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_date32": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "len",
    "pyarrow.ArrowException",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal": {
  "data": {
   "lineno": 679,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_different_precisions": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_large_integer": {
  "data": {
   "lineno": 716,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_negative": {
  "data": {
   "lineno": 702,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_no_scale": {
  "data": {
   "lineno": 695,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_no_whole_part": {
  "data": {
   "lineno": 709,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.decimal128",
    "pyarrow.tests.test_convert_builtin.decimal",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_double": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.float64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_fixed_size_bytes": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "bytearray",
    "len",
    "pyarrow.array",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": [
    "len",
    "numpy.iinfo",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_inferred": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_nested_np_nan": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_np_nan": {
  "data": {
   "lineno": 228,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_mixed_types_fails": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "pyarrow.ArrowTypeError",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_mixed_types_with_specified_type_fails": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.string",
    "pyarrow.tests.test_convert_builtin.pytest",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_nesting_levels": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_boolean": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "len",
    "numpy.bool",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_double": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "len",
    "np_scalar",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.isnan",
    "numpy.nan",
    "pyarrow.array",
    "pyarrow.float64",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_integer": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "len",
    "np_scalar",
    "numpy.iinfo",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_integer_inferred": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "len",
    "np_scalar",
    "numpy.iinfo",
    "numpy.int64",
    "numpy.uint64",
    "pyarrow.array",
    "pyarrow.int64",
    "pyarrow.tests.test_convert_builtin.int_type_pairs",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "pyarrow.tests.test_convert_builtin.pytest",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_timestamp": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "len",
    "numpy.datetime64",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_from_int_with_unit": {
  "data": {
   "lineno": 593,
   "symbols_in_volume": [
    "CustomClass",
    "len",
    "pyarrow.ArrowException",
    "pyarrow.array",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.timestamp",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_from_int_with_unit.CustomClass": {
  "data": {
   "lineno": 626
  },
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_with_unit": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.datetime",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_types": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.parametrize_with_iterable_types",
    "seq"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_unicode": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "len",
    "pyarrow.array",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_utf8_to_unicode": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.string",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_signed_integer_overflow": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "pyarrow",
    "pyarrow.ArrowException",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts": {
  "data": {
   "lineno": 756,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts_inference": {
  "data": {
   "lineno": 820,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_convert_builtin.check_struct_type",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_mixed_sequence": {
  "data": {
   "lineno": 809,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_tuples": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_structarray": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.int64",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_structarray_from_arrays_coerce": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.StructArray.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_timezone_string": {
  "data": {
   "lineno": 898,
   "symbols_in_volume": [
    "pyarrow.lib.string_to_tzinfo",
    "pyarrow.lib.tzinfo_to_string",
    "pyarrow.tests.test_convert_builtin.pytest",
    "pyarrow.tests.test_convert_builtin.pytz"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_unsigned_integer_overflow": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "pyarrow",
    "pyarrow.ArrowException",
    "pyarrow.array",
    "pyarrow.tests.test_convert_builtin.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_convert_builtin.unittest": {
  "data": {
   "shadows": "pyarrow.compat.unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.tests.test_cython.os"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_cython.here": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cython.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.setup_template": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyarrow.tests.test_cython.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_cython.test_cython_api": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "TypeError",
    "__import__",
    "open",
    "pyarrow.array",
    "pyarrow.tests.test_cython.here",
    "pyarrow.tests.test_cython.os",
    "pyarrow.tests.test_cython.pytest",
    "pyarrow.tests.test_cython.setup_template",
    "pyarrow.tests.test_cython.shutil",
    "pyarrow.tests.test_cython.subprocess",
    "pyarrow.tests.test_cython.sys",
    "pyarrow.tests.util.get_modified_env_with_pythonpath",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_cython.test_util": {
  "data": {
   "shadows": "pyarrow.tests.util"
  },
  "type": "import"
 },
 "pyarrow.tests.test_deprecations": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_deprecations.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_deprecations.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_feather.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.FeatherDataset": {
  "data": {
   "shadows": "pyarrow.feather.FeatherDataset"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.FeatherReader": {
  "data": {
   "shadows": "pyarrow.feather.FeatherReader"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.FeatherWriter": {
  "data": {
   "shadows": "pyarrow.lib.FeatherWriter"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.TestFeatherReader": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.unittest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._assert_error_on_write": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._assert_error_on_write.f": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pyarrow.feather.write_feather"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._check_pandas_roundtrip": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Exception",
    "len",
    "numpy.testing.assert_array_equal",
    "numpy.zeros",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.feather.read_feather",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.os",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._get_null_counts": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyarrow.feather.FeatherReader",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.setUp": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.tearDown": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_all_none": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_all_null_category": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_no_nulls": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.random.seed",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_nulls": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.seed",
    "object",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.feather.read_feather",
    "pyarrow.lib.FeatherWriter",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_object_nulls": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "numpy.array",
    "object",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_buffer_bounds_error": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.array",
    "pyarrow.feather.read_feather",
    "pyarrow.float64",
    "pyarrow.lib.FeatherWriter",
    "pyarrow.tests.test_feather.random_path",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_category": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.Categorical",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_dataset": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "enumerate",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.feather.FeatherDataset",
    "pyarrow.lib.FeatherWriter",
    "pyarrow.tests.test_feather.random_path",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_delete_partial_file_on_error": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "CustomClass",
    "Exception",
    "numpy.nan",
    "pandas.DataFrame",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.os",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path",
    "pyarrow.tests.test_feather.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_delete_partial_file_on_error.CustomClass": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_duplicate_columns": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "numpy.arange",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_empty_strings": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_file_not_exist": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyarrow.ArrowIOError",
    "pyarrow.feather.FeatherReader",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_filelike_objects": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "io.BytesIO",
    "numpy.arange",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.feather.read_feather",
    "pyarrow.feather.write_feather"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_float_no_nulls": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_float_nulls": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.random.randint",
    "numpy.random.randn",
    "numpy.testing.assert_array_equal",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.feather.read_feather",
    "pyarrow.lib.FeatherWriter",
    "pyarrow.tests.test_feather.random_path",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_integer_no_nulls": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_integer_with_nulls": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "dict",
    "numpy.nan",
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.feather.read_feather",
    "pyarrow.lib.FeatherWriter",
    "pyarrow.tests.test_feather.random_path",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_large_dataframe": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": [
    "numpy.arange",
    "pandas.DataFrame",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_multithreaded_read": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_nan_as_null": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_non_string_columns": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_num_rows_attr": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pyarrow.feather.FeatherReader",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_out_of_float64_timestamp_with_nulls": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.DatetimeIndex"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_overwritten_file": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.random.seed",
    "pandas.DataFrame",
    "pyarrow.feather.write_feather",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_platform_numpy_integers": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_read_columns": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_read_table": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.Table.from_pandas",
    "pyarrow.feather.read_table",
    "pyarrow.lib.FeatherWriter",
    "pyarrow.tests.test_feather.random_path",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_sparse_dataframe": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_strings": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "numpy.nan",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timedelta_with_nulls": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "NotImplementedError",
    "pandas.DataFrame",
    "pandas.Timedelta",
    "pyarrow.tests.test_feather.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timestamp": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.date_range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timestamp_with_nulls": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.datetime"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_unicode_filename": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_feather.os",
    "pyarrow.tests.test_feather.pytest",
    "pyarrow.tests.test_feather.random_path"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_unsupported": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "pandas.DataFrame",
    "pandas.period_range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.random_path": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pyarrow.tests.test_feather.tempfile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_feather.read_feather": {
  "data": {
   "shadows": "pyarrow.feather.read_feather"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.read_table": {
  "data": {
   "shadows": "pyarrow.feather.read_table"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_feather.write_feather": {
  "data": {
   "shadows": "pyarrow.feather.write_feather"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_io.BufferedIOBase": {
  "data": {
   "shadows": "io.BufferedIOBase"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.BytesIO": {
  "data": {
   "shadows": "io.BytesIO"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.IOBase": {
  "data": {
   "shadows": "io.IOBase"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.TextIOWrapper": {
  "data": {
   "shadows": "io.TextIOWrapper"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io._check_native_file_reader": {
  "data": {
   "lineno": 655,
   "symbols_in_volume": [
    "FACTORY",
    "len",
    "pyarrow.tests.test_io.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io._try_delete": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "pyarrow.tests.test_io.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.check_large_seeks": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "file_factory",
    "open",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "pyarrow.tests.test_io.sys",
    "pyarrow.tests.test_io.tempfile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.guid": {
  "data": {
   "shadows": "pyarrow.compat.guid"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.sample_disk_data": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "numpy.random.randint",
    "open",
    "pyarrow.compat.guid",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.sample_disk_data.teardown": {
  "data": {
   "lineno": 648,
   "symbols_in_volume": [
    "pyarrow.tests.test_io._try_delete"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.test_allocate_buffer": {
  "data": {
   "lineno": 463,
   "symbols_in_volume": [
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.allocate_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_allocate_buffer_resizable": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ResizableBuffer",
    "pyarrow.allocate_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_address": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "bytearray",
    "numpy.arange",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytearray": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "bytearray",
    "isinstance",
    "pyarrow.Buffer",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytes": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Buffer",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "bytearray",
    "eq",
    "ne",
    "numpy.frombuffer",
    "numpy.int16",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals.eq": {
  "data": {
   "lineno": 366
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals.ne": {
  "data": {
   "lineno": 371
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_from_numpy": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.int8",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_getitem": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "IndexError",
    "bytearray",
    "len",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_hashing": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_invalid": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "isinstance",
    "memoryview",
    "pyarrow.Buffer",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview_is_immutable": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "isinstance",
    "memoryview",
    "pyarrow.Buffer",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "make_buffer",
    "pyarrow.tests.test_io.gc",
    "pyarrow.tests.test_io.sys",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting.make_buffer": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "bytearray",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_slicing": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_to_numpy": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "bytearray",
    "numpy.frombuffer",
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_non_bytes": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.BufferReader",
    "pyarrow.compat.u",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "get_buffer",
    "pyarrow.tests.test_io.gc"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference.get_buffer": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "pyarrow.BufferReader"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compress_decompress": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "ValueError",
    "bytes",
    "isinstance",
    "numpy.random.randint",
    "numpy.uint8",
    "pyarrow.compress",
    "pyarrow.decompress",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_foreign_buffer": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.frombuffer",
    "numpy.int32",
    "pyarrow.foreign_buffer",
    "pyarrow.tests.test_io.weakref",
    "wr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_inmemory_write_after_closed": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.BufferOutputStream",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_large_seeks": {
  "data": {
   "lineno": 790,
   "symbols_in_volume": [
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.check_large_seeks"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_reader": {
  "data": {
   "lineno": 686,
   "symbols_in_volume": [
    "pyarrow.memory_map",
    "pyarrow.tests.test_io._check_native_file_reader",
    "pyarrow.tests.test_io.sample_disk_data"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_resize": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": [
    "numpy.random.randint",
    "numpy.uint8",
    "open",
    "pyarrow.compat.guid",
    "pyarrow.create_memory_map",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_retain_buffer_reference": {
  "data": {
   "lineno": 690,
   "symbols_in_volume": [
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.gc",
    "pyarrow.tests.test_io.sample_disk_data"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_writer": {
  "data": {
   "lineno": 721,
   "symbols_in_volume": [
    "IOError",
    "numpy.random.randint",
    "open",
    "pyarrow.compat.guid",
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_output_stream": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferOutputStream",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_pool_cannot_use_ctor": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.MemoryPool",
    "pyarrow.ProxyMemoryPool",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_zero_length": {
  "data": {
   "lineno": 782,
   "symbols_in_volume": [
    "open",
    "pyarrow.compat.guid",
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_mock_output_stream": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "len",
    "pandas.DataFrame",
    "pyarrow.BufferOutputStream",
    "pyarrow.MockOutputStream",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.RecordBatchStreamWriter",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_TextIOWrapper": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "io.TextIOWrapper",
    "list",
    "open",
    "pyarrow.OSFile",
    "pyarrow.compat.guid",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_modes": {
  "data": {
   "lineno": 814,
   "symbols_in_volume": [
    "open",
    "pyarrow.OSFile",
    "pyarrow.compat.guid",
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_raises_ValueError_after_close": {
  "data": {
   "lineno": 865,
   "symbols_in_volume": [
    "ValueError",
    "getattr",
    "open",
    "pyarrow.OSFile",
    "pyarrow.compat.guid",
    "pyarrow.memory_map",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_nativefile_write_memoryview": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "bytearray",
    "numpy.frombuffer",
    "pyarrow.BufferOutputStream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_large_seeks": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "pyarrow.OSFile",
    "pyarrow.tests.test_io.check_large_seeks"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_reader": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "pyarrow.OSFile",
    "pyarrow.tests.test_io._check_native_file_reader",
    "pyarrow.tests.test_io.sample_disk_data"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_writer": {
  "data": {
   "lineno": 794,
   "symbols_in_volume": [
    "IOError",
    "numpy.random.randint",
    "open",
    "pyarrow.OSFile",
    "pyarrow.compat.guid",
    "pyarrow.tests.test_io.os",
    "pyarrow.tests.test_io.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_closing": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "io.BytesIO",
    "pyarrow.PythonFile",
    "pyarrow.tests.test_io.weakref",
    "wr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_correct_abc": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "io.BufferedIOBase",
    "io.BytesIO",
    "io.IOBase",
    "isinstance",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_implicit_mode": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "io.BytesIO",
    "open",
    "pyarrow.PythonFile",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_iterable": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "io.BytesIO",
    "pyarrow.PythonFile",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_large_seeks": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "pyarrow.tests.test_io.check_large_seeks"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_large_seeks.factory": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "open",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_read": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_readall": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "io.BytesIO",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_readinto": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "bytearray",
    "io.BytesIO",
    "len",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_write": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "io.BytesIO",
    "len",
    "pyarrow.PythonFile"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_writelines": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "open",
    "pyarrow.PythonFile",
    "pyarrow.tests.test_io.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.test_uninitialized_buffer": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Buffer",
    "pyarrow.tests.test_io.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_io.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_io.weakref": {
  "data": {
   "shadows": "weakref"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_ipc.FileFormatFixture": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.IpcFixture"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.FileFormatFixture._check_roundtrip": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pyarrow.BufferReader",
    "pyarrow.open_file"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.FileFormatFixture._get_writer": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "pyarrow.RecordBatchFileWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.IpcFixture": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.IpcFixture.__init__": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.io"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.IpcFixture.get_sink": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.IpcFixture.get_source": {
  "data": {
   "lineno": 42
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.IpcFixture.write_batches": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "len",
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_batches",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessageFixture": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.IpcFixture"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.MessageFixture._get_writer": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pyarrow.RecordBatchStreamWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.IpcFixture"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture.__init__": {
  "data": {
   "lineno": 408
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture._get_writer": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "pyarrow.RecordBatchStreamWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture.get_sink": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture.start_server": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.StreamReaderServer",
    "pyarrow.tests.test_ipc.socket"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.SocketStreamFixture.stop_and_get_result": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.StreamFormatFixture": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.IpcFixture"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.StreamFormatFixture._get_writer": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "pyarrow.RecordBatchStreamWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.StreamReaderServer": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.threading"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_ipc.StreamReaderServer.get_result": {
  "data": {
   "lineno": 401
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.StreamReaderServer.init": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.socket"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.StreamReaderServer.run": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.open_stream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc._check_serialize_pandas_round_trip": {
  "data": {
   "lineno": 508,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.deserialize_pandas",
    "pyarrow.serialize_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.assert_series_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_series_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.example_messages": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "list",
    "pyarrow.BufferReader",
    "pyarrow.MessageReader.open_stream",
    "pyarrow.tests.test_ipc.pytest",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.file_fixture": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.FileFormatFixture",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.io": {
  "data": {
   "shadows": "io"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.ipc_fixture": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.IpcFixture",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.read_file": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "pyarrow.open_file",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.socket_fixture": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.SocketStreamFixture",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.stream_fixture": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.StreamFormatFixture",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.struct": {
  "data": {
   "shadows": "struct"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.test_empty_file": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.BufferReader",
    "pyarrow.open_file",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_empty_stream": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.open_stream",
    "pyarrow.tests.test_ipc.io",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_pathlib": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "open",
    "pyarrow.OSFile",
    "pyarrow.open_file",
    "pyarrow.tests.test_ipc.file_fixture",
    "pyarrow.tests.test_ipc.pathlib",
    "pyarrow.tests.test_ipc.pytest",
    "pyarrow.tests.test_ipc.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_read_all": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.Table.from_batches",
    "pyarrow.open_file",
    "pyarrow.tests.test_ipc.FileFormatFixture",
    "pyarrow.tests.test_ipc.io",
    "pyarrow.tests.test_ipc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_read_pandas": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.BufferReader",
    "pyarrow.open_file",
    "pyarrow.tests.test_ipc.file_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_simple_roundtrip": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.file_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_file_write_table": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "pyarrow.tests.test_ipc.file_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_get_record_batch_size": {
  "data": {
   "lineno": 499,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.get_record_batch_size"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_ipc_stream_no_batches": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "len",
    "pyarrow.BufferOutputStream",
    "pyarrow.RecordBatchStreamWriter",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.open_stream"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_ipc_zero_copy_numpy": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.BufferOutputStream",
    "pyarrow.BufferReader",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.tests.test_ipc.read_file",
    "pyarrow.tests.test_ipc.write_file"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_message_ctors_no_segfault": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Message",
    "pyarrow.MessageReader",
    "pyarrow.tests.test_ipc.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_message_read_record_batch": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "pyarrow.read_record_batch",
    "pyarrow.tests.test_ipc.example_messages",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_message_reader": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_ipc.example_messages"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_message_serialize_read_message": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.read_message",
    "pyarrow.tests.test_ipc.example_messages"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_open_file_from_buffer": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.RecordBatchFileReader",
    "pyarrow.open_file",
    "pyarrow.tests.test_ipc.file_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_open_stream_from_buffer": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.RecordBatchStreamReader",
    "pyarrow.open_stream",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pyarrow.tests.test_ipc._check_serialize_pandas_round_trip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_multi_index": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pandas.MultiIndex.from_arrays",
    "pyarrow.tests.test_ipc._check_serialize_pandas_round_trip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_not_string_columns": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.deserialize_pandas",
    "pyarrow.serialize_pandas",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_nthreads": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "list",
    "pandas.DataFrame",
    "pandas.Index",
    "pyarrow.tests.test_ipc._check_serialize_pandas_round_trip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_schema_batch_serialize_methods": {
  "data": {
   "lineno": 594,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.read_record_batch",
    "pyarrow.read_schema"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_schema_serialization_with_metadata": {
  "data": {
   "lineno": 609,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int8",
    "pyarrow.read_schema",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_serialize_pandas_empty_dataframe": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pyarrow.tests.test_ipc._check_serialize_pandas_round_trip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_serialize_pandas_no_preserve_index": {
  "data": {
   "lineno": 560,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.deserialize_pandas",
    "pyarrow.serialize_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_serialize_with_pandas_objects": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pandas.util.testing.assert_series_equal",
    "pyarrow.deserialize",
    "pyarrow.serialize"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_socket_read_all": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": [
    "pyarrow.Table.from_batches",
    "pyarrow.tests.test_ipc.socket_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_socket_simple_roundtrip": {
  "data": {
   "lineno": 441,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pyarrow.tests.test_ipc.socket_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_categorical_roundtrip": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.BufferReader",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.open_stream",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_read_all": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.Table.from_batches",
    "pyarrow.open_stream",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_read_pandas": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.open_stream",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_simple_roundtrip": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "StopIteration",
    "enumerate",
    "len",
    "pyarrow.BufferReader",
    "pyarrow.open_stream",
    "pyarrow.tests.test_ipc.pytest",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_write_dispatch": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "numpy.nan",
    "numpy.random.randn",
    "pandas.Categorical",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.BufferReader",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_pandas",
    "pyarrow.open_stream",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_stream_write_table_batches": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "len",
    "list",
    "map",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_batches",
    "pyarrow.open_stream",
    "pyarrow.tests.test_ipc.stream_fixture"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_ipc.threading": {
  "data": {
   "shadows": "threading"
  },
  "type": "import"
 },
 "pyarrow.tests.test_ipc.write_file": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": [
    "pyarrow.RecordBatchFileWriter"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.tests.test_jvm.pytest"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_jvm.ET": {
  "data": {
   "shadows": "xml.etree.ElementTree"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm._jvm_field": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pyarrow.tests.test_jvm.jpype"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm._string_to_varchar_holder": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "len",
    "pyarrow.tests.test_jvm.jpype"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.jpype": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyarrow.tests.test_jvm.json": {
  "data": {
   "shadows": "json"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.pa_jvm": {
  "data": {
   "shadows": "pyarrow.jvm"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.root_allocator": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "pyarrow.tests.test_jvm.jpype",
    "pyarrow.tests.test_jvm.os",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.tests.test_jvm.sys",
    "xml.etree.ElementTree.parse"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_jvm.test_jvm_array": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "list",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.jvm.array",
    "pyarrow.tests.test_jvm.jpype",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.tests.test_jvm.root_allocator",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint8",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_buffer": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "pyarrow.jvm.jvm_buffer",
    "pyarrow.tests.test_jvm.root_allocator",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_string_array": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.array",
    "pyarrow.jvm.array",
    "pyarrow.string",
    "pyarrow.tests.test_jvm._string_to_varchar_holder",
    "pyarrow.tests.test_jvm.jpype",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.tests.test_jvm.root_allocator"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_jvm.test_jvm_types": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.decimal128",
    "pyarrow.field",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.jvm.field",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.tests.test_jvm._jvm_field",
    "pyarrow.tests.test_jvm.json",
    "pyarrow.tests.test_jvm.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_misc.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_misc.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_misc.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_misc.test_cpu_count": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pyarrow.cpu_count",
    "pyarrow.set_cpu_count"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_extension_type_constructor_errors": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "TypeError",
    "klass",
    "pyarrow.Array",
    "pyarrow.ArrayValue",
    "pyarrow.BinaryArray",
    "pyarrow.BinaryValue",
    "pyarrow.BooleanArray",
    "pyarrow.BooleanValue",
    "pyarrow.Buffer",
    "pyarrow.ChunkedArray",
    "pyarrow.Column",
    "pyarrow.Date32Array",
    "pyarrow.Date32Value",
    "pyarrow.Date64Array",
    "pyarrow.Date64Value",
    "pyarrow.Decimal128Array",
    "pyarrow.DecimalValue",
    "pyarrow.DictionaryArray",
    "pyarrow.DictionaryValue",
    "pyarrow.DoubleValue",
    "pyarrow.Field",
    "pyarrow.FixedSizeBinaryArray",
    "pyarrow.FixedSizeBinaryValue",
    "pyarrow.FloatValue",
    "pyarrow.FloatingPointArray",
    "pyarrow.HalfFloatValue",
    "pyarrow.Int16Array",
    "pyarrow.Int16Value",
    "pyarrow.Int32Array",
    "pyarrow.Int32Value",
    "pyarrow.Int64Array",
    "pyarrow.Int64Value",
    "pyarrow.Int8Array",
    "pyarrow.Int8Value",
    "pyarrow.IntegerArray",
    "pyarrow.ListArray",
    "pyarrow.ListValue",
    "pyarrow.NullArray",
    "pyarrow.NumericArray",
    "pyarrow.RecordBatch",
    "pyarrow.Schema",
    "pyarrow.StringArray",
    "pyarrow.StringValue",
    "pyarrow.StructArray",
    "pyarrow.StructValue",
    "pyarrow.Table",
    "pyarrow.Tensor",
    "pyarrow.Time32Array",
    "pyarrow.Time32Value",
    "pyarrow.Time64Array",
    "pyarrow.Time64Value",
    "pyarrow.TimestampArray",
    "pyarrow.TimestampValue",
    "pyarrow.UInt16Array",
    "pyarrow.UInt16Value",
    "pyarrow.UInt32Array",
    "pyarrow.UInt32Value",
    "pyarrow.UInt64Array",
    "pyarrow.UInt64Value",
    "pyarrow.UInt8Array",
    "pyarrow.UInt8Value",
    "pyarrow.UnionArray",
    "pyarrow.UnionValue",
    "pyarrow.lib.DataType",
    "pyarrow.lib.Decimal128Type",
    "pyarrow.lib.DictionaryType",
    "pyarrow.lib.FixedSizeBinaryType",
    "pyarrow.lib.ListType",
    "pyarrow.lib.StructType",
    "pyarrow.lib.Time32Type",
    "pyarrow.lib.Time64Type",
    "pyarrow.lib.TimestampType",
    "pyarrow.lib.UnionType",
    "pyarrow.tests.test_misc.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_misc.test_get_include": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "pyarrow.get_include",
    "pyarrow.tests.test_misc.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.os"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "object",
    "pyarrow.tests.test_plasma.USE_VALGRIND",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.setup_method": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.USE_VALGRIND"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.teardown_method": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.signal",
    "pyarrow.tests.test_plasma.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_buffer_lifetime": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.MockOutputStream",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.RecordBatchStreamReader",
    "pyarrow.RecordBatchStreamWriter",
    "pyarrow.array",
    "pyarrow.int32",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_connection_failure_raises_exception": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "IOError",
    "pyarrow.plasma.connect",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_contains": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_existing": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "pyarrow.lib.ArrowException",
    "pyarrow.tests.test_plasma.generate_metadata",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_with_metadata": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "len",
    "numpy.frombuffer",
    "pyarrow.tests.test_plasma.generate_metadata",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_evict": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_get": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "numpy.testing.assert_equal",
    "pyarrow.tests.test_plasma.create_object_with_id",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_hash": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "pyarrow.lib.ArrowException",
    "pyarrow.tests.test_plasma.generate_metadata",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_illegal_functionality": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "Exception",
    "illegal_assignment",
    "pyarrow.tests.test_plasma.pytest",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_illegal_functionality.illegal_assignment": {
  "data": {
   "lineno": 591,
   "symbols_in_volume": [
    "chr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_many_hashes": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "len",
    "numpy.frombuffer",
    "pyarrow.tests.test_plasma.random_object_id",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_pickle_object_ids": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.pickle",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "pyarrow.plasma.ObjectID.from_random",
    "pyarrow.plasma.ObjectNotAvailable"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "CustomType",
    "pyarrow.ArrowSerializationError",
    "pyarrow.SerializationContext",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context.CustomType": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context.CustomType.__init__": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_arrow_objects": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_equal",
    "pyarrow.BufferReader",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.get_tensor_size",
    "pyarrow.read_tensor",
    "pyarrow.tests.test_plasma.random_object_id",
    "pyarrow.write_tensor"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_full": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "assert_create_raises_plasma_full",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.create_object"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_full.assert_create_raises_plasma_full": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pyarrow.lib.ArrowException",
    "pyarrow.tests.test_plasma.create_object"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_pandas_dataframe": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "numpy.random.bytes",
    "pandas.DataFrame",
    "pandas.Series",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.BufferReader",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.MockOutputStream",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.RecordBatchStreamReader",
    "pyarrow.RecordBatchStreamWriter",
    "pyarrow.plasma.ObjectID"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe": {
  "data": {
   "lineno": 639,
   "symbols_in_volume": [
    "bytearray",
    "numpy.random.bytes",
    "numpy.random.randint",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe_deletions": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "bytearray",
    "numpy.random.bytes",
    "numpy.random.randint",
    "pyarrow.tests.test_plasma.random_object_id",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_use_one_memory_mapped_file": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pyarrow.lib.PlasmaStoreFull",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.create_object",
    "pyarrow.tests.test_plasma.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.USE_VALGRIND": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "pyarrow.tests.test_plasma.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.assert_get_object_equal": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "pyarrow.plasma.buffers_equal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.create_object": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.create_object_with_id",
    "pyarrow.tests.test_plasma.random_object_id"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.create_object_with_id": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.generate_metadata",
    "pyarrow.tests.test_plasma.write_to_data_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.generate_metadata": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "bytearray",
    "pyarrow.tests.test_plasma.random",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.plasma": {
  "data": {
   "shadows": "pyarrow.plasma"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.random_name": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyarrow.tests.test_plasma.random",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.random_object_id": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.random.bytes",
    "pyarrow.plasma.ObjectID"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.signal": {
  "data": {
   "shadows": "signal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma.test_object_id_equality_operators": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "pyarrow.plasma.ObjectID",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_object_id_size": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.plasma.ObjectID",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_plasma_client_sharing": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.DEFAULT_PLASMA_STORE_MEMORY",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_use_huge_pages": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.tests.test_plasma.create_object",
    "pyarrow.tests.test_plasma.os",
    "pyarrow.tests.test_plasma.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma.write_to_data_buffer": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.frombuffer",
    "pyarrow.tests.test_plasma.random",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_plasma_tf_op.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma_tf_op.plasma": {
  "data": {
   "shadows": "pyarrow.plasma"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma_tf_op.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "FromPlasma",
    "ToPlasma",
    "numpy.array_equal",
    "numpy.ones",
    "numpy.random.bytes",
    "numpy.random.randn",
    "numpy.split"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype.FromPlasma": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype.ToPlasma": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.test_plasma_tf_op": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "pyarrow.plasma",
    "pyarrow.plasma.build_plasma_tensorflow_op",
    "pyarrow.plasma.connect",
    "pyarrow.plasma.start_plasma_store",
    "pyarrow.plasma.tf_plasma_op",
    "pyarrow.tests.test_plasma_tf_op.pytest",
    "pyarrow.tests.test_plasma_tf_op.run_tensorflow_test_with_dtype",
    "tensorflow"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_plasma_tf_op.tf": {
  "data": {
   "shadows": "tensorflow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_scalars.TestScalars": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "pyarrow.compat.unittest.TestCase"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_array_to_set": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.array",
    "set"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bool": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.BooleanValue",
    "pyarrow.NA",
    "pyarrow.array",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bytes": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "pyarrow.BinaryValue",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.compat.u",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bytes_hash": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "hash",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_dictionary": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "enumerate",
    "pandas.Categorical",
    "pandas.Series",
    "pyarrow.DictionaryArray.from_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_double": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.DoubleValue",
    "pyarrow.NA",
    "pyarrow.array",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_fixed_size_bytes": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "bytes",
    "isinstance",
    "pyarrow.FixedSizeBinaryValue",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_float_hash": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "hash",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_half_float": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "isinstance",
    "numpy.float16",
    "pyarrow.HalfFloatValue",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.float16",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_int64": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.Int64Value",
    "pyarrow.NA",
    "pyarrow.array",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_int_hash": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "hash",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_list": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "IndexError",
    "isinstance",
    "len",
    "pyarrow.ListValue",
    "pyarrow.NA",
    "pyarrow.array",
    "pyarrow.tests.test_scalars.pytest",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_null_singleton": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.NAType",
    "pyarrow.tests.test_scalars.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_string_hash": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "hash",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_string_unicode": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.NA",
    "pyarrow.StringValue",
    "pyarrow.array",
    "pyarrow.compat.unicode_type",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_struct_value_subscripting": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "IndexError",
    "KeyError",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.struct",
    "pyarrow.tests.test_scalars.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_timestamp": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pandas.Timestamp",
    "pandas.date_range",
    "pyarrow.Array.from_pandas",
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_scalars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.u": {
  "data": {
   "shadows": "pyarrow.compat.u"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.unicode_type": {
  "data": {
   "shadows": "pyarrow.compat.unicode_type"
  },
  "type": "import"
 },
 "pyarrow.tests.test_scalars.unittest": {
  "data": {
   "shadows": "pyarrow.compat.unittest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_schema.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_schema.test_field_flatten": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_from_numpy_dtype": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "NotImplementedError",
    "TypeError",
    "bool",
    "numpy.dtype",
    "numpy.unicode",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.from_numpy_dtype",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "len",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_add_remove_metadata": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_constructor_errors": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "TypeError",
    "pyarrow.Schema",
    "pyarrow.tests.test_schema.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equality_operators": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_negative_indexing": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "IndexError",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_schema.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_repr_with_dictionaries": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.dictionary",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.string",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_time_types": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.test_schema.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_comparisons": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "pyarrow.int32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_for_alias": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.string",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.type_for_alias",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_integers": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "factory",
    "getattr",
    "pyarrow",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_list": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.string",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_schema_pickling": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "pyarrow.Field",
    "pyarrow.binary",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.decimal128",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int8",
    "pyarrow.lib.UnionMode_DENSE",
    "pyarrow.lib.UnionMode_SPARSE",
    "pyarrow.list_",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_schema.pickle",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.union"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_string": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "pyarrow.string",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_timestamp_with_tz": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pyarrow.timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_to_pandas_dtype": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "numpy.bool_",
    "numpy.dtype",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int16",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.object_",
    "numpy.uint16",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.timestamp",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "collections.OrderedDict",
    "collections.namedtuple",
    "long",
    "numpy.array",
    "numpy.float16",
    "numpy.float32",
    "numpy.float64",
    "numpy.int32",
    "numpy.int64",
    "numpy.int8",
    "numpy.random.normal",
    "numpy.uint32",
    "numpy.uint64",
    "numpy.uint8",
    "numpy.zeros",
    "object",
    "pyarrow.tests.test_serialization.Bar",
    "pyarrow.tests.test_serialization.Baz",
    "pyarrow.tests.test_serialization.CustomError",
    "pyarrow.tests.test_serialization.Foo",
    "pyarrow.tests.test_serialization.NamedTupleExample",
    "pyarrow.tests.test_serialization.PRIMITIVE_OBJECTS",
    "pyarrow.tests.test_serialization.Point",
    "pyarrow.tests.test_serialization.Qux",
    "pyarrow.tests.test_serialization.SubQux",
    "pyarrow.tests.test_serialization.SubQuxPickle",
    "pyarrow.tests.test_serialization.make_serialization_context",
    "pyarrow.tests.test_serialization.string",
    "pyarrow.tests.test_serialization.sys",
    "range",
    "set"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_serialization.Bar": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Bar.__init__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS",
    "setattr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Baz": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Baz.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Bar",
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Baz.method": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.COMPLEX_OBJECTS": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.CUSTOM_OBJECTS": {
  "data": {
   "lineno": 194
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.CustomError": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Foo": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Foo.__eq__": {
  "data": {
   "lineno": 151
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Foo.__hash__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Foo.__init__": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.NamedTupleExample": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.PRIMITIVE_OBJECTS": {
  "data": {
   "lineno": 107
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.Point": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.Process": {
  "data": {
   "shadows": "multiprocessing.Process"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.Queue": {
  "data": {
   "shadows": "multiprocessing.Queue"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.Qux": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Qux.__init__": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Serializable": {
  "data": {
   "lineno": 555,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SerializableClass": {
  "data": {
   "lineno": 569,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Serializable"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SerializableClass.__init__": {
  "data": {
   "lineno": 570
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.SubQux": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Qux"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SubQux.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Qux"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.SubQuxPickle": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Qux"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SubQuxPickle.__init__": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Qux"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization._check_component_roundtrip": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "pyarrow.SerializedPyObject.from_components",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.global_serialization_context"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.assert_equal": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "Exception",
    "dict",
    "hasattr",
    "len",
    "list",
    "numpy.__name__",
    "numpy.testing.assert_equal",
    "print",
    "pyarrow.lib.is_named_tuple",
    "pyarrow.tests.test_serialization.torch",
    "range",
    "set",
    "tuple",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.defaultdict": {
  "data": {
   "shadows": "collections.defaultdict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.deserialize_serializable": {
  "data": {
   "lineno": 563
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.global_serialization_context": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "pyarrow.tests.test_serialization.large_buffer": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": [
    "pyarrow.allocate_buffer",
    "pyarrow.tests.test_serialization.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.large_memory_map": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "numpy.random.randint",
    "open"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.make_serialization_context": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "Exception",
    "pyarrow.default_serialization_context",
    "pyarrow.tests.test_serialization.Bar",
    "pyarrow.tests.test_serialization.Baz",
    "pyarrow.tests.test_serialization.CustomError",
    "pyarrow.tests.test_serialization.Foo",
    "pyarrow.tests.test_serialization.NamedTupleExample",
    "pyarrow.tests.test_serialization.Point",
    "pyarrow.tests.test_serialization.Qux",
    "pyarrow.tests.test_serialization.SubQux",
    "pyarrow.tests.test_serialization.SubQuxPickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.namedtuple": {
  "data": {
   "shadows": "collections.namedtuple"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pathlib": {
  "data": {
   "shadows": "pathlib"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.serialization_roundtrip": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "pyarrow.BufferReader",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.deserialize_from",
    "pyarrow.serialize_to",
    "pyarrow.tests.test_serialization._check_component_roundtrip",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.global_serialization_context"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.serialize_serializable": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.string": {
  "data": {
   "shadows": "string"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.test_arrow_limits": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "numpy.zeros",
    "pyarrow.memory_map",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_arrow_limits.huge_memory_map": {
  "data": {
   "lineno": 483,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.large_memory_map"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "BufferClass",
    "pyarrow.default_serialization_context",
    "pyarrow.deserialize",
    "pyarrow.serialize"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.BufferClass": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.deserialize_buffer_class": {
  "data": {
   "lineno": 468
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.serialize_buffer_class": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "pyarrow.py_buffer"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "pyarrow.SerializationContext",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone.Foo": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_clone.custom_deserializer": {
  "data": {
   "lineno": 268
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone.custom_serializer": {
  "data": {
   "lineno": 265
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_complex_serialization": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_custom_serialization": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.CUSTOM_OBJECTS",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_datetime_serialization": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.datetime",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_default_dict_serialization": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "collections.defaultdict",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_buffer_in_different_process": {
  "data": {
   "lineno": 647,
   "symbols_in_volume": [
    "pyarrow.py_buffer",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.os",
    "pyarrow.tests.test_serialization.subprocess",
    "pyarrow.tests.test_serialization.sys",
    "pyarrow.tests.test_serialization.tempfile",
    "pyarrow.tests.util.get_modified_env_with_pythonpath"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_in_different_process": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "multiprocessing.Process",
    "multiprocessing.Queue",
    "pyarrow.SerializationContext",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.os",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.re",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_in_different_process.deserialize_regex": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "pyarrow.deserialize"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "SubFoo",
    "pyarrow.SerializationContext",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.Foo",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses.SubFoo": {
  "data": {
   "lineno": 536,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses.SubFoo.__init__": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_base_object": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "numpy.arange",
    "numpy.int32",
    "open",
    "pyarrow.OSFile",
    "pyarrow.read_serialized",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.assert_equal",
    "pyarrow.tests.test_serialization.os",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_immutable": {
  "data": {
   "lineno": 383,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "pyarrow.BufferReader",
    "pyarrow.FixedSizeBufferWriter",
    "pyarrow.deserialize_from",
    "pyarrow.serialize_to",
    "pyarrow.tests.test_serialization.global_serialization_context",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_serialization": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "numpy.random.randint",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "CustomNDArray",
    "numpy.alltrue",
    "numpy.ndarray",
    "numpy.zeros",
    "pyarrow.default_serialization_context",
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.CustomNDArray": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.CustomNDArray.__new__": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.deserializer": {
  "data": {
   "lineno": 443
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.serializer": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "numpy.ndarray"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_path_objects": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "pyarrow.deserialize_from",
    "pyarrow.serialize_to",
    "pyarrow.tests.test_serialization.pathlib",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.PRIMITIVE_OBJECTS",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.serialization_roundtrip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "TempClass",
    "pyarrow.DeserializationCallbackError",
    "pyarrow.SerializationCallbackError",
    "pyarrow.SerializationContext",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error.TempClass": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "DummyClass",
    "pyarrow.default_serialization_context",
    "pyarrow.serialize"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.DummyClass": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.deserialize_dummy_class": {
  "data": {
   "lineno": 422
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.serialize_dummy_class": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": [
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_determinism": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_subclasses": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "pyarrow.default_serialization_context",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.Serializable",
    "pyarrow.tests.test_serialization.SerializableClass",
    "pyarrow.tests.test_serialization.deserialize_serializable",
    "pyarrow.tests.test_serialization.serialize_serializable",
    "type"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_to_buffer": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.COMPLEX_OBJECTS",
    "pyarrow.tests.test_serialization.assert_equal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_to_components_invalid_cases": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "pyarrow.ArrowInvalid",
    "pyarrow.deserialize_components",
    "pyarrow.py_buffer",
    "pyarrow.tests.test_serialization.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "pyarrow.SerializationContext",
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "pyarrow.tests.test_serialization.Foo"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.Foo": {
  "data": {
   "lineno": 666,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.dumps1": {
  "data": {
   "lineno": 676
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.dumps2": {
  "data": {
   "lineno": 690
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.loads1": {
  "data": {
   "lineno": 679
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.loads2": {
  "data": {
   "lineno": 693
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_tensor_alignment": {
  "data": {
   "lineno": 714,
   "symbols_in_volume": [
    "len",
    "numpy.random.normal",
    "pyarrow.deserialize",
    "pyarrow.serialize",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_torch_cuda": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.torch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_torch_serialization": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.default_serialization_context",
    "pyarrow.register_torch_serialization_handlers",
    "pyarrow.tests.test_serialization.large_buffer",
    "pyarrow.tests.test_serialization.pytest",
    "pyarrow.tests.test_serialization.serialization_roundtrip",
    "pyarrow.tests.test_serialization.torch"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_util": {
  "data": {
   "shadows": "pyarrow.tests.util"
  },
  "type": "import"
 },
 "pyarrow.tests.test_serialization.torch": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "pyarrow.tests.test_table": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_table.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.assert_frame_equal": {
  "data": {
   "shadows": "pandas.util.testing.assert_frame_equal"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_table.test_chunked_array_basics": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.chunked_array",
    "pyarrow.string",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "eq",
    "ne",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.int32",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals.eq": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_equals.ne": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "isinstance",
    "pyarrow.ChunkedArray",
    "pyarrow.chunked_array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_getitem": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "IndexError",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_iter": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "collections.Iterable",
    "isinstance",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_pickle": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.chunked_array",
    "pyarrow.field",
    "pyarrow.float64",
    "pyarrow.int64",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.tests.test_table.pickle",
    "pyarrow.tests.test_table.pytest",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_str": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.chunked_array",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_chunked_array_to_pandas": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_column_basics": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "len",
    "pyarrow.Table.from_arrays",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_column_factory_function": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.Column.from_array",
    "pyarrow.array",
    "pyarrow.chunked_array",
    "pyarrow.column",
    "pyarrow.field",
    "pyarrow.string",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_column_flatten": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "pyarrow.Column.from_array",
    "pyarrow.array",
    "pyarrow.column",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_column_pickle": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "pyarrow.chunked_array",
    "pyarrow.column",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.tests.test_table.pickle"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_column_to_pandas": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "len",
    "list",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.concat_tables",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_basics": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "IndexError",
    "collections.OrderedDict",
    "len",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_empty_metadata": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_invalid_names": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_validate_lengths": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_to_pandas": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.random.randn",
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_pandas"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_no_fields": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "len",
    "pyarrow.RecordBatch.from_arrays"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_pickle": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int8",
    "pyarrow.schema",
    "pyarrow.tests.test_table.pickle",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_slice_getitem": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "IndexError",
    "len",
    "pyarrow.RecordBatch.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_schema_equals": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pyarrow.ArrowInvalid",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_batches",
    "pyarrow.tests.test_table.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_to_pandas": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "numpy.array",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_batches"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_add_column": {
  "data": {
   "lineno": 523,
   "symbols_in_volume": [
    "pyarrow.Column.from_array",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_basics": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "IndexError",
    "collections.OrderedDict",
    "len",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_drop": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "KeyError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_flatten": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.bool_",
    "pyarrow.field",
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_arrays_invalid_names": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_negative_indexing": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": [
    "IndexError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_pickle": {
  "data": {
   "lineno": 491,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.chunked_array",
    "pyarrow.field",
    "pyarrow.schema",
    "pyarrow.string",
    "pyarrow.tests.test_table.pickle",
    "pyarrow.uint32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_remove_column": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_remove_column_empty": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "len",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_select_column": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "KeyError",
    "TypeError",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "pyarrow.tests.test_table.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_set_column": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "list",
    "pyarrow.Column.from_array",
    "pyarrow.Table.from_arrays",
    "pyarrow.array",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_to_batches": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "iter",
    "len",
    "list",
    "map",
    "pandas.DataFrame",
    "pandas.concat",
    "pandas.util.testing.assert_frame_equal",
    "pyarrow.RecordBatch.from_pandas",
    "pyarrow.Table.from_batches",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.test_tensor._try_delete": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pyarrow.tests.test_tensor.gc",
    "pyarrow.tests.test_tensor.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.gc": {
  "data": {
   "shadows": "gc"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pyarrow.tests.test_tensor.test_read_tensor": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "numpy.random.randn",
    "numpy.testing.assert_equal",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.create_memory_map",
    "pyarrow.get_tensor_size",
    "pyarrow.memory_map",
    "pyarrow.read_tensor",
    "pyarrow.tests.test_tensor.os",
    "pyarrow.write_tensor",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_attrs": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_base_object": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_tensor.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "eq",
    "ne",
    "numpy.ascontiguousarray",
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals.eq": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals.ne": {
  "data": {
   "lineno": 129
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_hashing": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "TypeError",
    "hash",
    "numpy.arange",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_tensor.pytest"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_roundtrip": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.create_memory_map",
    "pyarrow.read_tensor",
    "pyarrow.tests.test_tensor.os",
    "pyarrow.write_tensor",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_strided": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.create_memory_map",
    "pyarrow.read_tensor",
    "pyarrow.tests.test_tensor.os",
    "pyarrow.write_tensor",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_memoryview": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "memoryview",
    "numpy.arange",
    "numpy.float16",
    "numpy.float64",
    "numpy.frombuffer",
    "numpy.int64",
    "numpy.int8",
    "numpy.uint64",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.tests.test_tensor.pytest",
    "pyarrow.tests.test_tensor.sys"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_numpy_roundtrip": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "numpy.dtype",
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.tests.test_tensor.pytest",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_size": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "numpy.random.randn",
    "pyarrow.Tensor.from_numpy",
    "pyarrow.get_tensor_size"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types": {
  "data": {
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.date32",
    "pyarrow.decimal128",
    "pyarrow.field",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.lib.UnionMode_DENSE",
    "pyarrow.lib.UnionMode_SPARSE",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.union"
   ]
  },
  "type": "module"
 },
 "pyarrow.tests.test_types.MANY_TYPES": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pyarrow.tests.test_types.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.pickle": {
  "data": {
   "shadows": "pickle"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "pyarrow.tests.test_types.test_bit_width": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.binary",
    "pyarrow.bool_",
    "pyarrow.decimal128",
    "pyarrow.float16",
    "pyarrow.int16",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.uint32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_decimal_byte_width": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "pyarrow.decimal128"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_dictionary_type": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.dictionary",
    "pyarrow.int32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_exact_primitive_types": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "check_func",
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.types.is_date32",
    "pyarrow.types.is_date64",
    "pyarrow.types.is_float16",
    "pyarrow.types.is_float32",
    "pyarrow.types.is_float64",
    "pyarrow.types.is_int16",
    "pyarrow.types.is_int32",
    "pyarrow.types.is_int64",
    "pyarrow.types.is_int8",
    "pyarrow.types.is_time32",
    "pyarrow.types.is_time64",
    "pyarrow.types.is_uint16",
    "pyarrow.types.is_uint32",
    "pyarrow.types.is_uint64",
    "pyarrow.types.is_uint8",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_add_remove_metadata": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_basic": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.string",
    "repr"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_equality_operators": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_equals": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int16",
    "pyarrow.int8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_field_metadata": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fields_hashable": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int64"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fixed_size_binary_byte_width": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "pyarrow.binary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_binary_string": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "pyarrow.binary",
    "pyarrow.string",
    "pyarrow.types.is_binary",
    "pyarrow.types.is_fixed_size_binary",
    "pyarrow.types.is_string",
    "pyarrow.types.is_unicode"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_boolean": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyarrow.bool_",
    "pyarrow.int8",
    "pyarrow.types.is_boolean"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_decimal": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "pyarrow.decimal128",
    "pyarrow.int32",
    "pyarrow.types.is_decimal"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_dictionary": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "pyarrow.array",
    "pyarrow.dictionary",
    "pyarrow.int32",
    "pyarrow.types.is_dictionary"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_floating": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "pyarrow.float16",
    "pyarrow.float32",
    "pyarrow.float64",
    "pyarrow.int32",
    "pyarrow.types.is_floating"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_integer": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pyarrow.float32",
    "pyarrow.int16",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.int8",
    "pyarrow.types.is_integer",
    "pyarrow.types.is_signed_integer",
    "pyarrow.types.is_unsigned_integer",
    "pyarrow.uint16",
    "pyarrow.uint32",
    "pyarrow.uint64",
    "pyarrow.uint8"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_list": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.types.is_list"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_nested_or_struct": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.struct",
    "pyarrow.types.is_nested",
    "pyarrow.types.is_struct"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_null": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.null",
    "pyarrow.types.is_null"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_primitive": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "pyarrow.int32",
    "pyarrow.list_",
    "pyarrow.types.is_primitive"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_temporal_date_time_timestamp": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "pyarrow.date32",
    "pyarrow.date64",
    "pyarrow.int32",
    "pyarrow.time32",
    "pyarrow.time64",
    "pyarrow.timestamp",
    "pyarrow.types.is_date",
    "pyarrow.types.is_temporal",
    "pyarrow.types.is_time",
    "pyarrow.types.is_timestamp"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_union": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int8",
    "pyarrow.lib.UnionMode_DENSE",
    "pyarrow.lib.UnionMode_SPARSE",
    "pyarrow.list_",
    "pyarrow.string",
    "pyarrow.types.is_union",
    "pyarrow.union"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_struct_type": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "len",
    "list",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.int64",
    "pyarrow.struct",
    "zip"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_type_equality_operators": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "enumerate",
    "pyarrow.tests.test_types.MANY_TYPES",
    "pyarrow.tests.test_types.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_types_hashable": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "enumerate",
    "hash",
    "len",
    "pyarrow.tests.test_types.MANY_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_types_picklable": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "pyarrow.tests.test_types.MANY_TYPES",
    "pyarrow.tests.test_types.pickle",
    "pyarrow.tests.test_types.pytest",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_union_type": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "check_fields",
    "pyarrow.binary",
    "pyarrow.field",
    "pyarrow.int32",
    "pyarrow.lib.UnionMode_DENSE",
    "pyarrow.lib.UnionMode_SPARSE",
    "pyarrow.list_",
    "pyarrow.tests.test_types.pytest",
    "pyarrow.union"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.test_union_type.check_fields": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.test_types.types": {
  "data": {
   "shadows": "pyarrow.types"
  },
  "type": "import"
 },
 "pyarrow.tests.util": {
  "data": {},
  "type": "module"
 },
 "pyarrow.tests.util.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "pyarrow.tests.util.decimal": {
  "data": {
   "shadows": "decimal"
  },
  "type": "import"
 },
 "pyarrow.tests.util.get_modified_env_with_pythonpath": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "pyarrow.__file__",
    "pyarrow.tests.util.os"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pyarrow.tests.util.pa": {
  "data": {
   "shadows": "pyarrow"
  },
  "type": "import"
 },
 "pyarrow.tests.util.randdecimal": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "pyarrow.tests.util.decimal",
    "pyarrow.tests.util.random",
    "str"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.random": {
  "data": {
   "shadows": "random"
  },
  "type": "import"
 },
 "pyarrow.tests.util.random_seed": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "pyarrow.tests.util.contextlib",
    "pyarrow.tests.util.random"
   ]
  },
  "type": "function"
 },
 "pyarrow.tests.util.randsign": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "pyarrow.tests.util.random"
   ]
  },
  "type": "function"
 },
 "pyarrow.time32": {
  "data": {
   "shadows": "pyarrow.lib.time32"
  },
  "type": "import"
 },
 "pyarrow.time64": {
  "data": {
   "shadows": "pyarrow.lib.time64"
  },
  "type": "import"
 },
 "pyarrow.timestamp": {
  "data": {
   "shadows": "pyarrow.lib.timestamp"
  },
  "type": "import"
 },
 "pyarrow.total_allocated_bytes": {
  "data": {
   "shadows": "pyarrow.lib.total_allocated_bytes"
  },
  "type": "import"
 },
 "pyarrow.type_for_alias": {
  "data": {
   "shadows": "pyarrow.lib.type_for_alias"
  },
  "type": "import"
 },
 "pyarrow.types": {
  "data": {
   "shadows": "pyarrow.types"
  },
  "type": "import"
 },
 "pyarrow.types._DATE_TYPES": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pyarrow.types._FLOATING_TYPES": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pyarrow.types._INTEGER_TYPES": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pyarrow.types._NESTED_TYPES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "pyarrow.types._SIGNED_INTEGER_TYPES": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "pyarrow.types._TEMPORAL_TYPES": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "pyarrow.types._TIME_TYPES": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "pyarrow.types._UNSIGNED_INTEGER_TYPES": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pyarrow.types.is_binary": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "pyarrow.lib.Type_BINARY"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_boolean": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "pyarrow.lib.Type_BOOL"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_date": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": [
    "pyarrow.types._DATE_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_date32": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "pyarrow.lib.Type_DATE32"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_date64": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "pyarrow.lib.Type_DATE64"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_decimal": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "pyarrow.lib.Type_DECIMAL"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_dictionary": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": [
    "pyarrow.lib.Type_DICTIONARY"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_fixed_size_binary": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "pyarrow.lib.Type_FIXED_SIZE_BINARY"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_float16": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "pyarrow.lib.Type_HALF_FLOAT"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_float32": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pyarrow.lib.Type_FLOAT"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_float64": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "pyarrow.lib.Type_DOUBLE"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_floating": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "pyarrow.types._FLOATING_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_int16": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "pyarrow.lib.Type_INT16"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_int32": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "pyarrow.lib.Type_INT32"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_int64": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "pyarrow.lib.Type_INT64"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_int8": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "pyarrow.lib.Type_INT8"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_integer": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "pyarrow.types._INTEGER_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_list": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pyarrow.lib.Type_LIST"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_map": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "pyarrow.lib.Type_MAP"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_nested": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "pyarrow.types._NESTED_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_null": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "pyarrow.lib.Type_NA"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_primitive": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "pyarrow.lib._is_primitive"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_signed_integer": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "pyarrow.types._SIGNED_INTEGER_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_string": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "pyarrow.lib.Type_STRING"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_struct": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "pyarrow.lib.Type_STRUCT"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_temporal": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "pyarrow.types._TEMPORAL_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_time": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "pyarrow.types._TIME_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_time32": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "pyarrow.lib.Type_TIME32"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_time64": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "pyarrow.lib.Type_TIME64"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_timestamp": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "pyarrow.lib.Type_TIMESTAMP"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_uint16": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pyarrow.lib.Type_UINT16"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_uint32": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "pyarrow.lib.Type_UINT32"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_uint64": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pyarrow.lib.Type_UINT64"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_uint8": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "pyarrow.lib.Type_UINT8"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_unicode": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "pyarrow.types.is_string"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_union": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "pyarrow.lib.Type_UNION"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.is_unsigned_integer": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "pyarrow.types._UNSIGNED_INTEGER_TYPES"
   ]
  },
  "type": "function"
 },
 "pyarrow.types.lib": {
  "data": {
   "shadows": "pyarrow.lib"
  },
  "type": "import"
 },
 "pyarrow.uint16": {
  "data": {
   "shadows": "pyarrow.lib.uint16"
  },
  "type": "import"
 },
 "pyarrow.uint32": {
  "data": {
   "shadows": "pyarrow.lib.uint32"
  },
  "type": "import"
 },
 "pyarrow.uint64": {
  "data": {
   "shadows": "pyarrow.lib.uint64"
  },
  "type": "import"
 },
 "pyarrow.uint8": {
  "data": {
   "shadows": "pyarrow.lib.uint8"
  },
  "type": "import"
 },
 "pyarrow.union": {
  "data": {
   "shadows": "pyarrow.lib.union"
  },
  "type": "import"
 },
 "pyarrow.util": {
  "data": {},
  "type": "module"
 },
 "pyarrow.util._deprecate_api": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "pyarrow.util._deprecate_api.wrapper": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "FutureWarning",
    "api",
    "pyarrow.util.warnings"
   ]
  },
  "type": "function"
 },
 "pyarrow.util._deprecate_nthreads": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "FutureWarning",
    "pyarrow.util.warnings"
   ]
  },
  "type": "function"
 },
 "pyarrow.util.implements": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "pyarrow.util.implements.decorator": {
  "data": {
   "lineno": 24
  },
  "type": "function"
 },
 "pyarrow.util.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pyarrow.version_from_scm": {
  "data": {
   "shadows": "setuptools_scm.version_from_scm"
  },
  "type": "import"
 },
 "pyarrow.write_tensor": {
  "data": {
   "shadows": "pyarrow.ipc.write_tensor"
  },
  "type": "import"
 }
}