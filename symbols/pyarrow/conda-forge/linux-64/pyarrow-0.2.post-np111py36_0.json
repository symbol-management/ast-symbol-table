{
 "pyarrow": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.DistributionNotFound",
   "pkg_resources.get_distribution",
   "pyarrow.filesystem.LocalFilesystem.get_instance"
  ],
  "type": "module"
 },
 "pyarrow.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "itertools.izip",
   "numpy.integer",
   "six.integer_types",
   "sys.version_info"
  ],
  "type": "module"
 },
 "pyarrow.compat.dict_values": {
  "lineno": 78,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.encode_file_path": {
  "lineno": 100,
  "symbols_in_volume": [
   "os.name"
  ],
  "type": "function"
 },
 "pyarrow.compat.frombytes": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.guid": {
  "lineno": 83,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "pyarrow.compat.lzip": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.tobytes": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.u": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.filesystem.Filesystem": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.filesystem.Filesystem.delete": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.Filesystem.exists": {
  "lineno": 50,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.Filesystem.isdir": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.Filesystem.isfile": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.Filesystem.ls": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.Filesystem.mkdir": {
  "lineno": 47,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.Filesystem.read_parquet": {
  "lineno": 65,
  "symbols_in_volume": [
   "pyarrow.parquet.read_multiple_files"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.HdfsClient": {
  "lineno": 139,
  "symbols_in_volume": [
   "pyarrow.io._HdfsClient"
  ],
  "type": "class"
 },
 "pyarrow.filesystem.HdfsClient.__init__": {
  "lineno": 168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.HdfsClient.delete": {
  "lineno": 180,
  "symbols_in_volume": [
   "pyarrow.io._HdfsClient.delete",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.HdfsClient.isdir": {
  "lineno": 172,
  "symbols_in_volume": [
   "pyarrow.io._HdfsClient.isdir",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.HdfsClient.isfile": {
  "lineno": 176,
  "symbols_in_volume": [
   "pyarrow.io._HdfsClient.isfile",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.HdfsClient.ls": {
  "lineno": 188,
  "symbols_in_volume": [
   "pyarrow.io._HdfsClient.ls"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.HdfsClient.mkdir": {
  "lineno": 184,
  "symbols_in_volume": [
   "pyarrow.io._HdfsClient.mkdir",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFilesystem": {
  "lineno": 106,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.filesystem.LocalFilesystem.exists": {
  "lineno": 128,
  "symbols_in_volume": [
   "os.path.exists",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFilesystem.get_instance": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFilesystem.isdir": {
  "lineno": 120,
  "symbols_in_volume": [
   "os.path.isdir",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFilesystem.isfile": {
  "lineno": 124,
  "symbols_in_volume": [
   "os.path.isfile",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFilesystem.ls": {
  "lineno": 116,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.join",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFilesystem.open": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.formatting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.formatting._indent": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.formatting.array_format": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.formatting.value_format": {
  "lineno": 44,
  "symbols_in_volume": [
   "pyarrow.scalar.ListValue"
  ],
  "type": "function"
 },
 "pyarrow.ipc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.ipc.FileReader": {
  "lineno": 55,
  "symbols_in_volume": [
   "pyarrow.io._FileReader"
  ],
  "type": "class"
 },
 "pyarrow.ipc.FileReader.__init__": {
  "lineno": 67,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.FileWriter": {
  "lineno": 71,
  "symbols_in_volume": [
   "pyarrow.io._FileWriter"
  ],
  "type": "class"
 },
 "pyarrow.ipc.FileWriter.__init__": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.StreamReader": {
  "lineno": 23,
  "symbols_in_volume": [
   "pyarrow.io._StreamReader"
  ],
  "type": "class"
 },
 "pyarrow.ipc.StreamReader.__init__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.StreamReader.__iter__": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.StreamWriter": {
  "lineno": 40,
  "symbols_in_volume": [
   "pyarrow.io._StreamWriter"
  ],
  "type": "class"
 },
 "pyarrow.ipc.StreamWriter.__init__": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.parquet.ParquetFile": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.ParquetFile.__init__": {
  "lineno": 41,
  "symbols_in_volume": [
   "pyarrow._parquet.ParquetReader"
  ],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.metadata": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.read": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.schema": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.read_multiple_files": {
  "lineno": 118,
  "symbols_in_volume": [
   "pyarrow.table.concat_tables"
  ],
  "type": "function"
 },
 "pyarrow.parquet.read_multiple_files.open_file": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.read_table": {
  "lineno": 83,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFilesystem.get_instance",
   "six.string_types"
  ],
  "type": "function"
 },
 "pyarrow.parquet.write_table": {
  "lineno": 181,
  "symbols_in_volume": [
   "pyarrow._parquet.ParquetWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.pandas_examples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_arrays": {
  "lineno": 26,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.Schema.from_fields",
   "pyarrow.double",
   "pyarrow.field",
   "pyarrow.float_",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.string",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_array.test_array_slice": {
  "lineno": 107,
  "symbols_in_volume": [
   "pyarrow.from_pylist",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_getitem_NA": {
  "lineno": 35,
  "symbols_in_volume": [
   "pyarrow.NA",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_format": {
  "lineno": 40,
  "symbols_in_volume": [
   "pyarrow.formatting.array_format",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_long_array_format": {
  "lineno": 66,
  "symbols_in_volume": [
   "pyarrow.formatting.array_format",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_repr_on_pre_init_array": {
  "lineno": 30,
  "symbols_in_volume": [
   "pyarrow.array.Array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_format": {
  "lineno": 54,
  "symbols_in_volume": [
   "pyarrow.formatting.array_format",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_pandas_zero_copy": {
  "lineno": 80,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.from_pylist",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_total_bytes_allocated": {
  "lineno": 26,
  "symbols_in_volume": [
   "pyarrow.total_allocated_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList": {
  "lineno": 25,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_all_none": {
  "lineno": 42,
  "symbols_in_volume": [
   "pyarrow.from_pylist",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_boolean": {
  "lineno": 27,
  "symbols_in_volume": [
   "pyarrow.bool_",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_bytes": {
  "lineno": 84,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_date": {
  "lineno": 95,
  "symbols_in_volume": [
   "datetime.date",
   "pyarrow.date",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_double": {
  "lineno": 68,
  "symbols_in_volume": [
   "pyarrow.double",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_empty_list": {
  "lineno": 35,
  "symbols_in_volume": [
   "pyarrow.from_pylist",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_garbage_collection": {
  "lineno": 57,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.from_pylist",
   "pyarrow.total_allocated_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_integer": {
  "lineno": 49,
  "symbols_in_volume": [
   "pyarrow.from_pylist",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_list_of_int": {
  "lineno": 140,
  "symbols_in_volume": [
   "pyarrow.from_pylist",
   "pyarrow.int64",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_mixed_nesting_levels": {
  "lineno": 126,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_timestamp": {
  "lineno": 107,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.from_pylist",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertList.test_unicode": {
  "lineno": 76,
  "symbols_in_volume": [
   "pyarrow.from_pylist",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion": {
  "lineno": 59,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion._check_array_roundtrip": {
  "lineno": 79,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pyarrow.Array.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion._check_pandas_roundtrip": {
  "lineno": 67,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.setUp": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.tearDown": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_boolean_no_nulls": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pyarrow.Field.from_py",
   "pyarrow.Schema.from_fields",
   "pyarrow.bool_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_boolean_nulls": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Field.from_py",
   "pyarrow.Schema.from_fields",
   "pyarrow.Table.from_arrays",
   "pyarrow.bool_",
   "pyarrow.from_pandas_series"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_boolean_object_nulls": {
  "lineno": 215,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.Field.from_py",
   "pyarrow.Schema.from_fields",
   "pyarrow.bool_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_bytes_to_binary": {
  "lineno": 231,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.binary",
   "pyarrow.compat.u"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_category": {
  "lineno": 347,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_column_of_lists": {
  "lineno": 332,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_date": {
  "lineno": 317,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Field.from_py",
   "pyarrow.Schema.from_fields",
   "pyarrow.Table.from_pandas",
   "pyarrow.date"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_float_no_nulls": {
  "lineno": 86,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.Field.from_py",
   "pyarrow.Schema.from_fields",
   "pyarrow.double",
   "pyarrow.float_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_float_nulls": {
  "lineno": 101,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Field.from_py",
   "pyarrow.Schema.from_fields",
   "pyarrow.Table.from_arrays",
   "pyarrow.double",
   "pyarrow.float_",
   "pyarrow.from_pandas_series"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_integer_no_nulls": {
  "lineno": 129,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.iinfo",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pyarrow.Field.from_py",
   "pyarrow.Schema.from_fields",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_integer_with_nulls": {
  "lineno": 153,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.from_pandas_series"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_threaded_conversion": {
  "lineno": 342,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_timestamps_notimezone_no_nulls": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.Field.from_py",
   "pyarrow.Schema.from_fields",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_timestamps_notimezone_nulls": {
  "lineno": 267,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.Field.from_py",
   "pyarrow.Schema.from_fields",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_timestamps_with_timezone": {
  "lineno": 292,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_unicode": {
  "lineno": 222,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pyarrow.Field.from_py",
   "pyarrow.Schema.from_fields",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas._alltypes_example": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases._make_test_file": {
  "lineno": 53,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.setUpClass": {
  "lineno": 64,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.tearDownClass": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_close": {
  "lineno": 76,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_download_upload": {
  "lineno": 110,
  "symbols_in_volume": [
   "io.BytesIO",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_file_context_manager": {
  "lineno": 124,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_ls": {
  "lineno": 95,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_mkdir": {
  "lineno": 85,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_read_multiple_parquet_files": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "os.path.join",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.guid",
   "pyarrow.concat_tables",
   "pyarrow.parquet.write_table",
   "pyarrow.tests.test_parquet._test_dataframe",
   "pyarrow.tests.test_parquet.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_hdfs_read_whole_file": {
  "lineno": 136,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs": {
  "lineno": 186,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs.check_driver": {
  "lineno": 190,
  "symbols_in_volume": [
   "pyarrow.io.have_libhdfs",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs.test_hdfs_orphaned_file": {
  "lineno": 195,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs3": {
  "lineno": 205,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs3.check_driver": {
  "lineno": 209,
  "symbols_in_volume": [
   "pyarrow.io.have_libhdfs3",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.hdfs_test_client": {
  "lineno": 39,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.get",
   "pyarrow.filesystem.HdfsClient"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_io._check_native_file_reader": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io._try_delete": {
  "lineno": 229,
  "symbols_in_volume": [
   "os.error",
   "os.remove"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.sample_disk_data": {
  "lineno": 167,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pyarrow.compat.guid",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.sample_disk_data.teardown": {
  "lineno": 177,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytes": {
  "lineno": 128,
  "symbols_in_volume": [
   "pyarrow.io.Buffer",
   "pyarrow.io.buffer_from_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader": {
  "lineno": 81,
  "symbols_in_volume": [
   "pyarrow.io.BufferReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_non_bytes": {
  "lineno": 104,
  "symbols_in_volume": [
   "pyarrow.compat.u",
   "pyarrow.io.BufferReader",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference": {
  "lineno": 109,
  "symbols_in_volume": [
   "gc.collect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference.get_buffer": {
  "lineno": 113,
  "symbols_in_volume": [
   "pyarrow.io.BufferReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_inmemory_write_after_closed": {
  "lineno": 155,
  "symbols_in_volume": [
   "pyarrow.io.InMemoryOutputStream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_reader": {
  "lineno": 205,
  "symbols_in_volume": [
   "pyarrow.io.MemoryMappedFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_retain_buffer_reference": {
  "lineno": 209,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.io.MemoryMappedFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_writer": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pyarrow.compat.guid",
   "pyarrow.io.MemoryMappedFile",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_output_stream": {
  "lineno": 139,
  "symbols_in_volume": [
   "pyarrow.io.InMemoryOutputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_reader": {
  "lineno": 225,
  "symbols_in_volume": [
   "pyarrow.io.OSFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_writer": {
  "lineno": 280,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pyarrow.compat.guid",
   "pyarrow.io.OSFile",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_read": {
  "lineno": 55,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.io.PythonFileInterface"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_write": {
  "lineno": 32,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.io.PythonFileInterface"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_ipc.MessagingTest": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.MessagingTest._get_sink": {
  "lineno": 35,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessagingTest._get_source": {
  "lineno": 38,
  "symbols_in_volume": [
   "pyarrow.BufferReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessagingTest.setUp": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessagingTest.write_batches": {
  "lineno": 41,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.RecordBatch.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile": {
  "lineno": 67,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestFile._get_writer": {
  "lineno": 70,
  "symbols_in_volume": [
   "pyarrow.FileWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile.test_read_all": {
  "lineno": 86,
  "symbols_in_volume": [
   "pyarrow.FileReader",
   "pyarrow.Table.from_batches"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile.test_simple_roundtrip": {
  "lineno": 73,
  "symbols_in_volume": [
   "pyarrow.FileReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestInMemoryFile": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestInMemoryFile._get_sink": {
  "lineno": 129,
  "symbols_in_volume": [
   "pyarrow.InMemoryOutputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestInMemoryFile._get_source": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream": {
  "lineno": 97,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestStream._get_writer": {
  "lineno": 99,
  "symbols_in_volume": [
   "pyarrow.StreamWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream.test_read_all": {
  "lineno": 117,
  "symbols_in_volume": [
   "pyarrow.StreamReader",
   "pyarrow.Table.from_batches"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream.test_simple_roundtrip": {
  "lineno": 102,
  "symbols_in_volume": [
   "pyarrow.StreamReader",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.read_file": {
  "lineno": 158,
  "symbols_in_volume": [
   "pyarrow.FileReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_ipc_zero_copy_numpy": {
  "lineno": 136,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.InMemoryOutputStream",
   "pyarrow.RecordBatch.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.write_file": {
  "lineno": 152,
  "symbols_in_volume": [
   "pyarrow.FileWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_jemalloc": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_jemalloc.test_default_memory_pool": {
  "lineno": 42,
  "symbols_in_volume": [
   "gc.collect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_jemalloc.test_different_memory_pool": {
  "lineno": 31,
  "symbols_in_volume": [
   "gc.collect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.skipif"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_parquet._random_integers": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_dataframe": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.util.testing.rands"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.alltypes_sample": {
  "lineno": 62,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.make_sample_file": {
  "lineno": 250,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetFile",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_column_of_lists": {
  "lineno": 324,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_compare_schemas": {
  "lineno": 307,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_multithreaded_read": {
  "lineno": 337,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_column_selection": {
  "lineno": 131,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_1_0_rountrip": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_2_0_rountrip": {
  "lineno": 87,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_configuration_options": {
  "lineno": 213,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_native_file_roundtrip": {
  "lineno": 177,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.io.BufferReader",
   "pyarrow.io.InMemoryOutputStream",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_pyfile_roundtrip": {
  "lineno": 189,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int64",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_metadata_api": {
  "lineno": 260,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pass_separate_metadata": {
  "lineno": 355,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetFile",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_files": {
  "lineno": 375,
  "symbols_in_volume": [
   "numpy.int64",
   "os.mkdir",
   "os.path.join",
   "pyarrow.Table.from_arrays",
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.guid",
   "pyarrow.concat_tables",
   "pyarrow.localfs.read_parquet",
   "pyarrow.parquet.ParquetFile",
   "pyarrow.parquet.read_multiple_files",
   "pyarrow.parquet.write_table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_single_pylist_column_roundtrip": {
  "lineno": 44,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.from_pylist",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_scalars.TestScalars": {
  "lineno": 23,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bool": {
  "lineno": 29,
  "symbols_in_volume": [
   "pyarrow.BooleanValue",
   "pyarrow.NA",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bytes": {
  "lineno": 75,
  "symbols_in_volume": [
   "pyarrow.BinaryValue",
   "pyarrow.NA",
   "pyarrow.compat.u",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_double": {
  "lineno": 49,
  "symbols_in_volume": [
   "pyarrow.DoubleValue",
   "pyarrow.NA",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_int64": {
  "lineno": 39,
  "symbols_in_volume": [
   "pyarrow.Int64Value",
   "pyarrow.NA",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_list": {
  "lineno": 88,
  "symbols_in_volume": [
   "pyarrow.ListValue",
   "pyarrow.NA",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_null_singleton": {
  "lineno": 25,
  "symbols_in_volume": [
   "pyarrow.NAType"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_string_unicode": {
  "lineno": 62,
  "symbols_in_volume": [
   "pyarrow.NA",
   "pyarrow.StringValue",
   "pyarrow.compat.unicode_type",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema": {
  "lineno": null,
  "symbols_in_volume": [
   "pyarrow"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_schema.TestTypes": {
  "lineno": 24,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_schema.TestTypes.test_field": {
  "lineno": 44,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.TestTypes.test_integers": {
  "lineno": 26,
  "symbols_in_volume": [
   "pyarrow"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.TestTypes.test_list": {
  "lineno": 35,
  "symbols_in_volume": [
   "pyarrow.int32",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.TestTypes.test_schema": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_schema.TestTypes.test_schema_equals": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_schema.TestTypes.test_string": {
  "lineno": 40,
  "symbols_in_volume": [
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_table.TestColumn": {
  "lineno": 28,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_table.TestColumn.test_basics": {
  "lineno": 30,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.TestColumn.test_pandas": {
  "lineno": 42,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables": {
  "lineno": 173,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.concat_tables",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_basics": {
  "lineno": 54,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_to_pandas": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_slice": {
  "lineno": 71,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.from_pylist",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_schema_equals": {
  "lineno": 141,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.ArrowException",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_to_pandas": {
  "lineno": 117,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_basics": {
  "lineno": 152,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.Table.from_arrays",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_pandas": {
  "lineno": 200,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.from_pylist"
  ],
  "type": "function"
 },
 "pyarrow.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.util.implements": {
  "lineno": 21,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.util.implements.decorator": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 }
}