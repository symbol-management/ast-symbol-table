{
 "pyarrow": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.DistributionNotFound",
   "pkg_resources.get_distribution",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.hdfs.connect",
   "pyarrow.lib.FixedSizeBufferWriter",
   "pyarrow.util._deprecate_class",
   "setuptools_scm.get_version"
  ],
  "type": "module"
 },
 "pyarrow._plasma_store_entry_point": {
  "lineno": 122,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.__path__",
   "subprocess.Popen",
   "sys.argv"
  ],
  "type": "function"
 },
 "pyarrow.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "itertools.izip",
   "numpy.integer",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.__version__",
   "pandas.api.types",
   "pandas.core.common",
   "six.integer_types",
   "sys.version_info"
  ],
  "type": "module"
 },
 "pyarrow.compat.Categorical": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.compat.ClassPlaceholder": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.compat.ClassPlaceholder.__init__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.DatetimeTZDtype": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.compat.PandasSeries": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.compat.dict_values": {
  "lineno": 111,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.encode_file_path": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.frombytes": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.guid": {
  "lineno": 116,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "pyarrow.compat.lzip": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.tobytes": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.u": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.feather": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.__version__",
   "pandas.lib.infer_dtype",
   "pyarrow.compat.pdapi.infer_dtype"
  ],
  "type": "module"
 },
 "pyarrow.feather.FeatherReader": {
  "lineno": 39,
  "symbols_in_volume": [
   "pyarrow.lib.FeatherReader"
  ],
  "type": "class"
 },
 "pyarrow.feather.FeatherReader.__init__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.feather.FeatherReader.read": {
  "lineno": 45,
  "symbols_in_volume": [
   "pyarrow.lib.Table.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.feather.FeatherWriter": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.feather.FeatherWriter.__init__": {
  "lineno": 66,
  "symbols_in_volume": [
   "pyarrow.lib.FeatherWriter"
  ],
  "type": "function"
 },
 "pyarrow.feather.FeatherWriter.write": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandas.SparseDataFrame",
   "pyarrow.compat.pdapi.is_object_dtype",
   "six.string_types"
  ],
  "type": "function"
 },
 "pyarrow.feather.read_feather": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.feather.write_feather": {
  "lineno": 106,
  "symbols_in_volume": [
   "gc.collect",
   "os.error",
   "os.remove",
   "six.string_types"
  ],
  "type": "function"
 },
 "pyarrow.filesystem": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.filesystem.DaskFileSystem": {
  "lineno": 234,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.filesystem.DaskFileSystem.__init__": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.delete": {
  "lineno": 250,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.isdir": {
  "lineno": 242,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.isfile": {
  "lineno": 246,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.ls": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.mkdir": {
  "lineno": 254,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.open": {
  "lineno": 258,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.walk": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.filesystem.FileSystem._path_join": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.cat": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.delete": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.disk_usage": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.exists": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.isdir": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.isfile": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.ls": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.mkdir": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.mv": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.open": {
  "lineno": 172,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.pathsep": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.read_parquet": {
  "lineno": 138,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDataset"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.rename": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.rm": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.stat": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.filesystem.LocalFileSystem.exists": {
  "lineno": 212,
  "symbols_in_volume": [
   "os.path.exists",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.get_instance": {
  "lineno": 187,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.isdir": {
  "lineno": 204,
  "symbols_in_volume": [
   "os.path.isdir",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.isfile": {
  "lineno": 208,
  "symbols_in_volume": [
   "os.path.isfile",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.ls": {
  "lineno": 193,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.join",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.mkdir": {
  "lineno": 197,
  "symbols_in_volume": [
   "os.makedirs",
   "os.mkdir",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.open": {
  "lineno": 216,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.pathsep": {
  "lineno": 223,
  "symbols_in_volume": [
   "os.path.sep"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.walk": {
  "lineno": 227,
  "symbols_in_volume": [
   "os.walk"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.S3FSWrapper": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.filesystem.S3FSWrapper.isdir": {
  "lineno": 277,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.S3FSWrapper.isfile": {
  "lineno": 288,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.S3FSWrapper.walk": {
  "lineno": 296,
  "symbols_in_volume": [
   "posixpath.split"
  ],
  "type": "function"
 },
 "pyarrow.formatting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.formatting._indent": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.formatting.array_format": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.formatting.value_format": {
  "lineno": 44,
  "symbols_in_volume": [
   "pyarrow.lib.ListValue"
  ],
  "type": "function"
 },
 "pyarrow.hdfs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.hdfs.HadoopFileSystem": {
  "lineno": 26,
  "symbols_in_volume": [
   "pyarrow.filesystem.FileSystem",
   "pyarrow.lib.HadoopFileSystem"
  ],
  "type": "class"
 },
 "pyarrow.hdfs.HadoopFileSystem.__init__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.delete": {
  "lineno": 47,
  "symbols_in_volume": [
   "pyarrow.filesystem.FileSystem.delete",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.exists": {
  "lineno": 70,
  "symbols_in_volume": [
   "pyarrow.filesystem.FileSystem.exists",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.isdir": {
  "lineno": 39,
  "symbols_in_volume": [
   "pyarrow.filesystem.FileSystem.isdir",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.isfile": {
  "lineno": 43,
  "symbols_in_volume": [
   "pyarrow.filesystem.FileSystem.isfile",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.ls": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.mkdir": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.rename": {
  "lineno": 66,
  "symbols_in_volume": [
   "pyarrow.filesystem.FileSystem.rename",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.walk": {
  "lineno": 90,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.hdfs._libhdfs_walk_files_dirs": {
  "lineno": 127,
  "symbols_in_volume": [
   "posixpath.split"
  ],
  "type": "function"
 },
 "pyarrow.hdfs._maybe_set_hadoop_classpath": {
  "lineno": 112,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.get",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "pyarrow.hdfs.connect": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.ipc.RecordBatchFileReader": {
  "lineno": 76,
  "symbols_in_volume": [
   "pyarrow.lib._RecordBatchFileReader"
  ],
  "type": "class"
 },
 "pyarrow.ipc.RecordBatchFileReader.__init__": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.RecordBatchFileWriter": {
  "lineno": 92,
  "symbols_in_volume": [
   "pyarrow.lib._RecordBatchFileWriter"
  ],
  "type": "class"
 },
 "pyarrow.ipc.RecordBatchFileWriter.__init__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.RecordBatchStreamReader": {
  "lineno": 48,
  "symbols_in_volume": [
   "pyarrow.lib._RecordBatchReader"
  ],
  "type": "class"
 },
 "pyarrow.ipc.RecordBatchStreamReader.__init__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.RecordBatchStreamWriter": {
  "lineno": 61,
  "symbols_in_volume": [
   "pyarrow.lib._RecordBatchWriter"
  ],
  "type": "class"
 },
 "pyarrow.ipc.RecordBatchStreamWriter.__init__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc._ReadPandasOption": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.ipc._ReadPandasOption.read_pandas": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.deserialize_pandas": {
  "lineno": 165,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.RecordBatchStreamReader"
  ],
  "type": "function"
 },
 "pyarrow.ipc.open_file": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.open_stream": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.serialize_pandas": {
  "lineno": 145,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.RecordBatchStreamWriter"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "module"
 },
 "pyarrow.pandas_compat._add_any_metadata": {
  "lineno": 351,
  "symbols_in_volume": [
   "pyarrow.Array.from_pandas",
   "pyarrow.Column.from_array",
   "pyarrow.Table.from_arrays",
   "pyarrow.field",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.construct_metadata": {
  "lineno": 159,
  "symbols_in_volume": [
   "json.dumps",
   "pandas.__version__"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.dataframe_to_arrays": {
  "lineno": 206,
  "symbols_in_volume": [
   "pyarrow.Array.from_pandas",
   "six.string_types"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.get_column_metadata": {
  "lineno": 92,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.get_logical_type": {
  "lineno": 75,
  "symbols_in_volume": [
   "pyarrow.lib.DecimalType",
   "pyarrow.lib.DictionaryType",
   "pyarrow.lib.ListType",
   "pyarrow.lib.TimestampType"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.get_logical_type_map": {
  "lineno": 46,
  "symbols_in_volume": [
   "pyarrow.lib.Type_BINARY",
   "pyarrow.lib.Type_BOOL",
   "pyarrow.lib.Type_DATE32",
   "pyarrow.lib.Type_DATE64",
   "pyarrow.lib.Type_DOUBLE",
   "pyarrow.lib.Type_FIXED_SIZE_BINARY",
   "pyarrow.lib.Type_FLOAT",
   "pyarrow.lib.Type_HALF_FLOAT",
   "pyarrow.lib.Type_INT16",
   "pyarrow.lib.Type_INT32",
   "pyarrow.lib.Type_INT64",
   "pyarrow.lib.Type_INT8",
   "pyarrow.lib.Type_NA",
   "pyarrow.lib.Type_STRING",
   "pyarrow.lib.Type_TIME32",
   "pyarrow.lib.Type_TIME64",
   "pyarrow.lib.Type_UINT16",
   "pyarrow.lib.Type_UINT32",
   "pyarrow.lib.Type_UINT64",
   "pyarrow.lib.Type_UINT8"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.index_level_name": {
  "lineno": 140,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.pandas_compat.infer_dtype": {
  "lineno": 36,
  "symbols_in_volume": [
   "pandas.api.types.infer_dtype",
   "pandas.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.is_unnamed_index_level": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.pandas_compat.make_datetimetz": {
  "lineno": 272,
  "symbols_in_volume": [
   "pyarrow.compat.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.maybe_coerce_datetime64": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pyarrow.compat.DatetimeTZDtype",
   "pyarrow.from_numpy_dtype",
   "pyarrow.timestamp",
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.table_to_blockmanager": {
  "lineno": 277,
  "symbols_in_volume": [
   "json.loads",
   "pandas.Categorical",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.RangeIndex",
   "pandas.Series",
   "pandas.core.internals.BlockManager",
   "pandas.core.internals.CategoricalBlock",
   "pandas.core.internals.DatetimeTZBlock",
   "pandas.core.internals.make_block",
   "pyarrow.lib.table_to_blocks"
  ],
  "type": "function"
 },
 "pyarrow.parquet": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "module"
 },
 "pyarrow.parquet.ParquetDataset": {
  "lineno": 589,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.ParquetDataset.__init__": {
  "lineno": 611,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem.get_instance"
  ],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDataset._get_common_pandas_metadata": {
  "lineno": 716,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDataset._get_open_file_func": {
  "lineno": 723,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem"
  ],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDataset._get_open_file_func.open_file": {
  "lineno": 729,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDataset.read": {
  "lineno": 660,
  "symbols_in_volume": [
   "pyarrow.lib.concat_tables"
  ],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDataset.read_pandas": {
  "lineno": 704,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDataset.validate_schemas": {
  "lineno": 640,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.ParquetDatasetPiece.__eq__": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece.__init__": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece.__ne__": {
  "lineno": 272,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece.__repr__": {
  "lineno": 275,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece.__str__": {
  "lineno": 281,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece._open": {
  "lineno": 303,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece.get_metadata": {
  "lineno": 296,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece.read": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.lib.Column.from_array",
   "pyarrow.lib.DictionaryArray.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.ParquetFile.__init__": {
  "lineno": 53,
  "symbols_in_volume": [
   "pyarrow._parquet.ParquetReader"
  ],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile._get_column_indices": {
  "lineno": 142,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.metadata": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.num_row_groups": {
  "lineno": 66,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.read": {
  "lineno": 96,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.read_row_group": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.scan_contents": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.schema": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetManifest": {
  "lineno": 489,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.ParquetManifest.__init__": {
  "lineno": 493,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem.get_instance"
  ],
  "type": "function"
 },
 "pyarrow.parquet.ParquetManifest._parse_partition": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetManifest._push_pieces": {
  "lineno": 560,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetManifest._should_silently_exclude": {
  "lineno": 540,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetManifest._visit_directories": {
  "lineno": 544,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetManifest._visit_level": {
  "lineno": 507,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetPartitions": {
  "lineno": 442,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.ParquetPartitions.__getitem__": {
  "lineno": 451,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetPartitions.__init__": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetPartitions.__len__": {
  "lineno": 448,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetPartitions.get_index": {
  "lineno": 454,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetWriter": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.ParquetWriter.__init__": {
  "lineno": 215,
  "symbols_in_volume": [
   "pyarrow._parquet.ParquetWriter"
  ],
  "type": "function"
 },
 "pyarrow.parquet.ParquetWriter.close": {
  "lineno": 230,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetWriter.write_table": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.PartitionSet": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.PartitionSet.__init__": {
  "lineno": 400,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.PartitionSet.dictionary": {
  "lineno": 419,
  "symbols_in_volume": [
   "pyarrow.lib.array"
  ],
  "type": "function"
 },
 "pyarrow.parquet.PartitionSet.get_index": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.PartitionSet.is_sorted": {
  "lineno": 437,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet._ensure_filesystem": {
  "lineno": 736,
  "symbols_in_volume": [
   "inspect.getmro",
   "pyarrow.filesystem.FileSystem",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.filesystem.S3FSWrapper"
  ],
  "type": "function"
 },
 "pyarrow.parquet._get_pandas_index_columns": {
  "lineno": 234,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "pyarrow.parquet._is_parquet_file": {
  "lineno": 380,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet._is_private_directory": {
  "lineno": 574,
  "symbols_in_volume": [
   "os.path.split"
  ],
  "type": "function"
 },
 "pyarrow.parquet._make_manifest": {
  "lineno": 755,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet._parse_hive_partition": {
  "lineno": 567,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet._path_split": {
  "lineno": 579,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet._sanitize_schema": {
  "lineno": 174,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.parquet._sanitize_table": {
  "lineno": 196,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.parquet._sanitized_spark_field_name": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.is_string": {
  "lineno": 485,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "pyarrow.parquet.read_metadata": {
  "lineno": 1025,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.read_pandas": {
  "lineno": 826,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.read_schema": {
  "lineno": 1040,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.read_table": {
  "lineno": 788,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem.get_instance"
  ],
  "type": "function"
 },
 "pyarrow.parquet.write_metadata": {
  "lineno": 998,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.write_table": {
  "lineno": 855,
  "symbols_in_volume": [
   "os.error",
   "os.remove",
   "six.string_types"
  ],
  "type": "function"
 },
 "pyarrow.parquet.write_to_dataset": {
  "lineno": 920,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.guid",
   "pyarrow.filesystem.LocalFileSystem.get_instance"
  ],
  "type": "function"
 },
 "pyarrow.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.conftest.pytest_addoption": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_configure": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_runtest_setup": {
  "lineno": 74,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.pandas_examples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_arrays": {
  "lineno": 26,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_lists": {
  "lineno": 83,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.array",
   "numpy.int64",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_array._check_cast_case": {
  "lineno": 214,
  "symbols_in_volume": [
   "pyarrow.Array.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_factory_invalid_type": {
  "lineno": 146,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.array",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_slice": {
  "lineno": 112,
  "symbols_in_volume": [
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_integers_safe": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.Array.from_pandas",
   "pyarrow.ArrowInvalid",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.uint16",
   "pyarrow.uint8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_integers_unsafe": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.uint16"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_signed_to_unsigned": {
  "lineno": 269,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.uint16",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_boxed_arrays": {
  "lineno": 169,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.repeat",
   "pyarrow.Array.from_pandas",
   "pyarrow.DictionaryArray.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_numpy": {
  "lineno": 152,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.repeat",
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.NA"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_with_pandas": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.repeat",
   "numpy.where",
   "pandas.Categorical.from_codes",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pyarrow.DictionaryArray.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_getitem_NA": {
  "lineno": 40,
  "symbols_in_volume": [
   "pyarrow.NA",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_format": {
  "lineno": 45,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.formatting.array_format"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_from_arrays": {
  "lineno": 202,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.Array.from_pandas",
   "pyarrow.ListArray.from_arrays",
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_logical_type": {
  "lineno": 287,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.decimal",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.null",
   "pyarrow.pandas_compat.get_logical_type",
   "pyarrow.string",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_long_array_format": {
  "lineno": 71,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.formatting.array_format"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_repr_on_pre_init_array": {
  "lineno": 35,
  "symbols_in_volume": [
   "pyarrow.Array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_simple_type_construction": {
  "lineno": 281,
  "symbols_in_volume": [
   "pyarrow.lib.TimestampType",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_format": {
  "lineno": 59,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.formatting.array_format"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_pandas_zero_copy": {
  "lineno": 85,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.array",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_total_bytes_allocated": {
  "lineno": 31,
  "symbols_in_volume": [
   "pyarrow.total_allocated_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable": {
  "lineno": 28,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable.__init__": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable.__iter__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertIterable": {
  "lineno": 36,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertIterable.test_empty_iterable": {
  "lineno": 44,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertIterable.test_iterable_types": {
  "lineno": 38,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence": {
  "lineno": 69,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_all_none": {
  "lineno": 92,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_boolean": {
  "lineno": 77,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.bool_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_bytes": {
  "lineno": 134,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_date": {
  "lineno": 169,
  "symbols_in_volume": [
   "datetime.date",
   "pyarrow.array",
   "pyarrow.date64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_decimal": {
  "lineno": 227,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_decimal_different_precisions": {
  "lineno": 233,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_decimal_large_integer": {
  "lineno": 259,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_decimal_negative": {
  "lineno": 247,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_decimal_no_scale": {
  "lineno": 241,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_decimal_no_whole_part": {
  "lineno": 253,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_double": {
  "lineno": 118,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.float64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_empty_list": {
  "lineno": 85,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_empty_range": {
  "lineno": 271,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_fixed_size_bytes": {
  "lineno": 156,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_fixed_size_bytes_does_not_accept_varying_lengths": {
  "lineno": 164,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_garbage_collection": {
  "lineno": 107,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.array",
   "pyarrow.total_allocated_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_integer": {
  "lineno": 99,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_list_of_int": {
  "lineno": 214,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_mixed_nesting_levels": {
  "lineno": 200,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_mixed_types_fails": {
  "lineno": 222,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_range_types": {
  "lineno": 266,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_sequence_types": {
  "lineno": 71,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_structarray": {
  "lineno": 278,
  "symbols_in_volume": [
   "pyarrow.StructArray.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.int64",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_timestamp": {
  "lineno": 181,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.array",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_unicode": {
  "lineno": 126,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestConvertSequence.test_utf8_to_unicode": {
  "lineno": 145,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.array",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestLimitedConvertIterator": {
  "lineno": 52,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.TestLimitedConvertIterator.test_iterator_size_overflow": {
  "lineno": 58,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestLimitedConvertIterator.test_iterator_size_underflow": {
  "lineno": 63,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.TestLimitedConvertIterator.test_iterator_types": {
  "lineno": 53,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion": {
  "lineno": 63,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion._check_array_roundtrip": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.ma.masked_array",
   "pandas.Series",
   "pandas.isnull",
   "pandas.util.testing.assert_series_equal",
   "pyarrow.Array.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion._check_numpy_array_roundtrip": {
  "lineno": 844,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pyarrow.Array.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion._check_pandas_roundtrip": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion._check_series_roundtrip": {
  "lineno": 84,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pyarrow.Array.from_pandas",
   "pyarrow.TimestampType"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.setUp": {
  "lineno": 65,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.tearDown": {
  "lineno": 68,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_all_none_category": {
  "lineno": 117,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_all_none_objects": {
  "lineno": 113,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_all_nones": {
  "lineno": 890,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_all_nones._check_series": {
  "lineno": 891,
  "symbols_in_volume": [
   "pyarrow.Array.from_pandas",
   "pyarrow.NA",
   "pyarrow.NullArray"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_all_nulls_cast_numeric": {
  "lineno": 291,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.float64",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_all_nulls_cast_numeric._check_type": {
  "lineno": 294,
  "symbols_in_volume": [
   "pyarrow.Array.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_array_from_pandas_type_cast": {
  "lineno": 242,
  "symbols_in_volume": [
   "numpy.arange",
   "pyarrow.Array.from_pandas",
   "pyarrow.int8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_arrow_time_to_pandas": {
  "lineno": 792,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Array.from_pandas",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.time32",
   "pyarrow.time64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_boolean_no_nulls": {
  "lineno": 251,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_boolean_nulls": {
  "lineno": 261,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Array.from_pandas",
   "pyarrow.Table.from_arrays",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_boolean_object_nulls": {
  "lineno": 284,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_bytes_exceed_2gb": {
  "lineno": 322,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.Array.from_pandas",
   "pyarrow.ChunkedArray",
   "pyarrow.Table.from_pandas",
   "pytest.mark.large_memory"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_bytes_to_binary": {
  "lineno": 311,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.binary",
   "pyarrow.compat.u"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_category": {
  "lineno": 611,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_column_of_arrays": {
  "lineno": 503,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_column_of_arrays_to_py": {
  "lineno": 513,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pyarrow.Array.from_pandas",
   "pyarrow.int8",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_column_of_lists": {
  "lineno": 530,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_column_of_lists_chunked": {
  "lineno": 540,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.concat_tables",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_column_of_lists_chunked2": {
  "lineno": 565,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.concat_tables"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_column_of_lists_strided": {
  "lineno": 583,
  "symbols_in_volume": [
   "pandas.concat"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_date_infer": {
  "lineno": 424,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.date32",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_date_objects_typed": {
  "lineno": 439,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.NaT.value",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Array.from_pandas",
   "pyarrow.Table.from_arrays",
   "pyarrow.date32",
   "pyarrow.date64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_dates_from_integers": {
  "lineno": 477,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pyarrow.Array.from_pandas",
   "pyarrow.date32",
   "pyarrow.date64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_decimal_128_from_pandas": {
  "lineno": 732,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.decimal",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_decimal_128_to_pandas": {
  "lineno": 744,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_decimal_32_from_pandas": {
  "lineno": 686,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.decimal",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_decimal_32_to_pandas": {
  "lineno": 698,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_decimal_64_from_pandas": {
  "lineno": 709,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.decimal",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_decimal_64_to_pandas": {
  "lineno": 721,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_decimal_metadata": {
  "lineno": 1010,
  "symbols_in_volume": [
   "decimal.Decimal",
   "json.loads",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_fixed_size_bytes": {
  "lineno": 336,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.binary",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_fixed_size_bytes_does_not_accept_varying_lengths": {
  "lineno": 346,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.ArrowInvalid",
   "pyarrow.Table.from_pandas",
   "pyarrow.binary",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_float_no_nulls": {
  "lineno": 127,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_float_nulls": {
  "lineno": 142,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Array.from_pandas",
   "pyarrow.Table.from_arrays",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_float_object_nulls": {
  "lineno": 170,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.to_numeric",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_infer_lists": {
  "lineno": 955,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_infer_numpy_array": {
  "lineno": 973,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.array",
   "numpy.int64",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_int_object_nulls": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.to_numeric",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_integer_no_nulls": {
  "lineno": 188,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.iinfo",
   "numpy.int_",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.schema",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_integer_with_nulls": {
  "lineno": 213,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Array.from_pandas",
   "pyarrow.Table.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_list_metadata": {
  "lineno": 998,
  "symbols_in_volume": [
   "json.loads",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_metadata_with_mixed_types": {
  "lineno": 987,
  "symbols_in_volume": [
   "json.loads",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_mixed_types_fails": {
  "lineno": 637,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.ArrowException",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_multiindex_duplicate_values": {
  "lineno": 902,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_nested_lists_all_none": {
  "lineno": 592,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.Array.from_pandas",
   "pyarrow.array",
   "pyarrow.list_",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_non_string_columns": {
  "lineno": 122,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_numpy_datetime64_columns": {
  "lineno": 849,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_partial_schema": {
  "lineno": 916,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.array",
   "numpy.int32",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_pytime_from_pandas": {
  "lineno": 755,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.Array.from_pandas",
   "pyarrow.NA",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.time32",
   "pyarrow.time64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_strided_data_import": {
  "lineno": 646,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.rands"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_structarray": {
  "lineno": 938,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pyarrow.StructArray.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.int64",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_table_str_to_categorical": {
  "lineno": 1027,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_threaded_conversion": {
  "lineno": 607,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_timedelta": {
  "lineno": 491,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_timestamps_notimezone_no_nulls": {
  "lineno": 353,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_timestamps_notimezone_nulls": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_timestamps_to_ms_explicit_schema": {
  "lineno": 368,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.util.testing.assert_almost_equal",
   "pandas.util.testing.assert_produces_warning",
   "pyarrow.Array.from_pandas",
   "pyarrow.from_numpy_dtype"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_timestamps_with_timezone": {
  "lineno": 396,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestPandasConversion.test_unicode": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas._alltypes_example": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas._pytime_from_micros": {
  "lineno": 1039,
  "symbols_in_volume": [
   "datetime.time"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas._pytime_to_micros": {
  "lineno": 1049,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_deprecations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_feather": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_feather.TestFeatherReader": {
  "lineno": 40,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._assert_error_on_write": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._assert_error_on_write.f": {
  "lineno": 98,
  "symbols_in_volume": [
   "pyarrow.feather.write_feather"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._check_pandas_roundtrip": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.zeros",
   "os.path.exists",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.feather.read_feather",
   "pyarrow.feather.write_feather"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._get_null_counts": {
  "lineno": 56,
  "symbols_in_volume": [
   "pyarrow.feather.FeatherReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.setUp": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.tearDown": {
  "lineno": 45,
  "symbols_in_volume": [
   "os.error",
   "os.remove"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_all_none": {
  "lineno": 300,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_all_null_category": {
  "lineno": 304,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_no_nulls": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_nulls": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.feather.read_feather",
   "pyarrow.lib.FeatherWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_object_nulls": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_category": {
  "lineno": 322,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_delete_partial_file_on_error": {
  "lineno": 258,
  "symbols_in_volume": [
   "numpy.nan",
   "os.path.exists",
   "pandas.DataFrame",
   "pyarrow.feather.write_feather",
   "pytest.skip",
   "sys.platform"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_duplicate_columns": {
  "lineno": 424,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_empty_strings": {
  "lineno": 296,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_file_not_exist": {
  "lineno": 52,
  "symbols_in_volume": [
   "pyarrow.ArrowIOError",
   "pyarrow.feather.FeatherReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_filelike_objects": {
  "lineno": 401,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.feather.read_feather",
   "pyarrow.feather.write_feather"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_float_no_nulls": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_float_nulls": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.testing.assert_array_equal",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.feather.read_feather",
   "pyarrow.lib.FeatherWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_integer_no_nulls": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_integer_with_nulls": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.feather.read_feather",
   "pyarrow.lib.FeatherWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_multithreaded_read": {
  "lineno": 310,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_nan_as_null": {
  "lineno": 316,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_non_string_columns": {
  "lineno": 364,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_num_rows_attr": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.feather.FeatherReader",
   "pyarrow.feather.write_feather"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_out_of_float64_timestamp_with_nulls": {
  "lineno": 357,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_overwritten_file": {
  "lineno": 388,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pyarrow.feather.write_feather"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_platform_numpy_integers": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_read_columns": {
  "lineno": 379,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_sparse_dataframe": {
  "lineno": 416,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_strings": {
  "lineno": 277,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timedelta_with_nulls": {
  "lineno": 348,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timestamp": {
  "lineno": 333,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timestamp_with_nulls": {
  "lineno": 340,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.datetime"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_unicode_filename": {
  "lineno": 371,
  "symbols_in_volume": [
   "os.path.supports_unicode_filenames",
   "pandas.DataFrame",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_unsupported": {
  "lineno": 432,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.random_path": {
  "lineno": 36,
  "symbols_in_volume": [
   "pyarrow.compat.guid"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases": {
  "lineno": 49,
  "symbols_in_volume": [
   "pytest.mark.hdfs"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases._make_test_file": {
  "lineno": 52,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.setUpClass": {
  "lineno": 63,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.tearDownClass": {
  "lineno": 70,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_capacity_space": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_cat": {
  "lineno": 75,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_chmod_chown": {
  "lineno": 185,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_close": {
  "lineno": 94,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_disk_usage": {
  "lineno": 148,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_download_upload": {
  "lineno": 190,
  "symbols_in_volume": [
   "io.BytesIO",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_file_context_manager": {
  "lineno": 204,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_info": {
  "lineno": 131,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_ls": {
  "lineno": 170,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_mkdir": {
  "lineno": 103,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_mv_rename": {
  "lineno": 113,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_common_metadata_files": {
  "lineno": 265,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.compat.guid",
   "pyarrow.tests.test_parquet._test_read_common_metadata_files",
   "pyarrow.tests.test_parquet.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_multiple_parquet_files": {
  "lineno": 228,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "os.path.join",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.guid",
   "pyarrow.concat_tables",
   "pyarrow.parquet.write_table",
   "pyarrow.tests.test_parquet._test_dataframe",
   "pyarrow.tests.test_parquet.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_whole_file": {
  "lineno": 216,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_write_to_dataset_no_partitions": {
  "lineno": 278,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.compat.guid",
   "pyarrow.tests.test_parquet._test_write_to_dataset_no_partitions",
   "pyarrow.tests.test_parquet.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_write_to_dataset_with_partitions": {
  "lineno": 271,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.compat.guid",
   "pyarrow.tests.test_parquet._test_write_to_dataset_with_partitions",
   "pyarrow.tests.test_parquet.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs": {
  "lineno": 286,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs.check_driver": {
  "lineno": 290,
  "symbols_in_volume": [
   "pyarrow.have_libhdfs",
   "pytest.fail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs.test_orphaned_file": {
  "lineno": 295,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs3": {
  "lineno": 305,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs3.check_driver": {
  "lineno": 309,
  "symbols_in_volume": [
   "pyarrow.have_libhdfs3",
   "pytest.fail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.hdfs_test_client": {
  "lineno": 37,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.get",
   "pyarrow.hdfs.connect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_io._check_native_file_reader": {
  "lineno": 319,
  "symbols_in_volume": [
   "os.SEEK_CUR",
   "os.SEEK_END"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io._try_delete": {
  "lineno": 374,
  "symbols_in_volume": [
   "os.error",
   "os.remove"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.sample_disk_data": {
  "lineno": 302,
  "symbols_in_volume": [
   "numpy.random.randint",
   "os.path.join",
   "pyarrow.compat.guid",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.sample_disk_data.teardown": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_allocate_buffer": {
  "lineno": 173,
  "symbols_in_volume": [
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.allocate_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytearray": {
  "lineno": 152,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pyarrow.frombuffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytes": {
  "lineno": 130,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pyarrow.frombuffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview": {
  "lineno": 141,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pyarrow.frombuffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview_is_immutable": {
  "lineno": 185,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pyarrow.frombuffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_numpy": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "pyarrow.frombuffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting": {
  "lineno": 228,
  "symbols_in_volume": [
   "gc.collect",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting.make_buffer": {
  "lineno": 229,
  "symbols_in_volume": [
   "pyarrow.frombuffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader": {
  "lineno": 84,
  "symbols_in_volume": [
   "pyarrow.BufferReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_non_bytes": {
  "lineno": 106,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.compat.u",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference": {
  "lineno": 111,
  "symbols_in_volume": [
   "gc.collect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference.get_buffer": {
  "lineno": 115,
  "symbols_in_volume": [
   "pyarrow.BufferReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_inmemory_write_after_closed": {
  "lineno": 219,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_reader": {
  "lineno": 350,
  "symbols_in_volume": [
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_retain_buffer_reference": {
  "lineno": 354,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_writer": {
  "lineno": 381,
  "symbols_in_volume": [
   "numpy.random.randint",
   "os.path.join",
   "pyarrow.compat.guid",
   "pyarrow.memory_map",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_output_stream": {
  "lineno": 203,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_mock_output_stream": {
  "lineno": 263,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.BufferOutputStream",
   "pyarrow.MockOutputStream",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.RecordBatchStreamWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_modes": {
  "lineno": 442,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.OSFile",
   "pyarrow.compat.guid",
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_nativefile_write_memoryview": {
  "lineno": 245,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "pyarrow.BufferOutputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_reader": {
  "lineno": 370,
  "symbols_in_volume": [
   "pyarrow.OSFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_writer": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.random.randint",
   "os.path.join",
   "pyarrow.OSFile",
   "pyarrow.compat.guid",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_read": {
  "lineno": 58,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.PythonFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_write": {
  "lineno": 35,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.PythonFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_ipc.MessagingTest": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.MessagingTest._get_sink": {
  "lineno": 37,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessagingTest._get_source": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessagingTest.setUp": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessagingTest.write_batches": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile": {
  "lineno": 72,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestFile._check_roundtrip": {
  "lineno": 83,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.open_file"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile._get_writer": {
  "lineno": 75,
  "symbols_in_volume": [
   "pyarrow.RecordBatchFileWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile.test_empty_file": {
  "lineno": 78,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.ArrowInvalid",
   "pyarrow.open_file",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile.test_read_all": {
  "lineno": 103,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.Table.from_batches",
   "pyarrow.open_file"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile.test_read_pandas": {
  "lineno": 113,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.open_file"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile.test_simple_roundtrip": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile.test_write_table": {
  "lineno": 100,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestInMemoryFile": {
  "lineno": 313,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestInMemoryFile._get_sink": {
  "lineno": 315,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestInMemoryFile._get_source": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestMessageReader": {
  "lineno": 177,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestMessageReader._get_example_messages": {
  "lineno": 179,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.MessageReader.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestMessageReader._get_writer": {
  "lineno": 186,
  "symbols_in_volume": [
   "pyarrow.RecordBatchStreamWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestMessageReader.test_ctors_no_segfault": {
  "lineno": 189,
  "symbols_in_volume": [
   "pyarrow.Message",
   "pyarrow.MessageReader",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestMessageReader.test_message_reader": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestMessageReader.test_read_pandas": {
  "lineno": 225,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestMessageReader.test_read_record_batch": {
  "lineno": 218,
  "symbols_in_volume": [
   "pyarrow.read_record_batch"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestMessageReader.test_serialize_read_message": {
  "lineno": 204,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.read_message"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket": {
  "lineno": 235,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestSocket.StreamReaderServer": {
  "lineno": 237,
  "symbols_in_volume": [
   "threading.Thread"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestSocket.StreamReaderServer.get_result": {
  "lineno": 264,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.StreamReaderServer.init": {
  "lineno": 239,
  "symbols_in_volume": [
   "socket.AF_INET",
   "socket.SOCK_STREAM",
   "socket.socket"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.StreamReaderServer.run": {
  "lineno": 250,
  "symbols_in_volume": [
   "pyarrow.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket._get_sink": {
  "lineno": 288,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket._get_writer": {
  "lineno": 291,
  "symbols_in_volume": [
   "pyarrow.RecordBatchStreamWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.setUp": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.start_server": {
  "lineno": 272,
  "symbols_in_volume": [
   "socket.AF_INET",
   "socket.SOCK_STREAM",
   "socket.socket"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.stop_and_get_result": {
  "lineno": 280,
  "symbols_in_volume": [
   "struct.pack"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.test_read_all": {
  "lineno": 304,
  "symbols_in_volume": [
   "pyarrow.Table.from_batches"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.test_simple_roundtrip": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream": {
  "lineno": 124,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestStream._get_writer": {
  "lineno": 126,
  "symbols_in_volume": [
   "pyarrow.RecordBatchStreamWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream.test_categorical_roundtrip": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream.test_empty_stream": {
  "lineno": 129,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.ArrowInvalid",
   "pyarrow.open_stream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream.test_read_all": {
  "lineno": 167,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.Table.from_batches",
   "pyarrow.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream.test_simple_roundtrip": {
  "lineno": 150,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.open_stream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.read_file": {
  "lineno": 419,
  "symbols_in_volume": [
   "pyarrow.open_file"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_get_record_batch_size": {
  "lineno": 338,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.get_record_batch_size"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_ipc_zero_copy_numpy": {
  "lineno": 322,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.RecordBatch.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip": {
  "lineno": 347,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.deserialize_pandas",
   "pyarrow.serialize_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_multi_index": {
  "lineno": 371,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.deserialize_pandas",
   "pyarrow.serialize_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_not_string_columns": {
  "lineno": 387,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.deserialize_pandas",
   "pyarrow.serialize_pandas",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_nthreads": {
  "lineno": 359,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.deserialize_pandas",
   "pyarrow.serialize_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_schema_batch_serialize_methods": {
  "lineno": 398,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.read_record_batch",
   "pyarrow.read_schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.write_file": {
  "lineno": 413,
  "symbols_in_volume": [
   "pyarrow.RecordBatchFileWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.parquet"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_parquet._check_roundtrip": {
  "lineno": 615,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._filter_partition": {
  "lineno": 959,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._generate_partition_directories": {
  "lineno": 874,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._generate_partition_directories._visit_level": {
  "lineno": 880,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._partition_test_for_filesystem": {
  "lineno": 837,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.randn",
   "numpy.tile",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.parquet.ParquetDataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._random_integers": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._read_table": {
  "lineno": 50,
  "symbols_in_volume": [
   "pyarrow.parquet.read_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._roundtrip_table": {
  "lineno": 607,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_dataframe": {
  "lineno": 247,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.util.testing.rands"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_read_common_metadata_files": {
  "lineno": 902,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "os.path.join",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.read_metadata",
   "pyarrow.parquet.write_metadata"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_write_to_dataset_no_partitions": {
  "lineno": 1251,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.write_to_dataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_write_to_dataset_with_partitions": {
  "lineno": 1222,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.write_to_dataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._write_table": {
  "lineno": 40,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.alltypes_sample": {
  "lineno": 73,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.make_sample_file": {
  "lineno": 369,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.s3_example": {
  "lineno": 805,
  "symbols_in_volume": [
   "os.environ",
   "pyarrow.compat.guid",
   "pytest.yield_fixture",
   "s3fs.S3FileSystem"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_coerce_timestamps": {
  "lineno": 459,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_column_of_arrays": {
  "lineno": 446,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_column_of_lists": {
  "lineno": 484,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_compare_schemas": {
  "lineno": 429,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_read_pandas": {
  "lineno": 1053,
  "symbols_in_volume": [
   "numpy.arange",
   "os.mkdir",
   "os.path.join",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.guid",
   "pyarrow.parquet.ParquetDataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_read_pandas_common_metadata": {
  "lineno": 1087,
  "symbols_in_volume": [
   "numpy.arange",
   "os.mkdir",
   "os.path.join",
   "pandas.Index",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.guid",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.write_metadata"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_date_time_types": {
  "lineno": 497,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.Timestamp",
   "pyarrow.Array.from_pandas",
   "pyarrow.Table.from_arrays",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_date_time_types._assert_unsupported": {
  "lineno": 571,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_arrays",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_fixed_size_binary": {
  "lineno": 596,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_ignore_private_directories": {
  "lineno": 1135,
  "symbols_in_volume": [
   "os.mkdir",
   "os.path.join",
   "pyarrow.compat.guid",
   "pyarrow.parquet.ParquetDataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_large_table_int32_overflow": {
  "lineno": 1295,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.iinfo",
   "numpy.ones",
   "pyarrow.Array.from_pandas",
   "pyarrow.Table.from_arrays",
   "pyarrow.uint8",
   "pytest.mark.large_memory"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_min_chunksize": {
  "lineno": 641,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_multiindex_duplicate_values": {
  "lineno": 1161,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_multithreaded_read": {
  "lineno": 623,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_column_selection": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_1_0_rountrip": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_2_0_rountrip": {
  "lineno": 98,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_2_0_rountrip_read_pandas_no_index_written": {
  "lineno": 165,
  "symbols_in_volume": [
   "json.loads",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_configuration_options": {
  "lineno": 332,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_custom_metadata": {
  "lineno": 145,
  "symbols_in_volume": [
   "json.loads",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_metadata"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_datetime_tz": {
  "lineno": 118,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.BytesIO",
   "pyarrow.parquet.read_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_empty_roundtrip": {
  "lineno": 296,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_native_file_roundtrip": {
  "lineno": 270,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_pyfile_roundtrip": {
  "lineno": 308,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int64",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_metadata_api": {
  "lineno": 382,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_piece_basics": {
  "lineno": 761,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDatasetPiece"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_piece_read": {
  "lineno": 745,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDatasetPiece"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_partition_set_dictionary_type": {
  "lineno": 782,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.IntegerArray",
   "pyarrow.StringArray",
   "pyarrow.compat.u",
   "pyarrow.parquet.PartitionSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pass_separate_metadata": {
  "lineno": 658,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetFile",
   "pyarrow.parquet.read_metadata"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_common_metadata_files": {
  "lineno": 934,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem.get_instance"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_files": {
  "lineno": 970,
  "symbols_in_volume": [
   "numpy.int64",
   "os.mkdir",
   "os.path.join",
   "pyarrow.Table.from_arrays",
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.guid",
   "pyarrow.concat_tables",
   "pyarrow.localfs.read_parquet",
   "pyarrow.parquet.read_metadata",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_files.read_multiple_files": {
  "lineno": 1000,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_non_existent_file": {
  "lineno": 1211,
  "symbols_in_volume": [
   "pyarrow.parquet.read_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_pandas_column_subset": {
  "lineno": 282,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_partitioned_directory": {
  "lineno": 797,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem.get_instance"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_partitioned_directory_s3fs": {
  "lineno": 822,
  "symbols_in_volume": [
   "pyarrow.filesystem.S3FSWrapper",
   "pyarrow.parquet.ParquetDataset",
   "pytest.mark.s3"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_schema": {
  "lineno": 941,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "os.path.join",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_single_row_group": {
  "lineno": 680,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.concat_tables",
   "pyarrow.parquet.ParquetFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_single_row_group_with_column_subset": {
  "lineno": 705,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.concat_tables",
   "pyarrow.parquet.ParquetFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_sanitized_spark_field_names": {
  "lineno": 584,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_scan_contents": {
  "lineno": 726,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_single_pylist_column_roundtrip": {
  "lineno": 55,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_error_deletes_incomplete_file": {
  "lineno": 1183,
  "symbols_in_volume": [
   "gc.collect",
   "numpy.arange",
   "os.path.exists",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.date_range",
   "pyarrow.ArrowException",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_no_partitions": {
  "lineno": 1290,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_with_partitions": {
  "lineno": 1285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient": {
  "lineno": 146,
  "symbols_in_volume": [
   "pytest.mark.plasma"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.setup_method": {
  "lineno": 149,
  "symbols_in_volume": [
   "os.getenv",
   "pyarrow.plasma.connect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.teardown_method": {
  "lineno": 159,
  "symbols_in_volume": [
   "os.getenv",
   "signal.SIGTERM"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_connection_failure_raises_exception": {
  "lineno": 171,
  "symbols_in_volume": [
   "pyarrow.plasma.connect",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_contains": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create": {
  "lineno": 177,
  "symbols_in_volume": [
   "numpy.frombuffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_existing": {
  "lineno": 222,
  "symbols_in_volume": [
   "pyarrow.lib.ArrowException"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_with_metadata": {
  "lineno": 195,
  "symbols_in_volume": [
   "numpy.frombuffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_evict": {
  "lineno": 598,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_get": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_hash": {
  "lineno": 419,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "pyarrow.lib.ArrowException"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_illegal_functionality": {
  "lineno": 572,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_illegal_functionality.illegal_assignment": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_many_hashes": {
  "lineno": 488,
  "symbols_in_volume": [
   "numpy.frombuffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_pickle_object_ids": {
  "lineno": 358,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get": {
  "lineno": 277,
  "symbols_in_volume": [
   "pyarrow.plasma.ObjectID.from_random",
   "pyarrow.plasma.ObjectNotAvailable"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context": {
  "lineno": 290,
  "symbols_in_volume": [
   "pyarrow.ArrowSerializationError",
   "pyarrow.SerializationContext",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context.CustomType": {
  "lineno": 292,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context.CustomType.__init__": {
  "lineno": 293,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_arrow_objects": {
  "lineno": 312,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.testing.assert_equal",
   "pyarrow.BufferReader",
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.get_tensor_size",
   "pyarrow.read_tensor",
   "pyarrow.write_tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_full": {
  "lineno": 366,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_full.assert_create_raises_plasma_full": {
  "lineno": 369,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pyarrow.lib.ArrowException"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_pandas_dataframe": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.MockOutputStream",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.RecordBatchStreamReader",
   "pyarrow.RecordBatchStreamWriter",
   "pyarrow.plasma.ObjectID"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe": {
  "lineno": 637,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe_deletions": {
  "lineno": 657,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.assert_get_object_equal": {
  "lineno": 82,
  "symbols_in_volume": [
   "pyarrow.plasma.buffers_equal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.create_object": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.create_object_with_id": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.generate_metadata": {
  "lineno": 45,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.random_name": {
  "lineno": 36,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.random_object_id": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "pyarrow.plasma.ObjectID"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.start_plasma_store": {
  "lineno": 103,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.__path__",
   "subprocess.Popen",
   "time.sleep"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.write_to_data_buffer": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_scalars.TestScalars": {
  "lineno": 27,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bool": {
  "lineno": 44,
  "symbols_in_volume": [
   "pyarrow.BooleanValue",
   "pyarrow.NA",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bytes": {
  "lineno": 90,
  "symbols_in_volume": [
   "pyarrow.BinaryValue",
   "pyarrow.NA",
   "pyarrow.array",
   "pyarrow.compat.u"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_ctor_null_check": {
  "lineno": 33,
  "symbols_in_volume": [
   "pyarrow.Int16Value",
   "pyarrow.StringValue",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_dictionary": {
  "lineno": 157,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pyarrow.DictionaryArray.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_double": {
  "lineno": 64,
  "symbols_in_volume": [
   "pyarrow.DoubleValue",
   "pyarrow.NA",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_fixed_size_bytes": {
  "lineno": 103,
  "symbols_in_volume": [
   "pyarrow.FixedSizeBinaryValue",
   "pyarrow.NA",
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_int64": {
  "lineno": 54,
  "symbols_in_volume": [
   "pyarrow.Int64Value",
   "pyarrow.NA",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_list": {
  "lineno": 117,
  "symbols_in_volume": [
   "pyarrow.ListValue",
   "pyarrow.NA",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_null_singleton": {
  "lineno": 29,
  "symbols_in_volume": [
   "pyarrow.NAType"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_string_unicode": {
  "lineno": 77,
  "symbols_in_volume": [
   "pyarrow.NA",
   "pyarrow.StringValue",
   "pyarrow.array",
   "pyarrow.compat.unicode_type"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_timestamp": {
  "lineno": 133,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.date_range",
   "pyarrow.Array.from_pandas",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_schema.test_field": {
  "lineno": 118,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_field_add_remove_metadata": {
  "lineno": 160,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_field_empty": {
  "lineno": 154,
  "symbols_in_volume": [
   "pyarrow.Field",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema": {
  "lineno": 131,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_add_remove_metadata": {
  "lineno": 182,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals": {
  "lineno": 206,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_negative_indexing": {
  "lineno": 222,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_repr_with_dictionaries": {
  "lineno": 242,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.dictionary",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_time_types": {
  "lineno": 84,
  "symbols_in_volume": [
   "pyarrow.time32",
   "pyarrow.time64",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_from_numpy_dtype_timestamps": {
  "lineno": 105,
  "symbols_in_volume": [
   "numpy.dtype",
   "pyarrow.from_numpy_dtype",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_integers": {
  "lineno": 24,
  "symbols_in_volume": [
   "pyarrow"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_list": {
  "lineno": 62,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_string": {
  "lineno": 72,
  "symbols_in_volume": [
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_timestamp_with_tz": {
  "lineno": 77,
  "symbols_in_volume": [
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_to_pandas_dtype": {
  "lineno": 34,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.dtype",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.object_",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.null",
   "pyarrow.string",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.namedtuple",
   "numpy.array",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.normal",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "numpy.zeros",
   "string.printable",
   "sys.version_info"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_serialization.Bar": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Bar.__init__": {
  "lineno": 131,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Baz": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Baz.__init__": {
  "lineno": 137,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Baz.method": {
  "lineno": 141,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.CustomError": {
  "lineno": 160,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Foo": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Foo.__eq__": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Foo.__hash__": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Foo.__init__": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Qux": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Qux.__init__": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.SubQux": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SubQux.__init__": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.SubQuxPickle": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SubQuxPickle.__init__": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.assert_equal": {
  "lineno": 30,
  "symbols_in_volume": [
   "numpy.__name__",
   "numpy.testing.assert_equal",
   "pyarrow.lib.is_named_tuple"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.large_memory_map": {
  "lineno": 230,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pytest.yield_fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.make_serialization_context": {
  "lineno": 174,
  "symbols_in_volume": [
   "numpy.ndarray",
   "pyarrow.SerializationContext",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.make_serialization_context.array_custom_deserializer": {
  "lineno": 179,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.make_serialization_context.array_custom_serializer": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.serialization_roundtrip": {
  "lineno": 222,
  "symbols_in_volume": [
   "pyarrow.deserialize_from",
   "pyarrow.serialize_to"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_arrow_limits": {
  "lineno": 289,
  "symbols_in_volume": [
   "numpy.zeros",
   "pyarrow.memory_map",
   "pytest.mark.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_arrow_limits.huge_memory_map": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_complex_serialization": {
  "lineno": 258,
  "symbols_in_volume": [
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_custom_serialization": {
  "lineno": 264,
  "symbols_in_volume": [
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_immutable": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.zeros",
   "pyarrow.deserialize_from",
   "pyarrow.memory_map",
   "pyarrow.serialize_to",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_serialization": {
  "lineno": 270,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization": {
  "lineno": 244,
  "symbols_in_volume": [
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error": {
  "lineno": 318,
  "symbols_in_volume": [
   "pyarrow.DeserializationCallbackError",
   "pyarrow.SerializationCallbackError",
   "pyarrow.SerializationContext",
   "pyarrow.serialize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error.TempClass": {
  "lineno": 320,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialize_to_buffer": {
  "lineno": 250,
  "symbols_in_volume": [
   "pyarrow.deserialize",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_table.TestColumn": {
  "lineno": 28,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_table.TestColumn.test_basics": {
  "lineno": 30,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.TestColumn.test_from_array": {
  "lineno": 42,
  "symbols_in_volume": [
   "pyarrow.Column.from_array",
   "pyarrow.array",
   "pyarrow.field"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.TestColumn.test_pandas": {
  "lineno": 50,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables": {
  "lineno": 239,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.concat_tables"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_basics": {
  "lineno": 62,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_empty_metadata": {
  "lineno": 85,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_to_pandas": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_slice_getitem": {
  "lineno": 95,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_schema_equals": {
  "lineno": 172,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.ArrowException",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_to_pandas": {
  "lineno": 148,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_schema_ctor_errors": {
  "lineno": 292,
  "symbols_in_volume": [
   "pyarrow.Schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_add_column": {
  "lineno": 203,
  "symbols_in_volume": [
   "pyarrow.Column.from_array",
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_basics": {
  "lineno": 183,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_ctor_errors": {
  "lineno": 285,
  "symbols_in_volume": [
   "pyarrow.Table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_negative_indexing": {
  "lineno": 264,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_remove_column": {
  "lineno": 226,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_tensor._try_delete": {
  "lineno": 79,
  "symbols_in_volume": [
   "gc.collect",
   "os.error",
   "os.remove"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_read_tensor": {
  "lineno": 140,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.testing.assert_equal",
   "os.path.join",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.create_memory_map",
   "pyarrow.get_tensor_size",
   "pyarrow.memory_map",
   "pyarrow.read_tensor",
   "pyarrow.write_tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_attrs": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_base_object": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_roundtrip": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.random.randn",
   "os.path.join",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.create_memory_map",
   "pyarrow.read_tensor",
   "pyarrow.write_tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_strided": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.random.randn",
   "os.path.join",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.create_memory_map",
   "pyarrow.read_tensor",
   "pyarrow.write_tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_numpy_roundtrip": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_size": {
  "lineno": 134,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.get_tensor_size"
  ],
  "type": "function"
 },
 "pyarrow.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.util._deprecate_class": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.util._deprecate_class.deprecated_factory": {
  "lineno": 34,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyarrow.util.implements": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.util.implements.decorator": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 }
}