{
 "pyarrow": {
  "lineno": null,
  "symbols_in_volume": [
   "pkg_resources.DistributionNotFound",
   "pkg_resources.get_distribution",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.lib.py_buffer",
   "pyarrow.util._deprecate_api",
   "setuptools_scm.get_version"
  ],
  "type": "module"
 },
 "pyarrow._plasma_store_entry_point": {
  "lineno": 150,
  "symbols_in_volume": [
   "os.execv",
   "os.path.join",
   "pyarrow.__path__",
   "sys.argv"
  ],
  "type": "function"
 },
 "pyarrow.compat": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "itertools.izip",
   "itertools.izip_longest",
   "itertools.zip_longest",
   "numpy.integer",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.__version__",
   "pandas.api.types",
   "pandas.core.common",
   "six.integer_types",
   "sys.version_info"
  ],
  "type": "module"
 },
 "pyarrow.compat.Categorical": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.compat.ClassPlaceholder": {
  "lineno": 54,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.compat.ClassPlaceholder.__init__": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.DatetimeTZDtype": {
  "lineno": 51,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.compat.PandasSeries": {
  "lineno": 59,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.compat.dict_values": {
  "lineno": 118,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.encode_file_path": {
  "lineno": 150,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.frombytes": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.guid": {
  "lineno": 123,
  "symbols_in_volume": [
   "uuid.uuid4"
  ],
  "type": "function"
 },
 "pyarrow.compat.lzip": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.tobytes": {
  "lineno": 130,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.u": {
  "lineno": 127,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.compat.unichar": {
  "lineno": 139,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.feather": {
  "lineno": null,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "pandas.__version__",
   "pandas.lib.infer_dtype",
   "pyarrow.compat.pdapi.infer_dtype"
  ],
  "type": "module"
 },
 "pyarrow.feather.FeatherReader": {
  "lineno": 39,
  "symbols_in_volume": [
   "pyarrow.lib.FeatherReader"
  ],
  "type": "class"
 },
 "pyarrow.feather.FeatherReader.__init__": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.feather.FeatherReader.read": {
  "lineno": 45,
  "symbols_in_volume": [
   "pyarrow.lib.Table.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.feather.FeatherWriter": {
  "lineno": 64,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.feather.FeatherWriter.__init__": {
  "lineno": 66,
  "symbols_in_volume": [
   "pyarrow.lib.FeatherWriter"
  ],
  "type": "function"
 },
 "pyarrow.feather.FeatherWriter.write": {
  "lineno": 71,
  "symbols_in_volume": [
   "pandas.SparseDataFrame",
   "pyarrow.lib.RecordBatch.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.feather.read_feather": {
  "lineno": 114,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.feather.write_feather": {
  "lineno": 88,
  "symbols_in_volume": [
   "gc.collect",
   "os.error",
   "os.remove",
   "six.string_types"
  ],
  "type": "function"
 },
 "pyarrow.filesystem": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.filesystem.DaskFileSystem": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.filesystem.DaskFileSystem.__init__": {
  "lineno": 250,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem._isfilestore": {
  "lineno": 261,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.delete": {
  "lineno": 269,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.exists": {
  "lineno": 273,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.isdir": {
  "lineno": 253,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.isfile": {
  "lineno": 257,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.ls": {
  "lineno": 291,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.mkdir": {
  "lineno": 277,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.open": {
  "lineno": 284,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.DaskFileSystem.walk": {
  "lineno": 294,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.filesystem.FileSystem._isfilestore": {
  "lineno": 138,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem._path_join": {
  "lineno": 83,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.cat": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.delete": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.disk_usage": {
  "lineno": 58,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.exists": {
  "lineno": 123,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.isdir": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.isfile": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.ls": {
  "lineno": 40,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.mkdir": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.mv": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.open": {
  "lineno": 179,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.pathsep": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.read_parquet": {
  "lineno": 145,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDataset"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.rename": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.rm": {
  "lineno": 95,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.FileSystem.stat": {
  "lineno": 86,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem": {
  "lineno": 190,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.filesystem.LocalFileSystem._isfilestore": {
  "lineno": 219,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.exists": {
  "lineno": 223,
  "symbols_in_volume": [
   "os.path.exists",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.get_instance": {
  "lineno": 194,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.isdir": {
  "lineno": 211,
  "symbols_in_volume": [
   "os.path.isdir",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.isfile": {
  "lineno": 215,
  "symbols_in_volume": [
   "os.path.isfile",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.ls": {
  "lineno": 200,
  "symbols_in_volume": [
   "os.listdir",
   "os.path.join",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.mkdir": {
  "lineno": 204,
  "symbols_in_volume": [
   "os.makedirs",
   "os.mkdir",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.open": {
  "lineno": 227,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.pathsep": {
  "lineno": 234,
  "symbols_in_volume": [
   "os.path.sep"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.LocalFileSystem.walk": {
  "lineno": 238,
  "symbols_in_volume": [
   "os.walk"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.S3FSWrapper": {
  "lineno": 301,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.filesystem.S3FSWrapper.isdir": {
  "lineno": 303,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.S3FSWrapper.isfile": {
  "lineno": 314,
  "symbols_in_volume": [
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.filesystem.S3FSWrapper.walk": {
  "lineno": 322,
  "symbols_in_volume": [
   "posixpath.split"
  ],
  "type": "function"
 },
 "pyarrow.formatting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.formatting._indent": {
  "lineno": 52,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.formatting.array_format": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.formatting.value_format": {
  "lineno": 44,
  "symbols_in_volume": [
   "pyarrow.lib.ListValue"
  ],
  "type": "function"
 },
 "pyarrow.get_include": {
  "lineno": 175,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.get_libraries": {
  "lineno": 184,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.get_library_dirs": {
  "lineno": 192,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.split",
   "sys.platform"
  ],
  "type": "function"
 },
 "pyarrow.hdfs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.hdfs.HadoopFileSystem": {
  "lineno": 26,
  "symbols_in_volume": [
   "pyarrow.filesystem.FileSystem",
   "pyarrow.lib.HadoopFileSystem"
  ],
  "type": "class"
 },
 "pyarrow.hdfs.HadoopFileSystem.__init__": {
  "lineno": 32,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.__reduce__": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem._isfilestore": {
  "lineno": 43,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.delete": {
  "lineno": 58,
  "symbols_in_volume": [
   "pyarrow.filesystem.FileSystem.delete",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.exists": {
  "lineno": 81,
  "symbols_in_volume": [
   "pyarrow.filesystem.FileSystem.exists",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.isdir": {
  "lineno": 50,
  "symbols_in_volume": [
   "pyarrow.filesystem.FileSystem.isdir",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.isfile": {
  "lineno": 54,
  "symbols_in_volume": [
   "pyarrow.filesystem.FileSystem.isfile",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.ls": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.mkdir": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.rename": {
  "lineno": 77,
  "symbols_in_volume": [
   "pyarrow.filesystem.FileSystem.rename",
   "pyarrow.util.implements"
  ],
  "type": "function"
 },
 "pyarrow.hdfs.HadoopFileSystem.walk": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.hdfs._libhdfs_walk_files_dirs": {
  "lineno": 138,
  "symbols_in_volume": [
   "posixpath.split"
  ],
  "type": "function"
 },
 "pyarrow.hdfs._maybe_set_hadoop_classpath": {
  "lineno": 123,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.get",
   "subprocess.check_output"
  ],
  "type": "function"
 },
 "pyarrow.hdfs.connect": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.ipc.RecordBatchFileReader": {
  "lineno": 76,
  "symbols_in_volume": [
   "pyarrow.lib._RecordBatchFileReader"
  ],
  "type": "class"
 },
 "pyarrow.ipc.RecordBatchFileReader.__init__": {
  "lineno": 88,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.RecordBatchFileWriter": {
  "lineno": 92,
  "symbols_in_volume": [
   "pyarrow.lib._RecordBatchFileWriter"
  ],
  "type": "class"
 },
 "pyarrow.ipc.RecordBatchFileWriter.__init__": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.RecordBatchStreamReader": {
  "lineno": 48,
  "symbols_in_volume": [
   "pyarrow.lib._RecordBatchReader"
  ],
  "type": "class"
 },
 "pyarrow.ipc.RecordBatchStreamReader.__init__": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.RecordBatchStreamWriter": {
  "lineno": 61,
  "symbols_in_volume": [
   "pyarrow.lib._RecordBatchWriter"
  ],
  "type": "class"
 },
 "pyarrow.ipc.RecordBatchStreamWriter.__init__": {
  "lineno": 72,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc._ReadPandasOption": {
  "lineno": 29,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.ipc._ReadPandasOption.read_pandas": {
  "lineno": 31,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.deserialize_pandas": {
  "lineno": 171,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.RecordBatchStreamReader"
  ],
  "type": "function"
 },
 "pyarrow.ipc.open_file": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.open_stream": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.ipc.serialize_pandas": {
  "lineno": 145,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.RecordBatchStreamWriter"
  ],
  "type": "function"
 },
 "pyarrow.orc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.orc.ORCFile": {
  "lineno": 62,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.orc.ORCFile.__init__": {
  "lineno": 72,
  "symbols_in_volume": [
   "pyarrow._orc.ORCReader"
  ],
  "type": "function"
 },
 "pyarrow.orc.ORCFile._select_indices": {
  "lineno": 92,
  "symbols_in_volume": [
   "numbers.Integral"
  ],
  "type": "function"
 },
 "pyarrow.orc.ORCFile.nrows": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.orc.ORCFile.nstripes": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.orc.ORCFile.read": {
  "lineno": 133,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.orc.ORCFile.read_stripe": {
  "lineno": 113,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.orc.ORCFile.schema": {
  "lineno": 77,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.orc._is_map": {
  "lineno": 26,
  "symbols_in_volume": [
   "pyarrow.types.is_list",
   "pyarrow.types.is_struct"
  ],
  "type": "function"
 },
 "pyarrow.orc._schema_to_indices": {
  "lineno": 58,
  "symbols_in_volume": [
   "itertools.count"
  ],
  "type": "function"
 },
 "pyarrow.orc._traverse": {
  "lineno": 34,
  "symbols_in_volume": [
   "pyarrow.lib.Schema",
   "pyarrow.types.is_list",
   "pyarrow.types.is_struct",
   "pyarrow.types.is_union"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.bytes_",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.object_",
   "numpy.str_",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "numpy.unicode_",
   "pyarrow.compat.PY2"
  ],
  "type": "module"
 },
 "pyarrow.pandas_compat._add_any_metadata": {
  "lineno": 754,
  "symbols_in_volume": [
   "pyarrow.Array.from_pandas",
   "pyarrow.Column.from_array",
   "pyarrow.Table.from_arrays",
   "pyarrow.field",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat._backwards_compatible_index_name": {
  "lineno": 618,
  "symbols_in_volume": [
   "re.match"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat._column_name_to_strings": {
  "lineno": 261,
  "symbols_in_volume": [
   "collections.Sequence",
   "six.binary_type",
   "six.string_types"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat._flatten_single_level_multiindex": {
  "lineno": 739,
  "symbols_in_volume": [
   "pandas.Index",
   "pandas.MultiIndex"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat._index_level_name": {
  "lineno": 300,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.pandas_compat._make_datetimetz": {
  "lineno": 484,
  "symbols_in_volume": [
   "pyarrow.compat.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat._pandas_type_to_numpy_type": {
  "lineno": 653,
  "symbols_in_volume": [
   "numpy.dtype"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat._reconstruct_block": {
  "lineno": 457,
  "symbols_in_volume": [
   "pandas.Categorical.from_codes",
   "pandas.core.internals.CategoricalBlock",
   "pandas.core.internals.DatetimeTZBlock",
   "pandas.core.internals.ObjectBlock",
   "pandas.core.internals.make_block",
   "pyarrow.compat.builtin_pickle.loads"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat._reconstruct_columns_from_metadata": {
  "lineno": 672,
  "symbols_in_volume": [
   "numpy.bytes_",
   "operator.methodcaller",
   "pandas.MultiIndex",
   "pandas.RangeIndex",
   "pyarrow.compat.zip_longest"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat._table_to_blocks": {
  "lineno": 728,
  "symbols_in_volume": [
   "pyarrow.lib.table_to_blocks"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.construct_metadata": {
  "lineno": 185,
  "symbols_in_volume": [
   "json.dumps",
   "pandas.__version__"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.dataframe_to_arrays": {
  "lineno": 319,
  "symbols_in_volume": [
   "concurrent.futures.ThreadPoolExecutor",
   "pyarrow.cpu_count"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.dataframe_to_arrays.convert_column": {
  "lineno": 365,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.dataframe_to_serialized_dict": {
  "lineno": 411,
  "symbols_in_volume": [
   "pandas.core.internals.CategoricalBlock",
   "pandas.core.internals.DatetimeTZBlock",
   "pandas.core.internals.ObjectBlock",
   "pyarrow.compat.builtin_pickle.HIGHEST_PROTOCOL",
   "pyarrow.compat.builtin_pickle.dumps"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.get_column_metadata": {
  "lineno": 140,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.get_datetimetz_type": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.datetime64",
   "pyarrow.compat.DatetimeTZDtype",
   "pyarrow.from_numpy_dtype",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.get_extension_dtype_info": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.pandas_compat.get_logical_type": {
  "lineno": 73,
  "symbols_in_volume": [
   "pyarrow.lib.Decimal128Type",
   "pyarrow.lib.DictionaryType",
   "pyarrow.lib.ListType",
   "pyarrow.lib.TimestampType"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.get_logical_type_from_numpy": {
  "lineno": 108,
  "symbols_in_volume": [
   "pyarrow.compat.PY2"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.get_logical_type_map": {
  "lineno": 44,
  "symbols_in_volume": [
   "pyarrow.lib.Type_BINARY",
   "pyarrow.lib.Type_BOOL",
   "pyarrow.lib.Type_DATE32",
   "pyarrow.lib.Type_DATE64",
   "pyarrow.lib.Type_DOUBLE",
   "pyarrow.lib.Type_FIXED_SIZE_BINARY",
   "pyarrow.lib.Type_FLOAT",
   "pyarrow.lib.Type_HALF_FLOAT",
   "pyarrow.lib.Type_INT16",
   "pyarrow.lib.Type_INT32",
   "pyarrow.lib.Type_INT64",
   "pyarrow.lib.Type_INT8",
   "pyarrow.lib.Type_NA",
   "pyarrow.lib.Type_STRING",
   "pyarrow.lib.Type_TIME32",
   "pyarrow.lib.Type_TIME64",
   "pyarrow.lib.Type_UINT16",
   "pyarrow.lib.Type_UINT32",
   "pyarrow.lib.Type_UINT64",
   "pyarrow.lib.Type_UINT8"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.infer_dtype": {
  "lineno": 34,
  "symbols_in_volume": [
   "pandas.api.types.infer_dtype",
   "pandas.lib.infer_dtype"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.serialized_dict_to_dataframe": {
  "lineno": 449,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.core.internals.BlockManager"
  ],
  "type": "function"
 },
 "pyarrow.pandas_compat.table_to_blockmanager": {
  "lineno": 493,
  "symbols_in_volume": [
   "ast.literal_eval",
   "json.loads",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays",
   "pandas.MultiIndex.from_tuples",
   "pandas.RangeIndex",
   "pandas.Series",
   "pandas.core.internals.BlockManager",
   "pyarrow.compat.DatetimeTZDtype"
  ],
  "type": "function"
 },
 "pyarrow.parquet": {
  "lineno": null,
  "symbols_in_volume": [
   "re.compile"
  ],
  "type": "module"
 },
 "pyarrow.parquet.ParquetDataset": {
  "lineno": 693,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.ParquetDataset.__init__": {
  "lineno": 715,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDataset._get_common_pandas_metadata": {
  "lineno": 833,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDataset._get_open_file_func": {
  "lineno": 840,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem"
  ],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDataset._get_open_file_func.open_file": {
  "lineno": 846,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDataset.read": {
  "lineno": 777,
  "symbols_in_volume": [
   "pyarrow.lib.concat_tables"
  ],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDataset.read_pandas": {
  "lineno": 821,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDataset.validate_schemas": {
  "lineno": 747,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece": {
  "lineno": 347,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.ParquetDatasetPiece.__eq__": {
  "lineno": 368,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece.__init__": {
  "lineno": 363,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece.__ne__": {
  "lineno": 375,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece.__repr__": {
  "lineno": 378,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece.__str__": {
  "lineno": 384,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece._open": {
  "lineno": 406,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece.get_metadata": {
  "lineno": 399,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetDatasetPiece.read": {
  "lineno": 415,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.lib.Column.from_array",
   "pyarrow.lib.DictionaryArray.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.ParquetFile.__init__": {
  "lineno": 61,
  "symbols_in_volume": [
   "pyarrow._parquet.ParquetReader"
  ],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile._build_nested_paths": {
  "lineno": 68,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile._build_nested_paths._visit_piece": {
  "lineno": 73,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile._get_column_indices": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.metadata": {
  "lineno": 85,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.num_row_groups": {
  "lineno": 93,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.read": {
  "lineno": 125,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.read_row_group": {
  "lineno": 97,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.scan_contents": {
  "lineno": 152,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetFile.schema": {
  "lineno": 89,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetManifest": {
  "lineno": 589,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.ParquetManifest.__init__": {
  "lineno": 593,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetManifest._parse_partition": {
  "lineno": 657,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetManifest._push_pieces": {
  "lineno": 664,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetManifest._should_silently_exclude": {
  "lineno": 644,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetManifest._visit_directories": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetManifest._visit_level": {
  "lineno": 611,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetPartitions": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.ParquetPartitions.__getitem__": {
  "lineno": 550,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetPartitions.__init__": {
  "lineno": 543,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetPartitions.__len__": {
  "lineno": 547,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetPartitions.get_index": {
  "lineno": 553,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetWriter": {
  "lineno": 259,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.ParquetWriter.__del__": {
  "lineno": 311,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetWriter.__enter__": {
  "lineno": 315,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetWriter.__exit__": {
  "lineno": 318,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetWriter.__init__": {
  "lineno": 271,
  "symbols_in_volume": [
   "pyarrow._parquet.ParquetWriter"
  ],
  "type": "function"
 },
 "pyarrow.parquet.ParquetWriter.close": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.ParquetWriter.write_table": {
  "lineno": 323,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.PartitionSet": {
  "lineno": 483,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.parquet.PartitionSet.__init__": {
  "lineno": 499,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.PartitionSet.dictionary": {
  "lineno": 518,
  "symbols_in_volume": [
   "pyarrow.lib.array"
  ],
  "type": "function"
 },
 "pyarrow.parquet.PartitionSet.get_index": {
  "lineno": 505,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.PartitionSet.is_sorted": {
  "lineno": 536,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet._ensure_file": {
  "lineno": 1147,
  "symbols_in_volume": [
   "pyarrow.lib.ArrowIOError"
  ],
  "type": "function"
 },
 "pyarrow.parquet._ensure_filesystem": {
  "lineno": 853,
  "symbols_in_volume": [
   "inspect.getmro",
   "pyarrow.filesystem.FileSystem",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.filesystem.S3FSWrapper"
  ],
  "type": "function"
 },
 "pyarrow.parquet._get_fs_from_path": {
  "lineno": 1161,
  "symbols_in_volume": [
   "pathlib.Path",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.hdfs.connect",
   "six.moves.urllib.parse.urlparse"
  ],
  "type": "function"
 },
 "pyarrow.parquet._get_pandas_index_columns": {
  "lineno": 337,
  "symbols_in_volume": [
   "json.loads"
  ],
  "type": "function"
 },
 "pyarrow.parquet._is_private_directory": {
  "lineno": 678,
  "symbols_in_volume": [
   "os.path.split"
  ],
  "type": "function"
 },
 "pyarrow.parquet._make_manifest": {
  "lineno": 872,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet._mkdir_if_not_exists": {
  "lineno": 1005,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet._parse_hive_partition": {
  "lineno": 671,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet._path_split": {
  "lineno": 683,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet._sanitize_schema": {
  "lineno": 209,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.parquet._sanitize_table": {
  "lineno": 233,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.parquet._sanitized_spark_field_name": {
  "lineno": 205,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.is_path": {
  "lineno": 584,
  "symbols_in_volume": [
   "pathlib.Path",
   "six.string_types"
  ],
  "type": "function"
 },
 "pyarrow.parquet.read_metadata": {
  "lineno": 1117,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.read_pandas": {
  "lineno": 953,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.read_schema": {
  "lineno": 1132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.read_table": {
  "lineno": 931,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.write_metadata": {
  "lineno": 1089,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.parquet.write_table": {
  "lineno": 967,
  "symbols_in_volume": [
   "os.error",
   "os.remove"
  ],
  "type": "function"
 },
 "pyarrow.parquet.write_to_dataset": {
  "lineno": 1013,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.guid"
  ],
  "type": "function"
 },
 "pyarrow.parse_version": {
  "lineno": 28,
  "symbols_in_volume": [
   "setuptools_scm.version_from_scm"
  ],
  "type": "function"
 },
 "pyarrow.serialization": {
  "lineno": null,
  "symbols_in_volume": [
   "cloudpickle",
   "pyarrow.compat.builtin_pickle",
   "pyarrow.lib._default_serialization_context"
  ],
  "type": "module"
 },
 "pyarrow.serialization._deserialize_numpy_array_list": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype"
  ],
  "type": "function"
 },
 "pyarrow.serialization._load_pickle_from_buffer": {
  "lineno": 52,
  "symbols_in_volume": [
   "pyarrow.compat.builtin_pickle.loads",
   "six.PY2"
  ],
  "type": "function"
 },
 "pyarrow.serialization._pickle_to_buffer": {
  "lineno": 47,
  "symbols_in_volume": [
   "pyarrow.compat.builtin_pickle.HIGHEST_PROTOCOL",
   "pyarrow.compat.builtin_pickle.dumps",
   "pyarrow.lib.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers._deserialize_pandas_dataframe": {
  "lineno": 76,
  "symbols_in_volume": [
   "pyarrow.pandas_compat.serialized_dict_to_dataframe"
  ],
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers._deserialize_pandas_series": {
  "lineno": 82,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers._serialize_pandas_dataframe": {
  "lineno": 73,
  "symbols_in_volume": [
   "pyarrow.pandas_compat.dataframe_to_serialized_dict"
  ],
  "type": "function"
 },
 "pyarrow.serialization._register_custom_pandas_handlers._serialize_pandas_series": {
  "lineno": 79,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.serialization._serialize_numpy_array_list": {
  "lineno": 39,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.serialization.default_serialization_context": {
  "lineno": 182,
  "symbols_in_volume": [
   "pyarrow.lib.SerializationContext"
  ],
  "type": "function"
 },
 "pyarrow.serialization.register_default_serialization_handlers": {
  "lineno": 127,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "collections.defaultdict",
   "numpy.ndarray",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pyarrow.serialization.register_default_serialization_handlers._deserialize_default_dict": {
  "lineno": 160,
  "symbols_in_volume": [
   "collections.defaultdict"
  ],
  "type": "function"
 },
 "pyarrow.serialization.register_default_serialization_handlers._deserialize_ordered_dict": {
  "lineno": 149,
  "symbols_in_volume": [
   "collections.OrderedDict"
  ],
  "type": "function"
 },
 "pyarrow.serialization.register_default_serialization_handlers._serialize_default_dict": {
  "lineno": 157,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.serialization.register_default_serialization_handlers._serialize_ordered_dict": {
  "lineno": 146,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.serialization.register_torch_serialization_handlers": {
  "lineno": 102,
  "symbols_in_volume": [
   "torch.ByteTensor",
   "torch.CharTensor",
   "torch.DoubleTensor",
   "torch.FloatTensor",
   "torch.HalfTensor",
   "torch.IntTensor",
   "torch.LongTensor",
   "torch.ShortTensor"
  ],
  "type": "function"
 },
 "pyarrow.serialization.register_torch_serialization_handlers._deserialize_torch_tensor": {
  "lineno": 112,
  "symbols_in_volume": [
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "pyarrow.serialization.register_torch_serialization_handlers._serialize_torch_tensor": {
  "lineno": 109,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.conftest": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.conftest.pytest_addoption": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_collection_modifyitems": {
  "lineno": 77,
  "symbols_in_volume": [
   "pytest.mark.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_configure": {
  "lineno": 53,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.conftest.pytest_runtest_setup": {
  "lineno": 86,
  "symbols_in_volume": [
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.deserialize_buffer": {
  "lineno": null,
  "symbols_in_volume": [
   "pyarrow.deserialize",
   "sys.argv"
  ],
  "type": "module"
 },
 "pyarrow.tests.pandas_examples": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_arrays": {
  "lineno": 26,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.arange",
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.pandas_examples.dataframe_with_lists": {
  "lineno": 83,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.array",
   "numpy.int64",
   "pandas.DataFrame",
   "pyarrow.binary",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_array._check_cast_case": {
  "lineno": 332,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_conversions_no_sentinel_values": {
  "lineno": 566,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pyarrow.array",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_eq_raises": {
  "lineno": 171,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int32",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_factory_invalid_type": {
  "lineno": 157,
  "symbols_in_volume": [
   "datetime.timedelta",
   "numpy.array",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_ascii": {
  "lineno": 605,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_datetimeD": {
  "lineno": 580,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pyarrow.array",
   "pyarrow.date32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_numpy_unicode": {
  "lineno": 634,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_from_py_float32": {
  "lineno": 588,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float32",
   "pandas.Series",
   "pyarrow.array",
   "pyarrow.float32",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_ref_to_ndarray_base": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_slice": {
  "lineno": 113,
  "symbols_in_volume": [
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_array_uint64_from_py_over_range": {
  "lineno": 560,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.uint64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_buffers_nested": {
  "lineno": 703,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.struct",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_buffers_primitive": {
  "lineno": 666,
  "symbols_in_volume": [
   "numpy.int8",
   "pyarrow.array",
   "pyarrow.int16",
   "struct.unpack"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_column": {
  "lineno": 370,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.column",
   "pyarrow.float64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_date32_to_int": {
  "lineno": 495,
  "symbols_in_volume": [
   "datetime.date",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_date64_to_int": {
  "lineno": 511,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.date64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_integers_safe": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pyarrow.float64",
   "pyarrow.int32",
   "pyarrow.uint16",
   "pyarrow.uint8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_integers_unsafe": {
  "lineno": 382,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.int16",
   "pyarrow.uint16"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_signed_to_unsigned": {
  "lineno": 429,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.uint16",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_time32_to_int": {
  "lineno": 468,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.time32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_time64_to_int": {
  "lineno": 477,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.time64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_timestamp_to_int": {
  "lineno": 486,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_cast_timestamp_unit": {
  "lineno": 399,
  "symbols_in_volume": [
   "datetime.datetime.now",
   "pandas.Series",
   "pyarrow.Array.from_pandas",
   "pyarrow.array",
   "pyarrow.timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_encode_simple": {
  "lineno": 452,
  "symbols_in_volume": [
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_arrays_boundscheck": {
  "lineno": 211,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_boxed_arrays": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.repeat",
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_from_numpy": {
  "lineno": 181,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.repeat",
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.NA"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_dictionary_with_pandas": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.repeat",
   "numpy.where",
   "pandas.Categorical.from_codes",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pyarrow.DictionaryArray.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_getitem_NA": {
  "lineno": 41,
  "symbols_in_volume": [
   "pyarrow.NA",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_invalid_tensor_constructor_repr": {
  "lineno": 738,
  "symbols_in_volume": [
   "pyarrow.Tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_invalid_tensor_operation": {
  "lineno": 743,
  "symbols_in_volume": [
   "pyarrow.Tensor",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_format": {
  "lineno": 46,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.formatting.array_format"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_list_from_arrays": {
  "lineno": 252,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.ListArray.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_logical_type": {
  "lineno": 527,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.decimal128",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.null",
   "pyarrow.pandas_compat.get_logical_type",
   "pyarrow.string",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_long_array_format": {
  "lineno": 72,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.formatting.array_format"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_repr_on_pre_init_array": {
  "lineno": 36,
  "symbols_in_volume": [
   "pyarrow.Array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_simple_type_construction": {
  "lineno": 521,
  "symbols_in_volume": [
   "pyarrow.lib.TimestampType",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_format": {
  "lineno": 60,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.formatting.array_format"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_string_from_buffers": {
  "lineno": 302,
  "symbols_in_volume": [
   "pyarrow.StringArray.from_buffers",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_struct_array_slice": {
  "lineno": 148,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.int8",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_to_pandas_zero_copy": {
  "lineno": 86,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.array",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_total_bytes_allocated": {
  "lineno": 32,
  "symbols_in_volume": [
   "pyarrow.total_allocated_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_dense": {
  "lineno": 280,
  "symbols_in_volume": [
   "pyarrow.UnionArray.from_dense",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_union_from_sparse": {
  "lineno": 291,
  "symbols_in_volume": [
   "pyarrow.UnionArray.from_sparse",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_array.test_unique_simple": {
  "lineno": 441,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable": {
  "lineno": 45,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable.__init__": {
  "lineno": 46,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.StrangeIterable.__iter__": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_dict_values": {
  "lineno": 112,
  "symbols_in_volume": [
   "six.viewvalues"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_list": {
  "lineno": 104,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin._as_tuple": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_decimal_array_with_none_and_nan": {
  "lineno": 644,
  "symbols_in_volume": [
   "decimal.Decimal",
   "numpy.nan",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_iterable": {
  "lineno": 60,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_list": {
  "lineno": 145,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.null",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_empty_range": {
  "lineno": 530,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_fixed_size_bytes_does_not_accept_varying_lengths": {
  "lineno": 291,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pyarrow.binary",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_garbage_collection": {
  "lineno": 217,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.array",
   "pyarrow.total_allocated_bytes"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_infinite_iterator": {
  "lineno": 95,
  "symbols_in_volume": [
   "itertools.count",
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_iterable_types": {
  "lineno": 53,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_iterator_without_size": {
  "lineno": 86,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_size_overflow": {
  "lineno": 74,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_size_underflow": {
  "lineno": 80,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_limited_iterator_types": {
  "lineno": 68,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_range_types": {
  "lineno": 524,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_all_none": {
  "lineno": 154,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_boolean": {
  "lineno": 125,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.bool_",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_bytes": {
  "lineno": 258,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_date": {
  "lineno": 297,
  "symbols_in_volume": [
   "datetime.date",
   "pyarrow.array",
   "pyarrow.date64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_date32": {
  "lineno": 310,
  "symbols_in_volume": [
   "datetime.date",
   "pyarrow.ArrowException",
   "pyarrow.NA",
   "pyarrow.array",
   "pyarrow.date32",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal": {
  "lineno": 479,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_different_precisions": {
  "lineno": 486,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_large_integer": {
  "lineno": 516,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_negative": {
  "lineno": 502,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_no_scale": {
  "lineno": 495,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_decimal_no_whole_part": {
  "lineno": 509,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_double": {
  "lineno": 229,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.float64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_fixed_size_bytes": {
  "lineno": 282,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.iinfo",
   "pyarrow.array",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_integer_inferred": {
  "lineno": 175,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_list_of_int": {
  "lineno": 456,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.int64",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_mixed_nesting_levels": {
  "lineno": 441,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_mixed_types_fails": {
  "lineno": 465,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_mixed_types_with_specified_type_fails": {
  "lineno": 471,
  "symbols_in_volume": [
   "pyarrow.ArrowInvalid",
   "pyarrow.array",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_boolean": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.bool",
   "pyarrow.array",
   "pyarrow.bool_",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_double": {
  "lineno": 238,
  "symbols_in_volume": [
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "pyarrow.array",
   "pyarrow.float64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_integer": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.iinfo",
   "pyarrow.array",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_integer_inferred": {
  "lineno": 199,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.int64",
   "numpy.uint64",
   "pyarrow.array",
   "pyarrow.int64",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_numpy_timestamp": {
  "lineno": 350,
  "symbols_in_volume": [
   "datetime.datetime",
   "numpy.datetime64",
   "pyarrow.array",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp": {
  "lineno": 330,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.array",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_from_int_with_unit": {
  "lineno": 405,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.array",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_from_int_with_unit.CustomClass": {
  "lineno": 434,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_timestamp_with_unit": {
  "lineno": 370,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.array",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_types": {
  "lineno": 117,
  "symbols_in_volume": [
   "pyarrow.array",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_unicode": {
  "lineno": 249,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_sequence_utf8_to_unicode": {
  "lineno": 270,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.array",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_dicts": {
  "lineno": 556,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.string",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_mixed_sequence": {
  "lineno": 609,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.string",
   "pyarrow.struct",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_struct_from_tuples": {
  "lineno": 581,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.string",
   "pyarrow.struct",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_structarray": {
  "lineno": 538,
  "symbols_in_volume": [
   "pyarrow.StructArray.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.int64",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_builtin.test_structarray_from_arrays_coerce": {
  "lineno": 620,
  "symbols_in_volume": [
   "pyarrow.StructArray.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes": {
  "lineno": 702,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_array_from_pandas_date_with_mask": {
  "lineno": 1010,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pandas.Series",
   "pyarrow.Array.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_arrow_time_to_pandas": {
  "lineno": 916,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array",
   "pyarrow.time32",
   "pyarrow.time64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_date_infer": {
  "lineno": 791,
  "symbols_in_volume": [
   "datetime.date",
   "pandas.DataFrame",
   "pandas.to_datetime",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.date32",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_date_mask": {
  "lineno": 806,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_date_objects_typed": {
  "lineno": 815,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pandas.DataFrame",
   "pandas.NaT.value",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.date32",
   "pyarrow.date64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_dates_from_integers": {
  "lineno": 853,
  "symbols_in_volume": [
   "datetime.date",
   "numpy.array",
   "pyarrow.array",
   "pyarrow.date32",
   "pyarrow.date64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_datetime64_to_date32": {
  "lineno": 781,
  "symbols_in_volume": [
   "datetime.date",
   "pyarrow.Array.from_pandas",
   "pyarrow.Column.from_array",
   "pyarrow.array",
   "pyarrow.date32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_numpy_datetime64_columns": {
  "lineno": 968,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_numpy_datetime64_day_unit": {
  "lineno": 1001,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_python_datetime": {
  "lineno": 765,
  "symbols_in_volume": [
   "datetime.datetime.today",
   "datetime.timedelta",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.TimestampArray"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_pytime_from_pandas": {
  "lineno": 879,
  "symbols_in_volume": [
   "datetime.time",
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.NA",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.array",
   "pyarrow.time32",
   "pyarrow.time64"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_timedelta": {
  "lineno": 867,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_timestamps_notimezone_no_nulls": {
  "lineno": 707,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_timestamps_notimezone_nulls": {
  "lineno": 722,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDateTimeLikeTypes.test_timestamps_with_timezone": {
  "lineno": 737,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDecimalTypes": {
  "lineno": 1147,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDecimalTypes.test_decimal_128_from_pandas": {
  "lineno": 1198,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.decimal128",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDecimalTypes.test_decimal_128_to_pandas": {
  "lineno": 1210,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDecimalTypes.test_decimal_32_from_pandas": {
  "lineno": 1152,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.decimal128",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDecimalTypes.test_decimal_32_to_pandas": {
  "lineno": 1164,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDecimalTypes.test_decimal_64_from_pandas": {
  "lineno": 1175,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.decimal128",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDecimalTypes.test_decimal_64_to_pandas": {
  "lineno": 1187,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDecimalTypes.test_decimal_fails_with_truncation": {
  "lineno": 1221,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pyarrow.ArrowException",
   "pyarrow.array",
   "pyarrow.decimal128",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertDecimalTypes.test_decimal_with_different_precisions": {
  "lineno": 1232,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.Series",
   "pyarrow.array",
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata": {
  "lineno": 120,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_binary_column_name": {
  "lineno": 306,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_categorical_column_index": {
  "lineno": 197,
  "symbols_in_volume": [
   "json.loads",
   "pandas.DataFrame",
   "pandas.Index",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_categorical_row_index": {
  "lineno": 267,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_column_index_names_are_preserved": {
  "lineno": 130,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_datetimetz_column_index": {
  "lineno": 238,
  "symbols_in_volume": [
   "json.loads",
   "pandas.DataFrame",
   "pandas.date_range",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_datetimetz_row_index": {
  "lineno": 257,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_decimal_metadata": {
  "lineno": 357,
  "symbols_in_volume": [
   "decimal.Decimal",
   "json.loads",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_dictionary_indices_boundscheck": {
  "lineno": 279,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.DictionaryArray.from_arrays",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.Table.from_batches",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_duplicate_column_names_does_not_crash": {
  "lineno": 274,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_empty_list_metadata": {
  "lineno": 405,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "json.loads",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.Table.from_batches",
   "pyarrow.Table.from_pandas",
   "pyarrow.array",
   "pyarrow.list_",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_index_metadata_field_name": {
  "lineno": 162,
  "symbols_in_volume": [
   "json.loads",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_integer_index_column": {
  "lineno": 158,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_list_metadata": {
  "lineno": 345,
  "symbols_in_volume": [
   "json.loads",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_metadata_with_mixed_types": {
  "lineno": 334,
  "symbols_in_volume": [
   "json.loads",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_mixed_unicode_column_names": {
  "lineno": 299,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_multiindex_columns": {
  "lineno": 135,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_multiindex_columns_unicode": {
  "lineno": 153,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_multiindex_columns_with_dtypes": {
  "lineno": 142,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex",
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_multiindex_duplicate_values": {
  "lineno": 320,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_non_string_columns": {
  "lineno": 125,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_string_column_index": {
  "lineno": 215,
  "symbols_in_volume": [
   "json.loads",
   "pandas.DataFrame",
   "pandas.Index",
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.PY2"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_table_column_subset_metadata": {
  "lineno": 374,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMetadata.test_unicode_with_unicode_column_and_index": {
  "lineno": 294,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMisc": {
  "lineno": 1657,
  "symbols_in_volume": [
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.object",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pyarrow.binary",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.string",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMisc.test_all_none_category": {
  "lineno": 1686,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMisc.test_all_none_objects": {
  "lineno": 1682,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMisc.test_all_nones": {
  "lineno": 1776,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.sqrt",
   "pandas.Series"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMisc.test_all_nones._check_series": {
  "lineno": 1777,
  "symbols_in_volume": [
   "pyarrow.NA",
   "pyarrow.NullArray",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMisc.test_category": {
  "lineno": 1701,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMisc.test_convert_empty_table": {
  "lineno": 1819,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.util.testing.assert_almost_equal",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.string",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMisc.test_empty_arrays": {
  "lineno": 1691,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMisc.test_mixed_types_fails": {
  "lineno": 1727,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.ArrowException",
   "pyarrow.Table.from_pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMisc.test_non_natural_stride": {
  "lineno": 1829,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.dtype",
   "numpy.int16",
   "numpy.int32",
   "pyarrow.array",
   "pyarrow.int16",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMisc.test_partial_schema": {
  "lineno": 1788,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.array",
   "numpy.int32",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMisc.test_strided_data_import": {
  "lineno": 1736,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.rands"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMisc.test_table_batch_empty_dataframe": {
  "lineno": 1810,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertMisc.test_threaded_conversion": {
  "lineno": 1696,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes": {
  "lineno": 457,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes.test_all_integer_types": {
  "lineno": 538,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes.test_all_nulls_cast_numeric": {
  "lineno": 645,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.float64",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes.test_all_nulls_cast_numeric._check_type": {
  "lineno": 648,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes.test_array_from_pandas_type_cast": {
  "lineno": 578,
  "symbols_in_volume": [
   "numpy.arange",
   "pyarrow.array",
   "pyarrow.int8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes.test_boolean_no_nulls": {
  "lineno": 587,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes.test_boolean_nulls": {
  "lineno": 597,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes.test_boolean_object_nulls": {
  "lineno": 638,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes.test_float_no_nulls": {
  "lineno": 462,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes.test_float_nulls": {
  "lineno": 477,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.field",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes.test_float_nulls_to_ints": {
  "lineno": 505,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.np.NaN",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes.test_float_object_nulls": {
  "lineno": 620,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.float64",
   "pandas.DataFrame",
   "pandas.to_numeric",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes.test_int_object_nulls": {
  "lineno": 629,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.to_numeric",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes.test_integer_no_nulls": {
  "lineno": 513,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.iinfo",
   "numpy.int_",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.schema",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertPrimitiveTypes.test_integer_with_nulls": {
  "lineno": 549,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStringLikeTypes": {
  "lineno": 1024,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStringLikeTypes.test_bytes_exceed_2gb": {
  "lineno": 1049,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.ChunkedArray",
   "pyarrow.Table.from_pandas",
   "pyarrow.array",
   "pytest.mark.large_memory"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStringLikeTypes.test_bytes_to_binary": {
  "lineno": 1038,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.binary",
   "pyarrow.compat.u"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStringLikeTypes.test_fixed_size_bytes": {
  "lineno": 1066,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.binary",
   "pyarrow.field",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStringLikeTypes.test_fixed_size_bytes_does_not_accept_varying_lengths": {
  "lineno": 1076,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.ArrowInvalid",
   "pyarrow.Table.from_pandas",
   "pyarrow.binary",
   "pyarrow.field",
   "pyarrow.schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStringLikeTypes.test_selective_categoricals": {
  "lineno": 1098,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStringLikeTypes.test_table_empty_str": {
  "lineno": 1083,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStringLikeTypes.test_table_str_to_categorical_with_na": {
  "lineno": 1131,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.ArrowInvalid",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStringLikeTypes.test_table_str_to_categorical_without_na": {
  "lineno": 1116,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.ArrowInvalid",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStringLikeTypes.test_unicode": {
  "lineno": 1029,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStructTypes": {
  "lineno": 1467,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStructTypes.test_from_numpy": {
  "lineno": 1489,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.dtype",
   "numpy.int32",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStructTypes.test_from_numpy_bad_input": {
  "lineno": 1592,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.dtype",
   "numpy.int32",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.struct",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStructTypes.test_from_numpy_large": {
  "lineno": 1537,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.float64",
   "numpy.nan",
   "numpy.random.random_sample",
   "numpy.zeros",
   "pyarrow.array",
   "pyarrow.binary",
   "pyarrow.field",
   "pyarrow.float64",
   "pyarrow.struct",
   "pytest.mark.large_memory"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStructTypes.test_from_numpy_large.check": {
  "lineno": 1561,
  "symbols_in_volume": [
   "numpy.isnan"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStructTypes.test_from_numpy_large.iter_chunked_array": {
  "lineno": 1556,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStructTypes.test_from_numpy_nested": {
  "lineno": 1520,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.bool_",
   "numpy.dtype",
   "numpy.int16",
   "numpy.int8",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int8",
   "pyarrow.struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestConvertStructTypes.test_to_pandas": {
  "lineno": 1472,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pyarrow.StructArray.from_arrays",
   "pyarrow.array",
   "pyarrow.bool_",
   "pyarrow.int64",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes": {
  "lineno": 1247,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_array_from_nested_arrays": {
  "lineno": 1457,
  "symbols_in_volume": [
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_array_from_pandas_typed_array_with_mask": {
  "lineno": 1419,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pyarrow.Array.from_pandas",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.null",
   "pyarrow.string",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_column_of_arrays": {
  "lineno": 1252,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_column_of_arrays_to_py": {
  "lineno": 1262,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pyarrow.array",
   "pyarrow.int8",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_column_of_lists": {
  "lineno": 1279,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_column_of_lists_chunked": {
  "lineno": 1297,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.concat_tables",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_column_of_lists_chunked2": {
  "lineno": 1322,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.concat_tables"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_column_of_lists_first_empty": {
  "lineno": 1289,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_column_of_lists_strided": {
  "lineno": 1340,
  "symbols_in_volume": [
   "pandas.concat"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_empty_list_roundtrip": {
  "lineno": 1445,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.empty",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_infer_lists": {
  "lineno": 1387,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_infer_numpy_array": {
  "lineno": 1405,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.array",
   "numpy.int64",
   "pandas.DataFrame",
   "pyarrow.field",
   "pyarrow.int64",
   "pyarrow.list_",
   "pyarrow.schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_nested_lists_all_empty": {
  "lineno": 1364,
  "symbols_in_volume": [
   "pandas.Series",
   "pyarrow.array",
   "pyarrow.list_",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_nested_lists_all_none": {
  "lineno": 1349,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.array",
   "pyarrow.list_",
   "pyarrow.null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestListTypes.test_nested_smaller_ints": {
  "lineno": 1372,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Series",
   "pyarrow.array",
   "pyarrow.float32",
   "pyarrow.int8",
   "pyarrow.list_"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestZeroCopyConversion": {
  "lineno": 1608,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_convert_pandas.TestZeroCopyConversion.test_zero_copy_dictionaries": {
  "lineno": 1617,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.Categorical",
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pyarrow.DictionaryArray.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestZeroCopyConversion.test_zero_copy_failure_on_bool_types": {
  "lineno": 1640,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestZeroCopyConversion.test_zero_copy_failure_on_list_types": {
  "lineno": 1644,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.ArrowException",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestZeroCopyConversion.test_zero_copy_failure_on_object_types": {
  "lineno": 1628,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestZeroCopyConversion.test_zero_copy_failure_on_timestamp_types": {
  "lineno": 1650,
  "symbols_in_volume": [
   "numpy.array",
   "pyarrow.ArrowException",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestZeroCopyConversion.test_zero_copy_failure_with_float_when_nulls": {
  "lineno": 1636,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestZeroCopyConversion.test_zero_copy_failure_with_int_when_nulls": {
  "lineno": 1632,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.TestZeroCopyConversion.test_zero_copy_success": {
  "lineno": 1613,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas._alltypes_example": {
  "lineno": 40,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas._check_array_from_pandas_roundtrip": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas._check_array_roundtrip": {
  "lineno": 94,
  "symbols_in_volume": [
   "numpy.ma.masked_array",
   "pandas.Series",
   "pandas.isnull",
   "pandas.util.testing.assert_series_equal",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas._check_pandas_roundtrip": {
  "lineno": 63,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.RecordBatch",
   "pyarrow.Table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas._check_serialize_components_roundtrip": {
  "lineno": 1882,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.default_serialization_context"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas._check_series_roundtrip": {
  "lineno": 83,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.util.testing.assert_series_equal",
   "pyarrow.array",
   "pyarrow.types.is_timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas._fully_loaded_dataframe_example": {
  "lineno": 1843,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.array",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.tile",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.Series",
   "pandas.__version__",
   "pandas.date_range",
   "pandas.interval_range",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas._pytime_from_micros": {
  "lineno": 1898,
  "symbols_in_volume": [
   "datetime.time"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas._pytime_to_micros": {
  "lineno": 1908,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.test_array_integer_object_nulls_option": {
  "lineno": 657,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.testing.assert_equal",
   "pyarrow.array",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.test_roundtrip_with_bytes_unicode": {
  "lineno": 1872,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.test_serialize_deserialize_pandas": {
  "lineno": 1891,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_convert_pandas.test_table_integer_object_nulls_option": {
  "lineno": 678,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_cython": {
  "lineno": null,
  "symbols_in_volume": [
   "os.path.abspath",
   "os.path.dirname"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_cython.test_cython_api": {
  "lineno": 60,
  "symbols_in_volume": [
   "os.environ",
   "os.environ.get",
   "os.name",
   "os.path.join",
   "pyarrow.array",
   "pyarrow.tests.util.get_modified_env_with_pythonpath",
   "pytest.importorskip",
   "pytest.mark.skipif",
   "pytest.raises",
   "shutil.copyfile",
   "subprocess.check_call",
   "sys.executable",
   "sys.path",
   "sys.path.insert"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_deprecations": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_feather": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_feather.TestFeatherReader": {
  "lineno": 40,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._assert_error_on_write": {
  "lineno": 89,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._assert_error_on_write.f": {
  "lineno": 98,
  "symbols_in_volume": [
   "pyarrow.feather.write_feather"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._check_pandas_roundtrip": {
  "lineno": 66,
  "symbols_in_volume": [
   "numpy.testing.assert_array_equal",
   "numpy.zeros",
   "os.path.exists",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.feather.read_feather",
   "pyarrow.feather.write_feather"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader._get_null_counts": {
  "lineno": 56,
  "symbols_in_volume": [
   "pyarrow.feather.FeatherReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.setUp": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.tearDown": {
  "lineno": 45,
  "symbols_in_volume": [
   "os.error",
   "os.remove"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_all_none": {
  "lineno": 326,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_all_null_category": {
  "lineno": 330,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_no_nulls": {
  "lineno": 219,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.random.seed",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_nulls": {
  "lineno": 227,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.feather.read_feather",
   "pyarrow.lib.FeatherWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_boolean_object_nulls": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_buffer_bounds_error": {
  "lineno": 252,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.array",
   "pyarrow.feather.read_feather",
   "pyarrow.float64",
   "pyarrow.lib.FeatherWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_category": {
  "lineno": 348,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.Categorical",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_delete_partial_file_on_error": {
  "lineno": 278,
  "symbols_in_volume": [
   "numpy.nan",
   "os.path.exists",
   "pandas.DataFrame",
   "pyarrow.feather.write_feather",
   "pytest.skip",
   "sys.platform"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_delete_partial_file_on_error.CustomClass": {
  "lineno": 282,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_duplicate_columns": {
  "lineno": 450,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_empty_strings": {
  "lineno": 322,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_file_not_exist": {
  "lineno": 52,
  "symbols_in_volume": [
   "pyarrow.ArrowIOError",
   "pyarrow.feather.FeatherReader",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_filelike_objects": {
  "lineno": 427,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.feather.read_feather",
   "pyarrow.feather.write_feather"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_float_no_nulls": {
  "lineno": 120,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_float_nulls": {
  "lineno": 132,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "numpy.random.randn",
   "numpy.testing.assert_array_equal",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.feather.read_feather",
   "pyarrow.lib.FeatherWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_integer_no_nulls": {
  "lineno": 162,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_integer_with_nulls": {
  "lineno": 189,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randint",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.feather.read_feather",
   "pyarrow.lib.FeatherWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_large_dataframe": {
  "lineno": 470,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pytest.mark.slow"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_multithreaded_read": {
  "lineno": 336,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_nan_as_null": {
  "lineno": 342,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_non_string_columns": {
  "lineno": 390,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_num_rows_attr": {
  "lineno": 103,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.feather.FeatherReader",
   "pyarrow.feather.write_feather"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_out_of_float64_timestamp_with_nulls": {
  "lineno": 383,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.DatetimeIndex"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_overwritten_file": {
  "lineno": 414,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.random.seed",
   "pandas.DataFrame",
   "pyarrow.feather.write_feather"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_platform_numpy_integers": {
  "lineno": 176,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_read_columns": {
  "lineno": 405,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_sparse_dataframe": {
  "lineno": 442,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_strings": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.nan",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timedelta_with_nulls": {
  "lineno": 374,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timedelta",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timestamp": {
  "lineno": 359,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.date_range"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_timestamp_with_nulls": {
  "lineno": 366,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.datetime"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_unicode_filename": {
  "lineno": 397,
  "symbols_in_volume": [
   "os.path.supports_unicode_filenames",
   "pandas.DataFrame",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.TestFeatherReader.test_unsupported": {
  "lineno": 458,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.period_range"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_feather.random_path": {
  "lineno": 36,
  "symbols_in_volume": [
   "pyarrow.compat.guid"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases": {
  "lineno": 50,
  "symbols_in_volume": [
   "pytest.mark.hdfs"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases._make_test_file": {
  "lineno": 53,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases._write_multiple_hdfs_pq_files": {
  "lineno": 275,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "os.path.join",
   "pyarrow.Table.from_pandas",
   "pyarrow.concat_tables",
   "pyarrow.parquet.write_table",
   "pyarrow.tests.test_parquet._test_dataframe"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.setUpClass": {
  "lineno": 64,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.tearDownClass": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_capacity_space": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_cat": {
  "lineno": 92,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_chmod_chown": {
  "lineno": 223,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_close": {
  "lineno": 111,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_disk_usage": {
  "lineno": 186,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_download_upload": {
  "lineno": 228,
  "symbols_in_volume": [
   "io.BytesIO",
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_exists_isdir_isfile": {
  "lineno": 165,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_file_context_manager": {
  "lineno": 242,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_info": {
  "lineno": 148,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_ls": {
  "lineno": 208,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_mkdir": {
  "lineno": 120,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_mv_rename": {
  "lineno": 130,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_open_not_exist_error_message": {
  "lineno": 254,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_pickle": {
  "lineno": 80,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_common_metadata_files": {
  "lineno": 349,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.compat.guid",
   "pyarrow.tests.test_parquet._test_read_common_metadata_files",
   "pyarrow.tests.test_parquet.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_multiple_parquet_files": {
  "lineno": 299,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.compat.guid",
   "pyarrow.tests.test_parquet.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_multiple_parquet_files_with_uri": {
  "lineno": 313,
  "symbols_in_volume": [
   "os.path.join",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.compat.guid",
   "pyarrow.parquet.read_table",
   "pyarrow.tests.test_parquet.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_whole_file": {
  "lineno": 263,
  "symbols_in_volume": [
   "os.path.join"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_read_write_parquet_files_with_uri": {
  "lineno": 329,
  "symbols_in_volume": [
   "numpy.int64",
   "os.path.join",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.guid",
   "pyarrow.parquet.read_table",
   "pyarrow.parquet.write_table",
   "pyarrow.tests.test_parquet._test_dataframe",
   "pyarrow.tests.test_parquet.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_unknown_driver": {
  "lineno": 76,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_write_to_dataset_no_partitions": {
  "lineno": 362,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.compat.guid",
   "pyarrow.tests.test_parquet._test_write_to_dataset_no_partitions",
   "pyarrow.tests.test_parquet.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.HdfsTestCases.test_write_to_dataset_with_partitions": {
  "lineno": 355,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.compat.guid",
   "pyarrow.tests.test_parquet._test_write_to_dataset_with_partitions",
   "pyarrow.tests.test_parquet.parquet"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs": {
  "lineno": 370,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs.check_driver": {
  "lineno": 374,
  "symbols_in_volume": [
   "pyarrow.have_libhdfs",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs.test_orphaned_file": {
  "lineno": 379,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs3": {
  "lineno": 389,
  "symbols_in_volume": [
   "unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_hdfs.TestLibHdfs3.check_driver": {
  "lineno": 393,
  "symbols_in_volume": [
   "pyarrow.have_libhdfs3",
   "pytest.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs._get_hdfs_uri": {
  "lineno": 399,
  "symbols_in_volume": [
   "os.environ.get"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_hdfs.hdfs_test_client": {
  "lineno": 38,
  "symbols_in_volume": [
   "os.environ.get",
   "pyarrow.hdfs.connect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_io._check_native_file_reader": {
  "lineno": 492,
  "symbols_in_volume": [
   "os.SEEK_CUR",
   "os.SEEK_END"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io._try_delete": {
  "lineno": 547,
  "symbols_in_volume": [
   "os.error",
   "os.remove"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.sample_disk_data": {
  "lineno": 475,
  "symbols_in_volume": [
   "numpy.random.randint",
   "os.path.join",
   "pyarrow.compat.guid",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.sample_disk_data.teardown": {
  "lineno": 486,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_allocate_buffer": {
  "lineno": 285,
  "symbols_in_volume": [
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.allocate_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_allocate_buffer_resizable": {
  "lineno": 297,
  "symbols_in_volume": [
   "pyarrow.ResizableBuffer",
   "pyarrow.allocate_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytearray": {
  "lineno": 194,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_bytes": {
  "lineno": 170,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals": {
  "lineno": 237,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.int16",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals.eq": {
  "lineno": 239,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_equals.ne": {
  "lineno": 244,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_from_numpy": {
  "lineno": 224,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int8",
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_hashing": {
  "lineno": 266,
  "symbols_in_volume": [
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_invalid": {
  "lineno": 206,
  "symbols_in_volume": [
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview": {
  "lineno": 182,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_memoryview_is_immutable": {
  "lineno": 333,
  "symbols_in_volume": [
   "pyarrow.Buffer",
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting": {
  "lineno": 401,
  "symbols_in_volume": [
   "gc.collect",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_protocol_ref_counting.make_buffer": {
  "lineno": 402,
  "symbols_in_volume": [
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_buffer_to_numpy": {
  "lineno": 212,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader": {
  "lineno": 86,
  "symbols_in_volume": [
   "pyarrow.BufferReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_non_bytes": {
  "lineno": 108,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.compat.u",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference": {
  "lineno": 113,
  "symbols_in_volume": [
   "gc.collect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_bytes_reader_retains_parent_reference.get_buffer": {
  "lineno": 117,
  "symbols_in_volume": [
   "pyarrow.BufferReader"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_compress_decompress": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.random.randint",
   "numpy.uint8",
   "pyarrow.compress",
   "pyarrow.decompress",
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_foreign_buffer": {
  "lineno": 272,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.frombuffer",
   "numpy.int32",
   "pyarrow.foreign_buffer",
   "weakref.ref"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_inmemory_write_after_closed": {
  "lineno": 392,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_reader": {
  "lineno": 523,
  "symbols_in_volume": [
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_retain_buffer_reference": {
  "lineno": 527,
  "symbols_in_volume": [
   "gc.collect",
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_map_writer": {
  "lineno": 554,
  "symbols_in_volume": [
   "numpy.random.randint",
   "os.path.join",
   "pyarrow.compat.guid",
   "pyarrow.memory_map",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_output_stream": {
  "lineno": 376,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_memory_zero_length": {
  "lineno": 595,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.compat.guid",
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_mock_output_stream": {
  "lineno": 436,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.BufferOutputStream",
   "pyarrow.MockOutputStream",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.RecordBatchStreamWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_TextIOWrapper": {
  "lineno": 704,
  "symbols_in_volume": [
   "io.TextIOWrapper",
   "os.path.join",
   "pyarrow.OSFile",
   "pyarrow.compat.guid"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_modes": {
  "lineno": 623,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.OSFile",
   "pyarrow.compat.guid",
   "pyarrow.memory_map"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_native_file_raises_ValueError_after_close": {
  "lineno": 674,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.OSFile",
   "pyarrow.compat.guid",
   "pyarrow.memory_map",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_nativefile_write_memoryview": {
  "lineno": 418,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "pyarrow.BufferOutputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_reader": {
  "lineno": 543,
  "symbols_in_volume": [
   "pyarrow.OSFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_os_file_writer": {
  "lineno": 603,
  "symbols_in_volume": [
   "numpy.random.randint",
   "os.path.join",
   "pyarrow.OSFile",
   "pyarrow.compat.guid",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_closing": {
  "lineno": 154,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.PythonFile",
   "weakref.ref"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_implicit_mode": {
  "lineno": 129,
  "symbols_in_volume": [
   "io.BytesIO",
   "os.path.join",
   "pyarrow.PythonFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_read": {
  "lineno": 60,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.PythonFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_python_file_write": {
  "lineno": 37,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.PythonFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_io.test_uninitialized_buffer": {
  "lineno": 353,
  "symbols_in_volume": [
   "functools.partial",
   "pyarrow.Buffer",
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_ipc.MessagingTest": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.MessagingTest._get_sink": {
  "lineno": 38,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessagingTest._get_source": {
  "lineno": 41,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessagingTest.setUp": {
  "lineno": 35,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.MessagingTest.write_batches": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile": {
  "lineno": 73,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestFile._check_roundtrip": {
  "lineno": 84,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.open_file"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile._get_writer": {
  "lineno": 76,
  "symbols_in_volume": [
   "pyarrow.RecordBatchFileWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile.test_empty_file": {
  "lineno": 79,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.ArrowInvalid",
   "pyarrow.open_file",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile.test_read_all": {
  "lineno": 104,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.Table.from_batches",
   "pyarrow.open_file"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile.test_read_pandas": {
  "lineno": 114,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.open_file"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile.test_simple_roundtrip": {
  "lineno": 98,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestFile.test_write_table": {
  "lineno": 101,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestInMemoryFile": {
  "lineno": 357,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestInMemoryFile._get_sink": {
  "lineno": 359,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestInMemoryFile._get_source": {
  "lineno": 362,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestMessageReader": {
  "lineno": 221,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestMessageReader._get_example_messages": {
  "lineno": 223,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.MessageReader.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestMessageReader._get_writer": {
  "lineno": 230,
  "symbols_in_volume": [
   "pyarrow.RecordBatchStreamWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestMessageReader.test_ctors_no_segfault": {
  "lineno": 233,
  "symbols_in_volume": [
   "pyarrow.Message",
   "pyarrow.MessageReader",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestMessageReader.test_message_reader": {
  "lineno": 240,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestMessageReader.test_read_pandas": {
  "lineno": 269,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestMessageReader.test_read_record_batch": {
  "lineno": 262,
  "symbols_in_volume": [
   "pyarrow.read_record_batch"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestMessageReader.test_serialize_read_message": {
  "lineno": 248,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.read_message"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket": {
  "lineno": 279,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestSocket.StreamReaderServer": {
  "lineno": 281,
  "symbols_in_volume": [
   "threading.Thread"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestSocket.StreamReaderServer.get_result": {
  "lineno": 308,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.StreamReaderServer.init": {
  "lineno": 283,
  "symbols_in_volume": [
   "socket.AF_INET",
   "socket.SOCK_STREAM",
   "socket.socket"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.StreamReaderServer.run": {
  "lineno": 294,
  "symbols_in_volume": [
   "pyarrow.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket._get_sink": {
  "lineno": 332,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket._get_writer": {
  "lineno": 335,
  "symbols_in_volume": [
   "pyarrow.RecordBatchStreamWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.setUp": {
  "lineno": 312,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.start_server": {
  "lineno": 316,
  "symbols_in_volume": [
   "socket.AF_INET",
   "socket.SOCK_STREAM",
   "socket.socket"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.stop_and_get_result": {
  "lineno": 324,
  "symbols_in_volume": [
   "struct.pack"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.test_read_all": {
  "lineno": 348,
  "symbols_in_volume": [
   "pyarrow.Table.from_batches"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestSocket.test_simple_roundtrip": {
  "lineno": 338,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream": {
  "lineno": 125,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_ipc.TestStream._get_writer": {
  "lineno": 127,
  "symbols_in_volume": [
   "pyarrow.RecordBatchStreamWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream.test_categorical_roundtrip": {
  "lineno": 135,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream.test_empty_stream": {
  "lineno": 130,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.ArrowInvalid",
   "pyarrow.open_stream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream.test_read_all": {
  "lineno": 211,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.Table.from_batches",
   "pyarrow.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream.test_simple_roundtrip": {
  "lineno": 194,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.open_stream",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream.test_stream_write_dispatch": {
  "lineno": 151,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_pandas",
   "pyarrow.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.TestStream.test_stream_write_table_batches": {
  "lineno": 171,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches",
   "pyarrow.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc._check_serialize_pandas_round_trip": {
  "lineno": 409,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.deserialize_pandas",
   "pyarrow.serialize_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.read_file": {
  "lineno": 516,
  "symbols_in_volume": [
   "pyarrow.open_file"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_get_record_batch_size": {
  "lineno": 400,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.get_record_batch_size"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_ipc_stream_no_batches": {
  "lineno": 382,
  "symbols_in_volume": [
   "pyarrow.BufferOutputStream",
   "pyarrow.RecordBatchStreamWriter",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.open_stream"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_ipc_zero_copy_numpy": {
  "lineno": 366,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.RecordBatch.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip": {
  "lineno": 415,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_multi_index": {
  "lineno": 435,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index",
   "pandas.MultiIndex.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_not_string_columns": {
  "lineno": 454,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.deserialize_pandas",
   "pyarrow.serialize_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_pandas_serialize_round_trip_nthreads": {
  "lineno": 425,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Index"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_schema_batch_serialize_methods": {
  "lineno": 495,
  "symbols_in_volume": [
   "numpy.nan",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.read_record_batch",
   "pyarrow.read_schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_serialize_pandas_empty_dataframe": {
  "lineno": 449,
  "symbols_in_volume": [
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_serialize_pandas_no_preserve_index": {
  "lineno": 461,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.deserialize_pandas",
   "pyarrow.serialize_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.test_serialize_with_pandas_objects": {
  "lineno": 474,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pandas.util.testing.assert_series_equal",
   "pyarrow.deserialize",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_ipc.write_file": {
  "lineno": 510,
  "symbols_in_volume": [
   "pyarrow.RecordBatchFileWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_misc": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_misc.test_get_include": {
  "lineno": 23,
  "symbols_in_volume": [
   "os.path.exists",
   "os.path.join",
   "pyarrow.get_include"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet": {
  "lineno": null,
  "symbols_in_volume": [
   "pytest.mark.parquet"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_parquet._check_roundtrip": {
  "lineno": 809,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._filter_partition": {
  "lineno": 1157,
  "symbols_in_volume": [
   "numpy.ones"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._generate_partition_directories": {
  "lineno": 1068,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._generate_partition_directories._visit_level": {
  "lineno": 1074,
  "symbols_in_volume": [
   "os.path.join",
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.guid"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._partition_test_for_filesystem": {
  "lineno": 1031,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.randn",
   "numpy.tile",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.parquet.ParquetDataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._random_integers": {
  "lineno": 298,
  "symbols_in_volume": [
   "numpy.iinfo",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._read_table": {
  "lineno": 54,
  "symbols_in_volume": [
   "pyarrow.parquet.read_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._roundtrip_pandas_dataframe": {
  "lineno": 768,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._roundtrip_table": {
  "lineno": 801,
  "symbols_in_volume": [
   "io.BytesIO"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_dataframe": {
  "lineno": 307,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.util.testing.rands"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_read_common_metadata_files": {
  "lineno": 1100,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "os.path.join",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.read_metadata",
   "pyarrow.parquet.write_metadata"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_write_to_dataset_no_partitions": {
  "lineno": 1463,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.filesystem.LocalFileSystem.get_instance",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.write_to_dataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._test_write_to_dataset_with_partitions": {
  "lineno": 1420,
  "symbols_in_volume": [
   "numpy.arange",
   "os.path.join",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.write_metadata",
   "pyarrow.parquet.write_to_dataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._touch": {
  "lineno": 1168,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet._write_table": {
  "lineno": 44,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.write_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.alltypes_sample": {
  "lineno": 77,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.make_sample_file": {
  "lineno": 458,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.s3_example": {
  "lineno": 999,
  "symbols_in_volume": [
   "os.environ",
   "pyarrow.compat.guid",
   "pytest.yield_fixture",
   "s3fs.S3FileSystem"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_backwards_compatible_column_metadata_handling": {
  "lineno": 1644,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.date_range",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_backwards_compatible_index_multi_level_named": {
  "lineno": 1591,
  "symbols_in_volume": [
   "io.BytesIO",
   "os.path.dirname",
   "os.path.join",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_backwards_compatible_index_multi_level_some_named": {
  "lineno": 1617,
  "symbols_in_volume": [
   "io.BytesIO",
   "os.path.dirname",
   "os.path.join",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_backwards_compatible_index_naming": {
  "lineno": 1568,
  "symbols_in_volume": [
   "io.BytesIO",
   "os.path.dirname",
   "os.path.join",
   "pandas.read_csv",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_chunked_table_write": {
  "lineno": 122,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_coerce_timestamps": {
  "lineno": 596,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "numpy.array",
   "numpy.ndarray",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.field",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.timestamp",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_column_of_arrays": {
  "lineno": 583,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_column_of_lists": {
  "lineno": 639,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_compare_schemas": {
  "lineno": 566,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_read_pandas": {
  "lineno": 1255,
  "symbols_in_volume": [
   "numpy.arange",
   "os.mkdir",
   "os.path.join",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.guid",
   "pyarrow.parquet.ParquetDataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_dataset_read_pandas_common_metadata": {
  "lineno": 1289,
  "symbols_in_volume": [
   "numpy.arange",
   "os.mkdir",
   "os.path.join",
   "pandas.Index",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.guid",
   "pyarrow.parquet.ParquetDataset",
   "pyarrow.parquet.write_metadata",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_date_time_types": {
  "lineno": 652,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "pandas.Timestamp",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_date_time_types._assert_unsupported": {
  "lineno": 726,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_arrays",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_decimal_roundtrip": {
  "lineno": 1667,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.tests.util.randdecimal",
   "pyarrow.tests.util.random_seed"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_decimal_roundtrip_negative_scale": {
  "lineno": 1694,
  "symbols_in_volume": [
   "decimal.Decimal",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.ArrowException",
   "pyarrow.Table.from_pandas",
   "pytest.mark.xfail"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_fixed_size_binary": {
  "lineno": 790,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_ignore_private_directories": {
  "lineno": 1336,
  "symbols_in_volume": [
   "os.mkdir",
   "os.path.join",
   "pyarrow.compat.guid",
   "pyarrow.parquet.ParquetDataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_index_column_name_duplicate": {
  "lineno": 1521,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.Timestamp",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_large_list_records": {
  "lineno": 739,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_large_table_int32_overflow": {
  "lineno": 1507,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.iinfo",
   "numpy.ones",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.uint8",
   "pytest.mark.large_memory"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_min_chunksize": {
  "lineno": 835,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_multiindex_duplicate_values": {
  "lineno": 1362,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.MultiIndex.from_arrays",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_multithreaded_read": {
  "lineno": 817,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_column_selection": {
  "lineno": 281,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_1_0_rountrip": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_2_0_rountrip": {
  "lineno": 102,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_2_0_rountrip_read_pandas_no_index_written": {
  "lineno": 209,
  "symbols_in_volume": [
   "json.loads",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_column_multiindex": {
  "lineno": 187,
  "symbols_in_volume": [
   "pandas.MultiIndex.from_tuples",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_configuration_options": {
  "lineno": 421,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.random.randn",
   "numpy.random.seed",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_custom_metadata": {
  "lineno": 167,
  "symbols_in_volume": [
   "json.loads",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_metadata"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_datetime_tz": {
  "lineno": 140,
  "symbols_in_volume": [
   "datetime.datetime",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.BytesIO",
   "pyarrow.parquet.read_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_empty_roundtrip": {
  "lineno": 385,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_native_file_roundtrip": {
  "lineno": 330,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pandas_parquet_pyfile_roundtrip": {
  "lineno": 397,
  "symbols_in_volume": [
   "io.BytesIO",
   "numpy.arange",
   "numpy.float32",
   "numpy.float64",
   "numpy.int64",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_column_statistics_api": {
  "lineno": 523,
  "symbols_in_volume": [
   "numpy.bool",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pandas.DataFrame",
   "pyarrow.compat.unichar",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_incremental_file_build": {
  "lineno": 342,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_metadata_api": {
  "lineno": 471,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_nested_convenience": {
  "lineno": 1546,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_piece_basics": {
  "lineno": 955,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDatasetPiece"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_piece_read": {
  "lineno": 939,
  "symbols_in_volume": [
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetDatasetPiece"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_writer_context_obj": {
  "lineno": 1709,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_parquet_writer_context_obj_with_exception": {
  "lineno": 1737,
  "symbols_in_volume": [
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetWriter"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_partition_set_dictionary_type": {
  "lineno": 976,
  "symbols_in_volume": [
   "datetime.datetime",
   "pyarrow.IntegerArray",
   "pyarrow.StringArray",
   "pyarrow.compat.u",
   "pyarrow.parquet.PartitionSet",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_pass_separate_metadata": {
  "lineno": 852,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetFile",
   "pyarrow.parquet.read_metadata"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_path_objects": {
  "lineno": 268,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int64",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pathlib.Path",
   "pytest.mark.skipif",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_common_metadata_files": {
  "lineno": 1132,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem.get_instance"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_files": {
  "lineno": 1173,
  "symbols_in_volume": [
   "numpy.int64",
   "os.mkdir",
   "os.path.join",
   "pyarrow.Table.from_arrays",
   "pyarrow.Table.from_pandas",
   "pyarrow.compat.guid",
   "pyarrow.concat_tables",
   "pyarrow.localfs.read_parquet",
   "pyarrow.parquet.read_metadata",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_multiple_files.read_multiple_files": {
  "lineno": 1202,
  "symbols_in_volume": [
   "pyarrow.parquet.ParquetDataset"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_non_existent_file": {
  "lineno": 1409,
  "symbols_in_volume": [
   "pyarrow.parquet.read_table"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_pandas_column_subset": {
  "lineno": 371,
  "symbols_in_volume": [
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferOutputStream",
   "pyarrow.BufferReader",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_partitioned_directory": {
  "lineno": 991,
  "symbols_in_volume": [
   "pyarrow.filesystem.LocalFileSystem.get_instance"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_partitioned_directory_s3fs": {
  "lineno": 1016,
  "symbols_in_volume": [
   "pyarrow.filesystem.S3FSWrapper",
   "pyarrow.parquet.ParquetDataset",
   "pytest.mark.s3"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_schema": {
  "lineno": 1139,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "os.path.join",
   "pandas.DataFrame",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.read_schema"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_single_row_group": {
  "lineno": 874,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.concat_tables",
   "pyarrow.parquet.ParquetFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_read_single_row_group_with_column_subset": {
  "lineno": 899,
  "symbols_in_volume": [
   "io.BytesIO",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.Table.from_pandas",
   "pyarrow.concat_tables",
   "pyarrow.parquet.ParquetFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_sanitized_spark_field_names": {
  "lineno": 756,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_scan_contents": {
  "lineno": 920,
  "symbols_in_volume": [
   "io.BytesIO",
   "pyarrow.Table.from_pandas",
   "pyarrow.parquet.ParquetFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_single_pylist_column_roundtrip": {
  "lineno": 59,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_spark_flavor_preserves_pandas_metadata": {
  "lineno": 779,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.util.testing.assert_frame_equal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_error_deletes_incomplete_file": {
  "lineno": 1384,
  "symbols_in_volume": [
   "numpy.arange",
   "os.path.exists",
   "pandas.Categorical",
   "pandas.DataFrame",
   "pandas.date_range",
   "pyarrow.ArrowException",
   "pyarrow.Table.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_no_partitions": {
  "lineno": 1502,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_parquet.test_write_to_dataset_with_partitions": {
  "lineno": 1497,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma": {
  "lineno": null,
  "symbols_in_volume": [
   "os.getenv"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient": {
  "lineno": 178,
  "symbols_in_volume": [
   "pytest.mark.plasma"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.setup_method": {
  "lineno": 181,
  "symbols_in_volume": [
   "pyarrow.plasma.connect"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.teardown_method": {
  "lineno": 196,
  "symbols_in_volume": [
   "signal.SIGTERM"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_connection_failure_raises_exception": {
  "lineno": 208,
  "symbols_in_volume": [
   "pyarrow.plasma.connect",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_contains": {
  "lineno": 446,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create": {
  "lineno": 214,
  "symbols_in_volume": [
   "numpy.frombuffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_existing": {
  "lineno": 259,
  "symbols_in_volume": [
   "pyarrow.lib.ArrowException"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_create_with_metadata": {
  "lineno": 232,
  "symbols_in_volume": [
   "numpy.frombuffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_evict": {
  "lineno": 638,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_get": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "numpy.testing.assert_equal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_hash": {
  "lineno": 459,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "pyarrow.lib.ArrowException"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_illegal_functionality": {
  "lineno": 612,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_illegal_functionality.illegal_assignment": {
  "lineno": 633,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_many_hashes": {
  "lineno": 528,
  "symbols_in_volume": [
   "numpy.frombuffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_pickle_object_ids": {
  "lineno": 397,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get": {
  "lineno": 314,
  "symbols_in_volume": [
   "pyarrow.plasma.ObjectID.from_random",
   "pyarrow.plasma.ObjectNotAvailable"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context": {
  "lineno": 327,
  "symbols_in_volume": [
   "pyarrow.ArrowSerializationError",
   "pyarrow.SerializationContext",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context.CustomType": {
  "lineno": 329,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_put_and_get_serialization_context.CustomType.__init__": {
  "lineno": 330,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_arrow_objects": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.testing.assert_equal",
   "pyarrow.BufferReader",
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.get_tensor_size",
   "pyarrow.read_tensor",
   "pyarrow.write_tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_full": {
  "lineno": 405,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_full.assert_create_raises_plasma_full": {
  "lineno": 408,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pyarrow.lib.ArrowException"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_store_pandas_dataframe": {
  "lineno": 368,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "pandas.DataFrame",
   "pandas.Series",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.BufferReader",
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.MockOutputStream",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.RecordBatchStreamReader",
   "pyarrow.RecordBatchStreamWriter",
   "pyarrow.plasma.ObjectID"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe": {
  "lineno": 681,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_subscribe_deletions": {
  "lineno": 701,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.TestPlasmaClient.test_use_one_memory_mapped_file": {
  "lineno": 768,
  "symbols_in_volume": [
   "numpy.random.randint",
   "pyarrow.lib.PlasmaStoreFull",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.assert_get_object_equal": {
  "lineno": 87,
  "symbols_in_volume": [
   "pyarrow.plasma.buffers_equal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.create_object": {
  "lineno": 79,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.create_object_with_id": {
  "lineno": 69,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.generate_metadata": {
  "lineno": 50,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.random_name": {
  "lineno": 41,
  "symbols_in_volume": [
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.random_object_id": {
  "lineno": 45,
  "symbols_in_volume": [
   "numpy.random.bytes",
   "pyarrow.plasma.ObjectID"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.start_plasma_store": {
  "lineno": 108,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "os.path.join",
   "pyarrow.__path__",
   "shutil.rmtree",
   "subprocess.Popen",
   "tempfile.mkdtemp",
   "time.sleep"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_object_id_size": {
  "lineno": 785,
  "symbols_in_volume": [
   "pyarrow.plasma.ObjectID",
   "pytest.mark.plasma",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.test_use_huge_pages": {
  "lineno": 793,
  "symbols_in_volume": [
   "os.path.exists",
   "pyarrow.plasma.connect",
   "pytest.mark.skipif"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_plasma.write_to_data_buffer": {
  "lineno": 60,
  "symbols_in_volume": [
   "numpy.frombuffer",
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_scalars.TestScalars": {
  "lineno": 27,
  "symbols_in_volume": [
   "pyarrow.compat.unittest.TestCase"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bool": {
  "lineno": 44,
  "symbols_in_volume": [
   "pyarrow.BooleanValue",
   "pyarrow.NA",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_bytes": {
  "lineno": 96,
  "symbols_in_volume": [
   "pyarrow.BinaryValue",
   "pyarrow.NA",
   "pyarrow.array",
   "pyarrow.compat.u"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_ctor_null_check": {
  "lineno": 33,
  "symbols_in_volume": [
   "pyarrow.Int16Value",
   "pyarrow.StringValue",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_dictionary": {
  "lineno": 164,
  "symbols_in_volume": [
   "pandas.Categorical",
   "pandas.Series",
   "pyarrow.DictionaryArray.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_double": {
  "lineno": 65,
  "symbols_in_volume": [
   "pyarrow.DoubleValue",
   "pyarrow.NA",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_fixed_size_bytes": {
  "lineno": 110,
  "symbols_in_volume": [
   "pyarrow.FixedSizeBinaryValue",
   "pyarrow.NA",
   "pyarrow.array",
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_int64": {
  "lineno": 54,
  "symbols_in_volume": [
   "pyarrow.Int64Value",
   "pyarrow.NA",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_list": {
  "lineno": 124,
  "symbols_in_volume": [
   "pyarrow.ListValue",
   "pyarrow.NA",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_null_singleton": {
  "lineno": 29,
  "symbols_in_volume": [
   "pyarrow.NAType"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_string_unicode": {
  "lineno": 79,
  "symbols_in_volume": [
   "pyarrow.NA",
   "pyarrow.StringValue",
   "pyarrow.array",
   "pyarrow.compat.unicode_type"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_scalars.TestScalars.test_timestamp": {
  "lineno": 140,
  "symbols_in_volume": [
   "pandas.Timestamp",
   "pandas.date_range",
   "pyarrow.Array.from_pandas",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_schema.test_field": {
  "lineno": 195,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_field_add_remove_metadata": {
  "lineno": 237,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_field_empty": {
  "lineno": 231,
  "symbols_in_volume": [
   "pyarrow.Field",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_from_numpy_dtype": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.unicode",
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.from_numpy_dtype",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.string",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint8",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema": {
  "lineno": 208,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_add_remove_metadata": {
  "lineno": 259,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_equals": {
  "lineno": 283,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_negative_indexing": {
  "lineno": 299,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_schema_repr_with_dictionaries": {
  "lineno": 319,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.dictionary",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.schema",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_time_types": {
  "lineno": 136,
  "symbols_in_volume": [
   "pyarrow.time32",
   "pyarrow.time64",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_comparisons": {
  "lineno": 74,
  "symbols_in_volume": [
   "pyarrow.int32",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_for_alias": {
  "lineno": 83,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.string",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.type_for_alias",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_integers": {
  "lineno": 26,
  "symbols_in_volume": [
   "pyarrow"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_list": {
  "lineno": 64,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_schema_pickling": {
  "lineno": 336,
  "symbols_in_volume": [
   "pickle.dumps",
   "pickle.loads",
   "pyarrow.Field",
   "pyarrow.binary",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.decimal128",
   "pyarrow.field",
   "pyarrow.int16",
   "pyarrow.int8",
   "pyarrow.lib.UnionMode_DENSE",
   "pyarrow.lib.UnionMode_SPARSE",
   "pyarrow.list_",
   "pyarrow.schema",
   "pyarrow.string",
   "pyarrow.struct",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.union"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_string": {
  "lineno": 124,
  "symbols_in_volume": [
   "pyarrow.string"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_timestamp_with_tz": {
  "lineno": 129,
  "symbols_in_volume": [
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_schema.test_type_to_pandas_dtype": {
  "lineno": 36,
  "symbols_in_volume": [
   "numpy.bool_",
   "numpy.dtype",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int16",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.object_",
   "numpy.uint16",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "pyarrow.binary",
   "pyarrow.bool_",
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.null",
   "pyarrow.string",
   "pyarrow.timestamp",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization": {
  "lineno": null,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "collections.namedtuple",
   "numpy.array",
   "numpy.float16",
   "numpy.float32",
   "numpy.float64",
   "numpy.int32",
   "numpy.int64",
   "numpy.int8",
   "numpy.random.normal",
   "numpy.uint32",
   "numpy.uint64",
   "numpy.uint8",
   "numpy.zeros",
   "string.printable",
   "sys.modules",
   "sys.version_info",
   "torch"
  ],
  "type": "module"
 },
 "pyarrow.tests.test_serialization.Bar": {
  "lineno": 155,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Bar.__init__": {
  "lineno": 156,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Baz": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Baz.__init__": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Baz.method": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.CustomError": {
  "lineno": 185,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Foo": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Foo.__eq__": {
  "lineno": 151,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Foo.__hash__": {
  "lineno": 148,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Foo.__init__": {
  "lineno": 145,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Qux": {
  "lineno": 170,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.Qux.__init__": {
  "lineno": 171,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.Serializable": {
  "lineno": 537,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SerializableClass": {
  "lineno": 551,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SerializableClass.__init__": {
  "lineno": 552,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.SubQux": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SubQux.__init__": {
  "lineno": 176,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.SubQuxPickle": {
  "lineno": 180,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.SubQuxPickle.__init__": {
  "lineno": 181,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization._check_component_roundtrip": {
  "lineno": 232,
  "symbols_in_volume": [
   "pyarrow.SerializedPyObject.from_components",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.assert_equal": {
  "lineno": 42,
  "symbols_in_volume": [
   "numpy.__name__",
   "numpy.testing.assert_equal",
   "pyarrow.lib.is_named_tuple",
   "torch",
   "torch.equal",
   "torch.is_tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.deserialize_serializable": {
  "lineno": 545,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.large_buffer": {
  "lineno": 241,
  "symbols_in_volume": [
   "pyarrow.allocate_buffer",
   "pytest.yield_fixture"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.large_memory_map": {
  "lineno": 246,
  "symbols_in_volume": [
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.make_serialization_context": {
  "lineno": 200,
  "symbols_in_volume": [
   "pyarrow.default_serialization_context"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.serialization_roundtrip": {
  "lineno": 220,
  "symbols_in_volume": [
   "pyarrow.BufferReader",
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.deserialize_from",
   "pyarrow.serialize_to"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.serialize_serializable": {
  "lineno": 541,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_arrow_limits": {
  "lineno": 463,
  "symbols_in_volume": [
   "numpy.zeros",
   "pyarrow.memory_map",
   "pytest.mark.skip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_arrow_limits.huge_memory_map": {
  "lineno": 465,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization": {
  "lineno": 442,
  "symbols_in_volume": [
   "pyarrow.default_serialization_context",
   "pyarrow.deserialize",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.BufferClass": {
  "lineno": 444,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.deserialize_buffer_class": {
  "lineno": 450,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_buffer_serialization.serialize_buffer_class": {
  "lineno": 447,
  "symbols_in_volume": [
   "pyarrow.py_buffer"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone": {
  "lineno": 259,
  "symbols_in_volume": [
   "pyarrow.SerializationContext",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone.Foo": {
  "lineno": 262,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_clone.custom_deserializer": {
  "lineno": 268,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_clone.custom_serializer": {
  "lineno": 265,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_complex_serialization": {
  "lineno": 299,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_custom_serialization": {
  "lineno": 304,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_datetime_serialization": {
  "lineno": 323,
  "symbols_in_volume": [
   "datetime.datetime"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_default_dict_serialization": {
  "lineno": 309,
  "symbols_in_volume": [
   "collections.defaultdict",
   "pytest.importorskip"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_buffer_in_different_process": {
  "lineno": 629,
  "symbols_in_volume": [
   "os.path.dirname",
   "os.path.join",
   "os.path.realpath",
   "pyarrow.py_buffer",
   "pyarrow.serialize",
   "pyarrow.tests.util.get_modified_env_with_pythonpath",
   "subprocess.check_call",
   "sys.executable",
   "tempfile.NamedTemporaryFile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_in_different_process": {
  "lineno": 605,
  "symbols_in_volume": [
   "multiprocessing.Process",
   "multiprocessing.Queue",
   "os.name",
   "pyarrow.SerializationContext",
   "pyarrow.serialize",
   "pytest.mark.skipif",
   "re.compile"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_deserialize_in_different_process.deserialize_regex": {
  "lineno": 618,
  "symbols_in_volume": [
   "pyarrow.deserialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses": {
  "lineno": 516,
  "symbols_in_volume": [
   "pyarrow.SerializationContext",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses.SubFoo": {
  "lineno": 518,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_fallback_to_subclasses.SubFoo.__init__": {
  "lineno": 519,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_base_object": {
  "lineno": 377,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.int32",
   "os.path.join",
   "pyarrow.OSFile",
   "pyarrow.read_serialized",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_immutable": {
  "lineno": 365,
  "symbols_in_volume": [
   "numpy.zeros",
   "pyarrow.BufferReader",
   "pyarrow.FixedSizeBufferWriter",
   "pyarrow.deserialize_from",
   "pyarrow.serialize_to",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_serialization": {
  "lineno": 316,
  "symbols_in_volume": [
   "numpy.random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization": {
  "lineno": 415,
  "symbols_in_volume": [
   "numpy.alltrue",
   "numpy.ndarray",
   "numpy.zeros",
   "pyarrow.default_serialization_context",
   "pyarrow.deserialize",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.CustomNDArray": {
  "lineno": 417,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.CustomNDArray.__new__": {
  "lineno": 418,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.deserializer": {
  "lineno": 425,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_numpy_subclass_serialization.serializer": {
  "lineno": 422,
  "symbols_in_volume": [
   "numpy.ndarray"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_path_objects": {
  "lineno": 685,
  "symbols_in_volume": [
   "pathlib.Path",
   "pyarrow.deserialize_from",
   "pyarrow.serialize_to",
   "pytest.mark.skipif",
   "sys.version_info"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_primitive_serialization": {
  "lineno": 286,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error": {
  "lineno": 492,
  "symbols_in_volume": [
   "pyarrow.DeserializationCallbackError",
   "pyarrow.SerializationCallbackError",
   "pyarrow.SerializationContext",
   "pyarrow.serialize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_error.TempClass": {
  "lineno": 494,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy": {
  "lineno": 395,
  "symbols_in_volume": [
   "pyarrow.default_serialization_context",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.DummyClass": {
  "lineno": 397,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.deserialize_dummy_class": {
  "lineno": 404,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialization_callback_numpy.serialize_dummy_class": {
  "lineno": 400,
  "symbols_in_volume": [
   "numpy.zeros"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_subclasses": {
  "lineno": 556,
  "symbols_in_volume": [
   "pyarrow.default_serialization_context",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_to_buffer": {
  "lineno": 291,
  "symbols_in_volume": [
   "pyarrow.deserialize",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_serialize_to_components_invalid_cases": {
  "lineno": 583,
  "symbols_in_volume": [
   "pyarrow.ArrowException",
   "pyarrow.deserialize_components",
   "pyarrow.py_buffer",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle": {
  "lineno": 646,
  "symbols_in_volume": [
   "pyarrow.SerializationContext",
   "pyarrow.deserialize",
   "pyarrow.serialize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.Foo": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "class"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.dumps1": {
  "lineno": 658,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.dumps2": {
  "lineno": 672,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.loads1": {
  "lineno": 661,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_set_pickle.loads2": {
  "lineno": 675,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_serialization.test_torch_serialization": {
  "lineno": 351,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pyarrow.default_serialization_context",
   "pyarrow.register_torch_serialization_handlers",
   "pytest.importorskip",
   "torch.from_numpy"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_table.test_chunked_array_getitem": {
  "lineno": 27,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.chunked_array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_column_basics": {
  "lineno": 42,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_column_factory_function": {
  "lineno": 55,
  "symbols_in_volume": [
   "pyarrow.Column.from_array",
   "pyarrow.array",
   "pyarrow.chunked_array",
   "pyarrow.column",
   "pyarrow.field",
   "pyarrow.string",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_column_to_pandas": {
  "lineno": 78,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_concat_tables": {
  "lineno": 344,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pyarrow.concat_tables"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_basics": {
  "lineno": 90,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_empty_metadata": {
  "lineno": 133,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_arrays_invalid_names": {
  "lineno": 121,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_from_to_pandas": {
  "lineno": 182,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.random.randn",
   "pandas.DataFrame",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_pandas"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_no_fields": {
  "lineno": 113,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_arrays"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatch_slice_getitem": {
  "lineno": 143,
  "symbols_in_volume": [
   "pyarrow.RecordBatch.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_schema_equals": {
  "lineno": 220,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pyarrow.ArrowException",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_recordbatchlist_to_pandas": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.array",
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_schema_ctor_errors": {
  "lineno": 397,
  "symbols_in_volume": [
   "pyarrow.Schema",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_add_column": {
  "lineno": 294,
  "symbols_in_volume": [
   "pyarrow.Column.from_array",
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_basics": {
  "lineno": 256,
  "symbols_in_volume": [
   "collections.OrderedDict",
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_ctor_errors": {
  "lineno": 390,
  "symbols_in_volume": [
   "pyarrow.Table",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_from_arrays_invalid_names": {
  "lineno": 282,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_negative_indexing": {
  "lineno": 369,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_remove_column": {
  "lineno": 317,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_remove_column_empty": {
  "lineno": 330,
  "symbols_in_volume": [
   "pyarrow.Table.from_arrays",
   "pyarrow.array"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_table.test_table_to_batches": {
  "lineno": 231,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "pandas.concat",
   "pandas.util.testing.assert_frame_equal",
   "pyarrow.RecordBatch.from_pandas",
   "pyarrow.Table.from_batches"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_tensor._try_delete": {
  "lineno": 79,
  "symbols_in_volume": [
   "gc.collect",
   "os.error",
   "os.remove"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_read_tensor": {
  "lineno": 156,
  "symbols_in_volume": [
   "numpy.random.randn",
   "numpy.testing.assert_equal",
   "os.path.join",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.create_memory_map",
   "pyarrow.get_tensor_size",
   "pyarrow.memory_map",
   "pyarrow.read_tensor",
   "pyarrow.write_tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_attrs": {
  "lineno": 26,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_base_object": {
  "lineno": 46,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy",
   "sys.getrefcount"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.ascontiguousarray",
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals.eq": {
  "lineno": 124,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_equals.ne": {
  "lineno": 129,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_hashing": {
  "lineno": 144,
  "symbols_in_volume": [
   "numpy.arange",
   "pyarrow.Tensor.from_numpy",
   "pytest.raises"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_roundtrip": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.random.randn",
   "os.path.join",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.create_memory_map",
   "pyarrow.read_tensor",
   "pyarrow.write_tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_ipc_strided": {
  "lineno": 103,
  "symbols_in_volume": [
   "numpy.random.randn",
   "os.path.join",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.create_memory_map",
   "pyarrow.read_tensor",
   "pyarrow.write_tensor"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_numpy_roundtrip": {
  "lineno": 53,
  "symbols_in_volume": [
   "numpy.dtype",
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_tensor.test_tensor_size": {
  "lineno": 150,
  "symbols_in_volume": [
   "numpy.random.randn",
   "pyarrow.Tensor.from_numpy",
   "pyarrow.get_tensor_size"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.test_types.test_decimal_byte_width": {
  "lineno": 194,
  "symbols_in_volume": [
   "pyarrow.decimal128"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_exact_primitive_types": {
  "lineno": 168,
  "symbols_in_volume": [
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.types.is_date32",
   "pyarrow.types.is_date64",
   "pyarrow.types.is_float16",
   "pyarrow.types.is_float32",
   "pyarrow.types.is_float64",
   "pyarrow.types.is_int16",
   "pyarrow.types.is_int32",
   "pyarrow.types.is_int64",
   "pyarrow.types.is_int8",
   "pyarrow.types.is_time32",
   "pyarrow.types.is_time64",
   "pyarrow.types.is_uint16",
   "pyarrow.types.is_uint32",
   "pyarrow.types.is_uint64",
   "pyarrow.types.is_uint8",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_fixed_size_binary_byte_width": {
  "lineno": 189,
  "symbols_in_volume": [
   "pyarrow.binary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_binary_string": {
  "lineno": 101,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.string",
   "pyarrow.types.is_binary",
   "pyarrow.types.is_fixed_size_binary",
   "pyarrow.types.is_string",
   "pyarrow.types.is_unicode"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_boolean": {
  "lineno": 24,
  "symbols_in_volume": [
   "pyarrow.bool_",
   "pyarrow.int8",
   "pyarrow.types.is_boolean"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_decimal": {
  "lineno": 60,
  "symbols_in_volume": [
   "pyarrow.decimal128",
   "pyarrow.int32",
   "pyarrow.types.is_decimal"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_dictionary": {
  "lineno": 70,
  "symbols_in_volume": [
   "pyarrow.array",
   "pyarrow.dictionary",
   "pyarrow.int32",
   "pyarrow.types.is_dictionary"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_floating": {
  "lineno": 48,
  "symbols_in_volume": [
   "pyarrow.float16",
   "pyarrow.float32",
   "pyarrow.float64",
   "pyarrow.int32",
   "pyarrow.types.is_floating"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_integer": {
  "lineno": 29,
  "symbols_in_volume": [
   "pyarrow.float32",
   "pyarrow.int16",
   "pyarrow.int32",
   "pyarrow.int64",
   "pyarrow.int8",
   "pyarrow.types.is_integer",
   "pyarrow.types.is_signed_integer",
   "pyarrow.types.is_unsigned_integer",
   "pyarrow.uint16",
   "pyarrow.uint32",
   "pyarrow.uint64",
   "pyarrow.uint8"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_list": {
  "lineno": 65,
  "symbols_in_volume": [
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.types.is_list"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_nested_or_struct": {
  "lineno": 77,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.string",
   "pyarrow.struct",
   "pyarrow.types.is_nested",
   "pyarrow.types.is_struct"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_null": {
  "lineno": 55,
  "symbols_in_volume": [
   "pyarrow.int32",
   "pyarrow.list_",
   "pyarrow.null",
   "pyarrow.types.is_null"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_temporal_date_time_timestamp": {
  "lineno": 113,
  "symbols_in_volume": [
   "pyarrow.date32",
   "pyarrow.date64",
   "pyarrow.int32",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.types.is_date",
   "pyarrow.types.is_temporal",
   "pyarrow.types.is_time",
   "pyarrow.types.is_timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_is_union": {
  "lineno": 90,
  "symbols_in_volume": [
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.lib.UnionMode_SPARSE",
   "pyarrow.list_",
   "pyarrow.string",
   "pyarrow.types.is_union",
   "pyarrow.union"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_timestamp_type": {
  "lineno": 139,
  "symbols_in_volume": [
   "pyarrow.TimestampType",
   "pyarrow.timestamp"
  ],
  "type": "function"
 },
 "pyarrow.tests.test_types.test_types_hashable": {
  "lineno": 144,
  "symbols_in_volume": [
   "pyarrow.binary",
   "pyarrow.date32",
   "pyarrow.field",
   "pyarrow.int32",
   "pyarrow.int8",
   "pyarrow.list_",
   "pyarrow.null",
   "pyarrow.string",
   "pyarrow.struct",
   "pyarrow.time32",
   "pyarrow.time64",
   "pyarrow.timestamp",
   "pyarrow.types"
  ],
  "type": "function"
 },
 "pyarrow.tests.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.tests.util.get_modified_env_with_pythonpath": {
  "lineno": 99,
  "symbols_in_volume": [
   "os.environ.copy",
   "os.path.abspath",
   "os.path.dirname",
   "os.pathsep.join",
   "pyarrow.__file__"
  ],
  "type": "function"
 },
 "pyarrow.tests.util.randdecimal": {
  "lineno": 62,
  "symbols_in_volume": [
   "decimal.Decimal",
   "random.randint"
  ],
  "type": "function"
 },
 "pyarrow.tests.util.random_seed": {
  "lineno": 40,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "random.getstate",
   "random.seed",
   "random.setstate"
  ],
  "type": "function"
 },
 "pyarrow.tests.util.randsign": {
  "lineno": 30,
  "symbols_in_volume": [
   "random.choice"
  ],
  "type": "function"
 },
 "pyarrow.types": {
  "lineno": null,
  "symbols_in_volume": [
   "pyarrow.lib.Type_DATE32",
   "pyarrow.lib.Type_DATE64",
   "pyarrow.lib.Type_DOUBLE",
   "pyarrow.lib.Type_FLOAT",
   "pyarrow.lib.Type_HALF_FLOAT",
   "pyarrow.lib.Type_INT16",
   "pyarrow.lib.Type_INT32",
   "pyarrow.lib.Type_INT64",
   "pyarrow.lib.Type_INT8",
   "pyarrow.lib.Type_LIST",
   "pyarrow.lib.Type_MAP",
   "pyarrow.lib.Type_STRUCT",
   "pyarrow.lib.Type_TIME32",
   "pyarrow.lib.Type_TIME64",
   "pyarrow.lib.Type_TIMESTAMP",
   "pyarrow.lib.Type_UINT16",
   "pyarrow.lib.Type_UINT32",
   "pyarrow.lib.Type_UINT64",
   "pyarrow.lib.Type_UINT8",
   "pyarrow.lib.Type_UNION"
  ],
  "type": "module"
 },
 "pyarrow.types.is_binary": {
  "lineno": 218,
  "symbols_in_volume": [
   "pyarrow.lib.Type_BINARY"
  ],
  "type": "function"
 },
 "pyarrow.types.is_boolean": {
  "lineno": 42,
  "symbols_in_volume": [
   "pyarrow.lib.Type_BOOL"
  ],
  "type": "function"
 },
 "pyarrow.types.is_date": {
  "lineno": 246,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.types.is_date32": {
  "lineno": 253,
  "symbols_in_volume": [
   "pyarrow.lib.Type_DATE32"
  ],
  "type": "function"
 },
 "pyarrow.types.is_date64": {
  "lineno": 260,
  "symbols_in_volume": [
   "pyarrow.lib.Type_DATE64"
  ],
  "type": "function"
 },
 "pyarrow.types.is_decimal": {
  "lineno": 274,
  "symbols_in_volume": [
   "pyarrow.lib.Type_DECIMAL"
  ],
  "type": "function"
 },
 "pyarrow.types.is_dictionary": {
  "lineno": 281,
  "symbols_in_volume": [
   "pyarrow.lib.Type_DICTIONARY"
  ],
  "type": "function"
 },
 "pyarrow.types.is_fixed_size_binary": {
  "lineno": 239,
  "symbols_in_volume": [
   "pyarrow.lib.Type_FIXED_SIZE_BINARY"
  ],
  "type": "function"
 },
 "pyarrow.types.is_float16": {
  "lineno": 133,
  "symbols_in_volume": [
   "pyarrow.lib.Type_HALF_FLOAT"
  ],
  "type": "function"
 },
 "pyarrow.types.is_float32": {
  "lineno": 140,
  "symbols_in_volume": [
   "pyarrow.lib.Type_FLOAT"
  ],
  "type": "function"
 },
 "pyarrow.types.is_float64": {
  "lineno": 147,
  "symbols_in_volume": [
   "pyarrow.lib.Type_DOUBLE"
  ],
  "type": "function"
 },
 "pyarrow.types.is_floating": {
  "lineno": 126,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.types.is_int16": {
  "lineno": 77,
  "symbols_in_volume": [
   "pyarrow.lib.Type_INT16"
  ],
  "type": "function"
 },
 "pyarrow.types.is_int32": {
  "lineno": 84,
  "symbols_in_volume": [
   "pyarrow.lib.Type_INT32"
  ],
  "type": "function"
 },
 "pyarrow.types.is_int64": {
  "lineno": 91,
  "symbols_in_volume": [
   "pyarrow.lib.Type_INT64"
  ],
  "type": "function"
 },
 "pyarrow.types.is_int8": {
  "lineno": 70,
  "symbols_in_volume": [
   "pyarrow.lib.Type_INT8"
  ],
  "type": "function"
 },
 "pyarrow.types.is_integer": {
  "lineno": 49,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.types.is_list": {
  "lineno": 154,
  "symbols_in_volume": [
   "pyarrow.lib.Type_LIST"
  ],
  "type": "function"
 },
 "pyarrow.types.is_map": {
  "lineno": 267,
  "symbols_in_volume": [
   "pyarrow.lib.Type_MAP"
  ],
  "type": "function"
 },
 "pyarrow.types.is_nested": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.types.is_null": {
  "lineno": 35,
  "symbols_in_volume": [
   "pyarrow.lib.Type_NA"
  ],
  "type": "function"
 },
 "pyarrow.types.is_signed_integer": {
  "lineno": 56,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.types.is_string": {
  "lineno": 232,
  "symbols_in_volume": [
   "pyarrow.lib.Type_STRING"
  ],
  "type": "function"
 },
 "pyarrow.types.is_struct": {
  "lineno": 161,
  "symbols_in_volume": [
   "pyarrow.lib.Type_STRUCT"
  ],
  "type": "function"
 },
 "pyarrow.types.is_temporal": {
  "lineno": 182,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.types.is_time": {
  "lineno": 197,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.types.is_time32": {
  "lineno": 204,
  "symbols_in_volume": [
   "pyarrow.lib.Type_TIME32"
  ],
  "type": "function"
 },
 "pyarrow.types.is_time64": {
  "lineno": 211,
  "symbols_in_volume": [
   "pyarrow.lib.Type_TIME64"
  ],
  "type": "function"
 },
 "pyarrow.types.is_timestamp": {
  "lineno": 190,
  "symbols_in_volume": [
   "pyarrow.lib.Type_TIMESTAMP"
  ],
  "type": "function"
 },
 "pyarrow.types.is_uint16": {
  "lineno": 105,
  "symbols_in_volume": [
   "pyarrow.lib.Type_UINT16"
  ],
  "type": "function"
 },
 "pyarrow.types.is_uint32": {
  "lineno": 112,
  "symbols_in_volume": [
   "pyarrow.lib.Type_UINT32"
  ],
  "type": "function"
 },
 "pyarrow.types.is_uint64": {
  "lineno": 119,
  "symbols_in_volume": [
   "pyarrow.lib.Type_UINT64"
  ],
  "type": "function"
 },
 "pyarrow.types.is_uint8": {
  "lineno": 98,
  "symbols_in_volume": [
   "pyarrow.lib.Type_UINT8"
  ],
  "type": "function"
 },
 "pyarrow.types.is_unicode": {
  "lineno": 225,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.types.is_union": {
  "lineno": 168,
  "symbols_in_volume": [
   "pyarrow.lib.Type_UNION"
  ],
  "type": "function"
 },
 "pyarrow.types.is_unsigned_integer": {
  "lineno": 63,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.util": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "pyarrow.util._deprecate_api": {
  "lineno": 30,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.util._deprecate_api.wrapper": {
  "lineno": 34,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "pyarrow.util.implements": {
  "lineno": 23,
  "symbols_in_volume": [],
  "type": "function"
 },
 "pyarrow.util.implements.decorator": {
  "lineno": 24,
  "symbols_in_volume": [],
  "type": "function"
 }
}