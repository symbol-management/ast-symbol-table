{
 "*": {
  "data": {
   "imports": [
    "unittest"
   ]
  },
  "type": "star-import"
 },
 "asynctest": {
  "data": {
   "symbols_in_volume": [
    "asynctest.unittest"
   ]
  },
  "type": "module"
 },
 "asynctest.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "asynctest._fail_on": {
  "data": {},
  "type": "module"
 },
 "asynctest._fail_on.DEFAULTS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "asynctest._fail_on.TimerHandle": {
  "data": {
   "shadows": "asyncio.TimerHandle"
  },
  "type": "import"
 },
 "asynctest._fail_on._FAIL_ON_ATTR": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "asynctest._fail_on._fail_on": {
  "data": {
   "lineno": 38
  },
  "type": "class"
 },
 "asynctest._fail_on._fail_on.__call__": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "asynctest._fail_on._FAIL_ON_ATTR",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "asynctest._fail_on._fail_on.__init__": {
  "data": {
   "lineno": 39
  },
  "type": "function"
 },
 "asynctest._fail_on._fail_on._is_live_timer_handle": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "asyncio.TimerHandle",
    "isinstance",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "asynctest._fail_on._fail_on._live_timer_handles": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "classmethod",
    "filter"
   ]
  },
  "type": "function"
 },
 "asynctest._fail_on._fail_on.active_handles": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "classmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "asynctest._fail_on._fail_on.before_test": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "AttributeError",
    "TypeError",
    "filter",
    "getattr"
   ]
  },
  "type": "function"
 },
 "asynctest._fail_on._fail_on.check_test": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "filter",
    "getattr"
   ]
  },
  "type": "function"
 },
 "asynctest._fail_on._fail_on.copy": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "asynctest._fail_on._fail_on"
   ]
  },
  "type": "function"
 },
 "asynctest._fail_on._fail_on.get_checks": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "AttributeError",
    "asynctest._fail_on.DEFAULTS",
    "asynctest._fail_on._FAIL_ON_ATTR",
    "getattr"
   ]
  },
  "type": "function"
 },
 "asynctest._fail_on._fail_on.unused_loop": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "asynctest._fail_on._fail_on.update": {
  "data": {
   "lineno": 54
  },
  "type": "function"
 },
 "asynctest._fail_on._fail_on_all": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "asynctest._fail_on.DEFAULTS",
    "asynctest._fail_on._fail_on",
    "checker",
    "dict"
   ]
  },
  "type": "function"
 },
 "asynctest._fail_on.fail_on": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "TypeError",
    "asynctest._fail_on.DEFAULTS",
    "asynctest._fail_on._fail_on"
   ]
  },
  "type": "function"
 },
 "asynctest._fail_on.lenient": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "asynctest._fail_on._fail_on_all"
   ]
  },
  "type": "function"
 },
 "asynctest._fail_on.strict": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "asynctest._fail_on._fail_on_all"
   ]
  },
  "type": "function"
 },
 "asynctest.case": {
  "data": {},
  "type": "module"
 },
 "asynctest.case.ClockedTestCase": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": [
    "asynctest.case.TestCase"
   ]
  },
  "type": "class"
 },
 "asynctest.case.ClockedTestCase._drain_loop": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "asynctest.case.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.case.ClockedTestCase._init_loop": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "asynctest.case.functools",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.case.ClockedTestCase._next_scheduled": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": [
    "IndexError"
   ]
  },
  "type": "function"
 },
 "asynctest.case.ClockedTestCase.advance": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": [
    "ValueError",
    "asynctest.case.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.case.FunctionTestCase": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "asynctest.case.TestCase",
    "asynctest.case.unittest"
   ]
  },
  "type": "class"
 },
 "asynctest.case.TestCase": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "asynctest.case.unittest"
   ]
  },
  "type": "class"
 },
 "asynctest.case.TestCase._init_loop": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "asynctest.case._Policy",
    "asynctest.case.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase._patch_loop": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "asynctest.case.asyncio",
    "getattr",
    "hasattr",
    "isinstance",
    "method",
    "setattr",
    "wraps"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase._patch_loop.wraps": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "asynctest.case.types"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase._patch_loop.wraps.wrapper": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "asynctest.case.functools",
    "method"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase._run_test_method": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "asynctest.case.asyncio",
    "method"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase._setUp": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "asynctest.case.asyncio",
    "getattr"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase._tearDown": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "asynctest.case.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase._unset_loop": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": [
    "asynctest.case.asyncio",
    "asynctest.case.sys"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase.addCleanup": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "function",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase.assertAsyncRaises": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "asynctest.case.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase.assertAsyncRaisesRegex": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "asynctest.case.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase.assertAsyncWarns": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "asynctest.case.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase.assertAsyncWarnsRegex": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "asynctest.case.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase.debug": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "Exception",
    "asynctest.case.asyncio",
    "function",
    "getattr"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase.doCleanups": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "asynctest.case.asyncio",
    "asynctest.case.unittest",
    "function"
   ]
  },
  "type": "function"
 },
 "asynctest.case.TestCase.run": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "asynctest.case.unittest",
    "getattr",
    "startTestRun",
    "stopTestRun"
   ]
  },
  "type": "function"
 },
 "asynctest.case._Policy": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "asynctest.case.asyncio"
   ]
  },
  "type": "class"
 },
 "asynctest.case._Policy.__init__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "asynctest.case._Policy._check_unix": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "NotImplementedError",
    "asynctest.case.asyncio",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "asynctest.case._Policy.get_child_watcher": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "asynctest.case.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.case._Policy.get_event_loop": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "asynctest.case._Policy.new_event_loop": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "asynctest.case._Policy.reset_watcher": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "asynctest.case._Policy.set_child_watcher": {
  "data": {
   "lineno": 101
  },
  "type": "function"
 },
 "asynctest.case._Policy.set_event_loop": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "asynctest.case.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "asynctest.case.asynctest._fail_on": {
  "data": {
   "shadows": "asynctest._fail_on"
  },
  "type": "import"
 },
 "asynctest.case.asynctest.selector": {
  "data": {
   "shadows": "asynctest.selector"
  },
  "type": "import"
 },
 "asynctest.case.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "asynctest.case.ignore_loop": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "DeprecationWarning",
    "asynctest.case.warnings",
    "checker"
   ]
  },
  "type": "function"
 },
 "asynctest.case.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "asynctest.case.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "asynctest.case.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "asynctest.case.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "asynctest.helpers": {
  "data": {},
  "type": "module"
 },
 "asynctest.helpers.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "asynctest.helpers.exhaust_callbacks": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "asynctest.helpers.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.mock": {
  "data": {
   "symbols_in_volume": [
    "AttributeError",
    "asynctest.mock.PatchScope",
    "asynctest.mock._async_magics",
    "asynctest.mock._get_async_iter",
    "asynctest.mock._patch_dict",
    "asynctest.mock._patch_multiple",
    "asynctest.mock._patch_object",
    "asynctest.mock.async_magic_coroutines",
    "asynctest.mock.asyncio",
    "asynctest.mock.enum",
    "asynctest.mock.patch",
    "set"
   ]
  },
  "type": "module"
 },
 "asynctest.mock.ANY": {
  "data": {
   "lineno": 895
  },
  "type": "constant"
 },
 "asynctest.mock.AsyncMagicMixin": {
  "data": {
   "lineno": 249
  },
  "type": "class"
 },
 "asynctest.mock.AsyncMagicMixin.__init__": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "asynctest.mock.AsyncMagicMixin"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.AsyncMagicMixin.__setattr__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "asynctest.mock.AsyncMagicMixin",
    "asynctest.mock._async_magics",
    "getattr",
    "object.__setattr__",
    "setattr",
    "type"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.AsyncMagicMixin.__setattr__.value": {
  "data": {
   "lineno": 299,
   "symbols_in_volume": [
    "original"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.AsyncMagicMixin._mock_set_async_magics": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "asynctest.mock._async_magics",
    "delattr",
    "getattr",
    "set",
    "setattr",
    "type"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.AsyncMagicMixin.mock_add_spec": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "asynctest.mock.CoroutineMock": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "asynctest.mock.Mock"
   ]
  },
  "type": "class"
 },
 "asynctest.mock.CoroutineMock.__init__": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "asynctest.mock._AwaitEvent",
    "asynctest.mock._is_coroutine",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.CoroutineMock._mock_call": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": [
    "BaseException",
    "StopIteration",
    "asynctest.mock._raise",
    "asynctest.mock.asyncio",
    "callable",
    "proxy",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.CoroutineMock._mock_call.proxy": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "asynctest.mock.asyncio",
    "asynctest.mock.inspect"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.CoroutineMock.assert_any_await": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.CoroutineMock.assert_awaited": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.CoroutineMock.assert_awaited_once": {
  "data": {
   "lineno": 625,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.CoroutineMock.assert_awaited_once_with": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.CoroutineMock.assert_awaited_with": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "_error_message",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.CoroutineMock.assert_awaited_with._error_message": {
  "data": {
   "lineno": 648
  },
  "type": "function"
 },
 "asynctest.mock.CoroutineMock.assert_has_awaits": {
  "data": {
   "lineno": 687,
   "symbols_in_volume": [
    "AssertionError",
    "Exception",
    "ValueError",
    "isinstance",
    "list",
    "tuple"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.CoroutineMock.assert_not_awaited": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "AssertionError"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.CoroutineMock.reset_mock": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "asynctest.mock._AwaitEvent",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.DEFAULT": {
  "data": {
   "lineno": 896
  },
  "type": "constant"
 },
 "asynctest.mock.FakeInheritanceMeta": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "type"
   ]
  },
  "type": "class"
 },
 "asynctest.mock.FakeInheritanceMeta.__init__": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "asynctest.mock.types",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.FakeInheritanceMeta.__instancecheck__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "issubclass",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.FakeInheritanceMeta.__new": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "object.__new__",
    "staticmethod",
    "type"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.GLOBAL": {
  "data": {
   "lineno": 918
  },
  "type": "constant"
 },
 "asynctest.mock.IsCoroutineArgMeta": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "asynctest.mock.MockMetaMixin"
   ]
  },
  "type": "class"
 },
 "asynctest.mock.IsCoroutineArgMeta.__new__": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "any",
    "asynctest.mock._get_is_coroutine",
    "asynctest.mock._set_is_coroutine",
    "isinstance",
    "property",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.IsCoroutineArgMeta.__new__.__setattr__": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "wrapped_setattr"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.LIMITED": {
  "data": {
   "lineno": 917
  },
  "type": "constant"
 },
 "asynctest.mock.MagicMock": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "asynctest.mock.AsyncMagicMixin",
    "asynctest.mock.MockMetaMixin"
   ]
  },
  "type": "class"
 },
 "asynctest.mock.Mock": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "asynctest.mock.MockMetaMixin"
   ]
  },
  "type": "class"
 },
 "asynctest.mock.MockMetaMixin": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "asynctest.mock.FakeInheritanceMeta"
   ]
  },
  "type": "class"
 },
 "asynctest.mock.MockMetaMixin.__new__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "any",
    "asynctest.mock._get_child_mock",
    "asynctest.mock._mock_add_spec",
    "asynctest.mock.types",
    "isinstance",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.NonCallableMagicMock": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "asynctest.mock.AsyncMagicMixin",
    "asynctest.mock.IsCoroutineArgMeta"
   ]
  },
  "type": "class"
 },
 "asynctest.mock.NonCallableMagicMock.__init__": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.NonCallableMock": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "asynctest.mock.IsCoroutineArgMeta"
   ]
  },
  "type": "class"
 },
 "asynctest.mock.NonCallableMock.__init__": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.PatchScope": {
  "data": {
   "lineno": 916
  },
  "type": "constant"
 },
 "asynctest.mock.PropertyMock": {
  "data": {
   "lineno": 1349
  },
  "type": "constant"
 },
 "asynctest.mock._AsyncIterator": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "StopAsyncIteration",
    "StopIteration",
    "next"
   ]
  },
  "type": "class"
 },
 "asynctest.mock._AsyncIterator.__aiter__": {
  "data": {
   "lineno": 40
  },
  "type": "function"
 },
 "asynctest.mock._AsyncIterator.__init__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "asynctest.mock._AwaitEvent": {
  "data": {
   "lineno": 428
  },
  "type": "class"
 },
 "asynctest.mock._AwaitEvent.__bool__": {
  "data": {
   "lineno": 517
  },
  "type": "function"
 },
 "asynctest.mock._AwaitEvent.__init__": {
  "data": {
   "lineno": 429
  },
  "type": "function"
 },
 "asynctest.mock._AwaitEvent._get_condition": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": [
    "asynctest.mock.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._AwaitEvent._notify": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "asynctest.mock.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._AwaitEvent.wait": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": [
    "asynctest.mock.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._AwaitEvent.wait.predicate": {
  "data": {
   "lineno": 442
  },
  "type": "function"
 },
 "asynctest.mock._AwaitEvent.wait_for": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "asynctest.mock.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._AwaitEvent.wait_for._predicate": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "predicate"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._AwaitEvent.wait_next": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "asynctest.mock.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._AwaitEvent.wait_next.predicate": {
  "data": {
   "lineno": 462
  },
  "type": "function"
 },
 "asynctest.mock._PatchedGenerator": {
  "data": {
   "lineno": 1009,
   "symbols_in_volume": [
    "asynctest.mock.asyncio"
   ]
  },
  "type": "class"
 },
 "asynctest.mock._PatchedGenerator.__del__": {
  "data": {
   "lineno": 1062
  },
  "type": "function"
 },
 "asynctest.mock._PatchedGenerator.__init__": {
  "data": {
   "lineno": 1012,
   "symbols_in_volume": [
    "asynctest.mock.GLOBAL",
    "asynctest.mock.LIMITED",
    "getattr"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._PatchedGenerator.__next__": {
  "data": {
   "lineno": 1038,
   "symbols_in_volume": [
    "BaseException"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._PatchedGenerator.__repr__": {
  "data": {
   "lineno": 1035,
   "symbols_in_volume": [
    "repr"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._PatchedGenerator._limited_patchings_stack": {
  "data": {
   "lineno": 1023,
   "symbols_in_volume": [
    "asynctest.mock.contextlib"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._PatchedGenerator._stop_global_patchings": {
  "data": {
   "lineno": 1030,
   "symbols_in_volume": [
    "asynctest.mock._is_started",
    "reversed"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._PatchedGenerator.close": {
  "data": {
   "lineno": 1055
  },
  "type": "function"
 },
 "asynctest.mock._PatchedGenerator.send": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._PatchedGenerator.throw": {
  "data": {
   "lineno": 1051
  },
  "type": "function"
 },
 "asynctest.mock._async_magics": {
  "data": {
   "lineno": 94
  },
  "type": "constant"
 },
 "asynctest.mock._clear_dict": {
  "data": {
   "lineno": 1338
  },
  "type": "constant"
 },
 "asynctest.mock._decorate_coroutine_callable": {
  "data": {
   "lineno": 921,
   "symbols_in_volume": [
    "AttributeError",
    "asynctest.mock._make_native_coroutine",
    "asynctest.mock.asyncio",
    "asynctest.mock.functools",
    "asynctest.mock.inspect",
    "func",
    "hasattr",
    "patched_factory"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._decorate_coroutine_callable.patched_factory": {
  "data": {
   "lineno": 943,
   "symbols_in_volume": [
    "BaseException",
    "_PatchedGenerator",
    "asynctest.mock.DEFAULT",
    "asynctest.mock.GLOBAL",
    "asynctest.mock.LIMITED",
    "asynctest.mock._is_started",
    "asynctest.mock.asyncio",
    "asynctest.mock.sys",
    "func",
    "isinstance",
    "reversed",
    "tuple"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._decorate_coroutine_callable.patched_generator": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "patched_factory"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._get_async_iter": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "asynctest.mock.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._get_async_iter.__aiter__": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "asynctest.mock._AsyncIterator",
    "iter"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._get_child_mock": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "CoroutineMock",
    "asynctest.mock.async_magic_coroutines",
    "issubclass",
    "klass",
    "type"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._get_is_coroutine": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "asynctest.mock._is_coroutine": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "asynctest.mock._is_started": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "isinstance"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._make_native_coroutine": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "asynctest.mock.functools",
    "asynctest.mock.inspect",
    "coroutine"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._mock_add_spec": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "asynctest.mock.asyncio",
    "dir",
    "getattr"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._patch": {
  "data": {
   "lineno": 1068
  },
  "type": "class"
 },
 "asynctest.mock._patch.__enter__": {
  "data": {
   "lineno": 1086,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._patch.__init__": {
  "data": {
   "lineno": 1069,
   "symbols_in_volume": [
    "asynctest.mock.GLOBAL",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._patch._perform_patch": {
  "data": {
   "lineno": 1099,
   "symbols_in_volume": [
    "asynctest.mock.DEFAULT",
    "asynctest.mock.create_autospec",
    "bool",
    "original",
    "setattr",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._patch.copy": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "asynctest.mock._patch"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._patch.decorate_callable": {
  "data": {
   "lineno": 1128,
   "symbols_in_volume": [
    "asynctest.mock._decorate_coroutine_callable",
    "func",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._patch_dict": {
  "data": {
   "lineno": 1252
  },
  "type": "class"
 },
 "asynctest.mock._patch_dict.__call__": {
  "data": {
   "lineno": 1274,
   "symbols_in_volume": [
    "asynctest.mock._decorate_coroutine_callable",
    "func",
    "isinstance",
    "super",
    "type"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._patch_dict.__init__": {
  "data": {
   "lineno": 1254,
   "symbols_in_volume": [
    "asynctest.mock.GLOBAL",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._patch_dict._keep_global_patch": {
  "data": {
   "lineno": 1261
  },
  "type": "function"
 },
 "asynctest.mock._patch_dict._patch_dict": {
  "data": {
   "lineno": 1284,
   "symbols_in_volume": [
    "AttributeError",
    "_clear_dict",
    "isinstance",
    "str"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._patch_dict._unpatch_dict": {
  "data": {
   "lineno": 1311,
   "symbols_in_volume": [
    "AttributeError",
    "_clear_dict",
    "asynctest.mock.LIMITED",
    "original"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._patch_dict.decorate_class": {
  "data": {
   "lineno": 1264,
   "symbols_in_volume": [
    "asynctest.mock._patch_dict",
    "asynctest.mock.patch",
    "decorator",
    "dir",
    "getattr",
    "hasattr",
    "klass",
    "setattr"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._patch_multiple": {
  "data": {
   "lineno": 1217,
   "symbols_in_volume": [
    "ValueError",
    "_update",
    "asynctest.mock.GLOBAL",
    "asynctest.mock._patch",
    "list",
    "map",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._patch_multiple._update": {
  "data": {
   "lineno": 1242,
   "symbols_in_volume": [
    "asynctest.mock._update_new_callable"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._patch_multiple.getter": {
  "data": {
   "lineno": 1223
  },
  "type": "function"
 },
 "asynctest.mock._patch_object": {
  "data": {
   "lineno": 1208,
   "symbols_in_volume": [
    "asynctest.mock.DEFAULT",
    "asynctest.mock.GLOBAL",
    "asynctest.mock._patch",
    "asynctest.mock._update_new_callable"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._raise": {
  "data": {
   "lineno": 100
  },
  "type": "function"
 },
 "asynctest.mock._set_is_coroutine": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "asynctest.mock._is_coroutine",
    "bool"
   ]
  },
  "type": "function"
 },
 "asynctest.mock._update_new_callable": {
  "data": {
   "lineno": 899,
   "symbols_in_volume": [
    "asynctest.mock.CoroutineMock",
    "asynctest.mock.DEFAULT",
    "asynctest.mock.MagicMock",
    "asynctest.mock.asyncio",
    "classmethod",
    "isinstance",
    "object",
    "original",
    "original.__get__",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.async_magic_coroutines": {
  "data": {
   "lineno": 93
  },
  "type": "constant"
 },
 "asynctest.mock.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "asynctest.mock.asyncio.coroutines": {
  "data": {
   "shadows": "asyncio.coroutines"
  },
  "type": "import"
 },
 "asynctest.mock.call": {
  "data": {
   "lineno": 1348
  },
  "type": "constant"
 },
 "asynctest.mock.contextlib": {
  "data": {
   "shadows": "contextlib"
  },
  "type": "import"
 },
 "asynctest.mock.create_autospec": {
  "data": {
   "lineno": 749,
   "symbols_in_volume": [
    "AttributeError",
    "Klass",
    "RuntimeError",
    "asynctest.mock.CoroutineMock",
    "asynctest.mock.MagicMock",
    "asynctest.mock.NonCallableMagicMock",
    "asynctest.mock._AwaitEvent",
    "asynctest.mock._is_coroutine",
    "asynctest.mock.asyncio",
    "asynctest.mock.inspect",
    "child_klass",
    "dir",
    "getattr",
    "isinstance",
    "original",
    "setattr",
    "type"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.enum": {
  "data": {
   "shadows": "enum"
  },
  "type": "import"
 },
 "asynctest.mock.functools": {
  "data": {
   "shadows": "functools"
  },
  "type": "import"
 },
 "asynctest.mock.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "asynctest.mock.mock_open": {
  "data": {
   "lineno": 875,
   "symbols_in_volume": [
    "asynctest.mock.MagicMock",
    "open"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.patch": {
  "data": {
   "lineno": 1136,
   "symbols_in_volume": [
    "asynctest.mock.DEFAULT",
    "asynctest.mock.GLOBAL",
    "asynctest.mock._patch",
    "asynctest.mock._update_new_callable"
   ]
  },
  "type": "function"
 },
 "asynctest.mock.return_once": {
  "data": {
   "lineno": 1352
  },
  "type": "function"
 },
 "asynctest.mock.sentinel": {
  "data": {
   "lineno": 1347
  },
  "type": "constant"
 },
 "asynctest.mock.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "asynctest.mock.types": {
  "data": {
   "shadows": "types"
  },
  "type": "import"
 },
 "asynctest.mock.unittest.mock": {
  "data": {
   "shadows": "unittest.mock"
  },
  "type": "import"
 },
 "asynctest.selector": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "asynctest.selector.asyncio",
    "asynctest.selector.fail_on_active_selector_callbacks",
    "asynctest.selector.fail_on_before_test_active_selector_callbacks",
    "asynctest.selector.ssl",
    "hasattr",
    "staticmethod"
   ]
  },
  "type": "module"
 },
 "asynctest.selector.FileDescriptor": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "class"
 },
 "asynctest.selector.FileDescriptor.__hash__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "hash"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.FileDescriptor.__new__": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "asynctest.selector.FileDescriptor",
    "max",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.FileMock": {
  "data": {
   "lineno": 94
  },
  "type": "class"
 },
 "asynctest.selector.FileMock.__init__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "asynctest.selector.FileDescriptor",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.FileMock._get_child_mock": {
  "data": {
   "lineno": 110
  },
  "type": "function"
 },
 "asynctest.selector.SSLSocketMock": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "asynctest.selector.SocketMock"
   ]
  },
  "type": "class"
 },
 "asynctest.selector.SSLSocketMock.__init__": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "asynctest.selector.FileMock",
    "asynctest.selector.ssl"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.SocketMock": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "asynctest.selector.FileMock"
   ]
  },
  "type": "class"
 },
 "asynctest.selector.SocketMock.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "asynctest.selector.socket",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.TestSelector": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "asyncio.selectors._BaseSelectorImpl"
   ]
  },
  "type": "class"
 },
 "asynctest.selector.TestSelector.__init__": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.TestSelector._fileobj_lookup": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "asynctest.selector.fd",
    "asynctest.selector.isfilemock",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.TestSelector.close": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.TestSelector.modify": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "asynctest.selector.fd",
    "asynctest.selector.isfilemock",
    "events",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.TestSelector.register": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "asynctest.selector.isfilemock",
    "events",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.TestSelector.select": {
  "data": {
   "lineno": 288
  },
  "type": "function"
 },
 "asynctest.selector.TestSelector.unregister": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "asynctest.selector.isfilemock",
    "super"
   ]
  },
  "type": "function"
 },
 "asynctest.selector._format_callback": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "asynctest.selector.asyncio"
   ]
  },
  "type": "function"
 },
 "asynctest.selector._format_event": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "asyncio.selectors.EVENT_READ",
    "asyncio.selectors.EVENT_WRITE",
    "asynctest.selector._format_callback"
   ]
  },
  "type": "function"
 },
 "asynctest.selector._set_event_ready": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "asynctest.selector.fd"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.asyncio": {
  "data": {
   "shadows": "asyncio"
  },
  "type": "import"
 },
 "asynctest.selector.fail_on_active_selector_callbacks": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "asynctest.selector._format_event",
    "asynctest.selector.get_registered_events",
    "len",
    "map"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.fail_on_before_test_active_selector_callbacks": {
  "data": {
   "lineno": 358,
   "symbols_in_volume": [
    "asynctest.selector.get_registered_events"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.fd": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "asynctest.selector.FileDescriptor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.get_registered_events": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "set"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.isfilemock": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "AttributeError",
    "asynctest.selector.FileDescriptor",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.selectors": {
  "data": {
   "shadows": "asyncio.selectors"
  },
  "type": "import"
 },
 "asynctest.selector.set_read_ready": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "asyncio.selectors.EVENT_READ",
    "asynctest.selector._set_event_ready"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.set_write_ready": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "asyncio.selectors.EVENT_WRITE",
    "asynctest.selector._set_event_ready"
   ]
  },
  "type": "function"
 },
 "asynctest.selector.socket": {
  "data": {
   "shadows": "socket"
  },
  "type": "import"
 },
 "asynctest.selector.ssl": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "asynctest.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 }
}