{
 "pathspec": {
  "data": {},
  "type": "module"
 },
 "pathspec.__author__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "pathspec.__copyright__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "pathspec.__created__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "pathspec.__credits__": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "pathspec.__email__": {
  "data": {
   "lineno": 52
  },
  "type": "constant"
 },
 "pathspec.__license__": {
  "data": {
   "lineno": 53
  },
  "type": "constant"
 },
 "pathspec.__project__": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "pathspec.__status__": {
  "data": {
   "lineno": 55
  },
  "type": "constant"
 },
 "pathspec.__updated__": {
  "data": {
   "lineno": 56
  },
  "type": "constant"
 },
 "pathspec.__version__": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "pathspec.compat": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "pathspec.compat.sys",
    "pathspec.compat.unicode",
    "str"
   ]
  },
  "type": "module"
 },
 "pathspec.compat.Collection": {
  "data": {
   "shadows": "collections.Container"
  },
  "type": "import"
 },
 "pathspec.compat.Iterable": {
  "data": {
   "shadows": "collections.abc.Iterable"
  },
  "type": "import"
 },
 "pathspec.compat.iterkeys": {
  "data": {
   "lineno": 30
  },
  "type": "function"
 },
 "pathspec.compat.izip_longest": {
  "data": {
   "shadows": "itertools.zip_longest"
  },
  "type": "import"
 },
 "pathspec.compat.string_types": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "pathspec.compat.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pathspec.compat.unicode": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "pathspec.pathspec": {
  "data": {},
  "type": "module"
 },
 "pathspec.pathspec.PathSpec": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pathspec.pathspec.PathSpec.__eq__": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "NotImplemented",
    "all",
    "isinstance",
    "izip_longest",
    "pathspec.pathspec.PathSpec"
   ]
  },
  "type": "function"
 },
 "pathspec.pathspec.PathSpec.__init__": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "isinstance",
    "list"
   ]
  },
  "type": "function"
 },
 "pathspec.pathspec.PathSpec.__len__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "pathspec.pathspec.PathSpec.from_lines": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "TypeError",
    "callable",
    "classmethod",
    "cls",
    "isinstance",
    "pattern_factory"
   ]
  },
  "type": "function"
 },
 "pathspec.pathspec.PathSpec.match_entries": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "TypeError",
    "iterkeys"
   ]
  },
  "type": "function"
 },
 "pathspec.pathspec.PathSpec.match_file": {
  "data": {
   "lineno": 77
  },
  "type": "function"
 },
 "pathspec.pathspec.PathSpec.match_files": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "TypeError",
    "iterkeys"
   ]
  },
  "type": "function"
 },
 "pathspec.pathspec.PathSpec.match_tree_entries": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "pathspec.pathspec.PathSpec.match_tree_files": {
  "data": {
   "lineno": 162
  },
  "type": "function"
 },
 "pathspec.pattern": {
  "data": {},
  "type": "module"
 },
 "pathspec.pattern.Pattern": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "pathspec.pattern.Pattern.__init__": {
  "data": {
   "lineno": 19
  },
  "type": "function"
 },
 "pathspec.pattern.Pattern.match": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "pathspec.pattern.RegexPattern": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "pathspec.pattern.Pattern"
   ]
  },
  "type": "class"
 },
 "pathspec.pattern.RegexPattern.__eq__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "NotImplemented",
    "isinstance",
    "pathspec.pattern.RegexPattern"
   ]
  },
  "type": "function"
 },
 "pathspec.pattern.RegexPattern.__init__": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "hasattr",
    "isinstance",
    "pathspec.pattern.RegexPattern",
    "pathspec.pattern.re",
    "super"
   ]
  },
  "type": "function"
 },
 "pathspec.pattern.RegexPattern.match": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "pathspec.pattern.RegexPattern.pattern_to_regex": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "classmethod"
   ]
  },
  "type": "function"
 },
 "pathspec.pattern.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pathspec.patterns": {
  "data": {},
  "type": "module"
 },
 "pathspec.patterns.gitwildmatch": {
  "data": {
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitIgnorePattern",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern"
   ]
  },
  "type": "module"
 },
 "pathspec.patterns.gitwildmatch.GitIgnorePattern": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern"
   ]
  },
  "type": "class"
 },
 "pathspec.patterns.gitwildmatch.GitIgnorePattern.__init__": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitIgnorePattern",
    "super"
   ]
  },
  "type": "function"
 },
 "pathspec.patterns.gitwildmatch.GitIgnorePattern._deprecated": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "DeprecationWarning",
    "pathspec.patterns.gitwildmatch.warnings",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pathspec.patterns.gitwildmatch.GitIgnorePattern.pattern_to_regex": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": [
    "classmethod",
    "pathspec.patterns.gitwildmatch.GitIgnorePattern",
    "super"
   ]
  },
  "type": "function"
 },
 "pathspec.patterns.gitwildmatch.GitWildMatchPattern": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "pathspec.patterns.gitwildmatch.GitWildMatchPattern._translate_segment_glob": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "len",
    "pathspec.patterns.gitwildmatch.re",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pathspec.patterns.gitwildmatch.GitWildMatchPattern.escape": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "TypeError",
    "bytes",
    "classmethod",
    "enumerate",
    "isinstance",
    "len",
    "pathspec.patterns.gitwildmatch._BYTES_ENCODING"
   ]
  },
  "type": "function"
 },
 "pathspec.patterns.gitwildmatch._BYTES_ENCODING": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "pathspec.patterns.gitwildmatch.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pathspec.patterns.gitwildmatch.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pathspec.patterns.gitwildmatch.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "pathspec.tests": {
  "data": {},
  "type": "module"
 },
 "pathspec.tests.test_gitwildmatch": {
  "data": {
   "symbols_in_volume": [
    "chr",
    "pathspec.tests.test_gitwildmatch.sys"
   ]
  },
  "type": "module"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchPattern": {
  "data": {
   "shadows": "pathspec.patterns.gitwildmatch.GitWildMatchPattern"
  },
  "type": "import"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "pathspec.tests.test_gitwildmatch.unittest"
   ]
  },
  "type": "class"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_00_empty": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_01_absolute": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex",
    "pathspec.tests.test_gitwildmatch.re",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_01_absolute_root": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_01_relative": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex",
    "pathspec.tests.test_gitwildmatch.re",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_01_relative_nested": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex",
    "pathspec.tests.test_gitwildmatch.re",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_02_comment": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_02_ignore": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex",
    "pathspec.tests.test_gitwildmatch.re",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_03_child_double_asterisk": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex",
    "pathspec.tests.test_gitwildmatch.re",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_03_inner_double_asterisk": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex",
    "pathspec.tests.test_gitwildmatch.re",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_03_only_double_asterisk": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_03_parent_double_asterisk": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex",
    "pathspec.tests.test_gitwildmatch.re",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_04_infix_wildcard": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex",
    "pathspec.tests.test_gitwildmatch.re",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_04_postfix_wildcard": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex",
    "pathspec.tests.test_gitwildmatch.re",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_04_prefix_wildcard": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex",
    "pathspec.tests.test_gitwildmatch.re",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_05_directory": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.pattern_to_regex",
    "pathspec.tests.test_gitwildmatch.re",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_06_access_deprecated": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "hasattr",
    "issubclass",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_06_registered": {
  "data": {
   "lineno": 367,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_06_registered_deprecated": {
  "data": {
   "lineno": 381
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_07_decode_bytes": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "range"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_07_encode_bytes": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "map",
    "pathspec.tests.test_gitwildmatch.unichr",
    "range"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_07_match_bytes_and_bytes": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_07_match_bytes_and_bytes_complete": {
  "data": {
   "lineno": 411,
   "symbols_in_volume": [
    "bytearray",
    "bytes",
    "len",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "range",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_07_match_bytes_and_unicode": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.tests.test_gitwildmatch.sys",
    "pathspec.tests.test_gitwildmatch.unittest",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_07_match_bytes_and_unicode_fail": {
  "data": {
   "lineno": 430,
   "symbols_in_volume": [
    "TypeError",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.tests.test_gitwildmatch.sys",
    "pathspec.tests.test_gitwildmatch.unittest"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_07_match_unicode_and_bytes": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.tests.test_gitwildmatch.sys",
    "pathspec.tests.test_gitwildmatch.unittest",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_07_match_unicode_and_bytes_fail": {
  "data": {
   "lineno": 449,
   "symbols_in_volume": [
    "TypeError",
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "pathspec.tests.test_gitwildmatch.sys",
    "pathspec.tests.test_gitwildmatch.unittest"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_07_match_unicode_and_unicode": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.GitWildMatchTest.test_08_escape": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": [
    "pathspec.patterns.gitwildmatch.GitWildMatchPattern.escape"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_gitwildmatch.pathspec.patterns.gitwildmatch": {
  "data": {
   "shadows": "pathspec.patterns.gitwildmatch"
  },
  "type": "import"
 },
 "pathspec.tests.test_gitwildmatch.pathspec.util": {
  "data": {
   "shadows": "pathspec.util"
  },
  "type": "import"
 },
 "pathspec.tests.test_gitwildmatch.re": {
  "data": {
   "shadows": "re"
  },
  "type": "import"
 },
 "pathspec.tests.test_gitwildmatch.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pathspec.tests.test_gitwildmatch.unichr": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "pathspec.tests.test_gitwildmatch.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "pathspec.tests.test_gitwildmatch.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pathspec.tests.test_pathspec": {
  "data": {},
  "type": "module"
 },
 "pathspec.tests.test_pathspec.PathSpecTest": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "pathspec.tests.test_pathspec.unittest"
   ]
  },
  "type": "class"
 },
 "pathspec.tests.test_pathspec.PathSpecTest.test_01_current_dir_paths": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "pathspec.tests.test_pathspec.pathspec",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_pathspec.PathSpecTest.test_01_match_files": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "filter",
    "pathspec.tests.test_pathspec.pathspec",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_pathspec.PathSpecTest.test_01_windows_current_dir_paths": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "pathspec.tests.test_pathspec.pathspec",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_pathspec.PathSpecTest.test_01_windows_paths": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "pathspec.tests.test_pathspec.pathspec",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_pathspec.PathSpecTest.test_02_eq": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "pathspec.tests.test_pathspec.pathspec"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_pathspec.PathSpecTest.test_02_ne": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "pathspec.tests.test_pathspec.pathspec"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_pathspec.pathspec": {
  "data": {
   "shadows": "pathspec"
  },
  "type": "import"
 },
 "pathspec.tests.test_pathspec.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pathspec.tests.test_util": {
  "data": {},
  "type": "module"
 },
 "pathspec.tests.test_util.IterTreeTest": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "pathspec.tests.test_util.unittest"
   ]
  },
  "type": "class"
 },
 "pathspec.tests.test_util.IterTreeTest.make_dirs": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "dir",
    "pathspec.tests.test_util.os"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.make_files": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "pathspec.tests.test_util.os"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.make_links": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "pathspec.tests.test_util.os"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.mkfile": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "open",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.ospath": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "pathspec.tests.test_util.os",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.require_realpath": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "pathspec.tests.test_util.unittest"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.require_symlink": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "pathspec.tests.test_util.unittest"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.setUp": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "pathspec.tests.test_util.tempfile"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.tearDown": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pathspec.tests.test_util.shutil"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.test_1_files": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "map",
    "pathspec.util.iter_tree_files",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.test_2_0_check_symlink": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "AttributeError",
    "NotImplementedError",
    "pathspec.tests.test_util.os"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.test_2_1_check_realpath": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "AssertionError",
    "pathspec.tests.test_util.os"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.test_2_2_links": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "map",
    "pathspec.util.iter_tree_files",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.test_2_3_sideways_links": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "map",
    "pathspec.util.iter_tree_files",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.test_2_4_recursive_links": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "pathspec.util.RecursionError",
    "pathspec.util.iter_tree_files",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.test_2_5_recursive_circular_links": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "pathspec.util.RecursionError",
    "pathspec.util.iter_tree_files",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.test_2_6_detect_broken_links": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "OSError",
    "pathspec.tests.test_util.errno",
    "pathspec.util.iter_tree_files",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.test_2_6_detect_broken_links.reraise": {
  "data": {
   "lineno": 286
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.test_2_7_ignore_broken_links": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "pathspec.util.iter_tree_files",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.test_2_8_no_follow_links": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "map",
    "pathspec.util.iter_tree_files",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.test_3_entries": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "map",
    "pathspec.util.iter_tree_entries",
    "set"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.IterTreeTest.test_4_normalizing_pathlib_path": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "pathlib.Path",
    "pathspec.tests.test_util.sys",
    "pathspec.tests.test_util.unittest",
    "pathspec.util.normalize_file"
   ]
  },
  "type": "function"
 },
 "pathspec.tests.test_util.Path": {
  "data": {
   "shadows": "pathlib.Path"
  },
  "type": "import"
 },
 "pathspec.tests.test_util.RecursionError": {
  "data": {
   "shadows": "pathspec.util.RecursionError"
  },
  "type": "import"
 },
 "pathspec.tests.test_util.errno": {
  "data": {
   "shadows": "errno"
  },
  "type": "import"
 },
 "pathspec.tests.test_util.iter_tree_entries": {
  "data": {
   "shadows": "pathspec.util.iter_tree_entries"
  },
  "type": "import"
 },
 "pathspec.tests.test_util.iter_tree_files": {
  "data": {
   "shadows": "pathspec.util.iter_tree_files"
  },
  "type": "import"
 },
 "pathspec.tests.test_util.normalize_file": {
  "data": {
   "shadows": "pathspec.util.normalize_file"
  },
  "type": "import"
 },
 "pathspec.tests.test_util.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "pathspec.tests.test_util.os.path": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "pathspec.tests.test_util.shutil": {
  "data": {
   "shadows": "shutil"
  },
  "type": "import"
 },
 "pathspec.tests.test_util.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "pathspec.tests.test_util.tempfile": {
  "data": {
   "shadows": "tempfile"
  },
  "type": "import"
 },
 "pathspec.tests.test_util.unittest": {
  "data": {
   "shadows": "unittest"
  },
  "type": "import"
 },
 "pathspec.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 }
}