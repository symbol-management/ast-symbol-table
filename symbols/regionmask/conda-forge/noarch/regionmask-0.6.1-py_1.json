{
 "regionmask": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.core": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.core._geopandas": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.core._geopandas._check_duplicates": {
  "lineno": 9,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core._geopandas._check_missing": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core._geopandas._construct_abbrevs": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core._geopandas._enumerate_duplicates": {
  "lineno": 38,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core._geopandas._prepare_gdf_for_mask": {
  "lineno": 136,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "geopandas.GeoSeries"
  ],
  "type": "function"
 },
 "regionmask.core._geopandas.from_geopandas": {
  "lineno": 64,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame",
   "numpy.array"
  ],
  "type": "function"
 },
 "regionmask.core._geopandas.mask_3D_geopandas": {
  "lineno": 236,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core._geopandas.mask_geopandas": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.formatting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.core.formatting._display": {
  "lineno": 75,
  "symbols_in_volume": [
   "pandas.io.formats.console.get_console_size"
  ],
  "type": "function"
 },
 "regionmask.core.formatting._display_metadata": {
  "lineno": 33,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.formatting._display_regions_gp": {
  "lineno": 46,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame.from_dict"
  ],
  "type": "function"
 },
 "regionmask.core.formatting.maybe_truncate": {
  "lineno": 23,
  "symbols_in_volume": [
   "six.text_type"
  ],
  "type": "function"
 },
 "regionmask.core.formatting.pretty_print": {
  "lineno": 8,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.mask": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.core.mask._create_xarray": {
  "lineno": 226,
  "symbols_in_volume": [
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.core.mask._create_xarray_2D": {
  "lineno": 236,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.core.mask._determine_method": {
  "lineno": 196,
  "symbols_in_volume": [
   "numpy.hstack"
  ],
  "type": "function"
 },
 "regionmask.core.mask._extract_lon_lat": {
  "lineno": 215,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.mask._get_LON_LAT_out_shape": {
  "lineno": 408,
  "symbols_in_volume": [
   "numpy.empty",
   "numpy.meshgrid"
  ],
  "type": "function"
 },
 "regionmask.core.mask._mask": {
  "lineno": 18,
  "symbols_in_volume": [
   "numpy.asarray",
   "warnings.warn",
   "xarray"
  ],
  "type": "function"
 },
 "regionmask.core.mask._mask_2D": {
  "lineno": 102,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.isnan",
   "warnings.warn",
   "xarray"
  ],
  "type": "function"
 },
 "regionmask.core.mask._mask_3D": {
  "lineno": 135,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.all",
   "numpy.int",
   "numpy.isnan",
   "numpy.unique",
   "warnings.warn",
   "xarray.__version__",
   "xarray.concat"
  ],
  "type": "function"
 },
 "regionmask.core.mask._mask_contains": {
  "lineno": 294,
  "symbols_in_volume": [
   "matplotlib.path.Path",
   "numpy.NaN",
   "numpy.any",
   "numpy.array",
   "numpy.isnan",
   "numpy.nonzero",
   "numpy.split"
  ],
  "type": "function"
 },
 "regionmask.core.mask._mask_edgepoints_shapely": {
  "lineno": 322,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.isclose",
   "numpy.isnan",
   "numpy.where",
   "shapely.vectorized.contains"
  ],
  "type": "function"
 },
 "regionmask.core.mask._mask_rasterize": {
  "lineno": 464,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "regionmask.core.mask._mask_rasterize_flip": {
  "lineno": 442,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.hstack"
  ],
  "type": "function"
 },
 "regionmask.core.mask._mask_rasterize_no_offset": {
  "lineno": 478,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.float",
   "rasterio.features.rasterize"
  ],
  "type": "function"
 },
 "regionmask.core.mask._mask_rasterize_split": {
  "lineno": 453,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.hstack"
  ],
  "type": "function"
 },
 "regionmask.core.mask._mask_shapely": {
  "lineno": 367,
  "symbols_in_volume": [
   "numpy.NaN",
   "shapely.vectorized.contains"
  ],
  "type": "function"
 },
 "regionmask.core.mask._parse_input": {
  "lineno": 389,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "regionmask.core.mask._transform_from_latlon": {
  "lineno": 426,
  "symbols_in_volume": [
   "affine.Affine.scale",
   "affine.Affine.translation",
   "numpy.asarray"
  ],
  "type": "function"
 },
 "regionmask.core.mask.create_mask_contains": {
  "lineno": 263,
  "symbols_in_volume": [
   "numpy.NaN",
   "warnings.warn"
  ],
  "type": "function"
 },
 "regionmask.core.plot": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.core.plot._draw_poly": {
  "lineno": 31,
  "symbols_in_volume": [
   "matplotlib.collections.LineCollection"
  ],
  "type": "function"
 },
 "regionmask.core.plot._flatten_polygons": {
  "lineno": 6,
  "symbols_in_volume": [
   "shapely.geometry.MultiPolygon"
  ],
  "type": "function"
 },
 "regionmask.core.plot._plot": {
  "lineno": 78,
  "symbols_in_volume": [
   "cartopy.crs.PlateCarree",
   "cartopy.feature.COLORS",
   "cartopy.feature.NaturalEarthFeature",
   "matplotlib.pyplot.axes"
  ],
  "type": "function"
 },
 "regionmask.core.plot._plot_regions": {
  "lineno": 199,
  "symbols_in_volume": [
   "cartopy.crs.PlateCarree",
   "cartopy.mpl.geoaxes.GeoAxes",
   "matplotlib.pyplot.gca",
   "numpy.isscalar"
  ],
  "type": "function"
 },
 "regionmask.core.plot._polygons_coords": {
  "lineno": 20,
  "symbols_in_volume": [
   "numpy.asarray"
  ],
  "type": "function"
 },
 "regionmask.core.plot._subsample": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.hstack",
   "numpy.linspace",
   "numpy.stack"
  ],
  "type": "function"
 },
 "regionmask.core.plot.plot_3D_mask": {
  "lineno": 305,
  "symbols_in_volume": [
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.core.regions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.core.regions.Region_cls": {
  "lineno": 648,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regionmask.core.regions.Region_cls.__init__": {
  "lineno": 649,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "regionmask.core.regions.Regions": {
  "lineno": 20,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regionmask.core.regions.Regions.__getitem__": {
  "lineno": 107,
  "symbols_in_volume": [
   "copy.copy",
   "numpy.integer"
  ],
  "type": "function"
 },
 "regionmask.core.regions.Regions.__init__": {
  "lineno": 25,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.__iter__": {
  "lineno": 169,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.__len__": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.__repr__": {
  "lineno": 166,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions._display": {
  "lineno": 260,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions._is_polygon": {
  "lineno": 221,
  "symbols_in_volume": [
   "numpy.any",
   "numpy.array"
  ],
  "type": "function"
 },
 "regionmask.core.regions.Regions.abbrevs": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.bounds": {
  "lineno": 226,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.bounds_global": {
  "lineno": 231,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.centroids": {
  "lineno": 216,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.combiner": {
  "lineno": 173,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.coords": {
  "lineno": 206,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.lon_180": {
  "lineno": 245,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.lon_360": {
  "lineno": 254,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.map_keys": {
  "lineno": 138,
  "symbols_in_volume": [
   "numpy.integer",
   "numpy.unique",
   "six.string_types"
  ],
  "type": "function"
 },
 "regionmask.core.regions.Regions.mask": {
  "lineno": 285,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.mask_3D": {
  "lineno": 356,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.names": {
  "lineno": 196,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.numbers": {
  "lineno": 201,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.polygons": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions.region_ids": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions.Regions_cls": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regionmask.core.regions.Regions_cls.__init__": {
  "lineno": 439,
  "symbols_in_volume": [
   "warnings.warn"
  ],
  "type": "function"
 },
 "regionmask.core.regions._OneRegion": {
  "lineno": 524,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regionmask.core.regions._OneRegion.__init__": {
  "lineno": 528,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.asarray",
   "shapely.geometry.MultiPolygon",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "regionmask.core.regions._OneRegion.__repr__": {
  "lineno": 605,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions._OneRegion.bounds": {
  "lineno": 640,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.regions._OneRegion.coords": {
  "lineno": 617,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.nan",
   "numpy.ones",
   "numpy.vstack",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "regionmask.core.regions._OneRegion.polygon": {
  "lineno": 609,
  "symbols_in_volume": [
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "regionmask.core.utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.core.utils._create_dict_of_numbered_string": {
  "lineno": 15,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.utils._equally_spaced_on_split_lon": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.diff",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "regionmask.core.utils._find_splitpoint": {
  "lineno": 192,
  "symbols_in_volume": [
   "numpy.argwhere",
   "numpy.asarray",
   "numpy.diff",
   "numpy.isclose"
  ],
  "type": "function"
 },
 "regionmask.core.utils._is_180": {
  "lineno": 96,
  "symbols_in_volume": [
   "numpy.round"
  ],
  "type": "function"
 },
 "regionmask.core.utils._is_numeric": {
  "lineno": 157,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.issubdtype",
   "numpy.number"
  ],
  "type": "function"
 },
 "regionmask.core.utils._maybe_to_dict": {
  "lineno": 6,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.core.utils._sanitize_names_abbrevs": {
  "lineno": 20,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "regionmask.core.utils._wrapAngle": {
  "lineno": 55,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.isscalar",
   "numpy.unique"
  ],
  "type": "function"
 },
 "regionmask.core.utils._wrapAngle180": {
  "lineno": 47,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "regionmask.core.utils._wrapAngle360": {
  "lineno": 38,
  "symbols_in_volume": [
   "numpy.array",
   "numpy.mod"
  ],
  "type": "function"
 },
 "regionmask.core.utils.create_lon_lat_dataarray_from_bounds": {
  "lineno": 108,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.meshgrid",
   "xarray.Dataset"
  ],
  "type": "function"
 },
 "regionmask.core.utils.equally_spaced": {
  "lineno": 163,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.asarray",
   "numpy.diff"
  ],
  "type": "function"
 },
 "regionmask.defined_regions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.defined_regions._ar6": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.defined_regions._ar6.ar6_cls": {
  "lineno": 19,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regionmask.defined_regions._ar6.ar6_cls.__init__": {
  "lineno": 22,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ar6.ar6_cls.__repr__": {
  "lineno": 87,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ar6.ar6_cls.all": {
  "lineno": 42,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ar6.ar6_cls.df": {
  "lineno": 34,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ar6.ar6_cls.land": {
  "lineno": 55,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ar6.ar6_cls.ocean": {
  "lineno": 71,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ar6_pre_revisions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.defined_regions._ar6_pre_revisions._combine_to_multipolygon": {
  "lineno": 42,
  "symbols_in_volume": [
   "geopandas.GeoSeries",
   "shapely.geometry.MultiPolygon"
  ],
  "type": "function"
 },
 "regionmask.defined_regions._ar6_pre_revisions.ar6_pre_revisions_cls": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regionmask.defined_regions._ar6_pre_revisions.ar6_pre_revisions_cls.__init__": {
  "lineno": 122,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ar6_pre_revisions.ar6_pre_revisions_cls.__repr__": {
  "lineno": 208,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ar6_pre_revisions.ar6_pre_revisions_cls._df": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ar6_pre_revisions.ar6_pre_revisions_cls._df_combined": {
  "lineno": 144,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ar6_pre_revisions.ar6_pre_revisions_cls.all": {
  "lineno": 161,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ar6_pre_revisions.ar6_pre_revisions_cls.land": {
  "lineno": 175,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ar6_pre_revisions.ar6_pre_revisions_cls.ocean": {
  "lineno": 183,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ar6_pre_revisions.ar6_pre_revisions_cls.separate_pacific": {
  "lineno": 191,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ressources": {
  "lineno": null,
  "symbols_in_volume": [
   "pooch.create",
   "pooch.os_cache"
  ],
  "type": "module"
 },
 "regionmask.defined_regions._ressources.fetch_remote_shapefile": {
  "lineno": 16,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions._ressources.read_remote_shapefile": {
  "lineno": 25,
  "symbols_in_volume": [
   "geopandas.read_file"
  ],
  "type": "function"
 },
 "regionmask.defined_regions.giorgi": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.defined_regions.natural_earth": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.defined_regions.natural_earth._maybe_get_column": {
  "lineno": 7,
  "symbols_in_volume": [
   "six.string_types"
  ],
  "type": "function"
 },
 "regionmask.defined_regions.natural_earth._obtain_ne": {
  "lineno": 25,
  "symbols_in_volume": [
   "cartopy.io.shapereader.natural_earth",
   "geopandas.read_file",
   "numpy.array",
   "shapely.geometry.MultiPolygon"
  ],
  "type": "function"
 },
 "regionmask.defined_regions.natural_earth.natural_earth_cls": {
  "lineno": 110,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regionmask.defined_regions.natural_earth.natural_earth_cls.__init__": {
  "lineno": 119,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions.natural_earth.natural_earth_cls.__repr__": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions.natural_earth.natural_earth_cls.countries_110": {
  "lineno": 135,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions.natural_earth.natural_earth_cls.countries_50": {
  "lineno": 149,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions.natural_earth.natural_earth_cls.land_110": {
  "lineno": 193,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions.natural_earth.natural_earth_cls.ocean_basins_50": {
  "lineno": 211,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions.natural_earth.natural_earth_cls.us_states_10": {
  "lineno": 178,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions.natural_earth.natural_earth_cls.us_states_50": {
  "lineno": 163,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.defined_regions.srex": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.test": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.test.test_OneRegion_and_Region_cls": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.test.test_OneRegion_and_Region_cls.test_Regions_cls_deprection_warning": {
  "lineno": 100,
  "symbols_in_volume": [
   "pytest.warns",
   "regionmask.Region_cls"
  ],
  "type": "function"
 },
 "regionmask.test.test_OneRegion_and_Region_cls.test_attributes": {
  "lineno": 8,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.ndarray",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "regionmask.Region_cls",
   "regionmask._OneRegion",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "regionmask.test.test_OneRegion_and_Region_cls.test_bounds": {
  "lineno": 82,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "regionmask.Region_cls",
   "regionmask._OneRegion"
  ],
  "type": "function"
 },
 "regionmask.test.test_OneRegion_and_Region_cls.test_centroid": {
  "lineno": 61,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "regionmask.Region_cls",
   "regionmask._OneRegion"
  ],
  "type": "function"
 },
 "regionmask.test.test_OneRegion_and_Region_cls.test_multi_polygon_input": {
  "lineno": 43,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.nan",
   "numpy.ones",
   "numpy.vstack",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "regionmask.Region_cls",
   "regionmask._OneRegion",
   "shapely.geometry.MultiPolygon",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "regionmask.test.test_OneRegion_and_Region_cls.test_polygon_input": {
  "lineno": 28,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "regionmask.Region_cls",
   "regionmask._OneRegion",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "regionmask.test.test_OneRegion_and_Region_cls.test_wrong_region_outlines": {
  "lineno": 111,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "pytest.raises",
   "regionmask.Region_cls",
   "regionmask._OneRegion"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "regionmask.Regions",
   "shapely.geometry.Polygon"
  ],
  "type": "module"
 },
 "regionmask.test.test_Regions._create_expected_str_list": {
  "lineno": 237,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_abbrevs": {
  "lineno": 69,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_bounds": {
  "lineno": 85,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_bounds_global": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_centroid": {
  "lineno": 111,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_centroid_multipolygon": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.allclose",
   "regionmask.Regions",
   "shapely.geometry.MultiPolygon",
   "shapely.geometry.Polygon"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_coords": {
  "lineno": 74,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_error_on_non_numeric": {
  "lineno": 264,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "regionmask.Regions"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_len": {
  "lineno": 49,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_lon_extent": {
  "lineno": 242,
  "symbols_in_volume": [
   "pytest.raises",
   "regionmask.Regions"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_map_keys_mixed": {
  "lineno": 158,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_map_keys_np_integer": {
  "lineno": 145,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_map_keys_one": {
  "lineno": 132,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_map_keys_several": {
  "lineno": 150,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_map_keys_unique": {
  "lineno": 162,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_name": {
  "lineno": 54,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_names": {
  "lineno": 64,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_numbers": {
  "lineno": 59,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_optional_arguments": {
  "lineno": 197,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize",
   "regionmask.Regions",
   "six.string_types"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_polygon": {
  "lineno": 101,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_subset_to_Region": {
  "lineno": 167,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "regionmask._OneRegion"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions.test_subset_to_Regions": {
  "lineno": 187,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "regionmask.Regions"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.array",
   "regionmask.Regions_cls",
   "shapely.geometry.Polygon",
   "warnings.filterwarnings"
  ],
  "type": "module"
 },
 "regionmask.test.test_Regions_cls.test_Regions_cls_deprection_warning": {
  "lineno": 172,
  "symbols_in_volume": [
   "pytest.warns",
   "regionmask.Regions_cls"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_abbrevs": {
  "lineno": 61,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_centroid": {
  "lineno": 88,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_centroids_deprection_warning": {
  "lineno": 181,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "pytest.warns",
   "regionmask.Regions_cls"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_coords": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.vstack"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_len": {
  "lineno": 44,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_map_keys_mixed": {
  "lineno": 132,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_map_keys_np_integer": {
  "lineno": 116,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_map_keys_one": {
  "lineno": 105,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_map_keys_several": {
  "lineno": 121,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_map_keys_unique": {
  "lineno": 136,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_name": {
  "lineno": 48,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_names": {
  "lineno": 57,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_numbers": {
  "lineno": 52,
  "symbols_in_volume": [
   "numpy.allclose"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_polygon": {
  "lineno": 74,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_subset_to_Region": {
  "lineno": 141,
  "symbols_in_volume": [
   "regionmask._OneRegion"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_subset_to_Region_np_integer": {
  "lineno": 158,
  "symbols_in_volume": [
   "regionmask._OneRegion"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_subset_to_Regions": {
  "lineno": 165,
  "symbols_in_volume": [
   "regionmask.Regions_cls"
  ],
  "type": "function"
 },
 "regionmask.test.test_Regions_cls.test_user_defined_centroid": {
  "lineno": 92,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "regionmask.Regions_cls"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.test.test_defined_regions._defined_region": {
  "lineno": 9,
  "symbols_in_volume": [
   "regionmask.Regions"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_ar6": {
  "lineno": 66,
  "symbols_in_volume": [
   "regionmask.defined_regions.ar6.all"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_ar6_land": {
  "lineno": 71,
  "symbols_in_volume": [
   "regionmask.defined_regions.ar6.land"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_ar6_ocean": {
  "lineno": 76,
  "symbols_in_volume": [
   "regionmask.defined_regions.ar6.ocean"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_ar6_pre_revisions": {
  "lineno": 81,
  "symbols_in_volume": [
   "regionmask.defined_regions._ar6_pre_revisions.all"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_ar6_pre_revisions_land": {
  "lineno": 86,
  "symbols_in_volume": [
   "regionmask.defined_regions._ar6_pre_revisions.land"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_ar6_pre_revisions_ocean": {
  "lineno": 91,
  "symbols_in_volume": [
   "regionmask.defined_regions._ar6_pre_revisions.ocean"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_ar6_pre_revisions_separate_pacific": {
  "lineno": 96,
  "symbols_in_volume": [
   "regionmask.defined_regions._ar6_pre_revisions.separate_pacific"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_countries_110": {
  "lineno": 28,
  "symbols_in_volume": [
   "regionmask.defined_regions.natural_earth.countries_110"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_countries_50": {
  "lineno": 33,
  "symbols_in_volume": [
   "regionmask.defined_regions.natural_earth.countries_50"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_giorgi": {
  "lineno": 18,
  "symbols_in_volume": [
   "regionmask.defined_regions.giorgi"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_land_110": {
  "lineno": 48,
  "symbols_in_volume": [
   "regionmask.defined_regions.natural_earth.land_110"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_maybe_get_column": {
  "lineno": 101,
  "symbols_in_volume": [
   "pytest.raises",
   "regionmask.defined_regions._maybe_get_column"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_maybe_get_column.lowercase": {
  "lineno": 102,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regionmask.test.test_defined_regions.test_maybe_get_column.lowercase.name": {
  "lineno": 103,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_maybe_get_column.uppercase": {
  "lineno": 107,
  "symbols_in_volume": [],
  "type": "class"
 },
 "regionmask.test.test_defined_regions.test_maybe_get_column.uppercase.NAME": {
  "lineno": 108,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_natural_earth_loaded_as_utf8": {
  "lineno": 58,
  "symbols_in_volume": [
   "regionmask.defined_regions.natural_earth.ocean_basins_50"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_ocean_basins_50": {
  "lineno": 53,
  "symbols_in_volume": [
   "regionmask.defined_regions.natural_earth.ocean_basins_50"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_srex": {
  "lineno": 23,
  "symbols_in_volume": [
   "regionmask.defined_regions.srex"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_us_states_10": {
  "lineno": 43,
  "symbols_in_volume": [
   "regionmask.defined_regions.natural_earth.us_states_10"
  ],
  "type": "function"
 },
 "regionmask.test.test_defined_regions.test_us_states_50": {
  "lineno": 38,
  "symbols_in_volume": [
   "regionmask.defined_regions.natural_earth.us_states_50"
  ],
  "type": "function"
 },
 "regionmask.test.test_formatting": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.test.test_formatting.test_display_metadata": {
  "lineno": 45,
  "symbols_in_volume": [
   "regionmask.core.formatting._display_metadata"
  ],
  "type": "function"
 },
 "regionmask.test.test_formatting.test_maybe_truncate": {
  "lineno": 14,
  "symbols_in_volume": [
   "regionmask.core.formatting.maybe_truncate"
  ],
  "type": "function"
 },
 "regionmask.test.test_formatting.test_pretty_print": {
  "lineno": 7,
  "symbols_in_volume": [
   "regionmask.core.formatting.pretty_print"
  ],
  "type": "function"
 },
 "regionmask.test.test_formatting.test_repr_srex": {
  "lineno": 19,
  "symbols_in_volume": [
   "regionmask.defined_regions.srex.__repr__"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "pandas.Series"
  ],
  "type": "module"
 },
 "regionmask.test.test_geopandas.geodataframe_clean": {
  "lineno": 24,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame.from_dict",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.geodataframe_duplicates": {
  "lineno": 52,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame.from_dict",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.geodataframe_missing": {
  "lineno": 38,
  "symbols_in_volume": [
   "geopandas.GeoDataFrame.from_dict",
   "pytest.fixture"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_check_duplicates_raise_ValueError": {
  "lineno": 141,
  "symbols_in_volume": [
   "pytest.raises",
   "regionmask.core._geopandas._check_duplicates"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_check_duplicates_return_True": {
  "lineno": 146,
  "symbols_in_volume": [
   "regionmask.core._geopandas._check_duplicates"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_construct_abbrevs": {
  "lineno": 179,
  "symbols_in_volume": [
   "pandas.DataFrame",
   "regionmask.core._geopandas._construct_abbrevs"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_construct_abbrevs_two_words": {
  "lineno": 155,
  "symbols_in_volume": [
   "regionmask.core._geopandas._construct_abbrevs"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_construct_abbrevs_wrong_name": {
  "lineno": 150,
  "symbols_in_volume": [
   "pytest.raises",
   "regionmask.core._geopandas._construct_abbrevs"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_enumerate_duplicates": {
  "lineno": 162,
  "symbols_in_volume": [
   "pandas.Series",
   "pandas.testing.assert_series_equal",
   "regionmask.core._geopandas._enumerate_duplicates"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_from_geopandas_column_missing": {
  "lineno": 130,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "regionmask.from_geopandas"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_from_geopandas_default": {
  "lineno": 96,
  "symbols_in_volume": [
   "regionmask.Regions",
   "regionmask.from_geopandas"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_from_geopandas_duplicates_error": {
  "lineno": 121,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "regionmask.from_geopandas"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_from_geopandas_missing_error": {
  "lineno": 112,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "regionmask.from_geopandas"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_from_geopandas_use_columns": {
  "lineno": 73,
  "symbols_in_volume": [
   "regionmask.Regions",
   "regionmask.from_geopandas"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_from_geopandas_wrong_input": {
  "lineno": 66,
  "symbols_in_volume": [
   "pytest.raises",
   "regionmask.from_geopandas"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_mask_3D_geopandas": {
  "lineno": 207,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.equal",
   "pytest.mark.parametrize",
   "regionmask.mask_3D_geopandas",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_mask_3D_geopandas_numbers": {
  "lineno": 253,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.equal",
   "pytest.mark.parametrize",
   "regionmask.mask_3D_geopandas",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_mask_3D_geopandas_warns_empty": {
  "lineno": 276,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.equal",
   "pytest.mark.parametrize",
   "pytest.warns",
   "regionmask.mask_3D_geopandas",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_mask_geopandas": {
  "lineno": 193,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.equal",
   "pytest.mark.parametrize",
   "regionmask.mask_geopandas",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_mask_geopandas_duplicates_error": {
  "lineno": 317,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "regionmask.mask_3D_geopandas",
   "regionmask.mask_geopandas"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_mask_geopandas_missing_error": {
  "lineno": 310,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "regionmask.mask_3D_geopandas",
   "regionmask.mask_geopandas"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_mask_geopandas_numbers": {
  "lineno": 225,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.equal",
   "pytest.mark.parametrize",
   "regionmask.mask_geopandas",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_mask_geopandas_raises_legacy": {
  "lineno": 296,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "regionmask.mask_3D_geopandas",
   "regionmask.mask_geopandas"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_mask_geopandas_warns_empty": {
  "lineno": 239,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.equal",
   "pytest.mark.parametrize",
   "pytest.warns",
   "regionmask.mask_geopandas",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_mask_geopandas_wrong_input": {
  "lineno": 289,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "regionmask.mask_3D_geopandas",
   "regionmask.mask_geopandas"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_mask_geopandas_wrong_numbers": {
  "lineno": 303,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "regionmask.mask_3D_geopandas",
   "regionmask.mask_geopandas"
  ],
  "type": "function"
 },
 "regionmask.test.test_geopandas.test_raise_on_non_numeric_numbers": {
  "lineno": 324,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.raises",
   "regionmask.mask_3D_geopandas",
   "regionmask.mask_geopandas"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask": {
  "lineno": null,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.array",
   "numpy.random.randn",
   "regionmask.Regions",
   "regionmask.core.utils.create_lon_lat_dataarray_from_bounds",
   "shapely.geometry.Polygon"
  ],
  "type": "module"
 },
 "regionmask.test.test_mask._expected_rectangle": {
  "lineno": 527,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_mask.expected_mask_edge": {
  "lineno": 540,
  "symbols_in_volume": [
   "numpy.NaN"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.expected_mask_interior_and_edge": {
  "lineno": 551,
  "symbols_in_volume": [
   "numpy.NaN"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_create_mask_contains": {
  "lineno": 32,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.filterwarnings",
   "pytest.raises",
   "regionmask.create_mask_contains"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_create_mask_contains_warns": {
  "lineno": 57,
  "symbols_in_volume": [
   "pytest.warns",
   "regionmask.create_mask_contains"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_create_mask_function_2D": {
  "lineno": 288,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.filterwarnings",
   "regionmask.create_mask_contains"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_deg45_rasterize_offset_equal": {
  "lineno": 633,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize",
   "regionmask.core.mask._mask_rasterize",
   "regionmask.core.mask._mask_rasterize_no_offset"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_deg45_rasterize_shapely_equal": {
  "lineno": 623,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "xarray.testing.assert_equal"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_determine_method": {
  "lineno": 682,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "regionmask.core.mask._determine_method",
   "regionmask.core.utils._wrapAngle"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask": {
  "lineno": 104,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_2D": {
  "lineno": 295,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_3D": {
  "lineno": 421,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.equal",
   "pytest.mark.parametrize",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_3D_empty": {
  "lineno": 441,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.equal",
   "pytest.mark.parametrize",
   "pytest.warns",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_3D_obj": {
  "lineno": 453,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.equal",
   "pytest.mark.parametrize",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_3D_raises_legacy": {
  "lineno": 481,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_autowrap": {
  "lineno": 216,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "regionmask.Regions"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_edge": {
  "lineno": 565,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.equal",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_empty": {
  "lineno": 403,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.equal",
   "pytest.mark.parametrize",
   "pytest.warns",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_func": {
  "lineno": 65,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize",
   "regionmask.core.mask._mask_rasterize",
   "regionmask.core.mask._mask_shapely"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_interior_and_edge": {
  "lineno": 582,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.equal",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_obj": {
  "lineno": 161,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_poly_z_value": {
  "lineno": 128,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.equal",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "pytest.xfail",
   "regionmask.Regions",
   "shapely.geometry.Polygon",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_rasterize_irregular": {
  "lineno": 323,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "pytest.raises",
   "xarray"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_rasterize_wrong_number_fill": {
  "lineno": 93,
  "symbols_in_volume": [
   "numpy.NaN",
   "pytest.mark.parametrize",
   "pytest.mark.xfail",
   "pytest.raises",
   "regionmask.core.mask._mask_rasterize"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_shapely_wrong_number_fill": {
  "lineno": 82,
  "symbols_in_volume": [
   "pytest.raises",
   "regionmask.core.mask._mask_shapely"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_whole_grid": {
  "lineno": 726,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_wrap": {
  "lineno": 178,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.isnan",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "regionmask.Regions"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_wrong_method": {
  "lineno": 273,
  "symbols_in_volume": [
   "pytest.raises"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_xarray": {
  "lineno": 114,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.equal",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_xarray_in_out_2D": {
  "lineno": 333,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.equal",
   "numpy.random.rand",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_xarray_name": {
  "lineno": 151,
  "symbols_in_volume": [
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_mask_xarray_out_2D": {
  "lineno": 305,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.equal",
   "pytest.mark.filterwarnings",
   "pytest.mark.parametrize",
   "xarray.DataArray"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_rasterize": {
  "lineno": 390,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.allclose",
   "pytest.mark.parametrize",
   "regionmask.core.mask._mask_rasterize"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_rasterize_edge": {
  "lineno": 600,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.xfail",
   "regionmask.core.mask._mask_rasterize_no_offset"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_rasterize_on_split_lon": {
  "lineno": 655,
  "symbols_in_volume": [
   "numpy.all",
   "numpy.allclose",
   "numpy.equal",
   "pytest.mark.parametrize",
   "xarray.DataArray",
   "xarray.testing.assert_equal"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_transform_from_latlon": {
  "lineno": 370,
  "symbols_in_volume": [
   "affine.Affine",
   "numpy.allclose",
   "numpy.arange",
   "numpy.array",
   "pytest.mark.parametrize",
   "regionmask.core.mask._transform_from_latlon"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask.test_xarray_keyword_deprection_warning": {
  "lineno": 363,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "pytest.warns",
   "xarray"
  ],
  "type": "function"
 },
 "regionmask.test.test_mask_defined_regions": {
  "lineno": null,
  "symbols_in_volume": [
   "regionmask.core.utils.create_lon_lat_dataarray_from_bounds",
   "regionmask.defined_regions.ar6.all",
   "regionmask.defined_regions.ar6.land",
   "regionmask.defined_regions.ar6.ocean",
   "regionmask.defined_regions.giorgi",
   "regionmask.defined_regions.natural_earth.countries_110",
   "regionmask.defined_regions.natural_earth.countries_50",
   "regionmask.defined_regions.natural_earth.land_110",
   "regionmask.defined_regions.natural_earth.ocean_basins_50",
   "regionmask.defined_regions.natural_earth.us_states_10",
   "regionmask.defined_regions.natural_earth.us_states_50",
   "regionmask.defined_regions.srex"
  ],
  "type": "module"
 },
 "regionmask.test.test_mask_defined_regions.test_mask_equal_defined_regions": {
  "lineno": 33,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot": {
  "lineno": null,
  "symbols_in_volume": [
   "matplotlib.use",
   "regionmask.Regions",
   "shapely.geometry.MultiPolygon",
   "shapely.geometry.Polygon"
  ],
  "type": "module"
 },
 "regionmask.test.test_plot.figure_context": {
  "lineno": 62,
  "symbols_in_volume": [
   "contextlib.contextmanager",
   "matplotlib.pyplot.close",
   "matplotlib.pyplot.figure"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_flatten_polygons": {
  "lineno": 99,
  "symbols_in_volume": [
   "regionmask.core.plot._flatten_polygons"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_3D_mask_wrong_input": {
  "lineno": 492,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.ma.allequal",
   "numpy.ma.masked_invalid",
   "pytest.raises",
   "regionmask.defined_regions.srex",
   "regionmask.plot_3D_mask"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_coastlines": {
  "lineno": 466,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_label": {
  "lineno": 345,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_label_defaults": {
  "lineno": 334,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_land": {
  "lineno": 438,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_line_prop": {
  "lineno": 317,
  "symbols_in_volume": [
   "matplotlib.colors.to_rgba_array",
   "numpy.testing.assert_equal",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_lines": {
  "lineno": 183,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_lines_from_poly": {
  "lineno": 300,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_lines_maybe_subsample": {
  "lineno": 274,
  "symbols_in_volume": [
   "distutils.version.LooseVersion",
   "numpy.__version__",
   "numpy.allclose",
   "numpy.linspace",
   "numpy.vstack",
   "pytest.mark.parametrize",
   "pytest.mark.skipif",
   "regionmask.Regions"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_lines_multipoly": {
  "lineno": 198,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_lines_selection": {
  "lineno": 217,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_lines_subsample": {
  "lineno": 261,
  "symbols_in_volume": [
   "numpy.allclose",
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_ocean": {
  "lineno": 408,
  "symbols_in_volume": [],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_projection": {
  "lineno": 145,
  "symbols_in_volume": [
   "cartopy.crs.Miller",
   "cartopy.crs.Mollweide",
   "cartopy.crs.PlateCarree",
   "pytest.mark.filterwarnings"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_regions_projection": {
  "lineno": 166,
  "symbols_in_volume": [
   "cartopy.crs.Mollweide"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_plot_text_prop": {
  "lineno": 388,
  "symbols_in_volume": [
   "pytest.mark.parametrize"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_polygons_coords": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.allclose",
   "regionmask.core.plot._polygons_coords"
  ],
  "type": "function"
 },
 "regionmask.test.test_plot.test_subsample": {
  "lineno": 75,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.arange",
   "numpy.vstack",
   "regionmask.core.plot._subsample"
  ],
  "type": "function"
 },
 "regionmask.test.test_save_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.test.test_utils": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.test.test_utils.test__equally_spaced_on_split_lon": {
  "lineno": 155,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.asarray",
   "numpy.random.randn",
   "numpy.random.seed",
   "regionmask.core.utils._equally_spaced_on_split_lon"
  ],
  "type": "function"
 },
 "regionmask.test.test_utils.test_create_dict_of_numbered_string": {
  "lineno": 17,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "regionmask.core.utils._create_dict_of_numbered_string"
  ],
  "type": "function"
 },
 "regionmask.test.test_utils.test_create_lon_lat_dataarray_from_bounds": {
  "lineno": 89,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.meshgrid",
   "pytest.mark.parametrize",
   "regionmask.core.utils.create_lon_lat_dataarray_from_bounds"
  ],
  "type": "function"
 },
 "regionmask.test.test_utils.test_create_lon_lat_dataarray_from_bounds._check_coords": {
  "lineno": 99,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.arange"
  ],
  "type": "function"
 },
 "regionmask.test.test_utils.test_equally_spaced": {
  "lineno": 123,
  "symbols_in_volume": [
   "numpy.arange",
   "numpy.random.randn",
   "numpy.random.seed",
   "regionmask.core.utils.equally_spaced"
  ],
  "type": "function"
 },
 "regionmask.test.test_utils.test_find_splitpoint": {
  "lineno": 185,
  "symbols_in_volume": [
   "numpy.asarray",
   "numpy.random.randn",
   "numpy.random.seed",
   "pytest.raises",
   "regionmask.core.utils._find_splitpoint"
  ],
  "type": "function"
 },
 "regionmask.test.test_utils.test_is_180": {
  "lineno": 76,
  "symbols_in_volume": [
   "pytest.raises",
   "regionmask.core.utils._is_180"
  ],
  "type": "function"
 },
 "regionmask.test.test_utils.test_is_numeric": {
  "lineno": 117,
  "symbols_in_volume": [
   "regionmask.core.utils._is_numeric"
  ],
  "type": "function"
 },
 "regionmask.test.test_utils.test_maybe_to_dict": {
  "lineno": 34,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "regionmask.core.utils._maybe_to_dict"
  ],
  "type": "function"
 },
 "regionmask.test.test_utils.test_sanitize_names_abbrevs": {
  "lineno": 51,
  "symbols_in_volume": [
   "pytest.mark.parametrize",
   "regionmask.core.utils._sanitize_names_abbrevs"
  ],
  "type": "function"
 },
 "regionmask.test.test_utils.test_sanitize_names_abbrevs_unequal_length": {
  "lineno": 70,
  "symbols_in_volume": [
   "pytest.raises",
   "regionmask.core.utils._sanitize_names_abbrevs"
  ],
  "type": "function"
 },
 "regionmask.test.test_wrapAngle": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 },
 "regionmask.test.test_wrapAngle.test__wrapAngle": {
  "lineno": 44,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.arange",
   "pytest.raises",
   "regionmask.core.utils._wrapAngle",
   "regionmask.core.utils._wrapAngle180",
   "regionmask.core.utils._wrapAngle360"
  ],
  "type": "function"
 },
 "regionmask.test.test_wrapAngle.test__wrapAngle180": {
  "lineno": 25,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.arange",
   "numpy.concatenate",
   "regionmask.core.utils._wrapAngle180"
  ],
  "type": "function"
 },
 "regionmask.test.test_wrapAngle.test__wrapAngle360": {
  "lineno": 7,
  "symbols_in_volume": [
   "numpy.allclose",
   "numpy.arange",
   "numpy.concatenate",
   "regionmask.core.utils._wrapAngle360"
  ],
  "type": "function"
 },
 "regionmask.test.utils": {
  "lineno": null,
  "symbols_in_volume": [
   "regionmask.Regions"
  ],
  "type": "module"
 },
 "regionmask.test.utils.expected_mask_2D": {
  "lineno": 23,
  "symbols_in_volume": [
   "numpy.NaN",
   "numpy.array"
  ],
  "type": "function"
 },
 "regionmask.test.utils.expected_mask_3D": {
  "lineno": 27,
  "symbols_in_volume": [
   "numpy.array"
  ],
  "type": "function"
 },
 "regionmask.version": {
  "lineno": null,
  "symbols_in_volume": [],
  "type": "module"
 }
}