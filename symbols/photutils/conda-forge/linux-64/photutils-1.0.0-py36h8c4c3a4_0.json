{
 "photutils": {
  "data": {
   "symbols_in_volume": {
    "photutils._get_bibtex": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils._astropy_init": {
  "data": {
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      51
     ]
    },
    "ImportError": {
     "line number": [
      14
     ]
    },
    "NameError": {
     "line number": [
      8
     ]
    },
    "TypeError": {
     "line number": [
      42
     ]
    },
    "__package__": {
     "line number": [
      37,
      41,
      44
     ]
    },
    "astropy.config.configuration.ConfigurationDefaultMissingError": {
     "line number": [
      45
     ]
    },
    "astropy.config.configuration.ConfigurationDefaultMissingWarning": {
     "line number": [
      49
     ]
    },
    "astropy.config.configuration.update_default_config": {
     "line number": [
      40,
      44
     ]
    },
    "astropy.tests.runner.TestRunner.make_test_runner_in": {
     "line number": [
      28
     ]
    },
    "photutils._astropy_init.__all__": {
     "line number": [
      30
     ]
    },
    "photutils._astropy_init.builtins": {
     "line number": [
      10
     ]
    },
    "photutils._astropy_init.config_dir": {
     "line number": [
      37,
      41,
      44
     ]
    },
    "photutils._astropy_init.config_template": {
     "line number": [
      38
     ]
    },
    "photutils._astropy_init.os": {
     "line number": [
      28,
      35,
      36,
      37,
      38
     ]
    },
    "photutils._astropy_init.test": {
     "line number": [
      29
     ]
    },
    "photutils._astropy_init.wmsg": {
     "line number": [
      49
     ]
    },
    "warnings.warn": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils._astropy_init.ConfigurationDefaultMissingError": {
  "data": {
   "shadows": "astropy.config.configuration.ConfigurationDefaultMissingError"
  },
  "type": "import"
 },
 "photutils._astropy_init.ConfigurationDefaultMissingWarning": {
  "data": {
   "shadows": "astropy.config.configuration.ConfigurationDefaultMissingWarning"
  },
  "type": "import"
 },
 "photutils._astropy_init.TestRunner": {
  "data": {
   "shadows": "astropy.tests.runner.TestRunner"
  },
  "type": "import"
 },
 "photutils._astropy_init.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "photutils._astropy_init.__version__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils._astropy_init.builtins": {
  "data": {
   "shadows": "builtins"
  },
  "type": "import"
 },
 "photutils._astropy_init.config_dir": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "photutils._astropy_init.config_template": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "photutils._astropy_init.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "photutils._astropy_init.test": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils._astropy_init.update_default_config": {
  "data": {
   "shadows": "astropy.config.configuration.update_default_config"
  },
  "type": "import"
 },
 "photutils._astropy_init.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "photutils._astropy_init.wmsg": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "photutils._get_bibtex": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "len": {
     "line number": [
      32
     ]
    },
    "open": {
     "line number": [
      30
     ]
    },
    "photutils.os": {
     "line number": [
      28,
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture._photometry_utils": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture._photometry_utils._handle_units": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      50
     ]
    },
    "all": {
     "line number": [
      48
     ]
    },
    "any": {
     "line number": [
      49
     ]
    },
    "hasattr": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture._photometry_utils._prepare_photometry_data": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      107
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture._photometry_utils._validate_inputs": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      23,
      28
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      21,
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture._photometry_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.attributes": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.attributes.AngleOrPixelScalarQuantity": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "photutils.aperture.attributes.ApertureAttribute": {
     "line number": [
      140
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.attributes.AngleOrPixelScalarQuantity._validate": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      156
     ]
    },
    "ValueError": {
     "line number": [
      149,
      153
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      147
     ]
    },
    "astropy.units.pixel": {
     "line number": [
      152
     ]
    },
    "isinstance": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.attributes.AngleScalarQuantity": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "photutils.aperture.attributes.ApertureAttribute": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.attributes.AngleScalarQuantity._validate": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      136
     ]
    },
    "ValueError": {
     "line number": [
      130,
      133
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      128
     ]
    },
    "isinstance": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.attributes.ApertureAttribute": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "photutils.aperture.attributes.ApertureAttribute.__delete__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "photutils.aperture.attributes.ApertureAttribute.__get__": {
  "data": {
   "lineno": 23
  },
  "type": "function"
 },
 "photutils.aperture.attributes.ApertureAttribute.__init__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "photutils.aperture.attributes.ApertureAttribute.__set__": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "astropy.coordinates.SkyCoord": {
     "line number": [
      30
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      30
     ]
    },
    "float": {
     "line number": [
      31
     ]
    },
    "isinstance": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.attributes.ApertureAttribute._validate": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.attributes.PixelPositions": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "photutils.aperture.attributes.ApertureAttribute": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.attributes.PixelPositions.__set__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      68
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      64
     ]
    },
    "float": {
     "line number": [
      61
     ]
    },
    "isinstance": {
     "line number": [
      58,
      64
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      61
     ]
    },
    "tuple": {
     "line number": [
      59
     ]
    },
    "zip": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.attributes.PixelPositions._validate": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      85
     ]
    },
    "ValueError": {
     "line number": [
      80
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      76
     ]
    },
    "astropy.units.UnitsError": {
     "line number": [
      77
     ]
    },
    "astropy.units.pixel": {
     "line number": [
      76
     ]
    },
    "isinstance": {
     "line number": [
      76
     ]
    },
    "numpy.any": {
     "line number": [
      79
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      83
     ]
    },
    "numpy.isfinite": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.attributes.PositiveScalar": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "photutils.aperture.attributes.ApertureAttribute": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.attributes.PositiveScalar._validate": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      118
     ]
    },
    "numpy.isscalar": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.attributes.Scalar": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "photutils.aperture.attributes.ApertureAttribute": {
     "line number": [
      101
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.attributes.Scalar._validate": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      108
     ]
    },
    "numpy.isscalar": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.attributes.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.attributes.SkyCoordPositions": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "photutils.aperture.attributes.ApertureAttribute": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.attributes.SkyCoordPositions._validate": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      97
     ]
    },
    "astropy.coordinates.SkyCoord": {
     "line number": [
      96
     ]
    },
    "isinstance": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.attributes.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.aperture.attributes.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.attributes.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.bounding_box": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.bounding_box.BoundingBox": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "photutils.aperture.bounding_box.BoundingBox.__and__": {
  "data": {
   "lineno": 139
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.__eq__": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      126
     ]
    },
    "isinstance": {
     "line number": [
      125
     ]
    },
    "photutils.aperture.bounding_box.BoundingBox": {
     "line number": [
      125
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.__init__": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      57,
      59,
      61,
      63
     ]
    },
    "ValueError": {
     "line number": [
      66,
      68
     ]
    },
    "astropy.io.fits.util._is_int": {
     "line number": [
      56,
      58,
      60,
      62
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.__or__": {
  "data": {
   "lineno": 136
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.__repr__": {
  "data": {
   "lineno": 142
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.as_artist": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "matplotlib.patches.Rectangle": {
     "line number": [
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.as_patch": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "astropy.utils.deprecated": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.extent": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "property": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.from_float": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "classmethod": {
     "line number": [
      75
     ]
    },
    "cls": {
     "line number": [
      122
     ]
    },
    "int": {
     "line number": [
      117,
      118,
      119,
      120
     ]
    },
    "numpy.ceil": {
     "line number": [
      118,
      120
     ]
    },
    "numpy.floor": {
     "line number": [
      117,
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.intersection": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      330
     ]
    },
    "isinstance": {
     "line number": [
      329
     ]
    },
    "max": {
     "line number": [
      333,
      335
     ]
    },
    "min": {
     "line number": [
      334,
      336
     ]
    },
    "photutils.aperture.bounding_box.BoundingBox": {
     "line number": [
      329,
      340
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.plot": {
  "data": {
   "lineno": 262
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.shape": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "property": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.slices": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "property": {
     "line number": [
      157
     ]
    },
    "slice": {
     "line number": [
      166,
      166
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.to_aperture": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "RectangularAperture": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.union": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      302
     ]
    },
    "isinstance": {
     "line number": [
      301
     ]
    },
    "max": {
     "line number": [
      306,
      308
     ]
    },
    "min": {
     "line number": [
      305,
      307
     ]
    },
    "photutils.aperture.bounding_box.BoundingBox": {
     "line number": [
      301,
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.Rectangle": {
  "data": {
   "shadows": "matplotlib.patches.Rectangle"
  },
  "type": "import"
 },
 "photutils.aperture.bounding_box.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.aperture.bounding_box._is_int": {
  "data": {
   "shadows": "astropy.io.fits.util._is_int"
  },
  "type": "import"
 },
 "photutils.aperture.bounding_box.deprecated": {
  "data": {
   "shadows": "astropy.utils.deprecated"
  },
  "type": "import"
 },
 "photutils.aperture.bounding_box.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.circle": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.circle.CircularAnnulus": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "PixelPositions": {
     "line number": [
      264
     ]
    },
    "PositiveScalar": {
     "line number": [
      265,
      266
     ]
    },
    "photutils.aperture.circle.CircularMaskMixin": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.circle.CircularAnnulus.__init__": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAnnulus._to_patch": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "matplotlib.patches.Circle": {
     "line number": [
      313,
      314
     ]
    },
    "matplotlib.patches.PathPatch": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAnnulus._xy_extents": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": {
    "property": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAnnulus.area": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "photutils.aperture.circle.math": {
     "line number": [
      282
     ]
    },
    "property": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAnnulus.to_sky": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "photutils.aperture.circle.SkyCircularAnnulus": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAperture": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "PixelPositions": {
     "line number": [
      144
     ]
    },
    "PositiveScalar": {
     "line number": [
      145
     ]
    },
    "photutils.aperture.circle.CircularMaskMixin": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.circle.CircularAperture.__init__": {
  "data": {
   "lineno": 147
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAperture._to_patch": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "matplotlib.patches.Circle": {
     "line number": [
      188
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAperture._xy_extents": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "property": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAperture.area": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "photutils.aperture.circle.math": {
     "line number": [
      157
     ]
    },
    "property": {
     "line number": [
      155
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAperture.to_sky": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "photutils.aperture.circle.SkyCircularAperture": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularMaskMixin": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "photutils.aperture.circle.CircularMaskMixin.to_mask": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "ApertureMask": {
     "line number": [
      96
     ]
    },
    "ValueError": {
     "line number": [
      80
     ]
    },
    "circular_overlap_grid": {
     "line number": [
      86,
      92
     ]
    },
    "hasattr": {
     "line number": [
      75,
      77,
      91
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      83
     ]
    },
    "zip": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.circle.SkyCircularAnnulus": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "AngleOrPixelScalarQuantity": {
     "line number": [
      432,
      433
     ]
    },
    "SkyCoordPositions": {
     "line number": [
      431
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.circle.SkyCircularAnnulus.__init__": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.circle.SkyCircularAnnulus.to_pixel": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": {
    "photutils.aperture.circle.CircularAnnulus": {
     "line number": [
      463
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.circle.SkyCircularAperture": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "AngleOrPixelScalarQuantity": {
     "line number": [
      372
     ]
    },
    "SkyCoordPositions": {
     "line number": [
      371
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.circle.SkyCircularAperture.__init__": {
  "data": {
   "lineno": 374
  },
  "type": "function"
 },
 "photutils.aperture.circle.SkyCircularAperture.to_pixel": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "photutils.aperture.circle.CircularAperture": {
     "line number": [
      397
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.circle.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.aperture.circle.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.aperture.circle.mpatches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "photutils.aperture.circle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.core": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.core.Aperture": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      33
     ]
    },
    "photutils.aperture.core.abc": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.core.Aperture.__getitem__": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      43
     ]
    },
    "getattr": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.Aperture.__iter__": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "len": {
     "line number": [
      49
     ]
    },
    "range": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.Aperture.__len__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.Aperture.__repr__": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.Aperture.__str__": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.Aperture._positions_str": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      59
     ]
    },
    "isinstance": {
     "line number": [
      53,
      56
     ]
    },
    "numpy.array2string": {
     "line number": [
      54
     ]
    },
    "repr": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.Aperture.isscalar": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "property": {
     "line number": [
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.Aperture.shape": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "astropy.coordinates.SkyCoord": {
     "line number": [
      89
     ]
    },
    "isinstance": {
     "line number": [
      89
     ]
    },
    "property": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.aperture.core.PixelAperture": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "photutils.aperture.core.Aperture": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.core.PixelAperture._centered_edges": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "numpy.atleast_1d": {
     "line number": [
      209
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      208
     ]
    },
    "property": {
     "line number": [
      196
     ]
    },
    "zip": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._default_patch_properties": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      114
     ]
    },
    "property": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._define_patch_params": {
  "data": {
   "lineno": 418,
   "symbols_in_volume": {
    "numpy.atleast_2d": {
     "line number": [
      443
     ]
    },
    "photutils.aperture.core.copy": {
     "line number": [
      443
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._do_photometry": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      305,
      306
     ]
    },
    "numpy.nan": {
     "line number": [
      293,
      300
     ]
    },
    "numpy.sqrt": {
     "line number": [
      303
     ]
    },
    "numpy.sum": {
     "line number": [
      295,
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._make_annulus_path": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "matplotlib.path.Path": {
     "line number": [
      416
     ]
    },
    "numpy.concatenate": {
     "line number": [
      411
     ]
    },
    "numpy.hstack": {
     "line number": [
      414
     ]
    },
    "numpy.vstack": {
     "line number": [
      413
     ]
    },
    "staticmethod": {
     "line number": [
      391
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._to_patch": {
  "data": {
   "lineno": 452,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      475
     ]
    },
    "photutils.aperture.core.abc": {
     "line number": [
      452
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._to_sky_params": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "_pixel_scale_angle_at_skycoord": {
     "line number": [
      537
     ]
    },
    "_pixel_to_world": {
     "line number": [
      530
     ]
    },
    "astropy.coordinates.SkyCoord": {
     "line number": [
      535
     ]
    },
    "astropy.units.arcsec": {
     "line number": [
      548
     ]
    },
    "astropy.units.pix.to": {
     "line number": [
      548
     ]
    },
    "astropy.units.rad": {
     "line number": [
      543,
      543
     ]
    },
    "astropy.wcs.utils.wcs_to_celestial_frame": {
     "line number": [
      535
     ]
    },
    "getattr": {
     "line number": [
      547
     ]
    },
    "list": {
     "line number": [
      539
     ]
    },
    "numpy.transpose": {
     "line number": [
      529
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._translate_mask_mode": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      124,
      135
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      129
     ]
    },
    "int": {
     "line number": [
      134
     ]
    },
    "isinstance": {
     "line number": [
      134
     ]
    },
    "photutils.aperture.core.warnings": {
     "line number": [
      127
     ]
    },
    "staticmethod": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._xy_extents": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      160
     ]
    },
    "photutils.aperture.core.abc": {
     "line number": [
      150
     ]
    },
    "property": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.area": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      229
     ]
    },
    "property": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.bbox": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "numpy.atleast_2d": {
     "line number": [
      181
     ]
    },
    "property": {
     "line number": [
      171
     ]
    },
    "zip": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.bounding_boxes": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "astropy.utils.deprecated": {
     "line number": [
      163
     ]
    },
    "property": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.do_photometry": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": {
    "_handle_units": {
     "line number": [
      383
     ]
    },
    "_prepare_photometry_data": {
     "line number": [
      386
     ]
    },
    "_validate_inputs": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.plot": {
  "data": {
   "lineno": 477,
   "symbols_in_volume": {
    "matplotlib.pyplot.gca": {
     "line number": [
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.to_mask": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      278
     ]
    },
    "photutils.aperture.core.abc": {
     "line number": [
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.to_sky": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      572
     ]
    },
    "photutils.aperture.core.abc": {
     "line number": [
      552
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.SkyAperture": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": {
    "photutils.aperture.core.Aperture": {
     "line number": [
      575
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.core.SkyAperture._to_pixel_params": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": {
    "_pixel_scale_angle_at_skycoord": {
     "line number": [
      610
     ]
    },
    "_world_to_pixel": {
     "line number": [
      602
     ]
    },
    "astropy.coordinates.SkyCoord": {
     "line number": [
      608
     ]
    },
    "astropy.units.pixel": {
     "line number": [
      623
     ]
    },
    "astropy.units.radian": {
     "line number": [
      616
     ]
    },
    "astropy.wcs.utils.wcs_to_celestial_frame": {
     "line number": [
      608
     ]
    },
    "getattr": {
     "line number": [
      620
     ]
    },
    "list": {
     "line number": [
      612
     ]
    },
    "numpy.array": {
     "line number": [
      603
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.SkyAperture.to_pixel": {
  "data": {
   "lineno": 629,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      649
     ]
    },
    "photutils.aperture.core.abc": {
     "line number": [
      629
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.core.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.core.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.aperture.core.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "photutils.aperture.core.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "photutils.aperture.core.deprecated": {
  "data": {
   "shadows": "astropy.utils.deprecated"
  },
  "type": "import"
 },
 "photutils.aperture.core.mpath": {
  "data": {
   "shadows": "matplotlib.path"
  },
  "type": "import"
 },
 "photutils.aperture.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.core.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "photutils.aperture.core.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.aperture.core.wcs_to_celestial_frame": {
  "data": {
   "shadows": "astropy.wcs.utils.wcs_to_celestial_frame"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "PixelPositions": {
     "line number": [
      316
     ]
    },
    "PositiveScalar": {
     "line number": [
      317,
      318,
      319,
      320
     ]
    },
    "Scalar": {
     "line number": [
      321
     ]
    },
    "photutils.aperture.ellipse.EllipticalMaskMixin": {
     "line number": [
      253
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus.__init__": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      325,
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus._to_patch": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "matplotlib.patches.Ellipse": {
     "line number": [
      379,
      381
     ]
    },
    "matplotlib.patches.PathPatch": {
     "line number": [
      384
     ]
    },
    "numpy.pi": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus._xy_extents": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "property": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus.area": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "photutils.aperture.ellipse.math": {
     "line number": [
      347
     ]
    },
    "property": {
     "line number": [
      345
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus.to_sky": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": {
    "photutils.aperture.ellipse.SkyEllipticalAnnulus": {
     "line number": [
      410
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAperture": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "PixelPositions": {
     "line number": [
      174
     ]
    },
    "PositiveScalar": {
     "line number": [
      175,
      176
     ]
    },
    "Scalar": {
     "line number": [
      177
     ]
    },
    "photutils.aperture.ellipse.EllipticalMaskMixin": {
     "line number": [
      126
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.EllipticalAperture.__init__": {
  "data": {
   "lineno": 179
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAperture._to_patch": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "matplotlib.patches.Ellipse": {
     "line number": [
      223
     ]
    },
    "numpy.pi": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAperture._xy_extents": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "property": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAperture.area": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "photutils.aperture.ellipse.math": {
     "line number": [
      191
     ]
    },
    "property": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAperture.to_sky": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "photutils.aperture.ellipse.SkyEllipticalAperture": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalMaskMixin": {
  "data": {
   "lineno": 23
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.EllipticalMaskMixin._calc_extents": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      114
     ]
    },
    "numpy.sin": {
     "line number": [
      115
     ]
    },
    "numpy.sqrt": {
     "line number": [
      120,
      121
     ]
    },
    "staticmethod": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalMaskMixin.to_mask": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "ApertureMask": {
     "line number": [
      101
     ]
    },
    "ValueError": {
     "line number": [
      84
     ]
    },
    "elliptical_overlap_grid": {
     "line number": [
      90,
      96
     ]
    },
    "hasattr": {
     "line number": [
      77,
      80,
      95
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      87
     ]
    },
    "zip": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.SkyEllipticalAnnulus": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "AngleOrPixelScalarQuantity": {
     "line number": [
      534,
      535,
      536,
      537
     ]
    },
    "AngleScalarQuantity": {
     "line number": [
      538
     ]
    },
    "SkyCoordPositions": {
     "line number": [
      533
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.SkyEllipticalAnnulus.__init__": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      543,
      546,
      549,
      560,
      563
     ]
    },
    "astropy.units.deg": {
     "line number": [
      541
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.SkyEllipticalAnnulus.to_pixel": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": {
    "photutils.aperture.ellipse.EllipticalAnnulus": {
     "line number": [
      587
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.SkyEllipticalAperture": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "AngleOrPixelScalarQuantity": {
     "line number": [
      451,
      452
     ]
    },
    "AngleScalarQuantity": {
     "line number": [
      453
     ]
    },
    "SkyCoordPositions": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.SkyEllipticalAperture.__init__": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      457
     ]
    },
    "astropy.units.deg": {
     "line number": [
      455
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.SkyEllipticalAperture.to_pixel": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": {
    "photutils.aperture.ellipse.EllipticalAperture": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.aperture.ellipse.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.mpatches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.mask": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.mask.ApertureMask": {
  "data": {
   "lineno": 12
  },
  "type": "class"
 },
 "photutils.aperture.mask.ApertureMask.__array__": {
  "data": {
   "lineno": 37
  },
  "type": "function"
 },
 "photutils.aperture.mask.ApertureMask.__init__": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      32
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.mask.ApertureMask._overlap_slices": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      77
     ]
    },
    "len": {
     "line number": [
      76
     ]
    },
    "max": {
     "line number": [
      88,
      89,
      91,
      93
     ]
    },
    "min": {
     "line number": [
      88,
      89,
      92,
      94
     ]
    },
    "slice": {
     "line number": [
      88,
      89,
      91,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.mask.ApertureMask._to_image_partial_overlap": {
  "data": {
   "lineno": 98
  },
  "type": "function"
 },
 "photutils.aperture.mask.ApertureMask.cutout": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      183
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      208,
      209
     ]
    },
    "isinstance": {
     "line number": [
      208
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      181
     ]
    },
    "numpy.zeros": {
     "line number": [
      204
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.mask.ApertureMask.multiply": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "photutils.aperture.mask.ApertureMask.shape": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "property": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.mask.ApertureMask.to_image": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      132,
      141
     ]
    },
    "len": {
     "line number": [
      131
     ]
    },
    "numpy.zeros": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.mask.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "photutils.aperture.mask.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.mask.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.photometry": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.photometry.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.aperture.photometry.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "photutils.aperture.photometry.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "photutils.aperture.photometry.QTable": {
  "data": {
   "shadows": "astropy.table.QTable"
  },
  "type": "import"
 },
 "photutils.aperture.photometry.StdDevUncertainty": {
  "data": {
   "shadows": "astropy.nddata.StdDevUncertainty"
  },
  "type": "import"
 },
 "photutils.aperture.photometry.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.aperture.photometry.aperture_photometry": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      178,
      192
     ]
    },
    "_get_version_info": {
     "line number": [
      198
     ]
    },
    "_handle_units": {
     "line number": [
      164
     ]
    },
    "_prepare_photometry_data": {
     "line number": [
      167
     ]
    },
    "_validate_inputs": {
     "line number": [
      160
     ]
    },
    "astropy.nddata.NDData": {
     "line number": [
      133
     ]
    },
    "astropy.nddata.StdDevUncertainty": {
     "line number": [
      144
     ]
    },
    "astropy.table.QTable": {
     "line number": [
      202
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      151
     ]
    },
    "astropy.units.pixel": {
     "line number": [
      207
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      139
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      196
     ]
    },
    "enumerate": {
     "line number": [
      220
     ]
    },
    "int": {
     "line number": [
      205
     ]
    },
    "isinstance": {
     "line number": [
      133,
      144,
      170,
      176
     ]
    },
    "numpy.arange": {
     "line number": [
      205
     ]
    },
    "numpy.array_equal": {
     "line number": [
      191
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      204
     ]
    },
    "numpy.transpose": {
     "line number": [
      207
     ]
    },
    "photutils.aperture.photometry.warnings": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.photometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.photometry.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.photometry.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.rectangle.RectangularAnnulus": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "PixelPositions": {
     "line number": [
      347
     ]
    },
    "PositiveScalar": {
     "line number": [
      348,
      349,
      350,
      351
     ]
    },
    "Scalar": {
     "line number": [
      352
     ]
    },
    "photutils.aperture.rectangle.RectangularMaskMixin": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.RectangularAnnulus.__init__": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      356,
      367
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAnnulus._to_patch": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": {
    "matplotlib.patches.PathPatch": {
     "line number": [
      422
     ]
    },
    "matplotlib.patches.Rectangle": {
     "line number": [
      417,
      419
     ]
    },
    "numpy.pi": {
     "line number": [
      415
     ]
    },
    "zip": {
     "line number": [
      416
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAnnulus._xy_extents": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "property": {
     "line number": [
      372
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAnnulus.area": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": {
    "property": {
     "line number": [
      376
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAnnulus.to_sky": {
  "data": {
   "lineno": 429,
   "symbols_in_volume": {
    "photutils.aperture.rectangle.SkyRectangularAnnulus": {
     "line number": [
      448
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAperture": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "PixelPositions": {
     "line number": [
      199
     ]
    },
    "PositiveScalar": {
     "line number": [
      200,
      201
     ]
    },
    "Scalar": {
     "line number": [
      202
     ]
    },
    "photutils.aperture.rectangle.RectangularMaskMixin": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.RectangularAperture.__init__": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAperture._to_patch": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "matplotlib.patches.Rectangle": {
     "line number": [
      250
     ]
    },
    "numpy.pi": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAperture._xy_extents": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": {
    "property": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAperture.area": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": {
    "property": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAperture.to_sky": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "photutils.aperture.rectangle.SkyRectangularAperture": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularMaskMixin": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.RectangularMaskMixin._calc_extents": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      121,
      122,
      123,
      124
     ]
    },
    "max": {
     "line number": [
      125,
      126
     ]
    },
    "photutils.aperture.rectangle.math": {
     "line number": [
      119,
      120
     ]
    },
    "staticmethod": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularMaskMixin._lower_left_positions": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      146
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      146
     ]
    },
    "photutils.aperture.rectangle.math": {
     "line number": [
      141,
      142
     ]
    },
    "staticmethod": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularMaskMixin.to_mask": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "ApertureMask": {
     "line number": [
      104
     ]
    },
    "ValueError": {
     "line number": [
      87
     ]
    },
    "hasattr": {
     "line number": [
      79,
      82,
      98
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      90
     ]
    },
    "rectangular_overlap_grid": {
     "line number": [
      93,
      99
     ]
    },
    "zip": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.SkyRectangularAnnulus": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": {
    "AngleOrPixelScalarQuantity": {
     "line number": [
      582,
      583,
      584,
      585
     ]
    },
    "AngleScalarQuantity": {
     "line number": [
      586
     ]
    },
    "SkyCoordPositions": {
     "line number": [
      581
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.SkyRectangularAnnulus.__init__": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      591,
      594,
      597,
      608,
      611
     ]
    },
    "astropy.units.deg": {
     "line number": [
      589
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.SkyRectangularAnnulus.to_pixel": {
  "data": {
   "lineno": 616,
   "symbols_in_volume": {
    "photutils.aperture.rectangle.RectangularAnnulus": {
     "line number": [
      635
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.SkyRectangularAperture": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": {
    "AngleOrPixelScalarQuantity": {
     "line number": [
      491,
      492
     ]
    },
    "AngleScalarQuantity": {
     "line number": [
      493
     ]
    },
    "SkyCoordPositions": {
     "line number": [
      490
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.SkyRectangularAperture.__init__": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      497
     ]
    },
    "astropy.units.deg": {
     "line number": [
      495
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.SkyRectangularAperture.to_pixel": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": {
    "photutils.aperture.rectangle.RectangularAperture": {
     "line number": [
      524
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.aperture.rectangle.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.mpatches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.tests.test_aperture_common": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.tests.test_aperture_common.BaseTestAperture": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "photutils.aperture.tests.test_aperture_common.BaseTestApertureParams": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_common.BaseTestAperture.test_index": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "astropy.coordinates.SkyCoord": {
     "line number": [
      23
     ]
    },
    "astropy.tests.helper.assert_quantity_allclose": {
     "line number": [
      24,
      25
     ]
    },
    "getattr": {
     "line number": [
      30,
      31
     ]
    },
    "isinstance": {
     "line number": [
      20,
      23
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_common.BaseTestAperture.test_slice": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "astropy.coordinates.SkyCoord": {
     "line number": [
      39
     ]
    },
    "astropy.tests.helper.assert_quantity_allclose": {
     "line number": [
      40,
      41
     ]
    },
    "getattr": {
     "line number": [
      46,
      47
     ]
    },
    "isinstance": {
     "line number": [
      35,
      39
     ]
    },
    "len": {
     "line number": [
      36
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_common.BaseTestApertureParams": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "slice": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_common.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_common.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_common.assert_quantity_allclose": {
  "data": {
   "shadows": "astropy.tests.helper.assert_quantity_allclose"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_bounding_box": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      15
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.aperture.tests.test_bounding_box.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_bounding_box.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_bounding_box.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_bounding_box.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_as_artist": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      94
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      97,
      98,
      99
     ]
    },
    "photutils.aperture.tests.test_bounding_box.pytest": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_eq": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      61,
      62,
      63,
      64,
      65,
      66
     ]
    },
    "TypeError": {
     "line number": [
      68
     ]
    },
    "photutils.aperture.tests.test_bounding_box.pytest": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_extent": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      88
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      89
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_from_float": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      54,
      57
     ]
    },
    "BoundingBox.from_float": {
     "line number": [
      53,
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_init": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_init_minmax": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      29,
      31
     ]
    },
    "ValueError": {
     "line number": [
      28,
      30
     ]
    },
    "photutils.aperture.tests.test_bounding_box.pytest": {
     "line number": [
      28,
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_inputs": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      36,
      38,
      40,
      42,
      44,
      46,
      48
     ]
    },
    "TypeError": {
     "line number": [
      35,
      37,
      39,
      41,
      43,
      45,
      47
     ]
    },
    "photutils.aperture.tests.test_bounding_box.pytest": {
     "line number": [
      35,
      37,
      39,
      41,
      43,
      45,
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_intersect": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      136,
      137,
      138,
      148
     ]
    },
    "TypeError": {
     "line number": [
      145
     ]
    },
    "photutils.aperture.tests.test_bounding_box.pytest": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_plot": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      117
     ]
    },
    "photutils.aperture.tests.test_bounding_box.pytest": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_repr": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      73
     ]
    },
    "repr": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_shape": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_slices": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      83
     ]
    },
    "slice": {
     "line number": [
      84,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_to_aperture": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      104
     ]
    },
    "RectangularAperture": {
     "line number": [
      105
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      107
     ]
    },
    "photutils.aperture.tests.test_bounding_box.pytest": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_union": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      122,
      123,
      124
     ]
    },
    "TypeError": {
     "line number": [
      131
     ]
    },
    "photutils.aperture.tests.test_bounding_box.pytest": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_circle": {
  "data": {
   "symbols_in_volume": {
    "astropy.coordinates.SkyCoord": {
     "line number": [
      17
     ]
    },
    "astropy.units.arcsec": {
     "line number": [
      18
     ]
    },
    "numpy.transpose": {
     "line number": [
      16
     ]
    },
    "photutils.aperture.tests.test_circle.POSITIONS": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.aperture.tests.test_circle.POSITIONS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_circle.SKYCOORD": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_circle.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_circle.TestCircularAnnulus": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "CircularAnnulus": {
     "line number": [
      26
     ]
    },
    "photutils.aperture.tests.test_circle.POSITIONS": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_circle.TestCircularAperture": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      22
     ]
    },
    "photutils.aperture.tests.test_circle.POSITIONS": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_circle.TestSkyCircularAnnulus": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "SkyCircularAnnulus": {
     "line number": [
      34
     ]
    },
    "photutils.aperture.tests.test_circle.SKYCOORD": {
     "line number": [
      34
     ]
    },
    "photutils.aperture.tests.test_circle.UNIT": {
     "line number": [
      34,
      34
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_circle.TestSkyCircularAperture": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "SkyCircularAperture": {
     "line number": [
      30
     ]
    },
    "photutils.aperture.tests.test_circle.SKYCOORD": {
     "line number": [
      30
     ]
    },
    "photutils.aperture.tests.test_circle.UNIT": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_circle.UNIT": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_circle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_circle.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_ellipse": {
  "data": {
   "symbols_in_volume": {
    "astropy.coordinates.SkyCoord": {
     "line number": [
      17
     ]
    },
    "astropy.units.arcsec": {
     "line number": [
      18
     ]
    },
    "numpy.transpose": {
     "line number": [
      16
     ]
    },
    "photutils.aperture.tests.test_ellipse.POSITIONS": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.aperture.tests.test_ellipse.POSITIONS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_ellipse.SKYCOORD": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_ellipse.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_ellipse.TestEllipticalAnnulus": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "EllipticalAnnulus": {
     "line number": [
      26
     ]
    },
    "numpy.pi": {
     "line number": [
      27
     ]
    },
    "photutils.aperture.tests.test_ellipse.POSITIONS": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_ellipse.TestEllipticalAperture": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "EllipticalAperture": {
     "line number": [
      22
     ]
    },
    "numpy.pi": {
     "line number": [
      22
     ]
    },
    "photutils.aperture.tests.test_ellipse.POSITIONS": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_ellipse.TestSkyEllipticalAnnulus": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "SkyEllipticalAnnulus": {
     "line number": [
      36
     ]
    },
    "astropy.units.deg": {
     "line number": [
      37
     ]
    },
    "photutils.aperture.tests.test_ellipse.SKYCOORD": {
     "line number": [
      36
     ]
    },
    "photutils.aperture.tests.test_ellipse.UNIT": {
     "line number": [
      36,
      36,
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_ellipse.TestSkyEllipticalAperture": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "SkyEllipticalAperture": {
     "line number": [
      31
     ]
    },
    "astropy.units.deg": {
     "line number": [
      32
     ]
    },
    "photutils.aperture.tests.test_ellipse.SKYCOORD": {
     "line number": [
      31
     ]
    },
    "photutils.aperture.tests.test_ellipse.UNIT": {
     "line number": [
      31,
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_ellipse.UNIT": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_ellipse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_ellipse.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_mask": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.aperture.tests.test_mask.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_mask.POSITIONS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_mask.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_mask.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_mask.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_mask.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_mask.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_mask.test_mask_array": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": {
    "ApertureMask": {
     "line number": [
      35
     ]
    },
    "BoundingBox": {
     "line number": [
      34
     ]
    },
    "numpy.array": {
     "line number": [
      36
     ]
    },
    "numpy.ones": {
     "line number": [
      33
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask.test_mask_cutout_copy": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      57
     ]
    },
    "numpy.ones": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask.test_mask_cutout_copy_quantity": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      66
     ]
    },
    "astropy.units.adu": {
     "line number": [
      65,
      71
     ]
    },
    "numpy.ones": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask.test_mask_cutout_no_overlap": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      78
     ]
    },
    "numpy.ones": {
     "line number": [
      77
     ]
    },
    "photutils.aperture.tests.test_mask.POSITIONS": {
     "line number": [
      75
     ]
    },
    "photutils.aperture.tests.test_mask.pytest": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask.test_mask_cutout_partial_overlap": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      94
     ]
    },
    "numpy.ones": {
     "line number": [
      93
     ]
    },
    "photutils.aperture.tests.test_mask.POSITIONS": {
     "line number": [
      91
     ]
    },
    "photutils.aperture.tests.test_mask.pytest": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask.test_mask_cutout_shape": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "ApertureMask": {
     "line number": [
      43
     ]
    },
    "BoundingBox": {
     "line number": [
      42
     ]
    },
    "ValueError": {
     "line number": [
      45,
      48,
      51
     ]
    },
    "numpy.arange": {
     "line number": [
      46
     ]
    },
    "numpy.ones": {
     "line number": [
      41
     ]
    },
    "photutils.aperture.tests.test_mask.pytest": {
     "line number": [
      45,
      48,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask.test_mask_input_shapes": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "ApertureMask": {
     "line number": [
      29
     ]
    },
    "BoundingBox": {
     "line number": [
      28
     ]
    },
    "ValueError": {
     "line number": [
      26
     ]
    },
    "numpy.ones": {
     "line number": [
      27
     ]
    },
    "photutils.aperture.tests.test_mask.pytest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask.test_mask_multiply": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      110
     ]
    },
    "numpy.ones": {
     "line number": [
      109
     ]
    },
    "numpy.pi": {
     "line number": [
      113
     ]
    },
    "numpy.sum": {
     "line number": [
      113
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask.test_mask_multiply_quantity": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      123
     ]
    },
    "astropy.units.adu": {
     "line number": [
      122,
      127,
      131
     ]
    },
    "numpy.ones": {
     "line number": [
      122
     ]
    },
    "numpy.pi": {
     "line number": [
      128
     ]
    },
    "numpy.sum": {
     "line number": [
      128
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_photometry": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      31
     ]
    },
    "list": {
     "line number": [
      41
     ]
    },
    "numpy.pi": {
     "line number": [
      45,
      46
     ]
    },
    "photutils.aperture.tests.test_photometry.APERTURE_CL": {
     "line number": [
      41
     ]
    },
    "zip": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.aperture.tests.test_photometry.APERTURE_CL": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_photometry.BaseTestAperturePhotometry": {
  "data": {
   "lineno": 103
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_photometry.BaseTestAperturePhotometry.test_array_error": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": {
    "aperture_photometry": {
     "line number": [
      116,
      119,
      123
     ]
    },
    "float": {
     "line number": [
      107
     ]
    },
    "hasattr": {
     "line number": [
      108
     ]
    },
    "isinstance": {
     "line number": [
      127,
      134
     ]
    },
    "numpy.all": {
     "line number": [
      132,
      139
     ]
    },
    "numpy.ones": {
     "line number": [
      107
     ]
    },
    "numpy.sqrt": {
     "line number": [
      110,
      114
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      129,
      130,
      136,
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.BaseTestDifferentData": {
  "data": {
   "lineno": 261
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_photometry.BaseTestDifferentData.test_basic_circular_aperture_photometry": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      264
     ]
    },
    "aperture_photometry": {
     "line number": [
      265
     ]
    },
    "numpy.all": {
     "line number": [
      271,
      273
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      268
     ]
    },
    "numpy.transpose": {
     "line number": [
      272,
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_photometry.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_photometry.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_photometry.StdDevUncertainty": {
  "data": {
   "shadows": "astropy.nddata.StdDevUncertainty"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_photometry.TEST_APERTURES": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_photometry.TEST_ELLIPSE_EXACT_APERTURES": {
  "data": {
   "lineno": 501
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_photometry.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_photometry.TestCircular": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "photutils.aperture.tests.test_photometry.BaseTestAperturePhotometry": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_photometry.TestCircular.setup_class": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      148
     ]
    },
    "float": {
     "line number": [
      145
     ]
    },
    "numpy.ones": {
     "line number": [
      145
     ]
    },
    "numpy.pi": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.TestCircularAnnulus": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "photutils.aperture.tests.test_photometry.BaseTestAperturePhotometry": {
     "line number": [
      165
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_photometry.TestCircularAnnulus.setup_class": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "CircularAnnulus": {
     "line number": [
      172
     ]
    },
    "float": {
     "line number": [
      168
     ]
    },
    "numpy.ones": {
     "line number": [
      168
     ]
    },
    "numpy.pi": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.TestCircularAnnulusArray": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "photutils.aperture.tests.test_photometry.BaseTestAperturePhotometry": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_photometry.TestCircularAnnulusArray.setup_class": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "CircularAnnulus": {
     "line number": [
      184
     ]
    },
    "float": {
     "line number": [
      180
     ]
    },
    "numpy.array": {
     "line number": [
      186
     ]
    },
    "numpy.ones": {
     "line number": [
      180
     ]
    },
    "numpy.pi": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.TestCircularArray": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "photutils.aperture.tests.test_photometry.BaseTestAperturePhotometry": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_photometry.TestCircularArray.setup_class": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      159
     ]
    },
    "float": {
     "line number": [
      156
     ]
    },
    "numpy.array": {
     "line number": [
      161
     ]
    },
    "numpy.ones": {
     "line number": [
      156
     ]
    },
    "numpy.pi": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.TestElliptical": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": {
    "photutils.aperture.tests.test_photometry.BaseTestAperturePhotometry": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_photometry.TestElliptical.setup_class": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "EllipticalAperture": {
     "line number": [
      198
     ]
    },
    "float": {
     "line number": [
      193
     ]
    },
    "numpy.ones": {
     "line number": [
      193
     ]
    },
    "numpy.pi": {
     "line number": [
      197,
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.TestEllipticalAnnulus": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "photutils.aperture.tests.test_photometry.BaseTestAperturePhotometry": {
     "line number": [
      203
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_photometry.TestEllipticalAnnulus.setup_class": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "EllipticalAnnulus": {
     "line number": [
      212
     ]
    },
    "float": {
     "line number": [
      206
     ]
    },
    "numpy.ones": {
     "line number": [
      206
     ]
    },
    "numpy.pi": {
     "line number": [
      211,
      214,
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.TestInputNDData": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": {
    "photutils.aperture.tests.test_photometry.BaseTestDifferentData": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_photometry.TestInputNDData.setup_class": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "astropy.nddata.NDData": {
     "line number": [
      281
     ]
    },
    "astropy.units.adu": {
     "line number": [
      281,
      285
     ]
    },
    "float": {
     "line number": [
      280
     ]
    },
    "numpy.ones": {
     "line number": [
      280
     ]
    },
    "numpy.pi": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.TestMaskedSkipCircular": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "photutils.aperture.tests.test_photometry.BaseTestAperturePhotometry": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_photometry.TestMaskedSkipCircular.setup_class": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      256
     ]
    },
    "bool": {
     "line number": [
      252
     ]
    },
    "float": {
     "line number": [
      251
     ]
    },
    "numpy.ones": {
     "line number": [
      251
     ]
    },
    "numpy.pi": {
     "line number": [
      257
     ]
    },
    "numpy.zeros": {
     "line number": [
      252
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.TestRectangularAnnulus": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "photutils.aperture.tests.test_photometry.BaseTestAperturePhotometry": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_photometry.TestRectangularAnnulus.setup_class": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": {
    "RectangularAnnulus": {
     "line number": [
      242
     ]
    },
    "float": {
     "line number": [
      235
     ]
    },
    "numpy.ones": {
     "line number": [
      235
     ]
    },
    "numpy.pi": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.TestRectangularAperture": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "photutils.aperture.tests.test_photometry.BaseTestAperturePhotometry": {
     "line number": [
      219
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_photometry.TestRectangularAperture.setup_class": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": {
    "RectangularAperture": {
     "line number": [
      227
     ]
    },
    "float": {
     "line number": [
      222
     ]
    },
    "numpy.ones": {
     "line number": [
      222
     ]
    },
    "numpy.pi": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_photometry.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_photometry.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_photometry.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_photometry.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_photometry.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_photometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_photometry.pixel_to_skycoord": {
  "data": {
   "shadows": "astropy.wcs.utils.pixel_to_skycoord"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_photometry.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_photometry.test_aperture_partial_overlap": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      542
     ]
    },
    "aperture_photometry": {
     "line number": [
      543,
      548
     ]
    },
    "astropy.units.MJy": {
     "line number": [
      547
     ]
    },
    "astropy.units.sr": {
     "line number": [
      547
     ]
    },
    "numpy.ones": {
     "line number": [
      538,
      539
     ]
    },
    "numpy.pi": {
     "line number": [
      544,
      545,
      549,
      550,
      551
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      544,
      549
     ]
    },
    "numpy.testing.assert_array_less": {
     "line number": [
      545,
      550,
      551
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_aperture_photometry_inputs_with_mask": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      486
     ]
    },
    "aperture_photometry": {
     "line number": [
      493,
      497
     ]
    },
    "bool": {
     "line number": [
      487
     ]
    },
    "numpy.ones": {
     "line number": [
      485
     ]
    },
    "numpy.sqrt": {
     "line number": [
      490
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      496,
      498
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      494,
      495
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      487
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_aperture_photometry_with_error_units": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      471
     ]
    },
    "aperture_photometry": {
     "line number": [
      471
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      465,
      466
     ]
    },
    "astropy.units.adu": {
     "line number": [
      465,
      466,
      469
     ]
    },
    "float": {
     "line number": [
      464
     ]
    },
    "numpy.ones": {
     "line number": [
      464
     ]
    },
    "numpy.pi": {
     "line number": [
      468
     ]
    },
    "numpy.sqrt": {
     "line number": [
      474
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      473,
      474
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_aperture_pixel_positions": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      93,
      94,
      95,
      96
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      89,
      90
     ]
    },
    "astropy.units.pixel": {
     "line number": [
      89,
      90
     ]
    },
    "numpy.array_equal": {
     "line number": [
      98
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      99,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_aperture_plots": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "aperture_class": {
     "line number": [
      82
     ]
    },
    "photutils.aperture.tests.test_photometry.TEST_APERTURES": {
     "line number": [
      77
     ]
    },
    "photutils.aperture.tests.test_photometry.pytest": {
     "line number": [
      76,
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_basic_circular_aperture_photometry_unit": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      453,
      454
     ]
    },
    "aperture_photometry": {
     "line number": [
      453,
      454
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      446
     ]
    },
    "astropy.units.adu": {
     "line number": [
      446,
      451
     ]
    },
    "float": {
     "line number": [
      445
     ]
    },
    "numpy.ones": {
     "line number": [
      445
     ]
    },
    "numpy.pi": {
     "line number": [
      450
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      456,
      457
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_ellipse_exact_grid": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": {
    "EllipticalAperture": {
     "line number": [
      516
     ]
    },
    "aperture_photometry": {
     "line number": [
      517
     ]
    },
    "numpy.ones": {
     "line number": [
      514
     ]
    },
    "numpy.pi": {
     "line number": [
      518
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      519
     ]
    },
    "photutils.aperture.tests.test_photometry.TEST_ELLIPSE_EXACT_APERTURES": {
     "line number": [
      505
     ]
    },
    "photutils.aperture.tests.test_photometry.pytest": {
     "line number": [
      505
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_elliptical_bbox": {
  "data": {
   "lineno": 685,
   "symbols_in_volume": {
    "EllipticalAperture": {
     "line number": [
      689,
      692,
      695,
      701,
      704,
      707
     ]
    },
    "numpy.pi": {
     "line number": [
      695,
      707
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_inside_array_simple": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "aperture_class": {
     "line number": [
      61
     ]
    },
    "aperture_photometry": {
     "line number": [
      62,
      64,
      66
     ]
    },
    "float": {
     "line number": [
      60
     ]
    },
    "isinstance": {
     "line number": [
      70
     ]
    },
    "numpy.ones": {
     "line number": [
      60
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      71,
      72
     ]
    },
    "photutils.aperture.tests.test_photometry.TEST_APERTURES": {
     "line number": [
      58
     ]
    },
    "photutils.aperture.tests.test_photometry.pytest": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_nan_in_bbox": {
  "data": {
   "lineno": 803,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      818,
      819
     ]
    },
    "aperture_photometry": {
     "line number": [
      821,
      822,
      826,
      827
     ]
    },
    "numpy.inf": {
     "line number": [
      812,
      813,
      815
     ]
    },
    "numpy.nan": {
     "line number": [
      811,
      814
     ]
    },
    "numpy.ones": {
     "line number": [
      809
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      823,
      824,
      828,
      829
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_nan_inf_mask": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      531
     ]
    },
    "aperture_photometry": {
     "line number": [
      532
     ]
    },
    "bool": {
     "line number": [
      527
     ]
    },
    "numpy.inf": {
     "line number": [
      522
     ]
    },
    "numpy.nan": {
     "line number": [
      522
     ]
    },
    "numpy.ones": {
     "line number": [
      526
     ]
    },
    "numpy.pi": {
     "line number": [
      533
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      534
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      527
     ]
    },
    "photutils.aperture.tests.test_photometry.pytest": {
     "line number": [
      522
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_nddata_input": {
  "data": {
   "lineno": 852,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      861
     ]
    },
    "SkyCircularAperture": {
     "line number": [
      865
     ]
    },
    "aperture_photometry": {
     "line number": [
      867,
      873
     ]
    },
    "astropy.nddata.NDData": {
     "line number": [
      871
     ]
    },
    "astropy.nddata.StdDevUncertainty": {
     "line number": [
      870
     ]
    },
    "astropy.units.adu": {
     "line number": [
      867,
      867
     ]
    },
    "astropy.units.arcsec": {
     "line number": [
      865
     ]
    },
    "astropy.wcs.utils.pixel_to_skycoord": {
     "line number": [
      863
     ]
    },
    "bool": {
     "line number": [
      855
     ]
    },
    "make_wcs": {
     "line number": [
      858
     ]
    },
    "numpy.arange": {
     "line number": [
      853
     ]
    },
    "numpy.sqrt": {
     "line number": [
      854
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      878
     ]
    },
    "numpy.zeros": {
     "line number": [
      855
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_outside_array": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "aperture_class": {
     "line number": [
      52
     ]
    },
    "aperture_photometry": {
     "line number": [
      53
     ]
    },
    "float": {
     "line number": [
      51
     ]
    },
    "numpy.isnan": {
     "line number": [
      55
     ]
    },
    "numpy.ones": {
     "line number": [
      51
     ]
    },
    "photutils.aperture.tests.test_photometry.TEST_APERTURES": {
     "line number": [
      49
     ]
    },
    "photutils.aperture.tests.test_photometry.pytest": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_pixel_aperture_repr": {
  "data": {
   "lineno": 556,
   "symbols_in_volume": {
    "CircularAnnulus": {
     "line number": [
      561
     ]
    },
    "CircularAperture": {
     "line number": [
      557
     ]
    },
    "EllipticalAnnulus": {
     "line number": [
      569
     ]
    },
    "EllipticalAperture": {
     "line number": [
      565
     ]
    },
    "RectangularAnnulus": {
     "line number": [
      578
     ]
    },
    "RectangularAperture": {
     "line number": [
      574
     ]
    },
    "repr": {
     "line number": [
      558,
      562,
      566,
      571,
      575,
      580
     ]
    },
    "str": {
     "line number": [
      559,
      563,
      567,
      572,
      576,
      581
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_position_units": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      766
     ]
    },
    "astropy.units.pix": {
     "line number": [
      764
     ]
    },
    "numpy.array": {
     "line number": [
      767
     ]
    },
    "numpy.sqrt": {
     "line number": [
      765
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      767
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_radius_units": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": {
    "SkyCircularAperture": {
     "line number": [
      775
     ]
    },
    "astropy.coordinates.SkyCoord": {
     "line number": [
      772
     ]
    },
    "astropy.units.pix": {
     "line number": [
      773,
      777
     ]
    },
    "numpy.sqrt": {
     "line number": [
      774
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_rectangular_bbox": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": {
    "RectangularAperture": {
     "line number": [
      662,
      665,
      668,
      674,
      677,
      680
     ]
    },
    "numpy.pi": {
     "line number": [
      668,
      681
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_scalar_aperture": {
  "data": {
   "lineno": 780,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      788
     ]
    },
    "aperture_photometry": {
     "line number": [
      789,
      793,
      797
     ]
    },
    "float": {
     "line number": [
      786
     ]
    },
    "numpy.ones": {
     "line number": [
      786
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_scalar_skycoord": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      843
     ]
    },
    "SkyCircularAperture": {
     "line number": [
      847
     ]
    },
    "aperture_photometry": {
     "line number": [
      848
     ]
    },
    "astropy.coordinates.SkyCoord": {
     "line number": [
      849
     ]
    },
    "astropy.units.arcsec": {
     "line number": [
      847
     ]
    },
    "astropy.wcs.utils.pixel_to_skycoord": {
     "line number": [
      845
     ]
    },
    "isinstance": {
     "line number": [
      849
     ]
    },
    "make_4gaussians_image": {
     "line number": [
      838
     ]
    },
    "make_wcs": {
     "line number": [
      839
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_sky_aperture_repr": {
  "data": {
   "lineno": 584,
   "symbols_in_volume": {
    "SkyCircularAnnulus": {
     "line number": [
      597
     ]
    },
    "SkyCircularAperture": {
     "line number": [
      587
     ]
    },
    "SkyEllipticalAnnulus": {
     "line number": [
      618
     ]
    },
    "SkyEllipticalAperture": {
     "line number": [
      607
     ]
    },
    "SkyRectangularAnnulus": {
     "line number": [
      643
     ]
    },
    "SkyRectangularAperture": {
     "line number": [
      632
     ]
    },
    "astropy.coordinates.SkyCoord": {
     "line number": [
      585
     ]
    },
    "astropy.units.deg": {
     "line number": [
      607,
      619,
      632,
      644
     ]
    },
    "astropy.units.pix": {
     "line number": [
      587,
      597,
      597,
      607,
      607,
      618,
      618,
      618,
      632,
      632,
      643,
      643,
      644
     ]
    },
    "repr": {
     "line number": [
      594,
      604,
      615,
      629,
      640,
      654
     ]
    },
    "str": {
     "line number": [
      595,
      605,
      616,
      630,
      641,
      655
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_to_sky_pixel": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": {
    "CircularAnnulus": {
     "line number": [
      720
     ]
    },
    "CircularAperture": {
     "line number": [
      715
     ]
    },
    "EllipticalAnnulus": {
     "line number": [
      735
     ]
    },
    "EllipticalAperture": {
     "line number": [
      727
     ]
    },
    "RectangularAnnulus": {
     "line number": [
      752
     ]
    },
    "RectangularAperture": {
     "line number": [
      744
     ]
    },
    "make_4gaussians_image": {
     "line number": [
      712
     ]
    },
    "make_wcs": {
     "line number": [
      713
     ]
    },
    "numpy.pi": {
     "line number": [
      728,
      736,
      745,
      753
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      717,
      718,
      723,
      724,
      725,
      730,
      731,
      732,
      733,
      738,
      739,
      740,
      741,
      742,
      747,
      748,
      749,
      750,
      755,
      756,
      757,
      758,
      759
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_wcs_based_photometry": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      340
     ]
    },
    "SkyCircularAnnulus": {
     "line number": [
      358,
      361
     ]
    },
    "SkyCircularAperture": {
     "line number": [
      348,
      350,
      352
     ]
    },
    "SkyEllipticalAnnulus": {
     "line number": [
      384,
      388
     ]
    },
    "SkyEllipticalAperture": {
     "line number": [
      372,
      376,
      380
     ]
    },
    "SkyRectangularAnnulus": {
     "line number": [
      421,
      425
     ]
    },
    "SkyRectangularAperture": {
     "line number": [
      406,
      411,
      416
     ]
    },
    "aperture_photometry": {
     "line number": [
      347,
      349,
      351,
      357,
      360,
      371,
      375,
      379,
      383,
      387,
      405,
      410,
      415,
      420,
      424
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      334
     ]
    },
    "astropy.units.arcsec": {
     "line number": [
      348,
      350,
      352,
      358,
      358,
      361,
      361,
      372,
      373,
      373,
      376,
      377,
      377,
      380,
      381,
      381,
      384,
      384,
      385,
      385,
      388,
      388,
      389,
      389,
      407,
      407,
      408,
      412,
      412,
      413,
      417,
      417,
      418,
      421,
      421,
      422,
      422,
      425,
      426,
      426,
      427
     ]
    },
    "astropy.units.pixel": {
     "line number": [
      335
     ]
    },
    "astropy.wcs.utils.pixel_to_skycoord": {
     "line number": [
      342
     ]
    },
    "make_4gaussians_image": {
     "line number": [
      330
     ]
    },
    "make_wcs": {
     "line number": [
      331
     ]
    },
    "numpy.all": {
     "line number": [
      433
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      354,
      364,
      367,
      392,
      395,
      398,
      401,
      430,
      436,
      439
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.test_wcs_based_photometry_to_catalogue": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": {
    "SkyCircularAperture": {
     "line number": [
      302,
      305
     ]
    },
    "aperture_photometry": {
     "line number": [
      301,
      304
     ]
    },
    "astropy.coordinates.SkyCoord": {
     "line number": [
      299
     ]
    },
    "astropy.io.fits.open": {
     "line number": [
      292
     ]
    },
    "astropy.table.Table.read": {
     "line number": [
      297
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      293
     ]
    },
    "astropy.units.arcsec": {
     "line number": [
      302,
      312
     ]
    },
    "astropy.units.mJy": {
     "line number": [
      314
     ]
    },
    "astropy.units.pixel": {
     "line number": [
      305,
      312,
      314
     ]
    },
    "astropy.wcs.WCS": {
     "line number": [
      294
     ]
    },
    "get_path": {
     "line number": [
      290,
      291
     ]
    },
    "numpy.fabs": {
     "line number": [
      322
     ]
    },
    "numpy.mean": {
     "line number": [
      322
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      308,
      320
     ]
    },
    "photutils.aperture.tests.test_photometry.pytest": {
     "line number": [
      288
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_photometry.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_rectangle": {
  "data": {
   "symbols_in_volume": {
    "astropy.coordinates.SkyCoord": {
     "line number": [
      18
     ]
    },
    "astropy.units.arcsec": {
     "line number": [
      19
     ]
    },
    "numpy.transpose": {
     "line number": [
      17
     ]
    },
    "photutils.aperture.tests.test_rectangle.POSITIONS": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.aperture.tests.test_rectangle.POSITIONS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_rectangle.SKYCOORD": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_rectangle.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_rectangle.TestRectangularAnnulus": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "RectangularAnnulus": {
     "line number": [
      27
     ]
    },
    "numpy.pi": {
     "line number": [
      28
     ]
    },
    "photutils.aperture.tests.test_rectangle.POSITIONS": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_rectangle.TestRectangularAperture": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "RectangularAperture": {
     "line number": [
      23
     ]
    },
    "numpy.pi": {
     "line number": [
      23
     ]
    },
    "photutils.aperture.tests.test_rectangle.POSITIONS": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_rectangle.TestSkyRectangularAnnulus": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "SkyRectangularAnnulus": {
     "line number": [
      37
     ]
    },
    "astropy.units.deg": {
     "line number": [
      38
     ]
    },
    "photutils.aperture.tests.test_rectangle.SKYCOORD": {
     "line number": [
      37
     ]
    },
    "photutils.aperture.tests.test_rectangle.UNIT": {
     "line number": [
      37,
      37,
      38
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_rectangle.TestSkyRectangularAperture": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "SkyRectangularAperture": {
     "line number": [
      32
     ]
    },
    "astropy.units.deg": {
     "line number": [
      33
     ]
    },
    "photutils.aperture.tests.test_rectangle.SKYCOORD": {
     "line number": [
      32
     ]
    },
    "photutils.aperture.tests.test_rectangle.UNIT": {
     "line number": [
      32,
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_rectangle.UNIT": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_rectangle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_rectangle.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.background": {
  "data": {},
  "type": "module"
 },
 "photutils.background.background_2d": {
  "data": {
   "symbols_in_volume": {
    "astropy.stats.SigmaClip": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.background.background_2d.Background2D": {
  "data": {
   "lineno": 166
  },
  "type": "class"
 },
 "photutils.background.background_2d.Background2D.__init__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "SExtractorBackground": {
     "line number": [
      306
     ]
    },
    "StdBackgroundRMS": {
     "line number": [
      307
     ]
    },
    "ValueError": {
     "line number": [
      322,
      326,
      330
     ]
    },
    "len": {
     "line number": [
      313,
      341
     ]
    },
    "min": {
     "line number": [
      315,
      316
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      310,
      320,
      324
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      312,
      340
     ]
    },
    "numpy.repeat": {
     "line number": [
      314,
      342
     ]
    },
    "photutils.background.background_2d.BkgZoomInterpolator": {
     "line number": [
      308
     ]
    },
    "photutils.background.background_2d.SIGMA_CLIP": {
     "line number": [
      305
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._calc_bkg_bkgrms": {
  "data": {
   "lineno": 676,
   "symbols_in_volume": {
    "len": {
     "line number": [
      713
     ]
    },
    "numpy.array_equal": {
     "line number": [
      726
     ]
    },
    "numpy.unravel_index": {
     "line number": [
      702
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._calc_coordinates": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": {
    "itertools.product": {
     "line number": [
      749
     ]
    },
    "list": {
     "line number": [
      749
     ]
    },
    "numpy.array": {
     "line number": [
      749
     ]
    },
    "numpy.column_stack": {
     "line number": [
      745
     ]
    },
    "range": {
     "line number": [
      749,
      749
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._combine_masks": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "numpy.logical_or": {
     "line number": [
      369
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._crop_data": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": {
    "numpy.lib.index_tricks.index_exp": {
     "line number": [
      434
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      440
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._filter_meshes": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": {
    "numpy.nan": {
     "line number": [
      664,
      667
     ]
    },
    "numpy.nanmedian": {
     "line number": [
      663,
      666
     ]
    },
    "numpy.nonzero": {
     "line number": [
      670
     ]
    },
    "scipy.ndimage.generic_filter": {
     "line number": [
      662,
      665
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._interpolate_meshes": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": {
    "ShepardIDWInterpolator": {
     "line number": [
      611
     ]
    },
    "interp_func": {
     "line number": [
      611,
      612
     ]
    },
    "itertools.product": {
     "line number": [
      609
     ]
    },
    "list": {
     "line number": [
      609
     ]
    },
    "numpy.array": {
     "line number": [
      609
     ]
    },
    "numpy.column_stack": {
     "line number": [
      608
     ]
    },
    "range": {
     "line number": [
      609,
      610
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._make_2d_array": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      550,
      553
     ]
    },
    "bool": {
     "line number": [
      563
     ]
    },
    "len": {
     "line number": [
      558
     ]
    },
    "numpy.ma.is_masked": {
     "line number": [
      552
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      566
     ]
    },
    "numpy.ones": {
     "line number": [
      563
     ]
    },
    "numpy.zeros": {
     "line number": [
      555
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._pad_data": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      403
     ]
    },
    "numpy.logical_or": {
     "line number": [
      413
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      417
     ]
    },
    "numpy.pad": {
     "line number": [
      399,
      411
     ]
    },
    "numpy.zeros": {
     "line number": [
      403
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._prepare_data": {
  "data": {
   "lineno": 485,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      516
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      506
     ]
    },
    "numpy.ma.swapaxes": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._select_meshes": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      477
     ]
    },
    "numpy.ma.count_masked": {
     "line number": [
      464
     ]
    },
    "numpy.where": {
     "line number": [
      473
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._selective_filter": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": {
    "max": {
     "line number": [
      644,
      646
     ]
    },
    "min": {
     "line number": [
      645,
      647
     ]
    },
    "numpy.copy": {
     "line number": [
      640
     ]
    },
    "numpy.median": {
     "line number": [
      648
     ]
    },
    "zip": {
     "line number": [
      641
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      810
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_median": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      788
     ]
    },
    "numpy.median": {
     "line number": [
      797
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_mesh_ma": {
  "data": {
   "lineno": 762,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      762
     ]
    },
    "len": {
     "line number": [
      770
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_rms": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      818
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_rms_median": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      799
     ]
    },
    "numpy.median": {
     "line number": [
      808
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_rms_mesh_ma": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      775
     ]
    },
    "len": {
     "line number": [
      783
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.mesh_nmasked": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      751
     ]
    },
    "numpy.ma.count_masked": {
     "line number": [
      760
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.plot_meshes": {
  "data": {
   "lineno": 826,
   "symbols_in_volume": {
    "RectangularAperture": {
     "line number": [
      865
     ]
    },
    "matplotlib.pyplot.gca": {
     "line number": [
      860
     ]
    },
    "numpy.column_stack": {
     "line number": [
      864
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.BkgIDWInterpolator": {
  "data": {
   "lineno": 100
  },
  "type": "class"
 },
 "photutils.background.background_2d.BkgIDWInterpolator.__call__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "ShepardIDWInterpolator": {
     "line number": [
      157
     ]
    },
    "interp_func": {
     "line number": [
      159
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      152
     ]
    },
    "numpy.min": {
     "line number": [
      154
     ]
    },
    "numpy.ptp": {
     "line number": [
      153
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.BkgIDWInterpolator.__init__": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "photutils.background.background_2d.BkgZoomInterpolator": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "photutils.background.background_2d.BkgZoomInterpolator.__call__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "float": {
     "line number": [
      93,
      94
     ]
    },
    "int": {
     "line number": [
      82,
      84
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      72
     ]
    },
    "numpy.min": {
     "line number": [
      74
     ]
    },
    "numpy.ptp": {
     "line number": [
      73
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      74
     ]
    },
    "scipy.ndimage.zoom": {
     "line number": [
      86,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.background_2d.BkgZoomInterpolator.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "photutils.background.background_2d.SIGMA_CLIP": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.background.background_2d.SigmaClip": {
  "data": {
   "shadows": "astropy.stats.SigmaClip"
  },
  "type": "import"
 },
 "photutils.background.background_2d.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.background.background_2d.__doctest_requires__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.background.background_2d.generic_filter": {
  "data": {
   "shadows": "scipy.ndimage.generic_filter"
  },
  "type": "import"
 },
 "photutils.background.background_2d.index_exp": {
  "data": {
   "shadows": "numpy.lib.index_tricks.index_exp"
  },
  "type": "import"
 },
 "photutils.background.background_2d.lazyproperty": {
  "data": {
   "shadows": "astropy.utils.lazyproperty"
  },
  "type": "import"
 },
 "photutils.background.background_2d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.background.background_2d.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "photutils.background.background_2d.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "photutils.background.background_2d.zoom": {
  "data": {
   "shadows": "scipy.ndimage.zoom"
  },
  "type": "import"
 },
 "photutils.background.core": {
  "data": {
   "symbols_in_volume": {
    "astropy.stats.SigmaClip": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.background.core.BackgroundBase": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "photutils.background.core.abc": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.background.core.BackgroundBase.__call__": {
  "data": {
   "lineno": 71
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundBase.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "photutils.background.core.SIGMA_CLIP": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundBase.calc_background": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      95
     ]
    },
    "photutils.background.core.abc": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundRMSBase": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "photutils.background.core.abc": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.background.core.BackgroundRMSBase.__call__": {
  "data": {
   "lineno": 114
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundRMSBase.__init__": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "photutils.background.core.SIGMA_CLIP": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundRMSBase.calc_background_rms": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      138
     ]
    },
    "photutils.background.core.abc": {
     "line number": [
      117
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.BiweightLocationBackground": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "photutils.background.core.BackgroundBase": {
     "line number": [
      390
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.background.core.BiweightLocationBackground.__init__": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "super": {
     "line number": [
      433
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.BiweightLocationBackground.calc_background": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": {
    "astropy.stats.biweight_location": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.BiweightScaleBackgroundRMS": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "photutils.background.core.BackgroundRMSBase": {
     "line number": [
      541
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.background.core.BiweightScaleBackgroundRMS.__init__": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": {
    "super": {
     "line number": [
      584
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.BiweightScaleBackgroundRMS.calc_background_rms": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": {
    "astropy.stats.biweight_scale": {
     "line number": [
      592
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.MADStdBackgroundRMS": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "photutils.background.core.BackgroundRMSBase": {
     "line number": [
      487
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.background.core.MADStdBackgroundRMS.calc_background_rms": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "astropy.stats.mad_std": {
     "line number": [
      538
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.MMMBackground": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "photutils.background.core.ModeEstimatorBackground": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.background.core.MMMBackground.__init__": {
  "data": {
   "lineno": 320,
   "symbols_in_volume": {
    "super": {
     "line number": [
      323
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.MeanBackground": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "photutils.background.core.BackgroundBase": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.background.core.MeanBackground.calc_background": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "numpy.ma.mean": {
     "line number": [
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.MedianBackground": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "photutils.background.core.BackgroundBase": {
     "line number": [
      184
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.background.core.MedianBackground.calc_background": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "photutils.background.core._masked_median": {
     "line number": [
      224
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.ModeEstimatorBackground": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "photutils.background.core.BackgroundBase": {
     "line number": [
      227
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.background.core.ModeEstimatorBackground.__init__": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "super": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.ModeEstimatorBackground.calc_background": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "numpy.ma.mean": {
     "line number": [
      277
     ]
    },
    "photutils.background.core._masked_median": {
     "line number": [
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.SExtractorBackground": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "photutils.background.core.BackgroundBase": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.background.core.SExtractorBackground.calc_background": {
  "data": {
   "lineno": 368,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      380
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      372,
      373,
      374,
      375
     ]
    },
    "numpy.ma.isMaskedArray": {
     "line number": [
      384
     ]
    },
    "numpy.ma.mean": {
     "line number": [
      373
     ]
    },
    "numpy.ma.std": {
     "line number": [
      374
     ]
    },
    "numpy.ma.where": {
     "line number": [
      377,
      379,
      381
     ]
    },
    "photutils.background.core._masked_median": {
     "line number": [
      372
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.SIGMA_CLIP": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.background.core.SigmaClip": {
  "data": {
   "shadows": "astropy.stats.SigmaClip"
  },
  "type": "import"
 },
 "photutils.background.core.StdBackgroundRMS": {
  "data": {
   "lineno": 444,
   "symbols_in_volume": {
    "photutils.background.core.BackgroundRMSBase": {
     "line number": [
      444
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.background.core.StdBackgroundRMS.calc_background_rms": {
  "data": {
   "lineno": 480,
   "symbols_in_volume": {
    "numpy.ma.std": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.background.core._masked_median": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "numpy.ma.isMaskedArray": {
     "line number": [
      49
     ]
    },
    "numpy.ma.median": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.core.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "photutils.background.core.biweight_location": {
  "data": {
   "shadows": "astropy.stats.biweight_location"
  },
  "type": "import"
 },
 "photutils.background.core.biweight_scale": {
  "data": {
   "shadows": "astropy.stats.biweight_scale"
  },
  "type": "import"
 },
 "photutils.background.core.mad_std": {
  "data": {
   "shadows": "astropy.stats.mad_std"
  },
  "type": "import"
 },
 "photutils.background.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.background.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.background.tests.test_background_2d": {
  "data": {
   "symbols_in_volume": {
    "BkgIDWInterpolator": {
     "line number": [
      36
     ]
    },
    "BkgZoomInterpolator": {
     "line number": [
      36
     ]
    },
    "ImportError": {
     "line number": [
      19,
      25
     ]
    },
    "numpy.ones": {
     "line number": [
      29,
      31,
      33
     ]
    },
    "numpy.zeros": {
     "line number": [
      30,
      32,
      34
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.background.tests.test_background_2d.BKG_MESH": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.BKG_RMS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.BKG_RMS_MESH": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.DATA": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.FILTER_SIZES": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.HAS_SCIPY": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.INTERPOLATORS": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.PADBKG_MESH": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.PADBKG_RMS_MESH": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "photutils.background.tests.test_background_2d.pytest": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_background": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      45
     ]
    },
    "list": {
     "line number": [
      42
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      47,
      48,
      49,
      50
     ]
    },
    "photutils.background.tests.test_background_2d.BKG_MESH": {
     "line number": [
      49
     ]
    },
    "photutils.background.tests.test_background_2d.BKG_RMS": {
     "line number": [
      48
     ]
    },
    "photutils.background.tests.test_background_2d.BKG_RMS_MESH": {
     "line number": [
      50
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      45,
      47
     ]
    },
    "photutils.background.tests.test_background_2d.FILTER_SIZES": {
     "line number": [
      42
     ]
    },
    "photutils.background.tests.test_background_2d.INTERPOLATORS": {
     "line number": [
      43
     ]
    },
    "photutils.background.tests.test_background_2d.itertools": {
     "line number": [
      42
     ]
    },
    "photutils.background.tests.test_background_2d.pytest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_background_mask": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      99,
      105
     ]
    },
    "MeanBackground": {
     "line number": [
      100,
      106
     ]
    },
    "bool": {
     "line number": [
      97
     ]
    },
    "numpy.copy": {
     "line number": [
      95
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      101,
      102,
      107
     ]
    },
    "numpy.zeros": {
     "line number": [
      97
     ]
    },
    "photutils.background.tests.test_background_2d.BKG_RMS": {
     "line number": [
      102
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      95,
      97,
      101,
      107
     ]
    },
    "photutils.background.tests.test_background_2d.pytest": {
     "line number": [
      88
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_background_nonconstant": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      60,
      64
     ]
    },
    "numpy.copy": {
     "line number": [
      56,
      58
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      62,
      66
     ]
    },
    "photutils.background.tests.test_background_2d.BKG_MESH": {
     "line number": [
      58
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      56
     ]
    },
    "photutils.background.tests.test_background_2d.INTERPOLATORS": {
     "line number": [
      54
     ]
    },
    "photutils.background.tests.test_background_2d.pytest": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_completely_masked": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      153
     ]
    },
    "ValueError": {
     "line number": [
      151
     ]
    },
    "bool": {
     "line number": [
      152
     ]
    },
    "numpy.ones": {
     "line number": [
      152
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      152,
      153
     ]
    },
    "photutils.background.tests.test_background_2d.pytest": {
     "line number": [
      151
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_coverage_mask": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      133,
      144
     ]
    },
    "MeanBackground": {
     "line number": [
      135,
      146
     ]
    },
    "bool": {
     "line number": [
      140,
      141
     ]
    },
    "numpy.copy": {
     "line number": [
      130
     ]
    },
    "numpy.isnan": {
     "line number": [
      132
     ]
    },
    "numpy.nan": {
     "line number": [
      131,
      128
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      136,
      137,
      147,
      148
     ]
    },
    "numpy.zeros": {
     "line number": [
      140,
      141
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      130,
      140,
      141
     ]
    },
    "photutils.background.tests.test_background_2d.pytest": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_coverage_mask_badshape": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      219
     ]
    },
    "ValueError": {
     "line number": [
      218
     ]
    },
    "numpy.zeros": {
     "line number": [
      220
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      219
     ]
    },
    "photutils.background.tests.test_background_2d.pytest": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_exclude_percentile": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      207,
      210
     ]
    },
    "ValueError": {
     "line number": [
      206,
      209
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      207,
      210
     ]
    },
    "photutils.background.tests.test_background_2d.pytest": {
     "line number": [
      206,
      209
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_filter_threshold": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      169,
      173
     ]
    },
    "numpy.copy": {
     "line number": [
      167
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      171,
      172
     ]
    },
    "photutils.background.tests.test_background_2d.BKG_MESH": {
     "line number": [
      172
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      167,
      171
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_filter_threshold_high": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      184
     ]
    },
    "numpy.copy": {
     "line number": [
      180,
      182
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      186
     ]
    },
    "photutils.background.tests.test_background_2d.BKG_MESH": {
     "line number": [
      182
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      180
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_filter_threshold_nofilter": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      195
     ]
    },
    "numpy.copy": {
     "line number": [
      191,
      193
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      197
     ]
    },
    "photutils.background.tests.test_background_2d.BKG_MESH": {
     "line number": [
      193
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      191
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_invalid_edge_method": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      224
     ]
    },
    "ValueError": {
     "line number": [
      223
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      224
     ]
    },
    "photutils.background.tests.test_background_2d.pytest": {
     "line number": [
      223
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_invalid_mesh_idx_len": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      229
     ]
    },
    "ValueError": {
     "line number": [
      228
     ]
    },
    "numpy.arange": {
     "line number": [
      230
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      229
     ]
    },
    "photutils.background.tests.test_background_2d.pytest": {
     "line number": [
      228
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_mask": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      114,
      121
     ]
    },
    "MeanBackground": {
     "line number": [
      115,
      122
     ]
    },
    "bool": {
     "line number": [
      112
     ]
    },
    "numpy.copy": {
     "line number": [
      110
     ]
    },
    "numpy.ma.count": {
     "line number": [
      124,
      125
     ]
    },
    "numpy.ma.is_masked": {
     "line number": [
      119,
      126
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      117,
      118
     ]
    },
    "numpy.zeros": {
     "line number": [
      112
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      110,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_mask_badshape": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      214
     ]
    },
    "ValueError": {
     "line number": [
      213
     ]
    },
    "numpy.zeros": {
     "line number": [
      215
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      214
     ]
    },
    "photutils.background.tests.test_background_2d.pytest": {
     "line number": [
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_no_sigma_clipping": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      72,
      74
     ]
    },
    "MeanBackground": {
     "line number": [
      73,
      75
     ]
    },
    "numpy.copy": {
     "line number": [
      70
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      70
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_plot_meshes": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      239
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      239
     ]
    },
    "photutils.background.tests.test_background_2d.pytest": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_resizing": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      81,
      83
     ]
    },
    "MeanBackground": {
     "line number": [
      82,
      84
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      85,
      86
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      81,
      83
     ]
    },
    "photutils.background.tests.test_background_2d.FILTER_SIZES": {
     "line number": [
      79
     ]
    },
    "photutils.background.tests.test_background_2d.pytest": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_scalar_sizes": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      200,
      201
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      202,
      203
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      200,
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_zero_padding": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "Background2D": {
     "line number": [
      158
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      159,
      160
     ]
    },
    "photutils.background.tests.test_background_2d.BKG_RMS": {
     "line number": [
      160
     ]
    },
    "photutils.background.tests.test_background_2d.DATA": {
     "line number": [
      158,
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core": {
  "data": {
   "symbols_in_volume": {
    "astropy.stats.SigmaClip": {
     "line number": [
      31
     ]
    },
    "make_noise_image": {
     "line number": [
      19
     ]
    },
    "photutils.background.tests.test_core.BKG": {
     "line number": [
      19
     ]
    },
    "photutils.background.tests.test_core.BKG_CLASS0": {
     "line number": [
      26
     ]
    },
    "photutils.background.tests.test_core.STD": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.background.tests.test_core.BKG": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.BKG_CLASS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.BKG_CLASS0": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.DATA": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.RMS_CLASS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.SIGMA_CLIP": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.STD": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.SigmaClip": {
  "data": {
   "shadows": "astropy.stats.SigmaClip"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core.test_background": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "bkg": {
     "line number": [
      46,
      50
     ]
    },
    "bkg.calc_background": {
     "line number": [
      47,
      50
     ]
    },
    "bkg_class": {
     "line number": [
      46
     ]
    },
    "numpy.ma.isMaskedArray": {
     "line number": [
      48
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      49,
      50
     ]
    },
    "photutils.background.tests.test_core.BKG": {
     "line number": [
      49
     ]
    },
    "photutils.background.tests.test_core.BKG_CLASS": {
     "line number": [
      44
     ]
    },
    "photutils.background.tests.test_core.DATA": {
     "line number": [
      47,
      50,
      50
     ]
    },
    "photutils.background.tests.test_core.SIGMA_CLIP": {
     "line number": [
      46
     ]
    },
    "photutils.background.tests.test_core.pytest": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_background_axis": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": {
    "bkg": {
     "line number": [
      55
     ]
    },
    "bkg.calc_background": {
     "line number": [
      57,
      60,
      64,
      67
     ]
    },
    "bkg_class": {
     "line number": [
      55
     ]
    },
    "numpy.array": {
     "line number": [
      61,
      68
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      62,
      69
     ]
    },
    "photutils.background.tests.test_core.BKG_CLASS": {
     "line number": [
      53
     ]
    },
    "photutils.background.tests.test_core.DATA": {
     "line number": [
      57,
      60,
      64,
      67
     ]
    },
    "photutils.background.tests.test_core.SIGMA_CLIP": {
     "line number": [
      55
     ]
    },
    "photutils.background.tests.test_core.pytest": {
     "line number": [
      53
     ]
    },
    "range": {
     "line number": [
      59,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_background_rms": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "bkgrms": {
     "line number": [
      89
     ]
    },
    "bkgrms.calc_background_rms": {
     "line number": [
      89
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      88,
      89
     ]
    },
    "photutils.background.tests.test_core.DATA": {
     "line number": [
      88,
      89,
      89
     ]
    },
    "photutils.background.tests.test_core.RMS_CLASS": {
     "line number": [
      85
     ]
    },
    "photutils.background.tests.test_core.SIGMA_CLIP": {
     "line number": [
      87
     ]
    },
    "photutils.background.tests.test_core.STD": {
     "line number": [
      88
     ]
    },
    "photutils.background.tests.test_core.pytest": {
     "line number": [
      85
     ]
    },
    "rms_class": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_constant_background": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "bkg": {
     "line number": [
      41
     ]
    },
    "bkg.calc_background": {
     "line number": [
      41
     ]
    },
    "bkg_class": {
     "line number": [
      37
     ]
    },
    "numpy.ma.isMaskedArray": {
     "line number": [
      39
     ]
    },
    "numpy.ones": {
     "line number": [
      36
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      40,
      41
     ]
    },
    "photutils.background.tests.test_core.BKG_CLASS0": {
     "line number": [
      34
     ]
    },
    "photutils.background.tests.test_core.SIGMA_CLIP": {
     "line number": [
      37
     ]
    },
    "photutils.background.tests.test_core.pytest": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_sextrator_background_skew": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "SExtractorBackground": {
     "line number": [
      81
     ]
    },
    "bkg": {
     "line number": [
      81
     ]
    },
    "bkg.calc_background": {
     "line number": [
      82
     ]
    },
    "numpy.arange": {
     "line number": [
      79
     ]
    },
    "numpy.median": {
     "line number": [
      82
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_sextrator_background_zero_std": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": {
    "SExtractorBackground": {
     "line number": [
      74
     ]
    },
    "bkg": {
     "line number": [
      74
     ]
    },
    "bkg.calc_background": {
     "line number": [
      75
     ]
    },
    "numpy.ones": {
     "line number": [
      73
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids": {
  "data": {},
  "type": "module"
 },
 "photutils.centroids.core": {
  "data": {},
  "type": "module"
 },
 "photutils.centroids.core.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.centroids.core.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.centroids.core._process_boxsize": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      244,
      246
     ]
    },
    "int": {
     "line number": [
      240
     ]
    },
    "len": {
     "line number": [
      241,
      243
     ]
    },
    "min": {
     "line number": [
      248,
      249
     ]
    },
    "numpy.any": {
     "line number": [
      245
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      240
     ]
    },
    "numpy.repeat": {
     "line number": [
      242
     ]
    },
    "numpy.round": {
     "line number": [
      240
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.core.centroid_com": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      53,
      61
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      67
     ]
    },
    "bool": {
     "line number": [
      51
     ]
    },
    "float": {
     "line number": [
      48
     ]
    },
    "len": {
     "line number": [
      57
     ]
    },
    "numpy.any": {
     "line number": [
      60,
      64
     ]
    },
    "numpy.array": {
     "line number": [
      74
     ]
    },
    "numpy.asarray": {
     "line number": [
      51
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      56
     ]
    },
    "numpy.isfinite": {
     "line number": [
      63
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      50
     ]
    },
    "numpy.ogrid": {
     "line number": [
      71
     ]
    },
    "numpy.repeat": {
     "line number": [
      58
     ]
    },
    "numpy.sum": {
     "line number": [
      70,
      74
     ]
    },
    "photutils.centroids.core.warnings": {
     "line number": [
      65
     ]
    },
    "range": {
     "line number": [
      75
     ]
    },
    "slice": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.core.centroid_epsf": {
  "data": {
   "lineno": 379,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      416,
      423,
      426,
      446
     ]
    },
    "bool": {
     "line number": [
      414
     ]
    },
    "float": {
     "line number": [
      411,
      430,
      432
     ]
    },
    "int": {
     "line number": [
      429,
      431,
      434,
      435
     ]
    },
    "len": {
     "line number": [
      420
     ]
    },
    "numpy.abs": {
     "line number": [
      458,
      464,
      472,
      478
     ]
    },
    "numpy.any": {
     "line number": [
      422,
      445
     ]
    },
    "numpy.arange": {
     "line number": [
      430,
      432
     ]
    },
    "numpy.around": {
     "line number": [
      434,
      435
     ]
    },
    "numpy.asarray": {
     "line number": [
      414
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      419
     ]
    },
    "numpy.isfinite": {
     "line number": [
      437
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      413
     ]
    },
    "numpy.repeat": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.core.centroid_quadratic": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      134,
      148,
      154
     ]
    },
    "_py2intround": {
     "line number": [
      160,
      161
     ]
    },
    "astropy.nddata.utils.overlap_slices": {
     "line number": [
      166,
      181
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      143,
      177,
      202,
      216,
      224,
      233
     ]
    },
    "float": {
     "line number": [
      136,
      178,
      230
     ]
    },
    "max": {
     "line number": [
      191,
      196
     ]
    },
    "min": {
     "line number": [
      189,
      194
     ]
    },
    "numpy.any": {
     "line number": [
      140
     ]
    },
    "numpy.arange": {
     "line number": [
      206,
      207
     ]
    },
    "numpy.array": {
     "line number": [
      178,
      203,
      217,
      225,
      230,
      234
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      136
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      199
     ]
    },
    "numpy.isfinite": {
     "line number": [
      139
     ]
    },
    "numpy.isnan": {
     "line number": [
      199
     ]
    },
    "numpy.linalg.LinAlgError": {
     "line number": [
      215
     ]
    },
    "numpy.linalg.lstsq": {
     "line number": [
      214
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      208
     ]
    },
    "numpy.nan": {
     "line number": [
      144,
      149,
      203,
      203,
      217,
      217,
      225,
      225,
      234,
      234
     ]
    },
    "numpy.nanargmax": {
     "line number": [
      158,
      169
     ]
    },
    "numpy.ones_like": {
     "line number": [
      211
     ]
    },
    "numpy.product": {
     "line number": [
      153
     ]
    },
    "numpy.unravel_index": {
     "line number": [
      158,
      169
     ]
    },
    "numpy.vstack": {
     "line number": [
      211
     ]
    },
    "photutils.centroids.core._process_boxsize": {
     "line number": [
      151,
      164
     ]
    },
    "photutils.centroids.core.warnings": {
     "line number": [
      141,
      175,
      200,
      216,
      223,
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.core.centroid_sources": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      317,
      319,
      323,
      329,
      335,
      340
     ]
    },
    "astropy.nddata.utils.overlap_slices": {
     "line number": [
      348
     ]
    },
    "bool": {
     "line number": [
      331,
      333
     ]
    },
    "centroid_func": {
     "line number": [
      368,
      371
     ]
    },
    "len": {
     "line number": [
      326,
      328
     ]
    },
    "numpy.array": {
     "line number": [
      376,
      376
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      333
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      314,
      315,
      325
     ]
    },
    "numpy.logical_or": {
     "line number": [
      364
     ]
    },
    "numpy.ones": {
     "line number": [
      331
     ]
    },
    "numpy.repeat": {
     "line number": [
      327
     ]
    },
    "photutils.centroids.core.centroid_com": {
     "line number": [
      254
     ]
    },
    "photutils.centroids.core.inspect": {
     "line number": [
      338
     ]
    },
    "zip": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.core.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "photutils.centroids.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.centroids.core.overlap_slices": {
  "data": {
   "shadows": "astropy.nddata.utils.overlap_slices"
  },
  "type": "import"
 },
 "photutils.centroids.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.centroids.gaussian": {
  "data": {},
  "type": "module"
 },
 "photutils.centroids.gaussian.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.centroids.gaussian.Const1D": {
  "data": {
   "shadows": "astropy.modeling.models.Const1D"
  },
  "type": "import"
 },
 "photutils.centroids.gaussian.Const2D": {
  "data": {
   "shadows": "astropy.modeling.models.Const2D"
  },
  "type": "import"
 },
 "photutils.centroids.gaussian.Fittable2DModel": {
  "data": {
   "shadows": "astropy.modeling.Fittable2DModel"
  },
  "type": "import"
 },
 "photutils.centroids.gaussian.Gaussian1D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian1D"
  },
  "type": "import"
 },
 "photutils.centroids.gaussian.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.centroids.gaussian.GaussianConst2D": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "astropy.modeling.Fittable2DModel": {
     "line number": [
      303
     ]
    },
    "astropy.modeling.Parameter": {
     "line number": [
      336,
      337,
      338,
      339,
      340,
      341,
      342
     ]
    },
    "astropy.utils.deprecated": {
     "line number": [
      302
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.centroids.gaussian.GaussianConst2D.evaluate": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "astropy.modeling.models.Const2D": {
     "line number": [
      349
     ]
    },
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      349
     ]
    },
    "staticmethod": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.gaussian.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.centroids.gaussian.Parameter": {
  "data": {
   "shadows": "astropy.modeling.Parameter"
  },
  "type": "import"
 },
 "photutils.centroids.gaussian.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.centroids.gaussian.centroid_1dg": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      49,
      61
     ]
    },
    "astropy.modeling.fitting.LevMarLSQFitter": {
     "line number": [
      83
     ]
    },
    "astropy.modeling.models.Const1D": {
     "line number": [
      82
     ]
    },
    "astropy.modeling.models.Gaussian1D": {
     "line number": [
      82
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      56
     ]
    },
    "fitter": {
     "line number": [
      85
     ]
    },
    "numpy.all": {
     "line number": [
      72
     ]
    },
    "numpy.any": {
     "line number": [
      52,
      71
     ]
    },
    "numpy.arange": {
     "line number": [
      84
     ]
    },
    "numpy.array": {
     "line number": [
      88
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      47
     ]
    },
    "numpy.isfinite": {
     "line number": [
      52
     ]
    },
    "numpy.ma.asanyarray": {
     "line number": [
      44
     ]
    },
    "numpy.ma.masked_invalid": {
     "line number": [
      53,
      59
     ]
    },
    "numpy.ma.min": {
     "line number": [
      78
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      46
     ]
    },
    "numpy.ma.sum": {
     "line number": [
      65,
      76
     ]
    },
    "numpy.ones": {
     "line number": [
      68
     ]
    },
    "numpy.sqrt": {
     "line number": [
      65
     ]
    },
    "photutils.centroids.gaussian.gaussian1d_moments": {
     "line number": [
      81
     ]
    },
    "photutils.centroids.gaussian.warnings": {
     "line number": [
      54
     ]
    },
    "zip": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.gaussian.centroid_2dg": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      169,
      181,
      188
     ]
    },
    "astropy.modeling.fitting.LevMarLSQFitter": {
     "line number": [
      213
     ]
    },
    "astropy.modeling.models.Const2D": {
     "line number": [
      206
     ]
    },
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      207
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      176
     ]
    },
    "data_properties": {
     "line number": [
      203
     ]
    },
    "fitter": {
     "line number": [
      213,
      215
     ]
    },
    "numpy.any": {
     "line number": [
      172
     ]
    },
    "numpy.array": {
     "line number": [
      216
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      167
     ]
    },
    "numpy.indices": {
     "line number": [
      214
     ]
    },
    "numpy.isfinite": {
     "line number": [
      172
     ]
    },
    "numpy.ma.asanyarray": {
     "line number": [
      164
     ]
    },
    "numpy.ma.count": {
     "line number": [
      187
     ]
    },
    "numpy.ma.masked_invalid": {
     "line number": [
      173,
      179
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      166,
      192
     ]
    },
    "numpy.min": {
     "line number": [
      203
     ]
    },
    "numpy.ones": {
     "line number": [
      185
     ]
    },
    "numpy.ptp": {
     "line number": [
      207
     ]
    },
    "photutils.centroids.gaussian.warnings": {
     "line number": [
      174
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.gaussian.deprecated": {
  "data": {
   "shadows": "astropy.utils.deprecated"
  },
  "type": "import"
 },
 "photutils.centroids.gaussian.fit_2dgaussian": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      251,
      263,
      270
     ]
    },
    "astropy.modeling.fitting.LevMarLSQFitter": {
     "line number": [
      295
     ]
    },
    "astropy.utils.deprecated": {
     "line number": [
      219
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      258
     ]
    },
    "data_properties": {
     "line number": [
      285
     ]
    },
    "fitter": {
     "line number": [
      295,
      297
     ]
    },
    "numpy.any": {
     "line number": [
      254
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      249
     ]
    },
    "numpy.indices": {
     "line number": [
      296
     ]
    },
    "numpy.isfinite": {
     "line number": [
      254
     ]
    },
    "numpy.ma.asanyarray": {
     "line number": [
      246
     ]
    },
    "numpy.ma.count": {
     "line number": [
      269
     ]
    },
    "numpy.ma.masked_invalid": {
     "line number": [
      255,
      261
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      248,
      274
     ]
    },
    "numpy.min": {
     "line number": [
      285
     ]
    },
    "numpy.ones": {
     "line number": [
      267
     ]
    },
    "numpy.ptp": {
     "line number": [
      288
     ]
    },
    "photutils.centroids.gaussian.GaussianConst2D": {
     "line number": [
      289
     ]
    },
    "photutils.centroids.gaussian.warnings": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.gaussian.gaussian1d_moments": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      123
     ]
    },
    "abs": {
     "line number": [
      131
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      116
     ]
    },
    "numpy.any": {
     "line number": [
      112
     ]
    },
    "numpy.arange": {
     "line number": [
      129
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      121
     ]
    },
    "numpy.isfinite": {
     "line number": [
      112
     ]
    },
    "numpy.ma.array": {
     "line number": [
      118
     ]
    },
    "numpy.ma.masked_invalid": {
     "line number": [
      113
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      120
     ]
    },
    "numpy.ptp": {
     "line number": [
      132
     ]
    },
    "numpy.sqrt": {
     "line number": [
      131
     ]
    },
    "numpy.sum": {
     "line number": [
      130,
      130,
      131,
      131
     ]
    },
    "photutils.centroids.gaussian.warnings": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.gaussian.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.centroids.gaussian.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.centroids.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.centroids.tests.test_core": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      24
     ]
    },
    "numpy.array": {
     "line number": [
      32
     ]
    },
    "numpy.pi": {
     "line number": [
      32
     ]
    },
    "numpy.zeros": {
     "line number": [
      34
     ]
    },
    "photutils.centroids.tests.test_core.DATA": {
     "line number": [
      35,
      36,
      37
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.centroids.tests.test_core.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.DATA": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.HAS_SCIPY": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.THETAS": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.XCEN": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.XSTDS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.YCEN": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.YSTDS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.test_centroid_com": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      44
     ]
    },
    "bool": {
     "line number": [
      55
     ]
    },
    "centroid_com": {
     "line number": [
      48,
      58,
      70
     ]
    },
    "centroid_quadratic": {
     "line number": [
      51,
      61
     ]
    },
    "hasattr": {
     "line number": [
      66
     ]
    },
    "list": {
     "line number": [
      42
     ]
    },
    "model": {
     "line number": [
      47
     ]
    },
    "numpy.mgrid": {
     "line number": [
      46
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      49,
      52,
      59,
      62,
      73
     ]
    },
    "numpy.zeros": {
     "line number": [
      55
     ]
    },
    "photutils.centroids.tests.test_core.THETAS": {
     "line number": [
      42
     ]
    },
    "photutils.centroids.tests.test_core.XCEN": {
     "line number": [
      44,
      49,
      52,
      59,
      62,
      72
     ]
    },
    "photutils.centroids.tests.test_core.XSTDS": {
     "line number": [
      42
     ]
    },
    "photutils.centroids.tests.test_core.YCEN": {
     "line number": [
      44,
      49,
      52,
      59,
      62,
      72
     ]
    },
    "photutils.centroids.tests.test_core.YSTDS": {
     "line number": [
      42
     ]
    },
    "photutils.centroids.tests.test_core.itertools": {
     "line number": [
      42
     ]
    },
    "photutils.centroids.tests.test_core.pytest": {
     "line number": [
      40,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroid_com_invalid_inputs": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      113,
      115
     ]
    },
    "bool": {
     "line number": [
      112
     ]
    },
    "centroid_com": {
     "line number": [
      114,
      116
     ]
    },
    "numpy.zeros": {
     "line number": [
      111,
      112
     ]
    },
    "photutils.centroids.tests.test_core.pytest": {
     "line number": [
      113,
      115,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroid_com_nan_withmask": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      81
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      99,
      106
     ]
    },
    "bool": {
     "line number": [
      86
     ]
    },
    "centroid_com": {
     "line number": [
      94
     ]
    },
    "centroid_quadratic": {
     "line number": [
      102
     ]
    },
    "issubclass": {
     "line number": [
      99,
      106
     ]
    },
    "len": {
     "line number": [
      97,
      104
     ]
    },
    "model": {
     "line number": [
      81,
      83
     ]
    },
    "numpy.mgrid": {
     "line number": [
      82
     ]
    },
    "numpy.nan": {
     "line number": [
      84
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      95,
      103
     ]
    },
    "numpy.zeros": {
     "line number": [
      86
     ]
    },
    "photutils.centroids.tests.test_core.pytest": {
     "line number": [
      76,
      77
     ]
    },
    "photutils.centroids.tests.test_core.warnings": {
     "line number": [
      93,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroid_epsf": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "IntegratedGaussianPRF": {
     "line number": [
      223
     ]
    },
    "bool": {
     "line number": [
      241
     ]
    },
    "centroid_epsf": {
     "line number": [
      244
     ]
    },
    "hasattr": {
     "line number": [
      226
     ]
    },
    "numpy.arange": {
     "line number": [
      231,
      232
     ]
    },
    "numpy.array": {
     "line number": [
      224,
      245
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      246
     ]
    },
    "numpy.zeros": {
     "line number": [
      241
     ]
    },
    "photutils.centroids.tests.test_core.pytest": {
     "line number": [
      219,
      220
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroid_epsf_exceptions": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      254,
      256,
      258,
      263
     ]
    },
    "centroid_epsf": {
     "line number": [
      255,
      257,
      259,
      264
     ]
    },
    "float": {
     "line number": [
      250,
      261
     ]
    },
    "int": {
     "line number": [
      251
     ]
    },
    "numpy.inf": {
     "line number": [
      262
     ]
    },
    "numpy.ones": {
     "line number": [
      250,
      261
     ]
    },
    "numpy.zeros": {
     "line number": [
      251
     ]
    },
    "photutils.centroids.tests.test_core.pytest": {
     "line number": [
      254,
      256,
      258,
      263
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroid_quadratic_edge": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": {
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      178
     ]
    },
    "centroid_quadratic": {
     "line number": [
      167,
      170,
      176
     ]
    },
    "issubclass": {
     "line number": [
      178
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      168,
      171,
      177
     ]
    },
    "numpy.zeros": {
     "line number": [
      163,
      173
     ]
    },
    "photutils.centroids.tests.test_core.pytest": {
     "line number": [
      161
     ]
    },
    "photutils.centroids.tests.test_core.warnings": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroid_quadratic_invalid_inputs": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      147,
      149,
      151,
      153,
      155,
      157
     ]
    },
    "bool": {
     "line number": [
      146
     ]
    },
    "centroid_quadratic": {
     "line number": [
      148,
      150,
      152,
      154,
      156,
      158
     ]
    },
    "numpy.zeros": {
     "line number": [
      145,
      146
     ]
    },
    "photutils.centroids.tests.test_core.pytest": {
     "line number": [
      147,
      149,
      151,
      153,
      155,
      157,
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroid_quadratic_npts": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      140
     ]
    },
    "bool": {
     "line number": [
      135
     ]
    },
    "centroid_quadratic": {
     "line number": [
      139
     ]
    },
    "issubclass": {
     "line number": [
      140
     ]
    },
    "numpy.zeros": {
     "line number": [
      133,
      135
     ]
    },
    "photutils.centroids.tests.test_core.pytest": {
     "line number": [
      131
     ]
    },
    "photutils.centroids.tests.test_core.warnings": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroid_quadratic_xypeak": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "centroid_quadratic": {
     "line number": [
      124,
      125,
      126
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      127,
      128
     ]
    },
    "numpy.zeros": {
     "line number": [
      121
     ]
    },
    "photutils.centroids.tests.test_core.pytest": {
     "line number": [
      119
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroid_sources": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      202,
      204,
      206,
      208,
      210,
      215
     ]
    },
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      184
     ]
    },
    "bool": {
     "line number": [
      189
     ]
    },
    "centroid_sources": {
     "line number": [
      193,
      197,
      203,
      205,
      207,
      209,
      211,
      216
     ]
    },
    "float": {
     "line number": [
      188
     ]
    },
    "model": {
     "line number": [
      184,
      187
     ]
    },
    "numpy.mgrid": {
     "line number": [
      186
     ]
    },
    "numpy.ones": {
     "line number": [
      188,
      211
     ]
    },
    "numpy.pi": {
     "line number": [
      183
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      194,
      195,
      199,
      200
     ]
    },
    "numpy.zeros": {
     "line number": [
      189
     ]
    },
    "photutils.centroids.tests.test_core.XCEN": {
     "line number": [
      184
     ]
    },
    "photutils.centroids.tests.test_core.YCEN": {
     "line number": [
      184
     ]
    },
    "photutils.centroids.tests.test_core.pytest": {
     "line number": [
      202,
      204,
      206,
      208,
      210,
      215,
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroid_sources.test_func": {
  "data": {
   "lineno": 213
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_gaussian": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      23
     ]
    },
    "numpy.array": {
     "line number": [
      31
     ]
    },
    "numpy.pi": {
     "line number": [
      31
     ]
    },
    "numpy.zeros": {
     "line number": [
      33
     ]
    },
    "photutils.centroids.tests.test_gaussian.DATA": {
     "line number": [
      34,
      35,
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.centroids.tests.test_gaussian.AstropyDeprecationWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyDeprecationWarning"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_gaussian.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_gaussian.DATA": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_gaussian.Gaussian1D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian1D"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_gaussian.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_gaussian.HAS_SCIPY": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_gaussian.THETAS": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_gaussian.XCEN": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_gaussian.XSTDS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_gaussian.YCEN": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_gaussian.YSTDS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_gaussian.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_gaussian.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_gaussian.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_gaussian.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_gaussian.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_gaussian.test_centroid_2dg_dof": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      126
     ]
    },
    "centroid_2dg": {
     "line number": [
      127
     ]
    },
    "numpy.ones": {
     "line number": [
      125
     ]
    },
    "photutils.centroids.tests.test_gaussian.pytest": {
     "line number": [
      126,
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_gaussian.test_centroids": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      43
     ]
    },
    "bool": {
     "line number": [
      60
     ]
    },
    "centroid_1dg": {
     "line number": [
      47,
      54,
      63
     ]
    },
    "centroid_2dg": {
     "line number": [
      49,
      56,
      65
     ]
    },
    "list": {
     "line number": [
      41
     ]
    },
    "model": {
     "line number": [
      46
     ]
    },
    "numpy.mgrid": {
     "line number": [
      45
     ]
    },
    "numpy.sqrt": {
     "line number": [
      53
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      48,
      50,
      55,
      57,
      64,
      66
     ]
    },
    "numpy.zeros": {
     "line number": [
      60
     ]
    },
    "photutils.centroids.tests.test_gaussian.THETAS": {
     "line number": [
      41
     ]
    },
    "photutils.centroids.tests.test_gaussian.XCEN": {
     "line number": [
      43,
      48,
      50,
      55,
      57,
      64,
      66
     ]
    },
    "photutils.centroids.tests.test_gaussian.XSTDS": {
     "line number": [
      41
     ]
    },
    "photutils.centroids.tests.test_gaussian.YCEN": {
     "line number": [
      43,
      48,
      50,
      55,
      57,
      64,
      66
     ]
    },
    "photutils.centroids.tests.test_gaussian.YSTDS": {
     "line number": [
      41
     ]
    },
    "photutils.centroids.tests.test_gaussian.itertools": {
     "line number": [
      41
     ]
    },
    "photutils.centroids.tests.test_gaussian.pytest": {
     "line number": [
      39,
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_gaussian.test_centroids_nan_withmask": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      74
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      91,
      98
     ]
    },
    "bool": {
     "line number": [
      79
     ]
    },
    "centroid_1dg": {
     "line number": [
      87
     ]
    },
    "centroid_2dg": {
     "line number": [
      94
     ]
    },
    "issubclass": {
     "line number": [
      91,
      98
     ]
    },
    "len": {
     "line number": [
      89,
      96
     ]
    },
    "model": {
     "line number": [
      74,
      76
     ]
    },
    "numpy.mgrid": {
     "line number": [
      75
     ]
    },
    "numpy.nan": {
     "line number": [
      77
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      88,
      95
     ]
    },
    "numpy.zeros": {
     "line number": [
      79
     ]
    },
    "photutils.centroids.tests.test_gaussian.pytest": {
     "line number": [
      69,
      70
     ]
    },
    "photutils.centroids.tests.test_gaussian.warnings": {
     "line number": [
      86,
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_gaussian.test_fitgaussian2d": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      156
     ]
    },
    "astropy.utils.exceptions.AstropyDeprecationWarning": {
     "line number": [
      162
     ]
    },
    "bool": {
     "line number": [
      161
     ]
    },
    "fit_2dgaussian": {
     "line number": [
      163
     ]
    },
    "float": {
     "line number": [
      160
     ]
    },
    "model": {
     "line number": [
      156,
      159
     ]
    },
    "numpy.mgrid": {
     "line number": [
      158
     ]
    },
    "numpy.ones": {
     "line number": [
      160
     ]
    },
    "numpy.pi": {
     "line number": [
      157
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      164,
      165
     ]
    },
    "numpy.zeros": {
     "line number": [
      161
     ]
    },
    "photutils.centroids.tests.test_gaussian.XCEN": {
     "line number": [
      156,
      164
     ]
    },
    "photutils.centroids.tests.test_gaussian.YCEN": {
     "line number": [
      156,
      165
     ]
    },
    "photutils.centroids.tests.test_gaussian.pytest": {
     "line number": [
      162,
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_gaussian.test_gaussian1d_moments": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "astropy.modeling.models.Gaussian1D": {
     "line number": [
      133
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      151
     ]
    },
    "bool": {
     "line number": [
      139,
      145
     ]
    },
    "g": {
     "line number": [
      134
     ]
    },
    "gaussian1d_moments": {
     "line number": [
      135,
      141,
      148
     ]
    },
    "issubclass": {
     "line number": [
      151
     ]
    },
    "len": {
     "line number": [
      150
     ]
    },
    "numpy.arange": {
     "line number": [
      131
     ]
    },
    "numpy.nan": {
     "line number": [
      144
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      136,
      142,
      149
     ]
    },
    "numpy.zeros": {
     "line number": [
      139,
      145
     ]
    },
    "photutils.centroids.tests.test_gaussian.warnings": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_gaussian.test_invalid_error_shape": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      117,
      119
     ]
    },
    "bool": {
     "line number": [
      116
     ]
    },
    "centroid_1dg": {
     "line number": [
      118
     ]
    },
    "centroid_2dg": {
     "line number": [
      120
     ]
    },
    "numpy.zeros": {
     "line number": [
      116,
      118,
      120
     ]
    },
    "photutils.centroids.tests.test_gaussian.pytest": {
     "line number": [
      117,
      119,
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_gaussian.test_invalid_mask_shape": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      106,
      108,
      110
     ]
    },
    "bool": {
     "line number": [
      104
     ]
    },
    "centroid_1dg": {
     "line number": [
      107
     ]
    },
    "centroid_2dg": {
     "line number": [
      109
     ]
    },
    "gaussian1d_moments": {
     "line number": [
      111
     ]
    },
    "numpy.zeros": {
     "line number": [
      103,
      104
     ]
    },
    "photutils.centroids.tests.test_gaussian.pytest": {
     "line number": [
      106,
      108,
      110,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_gaussian.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.conftest": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      11
     ]
    },
    "astropy.tests.helper.enable_deprecations_as_exceptions": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.conftest.ASTROPY_HEADER": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.conftest.PYTEST_HEADER_MODULES": {
  "data": {
   "shadows": "pytest_astropy_header.display.PYTEST_HEADER_MODULES"
  },
  "type": "import"
 },
 "photutils.conftest.TESTED_VERSIONS": {
  "data": {
   "shadows": "pytest_astropy_header.display.TESTED_VERSIONS"
  },
  "type": "import"
 },
 "photutils.conftest.enable_deprecations_as_exceptions": {
  "data": {
   "shadows": "astropy.tests.helper.enable_deprecations_as_exceptions"
  },
  "type": "import"
 },
 "photutils.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "photutils.conftest.pytest_configure": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "photutils.conftest.ASTROPY_HEADER": {
     "line number": [
      16
     ]
    },
    "photutils.conftest.os": {
     "line number": [
      33,
      33
     ]
    },
    "pytest_astropy_header.display.PYTEST_HEADER_MODULES": {
     "line number": [
      22,
      23,
      24,
      25,
      26,
      27,
      28
     ]
    },
    "pytest_astropy_header.display.PYTEST_HEADER_MODULES.pop": {
     "line number": [
      29,
      30
     ]
    },
    "pytest_astropy_header.display.TESTED_VERSIONS": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.load": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.load.HTTPError": {
  "data": {
   "shadows": "urllib.error.HTTPError"
  },
  "type": "import"
 },
 "photutils.datasets.load.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.datasets.load.URLError": {
  "data": {
   "shadows": "urllib.error.URLError"
  },
  "type": "import"
 },
 "photutils.datasets.load.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.datasets.load.download_file": {
  "data": {
   "shadows": "astropy.utils.data.download_file"
  },
  "type": "import"
 },
 "photutils.datasets.load.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.datasets.load.get_path": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      68
     ]
    },
    "astropy.utils.data.download_file": {
     "line number": [
      59,
      62,
      65
     ]
    },
    "astropy.utils.data.get_pkg_data_filename": {
     "line number": [
      55
     ]
    },
    "urllib.error.HTTPError": {
     "line number": [
      61
     ]
    },
    "urllib.error.URLError": {
     "line number": [
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.load.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "photutils.datasets.load.load_fermi_image": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      247
     ]
    },
    "photutils.datasets.load.get_path": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.load.load_irac_psf": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      211
     ]
    },
    "astropy.io.fits.open": {
     "line number": [
      215
     ]
    },
    "int": {
     "line number": [
      209
     ]
    },
    "photutils.datasets.load.get_path": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.load.load_simulated_hst_star_image": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      320
     ]
    },
    "photutils.datasets.load.get_path": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.load.load_spitzer_catalog": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": {
    "astropy.table.Table.read": {
     "line number": [
      150
     ]
    },
    "photutils.datasets.load.get_path": {
     "line number": [
      148
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.load.load_spitzer_image": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      107
     ]
    },
    "photutils.datasets.load.get_path": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.load.load_star_image": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      285
     ]
    },
    "photutils.datasets.load.get_path": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.make": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.make.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "photutils.datasets.make.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.datasets.make.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "photutils.datasets.make.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.datasets.make.__doctest_requires__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.datasets.make.apply_poisson_noise": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      81
     ]
    },
    "astropy.utils.decorators.deprecated_renamed_argument": {
     "line number": [
      31
     ]
    },
    "numpy.any": {
     "line number": [
      80
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      79
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.make.cf": {
  "data": {
   "shadows": "gwcs.coordinate_frames"
  },
  "type": "import"
 },
 "photutils.datasets.make.coord": {
  "data": {
   "shadows": "astropy.coordinates"
  },
  "type": "import"
 },
 "photutils.datasets.make.deprecated_renamed_argument": {
  "data": {
   "shadows": "astropy.utils.decorators.deprecated_renamed_argument"
  },
  "type": "import"
 },
 "photutils.datasets.make.discretize_model": {
  "data": {
   "shadows": "astropy.convolution.discretize_model"
  },
  "type": "import"
 },
 "photutils.datasets.make.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.datasets.make.gwcs_wcs": {
  "data": {
   "shadows": "gwcs.wcs"
  },
  "type": "import"
 },
 "photutils.datasets.make.make_100gaussians_image": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": {
    "astropy.table.Table": {
     "line number": [
      753
     ]
    },
    "collections.OrderedDict": {
     "line number": [
      745
     ]
    },
    "numpy.pi": {
     "line number": [
      750,
      761
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      752,
      767
     ]
    },
    "photutils.datasets.make.make_gaussian_sources_image": {
     "line number": [
      764
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.make.make_4gaussians_image": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": {
    "astropy.table.Table": {
     "line number": [
      686
     ]
    },
    "numpy.array": {
     "line number": [
      692
     ]
    },
    "numpy.radians": {
     "line number": [
      692
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      698
     ]
    },
    "photutils.datasets.make.make_gaussian_sources_image": {
     "line number": [
      695
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.make.make_gaussian_prf_sources_image": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": {
    "IntegratedGaussianPRF": {
     "line number": [
      634
     ]
    },
    "model": {
     "line number": [
      634,
      647
     ]
    },
    "model.sigma.value": {
     "line number": [
      639
     ]
    },
    "numpy.pi": {
     "line number": [
      645
     ]
    },
    "photutils.datasets.make.make_model_sources_image": {
     "line number": [
      647
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.make.make_gaussian_sources_image": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": {
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      549
     ]
    },
    "model": {
     "line number": [
      549,
      566
     ]
    },
    "model.x_stddev.value": {
     "line number": [
      554
     ]
    },
    "model.y_stddev.value": {
     "line number": [
      558
     ]
    },
    "numpy.pi": {
     "line number": [
      564
     ]
    },
    "photutils.datasets.make.make_model_sources_image": {
     "line number": [
      566
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.make.make_gwcs": {
  "data": {
   "lineno": 833,
   "symbols_in_volume": {
    "astropy.coordinates.Galactic": {
     "line number": [
      904
     ]
    },
    "astropy.coordinates.ICRS": {
     "line number": [
      907
     ]
    },
    "astropy.modeling.models.AffineTransformation2D": {
     "line number": [
      889,
      890
     ]
    },
    "astropy.modeling.models.Pix2Sky_TAN": {
     "line number": [
      893
     ]
    },
    "astropy.modeling.models.RotateNative2Celestial": {
     "line number": [
      894
     ]
    },
    "astropy.modeling.models.Shift": {
     "line number": [
      883,
      884
     ]
    },
    "astropy.units.deg": {
     "line number": [
      905,
      905,
      908,
      908
     ]
    },
    "astropy.units.pix": {
     "line number": [
      901,
      901
     ]
    },
    "gwcs.coordinate_frames.CelestialFrame": {
     "line number": [
      904,
      907
     ]
    },
    "gwcs.coordinate_frames.Frame2D": {
     "line number": [
      900
     ]
    },
    "gwcs.wcs.WCS": {
     "line number": [
      912
     ]
    },
    "numpy.array": {
     "line number": [
      886
     ]
    },
    "numpy.cos": {
     "line number": [
      886,
      887
     ]
    },
    "numpy.linalg.inv": {
     "line number": [
      891
     ]
    },
    "numpy.pi": {
     "line number": [
      880
     ]
    },
    "numpy.sin": {
     "line number": [
      886,
      887
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.make.make_imagehdu": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      951
     ]
    },
    "astropy.io.fits.ImageHDU": {
     "line number": [
      958
     ]
    },
    "gwcs.wcs": {
     "line number": [
      953
     ]
    },
    "gwcs.wcs.to_header": {
     "line number": [
      954
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      949
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.make.make_model_sources_image": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": {
    "astropy.convolution.discretize_model": {
     "line number": [
      464
     ]
    },
    "float": {
     "line number": [
      442
     ]
    },
    "getattr": {
     "line number": [
      454
     ]
    },
    "model": {
     "line number": [
      462,
      464,
      469
     ]
    },
    "numpy.indices": {
     "line number": [
      443
     ]
    },
    "numpy.zeros": {
     "line number": [
      442
     ]
    },
    "setattr": {
     "line number": [
      459,
      469
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.make.make_noise_image": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      150,
      156,
      161
     ]
    },
    "astropy.utils.decorators.deprecated_renamed_argument": {
     "line number": [
      88
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.make.make_random_gaussians_table": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      360
     ]
    },
    "astropy.utils.decorators.deprecated_renamed_argument": {
     "line number": [
      250
     ]
    },
    "numpy.pi": {
     "line number": [
      372
     ]
    },
    "photutils.datasets.make.make_random_models_table": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.make.make_random_models_table": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "astropy.table.Table": {
     "line number": [
      240
     ]
    },
    "astropy.utils.decorators.deprecated_renamed_argument": {
     "line number": [
      167
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.make.make_wcs": {
  "data": {
   "lineno": 773,
   "symbols_in_volume": {
    "astropy.wcs.WCS": {
     "line number": [
      814
     ]
    },
    "numpy.cos": {
     "line number": [
      822,
      823
     ]
    },
    "numpy.pi": {
     "line number": [
      815
     ]
    },
    "numpy.sin": {
     "line number": [
      822,
      823
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.make.models": {
  "data": {
   "shadows": "astropy.modeling.models"
  },
  "type": "import"
 },
 "photutils.datasets.make.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.datasets.make.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.tests.test_load": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.tests.test_load.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_load.test_get_path": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      12
     ]
    },
    "get_path": {
     "line number": [
      13
     ]
    },
    "photutils.datasets.tests.test_load.pytest": {
     "line number": [
      12
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_load.test_load_fermi_image": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": {
    "len": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_load.test_load_star_image": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "len": {
     "line number": [
      25
     ]
    },
    "photutils.datasets.tests.test_load.pytest": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      22,
      28
     ]
    },
    "astropy.table.Table": {
     "line number": [
      31,
      39
     ]
    },
    "numpy.array": {
     "line number": [
      37,
      44
     ]
    },
    "numpy.pi": {
     "line number": [
      37,
      44
     ]
    },
    "photutils.datasets.tests.test_make.SOURCE_TABLE": {
     "line number": [
      32,
      33,
      34,
      35,
      36,
      37
     ]
    },
    "photutils.datasets.tests.test_make.SOURCE_TABLE_PRF": {
     "line number": [
      40,
      41,
      44
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.datasets.tests.test_make.HAS_GWCS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "photutils.datasets.tests.test_make.HAS_SCIPY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.datasets.tests.test_make.Moffat2D": {
  "data": {
   "shadows": "astropy.modeling.models.Moffat2D"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.SOURCE_TABLE": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "photutils.datasets.tests.test_make.SOURCE_TABLE_PRF": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "photutils.datasets.tests.test_make.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.gwcs": {
  "data": {
   "shadows": "gwcs"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.test_apply_poisson_noise": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "apply_poisson_noise": {
     "line number": [
      82
     ]
    },
    "numpy.ones": {
     "line number": [
      81
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_apply_poisson_noise_negative": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      90
     ]
    },
    "apply_poisson_noise": {
     "line number": [
      93
     ]
    },
    "numpy.zeros": {
     "line number": [
      92
     ]
    },
    "photutils.datasets.tests.test_make.pytest": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_100gaussians_image": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": {
    "make_100gaussians_image": {
     "line number": [
      160
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_4gaussians_image": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "make_4gaussians_image": {
     "line number": [
      152
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      154
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_gaussian_prf_sources_image": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "make_gaussian_prf_sources_image": {
     "line number": [
      106
     ]
    },
    "numpy.pi": {
     "line number": [
      109
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      110
     ]
    },
    "photutils.datasets.tests.test_make.SOURCE_TABLE_PRF": {
     "line number": [
      106,
      109
     ]
    },
    "photutils.datasets.tests.test_make.pytest": {
     "line number": [
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_gaussian_sources_image": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "make_gaussian_sources_image": {
     "line number": [
      98
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      100
     ]
    },
    "photutils.datasets.tests.test_make.SOURCE_TABLE": {
     "line number": [
      98,
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_gaussian_sources_image_amplitude": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "make_gaussian_sources_image": {
     "line number": [
      118
     ]
    },
    "photutils.datasets.tests.test_make.SOURCE_TABLE": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_gaussian_sources_image_oversample": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": {
    "make_gaussian_sources_image": {
     "line number": [
      124
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      126
     ]
    },
    "photutils.datasets.tests.test_make.SOURCE_TABLE": {
     "line number": [
      124,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_gwcs": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "make_gwcs": {
     "line number": [
      193,
      199
     ]
    },
    "photutils.datasets.tests.test_make.pytest": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_noise_image": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "make_noise_image": {
     "line number": [
      49
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_noise_image_nomean": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      64
     ]
    },
    "make_noise_image": {
     "line number": [
      66
     ]
    },
    "photutils.datasets.tests.test_make.pytest": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_noise_image_nostddev": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      74
     ]
    },
    "make_noise_image": {
     "line number": [
      76
     ]
    },
    "photutils.datasets.tests.test_make.pytest": {
     "line number": [
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_noise_image_poisson": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "make_noise_image": {
     "line number": [
      56
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_random_gaussians_table": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      131
     ]
    },
    "len": {
     "line number": [
      136
     ]
    },
    "make_random_gaussians_table": {
     "line number": [
      135
     ]
    },
    "numpy.pi": {
     "line number": [
      133
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_random_gaussians_table_flux": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "dict": {
     "line number": [
      141
     ]
    },
    "len": {
     "line number": [
      146
     ]
    },
    "make_random_gaussians_table": {
     "line number": [
      144
     ]
    },
    "numpy.pi": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_random_models_table": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "astropy.modeling.models.Moffat2D": {
     "line number": [
      166
     ]
    },
    "make_model_sources_image": {
     "line number": [
      173
     ]
    },
    "make_random_models_table": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_wcs": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "make_wcs": {
     "line number": [
      179,
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_wcs_compare": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "make_gwcs": {
     "line number": [
      210
     ]
    },
    "make_wcs": {
     "line number": [
      209
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      214,
      215
     ]
    },
    "photutils.datasets.tests.test_make.pytest": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection": {
  "data": {},
  "type": "module"
 },
 "photutils.detection.core": {
  "data": {},
  "type": "module"
 },
 "photutils.detection.core.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.detection.core.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.detection.core.detect_threshold": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      108,
      119
     ]
    },
    "astropy.stats.sigma_clipped_stats": {
     "line number": [
      94
     ]
    },
    "numpy.isscalar": {
     "line number": [
      104,
      115
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      98,
      99,
      105,
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.core.find_peaks": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      291
     ]
    },
    "ValueError": {
     "line number": [
      231,
      252
     ]
    },
    "_pixel_to_world": {
     "line number": [
      283,
      302
     ]
    },
    "astropy.table.Table": {
     "line number": [
      280
     ]
    },
    "callable": {
     "line number": [
      290
     ]
    },
    "centroid_sources": {
     "line number": [
      293
     ]
    },
    "len": {
     "line number": [
      266
     ]
    },
    "numpy.all": {
     "line number": [
      223
     ]
    },
    "numpy.any": {
     "line number": [
      236
     ]
    },
    "numpy.argsort": {
     "line number": [
      268
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      221,
      229,
      250
     ]
    },
    "numpy.copy": {
     "line number": [
      237
     ]
    },
    "numpy.inf": {
     "line number": [
      127
     ]
    },
    "numpy.isnan": {
     "line number": [
      235
     ]
    },
    "numpy.isscalar": {
     "line number": [
      228
     ]
    },
    "numpy.logical_and": {
     "line number": [
      253,
      262
     ]
    },
    "numpy.nanmin": {
     "line number": [
      238
     ]
    },
    "photutils.detection.core.warnings": {
     "line number": [
      224,
      274
     ]
    },
    "range": {
     "line number": [
      256
     ]
    },
    "scipy.ndimage.maximum_filter": {
     "line number": [
      241,
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.core.maximum_filter": {
  "data": {
   "shadows": "scipy.ndimage.maximum_filter"
  },
  "type": "import"
 },
 "photutils.detection.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.detection.core.sigma_clipped_stats": {
  "data": {
   "shadows": "astropy.stats.sigma_clipped_stats"
  },
  "type": "import"
 },
 "photutils.detection.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.detection.findstars": {
  "data": {},
  "type": "module"
 },
 "photutils.detection.findstars.DAOStarFinder": {
  "data": {
   "lineno": 746,
   "symbols_in_volume": {
    "photutils.detection.findstars.StarFinderBase": {
     "line number": [
      746
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.detection.findstars.DAOStarFinder.__init__": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      882,
      886
     ]
    },
    "numpy.isscalar": {
     "line number": [
      881,
      885
     ]
    },
    "photutils.detection.findstars._StarFinderKernel": {
     "line number": [
      899
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars.DAOStarFinder.find_stars": {
  "data": {
   "lineno": 906,
   "symbols_in_volume": {
    "astropy.table.Table": {
     "line number": [
      993
     ]
    },
    "getattr": {
     "line number": [
      998
     ]
    },
    "len": {
     "line number": [
      981,
      991
     ]
    },
    "numpy.arange": {
     "line number": [
      994
     ]
    },
    "numpy.argsort": {
     "line number": [
      989
     ]
    },
    "numpy.isnan": {
     "line number": [
      961,
      961
     ]
    },
    "photutils.detection.findstars._DAOFindProperties": {
     "line number": [
      959
     ]
    },
    "photutils.detection.findstars._find_stars": {
     "line number": [
      947
     ]
    },
    "photutils.detection.findstars.warnings": {
     "line number": [
      952,
      983
     ]
    },
    "sorted": {
     "line number": [
      989
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars.IRAFStarFinder": {
  "data": {
   "lineno": 1003,
   "symbols_in_volume": {
    "photutils.detection.findstars.StarFinderBase": {
     "line number": [
      1003
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.detection.findstars.IRAFStarFinder.__init__": {
  "data": {
   "lineno": 1106,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      1111,
      1115
     ]
    },
    "int": {
     "line number": [
      1127
     ]
    },
    "max": {
     "line number": [
      1127
     ]
    },
    "numpy.isscalar": {
     "line number": [
      1110,
      1114
     ]
    },
    "photutils.detection.findstars._StarFinderKernel": {
     "line number": [
      1129
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars.IRAFStarFinder.find_stars": {
  "data": {
   "lineno": 1135,
   "symbols_in_volume": {
    "astropy.table.Table": {
     "line number": [
      1218
     ]
    },
    "getattr": {
     "line number": [
      1223
     ]
    },
    "len": {
     "line number": [
      1206,
      1216
     ]
    },
    "numpy.arange": {
     "line number": [
      1219
     ]
    },
    "numpy.argsort": {
     "line number": [
      1214
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      1190
     ]
    },
    "photutils.detection.findstars._IRAFStarFindProperties": {
     "line number": [
      1186
     ]
    },
    "photutils.detection.findstars._find_stars": {
     "line number": [
      1173
     ]
    },
    "photutils.detection.findstars.warnings": {
     "line number": [
      1179,
      1208
     ]
    },
    "sorted": {
     "line number": [
      1214
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars.StarFinderBase": {
  "data": {
   "lineno": 712,
   "symbols_in_volume": {
    "photutils.detection.findstars.abc": {
     "line number": [
      712
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.detection.findstars.StarFinderBase.__call__": {
  "data": {
   "lineno": 717
  },
  "type": "function"
 },
 "photutils.detection.findstars.StarFinderBase.find_stars": {
  "data": {
   "lineno": 720,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      743
     ]
    },
    "photutils.detection.findstars.abc": {
     "line number": [
      720
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.detection.findstars._DAOFindProperties": {
  "data": {
   "lineno": 209
  },
  "type": "class"
 },
 "photutils.detection.findstars._DAOFindProperties.__init__": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      233,
      236
     ]
    },
    "isinstance": {
     "line number": [
      232
     ]
    },
    "photutils.detection.findstars._StarCutout": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.conv_peak": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.daofind_marginal_fit": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      390,
      395
     ]
    },
    "numpy.abs": {
     "line number": [
      329,
      330
     ]
    },
    "numpy.arange": {
     "line number": [
      329,
      330,
      339,
      346,
      350
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      331
     ]
    },
    "numpy.nan": {
     "line number": [
      374,
      374,
      378,
      378
     ]
    },
    "numpy.sum": {
     "line number": [
      349,
      353,
      355,
      356,
      359,
      360,
      361,
      363,
      364,
      365,
      366,
      367
     ]
    },
    "numpy.transpose": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.data_peak": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.dx": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      408
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.dx_hx": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      400
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.dy": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      412
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.dy_hy": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      404
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.flux": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.hx": {
  "data": {
   "lineno": 424,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      424
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.hy": {
  "data": {
   "lineno": 428,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      428
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.mag": {
  "data": {
   "lineno": 467,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      467
     ]
    },
    "numpy.log10": {
     "line number": [
      472
     ]
    },
    "numpy.nan": {
     "line number": [
      470
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.npix": {
  "data": {
   "lineno": 454,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.peak": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      450
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.roundness1": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      258
     ]
    },
    "numpy.abs": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.roundness2": {
  "data": {
   "lineno": 432,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      432
     ]
    },
    "numpy.isnan": {
     "line number": [
      445,
      445
     ]
    },
    "numpy.nan": {
     "line number": [
      446
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.sharpness": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      291
     ]
    },
    "numpy.sum": {
     "line number": [
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.xcentroid": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      416
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFindProperties.ycentroid": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties": {
  "data": {
   "lineno": 475
  },
  "type": "class"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.__init__": {
  "data": {
   "lineno": 495,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      497,
      500
     ]
    },
    "bool": {
     "line number": [
      506
     ]
    },
    "isinstance": {
     "line number": [
      496
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      507
     ]
    },
    "numpy.max": {
     "line number": [
      509,
      510
     ]
    },
    "numpy.sum": {
     "line number": [
      512
     ]
    },
    "photutils.detection.findstars._StarCutout": {
     "line number": [
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.cutout_xcentroid": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      529
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.cutout_ycentroid": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      533
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.data": {
  "data": {
   "lineno": 517,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      517
     ]
    },
    "numpy.array": {
     "line number": [
      519
     ]
    },
    "numpy.where": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.flux": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      557
     ]
    },
    "numpy.sum": {
     "line number": [
      559
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.fwhm": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      579
     ]
    },
    "numpy.log": {
     "line number": [
      581
     ]
    },
    "numpy.sqrt": {
     "line number": [
      581
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.mag": {
  "data": {
   "lineno": 561,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      561
     ]
    },
    "numpy.log10": {
     "line number": [
      563
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.moments": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": {
    "_moments": {
     "line number": [
      527
     ]
    },
    "astropy.utils.lazyproperty": {
     "line number": [
      525
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.moments_central": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": {
    "_moments_central": {
     "line number": [
      567
     ]
    },
    "astropy.utils.lazyproperty": {
     "line number": [
      565
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.mu_diff": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      575
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.mu_sum": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      571
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.npix": {
  "data": {
   "lineno": 545,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      545
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      547
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.pa": {
  "data": {
   "lineno": 592,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      592
     ]
    },
    "numpy.arctan2": {
     "line number": [
      594
     ]
    },
    "numpy.rad2deg": {
     "line number": [
      594
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.peak": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      553
     ]
    },
    "numpy.max": {
     "line number": [
      555
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.roundness": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      587
     ]
    },
    "numpy.sqrt": {
     "line number": [
      589
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.sharpness": {
  "data": {
   "lineno": 583,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      583
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.sky": {
  "data": {
   "lineno": 549,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      549
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.xcentroid": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      537
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFindProperties.ycentroid": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      541
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._StarCutout": {
  "data": {
   "lineno": 154
  },
  "type": "class"
 },
 "photutils.detection.findstars._StarCutout.__init__": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": {
    "int": {
     "line number": [
      198,
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars._StarFinderKernel": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "photutils.detection.findstars._StarFinderKernel.__init__": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      81,
      84,
      88
     ]
    },
    "astropy.stats.gaussian_fwhm_to_sigma": {
     "line number": [
      94
     ]
    },
    "int": {
     "line number": [
      115,
      116,
      131
     ]
    },
    "max": {
     "line number": [
      115,
      116
     ]
    },
    "numpy.cos": {
     "line number": [
      98
     ]
    },
    "numpy.deg2rad": {
     "line number": [
      97
     ]
    },
    "numpy.exp": {
     "line number": [
      135
     ]
    },
    "numpy.mgrid": {
     "line number": [
      122
     ]
    },
    "numpy.sin": {
     "line number": [
      99
     ]
    },
    "numpy.sqrt": {
     "line number": [
      123,
      141
     ]
    },
    "numpy.where": {
     "line number": [
      129
     ]
    },
    "photutils.detection.findstars.math": {
     "line number": [
      115,
      116
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.detection.findstars._find_stars": {
  "data": {
   "lineno": 602,
   "symbols_in_volume": {
    "_filter_data": {
     "line number": [
      641
     ]
    },
    "bool": {
     "line number": [
      646
     ]
    },
    "find_peaks": {
     "line number": [
      670
     ]
    },
    "int": {
     "line number": [
      651
     ]
    },
    "numpy.arange": {
     "line number": [
      649
     ]
    },
    "numpy.array": {
     "line number": [
      651
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      650
     ]
    },
    "numpy.pad": {
     "line number": [
      660,
      662,
      663
     ]
    },
    "numpy.transpose": {
     "line number": [
      676
     ]
    },
    "photutils.detection.findstars._StarCutout": {
     "line number": [
      706
     ]
    },
    "photutils.detection.findstars.warnings": {
     "line number": [
      667,
      669
     ]
    },
    "slice": {
     "line number": [
      692,
      692,
      704,
      704
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.findstars.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "photutils.detection.findstars.gaussian_fwhm_to_sigma": {
  "data": {
   "shadows": "astropy.stats.gaussian_fwhm_to_sigma"
  },
  "type": "import"
 },
 "photutils.detection.findstars.lazyproperty": {
  "data": {
   "shadows": "astropy.utils.lazyproperty"
  },
  "type": "import"
 },
 "photutils.detection.findstars.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.detection.findstars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.detection.findstars.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.detection.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.detection.tests.test_core": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      22,
      29
     ]
    },
    "float": {
     "line number": [
      32,
      35
     ]
    },
    "make_4gaussians_image": {
     "line number": [
      38
     ]
    },
    "make_wcs": {
     "line number": [
      39
     ]
    },
    "numpy.array": {
     "line number": [
      32,
      33,
      35,
      36
     ]
    },
    "photutils.detection.tests.test_core.IMAGE": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.detection.tests.test_core.DATA": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.FITSWCS": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.HAS_GWCS": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.HAS_SCIPY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.IMAGE": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.PEAKDATA": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.PEAKREF1": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.REF1": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "photutils.detection.tests.test_core.pytest": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "detect_threshold": {
     "line number": [
      59
     ]
    },
    "numpy.ones": {
     "line number": [
      60
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      61
     ]
    },
    "photutils.detection.tests.test_core.DATA": {
     "line number": [
      59
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background_badshape": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      71
     ]
    },
    "detect_threshold": {
     "line number": [
      72
     ]
    },
    "numpy.zeros": {
     "line number": [
      70
     ]
    },
    "photutils.detection.tests.test_core.DATA": {
     "line number": [
      72
     ]
    },
    "photutils.detection.tests.test_core.pytest": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background_error": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "detect_threshold": {
     "line number": [
      91
     ]
    },
    "numpy.ones": {
     "line number": [
      93
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      94
     ]
    },
    "photutils.detection.tests.test_core.DATA": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background_error_images": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "detect_threshold": {
     "line number": [
      99
     ]
    },
    "numpy.ones": {
     "line number": [
      97,
      98,
      101
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      102
     ]
    },
    "photutils.detection.tests.test_core.DATA": {
     "line number": [
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background_image": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": {
    "detect_threshold": {
     "line number": [
      65
     ]
    },
    "numpy.ones": {
     "line number": [
      64,
      66
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      67
     ]
    },
    "photutils.detection.tests.test_core.DATA": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_error": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "detect_threshold": {
     "line number": [
      75
     ]
    },
    "numpy.ones": {
     "line number": [
      76
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      77
     ]
    },
    "photutils.detection.tests.test_core.DATA": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_error_badshape": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      87
     ]
    },
    "detect_threshold": {
     "line number": [
      88
     ]
    },
    "numpy.zeros": {
     "line number": [
      86
     ]
    },
    "photutils.detection.tests.test_core.DATA": {
     "line number": [
      88
     ]
    },
    "photutils.detection.tests.test_core.pytest": {
     "line number": [
      87
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_error_image": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "detect_threshold": {
     "line number": [
      81
     ]
    },
    "numpy.ones": {
     "line number": [
      80,
      82
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      83
     ]
    },
    "photutils.detection.tests.test_core.DATA": {
     "line number": [
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_image_mask": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      118
     ]
    },
    "detect_threshold": {
     "line number": [
      119
     ]
    },
    "numpy.ones": {
     "line number": [
      121
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      122
     ]
    },
    "photutils.detection.tests.test_core.DATA": {
     "line number": [
      119
     ]
    },
    "photutils.detection.tests.test_core.REF1": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_image_mask_override": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      127
     ]
    },
    "detect_threshold": {
     "line number": [
      128
     ]
    },
    "numpy.ones": {
     "line number": [
      131
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      132
     ]
    },
    "photutils.detection.tests.test_core.DATA": {
     "line number": [
      128
     ]
    },
    "photutils.detection.tests.test_core.REF1": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_mask_value": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "detect_threshold": {
     "line number": [
      107
     ]
    },
    "numpy.ones": {
     "line number": [
      108
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      109
     ]
    },
    "photutils.detection.tests.test_core.DATA": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_nsigma": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "detect_threshold": {
     "line number": [
      47
     ]
    },
    "numpy.ones": {
     "line number": [
      48
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      49
     ]
    },
    "photutils.detection.tests.test_core.DATA": {
     "line number": [
      47
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_nsigma_zero": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "detect_threshold": {
     "line number": [
      54
     ]
    },
    "numpy.ones": {
     "line number": [
      55
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      56
     ]
    },
    "photutils.detection.tests.test_core.DATA": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": {
    "photutils.detection.tests.test_core.pytest": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_border_width": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "find_peaks": {
     "line number": [
      185
     ]
    },
    "photutils.detection.tests.test_core.PEAKDATA": {
     "line number": [
      185
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_box_size": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "find_peaks": {
     "line number": [
      140
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      141,
      142,
      143
     ]
    },
    "photutils.detection.tests.test_core.PEAKDATA": {
     "line number": [
      140
     ]
    },
    "photutils.detection.tests.test_core.PEAKREF1": {
     "line number": [
      141,
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_box_size_int": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "find_peaks": {
     "line number": [
      199,
      200
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      201
     ]
    },
    "photutils.detection.tests.test_core.PEAKDATA": {
     "line number": [
      199,
      200
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_centroid_func_callable": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      206
     ]
    },
    "find_peaks": {
     "line number": [
      207
     ]
    },
    "photutils.detection.tests.test_core.PEAKDATA": {
     "line number": [
      207
     ]
    },
    "photutils.detection.tests.test_core.pytest": {
     "line number": [
      206
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_constant_array": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": {
    "find_peaks": {
     "line number": [
      244
     ]
    },
    "numpy.ones": {
     "line number": [
      243
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_data_nans": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "find_peaks": {
     "line number": [
      282
     ]
    },
    "numpy.copy": {
     "line number": [
      277
     ]
    },
    "numpy.nan": {
     "line number": [
      278
     ]
    },
    "photutils.detection.tests.test_core.PEAKDATA": {
     "line number": [
      277
     ]
    },
    "photutils.detection.tests.test_core.warnings": {
     "line number": [
      280,
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_footprint": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "find_peaks": {
     "line number": [
      148
     ]
    },
    "numpy.ones": {
     "line number": [
      148
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      149,
      150,
      151
     ]
    },
    "photutils.detection.tests.test_core.PEAKDATA": {
     "line number": [
      148
     ]
    },
    "photutils.detection.tests.test_core.PEAKREF1": {
     "line number": [
      149,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_gwcs": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "find_peaks": {
     "line number": [
      225
     ]
    },
    "make_gwcs": {
     "line number": [
      224
     ]
    },
    "photutils.detection.tests.test_core.IMAGE": {
     "line number": [
      224,
      225
     ]
    },
    "photutils.detection.tests.test_core.pytest": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_mask": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      156
     ]
    },
    "find_peaks": {
     "line number": [
      158
     ]
    },
    "len": {
     "line number": [
      159
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      160,
      161,
      162
     ]
    },
    "numpy.zeros": {
     "line number": [
      156
     ]
    },
    "photutils.detection.tests.test_core.PEAKDATA": {
     "line number": [
      156,
      158
     ]
    },
    "photutils.detection.tests.test_core.PEAKREF1": {
     "line number": [
      160,
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_maskshape": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      167
     ]
    },
    "find_peaks": {
     "line number": [
      168
     ]
    },
    "numpy.ones": {
     "line number": [
      168
     ]
    },
    "photutils.detection.tests.test_core.PEAKDATA": {
     "line number": [
      168
     ]
    },
    "photutils.detection.tests.test_core.pytest": {
     "line number": [
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_no_peaks": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "find_peaks": {
     "line number": [
      261,
      264,
      267,
      270
     ]
    },
    "photutils.detection.tests.test_core.FITSWCS": {
     "line number": [
      267,
      270
     ]
    },
    "photutils.detection.tests.test_core.IMAGE": {
     "line number": [
      261,
      264,
      267,
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_npeaks": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "find_peaks": {
     "line number": [
      179
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      180,
      181
     ]
    },
    "photutils.detection.tests.test_core.PEAKDATA": {
     "line number": [
      179
     ]
    },
    "photutils.detection.tests.test_core.PEAKREF1": {
     "line number": [
      180,
      181
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_thresholdshape": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      173
     ]
    },
    "find_peaks": {
     "line number": [
      174
     ]
    },
    "numpy.ones": {
     "line number": [
      174
     ]
    },
    "photutils.detection.tests.test_core.PEAKDATA": {
     "line number": [
      174
     ]
    },
    "photutils.detection.tests.test_core.pytest": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_wcs": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "find_peaks": {
     "line number": [
      214
     ]
    },
    "photutils.detection.tests.test_core.FITSWCS": {
     "line number": [
      214
     ]
    },
    "photutils.detection.tests.test_core.IMAGE": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_wcs_values": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "astropy.tests.helper.assert_quantity_allclose": {
     "line number": [
      237,
      238
     ]
    },
    "find_peaks": {
     "line number": [
      232,
      233
     ]
    },
    "make_gwcs": {
     "line number": [
      231
     ]
    },
    "photutils.detection.tests.test_core.FITSWCS": {
     "line number": [
      232
     ]
    },
    "photutils.detection.tests.test_core.IMAGE": {
     "line number": [
      231,
      232,
      233
     ]
    },
    "photutils.detection.tests.test_core.pytest": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.assert_quantity_allclose": {
  "data": {
   "shadows": "astropy.tests.helper.assert_quantity_allclose"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.gwcs": {
  "data": {
   "shadows": "gwcs"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      22
     ]
    },
    "make_100gaussians_image": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.detection.tests.test_findstars.DATA": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_findstars.FWHMS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_findstars.HAS_SCIPY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_findstars.THRESHOLDS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_findstars.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "photutils.detection.tests.test_findstars.pytest": {
     "line number": [
      31
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "DAOStarFinder": {
     "line number": [
      36
     ]
    },
    "astropy.table.Table.read": {
     "line number": [
      41
     ]
    },
    "list": {
     "line number": [
      34
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      45
     ]
    },
    "os.path.abspath": {
     "line number": [
      40
     ]
    },
    "os.path.dirname": {
     "line number": [
      40
     ]
    },
    "os.path.join": {
     "line number": [
      40
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      37
     ]
    },
    "photutils.detection.tests.test_findstars.FWHMS": {
     "line number": [
      34
     ]
    },
    "photutils.detection.tests.test_findstars.THRESHOLDS": {
     "line number": [
      34
     ]
    },
    "photutils.detection.tests.test_findstars.itertools": {
     "line number": [
      34
     ]
    },
    "photutils.detection.tests.test_findstars.pytest": {
     "line number": [
      33
     ]
    },
    "starfinder": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_brightest_filtering": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": {
    "DAOStarFinder": {
     "line number": [
      149,
      155
     ]
    },
    "len": {
     "line number": [
      154,
      160
     ]
    },
    "numpy.inf": {
     "line number": [
      149,
      150,
      150,
      151,
      155,
      156,
      156,
      157
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      152,
      159
     ]
    },
    "starfinder": {
     "line number": [
      149,
      152,
      155,
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_exclude_border": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "DAOStarFinder": {
     "line number": [
      61
     ]
    },
    "len": {
     "line number": [
      64
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      63
     ]
    },
    "starfinder": {
     "line number": [
      61,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_flux_negative": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "DAOStarFinder": {
     "line number": [
      111
     ]
    },
    "numpy.isfinite": {
     "line number": [
      113
     ]
    },
    "numpy.ones": {
     "line number": [
      109
     ]
    },
    "starfinder": {
     "line number": [
      111,
      112
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_include_border": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "DAOStarFinder": {
     "line number": [
      55
     ]
    },
    "len": {
     "line number": [
      58
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      57
     ]
    },
    "starfinder": {
     "line number": [
      55,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_mask": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "DAOStarFinder": {
     "line number": [
      165
     ]
    },
    "bool": {
     "line number": [
      166
     ]
    },
    "len": {
     "line number": [
      170,
      170
     ]
    },
    "numpy.zeros": {
     "line number": [
      166
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      166,
      168,
      169
     ]
    },
    "starfinder": {
     "line number": [
      165,
      168,
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_negative_fit_peak": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "DAOStarFinder": {
     "line number": [
      121
     ]
    },
    "len": {
     "line number": [
      125
     ]
    },
    "numpy.inf": {
     "line number": [
      121,
      122,
      122,
      123
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      124
     ]
    },
    "starfinder": {
     "line number": [
      121,
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_nosources": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "DAOStarFinder": {
     "line number": [
      68
     ]
    },
    "numpy.ones": {
     "line number": [
      67
     ]
    },
    "starfinder": {
     "line number": [
      68,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_peakmax_filtering": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "DAOStarFinder": {
     "line number": [
      134
     ]
    },
    "all": {
     "line number": [
      139
     ]
    },
    "len": {
     "line number": [
      138
     ]
    },
    "numpy.inf": {
     "line number": [
      134,
      135,
      135,
      136
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      137
     ]
    },
    "starfinder": {
     "line number": [
      134,
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_roundness": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "DAOStarFinder": {
     "line number": [
      95
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      96
     ]
    },
    "starfinder": {
     "line number": [
      95,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_sharpness": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "DAOStarFinder": {
     "line number": [
      81
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      82
     ]
    },
    "starfinder": {
     "line number": [
      81,
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_threshold_fwhm_inputs": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "DAOStarFinder": {
     "line number": [
      49,
      52
     ]
    },
    "TypeError": {
     "line number": [
      48,
      51
     ]
    },
    "numpy.ones": {
     "line number": [
      49,
      52
     ]
    },
    "photutils.detection.tests.test_findstars.pytest": {
     "line number": [
      48,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "photutils.detection.tests.test_findstars.pytest": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "IRAFStarFinder": {
     "line number": [
      178
     ]
    },
    "astropy.table.Table.read": {
     "line number": [
      183
     ]
    },
    "list": {
     "line number": [
      176
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      187
     ]
    },
    "os.path.abspath": {
     "line number": [
      182
     ]
    },
    "os.path.dirname": {
     "line number": [
      182
     ]
    },
    "os.path.join": {
     "line number": [
      182
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      179
     ]
    },
    "photutils.detection.tests.test_findstars.FWHMS": {
     "line number": [
      176
     ]
    },
    "photutils.detection.tests.test_findstars.THRESHOLDS": {
     "line number": [
      176
     ]
    },
    "photutils.detection.tests.test_findstars.itertools": {
     "line number": [
      176
     ]
    },
    "photutils.detection.tests.test_findstars.pytest": {
     "line number": [
      175
     ]
    },
    "starfinder": {
     "line number": [
      178,
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_brightest_filtering": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "IRAFStarFinder": {
     "line number": [
      273
     ]
    },
    "len": {
     "line number": [
      277
     ]
    },
    "numpy.inf": {
     "line number": [
      273,
      274,
      274,
      275
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      276
     ]
    },
    "starfinder": {
     "line number": [
      273,
      276
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_largesky": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "IRAFStarFinder": {
     "line number": [
      243
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      244
     ]
    },
    "starfinder": {
     "line number": [
      243,
      244
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_mask": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "IRAFStarFinder": {
     "line number": [
      282
     ]
    },
    "bool": {
     "line number": [
      283
     ]
    },
    "len": {
     "line number": [
      287,
      287
     ]
    },
    "numpy.zeros": {
     "line number": [
      283
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      283,
      285,
      286
     ]
    },
    "starfinder": {
     "line number": [
      282,
      285,
      286
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_nosources": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "IRAFStarFinder": {
     "line number": [
      198
     ]
    },
    "numpy.ones": {
     "line number": [
      197
     ]
    },
    "starfinder": {
     "line number": [
      198,
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_peakmax_filtering": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "IRAFStarFinder": {
     "line number": [
      261
     ]
    },
    "all": {
     "line number": [
      266
     ]
    },
    "len": {
     "line number": [
      265
     ]
    },
    "numpy.inf": {
     "line number": [
      261,
      262,
      262,
      263
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      264
     ]
    },
    "starfinder": {
     "line number": [
      261,
      264
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_roundness": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": {
    "IRAFStarFinder": {
     "line number": [
      225
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      226
     ]
    },
    "starfinder": {
     "line number": [
      225,
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_sharpness": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "IRAFStarFinder": {
     "line number": [
      211
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      212
     ]
    },
    "starfinder": {
     "line number": [
      211,
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_sky": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": {
    "IRAFStarFinder": {
     "line number": [
      238
     ]
    },
    "len": {
     "line number": [
      240
     ]
    },
    "photutils.detection.tests.test_findstars.DATA": {
     "line number": [
      239
     ]
    },
    "starfinder": {
     "line number": [
      238,
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_threshold_fwhm_inputs": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "IRAFStarFinder": {
     "line number": [
      191,
      194
     ]
    },
    "TypeError": {
     "line number": [
      190,
      193
     ]
    },
    "numpy.ones": {
     "line number": [
      191,
      194
     ]
    },
    "photutils.detection.tests.test_findstars.pytest": {
     "line number": [
      190,
      193
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.extern": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.tests.test_circular_overlap_grid": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.arg_list": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.circ_sizes": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.grid_sizes": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.subsamples": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.test_circular_overlap_grid": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "circular_overlap_grid": {
     "line number": [
      30
     ]
    },
    "list": {
     "line number": [
      22
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      32
     ]
    },
    "photutils.geometry.tests.test_circular_overlap_grid.circ_sizes": {
     "line number": [
      22
     ]
    },
    "photutils.geometry.tests.test_circular_overlap_grid.grid_sizes": {
     "line number": [
      22
     ]
    },
    "photutils.geometry.tests.test_circular_overlap_grid.itertools": {
     "line number": [
      22
     ]
    },
    "photutils.geometry.tests.test_circular_overlap_grid.pytest": {
     "line number": [
      21
     ]
    },
    "photutils.geometry.tests.test_circular_overlap_grid.subsamples": {
     "line number": [
      23
     ]
    },
    "photutils.geometry.tests.test_circular_overlap_grid.use_exact": {
     "line number": [
      31,
      23
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.use_exact": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.angles": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.arg_list": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.grid_sizes": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.maj_sizes": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.min_sizes": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.subsamples": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.test_elliptical_overlap_grid": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "elliptical_overlap_grid": {
     "line number": [
      36
     ]
    },
    "list": {
     "line number": [
      26
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      39
     ]
    },
    "photutils.geometry.tests.test_elliptical_overlap_grid.angles": {
     "line number": [
      27
     ]
    },
    "photutils.geometry.tests.test_elliptical_overlap_grid.grid_sizes": {
     "line number": [
      26
     ]
    },
    "photutils.geometry.tests.test_elliptical_overlap_grid.itertools": {
     "line number": [
      26
     ]
    },
    "photutils.geometry.tests.test_elliptical_overlap_grid.maj_sizes": {
     "line number": [
      26
     ]
    },
    "photutils.geometry.tests.test_elliptical_overlap_grid.min_sizes": {
     "line number": [
      27
     ]
    },
    "photutils.geometry.tests.test_elliptical_overlap_grid.pytest": {
     "line number": [
      24
     ]
    },
    "photutils.geometry.tests.test_elliptical_overlap_grid.subsamples": {
     "line number": [
      28
     ]
    },
    "photutils.geometry.tests.test_elliptical_overlap_grid.use_exact": {
     "line number": [
      37,
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.use_exact": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.angles": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.arg_list": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.grid_sizes": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.rect_sizes": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.subsamples": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.test_rectangular_overlap_grid": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "list": {
     "line number": [
      22
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      32
     ]
    },
    "photutils.geometry.tests.test_rectangular_overlap_grid.angles": {
     "line number": [
      23
     ]
    },
    "photutils.geometry.tests.test_rectangular_overlap_grid.grid_sizes": {
     "line number": [
      22
     ]
    },
    "photutils.geometry.tests.test_rectangular_overlap_grid.itertools": {
     "line number": [
      22
     ]
    },
    "photutils.geometry.tests.test_rectangular_overlap_grid.pytest": {
     "line number": [
      21
     ]
    },
    "photutils.geometry.tests.test_rectangular_overlap_grid.rect_sizes": {
     "line number": [
      22
     ]
    },
    "photutils.geometry.tests.test_rectangular_overlap_grid.subsamples": {
     "line number": [
      23
     ]
    },
    "rectangular_overlap_grid": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.ellipse": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.ellipse.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.isophote.ellipse.Ellipse": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "photutils.isophote.ellipse.Ellipse.__init__": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "EllipseGeometry": {
     "line number": [
      186
     ]
    },
    "numpy.pi": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.ellipse.Ellipse._fix_last_isophote": {
  "data": {
   "lineno": 646,
   "symbols_in_volume": {
    "Isophote": {
     "line number": [
      667
     ]
    },
    "staticmethod": {
     "line number": [
      646
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.ellipse.Ellipse._iterative": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": {
    "CentralEllipseFitter": {
     "line number": [
      627
     ]
    },
    "CentralEllipseSample": {
     "line number": [
      626
     ]
    },
    "EllipseFitter": {
     "line number": [
      623
     ]
    },
    "EllipseSample": {
     "line number": [
      620
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.ellipse.Ellipse._non_iterative": {
  "data": {
   "lineno": 634,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      636
     ]
    },
    "Isophote": {
     "line number": [
      642
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.ellipse.Ellipse.fit_image": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": {
    "IsophoteList": {
     "line number": [
      383,
      413,
      483
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      382,
      412
     ]
    },
    "bool": {
     "line number": [
      376
     ]
    },
    "isinstance": {
     "line number": [
      376
     ]
    },
    "len": {
     "line number": [
      410,
      424
     ]
    },
    "max": {
     "line number": [
      472
     ]
    },
    "numpy.array": {
     "line number": [
      386
     ]
    },
    "photutils.isophote.ellipse.warnings": {
     "line number": [
      381,
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.ellipse.Ellipse.fit_isophote": {
  "data": {
   "lineno": 485
  },
  "type": "function"
 },
 "photutils.isophote.ellipse.Ellipse.set_threshold": {
  "data": {
   "lineno": 190
  },
  "type": "function"
 },
 "photutils.isophote.ellipse.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.isophote.ellipse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.ellipse.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.isophote.fitter": {
  "data": {
   "symbols_in_volume": {
    "numpy.pi": {
     "line number": [
      22
     ]
    },
    "photutils.isophote.fitter._AngleCorrector": {
     "line number": [
      369
     ]
    },
    "photutils.isophote.fitter._EllipticityCorrector": {
     "line number": [
      369
     ]
    },
    "photutils.isophote.fitter._PositionCorrector0": {
     "line number": [
      368
     ]
    },
    "photutils.isophote.fitter._PositionCorrector1": {
     "line number": [
      368
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.isophote.fitter.CentralEllipseFitter": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": {
    "photutils.isophote.fitter.EllipseFitter": {
     "line number": [
      372
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.fitter.CentralEllipseFitter.fit": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": {
    "CentralPixel": {
     "line number": [
      402
     ]
    },
    "numpy.array": {
     "line number": [
      399
     ]
    },
    "photutils.isophote.fitter.DEFAULT_CONVERGENCE": {
     "line number": [
      378
     ]
    },
    "photutils.isophote.fitter.DEFAULT_FFLAG": {
     "line number": [
      379
     ]
    },
    "photutils.isophote.fitter.DEFAULT_MAXGERR": {
     "line number": [
      379
     ]
    },
    "photutils.isophote.fitter.DEFAULT_MAXIT": {
     "line number": [
      379
     ]
    },
    "photutils.isophote.fitter.DEFAULT_MINIT": {
     "line number": [
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.fitter.DEFAULT_CONVERGENCE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.DEFAULT_FFLAG": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.DEFAULT_MAXGERR": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.DEFAULT_MAXIT": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.DEFAULT_MINIT": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.EllipseFitter": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "photutils.isophote.fitter.EllipseFitter.__init__": {
  "data": {
   "lineno": 43
  },
  "type": "function"
 },
 "photutils.isophote.fitter.EllipseFitter._check_conditions": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      256
     ]
    },
    "min": {
     "line number": [
      267
     ]
    },
    "photutils.isophote.fitter.MAX_EPS": {
     "line number": [
      256,
      267
     ]
    },
    "photutils.isophote.fitter.MIN_EPS": {
     "line number": [
      276
     ]
    },
    "photutils.isophote.fitter.PI2": {
     "line number": [
      268,
      269,
      271
     ]
    },
    "staticmethod": {
     "line number": [
      230
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.fitter.EllipseFitter.fit": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      162
     ]
    },
    "Isophote": {
     "line number": [
      165,
      190,
      198,
      222,
      228
     ]
    },
    "abs": {
     "line number": [
      176,
      177
     ]
    },
    "astropy.log.info": {
     "line number": [
      163
     ]
    },
    "first_and_second_harmonic_function": {
     "line number": [
      181
     ]
    },
    "fit_first_and_second_harmonics": {
     "line number": [
      160
     ]
    },
    "numpy.Inf": {
     "line number": [
      139
     ]
    },
    "numpy.abs": {
     "line number": [
      171,
      185
     ]
    },
    "numpy.argmax": {
     "line number": [
      171
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      168
     ]
    },
    "numpy.std": {
     "line number": [
      184
     ]
    },
    "photutils.isophote.fitter.DEFAULT_CONVERGENCE": {
     "line number": [
      46
     ]
    },
    "photutils.isophote.fitter.DEFAULT_FFLAG": {
     "line number": [
      47
     ]
    },
    "photutils.isophote.fitter.DEFAULT_MAXGERR": {
     "line number": [
      47
     ]
    },
    "photutils.isophote.fitter.DEFAULT_MAXIT": {
     "line number": [
      47
     ]
    },
    "photutils.isophote.fitter.DEFAULT_MINIT": {
     "line number": [
      46
     ]
    },
    "range": {
     "line number": [
      145
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.fitter.MAX_EPS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.MIN_EPS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.PI2": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.isophote.fitter._AngleCorrector": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "photutils.isophote.fitter._ParameterCorrector": {
     "line number": [
      325
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.fitter._AngleCorrector.correct": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      338
     ]
    },
    "numpy.pi": {
     "line number": [
      336
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.fitter._CORRECTORS": {
  "data": {
   "lineno": 368
  },
  "type": "constant"
 },
 "photutils.isophote.fitter._EllipticityCorrector": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "photutils.isophote.fitter._ParameterCorrector": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.fitter._EllipticityCorrector.correct": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      358
     ]
    },
    "min": {
     "line number": [
      356
     ]
    },
    "photutils.isophote.fitter.MAX_EPS": {
     "line number": [
      356
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.fitter._ParameterCorrector": {
  "data": {
   "lineno": 281
  },
  "type": "class"
 },
 "photutils.isophote.fitter._ParameterCorrector.correct": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.fitter._PositionCorrector": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": {
    "photutils.isophote.fitter._ParameterCorrector": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.fitter._PositionCorrector.finalize_correction": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      294
     ]
    },
    "staticmethod": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.fitter._PositionCorrector0": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": {
    "photutils.isophote.fitter._PositionCorrector": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.fitter._PositionCorrector0.correct": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": {
    "photutils.isophote.fitter.math": {
     "line number": [
      308,
      309
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.fitter._PositionCorrector1": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": {
    "photutils.isophote.fitter._PositionCorrector": {
     "line number": [
      314
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.fitter._PositionCorrector1.correct": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "photutils.isophote.fitter.math": {
     "line number": [
      319,
      320
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.fitter.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.__doctest_skip__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.log": {
  "data": {
   "shadows": "astropy.log"
  },
  "type": "import"
 },
 "photutils.isophote.fitter.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "photutils.isophote.fitter.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.isophote.fitter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.geometry": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.geometry.EllipseGeometry": {
  "data": {
   "lineno": 66
  },
  "type": "class"
 },
 "photutils.isophote.geometry.EllipseGeometry.__init__": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": {
    "max": {
     "line number": [
      145
     ]
    },
    "min": {
     "line number": [
      140,
      145
     ]
    },
    "numpy.array": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry._to_polar_scalar": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      451
     ]
    },
    "numpy.pi": {
     "line number": [
      457,
      459,
      461,
      465,
      468
     ]
    },
    "photutils.isophote.geometry.math": {
     "line number": [
      450,
      451
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry._to_polar_vectorized": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      482
     ]
    },
    "numpy.arcsin": {
     "line number": [
      482
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      474,
      475
     ]
    },
    "numpy.ones": {
     "line number": [
      478
     ]
    },
    "numpy.pi": {
     "line number": [
      487,
      489,
      491,
      495,
      497
     ]
    },
    "numpy.sqrt": {
     "line number": [
      481
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.bounding_ellipses": {
  "data": {
   "lineno": 363
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.find_center": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "astropy.log.info": {
     "line number": [
      266,
      270
     ]
    },
    "float": {
     "line number": [
      262,
      263
     ]
    },
    "int": {
     "line number": [
      229,
      230,
      231,
      232,
      235,
      236,
      237,
      238
     ]
    },
    "len": {
     "line number": [
      201,
      205
     ]
    },
    "max": {
     "line number": [
      235,
      236
     ]
    },
    "min": {
     "line number": [
      237,
      238
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      206,
      208,
      243,
      244
     ]
    },
    "numpy.ones": {
     "line number": [
      206,
      208
     ]
    },
    "numpy.sqrt": {
     "line number": [
      251
     ]
    },
    "numpy.std": {
     "line number": [
      249,
      250
     ]
    },
    "numpy.sum": {
     "line number": [
      210,
      211,
      245,
      246
     ]
    },
    "photutils.isophote.geometry.IN_MASK": {
     "line number": [
      201,
      205,
      207,
      243
     ]
    },
    "photutils.isophote.geometry.OUT_MASK": {
     "line number": [
      209,
      244
     ]
    },
    "range": {
     "line number": [
      229,
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.initialize_sector_geometry": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      341
     ]
    },
    "float": {
     "line number": [
      350,
      351
     ]
    },
    "max": {
     "line number": [
      345
     ]
    },
    "min": {
     "line number": [
      345
     ]
    },
    "numpy.array": {
     "line number": [
      354,
      355,
      356,
      357
     ]
    },
    "numpy.zeros": {
     "line number": [
      350,
      351
     ]
    },
    "photutils.isophote.geometry._area": {
     "line number": [
      337,
      338,
      339,
      340
     ]
    },
    "photutils.isophote.geometry.math": {
     "line number": [
      323,
      323,
      324,
      325,
      325,
      326,
      330,
      330,
      331,
      333,
      333,
      334,
      354,
      355,
      356,
      357
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.polar_angle_sector_limits": {
  "data": {
   "lineno": 384
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.radius": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      289
     ]
    },
    "numpy.sin": {
     "line number": [
      290
     ]
    },
    "numpy.sqrt": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.reset_sma": {
  "data": {
   "lineno": 526
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.to_polar": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": {
    "float": {
     "line number": [
      438
     ]
    },
    "int": {
     "line number": [
      438
     ]
    },
    "isinstance": {
     "line number": [
      438
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.update_sma": {
  "data": {
   "lineno": 501
  },
  "type": "function"
 },
 "photutils.isophote.geometry.IN_MASK": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.isophote.geometry.OUT_MASK": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "photutils.isophote.geometry.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.isophote.geometry._area": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      60,
      61,
      63
     ]
    },
    "photutils.isophote.geometry.math": {
     "line number": [
      59,
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.geometry.log": {
  "data": {
   "shadows": "astropy.log"
  },
  "type": "import"
 },
 "photutils.isophote.geometry.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.isophote.geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.harmonics": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.harmonics.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "photutils.isophote.harmonics._least_squares_fit": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "RuntimeError": {
     "line number": [
      19
     ]
    },
    "scipy.optimize.leastsq": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.harmonics.first_and_second_harmonic_function": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      54,
      55
     ]
    },
    "numpy.sin": {
     "line number": [
      54,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.harmonics.fit_first_and_second_harmonics": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "numpy.mean": {
     "line number": [
      93
     ]
    },
    "photutils.isophote.harmonics._least_squares_fit": {
     "line number": [
      93
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.harmonics.fit_first_and_second_harmonics.optimize_func": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      91
     ]
    },
    "photutils.isophote.harmonics.first_and_second_harmonic_function": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.harmonics.fit_upper_harmonic": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": {
    "numpy.mean": {
     "line number": [
      135
     ]
    },
    "photutils.isophote.harmonics._least_squares_fit": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.harmonics.fit_upper_harmonic.optimize_func": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "numpy.cos": {
     "line number": [
      132
     ]
    },
    "numpy.sin": {
     "line number": [
      132
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.harmonics.leastsq": {
  "data": {
   "shadows": "scipy.optimize.leastsq"
  },
  "type": "import"
 },
 "photutils.isophote.harmonics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.integrator": {
  "data": {
   "symbols_in_volume": {
    "photutils.isophote.integrator.BILINEAR": {
     "line number": [
      353
     ]
    },
    "photutils.isophote.integrator.MEAN": {
     "line number": [
      354
     ]
    },
    "photutils.isophote.integrator.MEDIAN": {
     "line number": [
      355
     ]
    },
    "photutils.isophote.integrator.NEAREST_NEIGHBOR": {
     "line number": [
      352
     ]
    },
    "photutils.isophote.integrator._BiLinearIntegrator": {
     "line number": [
      353
     ]
    },
    "photutils.isophote.integrator._MeanIntegrator": {
     "line number": [
      354
     ]
    },
    "photutils.isophote.integrator._MedianIntegrator": {
     "line number": [
      355
     ]
    },
    "photutils.isophote.integrator._NearestNeighborIntegrator": {
     "line number": [
      352
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.isophote.integrator.BILINEAR": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.isophote.integrator.INTEGRATORS": {
  "data": {
   "lineno": 351
  },
  "type": "constant"
 },
 "photutils.isophote.integrator.MEAN": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.isophote.integrator.MEDIAN": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.isophote.integrator.NEAREST_NEIGHBOR": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.isophote.integrator._AreaIntegrator": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": {
    "photutils.isophote.integrator._Integrator": {
     "line number": [
      211
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.integrator._AreaIntegrator.__init__": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": {
    "photutils.isophote.integrator.BILINEAR": {
     "line number": [
      218
     ]
    },
    "super": {
     "line number": [
      214
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.integrator._AreaIntegrator.accumulate": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      311
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.integrator._AreaIntegrator.compute_sample_value": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      314
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.integrator._AreaIntegrator.get_polar_angle_step": {
  "data": {
   "lineno": 296
  },
  "type": "function"
 },
 "photutils.isophote.integrator._AreaIntegrator.get_sector_area": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "photutils.isophote.integrator._AreaIntegrator.initialize_accumulator": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.integrator._AreaIntegrator.integrate": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "int": {
     "line number": [
      237,
      238,
      239,
      240
     ]
    },
    "len": {
     "line number": [
      288
     ]
    },
    "max": {
     "line number": [
      239,
      240
     ]
    },
    "min": {
     "line number": [
      237,
      238
     ]
    },
    "numpy.ma.masked": {
     "line number": [
      275
     ]
    },
    "photutils.isophote.integrator.math": {
     "line number": [
      265,
      266,
      267
     ]
    },
    "range": {
     "line number": [
      253,
      254,
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.integrator._AreaIntegrator.is_area": {
  "data": {
   "lineno": 304
  },
  "type": "function"
 },
 "photutils.isophote.integrator._BiLinearIntegrator": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "photutils.isophote.integrator._Integrator": {
     "line number": [
      170
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.integrator._BiLinearIntegrator.get_polar_angle_step": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "photutils.isophote.integrator._BiLinearIntegrator.get_sector_area": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "photutils.isophote.integrator._BiLinearIntegrator.integrate": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": {
    "int": {
     "line number": [
      178,
      179
     ]
    },
    "numpy.ma.masked": {
     "line number": [
      189,
      190,
      191,
      192
     ]
    },
    "photutils.isophote.integrator.math": {
     "line number": [
      176,
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.integrator._BiLinearIntegrator.is_area": {
  "data": {
   "lineno": 207
  },
  "type": "function"
 },
 "photutils.isophote.integrator._Integrator": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "photutils.isophote.integrator._Integrator.__init__": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "range": {
     "line number": [
      48,
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.integrator._Integrator._reset": {
  "data": {
   "lineno": 69
  },
  "type": "function"
 },
 "photutils.isophote.integrator._Integrator._store_results": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "photutils.isophote.integrator._Integrator.get_polar_angle_step": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.integrator._Integrator.get_sector_area": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.integrator._Integrator.integrate": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.integrator._Integrator.is_area": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.integrator._MeanIntegrator": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "photutils.isophote.integrator._AreaIntegrator": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.integrator._MeanIntegrator.accumulate": {
  "data": {
   "lineno": 324
  },
  "type": "function"
 },
 "photutils.isophote.integrator._MeanIntegrator.compute_sample_value": {
  "data": {
   "lineno": 329
  },
  "type": "function"
 },
 "photutils.isophote.integrator._MeanIntegrator.initialize_accumulator": {
  "data": {
   "lineno": 319
  },
  "type": "function"
 },
 "photutils.isophote.integrator._MedianIntegrator": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": {
    "photutils.isophote.integrator._AreaIntegrator": {
     "line number": [
      333
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.integrator._MedianIntegrator.accumulate": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "photutils.isophote.integrator._MedianIntegrator.compute_sample_value": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": {
    "int": {
     "line number": [
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.integrator._MedianIntegrator.initialize_accumulator": {
  "data": {
   "lineno": 335
  },
  "type": "function"
 },
 "photutils.isophote.integrator._NearestNeighborIntegrator": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "photutils.isophote.integrator._Integrator": {
     "line number": [
      142
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.integrator._NearestNeighborIntegrator.get_polar_angle_step": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "photutils.isophote.integrator._NearestNeighborIntegrator.get_sector_area": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "photutils.isophote.integrator._NearestNeighborIntegrator.integrate": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "int": {
     "line number": [
      148,
      150
     ]
    },
    "numpy.ma.masked": {
     "line number": [
      157
     ]
    },
    "photutils.isophote.integrator.math": {
     "line number": [
      148,
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.integrator._NearestNeighborIntegrator.is_area": {
  "data": {
   "lineno": 166
  },
  "type": "function"
 },
 "photutils.isophote.integrator.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.isophote.integrator.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "photutils.isophote.integrator.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.isophote.model": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.model.LSQUnivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.LSQUnivariateSpline"
  },
  "type": "import"
 },
 "photutils.isophote.model.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.isophote.model.build_ellipse_model": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "EllipseGeometry": {
     "line number": [
      107
     ]
    },
    "float": {
     "line number": [
      133,
      134
     ]
    },
    "int": {
     "line number": [
      128,
      129
     ]
    },
    "len": {
     "line number": [
      101
     ]
    },
    "max": {
     "line number": [
      150,
      151
     ]
    },
    "numpy.arange": {
     "line number": [
      55
     ]
    },
    "numpy.cos": {
     "line number": [
      121,
      123,
      126
     ]
    },
    "numpy.pi": {
     "line number": [
      115
     ]
    },
    "numpy.sin": {
     "line number": [
      120,
      122,
      127
     ]
    },
    "numpy.where": {
     "line number": [
      91,
      96,
      157,
      163
     ]
    },
    "numpy.zeros": {
     "line number": [
      93,
      94
     ]
    },
    "range": {
     "line number": [
      101
     ]
    },
    "scipy.interpolate.LSQUnivariateSpline": {
     "line number": [
      63,
      65,
      67,
      69,
      71,
      73,
      75,
      77,
      79,
      81
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.sample": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.sample.CentralEllipseSample": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "photutils.isophote.sample.EllipseSample": {
     "line number": [
      387
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.sample.CentralEllipseSample._extract": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      421,
      421,
      421,
      422
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.sample.CentralEllipseSample.update": {
  "data": {
   "lineno": 393
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "photutils.isophote.sample.EllipseSample.__init__": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "EllipseGeometry": {
     "line number": [
      113
     ]
    },
    "photutils.isophote.sample.copy": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample._extract": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "len": {
     "line number": [
      238
     ]
    },
    "min": {
     "line number": [
      226
     ]
    },
    "numpy.array": {
     "line number": [
      231,
      241,
      241,
      241,
      242
     ]
    },
    "numpy.mean": {
     "line number": [
      231
     ]
    },
    "numpy.pi": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample._get_gradient": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": {
    "len": {
     "line number": [
      355,
      356
     ]
    },
    "numpy.mean": {
     "line number": [
      348
     ]
    },
    "numpy.sqrt": {
     "line number": [
      355
     ]
    },
    "numpy.std": {
     "line number": [
      352,
      353
     ]
    },
    "photutils.isophote.sample.EllipseSample": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample._iter_sigma_clip": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": {
    "len": {
     "line number": [
      272
     ]
    },
    "numpy.array": {
     "line number": [
      265
     ]
    },
    "numpy.mean": {
     "line number": [
      266
     ]
    },
    "numpy.std": {
     "line number": [
      267
     ]
    },
    "range": {
     "line number": [
      272
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample._sigma_clip": {
  "data": {
   "lineno": 246,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      253,
      253,
      253
     ]
    },
    "range": {
     "line number": [
      248
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample.coordinates": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": {
    "len": {
     "line number": [
      374,
      375,
      377
     ]
    },
    "numpy.cos": {
     "line number": [
      378
     ]
    },
    "numpy.sin": {
     "line number": [
      381
     ]
    },
    "numpy.zeros": {
     "line number": [
      374,
      375
     ]
    },
    "range": {
     "line number": [
      377
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample.extract": {
  "data": {
   "lineno": 135
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample.update": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      332
     ]
    },
    "numpy.mean": {
     "line number": [
      297
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.sample.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.isophote.sample.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "photutils.isophote.sample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.tests.make_test_data": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.tests.make_test_data.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.isophote.tests.make_test_data.make_fits_test_image": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": {
    "astropy.io.fits.HDUList": {
     "line number": [
      101
     ]
    },
    "astropy.io.fits.PrimaryHDU": {
     "line number": [
      100
     ]
    },
    "photutils.isophote.tests.make_test_data.make_test_image": {
     "line number": [
      97
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.make_test_data.make_test_image": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "EllipseGeometry": {
     "line number": [
      54
     ]
    },
    "int": {
     "line number": [
      64,
      64,
      64,
      64,
      65,
      65,
      66,
      66,
      67,
      67
     ]
    },
    "make_noise_image": {
     "line number": [
      69
     ]
    },
    "numpy.exp": {
     "line number": [
      61
     ]
    },
    "numpy.mgrid": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.make_test_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_angles": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.tests.test_angles.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_angles.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_angles.sector_area": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      13,
      14,
      16
     ]
    },
    "numpy.cos": {
     "line number": [
      12
     ]
    },
    "photutils.isophote.tests.test_angles.math": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_angles.test_angles": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "abs": {
     "line number": [
      52
     ]
    },
    "max": {
     "line number": [
      31,
      55
     ]
    },
    "min": {
     "line number": [
      29,
      31,
      55,
      62
     ]
    },
    "numpy.cos": {
     "line number": [
      35,
      36,
      45,
      46
     ]
    },
    "numpy.pi": {
     "line number": [
      39
     ]
    },
    "numpy.sin": {
     "line number": [
      35,
      36,
      45,
      46
     ]
    },
    "numpy.sqrt": {
     "line number": [
      35,
      36,
      45,
      46
     ]
    },
    "photutils.isophote.tests.test_angles.sector_area": {
     "line number": [
      48,
      49,
      50,
      51
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      21
     ]
    },
    "make_test_image": {
     "line number": [
      33
     ]
    },
    "numpy.pi": {
     "line number": [
      27
     ]
    },
    "photutils.isophote.tests.test_ellipse.PA": {
     "line number": [
      33
     ]
    },
    "photutils.isophote.tests.test_ellipse.POS": {
     "line number": [
      33,
      33
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.isophote.tests.test_ellipse.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_ellipse.HAS_SCIPY": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_ellipse.OFFSET_GALAXY": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_ellipse.PA": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_ellipse.POS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "photutils.isophote.tests.test_ellipse.pytest": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.setup_class": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "make_test_image": {
     "line number": [
      41
     ]
    },
    "photutils.isophote.tests.test_ellipse.PA": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_basic": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "Ellipse": {
     "line number": [
      57
     ]
    },
    "isinstance": {
     "line number": [
      60,
      62
     ]
    },
    "len": {
     "line number": [
      61,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_ellipse_shape": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "Ellipse": {
     "line number": [
      141
     ]
    },
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      136
     ]
    },
    "g": {
     "line number": [
      140
     ]
    },
    "len": {
     "line number": [
      143
     ]
    },
    "make_noise_image": {
     "line number": [
      138
     ]
    },
    "numpy.mgrid": {
     "line number": [
      137
     ]
    },
    "numpy.pi": {
     "line number": [
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_find_center": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "EllipseGeometry": {
     "line number": [
      51
     ]
    },
    "astropy.io.fits.open": {
     "line number": [
      47
     ]
    },
    "get_path": {
     "line number": [
      45
     ]
    },
    "numpy.pi": {
     "line number": [
      51
     ]
    },
    "photutils.isophote.tests.test_ellipse.pytest": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_fit_one_ellipse": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "Ellipse": {
     "line number": [
      88
     ]
    },
    "isinstance": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_linear": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "Ellipse": {
     "line number": [
      72
     ]
    },
    "photutils.isophote.tests.test_ellipse.math": {
     "line number": [
      80,
      82,
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_offcenter_fail": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "Ellipse": {
     "line number": [
      98
     ]
    },
    "len": {
     "line number": [
      101
     ]
    },
    "photutils.isophote.tests.test_ellipse.OFFSET_GALAXY": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_offcenter_fit": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": {
    "Ellipse": {
     "line number": [
      107
     ]
    },
    "EllipseGeometry": {
     "line number": [
      106
     ]
    },
    "len": {
     "line number": [
      112
     ]
    },
    "photutils.isophote.tests.test_ellipse.OFFSET_GALAXY": {
     "line number": [
      107
     ]
    },
    "photutils.isophote.tests.test_ellipse.PA": {
     "line number": [
      106
     ]
    },
    "photutils.isophote.tests.test_ellipse.POS": {
     "line number": [
      106,
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_offcenter_go_beyond_frame": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "Ellipse": {
     "line number": [
      119
     ]
    },
    "EllipseGeometry": {
     "line number": [
      118
     ]
    },
    "len": {
     "line number": [
      123
     ]
    },
    "numpy.any": {
     "line number": [
      129
     ]
    },
    "photutils.isophote.tests.test_ellipse.OFFSET_GALAXY": {
     "line number": [
      119
     ]
    },
    "photutils.isophote.tests.test_ellipse.PA": {
     "line number": [
      118
     ]
    },
    "photutils.isophote.tests.test_ellipse.POS": {
     "line number": [
      118,
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipseOnRealData": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "photutils.isophote.tests.test_ellipse.pytest": {
     "line number": [
      146,
      147
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipseOnRealData.test_basic": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "Ellipse": {
     "line number": [
      158
     ]
    },
    "EllipseGeometry": {
     "line number": [
      156
     ]
    },
    "astropy.io.fits.open": {
     "line number": [
      152
     ]
    },
    "g": {
     "line number": [
      156,
      158
     ]
    },
    "get_path": {
     "line number": [
      150
     ]
    },
    "len": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_ellipse.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_ellipse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_ellipse.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_ellipse.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_fitter": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      23
     ]
    },
    "make_test_image": {
     "line number": [
      27
     ]
    },
    "numpy.array": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.isophote.tests.test_fitter.DATA": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_fitter.DEFAULT_FIX": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_fitter.DEFAULT_POS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_fitter.HAS_SCIPY": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_fitter.TestM51": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "photutils.isophote.tests.test_fitter.pytest": {
     "line number": [
      164,
      165
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_fitter.TestM51.setup_class": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      170
     ]
    },
    "get_path": {
     "line number": [
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.TestM51.test_m51": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": {
    "EllipseFitter": {
     "line number": [
      190,
      199
     ]
    },
    "EllipseSample": {
     "line number": [
      188,
      197
     ]
    },
    "numpy.pi": {
     "line number": [
      189,
      198
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      194,
      203
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.TestM51.test_m51_central": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "CentralEllipseFitter": {
     "line number": [
      223
     ]
    },
    "CentralEllipseSample": {
     "line number": [
      222
     ]
    },
    "EllipseGeometry": {
     "line number": [
      221
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.TestM51.test_m51_outer": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": {
    "EllipseFitter": {
     "line number": [
      212
     ]
    },
    "EllipseSample": {
     "line number": [
      209
     ]
    },
    "numpy.any": {
     "line number": [
      215
     ]
    },
    "numpy.pi": {
     "line number": [
      210
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_fitter.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_fitter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_fitter.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_fitter.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_fitter.test_fitting_all": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "EllipseFitter": {
     "line number": [
      141,
      158
     ]
    },
    "EllipseSample": {
     "line number": [
      140,
      156
     ]
    },
    "make_test_image": {
     "line number": [
      134
     ]
    },
    "numpy.pi": {
     "line number": [
      132
     ]
    },
    "photutils.isophote.tests.test_fitter.DEFAULT_POS": {
     "line number": [
      131
     ]
    },
    "photutils.isophote.tests.test_fitter.pytest": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.test_fitting_eps": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "EllipseFitter": {
     "line number": [
      87
     ]
    },
    "EllipseSample": {
     "line number": [
      86
     ]
    },
    "isinstance": {
     "line number": [
      90
     ]
    },
    "photutils.isophote.tests.test_fitter.DATA": {
     "line number": [
      86
     ]
    },
    "photutils.isophote.tests.test_fitter.pytest": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.test_fitting_pa": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "EllipseFitter": {
     "line number": [
      102
     ]
    },
    "EllipseSample": {
     "line number": [
      101
     ]
    },
    "make_test_image": {
     "line number": [
      98
     ]
    },
    "numpy.pi": {
     "line number": [
      98,
      106,
      107
     ]
    },
    "photutils.isophote.tests.test_fitter.pytest": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.test_fitting_raw": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      53
     ]
    },
    "abs": {
     "line number": [
      61,
      61,
      62,
      62,
      63,
      63
     ]
    },
    "fit_first_and_second_harmonics": {
     "line number": [
      57
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      70
     ]
    },
    "photutils.isophote.tests.test_fitter.DATA": {
     "line number": [
      53
     ]
    },
    "photutils.isophote.tests.test_fitter.DEFAULT_FIX": {
     "line number": [
      54
     ]
    },
    "photutils.isophote.tests.test_fitter.pytest": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.test_fitting_small_radii": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "EllipseFitter": {
     "line number": [
      76
     ]
    },
    "EllipseSample": {
     "line number": [
      75
     ]
    },
    "isinstance": {
     "line number": [
      79
     ]
    },
    "photutils.isophote.tests.test_fitter.DATA": {
     "line number": [
      75
     ]
    },
    "photutils.isophote.tests.test_fitter.pytest": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.test_fitting_xy": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "EllipseFitter": {
     "line number": [
      117
     ]
    },
    "EllipseSample": {
     "line number": [
      116
     ]
    },
    "make_test_image": {
     "line number": [
      113
     ]
    },
    "photutils.isophote.tests.test_fitter.DEFAULT_POS": {
     "line number": [
      112
     ]
    },
    "photutils.isophote.tests.test_fitter.pytest": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.test_gradient": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      34
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      37,
      38,
      39,
      40,
      41
     ]
    },
    "photutils.isophote.tests.test_fitter.DATA": {
     "line number": [
      34
     ]
    },
    "photutils.isophote.tests.test_fitter.DEFAULT_FIX": {
     "line number": [
      35
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.tests.test_geometry.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_geometry.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_geometry.test_area": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "EllipseGeometry": {
     "line number": [
      66
     ]
    },
    "numpy.pi": {
     "line number": [
      69
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      70,
      71,
      75,
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_area2": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": {
    "EllipseGeometry": {
     "line number": [
      81
     ]
    },
    "numpy.pi": {
     "line number": [
      84,
      89
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      85,
      86,
      90,
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_bounding_ellipses": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "EllipseGeometry": {
     "line number": [
      125
     ]
    },
    "numpy.pi": {
     "line number": [
      125
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_geometry": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "EllipseGeometry": {
     "line number": [
      15
     ]
    },
    "numpy.pi": {
     "line number": [
      15
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      19,
      24,
      25,
      26,
      27
     ]
    },
    "photutils.isophote.tests.test_geometry.pytest": {
     "line number": [
      13
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_polar_angle_sector_limits": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "EllipseGeometry": {
     "line number": [
      117
     ]
    },
    "numpy.pi": {
     "line number": [
      117,
      118
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      120,
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_radius": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "EllipseGeometry": {
     "line number": [
      131
     ]
    },
    "numpy.pi": {
     "line number": [
      131,
      135
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      133,
      136
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_reset_sma": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "EllipseGeometry": {
     "line number": [
      95,
      100
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      97,
      98,
      102,
      103
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_to_polar": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "EllipseGeometry": {
     "line number": [
      32,
      48
     ]
    },
    "numpy.pi": {
     "line number": [
      40,
      45,
      48,
      52,
      56,
      61
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      35,
      36,
      39,
      40,
      44,
      45,
      51,
      52,
      55,
      56,
      60,
      61
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_update_sma": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "EllipseGeometry": {
     "line number": [
      107,
      111
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      109,
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.isophote.tests.test_harmonics.HAS_SCIPY": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_harmonics.TestFitEllipseSamples": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "photutils.isophote.tests.test_harmonics.pytest": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_harmonics.TestFitEllipseSamples.setup_class": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "make_test_image": {
     "line number": [
      111,
      114
     ]
    },
    "numpy.pi": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.TestFitEllipseSamples.test_fit_ellipsesample_1": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      117
     ]
    },
    "first_and_second_harmonic_function": {
     "line number": [
      130
     ]
    },
    "fit_first_and_second_harmonics": {
     "line number": [
      120
     ]
    },
    "numpy.array": {
     "line number": [
      131
     ]
    },
    "numpy.mean": {
     "line number": [
      123,
      124,
      125,
      126,
      127,
      134
     ]
    },
    "numpy.std": {
     "line number": [
      135
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      123,
      124,
      125,
      126,
      127,
      134,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.TestFitEllipseSamples.test_fit_ellipsesample_2": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      139
     ]
    },
    "fit_first_and_second_harmonics": {
     "line number": [
      142
     ]
    },
    "numpy.mean": {
     "line number": [
      145,
      146,
      147,
      148,
      149
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      145,
      146,
      147,
      148,
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.TestFitEllipseSamples.test_fit_ellipsesample_3": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      153
     ]
    },
    "fit_first_and_second_harmonics": {
     "line number": [
      156
     ]
    },
    "numpy.mean": {
     "line number": [
      159,
      160,
      161,
      162,
      163
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      159,
      160,
      161,
      162,
      163
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.TestFitEllipseSamples.test_fit_ellipsesample_4": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      166
     ]
    },
    "fit_first_and_second_harmonics": {
     "line number": [
      169
     ]
    },
    "numpy.mean": {
     "line number": [
      172,
      173,
      174,
      175,
      176
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      172,
      173,
      174,
      175,
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.TestFitEllipseSamples.test_fit_upper_harmonics": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "EllipseFitter": {
     "line number": [
      181
     ]
    },
    "EllipseSample": {
     "line number": [
      180
     ]
    },
    "make_test_image": {
     "line number": [
      179
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      184,
      185,
      186,
      187,
      189,
      190,
      191,
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_harmonics.leastsq": {
  "data": {
   "shadows": "scipy.optimize.leastsq"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_harmonics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_harmonics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_harmonics.test_harmonics_1": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "numpy.linspace": {
     "line number": [
      28
     ]
    },
    "numpy.mean": {
     "line number": [
      36,
      53
     ]
    },
    "numpy.pi": {
     "line number": [
      28
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      32
     ]
    },
    "numpy.sin": {
     "line number": [
      33,
      50
     ]
    },
    "numpy.std": {
     "line number": [
      37,
      54
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      53,
      54
     ]
    },
    "photutils.isophote.tests.test_harmonics.pytest": {
     "line number": [
      24
     ]
    },
    "scipy.optimize.leastsq": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.test_harmonics_1.optimize_func": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "numpy.sin": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.test_harmonics_2": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "fit_first_and_second_harmonics": {
     "line number": [
      72
     ]
    },
    "numpy.cos": {
     "line number": [
      69,
      70,
      74,
      75
     ]
    },
    "numpy.linspace": {
     "line number": [
      61
     ]
    },
    "numpy.mean": {
     "line number": [
      78
     ]
    },
    "numpy.pi": {
     "line number": [
      61
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      68
     ]
    },
    "numpy.sin": {
     "line number": [
      69,
      69,
      74,
      74
     ]
    },
    "numpy.std": {
     "line number": [
      79
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      78,
      79
     ]
    },
    "photutils.isophote.tests.test_harmonics.pytest": {
     "line number": [
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.test_harmonics_3": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "fit_upper_harmonic": {
     "line number": [
      96
     ]
    },
    "numpy.cos": {
     "line number": [
      93,
      99
     ]
    },
    "numpy.linspace": {
     "line number": [
      87
     ]
    },
    "numpy.mean": {
     "line number": [
      103
     ]
    },
    "numpy.pi": {
     "line number": [
      87
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      92,
      98
     ]
    },
    "numpy.sin": {
     "line number": [
      93,
      99
     ]
    },
    "numpy.std": {
     "line number": [
      104
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      103,
      104
     ]
    },
    "photutils.isophote.tests.test_harmonics.pytest": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.tests.test_integrator.TestData": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": {
    "photutils.isophote.tests.test_integrator.pytest": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_integrator.TestData.make_sample": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      31
     ]
    },
    "len": {
     "line number": [
      34,
      35,
      35,
      36,
      36
     ]
    },
    "numpy.ma.masked_values": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestData.setup_class": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      22
     ]
    },
    "get_path": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestMasked": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": {
    "photutils.isophote.tests.test_integrator.TestData": {
     "line number": [
      132
     ]
    },
    "photutils.isophote.tests.test_integrator.pytest": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_integrator.TestMasked.test_bilinear": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "len": {
     "line number": [
      136
     ]
    },
    "numpy.max": {
     "line number": [
      141
     ]
    },
    "numpy.mean": {
     "line number": [
      138
     ]
    },
    "numpy.min": {
     "line number": [
      142
     ]
    },
    "numpy.std": {
     "line number": [
      139
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      138,
      139,
      141,
      142
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestMasked.test_mean": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "len": {
     "line number": [
      150
     ]
    },
    "numpy.max": {
     "line number": [
      155
     ]
    },
    "numpy.mean": {
     "line number": [
      152
     ]
    },
    "numpy.min": {
     "line number": [
      156
     ]
    },
    "numpy.std": {
     "line number": [
      153
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      152,
      153,
      155,
      156,
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestUnmasked": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "photutils.isophote.tests.test_integrator.TestData": {
     "line number": [
      42
     ]
    },
    "photutils.isophote.tests.test_integrator.pytest": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_integrator.TestUnmasked.test_bilinear": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "len": {
     "line number": [
      46
     ]
    },
    "numpy.max": {
     "line number": [
      51
     ]
    },
    "numpy.mean": {
     "line number": [
      48
     ]
    },
    "numpy.min": {
     "line number": [
      52
     ]
    },
    "numpy.std": {
     "line number": [
      49
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      48,
      49,
      51,
      52
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestUnmasked.test_bilinear_small": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "numpy.max": {
     "line number": [
      65
     ]
    },
    "numpy.mean": {
     "line number": [
      62
     ]
    },
    "numpy.min": {
     "line number": [
      66
     ]
    },
    "numpy.std": {
     "line number": [
      63
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      62,
      63,
      65,
      66
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestUnmasked.test_mean": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "len": {
     "line number": [
      88
     ]
    },
    "numpy.max": {
     "line number": [
      93
     ]
    },
    "numpy.mean": {
     "line number": [
      90
     ]
    },
    "numpy.min": {
     "line number": [
      94
     ]
    },
    "numpy.std": {
     "line number": [
      91
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      90,
      91,
      93,
      94,
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestUnmasked.test_mean_small": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "len": {
     "line number": [
      103
     ]
    },
    "numpy.max": {
     "line number": [
      108
     ]
    },
    "numpy.mean": {
     "line number": [
      105
     ]
    },
    "numpy.min": {
     "line number": [
      109
     ]
    },
    "numpy.std": {
     "line number": [
      106
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      105,
      106,
      108,
      109,
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestUnmasked.test_median": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "len": {
     "line number": [
      118
     ]
    },
    "numpy.max": {
     "line number": [
      123
     ]
    },
    "numpy.mean": {
     "line number": [
      120
     ]
    },
    "numpy.min": {
     "line number": [
      124
     ]
    },
    "numpy.std": {
     "line number": [
      121
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      120,
      121,
      123,
      124,
      126
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestUnmasked.test_nearest_neighbor": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "len": {
     "line number": [
      74
     ]
    },
    "numpy.max": {
     "line number": [
      79
     ]
    },
    "numpy.mean": {
     "line number": [
      76
     ]
    },
    "numpy.min": {
     "line number": [
      80
     ]
    },
    "numpy.std": {
     "line number": [
      77
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      76,
      77,
      79,
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_integrator.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_integrator.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_integrator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_integrator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_isophote": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      22
     ]
    },
    "numpy.array": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.isophote.tests.test_isophote.DEFAULT_FIX": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_isophote.HAS_SCIPY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_isophote.TestIsophote": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "photutils.isophote.tests.test_isophote.pytest": {
     "line number": [
      26,
      27
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_isophote.TestIsophote.setup_class": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "astropy.io.fits.open": {
     "line number": [
      32
     ]
    },
    "get_path": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophote.test_fit": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "EllipseFitter": {
     "line number": [
      40
     ]
    },
    "EllipseSample": {
     "line number": [
      39
     ]
    },
    "abs": {
     "line number": [
      53,
      54,
      65,
      66,
      67,
      68
     ]
    },
    "make_test_image": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophote.test_m51": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "EllipseFitter": {
     "line number": [
      72
     ]
    },
    "EllipseSample": {
     "line number": [
      71
     ]
    },
    "abs": {
     "line number": [
      105,
      106,
      107,
      108
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      90,
      91,
      92,
      93,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophote.test_m51_niter": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "EllipseFitter": {
     "line number": [
      115
     ]
    },
    "EllipseSample": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList": {
  "data": {
   "lineno": 122
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList.build_list": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      134
     ]
    },
    "Isophote": {
     "line number": [
      136
     ]
    },
    "IsophoteList": {
     "line number": [
      137
     ]
    },
    "float": {
     "line number": [
      134
     ]
    },
    "photutils.isophote.tests.test_isophote.DEFAULT_FIX": {
     "line number": [
      135
     ]
    },
    "range": {
     "line number": [
      133
     ]
    },
    "staticmethod": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList.setup_class": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": {
    "make_test_image": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList.test_basic_list": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      175
     ]
    },
    "Isophote": {
     "line number": [
      143,
      178
     ]
    },
    "float": {
     "line number": [
      149,
      151
     ]
    },
    "isinstance": {
     "line number": [
      143,
      148,
      149,
      150,
      151,
      152,
      153,
      154,
      155,
      156,
      157,
      158,
      159,
      160,
      161,
      162,
      163,
      164,
      165,
      166,
      167,
      168,
      169,
      170,
      171,
      174,
      175,
      178
     ]
    },
    "list": {
     "line number": [
      174
     ]
    },
    "numpy.ndarray": {
     "line number": [
      148,
      150,
      152,
      153,
      154,
      155,
      156,
      157,
      158,
      159,
      160,
      161,
      162,
      163,
      164,
      165,
      166,
      167,
      168,
      169,
      170,
      171
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList.test_combined": {
  "data": {
   "lineno": 215,
   "symbols_in_volume": {
    "IsophoteList": {
     "line number": [
      232,
      237
     ]
    },
    "isinstance": {
     "line number": [
      232,
      237
     ]
    },
    "len": {
     "line number": [
      222,
      227,
      233,
      234,
      238
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList.test_extend": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "IsophoteList": {
     "line number": [
      204
     ]
    },
    "isinstance": {
     "line number": [
      204
     ]
    },
    "len": {
     "line number": [
      186,
      187,
      189,
      196,
      205,
      206,
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList.test_slicing": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "len": {
     "line number": [
      211,
      212,
      213
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList.test_sort": {
  "data": {
   "lineno": 240
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_isophote.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_isophote.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_isophote.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_isophote.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_model": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.isophote.tests.test_model.HAS_SCIPY": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_model.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_model.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_model.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_model.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_model.test_model": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": {
    "Ellipse": {
     "line number": [
      34
     ]
    },
    "EllipseGeometry": {
     "line number": [
      33
     ]
    },
    "astropy.io.fits.open": {
     "line number": [
      29
     ]
    },
    "build_ellipse_model": {
     "line number": [
      36
     ]
    },
    "get_path": {
     "line number": [
      27
     ]
    },
    "numpy.mean": {
     "line number": [
      37,
      42,
      43
     ]
    },
    "numpy.pi": {
     "line number": [
      33
     ]
    },
    "photutils.isophote.tests.test_model.pytest": {
     "line number": [
      24,
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_model.test_model_minimum_radius": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "Ellipse": {
     "line number": [
      77
     ]
    },
    "EllipseGeometry": {
     "line number": [
      75
     ]
    },
    "astropy.io.fits.open": {
     "line number": [
      72
     ]
    },
    "build_ellipse_model": {
     "line number": [
      81
     ]
    },
    "numpy.mean": {
     "line number": [
      82
     ]
    },
    "numpy.pi": {
     "line number": [
      75
     ]
    },
    "os.path.abspath": {
     "line number": [
      70
     ]
    },
    "os.path.dirname": {
     "line number": [
      70
     ]
    },
    "os.path.join": {
     "line number": [
      70
     ]
    },
    "photutils.isophote.tests.test_model.pytest": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_model.test_model_simulated_data": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "Ellipse": {
     "line number": [
      52
     ]
    },
    "EllipseGeometry": {
     "line number": [
      51
     ]
    },
    "build_ellipse_model": {
     "line number": [
      54
     ]
    },
    "make_test_image": {
     "line number": [
      48
     ]
    },
    "numpy.mean": {
     "line number": [
      55,
      60,
      61
     ]
    },
    "numpy.pi": {
     "line number": [
      49,
      51
     ]
    },
    "photutils.isophote.tests.test_model.pytest": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_regression": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.isophote.tests.test_regression.HAS_SCIPY": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_regression.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_regression.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_regression.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_regression.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_regression.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_regression.test_regression": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": {
    "Ellipse": {
     "line number": [
      91
     ]
    },
    "IndexError": {
     "line number": [
      101
     ]
    },
    "abs": {
     "line number": [
      174,
      175,
      178,
      180,
      184,
      186,
      189,
      191
     ]
    },
    "astropy.io.fits.open": {
     "line number": [
      87
     ]
    },
    "astropy.table.Table.read": {
     "line number": [
      82
     ]
    },
    "get_path": {
     "line number": [
      85
     ]
    },
    "len": {
     "line number": [
      84
     ]
    },
    "numpy.pi": {
     "line number": [
      123,
      123
     ]
    },
    "os.path.abspath": {
     "line number": [
      81
     ]
    },
    "os.path.dirname": {
     "line number": [
      81
     ]
    },
    "os.path.join": {
     "line number": [
      81
     ]
    },
    "photutils.isophote.tests.test_regression.math": {
     "line number": [
      182,
      187
     ]
    },
    "photutils.isophote.tests.test_regression.pytest": {
     "line number": [
      68,
      69,
      72
     ]
    },
    "print": {
     "line number": [
      162,
      165,
      168,
      171
     ]
    },
    "range": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_sample": {
  "data": {
   "symbols_in_volume": {
    "make_test_image": {
     "line number": [
      16
     ]
    },
    "numpy.array": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.isophote.tests.test_sample.DATA": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_sample.DEFAULT_FIX": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_sample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_sample.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_sample.test_coordinates": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      44
     ]
    },
    "isinstance": {
     "line number": [
      48,
      49
     ]
    },
    "numpy.ndarray": {
     "line number": [
      48,
      49
     ]
    },
    "photutils.isophote.tests.test_sample.DATA": {
     "line number": [
      44
     ]
    },
    "photutils.isophote.tests.test_sample.DEFAULT_FIX": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_sample.test_scatter": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      35
     ]
    },
    "Isophote": {
     "line number": [
      37
     ]
    },
    "photutils.isophote.tests.test_sample.DATA": {
     "line number": [
      35
     ]
    },
    "photutils.isophote.tests.test_sample.DEFAULT_FIX": {
     "line number": [
      36
     ]
    },
    "photutils.isophote.tests.test_sample.pytest": {
     "line number": [
      20
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_sample.test_sclip": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "EllipseSample": {
     "line number": [
      53
     ]
    },
    "isinstance": {
     "line number": [
      57,
      58
     ]
    },
    "numpy.ndarray": {
     "line number": [
      57,
      58
     ]
    },
    "photutils.isophote.tests.test_sample.DATA": {
     "line number": [
      53
     ]
    },
    "photutils.isophote.tests.test_sample.DEFAULT_FIX": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.morphology": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.core": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.core.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "photutils.morphology.core.data_properties": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "SourceProperties": {
     "line number": [
      46
     ]
    },
    "int": {
     "line number": [
      44
     ]
    },
    "numpy.ones": {
     "line number": [
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.morphology.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.morphology.non_parametric": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.non_parametric.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "photutils.morphology.non_parametric.gini": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "numpy.abs": {
     "line number": [
      55,
      56
     ]
    },
    "numpy.arange": {
     "line number": [
      56
     ]
    },
    "numpy.mean": {
     "line number": [
      55
     ]
    },
    "numpy.ravel": {
     "line number": [
      53
     ]
    },
    "numpy.size": {
     "line number": [
      54
     ]
    },
    "numpy.sort": {
     "line number": [
      53
     ]
    },
    "numpy.sum": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.morphology.non_parametric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.morphology.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.tests.test_core": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      15
     ]
    },
    "numpy.array": {
     "line number": [
      23
     ]
    },
    "numpy.pi": {
     "line number": [
      23
     ]
    },
    "numpy.zeros": {
     "line number": [
      24
     ]
    },
    "photutils.morphology.tests.test_core.DATA": {
     "line number": [
      25,
      26,
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.morphology.tests.test_core.DATA": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.HAS_SKIMAGE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.THETAS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.XCS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.XSTDDEVS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.YCS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.YSTDDEVS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.test_data_properties": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "data_properties": {
     "line number": [
      34,
      35
     ]
    },
    "float": {
     "line number": [
      32
     ]
    },
    "getattr": {
     "line number": [
      37,
      38
     ]
    },
    "numpy.array": {
     "line number": [
      33
     ]
    },
    "numpy.ones": {
     "line number": [
      32
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      39,
      40
     ]
    },
    "photutils.morphology.tests.test_core.pytest": {
     "line number": [
      30
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.morphology.tests.test_non_parametric": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.tests.test_non_parametric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_non_parametric.test_gini": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "gini": {
     "line number": [
      20,
      21
     ]
    },
    "numpy.ones": {
     "line number": [
      16
     ]
    },
    "numpy.zeros": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "photutils.psf": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.epsf": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.psf.epsf.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.psf.epsf.EPSFBuilder": {
  "data": {
   "lineno": 233
  },
  "type": "class"
 },
 "photutils.psf.epsf.EPSFBuilder.__call__": {
  "data": {
   "lineno": 370
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder.__init__": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      348
     ]
    },
    "ValueError": {
     "line number": [
      327,
      332,
      352,
      357,
      363
     ]
    },
    "astropy.stats.SigmaClip": {
     "line number": [
      323,
      362
     ]
    },
    "fitter": {
     "line number": [
      347,
      349
     ]
    },
    "int": {
     "line number": [
      328,
      338,
      343,
      355
     ]
    },
    "isinstance": {
     "line number": [
      347,
      362
     ]
    },
    "len": {
     "line number": [
      329
     ]
    },
    "numpy.any": {
     "line number": [
      331
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      328
     ]
    },
    "numpy.repeat": {
     "line number": [
      330
     ]
    },
    "photutils.psf.epsf.EPSFFitter": {
     "line number": [
      320,
      347
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder._build_epsf_step": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": {
    "EPSFModel": {
     "line number": [
      771,
      786
     ]
    },
    "RuntimeWarning": {
     "line number": [
      746
     ]
    },
    "ValueError": {
     "line number": [
      731
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      747
     ]
    },
    "len": {
     "line number": [
      730
     ]
    },
    "numpy.any": {
     "line number": [
      758
     ]
    },
    "numpy.isfinite": {
     "line number": [
      757,
      763
     ]
    },
    "numpy.nanmedian": {
     "line number": [
      754
     ]
    },
    "photutils.psf.epsf.HAS_BOTTLENECK": {
     "line number": [
      751
     ]
    },
    "photutils.psf.epsf._interpolate_missing_data": {
     "line number": [
      759
     ]
    },
    "photutils.psf.epsf.bottleneck": {
     "line number": [
      752
     ]
    },
    "photutils.psf.epsf.copy": {
     "line number": [
      739
     ]
    },
    "photutils.psf.epsf.warnings": {
     "line number": [
      745,
      746,
      747
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder._create_initial_epsf": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": {
    "EPSFModel": {
     "line number": [
      444
     ]
    },
    "float": {
     "line number": [
      434
     ]
    },
    "int": {
     "line number": [
      417,
      425,
      427
     ]
    },
    "len": {
     "line number": [
      418
     ]
    },
    "numpy.array": {
     "line number": [
      429
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      417
     ]
    },
    "numpy.ceil": {
     "line number": [
      424,
      426
     ]
    },
    "numpy.repeat": {
     "line number": [
      419
     ]
    },
    "numpy.zeros": {
     "line number": [
      434
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder._init_img_params": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "len": {
     "line number": [
      382
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      381
     ]
    },
    "numpy.repeat": {
     "line number": [
      383
     ]
    },
    "staticmethod": {
     "line number": [
      373
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder._recenter_epsf": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": {
    "EPSFModel": {
     "line number": [
      635
     ]
    },
    "TypeError": {
     "line number": [
      673,
      679
     ]
    },
    "astropy.nddata.utils.overlap_slices": {
     "line number": [
      660
     ]
    },
    "centroid_func": {
     "line number": [
      670,
      677,
      682
     ]
    },
    "float": {
     "line number": [
      642
     ]
    },
    "numpy.indices": {
     "line number": [
      642
     ]
    },
    "numpy.isfinite": {
     "line number": [
      666
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder._resample_residual": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": {
    "_py2intround": {
     "line number": [
      493,
      494
     ]
    },
    "int": {
     "line number": [
      489,
      491
     ]
    },
    "numpy.full": {
     "line number": [
      496
     ]
    },
    "numpy.logical_and": {
     "line number": [
      498,
      498,
      500
     ]
    },
    "numpy.nan": {
     "line number": [
      496
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder._resample_residuals": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      529
     ]
    },
    "numpy.zeros": {
     "line number": [
      528
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder._smooth_epsf": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      592
     ]
    },
    "isinstance": {
     "line number": [
      588
     ]
    },
    "numpy.array": {
     "line number": [
      563,
      576
     ]
    },
    "numpy.ndarray": {
     "line number": [
      588
     ]
    },
    "scipy.ndimage.convolve": {
     "line number": [
      594
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder.build_epsf": {
  "data": {
   "lineno": 791,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      853
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      846
     ]
    },
    "bool": {
     "line number": [
      816
     ]
    },
    "numpy.all": {
     "line number": [
      822,
      852
     ]
    },
    "numpy.any": {
     "line number": [
      857
     ]
    },
    "numpy.array": {
     "line number": [
      850
     ]
    },
    "numpy.float64": {
     "line number": [
      866
     ]
    },
    "numpy.logical_not": {
     "line number": [
      865
     ]
    },
    "numpy.max": {
     "line number": [
      823
     ]
    },
    "numpy.sum": {
     "line number": [
      866
     ]
    },
    "numpy.zeros": {
     "line number": [
      816
     ]
    },
    "photutils.psf.epsf.time": {
     "line number": [
      825,
      871
     ]
    },
    "photutils.psf.epsf.warnings": {
     "line number": [
      843,
      845
     ]
    },
    "print": {
     "line number": [
      834
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFFitter": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "photutils.psf.epsf.EPSFFitter.__call__": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "EPSFStars": {
     "line number": [
      143
     ]
    },
    "LinkedEPSFStar": {
     "line number": [
      134
     ]
    },
    "TypeError": {
     "line number": [
      111,
      138
     ]
    },
    "isinstance": {
     "line number": [
      110,
      119,
      125
     ]
    },
    "len": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFFitter.__init__": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      71
     ]
    },
    "any": {
     "line number": [
      70
     ]
    },
    "astropy.modeling.fitting.LevMarLSQFitter": {
     "line number": [
      58
     ]
    },
    "hasattr": {
     "line number": [
      62
     ]
    },
    "int": {
     "line number": [
      65
     ]
    },
    "len": {
     "line number": [
      66
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      65
     ]
    },
    "numpy.repeat": {
     "line number": [
      67
     ]
    },
    "photutils.psf.epsf.copy": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFFitter._fit_star": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      203
     ]
    },
    "astropy.nddata.utils.NoOverlapError": {
     "line number": [
      161
     ]
    },
    "astropy.nddata.utils.PartialOverlapError": {
     "line number": [
      161
     ]
    },
    "astropy.nddata.utils.overlap_slices": {
     "line number": [
      158
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      166
     ]
    },
    "fitter": {
     "line number": [
      201,
      205
     ]
    },
    "fitter.fit_info": {
     "line number": [
      210
     ]
    },
    "float": {
     "line number": [
      191
     ]
    },
    "numpy.indices": {
     "line number": [
      191
     ]
    },
    "photutils.psf.epsf.copy": {
     "line number": [
      168,
      210,
      221
     ]
    },
    "photutils.psf.epsf.warnings": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf.HAS_BOTTLENECK": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.psf.epsf.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.epsf.NoOverlapError": {
  "data": {
   "shadows": "astropy.nddata.utils.NoOverlapError"
  },
  "type": "import"
 },
 "photutils.psf.epsf.PartialOverlapError": {
  "data": {
   "shadows": "astropy.nddata.utils.PartialOverlapError"
  },
  "type": "import"
 },
 "photutils.psf.epsf.SigmaClip": {
  "data": {
   "shadows": "astropy.stats.SigmaClip"
  },
  "type": "import"
 },
 "photutils.psf.epsf.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.psf.epsf._interpolate_missing_data": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      911,
      914,
      925
     ]
    },
    "interpol": {
     "line number": [
      928
     ]
    },
    "len": {
     "line number": [
      910
     ]
    },
    "numpy.array": {
     "line number": [
      908
     ]
    },
    "numpy.dstack": {
     "line number": [
      917,
      927
     ]
    },
    "numpy.indices": {
     "line number": [
      916
     ]
    },
    "scipy.interpolate.CloughTocher2DInterpolator": {
     "line number": [
      923
     ]
    },
    "scipy.interpolate.NearestNDInterpolator": {
     "line number": [
      921
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf.bottleneck": {
  "data": {
   "shadows": "bottleneck"
  },
  "type": "import"
 },
 "photutils.psf.epsf.convolve": {
  "data": {
   "shadows": "scipy.ndimage.convolve"
  },
  "type": "import"
 },
 "photutils.psf.epsf.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "photutils.psf.epsf.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "photutils.psf.epsf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.epsf.overlap_slices": {
  "data": {
   "shadows": "astropy.nddata.utils.overlap_slices"
  },
  "type": "import"
 },
 "photutils.psf.epsf.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "photutils.psf.epsf.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.epsf_stars.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.EPSFStar": {
  "data": {
   "lineno": 24
  },
  "type": "class"
 },
 "photutils.psf.epsf_stars.EPSFStar.__array__": {
  "data": {
   "lineno": 96
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.__init__": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      72
     ]
    },
    "float": {
     "line number": [
      74,
      76
     ]
    },
    "numpy.any": {
     "line number": [
      82
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      67,
      74
     ]
    },
    "numpy.asarray": {
     "line number": [
      87
     ]
    },
    "numpy.isfinite": {
     "line number": [
      81
     ]
    },
    "numpy.logical_not": {
     "line number": [
      81
     ]
    },
    "numpy.ones_like": {
     "line number": [
      76
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._data_values": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._data_values_normalized": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      274
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._weight_values": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      283
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._xidx": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      232
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._xidx_centered": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "property": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._xy_idx": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      222
     ]
    },
    "numpy.indices": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._yidx": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      241
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._yidx_centered": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": {
    "property": {
     "line number": [
      259
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.bbox": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      156
     ]
    },
    "astropy.utils.lazyproperty": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.center": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "property": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.compute_residual_image": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.cutout_center": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      125
     ]
    },
    "len": {
     "line number": [
      124
     ]
    },
    "numpy.asarray": {
     "line number": [
      128
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.data": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "property": {
     "line number": [
      104
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.estimate_flux": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": {
    "_interpolate_missing_data": {
     "line number": [
      171,
      173
     ]
    },
    "float": {
     "line number": [
      176,
      179
     ]
    },
    "numpy.any": {
     "line number": [
      170
     ]
    },
    "numpy.sum": {
     "line number": [
      176,
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.register_epsf": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": {
    "float": {
     "line number": [
      198
     ]
    },
    "numpy.indices": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.slices": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      139
     ]
    },
    "slice": {
     "line number": [
      146,
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars": {
  "data": {
   "lineno": 292
  },
  "type": "class"
 },
 "photutils.psf.epsf_stars.EPSFStars.__delitem__": {
  "data": {
   "lineno": 317
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.__getattr__": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      327,
      329
     ]
    },
    "numpy.array": {
     "line number": [
      327
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.__getitem__": {
  "data": {
   "lineno": 314
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.__init__": {
  "data": {
   "lineno": 302,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      308
     ]
    },
    "isinstance": {
     "line number": [
      303,
      305
     ]
    },
    "list": {
     "line number": [
      305
     ]
    },
    "photutils.psf.epsf_stars.EPSFStar": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.__iter__": {
  "data": {
   "lineno": 320
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.__len__": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "len": {
     "line number": [
      312
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars._getattr_flat": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      335,
      337
     ]
    },
    "isinstance": {
     "line number": [
      334
     ]
    },
    "numpy.array": {
     "line number": [
      339
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars._max_shape": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      434
     ]
    },
    "numpy.max": {
     "line number": [
      441
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.all_good_stars": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": {
    "property": {
     "line number": [
      386
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.all_stars": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      369
     ]
    },
    "isinstance": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.center_flat": {
  "data": {
   "lineno": 355,
   "symbols_in_volume": {
    "property": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.cutout_center_flat": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "property": {
     "line number": [
      341
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.n_all_stars": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      413
     ]
    },
    "len": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.n_good_stars": {
  "data": {
   "lineno": 423,
   "symbols_in_volume": {
    "len": {
     "line number": [
      432
     ]
    },
    "property": {
     "line number": [
      423
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.n_stars": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      403
     ]
    },
    "len": {
     "line number": [
      411
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.LinkedEPSFStar": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": {
    "photutils.psf.epsf_stars.EPSFStars": {
     "line number": [
      445
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.epsf_stars.LinkedEPSFStar.__init__": {
  "data": {
   "lineno": 461,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      464,
      467
     ]
    },
    "isinstance": {
     "line number": [
      463
     ]
    },
    "photutils.psf.epsf_stars.EPSFStar": {
     "line number": [
      463
     ]
    },
    "super": {
     "line number": [
      470
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.LinkedEPSFStar.constrain_centers": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      503,
      532
     ]
    },
    "ValueError": {
     "line number": [
      508
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      491
     ]
    },
    "astropy.wcs.WCS": {
     "line number": [
      504
     ]
    },
    "isinstance": {
     "line number": [
      504
     ]
    },
    "len": {
     "line number": [
      484
     ]
    },
    "numpy.arctan2": {
     "line number": [
      521,
      522
     ]
    },
    "numpy.array": {
     "line number": [
      536
     ]
    },
    "numpy.cos": {
     "line number": [
      515,
      515,
      516
     ]
    },
    "numpy.hypot": {
     "line number": [
      520
     ]
    },
    "numpy.logical_not": {
     "line number": [
      487
     ]
    },
    "numpy.mean": {
     "line number": [
      515,
      516,
      517
     ]
    },
    "numpy.pi": {
     "line number": [
      513,
      514,
      523,
      524
     ]
    },
    "numpy.sin": {
     "line number": [
      516,
      517
     ]
    },
    "numpy.transpose": {
     "line number": [
      512
     ]
    },
    "photutils.psf.epsf_stars.warnings": {
     "line number": [
      489
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.NoOverlapError": {
  "data": {
   "shadows": "astropy.nddata.utils.NoOverlapError"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.PartialOverlapError": {
  "data": {
   "shadows": "astropy.nddata.utils.PartialOverlapError"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.psf.epsf_stars._extract_stars": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      761
     ]
    },
    "astropy.nddata.utils.NoOverlapError": {
     "line number": [
      797
     ]
    },
    "astropy.nddata.utils.PartialOverlapError": {
     "line number": [
      797
     ]
    },
    "astropy.nddata.utils.overlap_slices": {
     "line number": [
      793
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      784
     ]
    },
    "astropy.wcs.utils.skycoord_to_pixel": {
     "line number": [
      763
     ]
    },
    "float": {
     "line number": [
      767,
      768,
      779
     ]
    },
    "int": {
     "line number": [
      773
     ]
    },
    "len": {
     "line number": [
      773
     ]
    },
    "numpy.arange": {
     "line number": [
      773
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      779
     ]
    },
    "numpy.isscalar": {
     "line number": [
      752
     ]
    },
    "numpy.ones_like": {
     "line number": [
      776,
      785
     ]
    },
    "photutils.psf.epsf_stars.EPSFStar": {
     "line number": [
      803
     ]
    },
    "photutils.psf.epsf_stars.warnings": {
     "line number": [
      781
     ]
    },
    "tuple": {
     "line number": [
      755
     ]
    },
    "zip": {
     "line number": [
      791
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.extract_stars": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      610,
      615,
      620,
      625,
      632,
      637,
      643,
      657
     ]
    },
    "any": {
     "line number": [
      624,
      636
     ]
    },
    "astropy.nddata.NDData": {
     "line number": [
      602,
      609
     ]
    },
    "astropy.table.Table": {
     "line number": [
      605,
      614
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      702
     ]
    },
    "isinstance": {
     "line number": [
      602,
      605,
      609,
      614
     ]
    },
    "len": {
     "line number": [
      618,
      618,
      642,
      642,
      648,
      659,
      661,
      676,
      676,
      680,
      683,
      694,
      696
     ]
    },
    "list": {
     "line number": [
      671,
      671
     ]
    },
    "map": {
     "line number": [
      671
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      647
     ]
    },
    "numpy.repeat": {
     "line number": [
      649
     ]
    },
    "photutils.psf.epsf_stars.EPSFStars": {
     "line number": [
      704
     ]
    },
    "photutils.psf.epsf_stars.LinkedEPSFStar": {
     "line number": [
      686
     ]
    },
    "photutils.psf.epsf_stars._extract_stars": {
     "line number": [
      667,
      692
     ]
    },
    "photutils.psf.epsf_stars.warnings": {
     "line number": [
      700
     ]
    },
    "tuple": {
     "line number": [
      653
     ]
    },
    "zip": {
     "line number": [
      671,
      691
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.lazyproperty": {
  "data": {
   "shadows": "astropy.utils.lazyproperty"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.overlap_slices": {
  "data": {
   "shadows": "astropy.nddata.utils.overlap_slices"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.skycoord_to_pixel": {
  "data": {
   "shadows": "astropy.wcs.utils.skycoord_to_pixel"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.psf.groupstars": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.groupstars.Column": {
  "data": {
   "shadows": "astropy.table.Column"
  },
  "type": "import"
 },
 "photutils.psf.groupstars.DAOGroup": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "photutils.psf.groupstars.GroupStarsBase": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.groupstars.DAOGroup.__init__": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DAOGroup.crit_separation": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      107,
      111
     ]
    },
    "float": {
     "line number": [
      106
     ]
    },
    "int": {
     "line number": [
      106
     ]
    },
    "isinstance": {
     "line number": [
      106
     ]
    },
    "type": {
     "line number": [
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DAOGroup.find_group": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      176
     ]
    },
    "numpy.hypot": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DAOGroup.group_stars": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      127
     ]
    },
    "astropy.table.Column": {
     "line number": [
      120,
      122
     ]
    },
    "int": {
     "line number": [
      124
     ]
    },
    "len": {
     "line number": [
      121,
      123,
      126,
      138,
      143,
      146
     ]
    },
    "numpy.append": {
     "line number": [
      145
     ]
    },
    "numpy.arange": {
     "line number": [
      121,
      126
     ]
    },
    "numpy.array_equal": {
     "line number": [
      126
     ]
    },
    "numpy.where": {
     "line number": [
      133
     ]
    },
    "numpy.zeros": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DBSCAN": {
  "data": {
   "shadows": "sklearn.cluster.DBSCAN"
  },
  "type": "import"
 },
 "photutils.psf.groupstars.DBSCANGroup": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "photutils.psf.groupstars.GroupStarsBase": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.groupstars.DBSCANGroup.__init__": {
  "data": {
   "lineno": 219
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DBSCANGroup.group_stars": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      237
     ]
    },
    "astropy.table.Column": {
     "line number": [
      233
     ]
    },
    "int": {
     "line number": [
      246
     ]
    },
    "len": {
     "line number": [
      234,
      236,
      246
     ]
    },
    "numpy.arange": {
     "line number": [
      234,
      236
     ]
    },
    "numpy.array_equal": {
     "line number": [
      236
     ]
    },
    "numpy.ones": {
     "line number": [
      246
     ]
    },
    "numpy.transpose": {
     "line number": [
      241
     ]
    },
    "sklearn.cluster.DBSCAN": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.groupstars.GroupStarsBase": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "photutils.psf.groupstars.abc": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.groupstars.GroupStarsBase.__call__": {
  "data": {
   "lineno": 20
  },
  "type": "function"
 },
 "photutils.psf.groupstars.GroupStarsBase.group_stars": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": {
    "NotImplementedError": {
     "line number": [
      61
     ]
    },
    "photutils.psf.groupstars.abc": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.groupstars.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.psf.groupstars.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "photutils.psf.groupstars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.matching": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.matching.fourier": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.matching.fourier.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "photutils.psf.matching.fourier.create_matching_kernel": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      87
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      83,
      84
     ]
    },
    "numpy.copy": {
     "line number": [
      83,
      84
     ]
    },
    "numpy.fft.fft2": {
     "line number": [
      94,
      95
     ]
    },
    "numpy.fft.fftshift": {
     "line number": [
      94,
      95,
      102
     ]
    },
    "numpy.fft.ifft2": {
     "line number": [
      102
     ]
    },
    "numpy.fft.ifftshift": {
     "line number": [
      102
     ]
    },
    "numpy.real": {
     "line number": [
      102
     ]
    },
    "window": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.fourier.fft2": {
  "data": {
   "shadows": "numpy.fft.fft2"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.fftshift": {
  "data": {
   "shadows": "numpy.fft.fftshift"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.ifft2": {
  "data": {
   "shadows": "numpy.fft.ifft2"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.ifftshift": {
  "data": {
   "shadows": "numpy.fft.ifftshift"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.resize_psf": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "scipy.ndimage.zoom": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.fourier.zoom": {
  "data": {
   "shadows": "scipy.ndimage.zoom"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.matching.tests.test_fourier": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.psf.matching.tests.test_fourier.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.HAS_SCIPY": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.psf.matching.tests.test_fourier.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.test_create_matching_kernel": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "SplitCosineBellWindow": {
     "line number": [
      45
     ]
    },
    "astropy.modeling.fitting.LevMarLSQFitter": {
     "line number": [
      48
     ]
    },
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      38,
      39
     ]
    },
    "create_matching_kernel": {
     "line number": [
      46
     ]
    },
    "fitter": {
     "line number": [
      49
     ]
    },
    "gm1": {
     "line number": [
      40,
      49
     ]
    },
    "gm2": {
     "line number": [
      41
     ]
    },
    "numpy.mgrid": {
     "line number": [
      35
     ]
    },
    "numpy.sqrt": {
     "line number": [
      51
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      50,
      51
     ]
    },
    "photutils.psf.matching.tests.test_fourier.pytest": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_fourier.test_create_matching_kernel_shapes": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      56
     ]
    },
    "create_matching_kernel": {
     "line number": [
      59
     ]
    },
    "numpy.ones": {
     "line number": [
      57,
      58
     ]
    },
    "photutils.psf.matching.tests.test_fourier.pytest": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_fourier.test_resize_psf": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      24
     ]
    },
    "photutils.psf.matching.tests.test_fourier.pytest": {
     "line number": [
      22
     ]
    },
    "resize_psf": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.psf.matching.tests.test_windows.HAS_SCIPY": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.psf.matching.tests.test_windows.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.test_cosine_bell": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "CosineBellWindow": {
     "line number": [
      63
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      66
     ]
    },
    "win": {
     "line number": [
      63,
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_hanning": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "HanningWindow": {
     "line number": [
      21
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      24
     ]
    },
    "win": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_hanning_numpy": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "HanningWindow": {
     "line number": [
      33
     ]
    },
    "numpy.hanning": {
     "line number": [
      35
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      36
     ]
    },
    "win": {
     "line number": [
      33,
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_invalid_shape": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "HanningWindow": {
     "line number": [
      85
     ]
    },
    "ValueError": {
     "line number": [
      84
     ]
    },
    "photutils.psf.matching.tests.test_windows.pytest": {
     "line number": [
      84
     ]
    },
    "win": {
     "line number": [
      85,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_split_cosine_bell": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": {
    "SplitCosineBellWindow": {
     "line number": [
      70
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      73
     ]
    },
    "win": {
     "line number": [
      70,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_tophat": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": {
    "TopHatWindow": {
     "line number": [
      77
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      80
     ]
    },
    "win": {
     "line number": [
      77,
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_tukey": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "TukeyWindow": {
     "line number": [
      40
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      43
     ]
    },
    "win": {
     "line number": [
      40,
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_tukey_scipy": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": {
    "TukeyWindow": {
     "line number": [
      56
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      59
     ]
    },
    "photutils.psf.matching.tests.test_windows.pytest": {
     "line number": [
      46
     ]
    },
    "scipy.signal.tukey": {
     "line number": [
      58
     ]
    },
    "win": {
     "line number": [
      56,
      57
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.tukey": {
  "data": {
   "shadows": "scipy.signal.tukey"
  },
  "type": "import"
 },
 "photutils.psf.matching.windows": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.matching.windows.CosineBellWindow": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": {
    "photutils.psf.matching.windows.SplitCosineBellWindow": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.CosineBellWindow.__init__": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "super": {
     "line number": [
      226
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.HanningWindow": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "photutils.psf.matching.windows.SplitCosineBellWindow": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.HanningWindow.__init__": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "super": {
     "line number": [
      146
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.SplitCosineBellWindow": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.SplitCosineBellWindow.__call__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": {
    "int": {
     "line number": [
      99
     ]
    },
    "numpy.array": {
     "line number": [
      96
     ]
    },
    "numpy.cos": {
     "line number": [
      102
     ]
    },
    "numpy.floor": {
     "line number": [
      99
     ]
    },
    "numpy.ones": {
     "line number": [
      104
     ]
    },
    "numpy.pi": {
     "line number": [
      102
     ]
    },
    "photutils.psf.matching.windows._radial_distance": {
     "line number": [
      95
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.SplitCosineBellWindow.__init__": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.TopHatWindow": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": {
    "photutils.psf.matching.windows.SplitCosineBellWindow": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.TopHatWindow.__init__": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "super": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.TukeyWindow": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "photutils.psf.matching.windows.SplitCosineBellWindow": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.TukeyWindow.__init__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "super": {
     "line number": [
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "photutils.psf.matching.windows._radial_distance": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      31
     ]
    },
    "len": {
     "line number": [
      30
     ]
    },
    "numpy.arange": {
     "line number": [
      33,
      34
     ]
    },
    "numpy.asarray": {
     "line number": [
      32
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      35
     ]
    },
    "numpy.sqrt": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.models": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.models.AstropyWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyWarning"
  },
  "type": "import"
 },
 "photutils.psf.models.EPSFModel": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "photutils.psf.models.FittableImageModel": {
     "line number": [
      509
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.models.EPSFModel.__init__": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": {
    "super": {
     "line number": [
      548
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.EPSFModel._compute_normalization": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": {
    "numpy.isfinite": {
     "line number": [
      594
     ]
    },
    "numpy.sum": {
     "line number": [
      589
     ]
    },
    "photutils.psf.models.NonNormalizable": {
     "line number": [
      602
     ]
    },
    "photutils.psf.models.warnings": {
     "line number": [
      600
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.EPSFModel._compute_raw_image_norm": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      576
     ]
    },
    "numpy.product": {
     "line number": [
      578
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.EPSFModel._initial_norm": {
  "data": {
   "lineno": 554
  },
  "type": "function"
 },
 "photutils.psf.models.EPSFModel._set_oversampling": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      609,
      610,
      612
     ]
    },
    "int": {
     "line number": [
      606
     ]
    },
    "len": {
     "line number": [
      607
     ]
    },
    "numpy.any": {
     "line number": [
      611
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      606
     ]
    },
    "numpy.repeat": {
     "line number": [
      608
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.EPSFModel.compute_interpolator": {
  "data": {
   "lineno": 637,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      687
     ]
    },
    "float": {
     "line number": [
      700,
      701
     ]
    },
    "hasattr": {
     "line number": [
      680
     ]
    },
    "int": {
     "line number": [
      681,
      682,
      684,
      685
     ]
    },
    "len": {
     "line number": [
      680
     ]
    },
    "numpy.arange": {
     "line number": [
      700,
      701
     ]
    },
    "scipy.interpolate.RectBivariateSpline": {
     "line number": [
      702
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.EPSFModel.evaluate": {
  "data": {
   "lineno": 707,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      713,
      714
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.EPSFModel.normalized_data": {
  "data": {
   "lineno": 616
  },
  "type": "function"
 },
 "photutils.psf.models.EPSFModel.origin": {
  "data": {
   "lineno": 626,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      634
     ]
    },
    "hasattr": {
     "line number": [
      631
     ]
    },
    "len": {
     "line number": [
      631
     ]
    },
    "photutils.psf.models.FittableImageModel": {
     "line number": [
      626
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.Fittable2DModel": {
  "data": {
   "shadows": "astropy.modeling.Fittable2DModel"
  },
  "type": "import"
 },
 "photutils.psf.models.FittableImageModel": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "astropy.modeling.Fittable2DModel": {
     "line number": [
      28
     ]
    },
    "astropy.modeling.Parameter": {
     "line number": [
      118,
      120,
      123
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.models.FittableImageModel.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      139,
      146,
      152
     ]
    },
    "float": {
     "line number": [
      143
     ]
    },
    "numpy.all": {
     "line number": [
      145
     ]
    },
    "numpy.array": {
     "line number": [
      143
     ]
    },
    "numpy.isfinite": {
     "line number": [
      145
     ]
    },
    "super": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel._compute_normalization": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "numpy.isfinite": {
     "line number": [
      222
     ]
    },
    "photutils.psf.models.NonNormalizable": {
     "line number": [
      231
     ]
    },
    "photutils.psf.models.warnings": {
     "line number": [
      229
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel._compute_raw_image_norm": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": {
    "float": {
     "line number": [
      187
     ]
    },
    "numpy.sum": {
     "line number": [
      187
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel._initial_norm": {
  "data": {
   "lineno": 164
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel._set_oversampling": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      257,
      258,
      261
     ]
    },
    "float": {
     "line number": [
      254
     ]
    },
    "len": {
     "line number": [
      255
     ]
    },
    "numpy.any": {
     "line number": [
      260
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      254
     ]
    },
    "numpy.repeat": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel._store_interpolator_kwargs": {
  "data": {
   "lineno": 390,
   "symbols_in_volume": {
    "photutils.psf.models.copy": {
     "line number": [
      396
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.compute_interpolator": {
  "data": {
   "lineno": 407,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      457
     ]
    },
    "float": {
     "line number": [
      465,
      466
     ]
    },
    "hasattr": {
     "line number": [
      450
     ]
    },
    "int": {
     "line number": [
      451,
      452,
      454,
      455
     ]
    },
    "len": {
     "line number": [
      450
     ]
    },
    "numpy.arange": {
     "line number": [
      465,
      466
     ]
    },
    "scipy.interpolate.RectBivariateSpline": {
     "line number": [
      467
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.data": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": {
    "property": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.evaluate": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": {
    "numpy.asarray": {
     "line number": [
      487,
      488,
      490,
      491
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.fill_value": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.interpolator_kwargs": {
  "data": {
   "lineno": 398,
   "symbols_in_volume": {
    "property": {
     "line number": [
      398
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.normalization_constant": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": {
    "property": {
     "line number": [
      275
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.normalization_correction": {
  "data": {
   "lineno": 307
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.normalization_status": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "property": {
     "line number": [
      280
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.normalized_data": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": {
    "property": {
     "line number": [
      270
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.nx": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": {
    "property": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.ny": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "property": {
     "line number": [
      331
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.origin": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      362
     ]
    },
    "hasattr": {
     "line number": [
      359
     ]
    },
    "len": {
     "line number": [
      359
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.oversampling": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "property": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.shape": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": {
    "property": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.x_origin": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": {
    "property": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.y_origin": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": {
    "property": {
     "line number": [
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.GriddedPSFModel": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": {
    "astropy.modeling.Fittable2DModel": {
     "line number": [
      730
     ]
    },
    "astropy.modeling.Parameter": {
     "line number": [
      757,
      759,
      761
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.models.GriddedPSFModel.__init__": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      768
     ]
    },
    "ValueError": {
     "line number": [
      771,
      775,
      778,
      782,
      785,
      798
     ]
    },
    "astropy.nddata.NDData": {
     "line number": [
      767
     ]
    },
    "float": {
     "line number": [
      787
     ]
    },
    "isinstance": {
     "line number": [
      767
     ]
    },
    "len": {
     "line number": [
      777,
      796,
      797
     ]
    },
    "list": {
     "line number": [
      796
     ]
    },
    "numpy.array": {
     "line number": [
      787
     ]
    },
    "numpy.isscalar": {
     "line number": [
      784
     ]
    },
    "numpy.transpose": {
     "line number": [
      792
     ]
    },
    "numpy.unique": {
     "line number": [
      793,
      794
     ]
    },
    "photutils.psf.models.itertools": {
     "line number": [
      796
     ]
    },
    "super": {
     "line number": [
      805
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.GriddedPSFModel._bilinear_interp": {
  "data": {
   "lineno": 876,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      904,
      907,
      916,
      924
     ]
    },
    "len": {
     "line number": [
      903,
      911
     ]
    },
    "numpy.array": {
     "line number": [
      928
     ]
    },
    "numpy.asarray": {
     "line number": [
      927
     ]
    },
    "numpy.isscalar": {
     "line number": [
      918,
      920
     ]
    },
    "numpy.sum": {
     "line number": [
      932
     ]
    },
    "range": {
     "line number": [
      911
     ]
    },
    "sorted": {
     "line number": [
      911,
      912
     ]
    },
    "staticmethod": {
     "line number": [
      876
     ]
    },
    "tuple": {
     "line number": [
      910
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.GriddedPSFModel._compute_local_model": {
  "data": {
   "lineno": 934,
   "symbols_in_volume": {
    "numpy.argsort": {
     "line number": [
      952
     ]
    },
    "numpy.array": {
     "line number": [
      958
     ]
    },
    "numpy.hypot": {
     "line number": [
      952
     ]
    },
    "numpy.isscalar": {
     "line number": [
      942,
      944
     ]
    },
    "photutils.psf.models.FittableImageModel": {
     "line number": [
      964
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.GriddedPSFModel._find_bounding_points": {
  "data": {
   "lineno": 840,
   "symbols_in_volume": {
    "TypeError": {
     "line number": [
      857
     ]
    },
    "ValueError": {
     "line number": [
      861
     ]
    },
    "list": {
     "line number": [
      866
     ]
    },
    "numpy.argsort": {
     "line number": [
      871
     ]
    },
    "numpy.hypot": {
     "line number": [
      871
     ]
    },
    "numpy.isscalar": {
     "line number": [
      856,
      856
     ]
    },
    "photutils.psf.models.itertools": {
     "line number": [
      866
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.GriddedPSFModel._find_bounds_1d": {
  "data": {
   "lineno": 807,
   "symbols_in_volume": {
    "len": {
     "line number": [
      833
     ]
    },
    "numpy.searchsorted": {
     "line number": [
      830
     ]
    },
    "staticmethod": {
     "line number": [
      807
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.GriddedPSFModel.evaluate": {
  "data": {
   "lineno": 968
  },
  "type": "function"
 },
 "photutils.psf.models.IntegratedGaussianPRF": {
  "data": {
   "lineno": 981,
   "symbols_in_volume": {
    "astropy.modeling.Fittable2DModel": {
     "line number": [
      981
     ]
    },
    "astropy.modeling.Parameter": {
     "line number": [
      1033,
      1034,
      1035,
      1036
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.models.IntegratedGaussianPRF.__init__": {
  "data": {
   "lineno": 1047,
   "symbols_in_volume": {
    "scipy.special.erf": {
     "line number": [
      1052
     ]
    },
    "super": {
     "line number": [
      1054
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.IntegratedGaussianPRF.bounding_box": {
  "data": {
   "lineno": 1041,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1044,
      1044,
      1045,
      1045
     ]
    },
    "property": {
     "line number": [
      1041
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.IntegratedGaussianPRF.evaluate": {
  "data": {
   "lineno": 1057,
   "symbols_in_volume": {
    "numpy.sqrt": {
     "line number": [
      1061,
      1062,
      1063,
      1064
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "photutils.psf.models.NonNormalizable": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "astropy.utils.exceptions.AstropyWarning": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.models.PRFAdapter": {
  "data": {
   "lineno": 1067,
   "symbols_in_volume": {
    "astropy.modeling.Fittable2DModel": {
     "line number": [
      1067
     ]
    },
    "astropy.modeling.Parameter": {
     "line number": [
      1105,
      1106,
      1107
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.models.PRFAdapter.__init__": {
  "data": {
   "lineno": 1109,
   "symbols_in_volume": {
    "numpy.inf": {
     "line number": [
      1118,
      1118,
      1119,
      1120
     ]
    },
    "scipy.integrate.dblquad": {
     "line number": [
      1117
     ]
    },
    "super": {
     "line number": [
      1132
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.PRFAdapter._integrated_psfmodel": {
  "data": {
   "lineno": 1156,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      1163
     ]
    },
    "numpy.empty_like": {
     "line number": [
      1161
     ]
    },
    "scipy.integrate.dblquad": {
     "line number": [
      1164
     ]
    },
    "zip": {
     "line number": [
      1163
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.PRFAdapter.evaluate": {
  "data": {
   "lineno": 1134,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      1141,
      1147,
      1153
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.models.Parameter": {
  "data": {
   "shadows": "astropy.modeling.Parameter"
  },
  "type": "import"
 },
 "photutils.psf.models.RectBivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.RectBivariateSpline"
  },
  "type": "import"
 },
 "photutils.psf.models.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.psf.models.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "photutils.psf.models.dblquad": {
  "data": {
   "shadows": "scipy.integrate.dblquad"
  },
  "type": "import"
 },
 "photutils.psf.models.erf": {
  "data": {
   "shadows": "scipy.special.erf"
  },
  "type": "import"
 },
 "photutils.psf.models.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.psf.models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.models.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.psf.photometry": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.photometry.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.psf.photometry.BasicPSFPhotometry": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.__call__": {
  "data": {
   "lineno": 195
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.__init__": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": {
    "astropy.modeling.fitting.LevMarLSQFitter": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry._define_fit_param_names": {
  "data": {
   "lineno": 442,
   "symbols_in_volume": {
    "_extract_psf_fitting_names": {
     "line number": [
      456
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry._get_additional_columns": {
  "data": {
   "lineno": 430
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry._get_uncertainties": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": {
    "astropy.table.Column": {
     "line number": [
      488
     ]
    },
    "astropy.table.Table": {
     "line number": [
      485
     ]
    },
    "len": {
     "line number": [
      494
     ]
    },
    "numpy.diag": {
     "line number": [
      496
     ]
    },
    "numpy.empty": {
     "line number": [
      489
     ]
    },
    "numpy.sqrt": {
     "line number": [
      496
     ]
    },
    "range": {
     "line number": [
      495
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry._model_params2table": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": {
    "astropy.table.Column": {
     "line number": [
      525
     ]
    },
    "astropy.table.Table": {
     "line number": [
      522
     ]
    },
    "getattr": {
     "line number": [
      531,
      536
     ]
    },
    "numpy.empty": {
     "line number": [
      526
     ]
    },
    "range": {
     "line number": [
      529
     ]
    },
    "str": {
     "line number": [
      533
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.aperture_radius": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      180
     ]
    },
    "float": {
     "line number": [
      175
     ]
    },
    "int": {
     "line number": [
      175
     ]
    },
    "isinstance": {
     "line number": [
      175
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.do_photometry": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      296,
      318
     ]
    },
    "ValueError": {
     "line number": [
      262,
      273,
      312
     ]
    },
    "aperture_photometry": {
     "line number": [
      299,
      321
     ]
    },
    "astropy.stats.gaussian_sigma_to_fwhm": {
     "line number": [
      258
     ]
    },
    "astropy.table.Table": {
     "line number": [
      327
     ]
    },
    "astropy.table.hstack": {
     "line number": [
      347
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      291
     ]
    },
    "getattr": {
     "line number": [
      341
     ]
    },
    "hasattr": {
     "line number": [
      254,
      256
     ]
    },
    "len": {
     "line number": [
      308,
      315,
      340
     ]
    },
    "numpy.full": {
     "line number": [
      308
     ]
    },
    "numpy.nan": {
     "line number": [
      309
     ]
    },
    "numpy.transpose": {
     "line number": [
      294,
      316
     ]
    },
    "photutils.psf.photometry.warnings": {
     "line number": [
      289
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.fitshape": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      160,
      163,
      166
     ]
    },
    "numpy.all": {
     "line number": [
      156,
      157
     ]
    },
    "numpy.array": {
     "line number": [
      153
     ]
    },
    "numpy.asarray": {
     "line number": [
      149
     ]
    },
    "tuple": {
     "line number": [
      158
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.get_residual_image": {
  "data": {
   "lineno": 182
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.nstar": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      415,
      416
     ]
    },
    "astropy.nddata.utils.NoOverlapError": {
     "line number": [
      422
     ]
    },
    "astropy.nddata.utils.overlap_slices": {
     "line number": [
      398
     ]
    },
    "astropy.table.Column": {
     "line number": [
      381,
      386
     ]
    },
    "astropy.table.Table": {
     "line number": [
      379,
      383
     ]
    },
    "astropy.table.hstack": {
     "line number": [
      426
     ]
    },
    "astropy.table.vstack": {
     "line number": [
      407,
      410
     ]
    },
    "bool": {
     "line number": [
      395
     ]
    },
    "get_grouped_psf_model": {
     "line number": [
      392
     ]
    },
    "len": {
     "line number": [
      391,
      406,
      412
     ]
    },
    "numpy.indices": {
     "line number": [
      388
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      395
     ]
    },
    "range": {
     "line number": [
      391
     ]
    },
    "subtract_psf": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.photometry.Column": {
  "data": {
   "shadows": "astropy.table.Column"
  },
  "type": "import"
 },
 "photutils.psf.photometry.DAOPhotPSFPhotometry": {
  "data": {
   "lineno": 818,
   "symbols_in_volume": {
    "photutils.psf.photometry.IterativelySubtractedPSFPhotometry": {
     "line number": [
      818
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.photometry.DAOPhotPSFPhotometry.__init__": {
  "data": {
   "lineno": 929,
   "symbols_in_volume": {
    "DAOGroup": {
     "line number": [
      947
     ]
    },
    "DAOStarFinder": {
     "line number": [
      949
     ]
    },
    "MMMBackground": {
     "line number": [
      948
     ]
    },
    "astropy.modeling.fitting.LevMarLSQFitter": {
     "line number": [
      932
     ]
    },
    "astropy.stats.SigmaClip": {
     "line number": [
      948
     ]
    },
    "super": {
     "line number": [
      955
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": {
    "photutils.psf.photometry.BasicPSFPhotometry": {
     "line number": [
      542
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry.__init__": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": {
    "astropy.modeling.fitting.LevMarLSQFitter": {
     "line number": [
      634
     ]
    },
    "super": {
     "line number": [
      637
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry._do_photometry": {
  "data": {
   "lineno": 743,
   "symbols_in_volume": {
    "CircularAperture": {
     "line number": [
      777
     ]
    },
    "aperture_photometry": {
     "line number": [
      779
     ]
    },
    "astropy.table.Column": {
     "line number": [
      767,
      768,
      791
     ]
    },
    "astropy.table.Table": {
     "line number": [
      762,
      782
     ]
    },
    "astropy.table.hstack": {
     "line number": [
      801
     ]
    },
    "astropy.table.vstack": {
     "line number": [
      806
     ]
    },
    "getattr": {
     "line number": [
      792
     ]
    },
    "int": {
     "line number": [
      804
     ]
    },
    "len": {
     "line number": [
      773,
      794
     ]
    },
    "numpy.ones": {
     "line number": [
      794,
      803
     ]
    },
    "numpy.transpose": {
     "line number": [
      775
     ]
    },
    "photutils.psf.photometry.warnings": {
     "line number": [
      809,
      810
     ]
    },
    "super": {
     "line number": [
      797
     ]
    },
    "zip": {
     "line number": [
      765
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry.do_photometry": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": {
    "astropy.stats.gaussian_sigma_to_fwhm": {
     "line number": [
      738
     ]
    },
    "astropy.table.vstack": {
     "line number": [
      726
     ]
    },
    "hasattr": {
     "line number": [
      734,
      736
     ]
    },
    "int": {
     "line number": [
      721
     ]
    },
    "numpy.ones": {
     "line number": [
      721
     ]
    },
    "super": {
     "line number": [
      720
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry.finder": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      666
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry.niters": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      652,
      655,
      656
     ]
    },
    "int": {
     "line number": [
      654
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.photometry.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.photometry.NoOverlapError": {
  "data": {
   "shadows": "astropy.nddata.utils.NoOverlapError"
  },
  "type": "import"
 },
 "photutils.psf.photometry.SigmaClip": {
  "data": {
   "shadows": "astropy.stats.SigmaClip"
  },
  "type": "import"
 },
 "photutils.psf.photometry.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.photometry.__all__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.psf.photometry.gaussian_sigma_to_fwhm": {
  "data": {
   "shadows": "astropy.stats.gaussian_sigma_to_fwhm"
  },
  "type": "import"
 },
 "photutils.psf.photometry.hstack": {
  "data": {
   "shadows": "astropy.table.hstack"
  },
  "type": "import"
 },
 "photutils.psf.photometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.photometry.overlap_slices": {
  "data": {
   "shadows": "astropy.nddata.utils.overlap_slices"
  },
  "type": "import"
 },
 "photutils.psf.photometry.vstack": {
  "data": {
   "shadows": "astropy.table.vstack"
  },
  "type": "import"
 },
 "photutils.psf.photometry.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.psf.sandbox": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.sandbox.DiscretePRF": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": {
    "astropy.modeling.Fittable2DModel": {
     "line number": [
      21
     ]
    },
    "astropy.modeling.Parameter": {
     "line number": [
      62,
      63,
      64
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.sandbox.DiscretePRF.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      76
     ]
    },
    "TypeError": {
     "line number": [
      72,
      74
     ]
    },
    "astropy.modeling.fitting.LevMarLSQFitter": {
     "line number": [
      94
     ]
    },
    "numpy.array": {
     "line number": [
      70
     ]
    },
    "numpy.isnan": {
     "line number": [
      75
     ]
    },
    "range": {
     "line number": [
      80,
      81
     ]
    },
    "super": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.sandbox.DiscretePRF.create_from_image": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      239
     ]
    },
    "TypeError": {
     "line number": [
      200,
      205,
      208
     ]
    },
    "ValueError": {
     "line number": [
      202,
      253
     ]
    },
    "_mask_to_mirrored_num": {
     "line number": [
      275
     ]
    },
    "astropy.nddata.utils.extract_array": {
     "line number": [
      260
     ]
    },
    "astropy.nddata.utils.subpixel_indices": {
     "line number": [
      244
     ]
    },
    "astropy.table.Table": {
     "line number": [
      217
     ]
    },
    "classmethod": {
     "line number": [
      145
     ]
    },
    "cls": {
     "line number": [
      291
     ]
    },
    "combine": {
     "line number": [
      290
     ]
    },
    "enumerate": {
     "line number": [
      258
     ]
    },
    "int": {
     "line number": [
      245
     ]
    },
    "isinstance": {
     "line number": [
      214,
      217,
      218,
      231
     ]
    },
    "len": {
     "line number": [
      207,
      207,
      226
     ]
    },
    "list": {
     "line number": [
      214,
      231
     ]
    },
    "numpy.all": {
     "line number": [
      250
     ]
    },
    "numpy.array": {
     "line number": [
      215,
      232,
      244
     ]
    },
    "numpy.empty": {
     "line number": [
      226
     ]
    },
    "numpy.iscomplexobj": {
     "line number": [
      199
     ]
    },
    "numpy.isnan": {
     "line number": [
      212
     ]
    },
    "numpy.ma.array": {
     "line number": [
      241
     ]
    },
    "numpy.ma.copy": {
     "line number": [
      280,
      284
     ]
    },
    "numpy.ma.dstack": {
     "line number": [
      290
     ]
    },
    "numpy.ma.getdata": {
     "line number": [
      289
     ]
    },
    "numpy.ma.mean": {
     "line number": [
      235
     ]
    },
    "numpy.ma.median": {
     "line number": [
      237
     ]
    },
    "numpy.ma.sum": {
     "line number": [
      265,
      281
     ]
    },
    "numpy.ndarray": {
     "line number": [
      218,
      242
     ]
    },
    "range": {
     "line number": [
      247,
      248
     ]
    },
    "tuple": {
     "line number": [
      214,
      231
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.sandbox.DiscretePRF.evaluate": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "astropy.nddata.utils.subpixel_indices": {
     "line number": [
      129
     ]
    },
    "int": {
     "line number": [
      139,
      139
     ]
    },
    "numpy.logical_or": {
     "line number": [
      132,
      133,
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.sandbox.DiscretePRF.prf_shape": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": {
    "property": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.sandbox.Fittable2DModel": {
  "data": {
   "shadows": "astropy.modeling.Fittable2DModel"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.Parameter": {
  "data": {
   "shadows": "astropy.modeling.Parameter"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.Reproject": {
  "data": {
   "lineno": 294
  },
  "type": "class"
 },
 "photutils.psf.sandbox.Reproject.__init__": {
  "data": {
   "lineno": 309
  },
  "type": "function"
 },
 "photutils.psf.sandbox.Reproject._reproject": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      336
     ]
    },
    "ValueError": {
     "line number": [
      337
     ]
    },
    "staticmethod": {
     "line number": [
      313
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.sandbox.Reproject.to_original": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "photutils.psf.sandbox.Reproject.to_rectified": {
  "data": {
   "lineno": 340
  },
  "type": "function"
 },
 "photutils.psf.sandbox.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.psf.sandbox.__doctest_requires__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.psf.sandbox.extract_array": {
  "data": {
   "shadows": "astropy.nddata.utils.extract_array"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.subpixel_indices": {
  "data": {
   "shadows": "astropy.nddata.utils.subpixel_indices"
  },
  "type": "import"
 },
 "photutils.psf.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.tests.test_epsf": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.psf.tests.test_epsf.HAS_SCIPY": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_epsf.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.SigmaClip": {
  "data": {
   "shadows": "astropy.stats.SigmaClip"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.TestEPSFBuild": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "photutils.psf.tests.test_epsf.pytest": {
     "line number": [
      28
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.tests.test_epsf.TestEPSFBuild.setup_class": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "astropy.nddata.NDData": {
     "line number": [
      67
     ]
    },
    "astropy.table.Table": {
     "line number": [
      59,
      69
     ]
    },
    "int": {
     "line number": [
      70,
      71
     ]
    },
    "len": {
     "line number": [
      55,
      63
     ]
    },
    "make_gaussian_prf_sources_image": {
     "line number": [
      66
     ]
    },
    "numpy.min": {
     "line number": [
      52
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      42
     ]
    },
    "numpy.transpose": {
     "line number": [
      54
     ]
    },
    "numpy.zeros": {
     "line number": [
      63
     ]
    },
    "scipy.spatial.cKDTree": {
     "line number": [
      51
     ]
    },
    "zip": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf.TestEPSFBuild.test_epsf_build": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "EPSFBuilder": {
     "line number": [
      91
     ]
    },
    "IntegratedGaussianPRF": {
     "line number": [
      102
     ]
    },
    "epsf_builder": {
     "line number": [
      94
     ]
    },
    "extract_stars": {
     "line number": [
      90
     ]
    },
    "float": {
     "line number": [
      100
     ]
    },
    "numpy.arange": {
     "line number": [
      100
     ]
    },
    "numpy.sum": {
     "line number": [
      108
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      105
     ]
    },
    "numpy.testing.assert_almost_equal": {
     "line number": [
      108
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf.TestEPSFBuild.test_epsf_build_invalid_fitter": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "EPSFBuilder": {
     "line number": [
      130,
      133,
      136
     ]
    },
    "EPSFFitter": {
     "line number": [
      130
     ]
    },
    "TypeError": {
     "line number": [
      129,
      132,
      135
     ]
    },
    "astropy.modeling.fitting.LevMarLSQFitter": {
     "line number": [
      133,
      136
     ]
    },
    "photutils.psf.tests.test_epsf.pytest": {
     "line number": [
      129,
      132,
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf.TestEPSFBuild.test_epsf_fitting_bounds": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": {
    "EPSFBuilder": {
     "line number": [
      114
     ]
    },
    "EPSFFitter": {
     "line number": [
      117
     ]
    },
    "ValueError": {
     "line number": [
      121
     ]
    },
    "epsf_builder": {
     "line number": [
      114,
      122
     ]
    },
    "extract_stars": {
     "line number": [
      113
     ]
    },
    "photutils.psf.tests.test_epsf.pytest": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf.TestEPSFBuild.test_extract_stars": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "extract_stars": {
     "line number": [
      76
     ]
    },
    "isinstance": {
     "line number": [
      79,
      80
     ]
    },
    "len": {
     "line number": [
      78
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.cKDTree": {
  "data": {
   "shadows": "scipy.spatial.cKDTree"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.test_epsf_build_oversampling": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": {
    "EPSFBuilder": {
     "line number": [
      213
     ]
    },
    "IntegratedGaussianPRF": {
     "line number": [
      221
     ]
    },
    "astropy.nddata.NDData": {
     "line number": [
      208
     ]
    },
    "astropy.table.Table": {
     "line number": [
      198,
      209
     ]
    },
    "epsf_builder": {
     "line number": [
      213,
      215
     ]
    },
    "extract_stars": {
     "line number": [
      212
     ]
    },
    "list": {
     "line number": [
      192
     ]
    },
    "m": {
     "line number": [
      223
     ]
    },
    "make_gaussian_prf_sources_image": {
     "line number": [
      207
     ]
    },
    "numpy.arange": {
     "line number": [
      191
     ]
    },
    "numpy.array": {
     "line number": [
      192
     ]
    },
    "numpy.full": {
     "line number": [
      202,
      205
     ]
    },
    "numpy.mgrid": {
     "line number": [
      201,
      222
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      225
     ]
    },
    "numpy.transpose": {
     "line number": [
      193,
      194
     ]
    },
    "photutils.psf.tests.test_epsf.itertools": {
     "line number": [
      192
     ]
    },
    "photutils.psf.tests.test_epsf.pytest": {
     "line number": [
      188,
      189
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf.test_epsfbuilder_inputs": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "EPSFBuilder": {
     "line number": [
      142,
      144,
      146,
      148,
      151,
      152,
      157,
      160
     ]
    },
    "ValueError": {
     "line number": [
      141,
      143,
      145,
      147,
      156
     ]
    },
    "astropy.stats.SigmaClip": {
     "line number": [
      160
     ]
    },
    "photutils.psf.tests.test_epsf.pytest": {
     "line number": [
      141,
      143,
      145,
      147,
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf.test_epsfmodel_inputs": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": {
    "EPSFModel": {
     "line number": [
      167,
      172,
      176,
      181,
      185
     ]
    },
    "TypeError": {
     "line number": [
      184
     ]
    },
    "ValueError": {
     "line number": [
      166,
      171,
      175,
      180
     ]
    },
    "float": {
     "line number": [
      169,
      174
     ]
    },
    "numpy.NaN": {
     "line number": [
      179
     ]
    },
    "numpy.array": {
     "line number": [
      165
     ]
    },
    "numpy.finfo": {
     "line number": [
      174
     ]
    },
    "numpy.inf": {
     "line number": [
      170
     ]
    },
    "numpy.ones": {
     "line number": [
      169
     ]
    },
    "photutils.psf.tests.test_epsf.pytest": {
     "line number": [
      166,
      171,
      175,
      180,
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf_stars": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.psf.tests.test_epsf_stars.HAS_SCIPY": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_epsf_stars.Moffat2D": {
  "data": {
   "shadows": "astropy.modeling.models.Moffat2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf_stars.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf_stars.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf_stars.TestExtractStars": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "photutils.psf.tests.test_epsf_stars.pytest": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.tests.test_epsf_stars.TestExtractStars.setup_class": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "astropy.modeling.models.Moffat2D": {
     "line number": [
      34
     ]
    },
    "astropy.nddata.NDData": {
     "line number": [
      37
     ]
    },
    "astropy.table.Table": {
     "line number": [
      26
     ]
    },
    "m": {
     "line number": [
      35
     ]
    },
    "numpy.mgrid": {
     "line number": [
      31
     ]
    },
    "numpy.zeros": {
     "line number": [
      32
     ]
    },
    "zip": {
     "line number": [
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf_stars.TestExtractStars.test_extract_stars": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "extract_stars": {
     "line number": [
      41
     ]
    },
    "isinstance": {
     "line number": [
      43,
      44
     ]
    },
    "len": {
     "line number": [
      42,
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf_stars.TestExtractStars.test_extract_stars_inputs": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      51,
      54,
      57,
      60
     ]
    },
    "extract_stars": {
     "line number": [
      52,
      55,
      58,
      61
     ]
    },
    "numpy.ones": {
     "line number": [
      52
     ]
    },
    "photutils.psf.tests.test_epsf_stars.pytest": {
     "line number": [
      51,
      54,
      57,
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf_stars.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf_stars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf_stars.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf_stars.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf_stars.test_epsf_star_residual_image": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": {
    "EPSFModel": {
     "line number": [
      73
     ]
    },
    "IntegratedGaussianPRF": {
     "line number": [
      72
     ]
    },
    "astropy.nddata.NDData": {
     "line number": [
      81
     ]
    },
    "astropy.table.Table": {
     "line number": [
      78
     ]
    },
    "extract_stars": {
     "line number": [
      81
     ]
    },
    "numpy.mgrid": {
     "line number": [
      71,
      76
     ]
    },
    "numpy.sum": {
     "line number": [
      87
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      87
     ]
    },
    "numpy.zeros": {
     "line number": [
      75
     ]
    },
    "photutils.psf.tests.test_epsf_stars.pytest": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      16
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.psf.tests.test_groupstars.HAS_SKLEARN": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_groupstars.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_five": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": {
    "DAOGroup": {
     "line number": [
      197
     ]
    },
    "astropy.table.Table": {
     "line number": [
      183,
      186,
      189,
      192
     ]
    },
    "astropy.table.vstack": {
     "line number": [
      195
     ]
    },
    "daogroup": {
     "line number": [
      197,
      198
     ]
    },
    "int": {
     "line number": [
      184,
      187,
      190,
      193
     ]
    },
    "numpy.arange": {
     "line number": [
      184,
      187,
      190,
      193
     ]
    },
    "numpy.linspace": {
     "line number": [
      183,
      186,
      189,
      192
     ]
    },
    "numpy.ones": {
     "line number": [
      183,
      184,
      186,
      187,
      189,
      190,
      192,
      193
     ]
    },
    "photutils.psf.tests.test_groupstars.assert_table_almost_equal": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_four": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": {
    "DAOGroup": {
     "line number": [
      159
     ]
    },
    "astropy.table.Table": {
     "line number": [
      156
     ]
    },
    "daogroup": {
     "line number": [
      159,
      160
     ]
    },
    "int": {
     "line number": [
      157
     ]
    },
    "numpy.arange": {
     "line number": [
      156
     ]
    },
    "numpy.hstack": {
     "line number": [
      154,
      155
     ]
    },
    "numpy.linspace": {
     "line number": [
      152
     ]
    },
    "numpy.ones": {
     "line number": [
      157
     ]
    },
    "numpy.sqrt": {
     "line number": [
      153
     ]
    },
    "photutils.psf.tests.test_groupstars.assert_table_almost_equal": {
     "line number": [
      161
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_one": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "DAOGroup": {
     "line number": [
      63
     ]
    },
    "astropy.table.Table": {
     "line number": [
      56,
      59
     ]
    },
    "astropy.table.vstack": {
     "line number": [
      62
     ]
    },
    "daogroup": {
     "line number": [
      64
     ]
    },
    "int": {
     "line number": [
      57,
      60
     ]
    },
    "len": {
     "line number": [
      56,
      57,
      59,
      59,
      60
     ]
    },
    "numpy.arange": {
     "line number": [
      56,
      59
     ]
    },
    "numpy.array": {
     "line number": [
      51,
      53
     ]
    },
    "numpy.ones": {
     "line number": [
      57,
      60
     ]
    },
    "numpy.sqrt": {
     "line number": [
      51,
      51,
      51,
      52,
      53,
      53,
      53,
      54
     ]
    },
    "photutils.psf.tests.test_groupstars.assert_table_almost_equal": {
     "line number": [
      65
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_six": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "DAOGroup": {
     "line number": [
      237
     ]
    },
    "astropy.table.Table": {
     "line number": [
      227,
      230,
      233
     ]
    },
    "astropy.table.vstack": {
     "line number": [
      236
     ]
    },
    "daogroup": {
     "line number": [
      237,
      238
     ]
    },
    "int": {
     "line number": [
      228,
      231,
      234
     ]
    },
    "numpy.arange": {
     "line number": [
      227,
      230,
      233
     ]
    },
    "numpy.array": {
     "line number": [
      221,
      223
     ]
    },
    "numpy.ones": {
     "line number": [
      228,
      231,
      234
     ]
    },
    "numpy.sqrt": {
     "line number": [
      221,
      221,
      221,
      222,
      223,
      223,
      223,
      224
     ]
    },
    "photutils.psf.tests.test_groupstars.assert_table_almost_equal": {
     "line number": [
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_three": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": {
    "DAOGroup": {
     "line number": [
      125
     ]
    },
    "astropy.table.Table": {
     "line number": [
      118,
      121
     ]
    },
    "astropy.table.vstack": {
     "line number": [
      124
     ]
    },
    "daogroup": {
     "line number": [
      125,
      126
     ]
    },
    "int": {
     "line number": [
      119,
      122
     ]
    },
    "numpy.arange": {
     "line number": [
      119,
      122
     ]
    },
    "numpy.linspace": {
     "line number": [
      118,
      121
     ]
    },
    "numpy.ones": {
     "line number": [
      119,
      122
     ]
    },
    "numpy.zeros": {
     "line number": [
      118,
      121
     ]
    },
    "photutils.psf.tests.test_groupstars.assert_table_almost_equal": {
     "line number": [
      127
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_two": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": {
    "DAOGroup": {
     "line number": [
      94
     ]
    },
    "astropy.table.Table": {
     "line number": [
      87,
      90
     ]
    },
    "astropy.table.vstack": {
     "line number": [
      93
     ]
    },
    "daogroup": {
     "line number": [
      94,
      95
     ]
    },
    "int": {
     "line number": [
      88,
      91
     ]
    },
    "numpy.arange": {
     "line number": [
      88,
      91
     ]
    },
    "numpy.linspace": {
     "line number": [
      87,
      90
     ]
    },
    "numpy.ones": {
     "line number": [
      88,
      91
     ]
    },
    "numpy.zeros": {
     "line number": [
      87,
      90
     ]
    },
    "photutils.psf.tests.test_groupstars.assert_table_almost_equal": {
     "line number": [
      96
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_id_column": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "DAOGroup": {
     "line number": [
      264
     ]
    },
    "astropy.table.Table": {
     "line number": [
      261
     ]
    },
    "daogroup": {
     "line number": [
      264,
      265
     ]
    },
    "len": {
     "line number": [
      261,
      262
     ]
    },
    "numpy.arange": {
     "line number": [
      261,
      262
     ]
    },
    "numpy.array": {
     "line number": [
      257,
      259
     ]
    },
    "numpy.sqrt": {
     "line number": [
      257,
      257,
      257,
      258,
      259,
      259,
      259,
      260
     ]
    },
    "photutils.psf.tests.test_groupstars.assert_table_almost_equal": {
     "line number": [
      266
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_id_column_raise_error": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": {
    "DAOGroup": {
     "line number": [
      276
     ]
    },
    "ValueError": {
     "line number": [
      277
     ]
    },
    "astropy.table.Table": {
     "line number": [
      273
     ]
    },
    "daogroup": {
     "line number": [
      276,
      278
     ]
    },
    "len": {
     "line number": [
      273,
      274
     ]
    },
    "numpy.arange": {
     "line number": [
      273,
      274
     ]
    },
    "numpy.array": {
     "line number": [
      269,
      271
     ]
    },
    "numpy.sqrt": {
     "line number": [
      269,
      269,
      269,
      270,
      271,
      271,
      271,
      272
     ]
    },
    "photutils.psf.tests.test_groupstars.pytest": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_isolated_sources": {
  "data": {
   "lineno": 241,
   "symbols_in_volume": {
    "DAOGroup": {
     "line number": [
      252
     ]
    },
    "astropy.table.Table": {
     "line number": [
      249
     ]
    },
    "daogroup": {
     "line number": [
      252,
      253
     ]
    },
    "len": {
     "line number": [
      249,
      250
     ]
    },
    "numpy.arange": {
     "line number": [
      249,
      250
     ]
    },
    "numpy.array": {
     "line number": [
      245,
      247
     ]
    },
    "numpy.sqrt": {
     "line number": [
      245,
      245,
      245,
      246,
      247,
      247,
      247,
      248
     ]
    },
    "photutils.psf.tests.test_groupstars.assert_table_almost_equal": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup": {
  "data": {
   "lineno": 281,
   "symbols_in_volume": {
    "photutils.psf.tests.test_groupstars.pytest": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_group_stars_one": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": {
    "DBSCANGroup": {
     "line number": [
      296
     ]
    },
    "astropy.table.Table": {
     "line number": [
      289,
      292
     ]
    },
    "astropy.table.vstack": {
     "line number": [
      295
     ]
    },
    "dbscan": {
     "line number": [
      297
     ]
    },
    "int": {
     "line number": [
      290,
      293
     ]
    },
    "len": {
     "line number": [
      289,
      290,
      292,
      292,
      293
     ]
    },
    "numpy.arange": {
     "line number": [
      289,
      292
     ]
    },
    "numpy.array": {
     "line number": [
      284,
      286
     ]
    },
    "numpy.ones": {
     "line number": [
      290,
      293
     ]
    },
    "numpy.sqrt": {
     "line number": [
      284,
      284,
      284,
      285,
      286,
      286,
      286,
      287
     ]
    },
    "photutils.psf.tests.test_groupstars.assert_table_almost_equal": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_group_stars_two": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": {
    "DBSCANGroup": {
     "line number": [
      315
     ]
    },
    "astropy.table.Table": {
     "line number": [
      301,
      304,
      307,
      310
     ]
    },
    "astropy.table.vstack": {
     "line number": [
      313
     ]
    },
    "dbscan": {
     "line number": [
      315,
      316
     ]
    },
    "int": {
     "line number": [
      302,
      305,
      308,
      311
     ]
    },
    "numpy.arange": {
     "line number": [
      302,
      305,
      308,
      311
     ]
    },
    "numpy.linspace": {
     "line number": [
      301,
      304,
      307,
      310
     ]
    },
    "numpy.ones": {
     "line number": [
      301,
      302,
      304,
      305,
      307,
      308,
      310,
      311
     ]
    },
    "photutils.psf.tests.test_groupstars.assert_table_almost_equal": {
     "line number": [
      317
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_id_column": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "DBSCANGroup": {
     "line number": [
      342
     ]
    },
    "astropy.table.Table": {
     "line number": [
      339
     ]
    },
    "dbscan": {
     "line number": [
      342,
      343
     ]
    },
    "len": {
     "line number": [
      339,
      340
     ]
    },
    "numpy.arange": {
     "line number": [
      339,
      340
     ]
    },
    "numpy.array": {
     "line number": [
      335,
      337
     ]
    },
    "numpy.sqrt": {
     "line number": [
      335,
      335,
      335,
      336,
      337,
      337,
      337,
      338
     ]
    },
    "photutils.psf.tests.test_groupstars.assert_table_almost_equal": {
     "line number": [
      344
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_id_column_raise_error": {
  "data": {
   "lineno": 346,
   "symbols_in_volume": {
    "DBSCANGroup": {
     "line number": [
      354
     ]
    },
    "ValueError": {
     "line number": [
      355
     ]
    },
    "astropy.table.Table": {
     "line number": [
      351
     ]
    },
    "dbscan": {
     "line number": [
      354,
      356
     ]
    },
    "len": {
     "line number": [
      351,
      352
     ]
    },
    "numpy.arange": {
     "line number": [
      351,
      352
     ]
    },
    "numpy.array": {
     "line number": [
      347,
      349
     ]
    },
    "numpy.sqrt": {
     "line number": [
      347,
      347,
      347,
      348,
      349,
      349,
      349,
      350
     ]
    },
    "photutils.psf.tests.test_groupstars.pytest": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_isolated_sources": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": {
    "DBSCANGroup": {
     "line number": [
      330
     ]
    },
    "astropy.table.Table": {
     "line number": [
      327
     ]
    },
    "dbscan": {
     "line number": [
      330,
      331
     ]
    },
    "len": {
     "line number": [
      327,
      328
     ]
    },
    "numpy.arange": {
     "line number": [
      327,
      328
     ]
    },
    "numpy.array": {
     "line number": [
      323,
      325
     ]
    },
    "numpy.sqrt": {
     "line number": [
      323,
      323,
      323,
      324,
      325,
      325,
      325,
      326
     ]
    },
    "photutils.psf.tests.test_groupstars.assert_table_almost_equal": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.assert_almost_equal": {
  "data": {
   "shadows": "numpy.testing.assert_almost_equal"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.assert_table_almost_equal": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "numpy.testing.assert_almost_equal": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.sklearn.cluster": {
  "data": {
   "shadows": "sklearn.cluster"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.vstack": {
  "data": {
   "shadows": "astropy.table.vstack"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.psf.tests.test_models.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.HAS_SCIPY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_models.Moffat2D": {
  "data": {
   "shadows": "astropy.modeling.models.Moffat2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.TestFittableImageModel": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": {
    "photutils.psf.tests.test_models.pytest": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.tests.test_models.TestFittableImageModel.setup_class": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestFittableImageModel.test_centering_oversampled": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": {
    "FittableImageModel": {
     "line number": [
      88
     ]
    },
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      83
     ]
    },
    "gm": {
     "line number": [
      88,
      91,
      92
     ]
    },
    "model_oversampled": {
     "line number": [
      88,
      94,
      95,
      100,
      101
     ]
    },
    "model_oversampled.x_0": {
     "line number": [
      97
     ]
    },
    "model_oversampled.y_0": {
     "line number": [
      98
     ]
    },
    "numpy.mgrid": {
     "line number": [
      86
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      94,
      95,
      100,
      101
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestFittableImageModel.test_fittable_image_model": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "FittableImageModel": {
     "line number": [
      33,
      45,
      49
     ]
    },
    "model_nonorm": {
     "line number": [
      35,
      36,
      37,
      41,
      42
     ]
    },
    "model_norm": {
     "line number": [
      46,
      47,
      52
     ]
    },
    "model_norm2": {
     "line number": [
      51,
      52,
      53
     ]
    },
    "numpy.allclose": {
     "line number": [
      46,
      51
     ]
    },
    "numpy.mgrid": {
     "line number": [
      32
     ]
    },
    "numpy.sum": {
     "line number": [
      47,
      53
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      35,
      36,
      37,
      41,
      42,
      47,
      52,
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestFittableImageModel.test_fittable_image_model_oversampling": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": {
    "FittableImageModel": {
     "line number": [
      62,
      73
     ]
    },
    "model_oversampled": {
     "line number": [
      63,
      64,
      65,
      66,
      68
     ]
    },
    "model_wrongsampled": {
     "line number": [
      74,
      75,
      76,
      77,
      79
     ]
    },
    "numpy.allclose": {
     "line number": [
      75,
      76,
      77,
      79
     ]
    },
    "numpy.mgrid": {
     "line number": [
      57
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      63,
      64,
      65,
      66,
      68,
      74
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestFittableImageModel.test_oversampling_inputs": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": {
    "FittableImageModel": {
     "line number": [
      107,
      116
     ]
    },
    "ValueError": {
     "line number": [
      115
     ]
    },
    "float": {
     "line number": [
      109,
      111
     ]
    },
    "hasattr": {
     "line number": [
      108
     ]
    },
    "numpy.all": {
     "line number": [
      112
     ]
    },
    "numpy.arange": {
     "line number": [
      105
     ]
    },
    "photutils.psf.tests.test_models.pytest": {
     "line number": [
      115
     ]
    },
    "tuple": {
     "line number": [
      111
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel": {
  "data": {
   "lineno": 119
  },
  "type": "class"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel.setup_class": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "GriddedPSFModel": {
     "line number": [
      137
     ]
    },
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      125
     ]
    },
    "astropy.nddata.NDData": {
     "line number": [
      136
     ]
    },
    "g": {
     "line number": [
      126
     ]
    },
    "itertools.product": {
     "line number": [
      131
     ]
    },
    "list": {
     "line number": [
      131
     ]
    },
    "numpy.mgrid": {
     "line number": [
      122
     ]
    },
    "numpy.pi": {
     "line number": [
      124
     ]
    },
    "range": {
     "line number": [
      123
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel.test_gridded_psf_model": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": {
    "len": {
     "line number": [
      143,
      144
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel.test_gridded_psf_model_basic_eval": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": {
    "numpy.mgrid": {
     "line number": [
      152
     ]
    },
    "photutils.psf.tests.test_models.pytest": {
     "line number": [
      150
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel.test_gridded_psf_model_eval": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": {
    "astropy.units.deg": {
     "line number": [
      286
     ]
    },
    "detect_sources": {
     "line number": [
      284
     ]
    },
    "int": {
     "line number": [
      258,
      260,
      266,
      267
     ]
    },
    "numpy.ceil": {
     "line number": [
      257,
      259
     ]
    },
    "numpy.floor": {
     "line number": [
      266,
      267
     ]
    },
    "numpy.mgrid": {
     "line number": [
      280
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      287,
      288
     ]
    },
    "numpy.zeros": {
     "line number": [
      256
     ]
    },
    "photutils.psf.tests.test_models.pytest": {
     "line number": [
      248
     ]
    },
    "source_properties": {
     "line number": [
      285
     ]
    },
    "zip": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel.test_gridded_psf_model_eval_outside_grid": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": {
    "numpy.mgrid": {
     "line number": [
      158,
      160,
      164,
      166
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      162,
      168
     ]
    },
    "photutils.psf.tests.test_models.pytest": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel.test_gridded_psf_model_interp": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      173,
      177,
      183,
      191,
      193
     ]
    },
    "numpy.array": {
     "line number": [
      198
     ]
    },
    "numpy.ones": {
     "line number": [
      179,
      185,
      190
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      202
     ]
    },
    "photutils.psf.tests.test_models.pytest": {
     "line number": [
      173,
      177,
      183,
      191,
      193,
      170
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel.test_gridded_psf_model_invalid_inputs": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": {
    "GriddedPSFModel": {
     "line number": [
      209,
      213,
      219,
      226,
      233,
      239,
      246
     ]
    },
    "TypeError": {
     "line number": [
      208
     ]
    },
    "ValueError": {
     "line number": [
      212,
      218,
      225,
      232,
      238,
      245
     ]
    },
    "astropy.nddata.NDData": {
     "line number": [
      213,
      217,
      224,
      231,
      237,
      244
     ]
    },
    "numpy.ones": {
     "line number": [
      205,
      213
     ]
    },
    "photutils.psf.tests.test_models.pytest": {
     "line number": [
      208,
      212,
      218,
      225,
      232,
      238,
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestIntegratedGaussianPRF": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": {
    "photutils.psf.tests.test_models.pytest": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.tests.test_models.TestIntegratedGaussianPRF.test_gaussian_psf_integral": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": {
    "IntegratedGaussianPRF": {
     "line number": [
      316
     ]
    },
    "numpy.mgrid": {
     "line number": [
      317
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      318
     ]
    },
    "photutils.psf.tests.test_models.pytest": {
     "line number": [
      309
     ]
    },
    "psf": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestIntegratedGaussianPRF.test_subpixel_gauss_psf": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "IntegratedGaussianPRF": {
     "line number": [
      305
     ]
    },
    "gauss_psf": {
     "line number": [
      307
     ]
    },
    "numpy.mgrid": {
     "line number": [
      306
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      307
     ]
    },
    "photutils.psf.tests.test_models.pytest": {
     "line number": [
      298
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestPRFAdapter": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": {
    "photutils.psf.tests.test_models.pytest": {
     "line number": [
      321
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.tests.test_models.TestPRFAdapter.normalize_moffat": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": {
    "numpy.pi": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestPRFAdapter.test_create_eval_prfadapter": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": {
    "PRFAdapter": {
     "line number": [
      336
     ]
    },
    "astropy.modeling.models.Moffat2D": {
     "line number": [
      335
     ]
    },
    "dict": {
     "line number": [
      330,
      331,
      332
     ]
    },
    "photutils.psf.tests.test_models.pytest": {
     "line number": [
      329
     ]
    },
    "prf": {
     "line number": [
      342
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestPRFAdapter.test_prfadapter_integrates": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": {
    "PRFAdapter": {
     "line number": [
      355
     ]
    },
    "astropy.modeling.models.Moffat2D": {
     "line number": [
      352
     ]
    },
    "dict": {
     "line number": [
      345,
      346,
      347
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      359
     ]
    },
    "numpy.sum": {
     "line number": [
      367
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      367
     ]
    },
    "photutils.psf.tests.test_models.pytest": {
     "line number": [
      344
     ]
    },
    "prf1": {
     "line number": [
      360
     ]
    },
    "scipy.integrate.dblquad": {
     "line number": [
      365
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestPRFAdapter.test_prfadapter_sizematch": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "PRFAdapter": {
     "line number": [
      376,
      381
     ]
    },
    "astropy.modeling.models.Moffat2D": {
     "line number": [
      375,
      380
     ]
    },
    "dict": {
     "line number": [
      370,
      371
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      383,
      384
     ]
    },
    "numpy.sum": {
     "line number": [
      392,
      392
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      392
     ]
    },
    "photutils.psf.tests.test_models.pytest": {
     "line number": [
      369
     ]
    },
    "prf1": {
     "line number": [
      376,
      386
     ]
    },
    "prf2": {
     "line number": [
      387
     ]
    },
    "scipy.integrate.dblquad": {
     "line number": [
      389
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.dblquad": {
  "data": {
   "shadows": "scipy.integrate.dblquad"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      31
     ]
    },
    "astropy.convolution.utils.discretize_model": {
     "line number": [
      406,
      416,
      429
     ]
    },
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      404,
      414,
      427
     ]
    },
    "astropy.table.Table": {
     "line number": [
      80,
      92,
      106,
      399,
      421
     ]
    },
    "numpy.pi": {
     "line number": [
      400,
      404,
      414,
      427
     ]
    },
    "numpy.sqrt": {
     "line number": [
      400
     ]
    },
    "numpy.zeros": {
     "line number": [
      410,
      423
     ]
    },
    "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH": {
     "line number": [
      404,
      405,
      405,
      414,
      415,
      415
     ]
    },
    "photutils.psf.tests.test_photometry.IMAGE_SIZE": {
     "line number": [
      410,
      410,
      416,
      416,
      423,
      423,
      429,
      429
     ]
    },
    "photutils.psf.tests.test_photometry.INTAB": {
     "line number": [
      413
     ]
    },
    "photutils.psf.tests.test_photometry.PARS_TO_OUTPUT_0": {
     "line number": [
      369
     ]
    },
    "photutils.psf.tests.test_photometry.PARS_TO_OUTPUT_1": {
     "line number": [
      370
     ]
    },
    "photutils.psf.tests.test_photometry.PARS_TO_SET_0": {
     "line number": [
      367
     ]
    },
    "photutils.psf.tests.test_photometry.PARS_TO_SET_1": {
     "line number": [
      368
     ]
    },
    "photutils.psf.tests.test_photometry.PSF_SIZE": {
     "line number": [
      404,
      405,
      406,
      406
     ]
    },
    "photutils.psf.tests.test_photometry.WIDE_GAUSSIAN_WIDTH": {
     "line number": [
      427,
      428,
      428
     ]
    },
    "photutils.psf.tests.test_photometry.WIDE_INTAB": {
     "line number": [
      426
     ]
    },
    "photutils.psf.tests.test_photometry.image": {
     "line number": [
      416
     ]
    },
    "photutils.psf.tests.test_photometry.model": {
     "line number": [
      416,
      429
     ]
    },
    "photutils.psf.tests.test_photometry.psf_model": {
     "line number": [
      406
     ]
    },
    "photutils.psf.tests.test_photometry.sigma_psfs": {
     "line number": [
      79,
      84,
      91,
      96,
      105,
      110
     ]
    },
    "photutils.psf.tests.test_photometry.sources1": {
     "line number": [
      81,
      82,
      83,
      84,
      85,
      86,
      87
     ]
    },
    "photutils.psf.tests.test_photometry.sources2": {
     "line number": [
      93,
      94,
      95,
      96,
      97,
      98,
      99
     ]
    },
    "photutils.psf.tests.test_photometry.sources3": {
     "line number": [
      107,
      108,
      109,
      110,
      111,
      112,
      113,
      114
     ]
    },
    "photutils.psf.tests.test_photometry.wide_image": {
     "line number": [
      429
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.psf.tests.test_photometry.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.Fittable2DModel": {
  "data": {
   "shadows": "astropy.modeling.Fittable2DModel"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 395
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.HAS_SCIPY": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.IMAGE_SIZE": {
  "data": {
   "lineno": 396
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.INTAB": {
  "data": {
   "lineno": 399
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.Moffat2D": {
  "data": {
   "shadows": "astropy.modeling.models.Moffat2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.PARS_TO_OUTPUT_0": {
  "data": {
   "lineno": 366
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.PARS_TO_OUTPUT_1": {
  "data": {
   "lineno": 369
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.PARS_TO_SET_0": {
  "data": {
   "lineno": 365
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.PARS_TO_SET_1": {
  "data": {
   "lineno": 367
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.PSF_SIZE": {
  "data": {
   "lineno": 394
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.Parameter": {
  "data": {
   "shadows": "astropy.modeling.Parameter"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.SigmaClip": {
  "data": {
   "shadows": "astropy.stats.SigmaClip"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.WIDE_GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 420
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.WIDE_INTAB": {
  "data": {
   "lineno": 421
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.catch_warnings": {
  "data": {
   "shadows": "astropy.tests.helper.catch_warnings"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.discretize_model": {
  "data": {
   "shadows": "astropy.convolution.utils.discretize_model"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.gaussian_sigma_to_fwhm": {
  "data": {
   "shadows": "astropy.stats.gaussian_sigma_to_fwhm"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.image": {
  "data": {
   "lineno": 410
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.make_psf_photometry_objs": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": {
    "BasicPSFPhotometry": {
     "line number": [
      54
     ]
    },
    "DAOGroup": {
     "line number": [
      43,
      49
     ]
    },
    "DAOPhotPSFPhotometry": {
     "line number": [
      68
     ]
    },
    "DAOStarFinder": {
     "line number": [
      41,
      48
     ]
    },
    "IntegratedGaussianPRF": {
     "line number": [
      51
     ]
    },
    "IterativelySubtractedPSFPhotometry": {
     "line number": [
      61
     ]
    },
    "MMMBackground": {
     "line number": [
      50
     ]
    },
    "astropy.modeling.fitting.LevMarLSQFitter": {
     "line number": [
      52
     ]
    },
    "astropy.stats.gaussian_sigma_to_fwhm": {
     "line number": [
      42,
      43,
      45,
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.model": {
  "data": {
   "lineno": 427
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.psf_model": {
  "data": {
   "lineno": 404
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.sigma_psfs": {
  "data": {
   "lineno": 76
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.sources1": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.sources2": {
  "data": {
   "lineno": 92
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.sources3": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": {
    "PSFModelWithFWHM": {
     "line number": [
      359
     ]
    },
    "basic_phot_obj": {
     "line number": [
      343,
      361
     ]
    },
    "basic_phot_obj.aperture_radius": {
     "line number": [
      362
     ]
    },
    "basic_phot_obj.psf_model": {
     "line number": [
      360
     ]
    },
    "make_gaussian_prf_sources_image": {
     "line number": [
      337
     ]
    },
    "make_noise_image": {
     "line number": [
      338,
      340
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      362
     ]
    },
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs": {
     "line number": [
      343
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      331
     ]
    },
    "photutils.psf.tests.test_photometry.sources1": {
     "line number": [
      337
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius.PSFModelWithFWHM": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "astropy.modeling.Fittable2DModel": {
     "line number": [
      347
     ]
    },
    "astropy.modeling.Parameter": {
     "line number": [
      348,
      349,
      350,
      351
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius.PSFModelWithFWHM.__init__": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": {
    "super": {
     "line number": [
      354
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius.PSFModelWithFWHM.evaluate": {
  "data": {
   "lineno": 356
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius_errors": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      290
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      287
     ]
    },
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs": {
     "line number": [
      284
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      290,
      282
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius_value_error": {
  "data": {
   "lineno": 487,
   "symbols_in_volume": {
    "BasicPSFPhotometry": {
     "line number": [
      496
     ]
    },
    "DAOGroup": {
     "line number": [
      496
     ]
    },
    "DiscretePRF": {
     "line number": [
      494
     ]
    },
    "ValueError": {
     "line number": [
      500,
      505
     ]
    },
    "astropy.table.Table": {
     "line number": [
      504
     ]
    },
    "basic_phot": {
     "line number": [
      496,
      501,
      506
     ]
    },
    "photutils.psf.tests.test_photometry.image": {
     "line number": [
      501,
      506
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      500,
      505,
      487
     ]
    },
    "photutils.psf.tests.test_photometry.test_psf": {
     "line number": [
      494
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_define_fit_param_names": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": {
    "IntegratedGaussianPRF": {
     "line number": [
      381
     ]
    },
    "basic_phot_obj": {
     "line number": [
      384
     ]
    },
    "basic_phot_obj._define_fit_param_names": {
     "line number": [
      387
     ]
    },
    "basic_phot_obj._pars_to_output": {
     "line number": [
      389
     ]
    },
    "basic_phot_obj._pars_to_set": {
     "line number": [
      388
     ]
    },
    "basic_phot_obj.psf_model": {
     "line number": [
      385
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      388,
      389
     ]
    },
    "photutils.psf.tests.test_photometry.PARS_TO_OUTPUT_0": {
     "line number": [
      374
     ]
    },
    "photutils.psf.tests.test_photometry.PARS_TO_OUTPUT_1": {
     "line number": [
      376
     ]
    },
    "photutils.psf.tests.test_photometry.PARS_TO_SET_0": {
     "line number": [
      374
     ]
    },
    "photutils.psf.tests.test_photometry.PARS_TO_SET_1": {
     "line number": [
      376
     ]
    },
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs": {
     "line number": [
      384
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      373,
      378
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_finder_errors": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": {
    "DAOGroup": {
     "line number": [
      303
     ]
    },
    "IntegratedGaussianPRF": {
     "line number": [
      305
     ]
    },
    "IterativelySubtractedPSFPhotometry": {
     "line number": [
      302
     ]
    },
    "MMMBackground": {
     "line number": [
      304
     ]
    },
    "ValueError": {
     "line number": [
      298,
      301
     ]
    },
    "iter_phot_obj": {
     "line number": [
      296,
      302
     ]
    },
    "iter_phot_obj.finder": {
     "line number": [
      299
     ]
    },
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs": {
     "line number": [
      296
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      298,
      301,
      294
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_finder_positions_warning": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      326
     ]
    },
    "astropy.table.Table": {
     "line number": [
      311
     ]
    },
    "astropy.tests.helper.catch_warnings": {
     "line number": [
      319
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      319
     ]
    },
    "basic_phot_obj": {
     "line number": [
      320,
      328
     ]
    },
    "basic_phot_obj.finder": {
     "line number": [
      327
     ]
    },
    "make_gaussian_prf_sources_image": {
     "line number": [
      315
     ]
    },
    "make_noise_image": {
     "line number": [
      316
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      323,
      324
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      321,
      322
     ]
    },
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs": {
     "line number": [
      310
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      326,
      308
     ]
    },
    "photutils.psf.tests.test_photometry.sources1": {
     "line number": [
      315
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_finder_return_none": {
  "data": {
   "lineno": 657,
   "symbols_in_volume": {
    "DAOGroup": {
     "line number": [
      692
     ]
    },
    "FittableImageModel": {
     "line number": [
      679
     ]
    },
    "IterativelySubtractedPSFPhotometry": {
     "line number": [
      691
     ]
    },
    "astropy.table.Table": {
     "line number": [
      688
     ]
    },
    "float": {
     "line number": [
      677,
      681
     ]
    },
    "iter_phot": {
     "line number": [
      698
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      699
     ]
    },
    "numpy.zeros": {
     "line number": [
      677,
      681
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      657
     ]
    },
    "zip": {
     "line number": [
      685
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_finder_return_none.tophatfinder": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": {
    "astropy.table.Table": {
     "line number": [
      666
     ]
    },
    "enumerate": {
     "line number": [
      668
     ]
    },
    "float": {
     "line number": [
      667,
      667,
      667
     ]
    },
    "int": {
     "line number": [
      667,
      672
     ]
    },
    "numpy.mean": {
     "line number": [
      670,
      671
     ]
    },
    "numpy.unique": {
     "line number": [
      665
     ]
    },
    "numpy.where": {
     "line number": [
      669
     ]
    },
    "photutils.psf.tests.test_photometry.image": {
     "line number": [
      665,
      665,
      669
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_fitshape_errors": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      266,
      268,
      273,
      278
     ]
    },
    "numpy.all": {
     "line number": [
      263
     ]
    },
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs": {
     "line number": [
      258
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      266,
      268,
      273,
      278,
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_niters_errors": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      249
     ]
    },
    "iter_phot_obj": {
     "line number": [
      241
     ]
    },
    "iter_phot_obj.niters": {
     "line number": [
      245,
      246,
      250,
      253
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      246
     ]
    },
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs": {
     "line number": [
      241
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      249,
      239
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf": {
  "data": {
   "lineno": 406
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.test_psf_boundary": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "BasicPSFPhotometry": {
     "line number": [
      478
     ]
    },
    "DAOGroup": {
     "line number": [
      478
     ]
    },
    "DiscretePRF": {
     "line number": [
      476
     ]
    },
    "astropy.table.Table": {
     "line number": [
      482
     ]
    },
    "basic_phot": {
     "line number": [
      478,
      483
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      484
     ]
    },
    "photutils.psf.tests.test_photometry.image": {
     "line number": [
      483
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      470
     ]
    },
    "photutils.psf.tests.test_photometry.test_psf": {
     "line number": [
      476
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_boundary_gaussian": {
  "data": {
   "lineno": 509,
   "symbols_in_volume": {
    "BasicPSFPhotometry": {
     "line number": [
      517
     ]
    },
    "DAOGroup": {
     "line number": [
      517
     ]
    },
    "IntegratedGaussianPRF": {
     "line number": [
      515
     ]
    },
    "astropy.table.Table": {
     "line number": [
      521
     ]
    },
    "basic_phot": {
     "line number": [
      517,
      522
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      523
     ]
    },
    "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH": {
     "line number": [
      515
     ]
    },
    "photutils.psf.tests.test_photometry.image": {
     "line number": [
      522
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      509
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_extra_output_cols": {
  "data": {
   "lineno": 607,
   "symbols_in_volume": {
    "DAOPhotPSFPhotometry": {
     "line number": [
      632
     ]
    },
    "IntegratedGaussianPRF": {
     "line number": [
      614
     ]
    },
    "astropy.table.Table": {
     "line number": [
      623,
      626,
      628
     ]
    },
    "dao_phot": {
     "line number": [
      638
     ]
    },
    "enumerate": {
     "line number": [
      630
     ]
    },
    "len": {
     "line number": [
      645
     ]
    },
    "make_gaussian_prf_sources_image": {
     "line number": [
      616
     ]
    },
    "make_noise_image": {
     "line number": [
      617,
      619
     ]
    },
    "numpy.all": {
     "line number": [
      641,
      643,
      649,
      649,
      652,
      652,
      654
     ]
    },
    "numpy.isnan": {
     "line number": [
      649,
      652,
      654
     ]
    },
    "numpy.log": {
     "line number": [
      633
     ]
    },
    "numpy.sqrt": {
     "line number": [
      633
     ]
    },
    "photutils.psf.tests.test_photometry.image": {
     "line number": [
      616,
      638
     ]
    },
    "photutils.psf.tests.test_photometry.psf_model": {
     "line number": [
      614,
      634
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      607,
      608
     ]
    },
    "photutils.psf.tests.test_photometry.sigma_psfs": {
     "line number": [
      608
     ]
    },
    "photutils.psf.tests.test_photometry.sources3": {
     "line number": [
      608
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_fitting_data_on_edge": {
  "data": {
   "lineno": 587,
   "symbols_in_volume": {
    "BasicPSFPhotometry": {
     "line number": [
      596
     ]
    },
    "DAOGroup": {
     "line number": [
      596
     ]
    },
    "IntegratedGaussianPRF": {
     "line number": [
      594
     ]
    },
    "basic_phot": {
     "line number": [
      596,
      600
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      603
     ]
    },
    "photutils.psf.tests.test_photometry.WIDE_GAUSSIAN_WIDTH": {
     "line number": [
      594
     ]
    },
    "photutils.psf.tests.test_photometry.WIDE_INTAB": {
     "line number": [
      600
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      587
     ]
    },
    "photutils.psf.tests.test_photometry.wide_image": {
     "line number": [
      600
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_discrete": {
  "data": {
   "lineno": 433,
   "symbols_in_volume": {
    "BasicPSFPhotometry": {
     "line number": [
      438
     ]
    },
    "DAOGroup": {
     "line number": [
      438
     ]
    },
    "DiscretePRF": {
     "line number": [
      437
     ]
    },
    "basic_phot": {
     "line number": [
      441
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      444
     ]
    },
    "photutils.psf.tests.test_photometry.INTAB": {
     "line number": [
      441
     ]
    },
    "photutils.psf.tests.test_photometry.image": {
     "line number": [
      441
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      433
     ]
    },
    "photutils.psf.tests.test_photometry.test_psf": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_gaussian": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": {
    "BasicPSFPhotometry": {
     "line number": [
      534
     ]
    },
    "DAOGroup": {
     "line number": [
      534
     ]
    },
    "IntegratedGaussianPRF": {
     "line number": [
      532
     ]
    },
    "basic_phot": {
     "line number": [
      534,
      537
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      539
     ]
    },
    "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH": {
     "line number": [
      532
     ]
    },
    "photutils.psf.tests.test_photometry.INTAB": {
     "line number": [
      537
     ]
    },
    "photutils.psf.tests.test_photometry.image": {
     "line number": [
      537
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      526
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_gaussian2": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": {
    "BasicPSFPhotometry": {
     "line number": [
      554
     ]
    },
    "DAOGroup": {
     "line number": [
      554
     ]
    },
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      549
     ]
    },
    "basic_phot": {
     "line number": [
      554,
      557
     ]
    },
    "numpy.pi": {
     "line number": [
      549
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      560,
      561
     ]
    },
    "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH": {
     "line number": [
      549,
      550,
      550
     ]
    },
    "photutils.psf.tests.test_photometry.INTAB": {
     "line number": [
      557
     ]
    },
    "photutils.psf.tests.test_photometry.PSF_SIZE": {
     "line number": [
      549,
      550
     ]
    },
    "photutils.psf.tests.test_photometry.image": {
     "line number": [
      557
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      542,
      543
     ]
    },
    "prepare_psf_model": {
     "line number": [
      551
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_moffat": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": {
    "BasicPSFPhotometry": {
     "line number": [
      575
     ]
    },
    "DAOGroup": {
     "line number": [
      575
     ]
    },
    "astropy.modeling.models.Moffat2D": {
     "line number": [
      570
     ]
    },
    "basic_phot": {
     "line number": [
      575,
      578
     ]
    },
    "numpy.pi": {
     "line number": [
      570
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      582,
      584
     ]
    },
    "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH": {
     "line number": [
      570
     ]
    },
    "photutils.psf.tests.test_photometry.INTAB": {
     "line number": [
      578
     ]
    },
    "photutils.psf.tests.test_photometry.PSF_SIZE": {
     "line number": [
      570,
      571
     ]
    },
    "photutils.psf.tests.test_photometry.image": {
     "line number": [
      578
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      564
     ]
    },
    "prepare_psf_model": {
     "line number": [
      572
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_niters": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": {
    "StdBackgroundRMS": {
     "line number": [
      130
     ]
    },
    "astropy.stats.SigmaClip": {
     "line number": [
      129
     ]
    },
    "bkgrms": {
     "line number": [
      131
     ]
    },
    "iter_phot_obj": {
     "line number": [
      137
     ]
    },
    "iter_phot_obj.get_residual_image": {
     "line number": [
      138
     ]
    },
    "make_gaussian_prf_sources_image": {
     "line number": [
      123
     ]
    },
    "make_noise_image": {
     "line number": [
      124,
      126
     ]
    },
    "numpy.mean": {
     "line number": [
      154
     ]
    },
    "numpy.sqrt": {
     "line number": [
      141,
      143,
      145
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      147,
      148,
      149,
      154
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      150,
      151,
      152,
      157
     ]
    },
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs": {
     "line number": [
      133
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      117,
      118
     ]
    },
    "photutils.psf.tests.test_photometry.sigma_psfs": {
     "line number": [
      118
     ]
    },
    "photutils.psf.tests.test_photometry.sources3": {
     "line number": [
      118
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_oneiter": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "StdBackgroundRMS": {
     "line number": [
      187
     ]
    },
    "astropy.stats.SigmaClip": {
     "line number": [
      186
     ]
    },
    "astropy.table.Table": {
     "line number": [
      211
     ]
    },
    "bkgrms": {
     "line number": [
      187,
      188
     ]
    },
    "make_gaussian_prf_sources_image": {
     "line number": [
      179
     ]
    },
    "make_noise_image": {
     "line number": [
      180,
      182
     ]
    },
    "numpy.mean": {
     "line number": [
      205,
      226
     ]
    },
    "numpy.sqrt": {
     "line number": [
      195,
      197,
      199,
      220
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      200,
      201,
      202,
      205,
      223,
      226
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      203,
      204,
      221,
      222,
      224,
      225,
      229,
      232
     ]
    },
    "phot_proc": {
     "line number": [
      192,
      215
     ]
    },
    "phot_proc.get_residual_image": {
     "line number": [
      193,
      216
     ]
    },
    "phot_proc.psf_model.x_0.fixed": {
     "line number": [
      208,
      235
     ]
    },
    "phot_proc.psf_model.y_0.fixed": {
     "line number": [
      209,
      236
     ]
    },
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs": {
     "line number": [
      189
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      160,
      161,
      166,
      167,
      168,
      169
     ]
    },
    "photutils.psf.tests.test_photometry.sigma_psfs": {
     "line number": [
      162,
      163,
      166,
      168
     ]
    },
    "photutils.psf.tests.test_photometry.sources1": {
     "line number": [
      162,
      166
     ]
    },
    "photutils.psf.tests.test_photometry.sources2": {
     "line number": [
      163,
      168
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_tune_coordinates": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": {
    "BasicPSFPhotometry": {
     "line number": [
      461
     ]
    },
    "DAOGroup": {
     "line number": [
      461
     ]
    },
    "DiscretePRF": {
     "line number": [
      454
     ]
    },
    "basic_phot": {
     "line number": [
      461,
      465
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      467
     ]
    },
    "photutils.psf.tests.test_photometry.INTAB": {
     "line number": [
      458
     ]
    },
    "photutils.psf.tests.test_photometry.image": {
     "line number": [
      465
     ]
    },
    "photutils.psf.tests.test_photometry.pytest": {
     "line number": [
      447
     ]
    },
    "photutils.psf.tests.test_photometry.test_psf": {
     "line number": [
      454
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.wide_image": {
  "data": {
   "lineno": 423
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox": {
  "data": {
   "symbols_in_volume": {
    "astropy.convolution.utils.discretize_model": {
     "line number": [
      27,
      37,
      50
     ]
    },
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      25,
      35,
      48
     ]
    },
    "astropy.table.Table": {
     "line number": [
      20,
      42
     ]
    },
    "numpy.pi": {
     "line number": [
      21,
      25,
      35,
      48
     ]
    },
    "numpy.sqrt": {
     "line number": [
      21
     ]
    },
    "numpy.zeros": {
     "line number": [
      31,
      44
     ]
    },
    "photutils.psf.tests.test_sandbox.GAUSSIAN_WIDTH": {
     "line number": [
      25,
      26,
      26,
      35,
      36,
      36
     ]
    },
    "photutils.psf.tests.test_sandbox.IMAGE_SIZE": {
     "line number": [
      31,
      31,
      37,
      37,
      44,
      44,
      50,
      50
     ]
    },
    "photutils.psf.tests.test_sandbox.INTAB": {
     "line number": [
      34
     ]
    },
    "photutils.psf.tests.test_sandbox.PSF_SIZE": {
     "line number": [
      25,
      26,
      27,
      27
     ]
    },
    "photutils.psf.tests.test_sandbox.WIDE_GAUSSIAN_WIDTH": {
     "line number": [
      48,
      49,
      49
     ]
    },
    "photutils.psf.tests.test_sandbox.WIDE_INTAB": {
     "line number": [
      47
     ]
    },
    "photutils.psf.tests.test_sandbox.image": {
     "line number": [
      37
     ]
    },
    "photutils.psf.tests.test_sandbox.model": {
     "line number": [
      37,
      50
     ]
    },
    "photutils.psf.tests.test_sandbox.psf_model": {
     "line number": [
      27
     ]
    },
    "photutils.psf.tests.test_sandbox.wide_image": {
     "line number": [
      50
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.psf.tests.test_sandbox.GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.IMAGE_SIZE": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.INTAB": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.PSF_SIZE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.WIDE_GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.WIDE_INTAB": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.discretize_model": {
  "data": {
   "shadows": "astropy.convolution.utils.discretize_model"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.image": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.model": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.psf_model": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.test_create_prf_flux": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      96
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      99,
      100
     ]
    },
    "photutils.psf.tests.test_sandbox.INTAB": {
     "line number": [
      96,
      98
     ]
    },
    "photutils.psf.tests.test_sandbox.PSF_SIZE": {
     "line number": [
      97
     ]
    },
    "photutils.psf.tests.test_sandbox.image": {
     "line number": [
      96
     ]
    },
    "photutils.psf.tests.test_sandbox.test_psf": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox.test_create_prf_mean": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "list": {
     "line number": [
      61
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      63
     ]
    },
    "photutils.psf.tests.test_sandbox.INTAB": {
     "line number": [
      61
     ]
    },
    "photutils.psf.tests.test_sandbox.PSF_SIZE": {
     "line number": [
      62
     ]
    },
    "photutils.psf.tests.test_sandbox.image": {
     "line number": [
      60
     ]
    },
    "photutils.psf.tests.test_sandbox.test_psf": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox.test_create_prf_median": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      72
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      75
     ]
    },
    "photutils.psf.tests.test_sandbox.INTAB": {
     "line number": [
      72
     ]
    },
    "photutils.psf.tests.test_sandbox.PSF_SIZE": {
     "line number": [
      73
     ]
    },
    "photutils.psf.tests.test_sandbox.image": {
     "line number": [
      72
     ]
    },
    "photutils.psf.tests.test_sandbox.test_psf": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox.test_create_prf_nan": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      86
     ]
    },
    "numpy.isnan": {
     "line number": [
      88
     ]
    },
    "numpy.nan": {
     "line number": [
      84,
      85
     ]
    },
    "photutils.psf.tests.test_sandbox.INTAB": {
     "line number": [
      86
     ]
    },
    "photutils.psf.tests.test_sandbox.PSF_SIZE": {
     "line number": [
      87
     ]
    },
    "photutils.psf.tests.test_sandbox.image": {
     "line number": [
      83,
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox.test_psf": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.wide_image": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      20
     ]
    },
    "astropy.convolution.utils.discretize_model": {
     "line number": [
      36,
      46
     ]
    },
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      34,
      44
     ]
    },
    "astropy.table.Table": {
     "line number": [
      29
     ]
    },
    "numpy.pi": {
     "line number": [
      30,
      34,
      44
     ]
    },
    "numpy.sqrt": {
     "line number": [
      30
     ]
    },
    "numpy.zeros": {
     "line number": [
      40
     ]
    },
    "photutils.psf.tests.test_utils.GAUSSIAN_WIDTH": {
     "line number": [
      34,
      35,
      35,
      44,
      45,
      45
     ]
    },
    "photutils.psf.tests.test_utils.IMAGE_SIZE": {
     "line number": [
      40,
      40,
      46,
      46
     ]
    },
    "photutils.psf.tests.test_utils.INTAB": {
     "line number": [
      43
     ]
    },
    "photutils.psf.tests.test_utils.PSF_SIZE": {
     "line number": [
      34,
      35,
      36,
      36
     ]
    },
    "photutils.psf.tests.test_utils.image": {
     "line number": [
      46
     ]
    },
    "photutils.psf.tests.test_utils.model": {
     "line number": [
      46
     ]
    },
    "photutils.psf.tests.test_utils.psf_model": {
     "line number": [
      36
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.psf.tests.test_utils.GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.HAS_SCIPY": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.IMAGE_SIZE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.INTAB": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.Moffat2D": {
  "data": {
   "shadows": "astropy.modeling.models.Moffat2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.PSF_SIZE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.discretize_model": {
  "data": {
   "shadows": "astropy.convolution.utils.discretize_model"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.image": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.model": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.moffimg": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": {
    "astropy.modeling.models.Moffat2D": {
     "line number": [
      58
     ]
    },
    "mof": {
     "line number": [
      70
     ]
    },
    "numpy.linspace": {
     "line number": [
      68
     ]
    },
    "numpy.meshgrid": {
     "line number": [
      68
     ]
    },
    "numpy.pi": {
     "line number": [
      61
     ]
    },
    "photutils.psf.tests.test_utils.pytest": {
     "line number": [
      50
     ]
    },
    "scipy.integrate.dblquad": {
     "line number": [
      64
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.psf_model": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.test_get_grouped_psf_model": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "IntegratedGaussianPRF": {
     "line number": [
      151
     ]
    },
    "astropy.table.Table": {
     "line number": [
      152
     ]
    },
    "get_grouped_psf_model": {
     "line number": [
      156
     ]
    },
    "photutils.psf.tests.test_utils.pytest": {
     "line number": [
      149
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_utils.test_moffat_fitting": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "astropy.modeling.fitting.LevMarLSQFitter": {
     "line number": [
      87
     ]
    },
    "astropy.modeling.models.Moffat2D": {
     "line number": [
      84
     ]
    },
    "f": {
     "line number": [
      89
     ]
    },
    "mof": {
     "line number": [
      81
     ]
    },
    "mof.amplitude": {
     "line number": [
      85
     ]
    },
    "mof.parameters": {
     "line number": [
      90
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      90
     ]
    },
    "photutils.psf.tests.test_utils.moffimg": {
     "line number": [
      81
     ]
    },
    "photutils.psf.tests.test_utils.pytest": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_utils.test_prepare_psf_model": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": {
    "astropy.modeling.fitting.LevMarLSQFitter": {
     "line number": [
      116
     ]
    },
    "astropy.modeling.models.Moffat2D": {
     "line number": [
      119
     ]
    },
    "dict": {
     "line number": [
      96,
      98,
      100,
      102
     ]
    },
    "f": {
     "line number": [
      116,
      134
     ]
    },
    "getattr": {
     "line number": [
      137,
      138,
      140
     ]
    },
    "mof": {
     "line number": [
      115
     ]
    },
    "mof.amplitude": {
     "line number": [
      120
     ]
    },
    "numpy.abs": {
     "line number": [
      137,
      138,
      140
     ]
    },
    "photutils.psf.tests.test_utils.moffimg": {
     "line number": [
      115
     ]
    },
    "photutils.psf.tests.test_utils.pytest": {
     "line number": [
      95,
      105
     ]
    },
    "prepare_psf_model": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.tests.test_utils.test_psf": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.test_subtract_psf": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": {
    "DiscretePRF": {
     "line number": [
      169
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      174
     ]
    },
    "numpy.zeros_like": {
     "line number": [
      174
     ]
    },
    "photutils.psf.tests.test_utils.INTAB": {
     "line number": [
      170
     ]
    },
    "photutils.psf.tests.test_utils.image": {
     "line number": [
      173,
      174
     ]
    },
    "photutils.psf.tests.test_utils.pytest": {
     "line number": [
      165
     ]
    },
    "photutils.psf.tests.test_utils.test_psf": {
     "line number": [
      169
     ]
    },
    "subtract_psf": {
     "line number": [
      173
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.utils": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.utils.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.utils.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.psf.utils._call_fitter": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": {
    "fitter": {
     "line number": [
      184,
      186
     ]
    },
    "numpy.all": {
     "line number": [
      183
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.utils._extract_psf_fitting_names": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      156,
      164,
      172
     ]
    },
    "hasattr": {
     "line number": [
      151,
      159,
      167
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.utils.add_array": {
  "data": {
   "shadows": "astropy.nddata.utils.add_array"
  },
  "type": "import"
 },
 "photutils.psf.utils.extract_array": {
  "data": {
   "shadows": "astropy.nddata.utils.extract_array"
  },
  "type": "import"
 },
 "photutils.psf.utils.get_grouped_psf_model": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": {
    "setattr": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.utils.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "photutils.psf.utils.models": {
  "data": {
   "shadows": "astropy.modeling.models"
  },
  "type": "import"
 },
 "photutils.psf.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.utils.prepare_psf_model": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "astropy.modeling.models.Const2D": {
     "line number": [
      73,
      84
     ]
    },
    "astropy.modeling.models.Identity": {
     "line number": [
      58,
      66
     ]
    },
    "astropy.modeling.models.Shift": {
     "line number": [
      55,
      63
     ]
    },
    "getattr": {
     "line number": [
      100,
      101,
      103
     ]
    },
    "numpy.inf": {
     "line number": [
      82,
      82,
      83,
      83
     ]
    },
    "scipy.integrate.dblquad": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.psf.utils.subtract_psf": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      214,
      220,
      222,
      224
     ]
    },
    "astropy.nddata.utils.add_array": {
     "line number": [
      255
     ]
    },
    "astropy.nddata.utils.extract_array": {
     "line number": [
      248,
      249
     ]
    },
    "astropy.table.Table": {
     "line number": [
      226
     ]
    },
    "float": {
     "line number": [
      248,
      249
     ]
    },
    "getattr": {
     "line number": [
      238,
      239,
      240,
      251,
      252,
      253
     ]
    },
    "hasattr": {
     "line number": [
      218
     ]
    },
    "numpy.indices": {
     "line number": [
      231
     ]
    },
    "photutils.psf.utils._extract_psf_fitting_names": {
     "line number": [
      230
     ]
    },
    "psf": {
     "line number": [
      242,
      251,
      252,
      253,
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.core": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.core.Segment": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "photutils.segmentation.core.Segment.__array__": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "photutils.segmentation.core.Segment.__init__": {
  "data": {
   "lineno": 45
  },
  "type": "function"
 },
 "photutils.segmentation.core.Segment.__repr__": {
  "data": {
   "lineno": 63
  },
  "type": "function"
 },
 "photutils.segmentation.core.Segment.__str__": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      58
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.Segment.bbox": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": {
    "BoundingBox": {
     "line number": [
      113
     ]
    },
    "ValueError": {
     "line number": [
      110
     ]
    },
    "astropy.utils.lazyproperty": {
     "line number": [
      102
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.Segment.data": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      74
     ]
    },
    "numpy.copy": {
     "line number": [
      83
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.Segment.data_ma": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      88
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      100
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.Segment.make_cutout": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      151
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      149
     ]
    },
    "numpy.ma.masked_array": {
     "line number": [
      156
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage": {
  "data": {
   "lineno": 161
  },
  "type": "class"
 },
 "photutils.segmentation.core.SegmentationImage.__array__": {
  "data": {
   "lineno": 200
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.__getitem__": {
  "data": {
   "lineno": 178
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.__init__": {
  "data": {
   "lineno": 175
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.__iter__": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.__repr__": {
  "data": {
   "lineno": 197
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.__str__": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage._cmap": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      208
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage._get_labels": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": {
    "numpy.unique": {
     "line number": [
      256
     ]
    },
    "staticmethod": {
     "line number": [
      218
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage._ndim": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      316
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.areas": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      409
     ]
    },
    "numpy.array": {
     "line number": [
      420
     ]
    },
    "numpy.bincount": {
     "line number": [
      421
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.background_area": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      403
     ]
    },
    "len": {
     "line number": [
      407
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.check_label": {
  "data": {
   "lineno": 486
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.check_labels": {
  "data": {
   "lineno": 504,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      533,
      535
     ]
    },
    "len": {
     "line number": [
      532
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      520
     ]
    },
    "numpy.setdiff1d": {
     "line number": [
      529
     ]
    },
    "numpy.where": {
     "line number": [
      524
     ]
    },
    "set": {
     "line number": [
      521
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.copy": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": {
    "copy.deepcopy": {
     "line number": [
      484
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.data": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      283,
      288,
      292
     ]
    },
    "int": {
     "line number": [
      286
     ]
    },
    "numpy.any": {
     "line number": [
      282,
      287
     ]
    },
    "numpy.asarray": {
     "line number": [
      286
     ]
    },
    "numpy.isfinite": {
     "line number": [
      282
     ]
    },
    "numpy.min": {
     "line number": [
      291
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.data_ma": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      301
     ]
    },
    "numpy.ma.masked_where": {
     "line number": [
      308
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.get_area": {
  "data": {
   "lineno": 424
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.get_areas": {
  "data": {
   "lineno": 441
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.get_index": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": {
    "numpy.searchsorted": {
     "line number": [
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.get_indices": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": {
    "numpy.searchsorted": {
     "line number": [
      386
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.is_consecutive": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      460
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.keep_label": {
  "data": {
   "lineno": 780
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.keep_labels": {
  "data": {
   "lineno": 829,
   "symbols_in_volume": {
    "list": {
     "line number": [
      880
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      879
     ]
    },
    "set": {
     "line number": [
      880,
      880
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.labels": {
  "data": {
   "lineno": 322,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.make_cmap": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": {
    "astropy.utils.decorators.deprecated_renamed_argument": {
     "line number": [
      537
     ]
    },
    "make_random_cmap": {
     "line number": [
      567
     ]
    },
    "matplotlib.colors.hex2color": {
     "line number": [
      570
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.max_label": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      334
     ]
    },
    "numpy.max": {
     "line number": [
      338
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.missing_labels": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      470
     ]
    },
    "numpy.array": {
     "line number": [
      478
     ]
    },
    "numpy.insert": {
     "line number": [
      479
     ]
    },
    "range": {
     "line number": [
      478
     ]
    },
    "set": {
     "line number": [
      478
     ]
    },
    "sorted": {
     "line number": [
      478
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.nlabels": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      328
     ]
    },
    "len": {
     "line number": [
      332
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.outline_segments": {
  "data": {
   "lineno": 1129,
   "symbols_in_volume": {
    "int": {
     "line number": [
      1180
     ]
    },
    "numpy.ma.masked_where": {
     "line number": [
      1184
     ]
    },
    "scipy.ndimage.generate_binary_structure": {
     "line number": [
      1174
     ]
    },
    "scipy.ndimage.grey_dilation": {
     "line number": [
      1177
     ]
    },
    "scipy.ndimage.grey_erosion": {
     "line number": [
      1175
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.reassign_label": {
  "data": {
   "lineno": 574
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.reassign_labels": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": {
    "int": {
     "line number": [
      722,
      728
     ]
    },
    "len": {
     "line number": [
      729
     ]
    },
    "max": {
     "line number": [
      728
     ]
    },
    "numpy.arange": {
     "line number": [
      729
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      718
     ]
    },
    "numpy.unique": {
     "line number": [
      727
     ]
    },
    "numpy.zeros": {
     "line number": [
      722,
      728
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.relabel_consecutive": {
  "data": {
   "lineno": 736,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      767
     ]
    },
    "int": {
     "line number": [
      773
     ]
    },
    "numpy.arange": {
     "line number": [
      774
     ]
    },
    "numpy.zeros": {
     "line number": [
      773
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.remove_border_labels": {
  "data": {
   "lineno": 989,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1048
     ]
    },
    "bool": {
     "line number": [
      1051
     ]
    },
    "min": {
     "line number": [
      1047
     ]
    },
    "numpy.zeros": {
     "line number": [
      1051
     ]
    },
    "range": {
     "line number": [
      1052
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.remove_label": {
  "data": {
   "lineno": 883
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.remove_labels": {
  "data": {
   "lineno": 936
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.remove_masked_labels": {
  "data": {
   "lineno": 1062,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      1121
     ]
    },
    "list": {
     "line number": [
      1126
     ]
    },
    "set": {
     "line number": [
      1126,
      1126
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.segments": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      258
     ]
    },
    "photutils.segmentation.core.Segment": {
     "line number": [
      270
     ]
    },
    "zip": {
     "line number": [
      269
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.shape": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      310
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.slices": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": {
    "astropy.utils.lazyproperty": {
     "line number": [
      388
     ]
    },
    "scipy.ndimage.find_objects": {
     "line number": [
      401
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.core.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.segmentation.core.__doctest_requires__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.segmentation.core.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "photutils.segmentation.core.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "photutils.segmentation.core.deprecated_renamed_argument": {
  "data": {
   "shadows": "astropy.utils.decorators.deprecated_renamed_argument"
  },
  "type": "import"
 },
 "photutils.segmentation.core.find_objects": {
  "data": {
   "shadows": "scipy.ndimage.find_objects"
  },
  "type": "import"
 },
 "photutils.segmentation.core.generate_binary_structure": {
  "data": {
   "shadows": "scipy.ndimage.generate_binary_structure"
  },
  "type": "import"
 },
 "photutils.segmentation.core.grey_dilation": {
  "data": {
   "shadows": "scipy.ndimage.grey_dilation"
  },
  "type": "import"
 },
 "photutils.segmentation.core.grey_erosion": {
  "data": {
   "shadows": "scipy.ndimage.grey_erosion"
  },
  "type": "import"
 },
 "photutils.segmentation.core.lazyproperty": {
  "data": {
   "shadows": "astropy.utils.lazyproperty"
  },
  "type": "import"
 },
 "photutils.segmentation.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.deblend.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.segmentation.deblend._deblend_source": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      290,
      316
     ]
    },
    "ValueError": {
     "line number": [
      225,
      227,
      254
     ]
    },
    "_detect_sources": {
     "line number": [
      261
     ]
    },
    "_make_binary_structure": {
     "line number": [
      265
     ]
    },
    "any": {
     "line number": [
      308
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      241
     ]
    },
    "bool": {
     "line number": [
      300
     ]
    },
    "float": {
     "line number": [
      232
     ]
    },
    "len": {
     "line number": [
      268
     ]
    },
    "numpy.arange": {
     "line number": [
      244
     ]
    },
    "numpy.argmin": {
     "line number": [
      314
     ]
    },
    "numpy.array": {
     "line number": [
      306
     ]
    },
    "numpy.nanmax": {
     "line number": [
      234
     ]
    },
    "numpy.nanmin": {
     "line number": [
      233
     ]
    },
    "numpy.nansum": {
     "line number": [
      232
     ]
    },
    "numpy.sum": {
     "line number": [
      306
     ]
    },
    "numpy.unique": {
     "line number": [
      284,
      305
     ]
    },
    "object.__new__": {
     "line number": [
      290,
      316
     ]
    },
    "photutils.segmentation.deblend.warnings": {
     "line number": [
      239,
      258
     ]
    },
    "range": {
     "line number": [
      272
     ]
    },
    "scipy.ndimage.label": {
     "line number": [
      280,
      281,
      291,
      306,
      307
     ]
    },
    "skimage.segmentation.watershed": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.deblend.deblend_sources": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      104,
      120,
      126
     ]
    },
    "ValueError": {
     "line number": [
      107,
      136
     ]
    },
    "_filter_data": {
     "line number": [
      116
     ]
    },
    "bool": {
     "line number": [
      134,
      135
     ]
    },
    "isinstance": {
     "line number": [
      103
     ]
    },
    "numpy.array_equal": {
     "line number": [
      134
     ]
    },
    "numpy.atleast_1d": {
     "line number": [
      112
     ]
    },
    "numpy.copy": {
     "line number": [
      121,
      127
     ]
    },
    "object.__new__": {
     "line number": [
      120,
      126
     ]
    },
    "photutils.segmentation.deblend._deblend_source": {
     "line number": [
      130
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.deblend.ndilabel": {
  "data": {
   "shadows": "scipy.ndimage.label"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.watershed": {
  "data": {
   "shadows": "skimage.segmentation.watershed"
  },
  "type": "import"
 },
 "photutils.segmentation.detect": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.detect.Gaussian2DKernel": {
  "data": {
   "shadows": "astropy.convolution.Gaussian2DKernel"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.segmentation.detect._detect_sources": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "RuntimeWarning": {
     "line number": [
      144
     ]
    },
    "ValueError": {
     "line number": [
      131,
      136
     ]
    },
    "_filter_data": {
     "line number": [
      140
     ]
    },
    "enumerate": {
     "line number": [
      170
     ]
    },
    "int": {
     "line number": [
      130
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      156,
      173,
      176
     ]
    },
    "object.__new__": {
     "line number": [
      184
     ]
    },
    "photutils.segmentation.detect._make_binary_structure": {
     "line number": [
      146
     ]
    },
    "photutils.segmentation.detect.warnings": {
     "line number": [
      144,
      157,
      177
     ]
    },
    "scipy.ndimage.find_objects": {
     "line number": [
      169
     ]
    },
    "scipy.ndimage.label": {
     "line number": [
      164
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.detect._make_binary_structure": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      53
     ]
    },
    "int": {
     "line number": [
      51
     ]
    },
    "numpy.array": {
     "line number": [
      46,
      49
     ]
    },
    "numpy.ones": {
     "line number": [
      51
     ]
    },
    "scipy.ndimage.generate_binary_structure": {
     "line number": [
      56
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.detect.detect_sources": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": {
    "photutils.segmentation.detect._detect_sources": {
     "line number": [
      303
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.detect.gaussian_fwhm_to_sigma": {
  "data": {
   "shadows": "astropy.stats.gaussian_fwhm_to_sigma"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.generate_binary_structure": {
  "data": {
   "shadows": "scipy.ndimage.generate_binary_structure"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.make_source_mask": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": {
    "astropy.convolution.Gaussian2DKernel": {
     "line number": [
      383
     ]
    },
    "astropy.stats.gaussian_fwhm_to_sigma": {
     "line number": [
      382
     ]
    },
    "bool": {
     "line number": [
      390,
      393
     ]
    },
    "detect_threshold": {
     "line number": [
      374
     ]
    },
    "numpy.ones": {
     "line number": [
      392
     ]
    },
    "numpy.zeros": {
     "line number": [
      390
     ]
    },
    "photutils.segmentation.detect.detect_sources": {
     "line number": [
      388
     ]
    },
    "scipy.ndimage.binary_dilation": {
     "line number": [
      393
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.detect.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.segmentation.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.tests.test_core": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      15,
      21
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.segmentation.tests.test_core.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_core.HAS_SCIPY": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "photutils.segmentation.tests.test_core.pytest": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.setup_class": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_areas": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "numpy.array": {
     "line number": [
      147
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      148,
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_array": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_background_area": {
  "data": {
   "lineno": 155
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_check_labels": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      172,
      176
     ]
    },
    "photutils.segmentation.tests.test_core.pytest": {
     "line number": [
      172,
      176
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_copy": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_data_ma": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": {
    "isinstance": {
     "line number": [
      84
     ]
    },
    "numpy.ma.MaskedArray": {
     "line number": [
      84
     ]
    },
    "numpy.ma.count": {
     "line number": [
      85
     ]
    },
    "numpy.ma.count_masked": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_invalid_data": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      51,
      57,
      64,
      69
     ]
    },
    "ValueError": {
     "line number": [
      50,
      56,
      63,
      68
     ]
    },
    "numpy.arange": {
     "line number": [
      67
     ]
    },
    "numpy.inf": {
     "line number": [
      61,
      62
     ]
    },
    "numpy.nan": {
     "line number": [
      55
     ]
    },
    "numpy.zeros": {
     "line number": [
      49,
      54,
      60
     ]
    },
    "photutils.segmentation.tests.test_core.pytest": {
     "line number": [
      50,
      56,
      63,
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_invalid_label": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      74
     ]
    },
    "photutils.segmentation.tests.test_core.pytest": {
     "line number": [
      74,
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_invalid_label_array": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      80
     ]
    },
    "photutils.segmentation.tests.test_core.pytest": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_is_consecutive": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_keep_labels": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      232
     ]
    },
    "numpy.array": {
     "line number": [
      226
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      234
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_keep_labels_relabel": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      243
     ]
    },
    "numpy.array": {
     "line number": [
      237
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_labels": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      138
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_make_cmap": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": {
    "len": {
     "line number": [
      182
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      183,
      185
     ]
    },
    "photutils.segmentation.tests.test_core.pytest": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_max_label": {
  "data": {
   "lineno": 143
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_missing_labels": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_nlabels": {
  "data": {
   "lineno": 140
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_outline_segments": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      320
     ]
    },
    "int": {
     "line number": [
      318
     ]
    },
    "numpy.copy": {
     "line number": [
      321
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      323
     ]
    },
    "numpy.zeros": {
     "line number": [
      318
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_outline_segments_masked_background": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      328
     ]
    },
    "int": {
     "line number": [
      326
     ]
    },
    "isinstance": {
     "line number": [
      332
     ]
    },
    "numpy.copy": {
     "line number": [
      329
     ]
    },
    "numpy.ma.MaskedArray": {
     "line number": [
      332
     ]
    },
    "numpy.ma.count": {
     "line number": [
      333
     ]
    },
    "numpy.ma.count_masked": {
     "line number": [
      334
     ]
    },
    "numpy.zeros": {
     "line number": [
      326
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_reassign_labels": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      190
     ]
    },
    "len": {
     "line number": [
      199
     ]
    },
    "numpy.array": {
     "line number": [
      192
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      198
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_relabel_consecutive": {
  "data": {
   "lineno": 201,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      203
     ]
    },
    "len": {
     "line number": [
      217
     ]
    },
    "numpy.array": {
     "line number": [
      204
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      212,
      216
     ]
    },
    "photutils.segmentation.tests.test_core.pytest": {
     "line number": [
      201
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_relabel_consecutive_start_invalid": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      222
     ]
    },
    "ValueError": {
     "line number": [
      221
     ]
    },
    "photutils.segmentation.tests.test_core.pytest": {
     "line number": [
      221,
      219
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_border_labels": {
  "data": {
   "lineno": 269,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      276
     ]
    },
    "numpy.array": {
     "line number": [
      270
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      278
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_border_labels_border_width": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      282
     ]
    },
    "ValueError": {
     "line number": [
      281
     ]
    },
    "photutils.segmentation.tests.test_core.pytest": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_labels": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      254
     ]
    },
    "numpy.array": {
     "line number": [
      248
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      256
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_labels_relabel": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      265
     ]
    },
    "numpy.array": {
     "line number": [
      259
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      267
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_masked_labels": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      292
     ]
    },
    "bool": {
     "line number": [
      293
     ]
    },
    "numpy.array": {
     "line number": [
      286
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      296
     ]
    },
    "numpy.zeros": {
     "line number": [
      293
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_masked_labels_without_partial_overlap": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      305
     ]
    },
    "bool": {
     "line number": [
      306
     ]
    },
    "numpy.array": {
     "line number": [
      299
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      309
     ]
    },
    "numpy.zeros": {
     "line number": [
      306
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_masked_segments_mask_shape": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      312
     ]
    },
    "ValueError": {
     "line number": [
      314
     ]
    },
    "bool": {
     "line number": [
      313
     ]
    },
    "numpy.ones": {
     "line number": [
      312
     ]
    },
    "numpy.zeros": {
     "line number": [
      313
     ]
    },
    "photutils.segmentation.tests.test_core.pytest": {
     "line number": [
      314
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_repr_str": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      107,
      111
     ]
    },
    "str": {
     "line number": [
      107
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_segment_data": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      121,
      122
     ]
    },
    "numpy.unique": {
     "line number": [
      122
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_segment_make_cutout": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": {
    "numpy.ma.is_masked": {
     "line number": [
      126,
      130
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      127,
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_segment_make_cutout_input": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      134
     ]
    },
    "numpy.arange": {
     "line number": [
      135
     ]
    },
    "photutils.segmentation.tests.test_core.pytest": {
     "line number": [
      134
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_segment_repr_str": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": {
    "repr": {
     "line number": [
      114,
      118
     ]
    },
    "str": {
     "line number": [
      114
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_segments": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": {
    "enumerate": {
     "line number": [
      103
     ]
    },
    "isinstance": {
     "line number": [
      89
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      21,
      27
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.segmentation.tests.test_deblend.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.HAS_SCIPY": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_deblend.HAS_SKIMAGE": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "photutils.segmentation.tests.test_deblend.pytest": {
     "line number": [
      31,
      32
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.setup_class": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      35,
      36,
      37
     ]
    },
    "detect_sources": {
     "line number": [
      45,
      46
     ]
    },
    "g1": {
     "line number": [
      41
     ]
    },
    "g2": {
     "line number": [
      41
     ]
    },
    "g3": {
     "line number": [
      42
     ]
    },
    "numpy.mgrid": {
     "line number": [
      38
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_connectivity": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      232
     ]
    },
    "ValueError": {
     "line number": [
      236
     ]
    },
    "deblend_sources": {
     "line number": [
      234,
      237
     ]
    },
    "int": {
     "line number": [
      230
     ]
    },
    "numpy.zeros": {
     "line number": [
      226,
      230
     ]
    },
    "photutils.segmentation.tests.test_deblend.pytest": {
     "line number": [
      236
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_constant_source": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": {
    "deblend_sources": {
     "line number": [
      206
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      207
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_data_nan": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": {
    "deblend_sources": {
     "line number": [
      247
     ]
    },
    "numpy.nan": {
     "line number": [
      246
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_connectivity": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      131
     ]
    },
    "deblend_sources": {
     "line number": [
      123,
      128,
      132
     ]
    },
    "detect_sources": {
     "line number": [
      121,
      126
     ]
    },
    "numpy.zeros": {
     "line number": [
      110
     ]
    },
    "photutils.segmentation.tests.test_deblend.pytest": {
     "line number": [
      131
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_contrast": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      96,
      97,
      98,
      99,
      100,
      101
     ]
    },
    "deblend_sources": {
     "line number": [
      105
     ]
    },
    "detect_sources": {
     "line number": [
      104
     ]
    },
    "numpy.mgrid": {
     "line number": [
      94
     ]
    },
    "photutils.segmentation.tests.test_deblend.pytest": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_label_assignment": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      145,
      146,
      147,
      148,
      149,
      150,
      151,
      152
     ]
    },
    "deblend_sources": {
     "line number": [
      156
     ]
    },
    "detect_sources": {
     "line number": [
      155
     ]
    },
    "numpy.mgrid": {
     "line number": [
      139
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_multiple_sources": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": {
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      61,
      62,
      63,
      64
     ]
    },
    "deblend_sources": {
     "line number": [
      69
     ]
    },
    "detect_sources": {
     "line number": [
      68
     ]
    },
    "g4": {
     "line number": [
      67
     ]
    },
    "g5": {
     "line number": [
      67
     ]
    },
    "g6": {
     "line number": [
      67
     ]
    },
    "g7": {
     "line number": [
      67
     ]
    },
    "len": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_multiple_sources_with_neighbor": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      79,
      80,
      81
     ]
    },
    "deblend_sources": {
     "line number": [
      87
     ]
    },
    "detect_sources": {
     "line number": [
      86
     ]
    },
    "g1": {
     "line number": [
      79,
      85
     ]
    },
    "g2": {
     "line number": [
      80,
      85
     ]
    },
    "g3": {
     "line number": [
      81,
      85
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_sources": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "deblend_sources": {
     "line number": [
      50
     ]
    },
    "len": {
     "line number": [
      53,
      56,
      56
     ]
    },
    "numpy.nonzero": {
     "line number": [
      58,
      58
     ]
    },
    "numpy.sum": {
     "line number": [
      57,
      57
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      56,
      57,
      58
     ]
    },
    "photutils.segmentation.tests.test_deblend.pytest": {
     "line number": [
      48
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_sources_norelabel": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": {
    "deblend_sources": {
     "line number": [
      162
     ]
    },
    "len": {
     "line number": [
      165,
      166
     ]
    },
    "numpy.nonzero": {
     "line number": [
      167,
      167
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      167
     ]
    },
    "photutils.segmentation.tests.test_deblend.pytest": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_sources_segm_array": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "deblend_sources": {
     "line number": [
      177
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_three_sources": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": {
    "deblend_sources": {
     "line number": [
      171
     ]
    },
    "numpy.nonzero": {
     "line number": [
      174,
      174
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      174
     ]
    },
    "photutils.segmentation.tests.test_deblend.pytest": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_invalid_connectivity": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      199
     ]
    },
    "deblend_sources": {
     "line number": [
      200
     ]
    },
    "photutils.segmentation.tests.test_deblend.pytest": {
     "line number": [
      199
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_invalid_contrast": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      190
     ]
    },
    "deblend_sources": {
     "line number": [
      191
     ]
    },
    "photutils.segmentation.tests.test_deblend.pytest": {
     "line number": [
      190
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_invalid_mode": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      194
     ]
    },
    "deblend_sources": {
     "line number": [
      195
     ]
    },
    "photutils.segmentation.tests.test_deblend.pytest": {
     "line number": [
      194
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_invalid_nlevels": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      186
     ]
    },
    "deblend_sources": {
     "line number": [
      187
     ]
    },
    "photutils.segmentation.tests.test_deblend.pytest": {
     "line number": [
      186
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_nonconsecutive_labels": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": {
    "deblend_sources": {
     "line number": [
      285
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_nondetection": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": {
    "astropy.tests.helper.catch_warnings": {
     "line number": [
      278
     ]
    },
    "deblend_sources": {
     "line number": [
      279
     ]
    },
    "detect_sources": {
     "line number": [
      276
     ]
    },
    "len": {
     "line number": [
      280
     ]
    },
    "numpy.copy": {
     "line number": [
      273
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_segment_img_badshape": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      182
     ]
    },
    "deblend_sources": {
     "line number": [
      183
     ]
    },
    "numpy.ones": {
     "line number": [
      181
     ]
    },
    "photutils.segmentation.tests.test_deblend.pytest": {
     "line number": [
      182
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_source_with_negval": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": {
    "astropy.tests.helper.catch_warnings": {
     "line number": [
      212
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      212
     ]
    },
    "deblend_sources": {
     "line number": [
      213
     ]
    },
    "str": {
     "line number": [
      215
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_source_zero_min": {
  "data": {
   "lineno": 217,
   "symbols_in_volume": {
    "deblend_sources": {
     "line number": [
      220,
      221
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      222
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_watershed": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": {
    "deblend_sources": {
     "line number": [
      261
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.catch_warnings": {
  "data": {
   "shadows": "astropy.tests.helper.catch_warnings"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      21
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.segmentation.tests.test_detect.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.Gaussian2DKernel": {
  "data": {
   "shadows": "astropy.convolution.Gaussian2DKernel"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.HAS_SCIPY": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "photutils.segmentation.tests.test_detect.pytest": {
     "line number": [
      25
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.setup_class": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": {
    "astropy.convolution.Gaussian2DKernel": {
     "line number": [
      33
     ]
    },
    "float": {
     "line number": [
      29
     ]
    },
    "numpy.array": {
     "line number": [
      28,
      30
     ]
    },
    "numpy.log": {
     "line number": [
      32
     ]
    },
    "numpy.sqrt": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_4connectivity": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "detect_sources": {
     "line number": [
      112
     ]
    },
    "numpy.diag": {
     "line number": [
      111
     ]
    },
    "numpy.eye": {
     "line number": [
      110
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      113
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_8connectivity": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": {
    "detect_sources": {
     "line number": [
      104
     ]
    },
    "numpy.eye": {
     "line number": [
      103
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      105
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_basic_filter_kernel": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "detect_sources": {
     "line number": [
      122
     ]
    },
    "numpy.ones": {
     "line number": [
      118,
      120
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      124
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_connectivity_invalid": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      141
     ]
    },
    "detect_sources": {
     "line number": [
      142
     ]
    },
    "photutils.segmentation.tests.test_detect.pytest": {
     "line number": [
      141
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_detection": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "detect_sources": {
     "line number": [
      40
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_filter_kernel": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "detect_sources": {
     "line number": [
      150
     ]
    },
    "numpy.ones": {
     "line number": [
      152
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_filter_kernel_array": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": {
    "detect_sources": {
     "line number": [
      145
     ]
    },
    "numpy.ones": {
     "line number": [
      147
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      147
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_mask": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      165
     ]
    },
    "detect_sources": {
     "line number": [
      167,
      168
     ]
    },
    "numpy.zeros": {
     "line number": [
      163,
      165
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_mask_shape": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      172
     ]
    },
    "detect_sources": {
     "line number": [
      173
     ]
    },
    "numpy.ones": {
     "line number": [
      173
     ]
    },
    "photutils.segmentation.tests.test_detect.pytest": {
     "line number": [
      172
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_npixels": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": {
    "astropy.tests.helper.catch_warnings": {
     "line number": [
      81
     ]
    },
    "detect_sources": {
     "line number": [
      63,
      65,
      77,
      82
     ]
    },
    "numpy.arange": {
     "line number": [
      75,
      76
     ]
    },
    "numpy.zeros": {
     "line number": [
      57,
      68
     ]
    },
    "str": {
     "line number": [
      84
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_npixels_negative": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      135
     ]
    },
    "detect_sources": {
     "line number": [
      136
     ]
    },
    "photutils.segmentation.tests.test_detect.pytest": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_npixels_nonint": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      129
     ]
    },
    "detect_sources": {
     "line number": [
      130
     ]
    },
    "photutils.segmentation.tests.test_detect.pytest": {
     "line number": [
      129
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_small_sources": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": {
    "astropy.tests.helper.catch_warnings": {
     "line number": [
      46
     ]
    },
    "detect_sources": {
     "line number": [
      47
     ]
    },
    "str": {
     "line number": [
      49
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_unnormalized_filter_kernel": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "astropy.tests.helper.catch_warnings": {
     "line number": [
      155
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      155,
      158
     ]
    },
    "detect_sources": {
     "line number": [
      156
     ]
    },
    "str": {
     "line number": [
      160
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_zerodet": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": {
    "astropy.tests.helper.catch_warnings": {
     "line number": [
      95
     ]
    },
    "detect_sources": {
     "line number": [
      96
     ]
    },
    "str": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_zerothresh": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": {
    "detect_sources": {
     "line number": [
      89
     ]
    },
    "numpy.testing.assert_array_equal": {
     "line number": [
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestMakeSourceMask": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": {
    "photutils.segmentation.tests.test_detect.pytest": {
     "line number": [
      176
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_detect.TestMakeSourceMask.setup_class": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": {
    "make_4gaussians_image": {
     "line number": [
      179
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestMakeSourceMask.test_dilate_size": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": {
    "make_source_mask": {
     "line number": [
      182,
      183
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      184,
      184
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestMakeSourceMask.test_kernel": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": {
    "astropy.convolution.Gaussian2DKernel": {
     "line number": [
      190
     ]
    },
    "astropy.stats.gaussian_fwhm_to_sigma": {
     "line number": [
      189
     ]
    },
    "make_source_mask": {
     "line number": [
      187,
      191
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      192
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestMakeSourceMask.test_no_detections": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": {
    "make_source_mask": {
     "line number": [
      195
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      196
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.catch_warnings": {
  "data": {
   "shadows": "astropy.tests.helper.catch_warnings"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.gaussian_fwhm_to_sigma": {
  "data": {
   "shadows": "astropy.stats.gaussian_fwhm_to_sigma"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      27,
      33
     ]
    },
    "astropy.modeling.models.Gaussian2D": {
     "line number": [
      41,
      42,
      43
     ]
    },
    "numpy.log": {
     "line number": [
      49
     ]
    },
    "numpy.mgrid": {
     "line number": [
      44
     ]
    },
    "numpy.pi": {
     "line number": [
      40
     ]
    },
    "numpy.sqrt": {
     "line number": [
      49
     ]
    },
    "photutils.segmentation.tests.test_properties.G1": {
     "line number": [
      45
     ]
    },
    "photutils.segmentation.tests.test_properties.G2": {
     "line number": [
      45
     ]
    },
    "photutils.segmentation.tests.test_properties.G3": {
     "line number": [
      45
     ]
    },
    "photutils.segmentation.tests.test_properties.MAJOR_SIG": {
     "line number": [
      41
     ]
    },
    "photutils.segmentation.tests.test_properties.MINOR_SIG": {
     "line number": [
      41
     ]
    },
    "photutils.segmentation.tests.test_properties.THETA": {
     "line number": [
      41
     ]
    },
    "photutils.segmentation.tests.test_properties.XCEN": {
     "line number": [
      41
     ]
    },
    "photutils.segmentation.tests.test_properties.YCEN": {
     "line number": [
      41
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.segmentation.tests.test_properties.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.BACKGRD_VALS": {
  "data": {
   "lineno": 48
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.ERR_VALS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.FWHM2SIGMA": {
  "data": {
   "lineno": 49
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.G1": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.G2": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.G3": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.Gaussian2DKernel": {
  "data": {
   "shadows": "astropy.convolution.Gaussian2DKernel"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.HAS_GWCS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.HAS_SCIPY": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.IMAGE": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.MAJOR_SIG": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.MINOR_SIG": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.QTable": {
  "data": {
   "shadows": "astropy.table.QTable"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.THETA": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.THRESHOLD": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog": {
  "data": {
   "lineno": 527,
   "symbols_in_volume": {
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      527
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.setup_class": {
  "data": {
   "lineno": 529,
   "symbols_in_volume": {
    "detect_sources": {
     "line number": [
      530
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      530
     ]
    },
    "photutils.segmentation.tests.test_properties.THRESHOLD": {
     "line number": [
      530
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_basic": {
  "data": {
   "lineno": 532,
   "symbols_in_volume": {
    "SourceCatalog": {
     "line number": [
      540
     ]
    },
    "len": {
     "line number": [
      537,
      539,
      542
     ]
    },
    "numpy.arange": {
     "line number": [
      534,
      535
     ]
    },
    "numpy.zeros": {
     "line number": [
      533
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      533,
      536
     ]
    },
    "source_properties": {
     "line number": [
      536
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_inputs": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": {
    "SourceCatalog": {
     "line number": [
      550,
      555,
      557
     ]
    },
    "ValueError": {
     "line number": [
      554,
      556
     ]
    },
    "len": {
     "line number": [
      551,
      552
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      549
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      554,
      556
     ]
    },
    "source_properties": {
     "line number": [
      549
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_repr_str": {
  "data": {
   "lineno": 627,
   "symbols_in_volume": {
    "numpy.arange": {
     "line number": [
      629,
      630
     ]
    },
    "numpy.zeros": {
     "line number": [
      628
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      628,
      631
     ]
    },
    "repr": {
     "line number": [
      633,
      634
     ]
    },
    "source_properties": {
     "line number": [
      631
     ]
    },
    "str": {
     "line number": [
      633
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_table": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": {
    "astropy.table.QTable": {
     "line number": [
      562
     ]
    },
    "isinstance": {
     "line number": [
      562
     ]
    },
    "len": {
     "line number": [
      563
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      560
     ]
    },
    "source_properties": {
     "line number": [
      560
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_table_exclude": {
  "data": {
   "lineno": 579,
   "symbols_in_volume": {
    "KeyError": {
     "line number": [
      585
     ]
    },
    "astropy.table.QTable": {
     "line number": [
      583
     ]
    },
    "isinstance": {
     "line number": [
      583
     ]
    },
    "len": {
     "line number": [
      584
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      580
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      585
     ]
    },
    "source_properties": {
     "line number": [
      580
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_table_include": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": {
    "astropy.table.QTable": {
     "line number": [
      569
     ]
    },
    "isinstance": {
     "line number": [
      569
     ]
    },
    "len": {
     "line number": [
      570
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      566
     ]
    },
    "source_properties": {
     "line number": [
      566
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_table_include_invalidname": {
  "data": {
   "lineno": 573,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      576
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      574
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      576
     ]
    },
    "source_properties": {
     "line number": [
      574
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_table_no_wcs": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": {
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      619
     ]
    },
    "source_properties": {
     "line number": [
      619
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_table_wcs": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": {
    "astropy.tests.helper.assert_quantity_allclose": {
     "line number": [
      606,
      607,
      609,
      610,
      612,
      613,
      615,
      616
     ]
    },
    "astropy.wcs.WCS": {
     "line number": [
      589
     ]
    },
    "numpy.cos": {
     "line number": [
      592,
      593
     ]
    },
    "numpy.pi": {
     "line number": [
      590
     ]
    },
    "numpy.sin": {
     "line number": [
      592,
      593
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      596
     ]
    },
    "source_properties": {
     "line number": [
      596
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      52
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.setup_class": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": {
    "detect_sources": {
     "line number": [
      55
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      55
     ]
    },
    "photutils.segmentation.tests.test_properties.THRESHOLD": {
     "line number": [
      55
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_completely_masked": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      211
     ]
    },
    "numpy.all": {
     "line number": [
      229,
      230
     ]
    },
    "numpy.isnan": {
     "line number": [
      214,
      215,
      216,
      217,
      218,
      219,
      220,
      221,
      222,
      223,
      224,
      225,
      226,
      227,
      228,
      229,
      230,
      231
     ]
    },
    "numpy.ones": {
     "line number": [
      209,
      210,
      211
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      209,
      210,
      211,
      212
     ]
    },
    "source_properties": {
     "line number": [
      212
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_gwcs": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": {
    "SourceProperties": {
     "line number": [
      123
     ]
    },
    "len": {
     "line number": [
      132
     ]
    },
    "make_gwcs": {
     "line number": [
      122
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      122,
      123
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      120
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_invalid_shapes": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": {
    "SourceProperties": {
     "line number": [
      60,
      63,
      67,
      70
     ]
    },
    "ValueError": {
     "line number": [
      59,
      62,
      66,
      69
     ]
    },
    "int": {
     "line number": [
      60
     ]
    },
    "numpy.eye": {
     "line number": [
      60
     ]
    },
    "numpy.ones": {
     "line number": [
      58
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      60,
      63,
      67,
      70
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      59,
      62,
      66,
      69
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_invalid_units": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": {
    "SourceProperties": {
     "line number": [
      78,
      82,
      86,
      91
     ]
    },
    "ValueError": {
     "line number": [
      77,
      81,
      85,
      90
     ]
    },
    "astropy.units.km": {
     "line number": [
      75
     ]
    },
    "astropy.units.uJy": {
     "line number": [
      74
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      78,
      79,
      82,
      83,
      86,
      87,
      91,
      92
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      77,
      81,
      85,
      90
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_label_invalid": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": {
    "SourceProperties": {
     "line number": [
      97
     ]
    },
    "ValueError": {
     "line number": [
      96
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      97
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      96,
      94
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_label_missing": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": {
    "SourceProperties": {
     "line number": [
      104,
      105
     ]
    },
    "ValueError": {
     "line number": [
      103
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      104,
      105
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      103,
      99
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_masks": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": {
    "SourceProperties": {
     "line number": [
      167
     ]
    },
    "bool": {
     "line number": [
      160
     ]
    },
    "len": {
     "line number": [
      178
     ]
    },
    "numpy.copy": {
     "line number": [
      162
     ]
    },
    "numpy.count_nonzero": {
     "line number": [
      189,
      190,
      191,
      192
     ]
    },
    "numpy.inf": {
     "line number": [
      156,
      159,
      164,
      165
     ]
    },
    "numpy.isnan": {
     "line number": [
      184,
      185,
      186
     ]
    },
    "numpy.nan": {
     "line number": [
      155,
      158,
      163
     ]
    },
    "numpy.ones": {
     "line number": [
      154,
      157
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      194,
      196,
      198,
      200,
      202
     ]
    },
    "numpy.zeros": {
     "line number": [
      160
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      154,
      157,
      160,
      162
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_nowcs": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": {
    "SourceProperties": {
     "line number": [
      135
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      135
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_repr_str": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": {
    "SourceProperties": {
     "line number": [
      234
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      234
     ]
    },
    "repr": {
     "line number": [
      235,
      239
     ]
    },
    "str": {
     "line number": [
      235
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_to_table": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": {
    "SourceProperties": {
     "line number": [
      143
     ]
    },
    "astropy.table.QTable": {
     "line number": [
      145
     ]
    },
    "astropy.tests.helper.assert_quantity_allclose": {
     "line number": [
      147
     ]
    },
    "astropy.units.pix": {
     "line number": [
      147
     ]
    },
    "isinstance": {
     "line number": [
      145
     ]
    },
    "len": {
     "line number": [
      146
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_wcs": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": {
    "SourceProperties": {
     "line number": [
      109
     ]
    },
    "len": {
     "line number": [
      118
     ]
    },
    "make_wcs": {
     "line number": [
      108
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      108,
      109
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": {
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      284
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.setup_class": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "detect_sources": {
     "line number": [
      287
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      287
     ]
    },
    "photutils.segmentation.tests.test_properties.THRESHOLD": {
     "line number": [
      287
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_cutout_shapes": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": {
    "float": {
     "line number": [
      360
     ]
    },
    "getattr": {
     "line number": [
      365
     ]
    },
    "numpy.ones": {
     "line number": [
      360
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      360,
      361
     ]
    },
    "source_properties": {
     "line number": [
      361
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_data_allzero": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": {
    "getattr": {
     "line number": [
      411
     ]
    },
    "numpy.isnan": {
     "line number": [
      411
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      406
     ]
    },
    "source_properties": {
     "line number": [
      406
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_data_nan": {
  "data": {
   "lineno": 472,
   "symbols_in_volume": {
    "SegmentationImage": {
     "line number": [
      480
     ]
    },
    "astropy.tests.helper.assert_quantity_allclose": {
     "line number": [
      482
     ]
    },
    "astropy.units.pix": {
     "line number": [
      482
     ]
    },
    "int": {
     "line number": [
      477
     ]
    },
    "numpy.nan": {
     "line number": [
      476
     ]
    },
    "numpy.ones": {
     "line number": [
      475
     ]
    },
    "numpy.zeros": {
     "line number": [
      477
     ]
    },
    "source_properties": {
     "line number": [
      481
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_filtering": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": {
    "astropy.convolution.Gaussian2DKernel": {
     "line number": [
      442
     ]
    },
    "getattr": {
     "line number": [
      450,
      450,
      453,
      453
     ]
    },
    "numpy.sqrt": {
     "line number": [
      443
     ]
    },
    "photutils.segmentation.tests.test_properties.FWHM2SIGMA": {
     "line number": [
      442
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      443,
      444,
      445
     ]
    },
    "source_properties": {
     "line number": [
      444,
      445
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_filtering_kernel": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": {
    "astropy.convolution.Gaussian2DKernel": {
     "line number": [
      459
     ]
    },
    "getattr": {
     "line number": [
      467,
      467,
      470,
      470
     ]
    },
    "numpy.sqrt": {
     "line number": [
      460
     ]
    },
    "numpy.zeros": {
     "line number": [
      456
     ]
    },
    "photutils.segmentation.tests.test_properties.FWHM2SIGMA": {
     "line number": [
      459
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      460,
      461,
      462
     ]
    },
    "source_properties": {
     "line number": [
      461,
      462
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_gwcs": {
  "data": {
   "lineno": 512,
   "symbols_in_volume": {
    "len": {
     "line number": [
      524
     ]
    },
    "make_gwcs": {
     "line number": [
      514
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      514,
      515
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      512
     ]
    },
    "source_properties": {
     "line number": [
      515
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_local_background": {
  "data": {
   "lineno": 494,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      496
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      495
     ]
    },
    "source_properties": {
     "line number": [
      495
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_make_cutout": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      372
     ]
    },
    "numpy.ones": {
     "line number": [
      371
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      370
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      372
     ]
    },
    "source_properties": {
     "line number": [
      370
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_mask": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": {
    "bool": {
     "line number": [
      417
     ]
    },
    "int": {
     "line number": [
      419
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      421,
      422,
      423,
      424
     ]
    },
    "numpy.zeros": {
     "line number": [
      414,
      417
     ]
    },
    "source_properties": {
     "line number": [
      420
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_mask_nomask": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": {
    "astropy.tests.helper.assert_quantity_allclose": {
     "line number": [
      432
     ]
    },
    "bool": {
     "line number": [
      428
     ]
    },
    "numpy.ma.nomask": {
     "line number": [
      427
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      430,
      431
     ]
    },
    "numpy.zeros": {
     "line number": [
      428
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      427,
      428,
      429
     ]
    },
    "source_properties": {
     "line number": [
      427,
      429
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_nonconsecutive_labels": {
  "data": {
   "lineno": 484,
   "symbols_in_volume": {
    "len": {
     "line number": [
      488
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      487
     ]
    },
    "source_properties": {
     "line number": [
      487
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_properties": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": {
    "astropy.tests.helper.assert_quantity_allclose": {
     "line number": [
      292,
      294,
      297,
      299,
      301,
      307
     ]
    },
    "astropy.units.pix": {
     "line number": [
      292,
      294,
      298,
      300,
      307
     ]
    },
    "astropy.units.rad": {
     "line number": [
      301
     ]
    },
    "astropy.utils.misc.isiterable": {
     "line number": [
      319
     ]
    },
    "getattr": {
     "line number": [
      319,
      323,
      328,
      333
     ]
    },
    "len": {
     "line number": [
      308,
      309
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      296,
      308,
      309
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      290
     ]
    },
    "photutils.segmentation.tests.test_properties.MAJOR_SIG": {
     "line number": [
      298
     ]
    },
    "photutils.segmentation.tests.test_properties.MINOR_SIG": {
     "line number": [
      300
     ]
    },
    "photutils.segmentation.tests.test_properties.THETA": {
     "line number": [
      301
     ]
    },
    "photutils.segmentation.tests.test_properties.XCEN": {
     "line number": [
      292
     ]
    },
    "photutils.segmentation.tests.test_properties.YCEN": {
     "line number": [
      294
     ]
    },
    "source_properties": {
     "line number": [
      290
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_properties_background_notnone": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      345
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      343
     ]
    },
    "source_properties": {
     "line number": [
      343
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_properties_background_units": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": {
    "astropy.units.uJy": {
     "line number": [
      348
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      352
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      350
     ]
    },
    "source_properties": {
     "line number": [
      350
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_properties_error_background_none": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": {
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      355
     ]
    },
    "source_properties": {
     "line number": [
      355
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_segmentation_inputs": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": {
    "astropy.tests.helper.assert_quantity_allclose": {
     "line number": [
      382,
      383,
      384,
      386,
      388
     ]
    },
    "astropy.units.pix": {
     "line number": [
      382,
      383,
      385,
      387
     ]
    },
    "astropy.units.rad": {
     "line number": [
      388
     ]
    },
    "list": {
     "line number": [
      376
     ]
    },
    "numpy.ones": {
     "line number": [
      378
     ]
    },
    "numpy.sqrt": {
     "line number": [
      402
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      396,
      399,
      400,
      403
     ]
    },
    "photutils.segmentation.tests.test_properties.BACKGRD_VALS": {
     "line number": [
      376
     ]
    },
    "photutils.segmentation.tests.test_properties.ERR_VALS": {
     "line number": [
      376
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      378,
      379
     ]
    },
    "photutils.segmentation.tests.test_properties.MAJOR_SIG": {
     "line number": [
      385
     ]
    },
    "photutils.segmentation.tests.test_properties.MINOR_SIG": {
     "line number": [
      387
     ]
    },
    "photutils.segmentation.tests.test_properties.THETA": {
     "line number": [
      388
     ]
    },
    "photutils.segmentation.tests.test_properties.XCEN": {
     "line number": [
      382
     ]
    },
    "photutils.segmentation.tests.test_properties.YCEN": {
     "line number": [
      383
     ]
    },
    "photutils.segmentation.tests.test_properties.itertools": {
     "line number": [
      376
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      375
     ]
    },
    "source_properties": {
     "line number": [
      379
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_single_pixel_segment": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": {
    "int": {
     "line number": [
      435
     ]
    },
    "numpy.zeros": {
     "line number": [
      435
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      437
     ]
    },
    "source_properties": {
     "line number": [
      437
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_wcs": {
  "data": {
   "lineno": 498,
   "symbols_in_volume": {
    "len": {
     "line number": [
      510
     ]
    },
    "make_wcs": {
     "line number": [
      499
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      499,
      500
     ]
    },
    "source_properties": {
     "line number": [
      500
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": {
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      242
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.setup_class": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": {
    "detect_sources": {
     "line number": [
      245
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      245
     ]
    },
    "photutils.segmentation.tests.test_properties.THRESHOLD": {
     "line number": [
      245
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_background_shape": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      259
     ]
    },
    "numpy.ones": {
     "line number": [
      258
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      260
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      259
     ]
    },
    "source_properties": {
     "line number": [
      260
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_error_shape": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      254
     ]
    },
    "numpy.ones": {
     "line number": [
      253
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      255
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      254
     ]
    },
    "source_properties": {
     "line number": [
      255
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_invalidlabels": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": {
    "astropy.tests.helper.catch_warnings": {
     "line number": [
      272
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      272,
      275
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      273
     ]
    },
    "source_properties": {
     "line number": [
      273
     ]
    },
    "str": {
     "line number": [
      277
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_labels": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": {
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      268
     ]
    },
    "source_properties": {
     "line number": [
      268
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_mask_shape": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      264
     ]
    },
    "bool": {
     "line number": [
      263
     ]
    },
    "numpy.zeros": {
     "line number": [
      263
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      265
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      264
     ]
    },
    "source_properties": {
     "line number": [
      265
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_nosources": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      280
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      281
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      280
     ]
    },
    "source_properties": {
     "line number": [
      281
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_segment_shape": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      249
     ]
    },
    "int": {
     "line number": [
      248
     ]
    },
    "numpy.eye": {
     "line number": [
      248
     ]
    },
    "photutils.segmentation.tests.test_properties.IMAGE": {
     "line number": [
      250
     ]
    },
    "photutils.segmentation.tests.test_properties.pytest": {
     "line number": [
      249
     ]
    },
    "source_properties": {
     "line number": [
      250
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.WCS": {
  "data": {
   "shadows": "astropy.wcs"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.XCEN": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.YCEN": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.assert_quantity_allclose": {
  "data": {
   "shadows": "astropy.tests.helper.assert_quantity_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.catch_warnings": {
  "data": {
   "shadows": "astropy.tests.helper.catch_warnings"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.gwcs": {
  "data": {
   "shadows": "gwcs"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.isiterable": {
  "data": {
   "shadows": "astropy.utils.misc.isiterable"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.models": {
  "data": {
   "shadows": "astropy.modeling.models"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.utils": {
  "data": {},
  "type": "module"
 },
 "photutils.utils._convolution": {
  "data": {},
  "type": "module"
 },
 "photutils.utils._convolution.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.utils._convolution.Kernel2D": {
  "data": {
   "shadows": "astropy.convolution.Kernel2D"
  },
  "type": "import"
 },
 "photutils.utils._convolution.Quantity": {
  "data": {
   "shadows": "astropy.units.Quantity"
  },
  "type": "import"
 },
 "photutils.utils._convolution._filter_data": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "astropy.convolution.Kernel2D": {
     "line number": [
      49
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      62
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      57
     ]
    },
    "float": {
     "line number": [
      71
     ]
    },
    "isinstance": {
     "line number": [
      49,
      62
     ]
    },
    "numpy.allclose": {
     "line number": [
      55
     ]
    },
    "numpy.sum": {
     "line number": [
      55
     ]
    },
    "photutils.utils._convolution.warnings": {
     "line number": [
      56
     ]
    },
    "scipy.ndimage.convolve": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils._convolution.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "photutils.utils._convolution.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils._convolution.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.utils._misc": {
  "data": {},
  "type": "module"
 },
 "photutils.utils._misc._get_version_info": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": {
    "astropy.__version__": {
     "line number": [
      21
     ]
    },
    "photutils.__version__": {
     "line number": [
      22
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils._misc.astropy_version": {
  "data": {
   "shadows": "astropy.__version__"
  },
  "type": "import"
 },
 "photutils.utils._misc.photutils_version": {
  "data": {
   "shadows": "photutils.__version__"
  },
  "type": "import"
 },
 "photutils.utils._moments": {
  "data": {},
  "type": "module"
 },
 "photutils.utils._moments.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "photutils.utils._moments._moments": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "photutils.utils._moments._moments_central": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils._moments._moments_central": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      36
     ]
    },
    "centroid_com": {
     "line number": [
      40
     ]
    },
    "float": {
     "line number": [
      33
     ]
    },
    "numpy.arange": {
     "line number": [
      43,
      44
     ]
    },
    "numpy.asarray": {
     "line number": [
      33
     ]
    },
    "numpy.dot": {
     "line number": [
      46,
      46
     ]
    },
    "numpy.ogrid": {
     "line number": [
      42
     ]
    },
    "numpy.transpose": {
     "line number": [
      44,
      46
     ]
    },
    "slice": {
     "line number": [
      42
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils._moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils._round": {
  "data": {},
  "type": "module"
 },
 "photutils.utils._round._py2intround": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": {
    "hasattr": {
     "line number": [
      20
     ]
    },
    "int": {
     "line number": [
      18
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      16
     ]
    },
    "numpy.asscalar": {
     "line number": [
      21
     ]
    },
    "numpy.ceil": {
     "line number": [
      18
     ]
    },
    "numpy.floor": {
     "line number": [
      17
     ]
    },
    "numpy.where": {
     "line number": [
      17
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils._round.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils._wcs_helpers": {
  "data": {},
  "type": "module"
 },
 "photutils.utils._wcs_helpers.UnitSphericalRepresentation": {
  "data": {
   "shadows": "astropy.coordinates.UnitSphericalRepresentation"
  },
  "type": "import"
 },
 "photutils.utils._wcs_helpers.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "photutils.utils._wcs_helpers._pixel_scale_angle_at_skycoord": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      133
     ]
    },
    "astropy.coordinates.UnitSphericalRepresentation": {
     "line number": [
      137
     ]
    },
    "astropy.units.arcsec": {
     "line number": [
      87,
      143
     ]
    },
    "astropy.units.deg": {
     "line number": [
      144
     ]
    },
    "astropy.units.pixel": {
     "line number": [
      143
     ]
    },
    "astropy.units.radian.to": {
     "line number": [
      144
     ]
    },
    "astropy.wcs.utils.skycoord_to_pixel": {
     "line number": [
      135,
      139
     ]
    },
    "numpy.arctan2": {
     "line number": [
      144
     ]
    },
    "numpy.hypot": {
     "line number": [
      143
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils._wcs_helpers._pixel_to_world": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      43
     ]
    },
    "TypeError": {
     "line number": [
      39
     ]
    },
    "ValueError": {
     "line number": [
      48
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      38,
      38
     ]
    },
    "astropy.wcs.WCS": {
     "line number": [
      44
     ]
    },
    "astropy.wcs.utils.pixel_to_skycoord": {
     "line number": [
      46
     ]
    },
    "isinstance": {
     "line number": [
      38,
      38,
      44
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils._wcs_helpers._world_to_pixel": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": {
    "AttributeError": {
     "line number": [
      78
     ]
    },
    "ValueError": {
     "line number": [
      83
     ]
    },
    "astropy.wcs.WCS": {
     "line number": [
      79
     ]
    },
    "astropy.wcs.utils.skycoord_to_pixel": {
     "line number": [
      81
     ]
    },
    "isinstance": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils._wcs_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils._wcs_helpers.pixel_to_skycoord": {
  "data": {
   "shadows": "astropy.wcs.utils.pixel_to_skycoord"
  },
  "type": "import"
 },
 "photutils.utils._wcs_helpers.skycoord_to_pixel": {
  "data": {
   "shadows": "astropy.wcs.utils.skycoord_to_pixel"
  },
  "type": "import"
 },
 "photutils.utils._wcs_helpers.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.utils.check_random_state": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.check_random_state.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.utils.check_random_state.check_random_state": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      48
     ]
    },
    "astropy.utils.deprecated": {
     "line number": [
      14
     ]
    },
    "isinstance": {
     "line number": [
      43,
      45
     ]
    },
    "numpy.integer": {
     "line number": [
      43
     ]
    },
    "numpy.random": {
     "line number": [
      41
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      44,
      45
     ]
    },
    "numpy.random.mtrand._rand": {
     "line number": [
      42
     ]
    },
    "photutils.utils.check_random_state.numbers": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.check_random_state.deprecated": {
  "data": {
   "shadows": "astropy.utils.deprecated"
  },
  "type": "import"
 },
 "photutils.utils.check_random_state.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.check_random_state.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "photutils.utils.colormaps": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.colormaps.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "photutils.utils.colormaps.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "photutils.utils.colormaps.deprecated_renamed_argument": {
  "data": {
   "shadows": "astropy.utils.decorators.deprecated_renamed_argument"
  },
  "type": "import"
 },
 "photutils.utils.colormaps.make_random_cmap": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": {
    "astropy.utils.decorators.deprecated_renamed_argument": {
     "line number": [
      12
     ]
    },
    "matplotlib.colors.ListedColormap": {
     "line number": [
      45
     ]
    },
    "matplotlib.colors.hsv_to_rgb": {
     "line number": [
      43
     ]
    },
    "numpy.dstack": {
     "line number": [
      42
     ]
    },
    "numpy.random.default_rng": {
     "line number": [
      38
     ]
    },
    "numpy.squeeze": {
     "line number": [
      43
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.colormaps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.errors": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.errors.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.utils.errors.calc_total_error": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      143,
      148,
      163,
      166
     ]
    },
    "all": {
     "line number": [
      141
     ]
    },
    "any": {
     "line number": [
      142
     ]
    },
    "astropy.units.UnitsError": {
     "line number": [
      153
     ]
    },
    "astropy.units.electron": {
     "line number": [
      150
     ]
    },
    "astropy.units.photon": {
     "line number": [
      150
     ]
    },
    "astropy.utils.misc.isiterable": {
     "line number": [
      158
     ]
    },
    "hasattr": {
     "line number": [
      140
     ]
    },
    "numpy.any": {
     "line number": [
      165
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      136,
      137,
      161
     ]
    },
    "numpy.maximum": {
     "line number": [
      178
     ]
    },
    "numpy.sqrt": {
     "line number": [
      186
     ]
    },
    "numpy.where": {
     "line number": [
      174
     ]
    },
    "numpy.zeros": {
     "line number": [
      159
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.errors.isiterable": {
  "data": {
   "shadows": "astropy.utils.misc.isiterable"
  },
  "type": "import"
 },
 "photutils.utils.errors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.errors.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.utils.exceptions": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.exceptions.AstropyWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyWarning"
  },
  "type": "import"
 },
 "photutils.utils.exceptions.NoDetectionsWarning": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": {
    "astropy.utils.exceptions.AstropyWarning": {
     "line number": [
      11
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.utils.exceptions.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "photutils.utils.interpolation": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.interpolation.ShepardIDWInterpolator": {
  "data": {
   "lineno": 13
  },
  "type": "class"
 },
 "photutils.utils.interpolation.ShepardIDWInterpolator.__call__": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      217,
      226,
      234,
      239
     ]
    },
    "float": {
     "line number": [
      155
     ]
    },
    "int": {
     "line number": [
      215
     ]
    },
    "len": {
     "line number": [
      280
     ]
    },
    "numpy.any": {
     "line number": [
      266
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      222
     ]
    },
    "numpy.dot": {
     "line number": [
      276
     ]
    },
    "numpy.isfinite": {
     "line number": [
      255
     ]
    },
    "numpy.nan": {
     "line number": [
      260,
      278
     ]
    },
    "numpy.reshape": {
     "line number": [
      242
     ]
    },
    "numpy.sum": {
     "line number": [
      274
     ]
    },
    "numpy.zeros": {
     "line number": [
      253
     ]
    },
    "range": {
     "line number": [
      254
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.interpolation.ShepardIDWInterpolator.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      132,
      135,
      141,
      144
     ]
    },
    "numpy.any": {
     "line number": [
      143
     ]
    },
    "numpy.asanyarray": {
     "line number": [
      128,
      139
     ]
    },
    "numpy.atleast_2d": {
     "line number": [
      122
     ]
    },
    "numpy.reshape": {
     "line number": [
      126
     ]
    },
    "numpy.transpose": {
     "line number": [
      124
     ]
    },
    "scipy.spatial.cKDTree": {
     "line number": [
      152
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.interpolation.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "photutils.utils.interpolation.__doctest_requires__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.utils.interpolation._mask_to_mirrored_num": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": {
    "numpy.copy": {
     "line number": [
      320,
      346
     ]
    },
    "numpy.nonzero": {
     "line number": [
      322
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.interpolation.cKDTree": {
  "data": {
   "shadows": "scipy.spatial.cKDTree"
  },
  "type": "import"
 },
 "photutils.utils.interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.tests.test_colormaps": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      14
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.utils.tests.test_colormaps.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_colormaps.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_colormaps.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_colormaps.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_colormaps.test_colormap": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": {
    "len": {
     "line number": [
      22
     ]
    },
    "make_random_cmap": {
     "line number": [
      21
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      23
     ]
    },
    "photutils.utils.tests.test_colormaps.pytest": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_convolution": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.utils.tests.test_convolution.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_convolution.Gaussian2DKernel": {
  "data": {
   "shadows": "astropy.convolution.Gaussian2DKernel"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_convolution.HAS_SCIPY": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_convolution.TestFilterData": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "photutils.utils.tests.test_convolution.pytest": {
     "line number": [
      23
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.utils.tests.test_convolution.TestFilterData.setup_class": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": {
    "astropy.convolution.Gaussian2DKernel": {
     "line number": [
      27
     ]
    },
    "make_100gaussians_image": {
     "line number": [
      26
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_convolution.TestFilterData.test_filter_data": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "_filter_data": {
     "line number": [
      30,
      31
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      32
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_convolution.TestFilterData.test_filter_data_check_normalization": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "_filter_data": {
     "line number": [
      76
     ]
    },
    "astropy.tests.helper.catch_warnings": {
     "line number": [
      75
     ]
    },
    "astropy.utils.exceptions.AstropyUserWarning": {
     "line number": [
      75
     ]
    },
    "len": {
     "line number": [
      77
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_convolution.TestFilterData.test_filter_data_kernel_none": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": {
    "_filter_data": {
     "line number": [
      67
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      68
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_convolution.TestFilterData.test_filter_data_types": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": {
    "_filter_data": {
     "line number": [
      45,
      49,
      53,
      57
     ]
    },
    "float": {
     "line number": [
      47,
      50,
      51,
      53,
      55,
      57,
      58,
      59
     ]
    },
    "int": {
     "line number": [
      45,
      46,
      49,
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_convolution.TestFilterData.test_filter_data_units": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": {
    "_filter_data": {
     "line number": [
      36
     ]
    },
    "astropy.units.Quantity": {
     "line number": [
      37
     ]
    },
    "astropy.units.electron": {
     "line number": [
      35
     ]
    },
    "isinstance": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_convolution.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_convolution.catch_warnings": {
  "data": {
   "shadows": "astropy.tests.helper.catch_warnings"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_convolution.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_convolution.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_convolution.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors": {
  "data": {
   "symbols_in_volume": {
    "numpy.ones": {
     "line number": [
      16,
      17,
      18,
      19,
      20
     ]
    },
    "photutils.utils.tests.test_errors.DATAVAL": {
     "line number": [
      16,
      18
     ]
    },
    "photutils.utils.tests.test_errors.SHAPE": {
     "line number": [
      16,
      17,
      18,
      19
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.utils.tests.test_errors.BACKGROUND": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.BKG_ERROR": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.DATA": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.DATAVAL": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.EFFGAIN": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.SHAPE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.WRONG_SHAPE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors.test_effgain_units": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "astropy.units.UnitsError": {
     "line number": [
      80
     ]
    },
    "astropy.units.electron": {
     "line number": [
      79
     ]
    },
    "astropy.units.km": {
     "line number": [
      81
     ]
    },
    "astropy.units.s": {
     "line number": [
      79
     ]
    },
    "calc_total_error": {
     "line number": [
      81
     ]
    },
    "photutils.utils.tests.test_errors.BKG_ERROR": {
     "line number": [
      81
     ]
    },
    "photutils.utils.tests.test_errors.DATA": {
     "line number": [
      81
     ]
    },
    "photutils.utils.tests.test_errors.EFFGAIN": {
     "line number": [
      81
     ]
    },
    "photutils.utils.tests.test_errors.pytest": {
     "line number": [
      80
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.test_error_shape": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      24
     ]
    },
    "calc_total_error": {
     "line number": [
      25
     ]
    },
    "photutils.utils.tests.test_errors.DATA": {
     "line number": [
      25
     ]
    },
    "photutils.utils.tests.test_errors.EFFGAIN": {
     "line number": [
      25
     ]
    },
    "photutils.utils.tests.test_errors.WRONG_SHAPE": {
     "line number": [
      25
     ]
    },
    "photutils.utils.tests.test_errors.pytest": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.test_error_units": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      73
     ]
    },
    "astropy.units.electron": {
     "line number": [
      72,
      74
     ]
    },
    "astropy.units.s": {
     "line number": [
      72,
      75
     ]
    },
    "calc_total_error": {
     "line number": [
      74
     ]
    },
    "photutils.utils.tests.test_errors.BKG_ERROR": {
     "line number": [
      74
     ]
    },
    "photutils.utils.tests.test_errors.DATA": {
     "line number": [
      74
     ]
    },
    "photutils.utils.tests.test_errors.EFFGAIN": {
     "line number": [
      75
     ]
    },
    "photutils.utils.tests.test_errors.pytest": {
     "line number": [
      73
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.test_gain_array": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": {
    "calc_total_error": {
     "line number": [
      45
     ]
    },
    "numpy.sqrt": {
     "line number": [
      46
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      46
     ]
    },
    "photutils.utils.tests.test_errors.BKG_ERROR": {
     "line number": [
      45,
      46
     ]
    },
    "photutils.utils.tests.test_errors.DATA": {
     "line number": [
      45
     ]
    },
    "photutils.utils.tests.test_errors.EFFGAIN": {
     "line number": [
      45
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.test_gain_negative": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      35
     ]
    },
    "calc_total_error": {
     "line number": [
      36
     ]
    },
    "photutils.utils.tests.test_errors.BKG_ERROR": {
     "line number": [
      36
     ]
    },
    "photutils.utils.tests.test_errors.DATA": {
     "line number": [
      36
     ]
    },
    "photutils.utils.tests.test_errors.pytest": {
     "line number": [
      35,
      33
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.test_gain_scalar": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": {
    "calc_total_error": {
     "line number": [
      40
     ]
    },
    "numpy.sqrt": {
     "line number": [
      41
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      41
     ]
    },
    "photutils.utils.tests.test_errors.BKG_ERROR": {
     "line number": [
      40,
      41
     ]
    },
    "photutils.utils.tests.test_errors.DATA": {
     "line number": [
      40
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.test_gain_shape": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      29
     ]
    },
    "calc_total_error": {
     "line number": [
      30
     ]
    },
    "photutils.utils.tests.test_errors.BKG_ERROR": {
     "line number": [
      30
     ]
    },
    "photutils.utils.tests.test_errors.DATA": {
     "line number": [
      30
     ]
    },
    "photutils.utils.tests.test_errors.WRONG_SHAPE": {
     "line number": [
      30
     ]
    },
    "photutils.utils.tests.test_errors.pytest": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.test_gain_zero": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": {
    "calc_total_error": {
     "line number": [
      50,
      57
     ]
    },
    "numpy.copy": {
     "line number": [
      53
     ]
    },
    "numpy.sqrt": {
     "line number": [
      59
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      51,
      58,
      59
     ]
    },
    "photutils.utils.tests.test_errors.BKG_ERROR": {
     "line number": [
      50,
      51,
      57,
      58
     ]
    },
    "photutils.utils.tests.test_errors.DATA": {
     "line number": [
      50,
      57
     ]
    },
    "photutils.utils.tests.test_errors.EFFGAIN": {
     "line number": [
      53
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.test_missing_bkgerror_units": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      86
     ]
    },
    "astropy.units.electron": {
     "line number": [
      85
     ]
    },
    "astropy.units.s": {
     "line number": [
      85,
      87
     ]
    },
    "calc_total_error": {
     "line number": [
      87
     ]
    },
    "photutils.utils.tests.test_errors.BKG_ERROR": {
     "line number": [
      87
     ]
    },
    "photutils.utils.tests.test_errors.DATA": {
     "line number": [
      87
     ]
    },
    "photutils.utils.tests.test_errors.EFFGAIN": {
     "line number": [
      87
     ]
    },
    "photutils.utils.tests.test_errors.pytest": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.test_missing_effgain_units": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      92
     ]
    },
    "astropy.units.electron": {
     "line number": [
      91
     ]
    },
    "astropy.units.s": {
     "line number": [
      91
     ]
    },
    "calc_total_error": {
     "line number": [
      93
     ]
    },
    "photutils.utils.tests.test_errors.BKG_ERROR": {
     "line number": [
      93
     ]
    },
    "photutils.utils.tests.test_errors.DATA": {
     "line number": [
      93
     ]
    },
    "photutils.utils.tests.test_errors.EFFGAIN": {
     "line number": [
      94
     ]
    },
    "photutils.utils.tests.test_errors.pytest": {
     "line number": [
      92
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.test_units": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "astropy.units.electron": {
     "line number": [
      63
     ]
    },
    "astropy.units.s": {
     "line number": [
      63,
      65
     ]
    },
    "calc_total_error": {
     "line number": [
      64,
      67
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      68
     ]
    },
    "photutils.utils.tests.test_errors.BKG_ERROR": {
     "line number": [
      64,
      67
     ]
    },
    "photutils.utils.tests.test_errors.DATA": {
     "line number": [
      64,
      67
     ]
    },
    "photutils.utils.tests.test_errors.EFFGAIN": {
     "line number": [
      65,
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation": {
  "data": {
   "symbols_in_volume": {
    "ImportError": {
     "line number": [
      16
     ]
    },
    "bool": {
     "line number": [
      22
     ]
    },
    "numpy.ones": {
     "line number": [
      21,
      24,
      25,
      26
     ]
    },
    "numpy.zeros": {
     "line number": [
      22
     ]
    },
    "photutils.utils.tests.test_interpolation.DATA": {
     "line number": [
      22
     ]
    },
    "photutils.utils.tests.test_interpolation.MASK": {
     "line number": [
      23
     ]
    },
    "photutils.utils.tests.test_interpolation.SHAPE": {
     "line number": [
      21,
      24,
      25
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.utils.tests.test_interpolation.BACKGROUND": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.DATA": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.ERROR": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.HAS_SCIPY": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.MASK": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.SHAPE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum": {
  "data": {
   "lineno": 114
  },
  "type": "class"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum.test_mask_to_mirrored_num": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": {
    "_mask_to_mirrored_num": {
     "line number": [
      127
     ]
    },
    "bool": {
     "line number": [
      121
     ]
    },
    "numpy.arange": {
     "line number": [
      120
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      128
     ]
    },
    "numpy.zeros": {
     "line number": [
      121
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum.test_mask_to_mirrored_num_bbox": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": {
    "_mask_to_mirrored_num": {
     "line number": [
      175
     ]
    },
    "bool": {
     "line number": [
      169
     ]
    },
    "numpy.arange": {
     "line number": [
      167
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      176
     ]
    },
    "numpy.zeros": {
     "line number": [
      169
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum.test_mask_to_mirrored_num_masked": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": {
    "_mask_to_mirrored_num": {
     "line number": [
      159
     ]
    },
    "bool": {
     "line number": [
      153
     ]
    },
    "numpy.arange": {
     "line number": [
      151
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      160
     ]
    },
    "numpy.zeros": {
     "line number": [
      153
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum.test_mask_to_mirrored_num_range": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": {
    "_mask_to_mirrored_num": {
     "line number": [
      143
     ]
    },
    "bool": {
     "line number": [
      137
     ]
    },
    "numpy.arange": {
     "line number": [
      136
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      144
     ]
    },
    "numpy.zeros": {
     "line number": [
      137
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": {
    "photutils.utils.tests.test_interpolation.pytest": {
     "line number": [
      29
     ]
    }
   }
  },
  "type": "class"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.setup_class": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": {
    "numpy.random.default_rng": {
     "line number": [
      32
     ]
    },
    "numpy.sin": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_conf_dist_negative": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      86
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_dtype_none": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": {
    "float": {
     "line number": [
      91
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_idw_1d": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "f": {
     "line number": [
      40
     ]
    },
    "numpy.arange": {
     "line number": [
      37
     ]
    },
    "numpy.sin": {
     "line number": [
      40
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      40
     ]
    },
    "photutils.utils.tests.test_interpolation.pytest": {
     "line number": [
      37
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_idw_2d": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": {
    "f": {
     "line number": [
      51,
      54
     ]
    },
    "numpy.sin": {
     "line number": [
      50,
      54
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      54
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_idw_3d": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": {
    "f": {
     "line number": [
      59,
      60
     ]
    },
    "numpy.indices": {
     "line number": [
      58
     ]
    },
    "numpy.ones": {
     "line number": [
      57
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      60
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_idw_weights": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": {
    "f": {
     "line number": [
      44,
      46
     ]
    },
    "numpy.sin": {
     "line number": [
      46
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      46
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_n_neighbors_negative": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      82
     ]
    },
    "photutils.utils.tests.test_interpolation.pytest": {
     "line number": [
      82
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_n_neighbors_one": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": {
    "numpy.testing.assert_allclose": {
     "line number": [
      79
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_no_coordinates": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      63
     ]
    },
    "photutils.utils.tests.test_interpolation.pytest": {
     "line number": [
      63
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_positions_0d_nomatch": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      98
     ]
    },
    "f": {
     "line number": [
      97,
      99
     ]
    },
    "numpy.sin": {
     "line number": [
      96
     ]
    },
    "photutils.utils.tests.test_interpolation.pytest": {
     "line number": [
      98
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_positions_1d_nomatch": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      106
     ]
    },
    "f": {
     "line number": [
      105,
      107
     ]
    },
    "numpy.sin": {
     "line number": [
      104
     ]
    },
    "photutils.utils.tests.test_interpolation.pytest": {
     "line number": [
      106
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_positions_3d": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      110
     ]
    },
    "numpy.ones": {
     "line number": [
      111
     ]
    },
    "photutils.utils.tests.test_interpolation.pytest": {
     "line number": [
      110
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_values_invalid_shape": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      67
     ]
    },
    "photutils.utils.tests.test_interpolation.pytest": {
     "line number": [
      67
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_weights_invalid_shape": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      71
     ]
    },
    "photutils.utils.tests.test_interpolation.pytest": {
     "line number": [
      71
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_weights_negative": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      75
     ]
    },
    "photutils.utils.tests.test_interpolation.pytest": {
     "line number": [
      75
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.WRONG_SHAPE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.idw": {
  "data": {
   "shadows": "ShepardIDWInterpolator"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_moments": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.tests.test_moments.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_moments.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_moments.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_moments.test_moments": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": {
    "_moments": {
     "line number": [
      15
     ]
    },
    "numpy.array": {
     "line number": [
      14,
      16
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      19,
      20
     ]
    },
    "numpy.testing.assert_equal": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_moments.test_moments_central": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": {
    "_moments_central": {
     "line number": [
      25
     ]
    },
    "numpy.array": {
     "line number": [
      24,
      26
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      27
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_moments.test_moments_central_invalid_dim": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      39
     ]
    },
    "_moments_central": {
     "line number": [
      40
     ]
    },
    "numpy.arange": {
     "line number": [
      38
     ]
    },
    "photutils.utils.tests.test_moments.pytest": {
     "line number": [
      39
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_moments.test_moments_central_nonsquare": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": {
    "_moments_central": {
     "line number": [
      32
     ]
    },
    "numpy.array": {
     "line number": [
      31,
      33
     ]
    },
    "numpy.testing.assert_allclose": {
     "line number": [
      34
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_random_state": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.tests.test_random_state.AstropyDeprecationWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyDeprecationWarning"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_random_state.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_random_state.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_random_state.test_invalid_seed": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": {
    "ValueError": {
     "line number": [
      25
     ]
    },
    "astropy.utils.exceptions.AstropyDeprecationWarning": {
     "line number": [
      24
     ]
    },
    "check_random_state": {
     "line number": [
      26
     ]
    },
    "photutils.utils.tests.test_random_state.pytest": {
     "line number": [
      25,
      22
     ]
    },
    "photutils.utils.tests.test_random_state.warnings": {
     "line number": [
      24
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_random_state.test_seed": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": {
    "astropy.utils.exceptions.AstropyDeprecationWarning": {
     "line number": [
      18
     ]
    },
    "check_random_state": {
     "line number": [
      19
     ]
    },
    "isinstance": {
     "line number": [
      19
     ]
    },
    "numpy.random": {
     "line number": [
      15
     ]
    },
    "numpy.random.RandomState": {
     "line number": [
      19,
      16
     ]
    },
    "photutils.utils.tests.test_random_state.pytest": {
     "line number": [
      15
     ]
    },
    "photutils.utils.tests.test_random_state.warnings": {
     "line number": [
      18
     ]
    }
   }
  },
  "type": "function"
 },
 "photutils.utils.tests.test_random_state.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.version": {
  "data": {
   "symbols_in_volume": {
    "Exception": {
     "line number": [
      7
     ]
    },
    "setuptools_scm.get_version": {
     "line number": [
      6
     ]
    }
   }
  },
  "type": "module"
 },
 "photutils.version.get_version": {
  "data": {
   "shadows": "setuptools_scm.get_version"
  },
  "type": "import"
 },
 "photutils.version.version": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 }
}