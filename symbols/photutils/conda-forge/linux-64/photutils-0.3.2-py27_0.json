{
 "*": {
  "data": {
   "imports": [
    "astropy.tests.pytest_plugins"
   ]
  },
  "type": "star-import"
 },
 "photutils": {
  "data": {},
  "type": "module"
 },
 "photutils._astropy_init": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "NameError",
    "TypeError",
    "__builtin__._ASTROPY_SETUP_",
    "__package__",
    "astropy.config.configuration.ConfigurationDefaultMissingError",
    "astropy.config.configuration.ConfigurationDefaultMissingWarning",
    "astropy.config.configuration.update_default_config",
    "photutils._astropy_init.config_dir",
    "photutils._astropy_init.config_template",
    "photutils._astropy_init.os",
    "photutils._astropy_init.wmsg",
    "sys.version_info",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "photutils._astropy_init.TestRunner": {
  "data": {
   "shadows": "astropy.tests.helper.TestRunner"
  },
  "type": "import"
 },
 "photutils._astropy_init.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "photutils._astropy_init.__githash__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils._astropy_init.__version__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils._astropy_init._get_test_runner": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "astropy.tests.helper.TestRunner",
    "photutils._astropy_init.os"
   ]
  },
  "type": "function"
 },
 "photutils._astropy_init.builtins": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "photutils._astropy_init.config": {
  "data": {
   "shadows": "astropy.config"
  },
  "type": "import"
 },
 "photutils._astropy_init.config_dir": {
  "data": {
   "lineno": 122
  },
  "type": "constant"
 },
 "photutils._astropy_init.config_template": {
  "data": {
   "lineno": 123
  },
  "type": "constant"
 },
 "photutils._astropy_init.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "photutils._astropy_init.test": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "photutils._astropy_init._get_test_runner"
   ]
  },
  "type": "function"
 },
 "photutils._astropy_init.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "photutils._astropy_init.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "photutils._astropy_init.wmsg": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "photutils.aperture": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.circle": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.circle.CircularAnnulus": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "photutils.aperture.circle.CircularMaskMixin"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.circle.CircularAnnulus.__init__": {
  "data": {
   "lineno": 207,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_sanitize_pixel_positions",
    "type"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAnnulus._slices": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "int",
    "numpy.floor",
    "property",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAnnulus.area": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "photutils.aperture.circle.math"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAnnulus.plot": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "_make_annulus_path",
    "matplotlib.patches.CirclePolygon",
    "matplotlib.patches.PathPatch"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAperture": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "photutils.aperture.circle.CircularMaskMixin"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.circle.CircularAperture.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_sanitize_pixel_positions",
    "float",
    "type"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAperture._slices": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "int",
    "numpy.floor",
    "property",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAperture.area": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "photutils.aperture.circle.math"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAperture.plot": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "matplotlib.patches.Circle"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularMaskMixin": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.circle.CircularMaskMixin.to_mask": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ApertureMask",
    "ValueError",
    "_translate_mask_method",
    "circular_overlap_grid",
    "hasattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.SkyCircularAnnulus": {
  "data": {
   "lineno": 313
  },
  "type": "class"
 },
 "photutils.aperture.circle.SkyCircularAnnulus.__init__": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_angle_or_pixel",
    "astropy.coordinates.SkyCoord",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.SkyCircularAnnulus.to_pixel": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "astropy.coordinates.SkyCoord",
    "astropy.units.pixel",
    "astropy.wcs.utils.skycoord_to_pixel",
    "numpy.array",
    "photutils.aperture.circle.CircularAnnulus",
    "skycoord_to_pixel_scale_angle"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.SkyCircularAperture": {
  "data": {
   "lineno": 253
  },
  "type": "class"
 },
 "photutils.aperture.circle.SkyCircularAperture.__init__": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "TypeError",
    "assert_angle_or_pixel",
    "astropy.coordinates.SkyCoord",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.SkyCircularAperture.to_pixel": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "astropy.coordinates.SkyCoord",
    "astropy.units.pixel",
    "astropy.wcs.utils.skycoord_to_pixel",
    "numpy.array",
    "photutils.aperture.circle.CircularAperture",
    "skycoord_to_pixel_scale_angle"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.circle.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.aperture.circle.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.aperture.circle.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.aperture.circle.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.aperture.circle.mpatches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "photutils.aperture.circle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.circle.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.aperture.circle.skycoord_to_pixel": {
  "data": {
   "shadows": "astropy.wcs.utils.skycoord_to_pixel"
  },
  "type": "import"
 },
 "photutils.aperture.circle.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.circle.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.aperture.core": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.core.Aperture": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "astropy.extern.six.add_metaclass",
    "object",
    "photutils.aperture.core._ABCMetaAndInheritDocstrings"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.core.Aperture.__len__": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.ApertureMask": {
  "data": {
   "lineno": 531,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.core.ApertureMask.__array__": {
  "data": {
   "lineno": 564
  },
  "type": "function"
 },
 "photutils.aperture.core.ApertureMask.__init__": {
  "data": {
   "lineno": 548,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.ApertureMask._overlap_slices": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "min",
    "slice"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.ApertureMask.apply": {
  "data": {
   "lineno": 694
  },
  "type": "function"
 },
 "photutils.aperture.core.ApertureMask.array": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.ApertureMask.cutout": {
  "data": {
   "lineno": 651,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "isinstance",
    "numpy.asanyarray",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.ApertureMask.to_image": {
  "data": {
   "lineno": 617,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.aperture.core.InheritDocstrings": {
  "data": {
   "shadows": "astropy.utils.misc.InheritDocstrings"
  },
  "type": "import"
 },
 "photutils.aperture.core.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "photutils.aperture.core.PixelAperture": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "photutils.aperture.core.Aperture"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.core.PixelAperture._geom_slices": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "property",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._prepare_photometry_output": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.Unit",
    "astropy.units.UnrecognizedUnit",
    "astropy.utils.exceptions.AstropyUserWarning",
    "isinstance",
    "len",
    "numpy.array",
    "photutils.aperture.core.warnings",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._prepare_plot": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "numpy.atleast_1d",
    "photutils.aperture.core.copy"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._slices": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "NotImplementedError",
    "photutils.aperture.core.abc"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.area": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.do_photometry": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "int",
    "numpy.asanyarray",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.sum",
    "photutils.aperture.core.copy"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.mask_area": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.plot": {
  "data": {
   "lineno": 502,
   "symbols_in_volume": [
    "photutils.aperture.core.abc"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.to_mask": {
  "data": {
   "lineno": 238,
   "symbols_in_volume": [
    "NotImplementedError",
    "photutils.aperture.core.abc"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.QTable": {
  "data": {
   "shadows": "astropy.table.QTable"
  },
  "type": "import"
 },
 "photutils.aperture.core.SkyAperture": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "photutils.aperture.core.Aperture"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.core.SkyAperture.to_pixel": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "NotImplementedError",
    "photutils.aperture.core.abc"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "photutils.aperture.core._ABCMetaAndInheritDocstrings": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "astropy.utils.misc.InheritDocstrings",
    "photutils.aperture.core.abc"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.core.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.aperture.core.__version__": {
  "data": {
   "shadows": "photutils.__version__"
  },
  "type": "import"
 },
 "photutils.aperture.core._get_version_info": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "astropy.__version__",
    "photutils.__version__"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core._make_annulus_path": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "len",
    "matplotlib.path.Path",
    "matplotlib.path.Path.LINETO",
    "matplotlib.path.Path.MOVETO",
    "matplotlib.path.Path.code_type",
    "numpy.concatenate",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core._prepare_photometry_input": {
  "data": {
   "lineno": 724,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.HDUList",
    "astropy.io.fits.ImageHDU",
    "astropy.io.fits.PrimaryHDU",
    "astropy.units.Quantity",
    "astropy.units.Unit",
    "astropy.units.UnrecognizedUnit",
    "astropy.utils.exceptions.AstropyUserWarning",
    "astropy.wcs.WCS",
    "isinstance",
    "len",
    "numpy.asanyarray",
    "numpy.broadcast_arrays",
    "numpy.isscalar",
    "photutils.aperture.core.warnings",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core._sanitize_pixel_positions": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "astropy.units.UnitsError",
    "astropy.units.pixel",
    "isinstance",
    "list",
    "numpy.atleast_2d",
    "numpy.ndarray",
    "numpy.transpose",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core._translate_mask_method": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "photutils.aperture.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.aperture.core.aperture_photometry": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.support_nddata",
    "astropy.table.QTable",
    "astropy.units.pixel",
    "collections.OrderedDict",
    "enumerate",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array_equal",
    "numpy.atleast_1d",
    "numpy.transpose",
    "photutils.aperture.core.SkyAperture",
    "photutils.aperture.core._get_version_info",
    "photutils.aperture.core._prepare_photometry_input"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "photutils.aperture.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.aperture.core.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.aperture.core.mpath": {
  "data": {
   "shadows": "matplotlib.path"
  },
  "type": "import"
 },
 "photutils.aperture.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.core.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "photutils.aperture.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.aperture.core.six": {
  "data": {
   "shadows": "astropy.extern.six"
  },
  "type": "import"
 },
 "photutils.aperture.core.support_nddata": {
  "data": {
   "shadows": "astropy.nddata.support_nddata"
  },
  "type": "import"
 },
 "photutils.aperture.core.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.aperture.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "photutils.aperture.ellipse.EllipticalMaskMixin"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus.__init__": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_sanitize_pixel_positions",
    "float",
    "type"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus._slices": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "int",
    "max",
    "numpy.floor",
    "property",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus.area": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "photutils.aperture.ellipse.math"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus.plot": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "_make_annulus_path",
    "matplotlib.patches.Ellipse",
    "matplotlib.patches.PathPatch",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAperture": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "photutils.aperture.ellipse.EllipticalMaskMixin"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.EllipticalAperture.__init__": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_sanitize_pixel_positions",
    "float",
    "type"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAperture._slices": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "int",
    "max",
    "numpy.floor",
    "property",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAperture.area": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "photutils.aperture.ellipse.math"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAperture.plot": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "matplotlib.patches.Ellipse",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalMaskMixin": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.EllipticalMaskMixin.to_mask": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ApertureMask",
    "ValueError",
    "_translate_mask_method",
    "elliptical_overlap_grid",
    "hasattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.SkyEllipticalAnnulus": {
  "data": {
   "lineno": 374
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.SkyEllipticalAnnulus.__init__": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_angle",
    "assert_angle_or_pixel",
    "astropy.coordinates.SkyCoord",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.SkyEllipticalAnnulus.to_pixel": {
  "data": {
   "lineno": 427,
   "symbols_in_volume": [
    "astropy.coordinates.SkyCoord",
    "astropy.units.pixel",
    "astropy.units.radian",
    "astropy.wcs.utils.skycoord_to_pixel",
    "numpy.array",
    "photutils.aperture.ellipse.EllipticalAnnulus",
    "skycoord_to_pixel_scale_angle"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.SkyEllipticalAperture": {
  "data": {
   "lineno": 294
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.SkyEllipticalAperture.__init__": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_angle",
    "assert_angle_or_pixel",
    "astropy.coordinates.SkyCoord",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.SkyEllipticalAperture.to_pixel": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "astropy.coordinates.SkyCoord",
    "astropy.units.pixel",
    "astropy.units.radian",
    "astropy.wcs.utils.skycoord_to_pixel",
    "numpy.array",
    "photutils.aperture.ellipse.EllipticalAperture",
    "skycoord_to_pixel_scale_angle"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.aperture.ellipse.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.mpatches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.skycoord_to_pixel": {
  "data": {
   "shadows": "astropy.wcs.utils.skycoord_to_pixel"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.rectangle.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.RectangularAnnulus": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "photutils.aperture.rectangle.RectangularMaskMixin"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.RectangularAnnulus.__init__": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_sanitize_pixel_positions",
    "float",
    "type"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAnnulus._slices": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "int",
    "max",
    "numpy.floor",
    "property",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAnnulus.area": {
  "data": {
   "lineno": 294
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAnnulus.plot": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "_make_annulus_path",
    "enumerate",
    "matplotlib.patches.PathPatch",
    "matplotlib.patches.Rectangle",
    "numpy.array",
    "numpy.pi",
    "photutils.aperture.rectangle.math"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAperture": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "photutils.aperture.rectangle.RectangularMaskMixin"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.RectangularAperture.__init__": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "_sanitize_pixel_positions",
    "float",
    "type"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAperture._slices": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "int",
    "max",
    "numpy.floor",
    "property",
    "slice",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAperture.area": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAperture.plot": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "matplotlib.patches.Rectangle",
    "numpy.array",
    "numpy.pi",
    "photutils.aperture.rectangle.math"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularMaskMixin": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.RectangularMaskMixin.to_mask": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "ApertureMask",
    "ValueError",
    "_translate_mask_method",
    "astropy.utils.exceptions.AstropyUserWarning",
    "hasattr",
    "photutils.aperture.rectangle.warnings",
    "rectangular_overlap_grid",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.SkyRectangularAnnulus": {
  "data": {
   "lineno": 416
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.SkyRectangularAnnulus.__init__": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_angle",
    "assert_angle_or_pixel",
    "astropy.coordinates.SkyCoord",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.SkyRectangularAnnulus.to_pixel": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "astropy.coordinates.SkyCoord",
    "astropy.units.pixel",
    "astropy.units.radian",
    "astropy.wcs.utils.skycoord_to_pixel",
    "numpy.array",
    "photutils.aperture.rectangle.RectangularAnnulus",
    "skycoord_to_pixel_scale_angle"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.SkyRectangularAperture": {
  "data": {
   "lineno": 331
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.SkyRectangularAperture.__init__": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_angle",
    "assert_angle_or_pixel",
    "astropy.coordinates.SkyCoord",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.SkyRectangularAperture.to_pixel": {
  "data": {
   "lineno": 375,
   "symbols_in_volume": [
    "astropy.coordinates.SkyCoord",
    "astropy.units.pixel",
    "astropy.units.radian",
    "astropy.wcs.utils.skycoord_to_pixel",
    "numpy.array",
    "photutils.aperture.rectangle.RectangularAperture",
    "skycoord_to_pixel_scale_angle"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.aperture.rectangle.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.mpatches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.skycoord_to_pixel": {
  "data": {
   "shadows": "astropy.wcs.utils.skycoord_to_pixel"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.aperture.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.tests.test_aperture_photometry": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "list",
    "numpy.pi",
    "photutils.aperture.tests.test_aperture_photometry.APERTURE_CL",
    "zip"
   ]
  },
  "type": "module"
 },
 "photutils.aperture.tests.test_aperture_photometry.APERTURE_CL": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry.test_array_error": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "aperture_photometry",
    "hasattr",
    "isinstance",
    "numpy.all",
    "numpy.float",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry.test_scalar_error": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "aperture_photometry",
    "hasattr",
    "isinstance",
    "numpy.all",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.BaseTestDifferentData": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.BaseTestDifferentData.test_basic_circular_aperture_photometry": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_aperture_photometry.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.TEST_APERTURES": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_aperture_photometry.TEST_ELLIPSE_EXACT_APERTURES": {
  "data": {
   "lineno": 561
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_aperture_photometry.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircular": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircular.setup_class": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "CircularAperture",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircularAnnulus": {
  "data": {
   "lineno": 196,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircularAnnulus.setup_class": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "CircularAnnulus",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircularAnnulusArray": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircularAnnulusArray.setup_class": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "CircularAnnulus",
    "numpy.array",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircularArray": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircularArray.setup_class": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "CircularAperture",
    "numpy.array",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestElliptical": {
  "data": {
   "lineno": 221,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestElliptical.setup_class": {
  "data": {
   "lineno": 223,
   "symbols_in_volume": [
    "EllipticalAperture",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestEllipticalAnnulus": {
  "data": {
   "lineno": 234,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestEllipticalAnnulus.setup_class": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "EllipticalAnnulus",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputHDUDifferentBUNIT": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestDifferentData"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputHDUDifferentBUNIT.setup_class": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "astropy.io.fits.ImageHDU",
    "astropy.units.adu",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputHDUList": {
  "data": {
   "lineno": 319,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestDifferentData"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputHDUList.setup_class": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "astropy.io.fits.HDUList",
    "astropy.io.fits.ImageHDU",
    "numpy.empty",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputNDData": {
  "data": {
   "lineno": 345,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestDifferentData"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputNDData.setup_class": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "astropy.nddata.NDData",
    "astropy.units.adu",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputPrimaryHDU": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestDifferentData"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputPrimaryHDU.setup_class": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "astropy.io.fits.ImageHDU",
    "astropy.units.adu",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestMaskedSkipCircular": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestMaskedSkipCircular.setup_class": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "CircularAperture",
    "bool",
    "numpy.float",
    "numpy.ones",
    "numpy.pi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestRectangularAnnulus": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestRectangularAnnulus.setup_class": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "RectangularAnnulus",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestRectangularAperture": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestRectangularAperture.setup_class": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "RectangularAperture",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.pixel_to_skycoord": {
  "data": {
   "shadows": "astropy.wcs.utils.pixel_to_skycoord"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.remote_data": {
  "data": {
   "shadows": "astropy.tests.helper.remote_data"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_aperture_partial_overlap": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "astropy.units.MJy",
    "astropy.units.sr",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_aperture_photometry_inputs_with_mask": {
  "data": {
   "lineno": 539,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "bool",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_aperture_photometry_with_error_units": {
  "data": {
   "lineno": 521,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "astropy.units.Quantity",
    "astropy.units.adu",
    "numpy.float",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_aperture_pixel_positions": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "CircularAperture",
    "astropy.units.Quantity",
    "astropy.units.pixel",
    "numpy.atleast_2d",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_aperture_plots": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "aperture_class",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.mark.skipif",
    "photutils.aperture.tests.test_aperture_photometry.TEST_APERTURES"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_basic_circular_aperture_photometry_unit": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "astropy.units.Quantity",
    "astropy.units.adu",
    "numpy.float",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_ellipse_exact_grid": {
  "data": {
   "lineno": 565,
   "symbols_in_volume": [
    "EllipticalAperture",
    "aperture_photometry",
    "astropy.tests.helper.pytest.mark.parametrize",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "photutils.aperture.tests.test_aperture_photometry.TEST_ELLIPSE_EXACT_APERTURES"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_inside_array_simple": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "aperture_class",
    "aperture_photometry",
    "astropy.tests.helper.pytest.mark.parametrize",
    "isinstance",
    "numpy.float",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.aperture.tests.test_aperture_photometry.TEST_APERTURES"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_nan_inf_mask": {
  "data": {
   "lineno": 582,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "astropy.tests.helper.pytest.mark.parametrize",
    "bool",
    "numpy.inf",
    "numpy.nan",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_outside_array": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "aperture_class",
    "aperture_photometry",
    "astropy.tests.helper.pytest.mark.parametrize",
    "numpy.float",
    "numpy.isnan",
    "numpy.ones",
    "photutils.aperture.tests.test_aperture_photometry.TEST_APERTURES"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_wcs_based_photometry": {
  "data": {
   "lineno": 395,
   "symbols_in_volume": [
    "SkyCircularAnnulus",
    "SkyCircularAperture",
    "SkyEllipticalAnnulus",
    "SkyEllipticalAperture",
    "SkyRectangularAnnulus",
    "SkyRectangularAperture",
    "aperture_photometry",
    "astropy.units.Quantity",
    "astropy.units.deg",
    "astropy.units.pixel",
    "astropy.wcs.WCS",
    "astropy.wcs.utils.pixel_to_skycoord",
    "make_4gaussians_image",
    "numpy.all",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_wcs_based_photometry_to_catalogue": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "SkyCircularAperture",
    "aperture_photometry",
    "astropy.coordinates.SkyCoord",
    "astropy.io.fits.open",
    "astropy.table.Table.read",
    "astropy.tests.helper.remote_data",
    "astropy.units.arcsec",
    "astropy.units.mJy",
    "astropy.units.pixel",
    "get_path",
    "numpy.fabs",
    "numpy.mean",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.background": {
  "data": {},
  "type": "module"
 },
 "photutils.background.background_2d": {
  "data": {},
  "type": "module"
 },
 "photutils.background.background_2d.Background2D": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.background.background_2d.Background2D.__init__": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "SExtractorBackground",
    "SigmaClip",
    "StdBackgroundRMS",
    "ValueError",
    "len",
    "min",
    "numpy.asanyarray",
    "numpy.atleast_1d",
    "numpy.repeat",
    "photutils.background.background_2d.BkgZoomInterpolator"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._calc_bkg_bkgrms": {
  "data": {
   "lineno": 659,
   "symbols_in_volume": [
    "len",
    "numpy.array_equal",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._calc_coordinates": {
  "data": {
   "lineno": 704,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.array",
    "numpy.column_stack",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._crop_data": {
  "data": {
   "lineno": 391,
   "symbols_in_volume": [
    "numpy.lib.index_tricks.index_exp",
    "numpy.ma.masked_array"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._filter_meshes": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.nan",
    "numpy.nanmedian",
    "numpy.nonzero",
    "scipy.ndimage.generic_filter",
    "scipy.stats.nanmedian"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._interpolate_meshes": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "ShepardIDWInterpolator",
    "f",
    "itertools.product",
    "list",
    "numpy.array",
    "numpy.column_stack",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._make_2d_array": {
  "data": {
   "lineno": 519,
   "symbols_in_volume": [
    "ValueError",
    "numpy.bool",
    "numpy.ma.masked_array",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._pad_data": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "numpy.logical_or",
    "numpy.ma.masked_array",
    "numpy.pad",
    "numpy.zeros_like",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._prepare_data": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ma.masked_array",
    "numpy.ma.swapaxes"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._select_meshes": {
  "data": {
   "lineno": 414,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.ma.count_masked",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._selective_filter": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.copy",
    "numpy.median",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background": {
  "data": {
   "lineno": 781,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_median": {
  "data": {
   "lineno": 759,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_mesh_ma": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_rms": {
  "data": {
   "lineno": 787,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_rms_median": {
  "data": {
   "lineno": 770,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_rms_mesh_ma": {
  "data": {
   "lineno": 748,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.mesh_nmasked": {
  "data": {
   "lineno": 726,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.ma.count_masked"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.plot_meshes": {
  "data": {
   "lineno": 793,
   "symbols_in_volume": [
    "RectangularAperture",
    "matplotlib.pyplot.gca",
    "numpy.column_stack"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.BkgIDWInterpolator": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.background.background_2d.BkgIDWInterpolator.__call__": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "ShepardIDWInterpolator",
    "f",
    "numpy.asanyarray",
    "numpy.min",
    "numpy.ptp",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.BkgIDWInterpolator.__init__": {
  "data": {
   "lineno": 128
  },
  "type": "function"
 },
 "photutils.background.background_2d.BkgZoomInterpolator": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.background.background_2d.BkgZoomInterpolator.__call__": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.asanyarray",
    "numpy.min",
    "numpy.ptp",
    "numpy.zeros_like",
    "scipy.ndimage.zoom"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.BkgZoomInterpolator.__init__": {
  "data": {
   "lineno": 49
  },
  "type": "function"
 },
 "photutils.background.background_2d.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.background.background_2d.__doctest_requires__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.background.background_2d.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.background.background_2d.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.background.background_2d.generic_filter": {
  "data": {
   "shadows": "scipy.ndimage.generic_filter"
  },
  "type": "import"
 },
 "photutils.background.background_2d.index_exp": {
  "data": {
   "shadows": "numpy.lib.index_tricks.index_exp"
  },
  "type": "import"
 },
 "photutils.background.background_2d.lazyproperty": {
  "data": {
   "shadows": "astropy.utils.lazyproperty"
  },
  "type": "import"
 },
 "photutils.background.background_2d.nanmedian": {
  "data": {
   "shadows": "scipy.stats.nanmedian"
  },
  "type": "import"
 },
 "photutils.background.background_2d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.background.background_2d.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "photutils.background.background_2d.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.background.background_2d.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "photutils.background.background_2d.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.background.background_2d.zoom": {
  "data": {
   "shadows": "scipy.ndimage.zoom"
  },
  "type": "import"
 },
 "photutils.background.core": {
  "data": {},
  "type": "module"
 },
 "photutils.background.core.BackgroundBase": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "astropy.extern.six.add_metaclass",
    "object",
    "photutils.background.core._ABCMetaAndInheritDocstrings"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.BackgroundBase.__call__": {
  "data": {
   "lineno": 165
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundBase.__init__": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "photutils.background.core.SigmaClip",
    "sigma_clip"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundBase.calc_background": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "photutils.background.core.abc"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundRMSBase": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "astropy.extern.six.add_metaclass",
    "object",
    "photutils.background.core._ABCMetaAndInheritDocstrings"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.BackgroundRMSBase.__call__": {
  "data": {
   "lineno": 206
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundRMSBase.__init__": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "photutils.background.core.SigmaClip",
    "sigma_clip"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundRMSBase.calc_background_rms": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "photutils.background.core.abc"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.BiweightLocationBackground": {
  "data": {
   "lineno": 473,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.BiweightLocationBackground.__init__": {
  "data": {
   "lineno": 513,
   "symbols_in_volume": [
    "photutils.background.core.BiweightLocationBackground",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.BiweightLocationBackground.calc_background": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "biweight_location"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.BiweightMidvarianceBackgroundRMS": {
  "data": {
   "lineno": 618,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundRMSBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.BiweightMidvarianceBackgroundRMS.__init__": {
  "data": {
   "lineno": 658,
   "symbols_in_volume": [
    "photutils.background.core.BiweightMidvarianceBackgroundRMS",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.BiweightMidvarianceBackgroundRMS.calc_background_rms": {
  "data": {
   "lineno": 663,
   "symbols_in_volume": [
    "biweight_midvariance"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.InheritDocstrings": {
  "data": {
   "shadows": "astropy.utils.misc.InheritDocstrings"
  },
  "type": "import"
 },
 "photutils.background.core.MADStdBackgroundRMS": {
  "data": {
   "lineno": 566,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundRMSBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.MADStdBackgroundRMS.calc_background_rms": {
  "data": {
   "lineno": 611,
   "symbols_in_volume": [
    "mad_std"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.MMMBackground": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "photutils.background.core.ModeEstimatorBackground"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.MMMBackground.__init__": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "photutils.background.core.MMMBackground",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.MeanBackground": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.MeanBackground.calc_background": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "numpy.ma.mean"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.MedianBackground": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.MedianBackground.calc_background": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "photutils.background.core._masked_median"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.ModeEstimatorBackground": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.ModeEstimatorBackground.__init__": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "photutils.background.core.ModeEstimatorBackground",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.ModeEstimatorBackground.calc_background": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "numpy.ma.mean",
    "photutils.background.core._masked_median"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.SExtractorBackground": {
  "data": {
   "lineno": 408,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.SExtractorBackground.calc_background": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.atleast_1d",
    "numpy.ma.isMaskedArray",
    "numpy.ma.mean",
    "numpy.ma.std",
    "numpy.ma.where",
    "photutils.background.core._masked_median"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.SigmaClip": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.SigmaClip.__call__": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "sigma_clip"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.SigmaClip.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "numpy.ma.median",
    "numpy.std"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.StdBackgroundRMS": {
  "data": {
   "lineno": 525,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundRMSBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.StdBackgroundRMS.calc_background_rms": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "numpy.ma.std"
   ]
  },
  "type": "function"
 },
 "photutils.background.core._ABCMetaAndInheritDocstrings": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "astropy.utils.misc.InheritDocstrings",
    "photutils.background.core.abc"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.background.core._masked_median": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "numpy.ma.isMaskedArray",
    "numpy.ma.median"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "photutils.background.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.background.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.background.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.background.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.background.core.six": {
  "data": {
   "shadows": "astropy.extern.six"
  },
  "type": "import"
 },
 "photutils.background.core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.background.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.background.tests.test_background_2d": {
  "data": {
   "symbols_in_volume": [
    "BkgIDWInterpolator",
    "BkgZoomInterpolator",
    "ImportError",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "module"
 },
 "photutils.background.tests.test_background_2d.BKG_MESH": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.BKG_RMS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.BKG_RMS_MESH": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.DATA": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.EDGE_METHODS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.FILTER_SIZES": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.HAS_SCIPY": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.INTERPOLATORS": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.PADBKG_MESH": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.PADBKG_RMS_MESH": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_background": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "Background2D",
    "astropy.tests.helper.pytest.mark.parametrize",
    "list",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.BKG_MESH",
    "photutils.background.tests.test_background_2d.BKG_RMS",
    "photutils.background.tests.test_background_2d.BKG_RMS_MESH",
    "photutils.background.tests.test_background_2d.DATA",
    "photutils.background.tests.test_background_2d.FILTER_SIZES",
    "photutils.background.tests.test_background_2d.INTERPOLATORS",
    "photutils.background.tests.test_background_2d.itertools"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_background_mask": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "Background2D",
    "MeanBackground",
    "astropy.tests.helper.pytest.mark.parametrize",
    "numpy.bool",
    "numpy.copy",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "photutils.background.tests.test_background_2d.BKG_RMS",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_background_nonconstant": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "Background2D",
    "astropy.tests.helper.pytest.mark.parametrize",
    "numpy.copy",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.BKG_MESH",
    "photutils.background.tests.test_background_2d.DATA",
    "photutils.background.tests.test_background_2d.INTERPOLATORS"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_exclude_mesh": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "Background2D",
    "ValueError",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.raises",
    "numpy.bool",
    "numpy.ones_like",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_exclude_mesh_percentile": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "Background2D",
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_filter_threshold": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "Background2D",
    "numpy.copy",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.BKG_MESH",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_filter_threshold_high": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "Background2D",
    "numpy.copy",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.BKG_MESH",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_filter_threshold_nofilter": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "Background2D",
    "numpy.copy",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.BKG_MESH",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_invalid_edge_method": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "Background2D",
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_invalid_exclude_mesh_method": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "Background2D",
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_invalid_mesh_idx_len": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "Background2D",
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "numpy.arange",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_mask_badshape": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "Background2D",
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "numpy.zeros",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_no_sigma_clipping": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "Background2D",
    "MeanBackground",
    "numpy.copy",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_plot_meshes": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "Background2D",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_resizing": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "Background2D",
    "MeanBackground",
    "astropy.tests.helper.pytest.mark.parametrize",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.DATA",
    "photutils.background.tests.test_background_2d.FILTER_SIZES"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_scalar_sizes": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "Background2D",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_zero_padding": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "Background2D",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.BKG_RMS",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core": {
  "data": {
   "symbols_in_volume": [
    "SigmaClip",
    "make_noise_image",
    "photutils.background.tests.test_core.BKG",
    "photutils.background.tests.test_core.BKG_CLASS0",
    "photutils.background.tests.test_core.STD"
   ]
  },
  "type": "module"
 },
 "photutils.background.tests.test_core.BKG": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.BKG_CLASS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.BKG_CLASS0": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.DATA": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.RMS_CLASS": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.SIGMA_CLIP": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.STD": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core.test_background": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.parametrize",
    "bkg",
    "bkg.calc_background",
    "bkg_class",
    "numpy.ma.isMaskedArray",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_core.BKG",
    "photutils.background.tests.test_core.BKG_CLASS",
    "photutils.background.tests.test_core.DATA",
    "photutils.background.tests.test_core.SIGMA_CLIP"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_background_axis": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.parametrize",
    "bkg",
    "bkg.calc_background",
    "bkg_class",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_core.BKG_CLASS",
    "photutils.background.tests.test_core.DATA",
    "photutils.background.tests.test_core.SIGMA_CLIP",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_background_rms": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.parametrize",
    "bkgrms",
    "bkgrms.calc_background_rms",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_core.DATA",
    "photutils.background.tests.test_core.RMS_CLASS",
    "photutils.background.tests.test_core.SIGMA_CLIP",
    "photutils.background.tests.test_core.STD",
    "rms_class"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_constant_background": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.parametrize",
    "bkg",
    "bkg.calc_background",
    "bkg_class",
    "numpy.ma.isMaskedArray",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_core.BKG_CLASS0",
    "photutils.background.tests.test_core.SIGMA_CLIP"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_sextrator_background_skew": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "SExtractorBackground",
    "bkg",
    "bkg.calc_background",
    "numpy.arange",
    "numpy.median",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_sextrator_background_zero_std": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "SExtractorBackground",
    "bkg",
    "bkg.calc_background",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.centroids": {
  "data": {},
  "type": "module"
 },
 "photutils.centroids.core": {
  "data": {
   "symbols_in_volume": [
    "astropy.modeling.models.CONSTRAINTS_DOC",
    "photutils.centroids.core.GaussianConst2D"
   ]
  },
  "type": "module"
 },
 "photutils.centroids.core.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.centroids.core.CONSTRAINTS_DOC": {
  "data": {
   "shadows": "astropy.modeling.models.CONSTRAINTS_DOC"
  },
  "type": "import"
 },
 "photutils.centroids.core.Const1D": {
  "data": {
   "shadows": "astropy.modeling.models.Const1D"
  },
  "type": "import"
 },
 "photutils.centroids.core.Const2D": {
  "data": {
   "shadows": "astropy.modeling.models.Const2D"
  },
  "type": "import"
 },
 "photutils.centroids.core.Fittable2DModel": {
  "data": {
   "shadows": "astropy.modeling.Fittable2DModel"
  },
  "type": "import"
 },
 "photutils.centroids.core.Gaussian1D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian1D"
  },
  "type": "import"
 },
 "photutils.centroids.core.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.centroids.core.GaussianConst2D": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.modeling.Fittable2DModel",
    "astropy.modeling.Parameter"
   ]
  },
  "type": "class"
 },
 "photutils.centroids.core.GaussianConst2D.evaluate": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "astropy.modeling.models.Const2D",
    "astropy.modeling.models.Gaussian2D",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.core.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.centroids.core.Parameter": {
  "data": {
   "shadows": "astropy.modeling.Parameter"
  },
  "type": "import"
 },
 "photutils.centroids.core._GaussianConst1D": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.modeling.models.Const1D",
    "astropy.modeling.models.Gaussian1D"
   ]
  },
  "type": "class"
 },
 "photutils.centroids.core.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.centroids.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.centroids.core.centroid_1dg": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.fitting.LevMarLSQFitter",
    "astropy.utils.exceptions.AstropyUserWarning",
    "fitter",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.isfinite",
    "numpy.ma.asanyarray",
    "numpy.ma.masked_invalid",
    "numpy.ma.min",
    "numpy.ma.nomask",
    "numpy.ma.sum",
    "numpy.ones",
    "numpy.sqrt",
    "photutils.centroids.core._GaussianConst1D",
    "photutils.centroids.core.gaussian1d_moments",
    "photutils.centroids.core.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.core.centroid_2dg": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "numpy.array",
    "photutils.centroids.core.fit_2dgaussian"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.core.centroid_com": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.exceptions.AstropyUserWarning",
    "numpy.any",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.float",
    "numpy.isfinite",
    "numpy.ma.asanyarray",
    "numpy.ma.masked_invalid",
    "numpy.ma.nomask",
    "photutils.centroids.core.warnings",
    "skimage.measure.moments"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.centroids.core.fit_2dgaussian": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.fitting.LevMarLSQFitter",
    "astropy.utils.exceptions.AstropyUserWarning",
    "data_properties",
    "fitter",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.indices",
    "numpy.isfinite",
    "numpy.ma.asanyarray",
    "numpy.ma.count",
    "numpy.ma.masked_invalid",
    "numpy.ma.nomask",
    "numpy.min",
    "numpy.ones",
    "numpy.ptp",
    "photutils.centroids.core.GaussianConst2D",
    "photutils.centroids.core.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.core.gaussian1d_moments": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "astropy.utils.exceptions.AstropyUserWarning",
    "numpy.any",
    "numpy.arange",
    "numpy.asanyarray",
    "numpy.isfinite",
    "numpy.ma.array",
    "numpy.ma.masked_invalid",
    "numpy.ma.nomask",
    "numpy.ptp",
    "numpy.sqrt",
    "numpy.sum",
    "photutils.centroids.core.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.core.moments": {
  "data": {
   "shadows": "skimage.measure.moments"
  },
  "type": "import"
 },
 "photutils.centroids.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.centroids.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.centroids.core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.centroids.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.centroids.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.centroids.tests.test_core": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.array",
    "numpy.pi",
    "numpy.zeros",
    "photutils.centroids.tests.test_core.DATA"
   ]
  },
  "type": "module"
 },
 "photutils.centroids.tests.test_core.DATA": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.Gaussian1D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian1D"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.HAS_SKIMAGE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.THETAS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.XCS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.XSTDDEVS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.YCS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.YSTDDEVS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.test_centroid_com_mask": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "centroid_com",
    "numpy.float",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroids": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.mark.skipif",
    "centroid_1dg",
    "centroid_2dg",
    "centroid_com",
    "list",
    "model",
    "numpy.mgrid",
    "numpy.testing.assert_allclose",
    "photutils.centroids.tests.test_core.THETAS",
    "photutils.centroids.tests.test_core.XCS",
    "photutils.centroids.tests.test_core.XSTDDEVS",
    "photutils.centroids.tests.test_core.YCS",
    "photutils.centroids.tests.test_core.YSTDDEVS",
    "photutils.centroids.tests.test_core.itertools"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroids_nan_withmask": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.mark.skipif",
    "bool",
    "centroid_1dg",
    "centroid_2dg",
    "centroid_com",
    "model",
    "numpy.mgrid",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroids_witherror": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.mark.skipif",
    "centroid_1dg",
    "centroid_2dg",
    "list",
    "model",
    "numpy.mgrid",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "photutils.centroids.tests.test_core.THETAS",
    "photutils.centroids.tests.test_core.XCS",
    "photutils.centroids.tests.test_core.XSTDDEVS",
    "photutils.centroids.tests.test_core.YCS",
    "photutils.centroids.tests.test_core.YSTDDEVS",
    "photutils.centroids.tests.test_core.itertools"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroids_withmask": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D",
    "astropy.tests.helper.pytest.mark.skipif",
    "bool",
    "centroid_1dg",
    "centroid_2dg",
    "centroid_com",
    "model",
    "numpy.mgrid",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_fit2dgaussian_dof": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "fit_2dgaussian",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_gaussian1d_moments": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian1D",
    "bool",
    "g",
    "gaussian1d_moments",
    "numpy.arange",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_invalid_error_shape": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.mark.skipif",
    "astropy.tests.helper.pytest.raises",
    "bool",
    "centroid_1dg",
    "centroid_2dg",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_invalid_mask_shape": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.mark.skipif",
    "astropy.tests.helper.pytest.raises",
    "bool",
    "centroid_1dg",
    "centroid_2dg",
    "centroid_com",
    "gaussian1d_moments",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.conftest": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "NameError",
    "enable_deprecations_as_exceptions",
    "photutils.conftest.os",
    "photutils.conftest.packagename",
    "photutils.conftest.version"
   ]
  },
  "type": "module"
 },
 "photutils.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "photutils.conftest.packagename": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "photutils.conftest.version": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "photutils.cython_version": {
  "data": {},
  "type": "module"
 },
 "photutils.cython_version.cython_version": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "photutils.datasets": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.load": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.load.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.datasets.load.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.datasets.load.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.datasets.load.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.datasets.load.download_file": {
  "data": {
   "shadows": "astropy.utils.data.download_file"
  },
  "type": "import"
 },
 "photutils.datasets.load.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.datasets.load.get_path": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.data.download_file",
    "astropy.utils.data.get_pkg_data_filename"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.load.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "photutils.datasets.load.load_fermi_image": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "photutils.datasets.load.get_path"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.load.load_irac_psf": {
  "data": {
   "lineno": 111,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.open",
    "int",
    "photutils.datasets.load.get_path"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.load.load_spitzer_catalog": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "astropy.table.Table.read",
    "photutils.datasets.load.get_path"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.load.load_spitzer_image": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "photutils.datasets.load.get_path"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.load.load_star_image": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "photutils.datasets.load.get_path"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.load.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.datasets.load.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.datasets.make": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.make.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.datasets.make.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.datasets.make.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "photutils.datasets.make.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.datasets.make.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.datasets.make.discretize_model": {
  "data": {
   "shadows": "astropy.convolution.discretize_model"
  },
  "type": "import"
 },
 "photutils.datasets.make.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.datasets.make.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.datasets.make.make_100gaussians_image": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "photutils.datasets.make.make_gaussian_sources",
    "photutils.datasets.make.make_noise_image",
    "photutils.datasets.make.make_random_gaussians"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.make_4gaussians_image": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "astropy.table.Table",
    "numpy.array",
    "numpy.pi",
    "photutils.datasets.make.make_gaussian_sources",
    "photutils.datasets.make.make_noise_image"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.make_gaussian_sources": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "ValueError",
    "astropy.convolution.discretize_model",
    "astropy.io.fits.ImageHDU",
    "astropy.modeling.models.Gaussian2D",
    "astropy.units.Quantity",
    "astropy.wcs.WCS",
    "enumerate",
    "int",
    "model",
    "numpy.float64",
    "numpy.indices",
    "numpy.pi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.make_noise_image": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.Quantity",
    "check_random_state",
    "type"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.make_poisson_noise": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "check_random_state",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.make_random_gaussians": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "astropy.table.Table",
    "check_random_state",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.datasets.make.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.datasets.make.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.datasets.make.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.datasets.setup_package": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.setup_package.get_package_data": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "photutils.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.tests.test_load": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.tests.test_load.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_load.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_load.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_load.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_load.remote_data": {
  "data": {
   "shadows": "astropy.tests.helper.remote_data"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_load.test_get_path": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "get_path"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_load.test_load_fermi_image": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_load.test_load_star_image": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy.tests.helper.remote_data",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_load.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make": {
  "data": {
   "symbols_in_volume": [
    "astropy.table.Table",
    "numpy.array",
    "numpy.pi",
    "photutils.datasets.tests.test_make.TABLE"
   ]
  },
  "type": "module"
 },
 "photutils.datasets.tests.test_make.TABLE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.datasets.tests.test_make.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.assert_quantity_allclose": {
  "data": {
   "shadows": "astropy.tests.helper.assert_quantity_allclose"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.test_make_100gaussians_image": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "make_100gaussians_image",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_4gaussians_image": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "make_4gaussians_image",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_gaussian_sources": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "make_gaussian_sources",
    "numpy.testing.assert_allclose",
    "photutils.datasets.tests.test_make.TABLE"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_gaussian_sources_amplitude": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "make_gaussian_sources",
    "photutils.datasets.tests.test_make.TABLE"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_gaussian_sources_oversample": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "make_gaussian_sources",
    "numpy.testing.assert_allclose",
    "photutils.datasets.tests.test_make.TABLE"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_gaussian_sources_parameters": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "make_gaussian_sources",
    "photutils.datasets.tests.test_make.TABLE"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_gaussian_sources_unit": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.electron",
    "astropy.units.s",
    "make_gaussian_sources",
    "photutils.datasets.tests.test_make.TABLE"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_noise_image": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "make_noise_image",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_noise_image_nomean": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "make_noise_image"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_noise_image_nostddev": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "make_noise_image"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_noise_image_poisson": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "make_noise_image",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_noise_image_unit": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.electron",
    "astropy.units.s",
    "make_noise_image"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_poisson_noise": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "make_poisson_noise",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_poisson_noise_negative": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "make_poisson_noise",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_poisson_noise_unit": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.electron",
    "astropy.units.s",
    "make_poisson_noise",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_random_gaussians": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "len",
    "make_random_gaussians"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_random_gaussians_amplitude": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "len",
    "make_random_gaussians"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.detection": {
  "data": {},
  "type": "module"
 },
 "photutils.detection.core": {
  "data": {},
  "type": "module"
 },
 "photutils.detection.core.Column": {
  "data": {
   "shadows": "astropy.table.Column"
  },
  "type": "import"
 },
 "photutils.detection.core.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.detection.core.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.detection.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.detection.core.detect_threshold": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "numpy.isscalar",
    "numpy.zeros_like",
    "sigma_clipped_stats"
   ]
  },
  "type": "function"
 },
 "photutils.detection.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.detection.core.find_peaks": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.Column",
    "astropy.table.Table",
    "cutout_footprint",
    "fit_2dgaussian",
    "len",
    "numpy.all",
    "numpy.argsort",
    "numpy.asanyarray",
    "numpy.inf",
    "numpy.logical_and",
    "numpy.nan",
    "pixel_to_icrs_coords",
    "range",
    "scipy.ndimage.maximum_filter",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.detection.core.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "photutils.detection.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.detection.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.detection.core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.detection.setup_package": {
  "data": {},
  "type": "module"
 },
 "photutils.detection.setup_package.get_package_data": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "photutils.detection.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.detection.tests.test_core": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.array",
    "numpy.float"
   ]
  },
  "type": "module"
 },
 "photutils.detection.tests.test_core.DATA": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.HAS_SCIPY": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.HAS_SKIMAGE": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.PEAKDATA": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.PEAKREF1": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.REF1": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background_badshape": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "detect_threshold",
    "numpy.zeros",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background_error": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background_error_images": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background_image": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_error": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_error_badshape": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "detect_threshold",
    "numpy.zeros",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_error_image": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_image_mask": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.bool",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.DATA",
    "photutils.detection.tests.test_core.REF1"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_image_mask_override": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.bool",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.DATA",
    "photutils.detection.tests.test_core.REF1"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_mask_value": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_snr": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_snr_zero": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_border_width": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "find_peaks",
    "len",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.PEAKDATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_box_size": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "find_peaks",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.PEAKDATA",
    "photutils.detection.tests.test_core.PEAKREF1"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_box_size_int": {
  "data": {
   "lineno": 191,
   "symbols_in_volume": [
    "find_peaks",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.PEAKDATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_constant_data": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "find_peaks",
    "len",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_footprint": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "find_peaks",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.PEAKDATA",
    "photutils.detection.tests.test_core.PEAKREF1"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_mask": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "bool",
    "find_peaks",
    "len",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "photutils.detection.tests.test_core.PEAKDATA",
    "photutils.detection.tests.test_core.PEAKREF1"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_maskshape": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "find_peaks",
    "numpy.ones",
    "photutils.detection.tests.test_core.PEAKDATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_npeaks": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "find_peaks",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.PEAKDATA",
    "photutils.detection.tests.test_core.PEAKREF1"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_subpixel_regionsize": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "find_peaks",
    "photutils.detection.tests.test_core.PEAKDATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_wcs": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "astropy.wcs.WCS",
    "find_peaks",
    "make_4gaussians_image"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_zerodet": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "find_peaks",
    "len",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.PEAKDATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.exceptions.AstropyUserWarning",
    "make_100gaussians_image",
    "photutils.detection.tests.test_findstars.warnings"
   ]
  },
  "type": "module"
 },
 "photutils.detection.tests.test_findstars.AstropyDeprecationWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyDeprecationWarning"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.DATA": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_findstars.FWHMS": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_findstars.HAS_SCIPY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_findstars.HAS_SKIMAGE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_findstars.THRESHOLDS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_findstars.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "DAOStarFinder",
    "astropy.table.Table.read",
    "astropy.tests.helper.pytest.mark.parametrize",
    "list",
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "photutils.detection.tests.test_findstars.DATA",
    "photutils.detection.tests.test_findstars.FWHMS",
    "photutils.detection.tests.test_findstars.THRESHOLDS",
    "photutils.detection.tests.test_findstars.itertools",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_exclude_border": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "DAOStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_flux_negative": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "DAOStarFinder",
    "numpy.isfinite",
    "numpy.ones",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_include_border": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "DAOStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_nosources": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "DAOStarFinder",
    "len",
    "numpy.ones",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_roundness": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "DAOStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_sharpness": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "DAOStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_dep_daofind": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "astropy.table.Table.read",
    "astropy.tests.helper.catch_warnings",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "daofind",
    "list",
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "photutils.detection.tests.test_findstars.DATA",
    "photutils.detection.tests.test_findstars.FWHMS",
    "photutils.detection.tests.test_findstars.THRESHOLDS",
    "photutils.detection.tests.test_findstars.itertools"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_dep_daofind_exclude_border": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "daofind",
    "len",
    "photutils.detection.tests.test_findstars.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_dep_daofind_flux_negative": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "daofind",
    "numpy.isfinite",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_dep_daofind_include_border": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "daofind",
    "len",
    "photutils.detection.tests.test_findstars.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_dep_daofind_nosources": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "daofind",
    "len",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_dep_daofind_roundness": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "daofind",
    "len",
    "photutils.detection.tests.test_findstars.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_dep_daofind_sharpness": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "daofind",
    "len",
    "photutils.detection.tests.test_findstars.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_dep_irafstarfind": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "astropy.table.Table.read",
    "astropy.tests.helper.catch_warnings",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "irafstarfind",
    "list",
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "photutils.detection.tests.test_findstars.DATA",
    "photutils.detection.tests.test_findstars.FWHMS",
    "photutils.detection.tests.test_findstars.THRESHOLDS",
    "photutils.detection.tests.test_findstars.itertools"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_dep_irafstarfind_largesky": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "irafstarfind",
    "len",
    "photutils.detection.tests.test_findstars.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_dep_irafstarfind_nosources": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "irafstarfind",
    "len",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_dep_irafstarfind_roundness": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "irafstarfind",
    "len",
    "photutils.detection.tests.test_findstars.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_dep_irafstarfind_sharpness": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "irafstarfind",
    "len",
    "photutils.detection.tests.test_findstars.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_dep_irafstarfind_sky": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "irafstarfind",
    "len",
    "photutils.detection.tests.test_findstars.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "astropy.table.Table.read",
    "astropy.tests.helper.pytest.mark.parametrize",
    "list",
    "numpy.array",
    "numpy.float",
    "numpy.testing.assert_allclose",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "photutils.detection.tests.test_findstars.DATA",
    "photutils.detection.tests.test_findstars.FWHMS",
    "photutils.detection.tests.test_findstars.THRESHOLDS",
    "photutils.detection.tests.test_findstars.itertools",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_largesky": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_nosources": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "len",
    "numpy.ones",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_roundness": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_sharpness": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_sky": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.catch_warnings": {
  "data": {
   "shadows": "astropy.tests.helper.catch_warnings"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.extern": {
  "data": {},
  "type": "module"
 },
 "photutils.extern.nddata_compat": {
  "data": {},
  "type": "module"
 },
 "photutils.extern.nddata_compat.NoOverlapError": {
  "data": {
   "lineno": 250,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "photutils.extern.nddata_compat.PartialOverlapError": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "class"
 },
 "photutils.extern.nddata_compat._extract_array_astropy1p1": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "numpy.isscalar",
    "numpy.nan",
    "numpy.zeros",
    "photutils.extern.nddata_compat._overlap_slices_astropy1p1",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.extern.nddata_compat._offset": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "numpy.mod"
   ]
  },
  "type": "function"
 },
 "photutils.extern.nddata_compat._overlap_slices_astropy1p1": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "min",
    "numpy.isscalar",
    "photutils.extern.nddata_compat.NoOverlapError",
    "photutils.extern.nddata_compat.PartialOverlapError",
    "photutils.extern.nddata_compat._offset",
    "photutils.extern.nddata_compat._round",
    "slice",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.extern.nddata_compat._round": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "int",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "photutils.extern.nddata_compat.extract_array": {
  "data": {
   "shadows": "astropy.nddata.utils.extract_array",
   "symbols_in_volume": [
    "astropy.extern.six.PY2",
    "astropy.nddata.utils.extract_array",
    "photutils.extern.nddata_compat._extract_array_astropy1p1",
    "photutils.extern.nddata_compat.inspect"
   ]
  },
  "type": "import"
 },
 "photutils.extern.nddata_compat.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "photutils.extern.nddata_compat.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.extern.nddata_compat.six": {
  "data": {
   "shadows": "astropy.extern.six"
  },
  "type": "import"
 },
 "photutils.extern.sigma_clipping": {
  "data": {},
  "type": "module"
 },
 "photutils.extern.sigma_clipping.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.extern.sigma_clipping.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.extern.sigma_clipping.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.extern.sigma_clipping.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.extern.sigma_clipping.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.extern.sigma_clipping.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.extern.sigma_clipping.sigma_clip": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "astropy.utils.exceptions.AstropyUserWarning",
    "dict",
    "numpy.any",
    "numpy.isfinite",
    "numpy.ma.array",
    "numpy.ma.masked_invalid",
    "numpy.ma.median",
    "numpy.std",
    "perform_clip",
    "photutils.extern.sigma_clipping.warnings",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.sigma_clip.perform_clip": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "cenfunc",
    "numpy.expand_dims",
    "stdfunc"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.sigma_clipped_stats": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "cenfunc",
    "numpy.ma.MaskedArray",
    "numpy.ma.isMaskedArray",
    "numpy.ma.masked_values",
    "numpy.ma.mean",
    "numpy.ma.median",
    "numpy.ma.std",
    "numpy.std",
    "photutils.extern.sigma_clipping.sigma_clip",
    "stdfunc"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.extern.sigma_clipping.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.extern.stats": {
  "data": {},
  "type": "module"
 },
 "photutils.extern.stats.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.extern.stats.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.extern.stats.biweight_location": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "astropy.stats.median_absolute_deviation",
    "numpy.abs",
    "numpy.asanyarray",
    "numpy.expand_dims",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "photutils.extern.stats.biweight_midvariance": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "astropy.stats.median_absolute_deviation",
    "numpy.abs",
    "numpy.asanyarray",
    "numpy.expand_dims",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "photutils.extern.stats.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.extern.stats.mad_std": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.stats.median_absolute_deviation"
   ]
  },
  "type": "function"
 },
 "photutils.extern.stats.median_absolute_deviation": {
  "data": {
   "shadows": "astropy.stats.median_absolute_deviation"
  },
  "type": "import"
 },
 "photutils.extern.stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.extern.stats.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.extern.stats.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.geometry": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.geometry.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.tests.test_circular_overlap_grid": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.arg_list": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.circ_sizes": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.grid_sizes": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.subsamples": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.test_circular_overlap_grid": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.parametrize",
    "circular_overlap_grid",
    "list",
    "numpy.testing.assert_allclose",
    "photutils.geometry.tests.test_circular_overlap_grid.circ_sizes",
    "photutils.geometry.tests.test_circular_overlap_grid.grid_sizes",
    "photutils.geometry.tests.test_circular_overlap_grid.itertools",
    "photutils.geometry.tests.test_circular_overlap_grid.subsamples",
    "photutils.geometry.tests.test_circular_overlap_grid.use_exact"
   ]
  },
  "type": "function"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.use_exact": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.angles": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.arg_list": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.grid_sizes": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.maj_sizes": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.min_sizes": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.subsamples": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.test_elliptical_overlap_grid": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.parametrize",
    "elliptical_overlap_grid",
    "list",
    "numpy.testing.assert_allclose",
    "photutils.geometry.tests.test_elliptical_overlap_grid.angles",
    "photutils.geometry.tests.test_elliptical_overlap_grid.grid_sizes",
    "photutils.geometry.tests.test_elliptical_overlap_grid.itertools",
    "photutils.geometry.tests.test_elliptical_overlap_grid.maj_sizes",
    "photutils.geometry.tests.test_elliptical_overlap_grid.min_sizes",
    "photutils.geometry.tests.test_elliptical_overlap_grid.subsamples",
    "photutils.geometry.tests.test_elliptical_overlap_grid.use_exact"
   ]
  },
  "type": "function"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.use_exact": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.angles": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.arg_list": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.grid_sizes": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.rect_sizes": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.subsamples": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.test_rectangular_overlap_grid": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.parametrize",
    "list",
    "numpy.testing.assert_allclose",
    "photutils.geometry.tests.test_rectangular_overlap_grid.angles",
    "photutils.geometry.tests.test_rectangular_overlap_grid.grid_sizes",
    "photutils.geometry.tests.test_rectangular_overlap_grid.itertools",
    "photutils.geometry.tests.test_rectangular_overlap_grid.rect_sizes",
    "photutils.geometry.tests.test_rectangular_overlap_grid.subsamples",
    "rectangular_overlap_grid"
   ]
  },
  "type": "function"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.morphology": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.core": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.core.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.morphology.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.morphology.core.data_properties": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "SourceProperties",
    "numpy.int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.morphology.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.morphology.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.morphology.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.morphology.core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.morphology.non_parametric": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.non_parametric.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.morphology.non_parametric.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.morphology.non_parametric.gini": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "numpy.mean",
    "numpy.ravel",
    "numpy.size",
    "numpy.sort",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "photutils.morphology.non_parametric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.morphology.non_parametric.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.morphology.non_parametric.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.morphology.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.tests.test_core": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.array",
    "numpy.pi",
    "numpy.zeros",
    "photutils.morphology.tests.test_core.DATA"
   ]
  },
  "type": "module"
 },
 "photutils.morphology.tests.test_core.DATA": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.HAS_SKIMAGE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.THETAS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.XCS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.XSTDDEVS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.YCS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.YSTDDEVS": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.test_data_properties": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "data_properties",
    "numpy.array",
    "numpy.float",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.morphology.tests.test_core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_non_parametric": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.tests.test_non_parametric.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_non_parametric.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_non_parametric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_non_parametric.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_non_parametric.test_gini": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "gini",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.morphology.tests.test_non_parametric.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.psf": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.funcs": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.funcs.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.funcs.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.psf.funcs._call_fitter": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "fitter",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "photutils.psf.funcs._extract_psf_fitting_names": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "photutils.psf.funcs.add_array": {
  "data": {
   "shadows": "astropy.nddata.utils.add_array"
  },
  "type": "import"
 },
 "photutils.psf.funcs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.funcs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.funcs.subtract_psf": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.utils.add_array",
    "astropy.table.Table",
    "extract_array",
    "getattr",
    "hasattr",
    "numpy.indices",
    "photutils.psf.funcs._extract_psf_fitting_names",
    "psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.groupstars": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.groupstars.Column": {
  "data": {
   "shadows": "astropy.table.Column"
  },
  "type": "import"
 },
 "photutils.psf.groupstars.DAOGroup": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "photutils.psf.groupstars.GroupStarsBase"
   ]
  },
  "type": "class"
 },
 "photutils.psf.groupstars.DAOGroup.__init__": {
  "data": {
   "lineno": 74
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DAOGroup.crit_separation": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DAOGroup.find_group": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.hypot"
   ]
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DAOGroup.group_stars": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.Column",
    "len",
    "numpy.append",
    "numpy.arange",
    "numpy.array_equal",
    "numpy.int",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DBSCAN": {
  "data": {
   "shadows": "sklearn.cluster.DBSCAN"
  },
  "type": "import"
 },
 "photutils.psf.groupstars.DBSCANGroup": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "photutils.psf.groupstars.GroupStarsBase"
   ]
  },
  "type": "class"
 },
 "photutils.psf.groupstars.DBSCANGroup.__init__": {
  "data": {
   "lineno": 212
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DBSCANGroup.group_stars": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.Column",
    "len",
    "list",
    "numpy.arange",
    "numpy.array_equal",
    "numpy.int",
    "numpy.ones",
    "sklearn.cluster.DBSCAN",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.psf.groupstars.GroupStarsBase": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "astropy.extern.six.add_metaclass",
    "object",
    "photutils.psf.groupstars.abc"
   ]
  },
  "type": "class"
 },
 "photutils.psf.groupstars.GroupStarsBase.__call__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "photutils.psf.groupstars.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.psf.groupstars.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "photutils.psf.groupstars.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.groupstars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.groupstars.six": {
  "data": {
   "shadows": "astropy.extern.six"
  },
  "type": "import"
 },
 "photutils.psf.matching": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.matching.fourier": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.matching.fourier.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.psf.matching.fourier.create_matching_kernel": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asanyarray",
    "numpy.fft.fft2",
    "numpy.fft.fftshift",
    "numpy.fft.ifft2",
    "numpy.fft.ifftshift",
    "numpy.real",
    "window"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.fourier.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.fft2": {
  "data": {
   "shadows": "numpy.fft.fft2"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.fftshift": {
  "data": {
   "shadows": "numpy.fft.fftshift"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.ifft2": {
  "data": {
   "shadows": "numpy.fft.ifft2"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.ifftshift": {
  "data": {
   "shadows": "numpy.fft.ifftshift"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.resize_psf": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "scipy.ndimage.zoom"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.fourier.zoom": {
  "data": {
   "shadows": "scipy.ndimage.zoom"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.matching.tests.test_fourier": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.psf.matching.tests.test_fourier.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.HAS_SCIPY": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.psf.matching.tests.test_fourier.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.test_create_matching_kernel": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "TopHatWindow",
    "astropy.modeling.models.Gaussian2D",
    "create_matching_kernel",
    "gm1",
    "gm2",
    "gm3",
    "numpy.mgrid",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_fourier.test_create_matching_kernel_shapes": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "create_matching_kernel",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_fourier.test_resize_psf": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "numpy.ones",
    "resize_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_fourier.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "photutils.psf.matching.tests.test_windows.scipy"
   ]
  },
  "type": "module"
 },
 "photutils.psf.matching.tests.test_windows.HAS_SCIPY": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.psf.matching.tests.test_windows.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.SKIMAGE_LT_0P16": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.psf.matching.tests.test_windows.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.test_cosine_bell": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "CosineBellWindow",
    "numpy.testing.assert_allclose",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_hanning": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "HanningWindow",
    "numpy.testing.assert_allclose",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_hanning_numpy": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "HanningWindow",
    "numpy.hanning",
    "numpy.testing.assert_allclose",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_invalid_shape": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "HanningWindow",
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_split_cosine_bell": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "SplitCosineBellWindow",
    "numpy.testing.assert_allclose",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_tophat": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "TopHatWindow",
    "numpy.testing.assert_allclose",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_tukey": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "TukeyWindow",
    "numpy.testing.assert_allclose",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_tukey_scipy": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "TukeyWindow",
    "astropy.tests.helper.pytest.mark.skipif",
    "numpy.testing.assert_allclose",
    "photutils.psf.matching.tests.test_windows.SKIMAGE_LT_0P16",
    "scipy.signal.tukey",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.tukey": {
  "data": {
   "shadows": "scipy.signal.tukey"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.psf.matching.windows": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.matching.windows.CosineBellWindow": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "photutils.psf.matching.windows.SplitCosineBellWindow"
   ]
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.CosineBellWindow.__init__": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.HanningWindow": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "photutils.psf.matching.windows.SplitCosineBellWindow"
   ]
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.HanningWindow.__init__": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.SplitCosineBellWindow": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.SplitCosineBellWindow.__call__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.cos",
    "numpy.floor",
    "numpy.ones",
    "numpy.pi",
    "photutils.psf.matching.windows._radial_distance"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.SplitCosineBellWindow.__init__": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.TopHatWindow": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "photutils.psf.matching.windows.SplitCosineBellWindow"
   ]
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.TopHatWindow.__init__": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.TukeyWindow": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "photutils.psf.matching.windows.SplitCosineBellWindow"
   ]
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.TukeyWindow.__init__": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "photutils.psf.matching.windows._radial_distance": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.meshgrid",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.matching.windows.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.models": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "photutils.psf.models.scipy"
   ]
  },
  "type": "module"
 },
 "photutils.psf.models.AstropyWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyWarning"
  },
  "type": "import"
 },
 "photutils.psf.models.Fittable2DModel": {
  "data": {
   "shadows": "astropy.modeling.Fittable2DModel"
  },
  "type": "import"
 },
 "photutils.psf.models.FittableImageModel": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "astropy.modeling.Fittable2DModel",
    "astropy.modeling.Parameter"
   ]
  },
  "type": "class"
 },
 "photutils.psf.models.FittableImageModel.__init__": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.array",
    "numpy.float64",
    "numpy.isfinite",
    "photutils.psf.models.FittableImageModel",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel._compute_normalization": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "numpy.isfinite",
    "photutils.psf.models.NonNormalizable",
    "photutils.psf.models.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel._compute_raw_image_norm": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel._set_oversampling": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel._store_interpolator_kwargs": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "photutils.psf.models.copy"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.compute_interpolator": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "int",
    "len",
    "numpy.arange",
    "numpy.float",
    "scipy.interpolate.RectBivariateSpline"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.data": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.evaluate": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.broadcast_arrays",
    "photutils.psf.models.SCIPY_VER_GE_014"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.fill_value": {
  "data": {
   "lineno": 369
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.interpolator_kwargs": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.normalization_constant": {
  "data": {
   "lineno": 263,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.normalization_correction": {
  "data": {
   "lineno": 295
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.normalization_status": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.normalized_data": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.nx": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.ny": {
  "data": {
   "lineno": 316,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.origin": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.oversampling": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.shape": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.x_origin": {
  "data": {
   "lineno": 349,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.y_origin": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.HAS_SCIPY": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.psf.models.IntegratedGaussianPRF": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "astropy.modeling.Fittable2DModel",
    "astropy.modeling.Parameter"
   ]
  },
  "type": "class"
 },
 "photutils.psf.models.IntegratedGaussianPRF.__init__": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "photutils.psf.models.IntegratedGaussianPRF",
    "scipy.special.erf",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.IntegratedGaussianPRF.bounding_box": {
  "data": {
   "lineno": 551,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.IntegratedGaussianPRF.evaluate": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.models.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "photutils.psf.models.NonNormalizable": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "astropy.utils.exceptions.AstropyWarning"
   ]
  },
  "type": "class"
 },
 "photutils.psf.models.PRFAdapter": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "astropy.modeling.Fittable2DModel",
    "astropy.modeling.Parameter"
   ]
  },
  "type": "class"
 },
 "photutils.psf.models.PRFAdapter.__init__": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "numpy.inf",
    "photutils.psf.models.PRFAdapter",
    "scipy.integrate.dblquad",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.PRFAdapter._integrated_psfmodel": {
  "data": {
   "lineno": 667,
   "symbols_in_volume": [
    "enumerate",
    "numpy.empty_like",
    "scipy.integrate.dblquad",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.PRFAdapter.evaluate": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.Parameter": {
  "data": {
   "shadows": "astropy.modeling.Parameter"
  },
  "type": "import"
 },
 "photutils.psf.models.RectBivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.RectBivariateSpline"
  },
  "type": "import"
 },
 "photutils.psf.models.SCIPY_VER_GE_014": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.psf.models.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.models.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.psf.models.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "photutils.psf.models.dblquad": {
  "data": {
   "shadows": "scipy.integrate.dblquad"
  },
  "type": "import"
 },
 "photutils.psf.models.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.models.erf": {
  "data": {
   "shadows": "scipy.special.erf"
  },
  "type": "import"
 },
 "photutils.psf.models.get_grouped_psf_model": {
  "data": {
   "lineno": 776,
   "symbols_in_volume": [
    "len",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "photutils.psf.models.models": {
  "data": {
   "shadows": "astropy.modeling.models"
  },
  "type": "import"
 },
 "photutils.psf.models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.models.prepare_psf_model": {
  "data": {
   "lineno": 682,
   "symbols_in_volume": [
    "astropy.modeling.models.Const2D",
    "astropy.modeling.models.Identity",
    "astropy.modeling.models.Shift",
    "getattr",
    "numpy.inf",
    "scipy.integrate.dblquad"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.models.subpixel_indices": {
  "data": {
   "shadows": "astropy.nddata.utils.subpixel_indices"
  },
  "type": "import"
 },
 "photutils.psf.models.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.psf.photometry": {
  "data": {
   "symbols_in_volume": [
    "astropy.utils.minversion",
    "photutils.psf.photometry.ASTROPY_LT_1_1"
   ]
  },
  "type": "module"
 },
 "photutils.psf.photometry.ASTROPY_LT_1_1": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.psf.photometry.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.psf.photometry.BasicPSFPhotometry": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.__call__": {
  "data": {
   "lineno": 185
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "astropy.modeling.fitting.LevMarLSQFitter"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry._model_params2table": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "astropy.table.Table",
    "getattr",
    "hasattr",
    "len",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.aperture_radius": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.do_photometry": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "CircularAperture",
    "ValueError",
    "aperture_photometry",
    "astropy.stats.gaussian_sigma_to_fwhm",
    "astropy.table.Table",
    "astropy.table.hstack",
    "astropy.utils.exceptions.AstropyUserWarning",
    "hasattr",
    "len",
    "photutils.psf.photometry.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.fitshape": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.array",
    "numpy.asarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.get_residual_image": {
  "data": {
   "lineno": 173
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.nstar": {
  "data": {
   "lineno": 287,
   "symbols_in_volume": [
    "ImportError",
    "astropy.nddata.utils.NoOverlapError",
    "astropy.nddata.utils.overlap_slices",
    "astropy.table.Table",
    "astropy.table.vstack",
    "get_grouped_psf_model",
    "len",
    "numpy.bool",
    "numpy.indices",
    "numpy.zeros_like",
    "range",
    "subtract_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.DAOPhotPSFPhotometry": {
  "data": {
   "lineno": 628,
   "symbols_in_volume": [
    "photutils.psf.photometry.IterativelySubtractedPSFPhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.psf.photometry.DAOPhotPSFPhotometry.__init__": {
  "data": {
   "lineno": 732,
   "symbols_in_volume": [
    "DAOGroup",
    "DAOStarFinder",
    "MMMBackground",
    "SigmaClip",
    "astropy.modeling.fitting.LevMarLSQFitter",
    "photutils.psf.photometry.DAOPhotPSFPhotometry",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry": {
  "data": {
   "lineno": 392,
   "symbols_in_volume": [
    "photutils.psf.photometry.BasicPSFPhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry.__init__": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "astropy.modeling.fitting.LevMarLSQFitter",
    "photutils.psf.photometry.IterativelySubtractedPSFPhotometry",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry._do_photometry": {
  "data": {
   "lineno": 574,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "astropy.table.Table",
    "astropy.table.hstack",
    "astropy.table.vstack",
    "len",
    "numpy.int",
    "numpy.ones",
    "photutils.psf.photometry.IterativelySubtractedPSFPhotometry",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry.do_photometry": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "astropy.stats.gaussian_sigma_to_fwhm",
    "astropy.table.vstack",
    "hasattr",
    "numpy.int",
    "numpy.ones",
    "photutils.psf.photometry.IterativelySubtractedPSFPhotometry",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry.finder": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry.niters": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.photometry.NoOverlapError": {
  "data": {
   "shadows": "astropy.nddata.utils.NoOverlapError"
  },
  "type": "import"
 },
 "photutils.psf.photometry.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.photometry.__all__": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.psf.photometry.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.photometry.gaussian_sigma_to_fwhm": {
  "data": {
   "shadows": "astropy.stats.gaussian_sigma_to_fwhm"
  },
  "type": "import"
 },
 "photutils.psf.photometry.hstack": {
  "data": {
   "shadows": "astropy.table.hstack"
  },
  "type": "import"
 },
 "photutils.psf.photometry.minversion": {
  "data": {
   "shadows": "astropy.utils.minversion"
  },
  "type": "import"
 },
 "photutils.psf.photometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.photometry.overlap_slices": {
  "data": {
   "shadows": "astropy.nddata.utils.overlap_slices"
  },
  "type": "import"
 },
 "photutils.psf.photometry.vstack": {
  "data": {
   "shadows": "astropy.table.vstack"
  },
  "type": "import"
 },
 "photutils.psf.photometry.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.psf.sandbox": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.sandbox.DiscretePRF": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy.modeling.Fittable2DModel",
    "astropy.modeling.Parameter"
   ]
  },
  "type": "class"
 },
 "photutils.psf.sandbox.DiscretePRF.__init__": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "astropy.modeling.fitting.LevMarLSQFitter",
    "numpy.array",
    "numpy.isnan",
    "photutils.psf.sandbox.DiscretePRF",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.sandbox.DiscretePRF.create_from_image": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "astropy.nddata.utils.subpixel_indices",
    "astropy.table.Table",
    "classmethod",
    "cls",
    "combine",
    "enumerate",
    "extract_array",
    "isinstance",
    "len",
    "list",
    "mask_to_mirrored_num",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.int",
    "numpy.iscomplexobj",
    "numpy.isnan",
    "numpy.ma.array",
    "numpy.ma.copy",
    "numpy.ma.dstack",
    "numpy.ma.getdata",
    "numpy.ma.mean",
    "numpy.ma.median",
    "numpy.ma.sum",
    "numpy.ndarray",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "photutils.psf.sandbox.DiscretePRF.evaluate": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "astropy.nddata.utils.subpixel_indices",
    "int",
    "numpy.logical_or"
   ]
  },
  "type": "function"
 },
 "photutils.psf.sandbox.DiscretePRF.prf_shape": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.sandbox.Fittable2DModel": {
  "data": {
   "shadows": "astropy.modeling.Fittable2DModel"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.Parameter": {
  "data": {
   "shadows": "astropy.modeling.Parameter"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.psf.sandbox.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.subpixel_indices": {
  "data": {
   "shadows": "astropy.nddata.utils.subpixel_indices"
  },
  "type": "import"
 },
 "photutils.psf.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.tests.test_funcs": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.convolution.utils.discretize_model",
    "astropy.modeling.models.Gaussian2D",
    "astropy.table.Table",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros",
    "photutils.psf.tests.test_funcs.GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_funcs.IMAGE_SIZE",
    "photutils.psf.tests.test_funcs.INTAB",
    "photutils.psf.tests.test_funcs.PSF_SIZE",
    "photutils.psf.tests.test_funcs.image",
    "photutils.psf.tests.test_funcs.model",
    "photutils.psf.tests.test_funcs.psf_model"
   ]
  },
  "type": "module"
 },
 "photutils.psf.tests.test_funcs.GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_funcs.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_funcs.HAS_SCIPY": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_funcs.IMAGE_SIZE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_funcs.INTAB": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_funcs.PSF_SIZE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_funcs.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_funcs.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_funcs.discretize_model": {
  "data": {
   "shadows": "astropy.convolution.utils.discretize_model"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_funcs.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_funcs.image": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_funcs.model": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_funcs.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_funcs.psf_model": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_funcs.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_funcs.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_funcs.test_psf": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_funcs.test_subtract_psf": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "DiscretePRF",
    "astropy.tests.helper.pytest.mark.skipif",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "photutils.psf.tests.test_funcs.INTAB",
    "photutils.psf.tests.test_funcs.image",
    "photutils.psf.tests.test_funcs.test_psf",
    "subtract_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.psf.tests.test_groupstars.HAS_SKLEARN": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_groupstars.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_five": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "astropy.table.vstack",
    "daogroup",
    "numpy.arange",
    "numpy.int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_four": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "daogroup",
    "numpy.arange",
    "numpy.hstack",
    "numpy.int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_one": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "astropy.table.vstack",
    "daogroup",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.int",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_six": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "astropy.table.vstack",
    "daogroup",
    "numpy.arange",
    "numpy.array",
    "numpy.int",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_three": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "astropy.table.vstack",
    "daogroup",
    "numpy.arange",
    "numpy.int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_two": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "astropy.table.vstack",
    "daogroup",
    "numpy.arange",
    "numpy.int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_id_column": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "daogroup",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_id_column_raise_error": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "DAOGroup",
    "ValueError",
    "astropy.table.Table",
    "astropy.tests.helper.pytest.raises",
    "daogroup",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_isolated_sources": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "daogroup",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_group_stars_one": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "DBSCANGroup",
    "astropy.table.Table",
    "astropy.table.vstack",
    "dbscan",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.int",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_group_stars_two": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "DBSCANGroup",
    "astropy.table.Table",
    "astropy.table.vstack",
    "dbscan",
    "numpy.arange",
    "numpy.int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_id_column": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "DBSCANGroup",
    "astropy.table.Table",
    "dbscan",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_id_column_raise_error": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "DBSCANGroup",
    "ValueError",
    "astropy.table.Table",
    "astropy.tests.helper.pytest.raises",
    "dbscan",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_isolated_sources": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "DBSCANGroup",
    "astropy.table.Table",
    "dbscan",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.sklearn.cluster": {
  "data": {
   "shadows": "sklearn.cluster"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.vstack": {
  "data": {
   "shadows": "astropy.table.vstack"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_imagemodel": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.psf.tests.test_imagemodel.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_imagemodel.HAS_SCIPY": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_imagemodel.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_imagemodel.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_imagemodel.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_imagemodel.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_imagemodel.test_centering_oversampled": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "FittableImageModel",
    "astropy.modeling.models.Gaussian2D",
    "astropy.tests.helper.pytest.mark.skipif",
    "gm",
    "imod_oversampled",
    "imod_oversampled.x_0",
    "imod_oversampled.y_0",
    "numpy.allclose",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_imagemodel.test_image_model": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "FittableImageModel",
    "astropy.modeling.models.Gaussian2D",
    "astropy.tests.helper.pytest.mark.skipif",
    "gm",
    "imod_nonorm",
    "imod_norm",
    "imod_norm2",
    "numpy.allclose",
    "numpy.mgrid",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_imagemodel.test_image_model_oversampling": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "FittableImageModel",
    "astropy.modeling.models.Gaussian2D",
    "astropy.tests.helper.pytest.mark.skipif",
    "gm",
    "imod_oversampled",
    "imod_wrongsampled",
    "numpy.allclose",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_misc": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.psf.tests.test_misc.HAS_SCIPY": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_misc.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_misc.Moffat2D": {
  "data": {
   "shadows": "astropy.modeling.models.Moffat2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_misc.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_misc.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_misc.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_misc.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_misc.moffimg": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "astropy.modeling.models.Moffat2D",
    "astropy.tests.helper.pytest.fixture",
    "mof",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.pi",
    "scipy.integrate.dblquad"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_misc.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_misc.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_misc.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_misc.sigmas": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_misc.test_gaussian_psf_integral": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "IntegratedGaussianPRF",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.mark.skipif",
    "numpy.mgrid",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_misc.sigmas",
    "psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_misc.test_get_grouped_psf_model": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "IntegratedGaussianPRF",
    "astropy.table.Table",
    "astropy.tests.helper.pytest.mark.skipif",
    "get_grouped_psf_model"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_misc.test_moffat_fitting": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "astropy.modeling.fitting.LevMarLSQFitter",
    "astropy.modeling.models.Moffat2D",
    "astropy.tests.helper.pytest.mark.skipif",
    "f",
    "mof",
    "mof.amplitude",
    "mof.parameters",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_misc.moffimg"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_misc.test_psf_adapter": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "astropy.modeling.fitting.LevMarLSQFitter",
    "astropy.modeling.models.Moffat2D",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.mark.skipif",
    "dict",
    "f",
    "getattr",
    "mof",
    "mof.amplitude",
    "numpy.abs",
    "photutils.psf.tests.test_misc.moffimg",
    "prepare_psf_model"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_misc.test_subpixel_gauss_psf": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "IntegratedGaussianPRF",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.mark.skipif",
    "gauss_psf",
    "numpy.mgrid",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_misc.widths"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_misc.widths": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.convolution.utils.discretize_model",
    "astropy.modeling.models.Gaussian2D",
    "astropy.table.Table",
    "astropy.utils.minversion",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros",
    "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_photometry.IMAGE_SIZE",
    "photutils.psf.tests.test_photometry.INTAB",
    "photutils.psf.tests.test_photometry.PSF_SIZE",
    "photutils.psf.tests.test_photometry.WIDE_GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_photometry.WIDE_INTAB",
    "photutils.psf.tests.test_photometry.image",
    "photutils.psf.tests.test_photometry.model",
    "photutils.psf.tests.test_photometry.psf_model",
    "photutils.psf.tests.test_photometry.sigma_psfs",
    "photutils.psf.tests.test_photometry.sources1",
    "photutils.psf.tests.test_photometry.sources2",
    "photutils.psf.tests.test_photometry.sources3",
    "photutils.psf.tests.test_photometry.wide_image"
   ]
  },
  "type": "module"
 },
 "photutils.psf.tests.test_photometry.ASTROPY_GT_1_1": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.Fittable2DModel": {
  "data": {
   "shadows": "astropy.modeling.Fittable2DModel"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 349
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.HAS_SCIPY": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.IMAGE_SIZE": {
  "data": {
   "lineno": 350
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.INTAB": {
  "data": {
   "lineno": 353
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.PSF_SIZE": {
  "data": {
   "lineno": 348
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.Parameter": {
  "data": {
   "shadows": "astropy.modeling.Parameter"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.WIDE_GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 374
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.WIDE_INTAB": {
  "data": {
   "lineno": 375
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.astropy": {
  "data": {
   "shadows": "astropy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.catch_warnings": {
  "data": {
   "shadows": "astropy.tests.helper.catch_warnings"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.discretize_model": {
  "data": {
   "shadows": "astropy.convolution.utils.discretize_model"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.gaussian_sigma_to_fwhm": {
  "data": {
   "shadows": "astropy.stats.gaussian_sigma_to_fwhm"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.image": {
  "data": {
   "lineno": 364
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.make_psf_photometry_objs": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "DAOPhotPSFPhotometry",
    "DAOStarFinder",
    "IntegratedGaussianPRF",
    "IterativelySubtractedPSFPhotometry",
    "MMMBackground",
    "MedianBackground",
    "SigmaClip",
    "astropy.modeling.fitting.LevMarLSQFitter",
    "astropy.stats.gaussian_sigma_to_fwhm"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.minversion": {
  "data": {
   "shadows": "astropy.utils.minversion"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.model": {
  "data": {
   "lineno": 381
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.psf_model": {
  "data": {
   "lineno": 358
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.sigma_psfs": {
  "data": {
   "lineno": 85
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.sources1": {
  "data": {
   "lineno": 89
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.sources2": {
  "data": {
   "lineno": 102
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.sources3": {
  "data": {
   "lineno": 117
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "PSFModelWithFWHM",
    "astropy.tests.helper.pytest.mark.xfail",
    "basic_phot_obj",
    "basic_phot_obj.aperture_radius",
    "basic_phot_obj.psf_model",
    "make_gaussian_sources",
    "make_noise_image",
    "numpy.testing.assert_equal",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs",
    "photutils.psf.tests.test_photometry.sources1"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius.PSFModelWithFWHM": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "astropy.modeling.Fittable2DModel",
    "astropy.modeling.Parameter"
   ]
  },
  "type": "class"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius.PSFModelWithFWHM.__init__": {
  "data": {
   "lineno": 333,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius.PSFModelWithFWHM.evaluate": {
  "data": {
   "lineno": 336
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius_errors": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.mark.xfail",
    "astropy.tests.helper.pytest.raises",
    "numpy.testing.assert_equal",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius_value_error": {
  "data": {
   "lineno": 437,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "DiscretePRF",
    "ValueError",
    "astropy.table.Table",
    "astropy.tests.helper.pytest.mark.skipif",
    "astropy.tests.helper.pytest.raises",
    "basic_phot",
    "photutils.psf.tests.test_photometry.image",
    "photutils.psf.tests.test_photometry.test_psf",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_finder_erros": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "DAOGroup",
    "IntegratedGaussianPRF",
    "IterativelySubtractedPSFPhotometry",
    "MMMBackground",
    "ValueError",
    "astropy.tests.helper.pytest.mark.xfail",
    "astropy.tests.helper.pytest.raises",
    "iter_phot_obj",
    "iter_phot_obj.finder",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_finder_positions_warning": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "astropy.table.Table",
    "astropy.tests.helper.catch_warnings",
    "astropy.tests.helper.pytest.mark.xfail",
    "astropy.utils.exceptions.AstropyUserWarning",
    "basic_phot_obj",
    "make_gaussian_sources",
    "make_noise_image",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs",
    "photutils.psf.tests.test_photometry.sources1"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_fitshape_erros": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.mark.xfail",
    "astropy.tests.helper.pytest.raises",
    "numpy.all",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_niters_errors": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.mark.xfail",
    "astropy.tests.helper.pytest.raises",
    "iter_phot_obj",
    "iter_phot_obj.niters",
    "numpy.testing.assert_equal",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf": {
  "data": {
   "lineno": 360
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.test_psf_boundary": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "DiscretePRF",
    "astropy.table.Table",
    "astropy.tests.helper.pytest.mark.skipif",
    "basic_phot",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_photometry.image",
    "photutils.psf.tests.test_photometry.test_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_boundary_gaussian": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "IntegratedGaussianPRF",
    "astropy.table.Table",
    "astropy.tests.helper.pytest.mark.skipif",
    "basic_phot",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_photometry.image"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_fitting_data_on_edge": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "IntegratedGaussianPRF",
    "astropy.tests.helper.pytest.mark.skipif",
    "basic_phot",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_photometry.WIDE_GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_photometry.WIDE_INTAB",
    "photutils.psf.tests.test_photometry.wide_image"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_discrete": {
  "data": {
   "lineno": 386,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "DiscretePRF",
    "astropy.tests.helper.pytest.mark.skipif",
    "basic_phot",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_photometry.INTAB",
    "photutils.psf.tests.test_photometry.image",
    "photutils.psf.tests.test_photometry.test_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_gaussian": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "IntegratedGaussianPRF",
    "astropy.tests.helper.pytest.mark.skipif",
    "basic_phot",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_photometry.INTAB",
    "photutils.psf.tests.test_photometry.image"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_niters": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "SigmaClip",
    "StdBackgroundRMS",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.mark.xfail",
    "bkgrms",
    "iter_phot_obj",
    "iter_phot_obj.get_residual_image",
    "make_gaussian_sources",
    "make_noise_image",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs",
    "photutils.psf.tests.test_photometry.sigma_psfs",
    "photutils.psf.tests.test_photometry.sources3"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_oneiter": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "SigmaClip",
    "StdBackgroundRMS",
    "astropy.table.Table",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.mark.xfail",
    "bkgrms",
    "make_gaussian_sources",
    "make_noise_image",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "phot_proc",
    "phot_proc.get_residual_image",
    "phot_proc.psf_model.x_0.fixed",
    "phot_proc.psf_model.y_0.fixed",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs",
    "photutils.psf.tests.test_photometry.sigma_psfs",
    "photutils.psf.tests.test_photometry.sources1",
    "photutils.psf.tests.test_photometry.sources2"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_tune_coordinates": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "DiscretePRF",
    "astropy.tests.helper.pytest.mark.skipif",
    "basic_phot",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_photometry.INTAB",
    "photutils.psf.tests.test_photometry.image",
    "photutils.psf.tests.test_photometry.test_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.wide_image": {
  "data": {
   "lineno": 377
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_prf_adapter": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.psf.tests.test_prf_adapter.HAS_SCIPY": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_prf_adapter.Moffat2D": {
  "data": {
   "shadows": "astropy.modeling.models.Moffat2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_prf_adapter.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_prf_adapter.dblquad": {
  "data": {
   "shadows": "scipy.integrate.dblquad"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_prf_adapter.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_prf_adapter.normalize_moffat": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_prf_adapter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_prf_adapter.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_prf_adapter.test_create_eval_prfadapter": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "PRFAdapter",
    "astropy.modeling.models.Moffat2D",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.mark.skipif",
    "dict",
    "prf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_prf_adapter.test_prfadapter_integrates": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "PRFAdapter",
    "astropy.modeling.models.Moffat2D",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.mark.skipif",
    "dict",
    "numpy.meshgrid",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_prf_adapter.normalize_moffat",
    "prf1",
    "scipy.integrate.dblquad"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_prf_adapter.test_prfadapter_sizematch": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "PRFAdapter",
    "astropy.modeling.models.Moffat2D",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.mark.skipif",
    "dict",
    "numpy.meshgrid",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_prf_adapter.normalize_moffat",
    "prf1",
    "prf2",
    "scipy.integrate.dblquad"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox": {
  "data": {
   "symbols_in_volume": [
    "astropy.convolution.utils.discretize_model",
    "astropy.modeling.models.Gaussian2D",
    "astropy.table.Table",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros",
    "photutils.psf.tests.test_sandbox.GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_sandbox.IMAGE_SIZE",
    "photutils.psf.tests.test_sandbox.INTAB",
    "photutils.psf.tests.test_sandbox.PSF_SIZE",
    "photutils.psf.tests.test_sandbox.WIDE_GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_sandbox.WIDE_INTAB",
    "photutils.psf.tests.test_sandbox.image",
    "photutils.psf.tests.test_sandbox.model",
    "photutils.psf.tests.test_sandbox.psf_model",
    "photutils.psf.tests.test_sandbox.wide_image"
   ]
  },
  "type": "module"
 },
 "photutils.psf.tests.test_sandbox.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.IMAGE_SIZE": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.INTAB": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.PSF_SIZE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.WIDE_GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.WIDE_INTAB": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.discretize_model": {
  "data": {
   "shadows": "astropy.convolution.utils.discretize_model"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.image": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.model": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.psf_model": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.test_create_prf_excessive_subsampling": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "list",
    "photutils.psf.tests.test_sandbox.INTAB",
    "photutils.psf.tests.test_sandbox.PSF_SIZE",
    "photutils.psf.tests.test_sandbox.image"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox.test_create_prf_flux": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_sandbox.INTAB",
    "photutils.psf.tests.test_sandbox.PSF_SIZE",
    "photutils.psf.tests.test_sandbox.image",
    "photutils.psf.tests.test_sandbox.test_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox.test_create_prf_mean": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "list",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_sandbox.INTAB",
    "photutils.psf.tests.test_sandbox.PSF_SIZE",
    "photutils.psf.tests.test_sandbox.image",
    "photutils.psf.tests.test_sandbox.test_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox.test_create_prf_median": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_sandbox.INTAB",
    "photutils.psf.tests.test_sandbox.PSF_SIZE",
    "photutils.psf.tests.test_sandbox.image",
    "photutils.psf.tests.test_sandbox.test_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox.test_create_prf_nan": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "photutils.psf.tests.test_sandbox.INTAB",
    "photutils.psf.tests.test_sandbox.PSF_SIZE",
    "photutils.psf.tests.test_sandbox.image"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox.test_psf": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.wide_image": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "photutils.segmentation": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.core": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.core.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "photutils.segmentation.core.SegmentationImage": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.core.SegmentationImage.__array__": {
  "data": {
   "lineno": 62
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.__init__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.asanyarray",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage._labels": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "numpy.unique",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.area": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.areas": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.bincount"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.array": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.check_label": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.copy": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.data": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "ValueError",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.data_masked": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.ma.masked_where"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.is_sequential": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.keep_labels": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "list",
    "numpy.atleast_1d",
    "set"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.labels": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.max": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.nlabels": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.outline_segments": {
  "data": {
   "lineno": 231,
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "numpy.ma.masked_where",
    "photutils.segmentation.core.skimage",
    "skimage.segmentation.find_boundaries"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.relabel": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.relabel_sequential": {
  "data": {
   "lineno": 323,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.remove_border_labels": {
  "data": {
   "lineno": 469,
   "symbols_in_volume": [
    "ValueError",
    "min",
    "numpy.bool",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.remove_labels": {
  "data": {
   "lineno": 416
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.remove_masked_labels": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.shape": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.slices": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "scipy.ndimage.find_objects"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.segmentation.core.__doctest_requires__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.segmentation.core.__doctest_skip__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.segmentation.core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.segmentation.core.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "photutils.segmentation.core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.segmentation.core.find_boundaries": {
  "data": {
   "shadows": "skimage.segmentation.find_boundaries"
  },
  "type": "import"
 },
 "photutils.segmentation.core.find_objects": {
  "data": {
   "shadows": "scipy.ndimage.find_objects"
  },
  "type": "import"
 },
 "photutils.segmentation.core.lazyproperty": {
  "data": {
   "shadows": "astropy.utils.lazyproperty"
  },
  "type": "import"
 },
 "photutils.segmentation.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.segmentation.core.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.segmentation.core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.deblend.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.segmentation.deblend._deblend_source": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "astropy.utils.exceptions.AstropyUserWarning",
    "bool",
    "detect_sources",
    "float",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.max",
    "numpy.min",
    "numpy.sum",
    "numpy.unique",
    "numpy.where",
    "photutils.segmentation.deblend.warnings",
    "scipy.ndimage.generate_binary_structure",
    "scipy.ndimage.label",
    "skimage.morphology.watershed"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.deblend.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.deblend_sources": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "bool",
    "copy.deepcopy",
    "filter_data",
    "isinstance",
    "numpy.array_equal",
    "numpy.atleast_1d",
    "numpy.copy",
    "photutils.segmentation.deblend._deblend_source"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.deblend.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.watershed": {
  "data": {
   "shadows": "skimage.morphology.watershed"
  },
  "type": "import"
 },
 "photutils.segmentation.detect": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.detect.Gaussian2DKernel": {
  "data": {
   "shadows": "astropy.convolution.Gaussian2DKernel"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.segmentation.detect.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.detect_sources": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "filter_data",
    "int",
    "len",
    "numpy.where",
    "scipy.ndimage.find_objects",
    "scipy.ndimage.generate_binary_structure",
    "scipy.ndimage.label"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.detect.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.gaussian_fwhm_to_sigma": {
  "data": {
   "shadows": "astropy.stats.gaussian_fwhm_to_sigma"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.make_source_mask": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "astropy.convolution.Gaussian2DKernel",
    "astropy.stats.gaussian_fwhm_to_sigma",
    "detect_threshold",
    "numpy.bool",
    "numpy.ones",
    "photutils.segmentation.detect.detect_sources",
    "scipy.ndimage.binary_dilation"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.detect.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.segmentation.properties": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.properties.SourceProperties": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.properties.SourceProperties.__getitem__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.__init__": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "bool",
    "isinstance",
    "len",
    "numpy.atleast_1d",
    "numpy.ma.nomask",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties._check_covariance": {
  "data": {
   "lineno": 652,
   "symbols_in_volume": [
    "numpy.copy",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties._cutout_segment_bool": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties._cutout_total_mask": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties._data_cutout_maskzeroed_double": {
  "data": {
   "lineno": 286,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.area": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "astropy.units.pix",
    "astropy.utils.lazyproperty",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.background_at_centroid": {
  "data": {
   "lineno": 933,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.utils.lazyproperty",
    "isinstance",
    "scipy.ndimage.map_coordinates"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.background_cutout_ma": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.background_mean": {
  "data": {
   "lineno": 924,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.background_sum": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.bbox": {
  "data": {
   "lineno": 459,
   "symbols_in_volume": [
    "astropy.units.pix",
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.centroid": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "astropy.units.pix",
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.coords": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.covar_sigx2": {
  "data": {
   "lineno": 777,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.covar_sigxy": {
  "data": {
   "lineno": 799,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.covar_sigy2": {
  "data": {
   "lineno": 788,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.covariance": {
  "data": {
   "lineno": 636,
   "symbols_in_volume": [
    "astropy.units.pix",
    "astropy.utils.lazyproperty",
    "numpy.array",
    "numpy.empty",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.covariance_eigvals": {
  "data": {
   "lineno": 673,
   "symbols_in_volume": [
    "astropy.units.pix",
    "astropy.utils.lazyproperty",
    "numpy.any",
    "numpy.isnan",
    "numpy.linalg.eigvals",
    "numpy.max",
    "numpy.min",
    "numpy.nan",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.cutout_centroid": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "astropy.units.pix",
    "astropy.utils.lazyproperty",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.cxx": {
  "data": {
   "lineno": 811,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.cxy": {
  "data": {
   "lineno": 851,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.cyy": {
  "data": {
   "lineno": 831,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.data_cutout": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.data_cutout_ma": {
  "data": {
   "lineno": 276,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.dec_icrs_centroid": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "astropy.units.deg",
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.eccentricity": {
  "data": {
   "lineno": 710,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.ellipticity": {
  "data": {
   "lineno": 760,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.elongation": {
  "data": {
   "lineno": 744,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.equivalent_radius": {
  "data": {
   "lineno": 604,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.error_cutout_ma": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.icrs_centroid": {
  "data": {
   "lineno": 420,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "astropy.wcs.utils.pixel_to_skycoord"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.id": {
  "data": {
   "lineno": 369,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.inertia_tensor": {
  "data": {
   "lineno": 623,
   "symbols_in_volume": [
    "astropy.units.pix",
    "astropy.utils.lazyproperty",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.make_cutout": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asanyarray",
    "numpy.ma.masked_array"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.max_value": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.maxval_cutout_pos": {
  "data": {
   "lineno": 533,
   "symbols_in_volume": [
    "astropy.units.pix",
    "astropy.utils.lazyproperty",
    "numpy.argwhere"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.maxval_pos": {
  "data": {
   "lineno": 552,
   "symbols_in_volume": [
    "astropy.units.pix",
    "astropy.utils.lazyproperty",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.maxval_xpos": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.maxval_ypos": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.min_value": {
  "data": {
   "lineno": 506,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.minval_cutout_pos": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "astropy.units.pix",
    "astropy.utils.lazyproperty",
    "numpy.argwhere"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.minval_pos": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "astropy.units.pix",
    "astropy.utils.lazyproperty",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.minval_xpos": {
  "data": {
   "lineno": 562,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.minval_ypos": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.moments": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "skimage.measure.moments"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.moments_central": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "skimage.measure.moments_central"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.orientation": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "astropy.units.rad",
    "astropy.utils.lazyproperty",
    "numpy.arctan2",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.perimeter": {
  "data": {
   "lineno": 613,
   "symbols_in_volume": [
    "astropy.units.pix",
    "astropy.utils.lazyproperty",
    "skimage.measure.perimeter"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.ra_icrs_centroid": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "astropy.units.deg",
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.semimajor_axis_sigma": {
  "data": {
   "lineno": 688,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.semiminor_axis_sigma": {
  "data": {
   "lineno": 699,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.source_sum": {
  "data": {
   "lineno": 872,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.ma.masked_array",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.source_sum_err": {
  "data": {
   "lineno": 888,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.ma.masked_array",
    "numpy.sqrt",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.to_table": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "photutils.segmentation.properties.properties_table"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.values": {
  "data": {
   "lineno": 341,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.xcentroid": {
  "data": {
   "lineno": 404,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.xmax": {
  "data": {
   "lineno": 479,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.xmin": {
  "data": {
   "lineno": 470,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.ycentroid": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.ymax": {
  "data": {
   "lineno": 497,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.SourceProperties.ymin": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.segmentation.properties.__all__": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.segmentation.properties.__doctest_requires__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.segmentation.properties.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.segmentation.properties.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.segmentation.properties.lazyproperty": {
  "data": {
   "shadows": "astropy.utils.lazyproperty"
  },
  "type": "import"
 },
 "photutils.segmentation.properties.map_coordinates": {
  "data": {
   "shadows": "scipy.ndimage.map_coordinates"
  },
  "type": "import"
 },
 "photutils.segmentation.properties.moments": {
  "data": {
   "shadows": "skimage.measure.moments"
  },
  "type": "import"
 },
 "photutils.segmentation.properties.moments_central": {
  "data": {
   "shadows": "skimage.measure.moments_central"
  },
  "type": "import"
 },
 "photutils.segmentation.properties.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.properties.perimeter": {
  "data": {
   "shadows": "skimage.measure.perimeter"
  },
  "type": "import"
 },
 "photutils.segmentation.properties.pixel_to_skycoord": {
  "data": {
   "shadows": "astropy.wcs.utils.pixel_to_skycoord"
  },
  "type": "import"
 },
 "photutils.segmentation.properties.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.segmentation.properties.properties_table": {
  "data": {
   "lineno": 1132,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.Table",
    "astropy.units.Quantity",
    "astropy.units.deg",
    "astropy.wcs.utils.pixel_to_skycoord",
    "getattr",
    "isinstance",
    "len",
    "list",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.source_properties": {
  "data": {
   "lineno": 955,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "filter_data",
    "isinstance",
    "numpy.atleast_1d",
    "photutils.segmentation.properties.SourceProperties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.properties.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.segmentation.properties.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.segmentation.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.tests.test_core": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "distutils.version.LooseVersion",
    "photutils.segmentation.tests.test_core.skimage"
   ]
  },
  "type": "module"
 },
 "photutils.segmentation.tests.test_core.HAS_SCIPY": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_core.HAS_SKIMAGE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_core.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.SKIMAGE_LT_0P11": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.setup_class": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "SegmentationImage"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_area": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_areas": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_array": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_copy": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "SegmentationImage"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_data_masked": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.MaskedArray",
    "numpy.ma.count",
    "numpy.ma.count_masked"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_invalid_label": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_keep_labels": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "SegmentationImage",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_keep_labels_relabel": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "SegmentationImage",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_labels": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_max": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_negative_data": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_negative_label": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_nlabels": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_outline_segments": {
  "data": {
   "lineno": 94,
   "symbols_in_volume": [
    "SegmentationImage",
    "int",
    "numpy.copy",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "photutils.segmentation.tests.test_core.SKIMAGE_LT_0P11"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_outline_segments_masked_background": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "SegmentationImage",
    "int",
    "isinstance",
    "numpy.copy",
    "numpy.ma.MaskedArray",
    "numpy.ma.count",
    "numpy.ma.count_masked",
    "numpy.zeros",
    "photutils.segmentation.tests.test_core.SKIMAGE_LT_0P11"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_relabel": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "SegmentationImage",
    "len",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_relabel_sequential": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "SegmentationImage",
    "astropy.tests.helper.pytest.mark.parametrize",
    "len",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_relabel_sequential_start_invalid": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.raises"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_border_labels": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "SegmentationImage",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_border_labels_border_width": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "astropy.tests.helper.pytest.raises"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_labels": {
  "data": {
   "lineno": 175,
   "symbols_in_volume": [
    "SegmentationImage",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_labels_relabel": {
  "data": {
   "lineno": 186,
   "symbols_in_volume": [
    "SegmentationImage",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_masked_labels": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "SegmentationImage",
    "numpy.array",
    "numpy.bool",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_masked_labels_without_partial_overlap": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "SegmentationImage",
    "numpy.array",
    "numpy.bool",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_masked_segments_mask_shape": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "numpy.bool",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_zero_label": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.segmentation.tests.test_deblend.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.HAS_SCIPY": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_deblend.HAS_SKIMAGE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.setup_class": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D",
    "detect_sources",
    "g1",
    "g2",
    "g3",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_connectivity": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "deblend_sources",
    "numpy.zeros",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_constant_source": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "deblend_sources",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_sources": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.parametrize",
    "deblend_sources",
    "len",
    "numpy.nonzero",
    "numpy.sum",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_sources_norelabel": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.parametrize",
    "deblend_sources",
    "len",
    "numpy.nonzero",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_sources_segm_array": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "deblend_sources"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_three_sources": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.parametrize",
    "deblend_sources",
    "numpy.nonzero",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_invalid_connectivity": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "deblend_sources"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_invalid_contrast": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "deblend_sources"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_invalid_mode": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "deblend_sources"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_invalid_nlevels": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "deblend_sources"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_segment_img_badshape": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "deblend_sources",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_source_with_negval": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyUserWarning",
    "deblend_sources",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_source_zero_min": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "deblend_sources",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.catch_warnings": {
  "data": {
   "shadows": "astropy.tests.helper.catch_warnings"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.models": {
  "data": {
   "shadows": "astropy.modeling.models"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.segmentation.tests.test_detect.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.Gaussian2DKernel": {
  "data": {
   "shadows": "astropy.convolution.Gaussian2DKernel"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.HAS_SCIPY": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_detect.HAS_SKIMAGE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.setup_class": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "astropy.convolution.Gaussian2DKernel",
    "numpy.array",
    "numpy.float",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_4connectivity": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.diag",
    "numpy.eye",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_8connectivity": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.eye",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_basic_filter_kernel": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_connectivity_invalid": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "detect_sources"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_detection": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_filter_kernel": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_filter_kernel_array": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_npixels_negative": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "detect_sources"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_npixels_nonint": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "detect_sources"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_small_sources": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_unnormalized_filter_kernel": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyUserWarning",
    "detect_sources",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_zerodet": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_zerothresh": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestMakeSourceMask": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_detect.TestMakeSourceMask.setup_class": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "make_4gaussians_image"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestMakeSourceMask.test_dilate_size": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "make_source_mask",
    "numpy.count_nonzero"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestMakeSourceMask.test_kernel": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "astropy.convolution.Gaussian2DKernel",
    "astropy.stats.gaussian_fwhm_to_sigma",
    "make_source_mask",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.catch_warnings": {
  "data": {
   "shadows": "astropy.tests.helper.catch_warnings"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.gaussian_fwhm_to_sigma": {
  "data": {
   "shadows": "astropy.stats.gaussian_fwhm_to_sigma"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.modeling.models.Gaussian2D",
    "distutils.version.LooseVersion",
    "numpy.int",
    "numpy.mgrid",
    "numpy.pi",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.MAJOR_SIG",
    "photutils.segmentation.tests.test_properties.MINOR_SIG",
    "photutils.segmentation.tests.test_properties.THETA",
    "photutils.segmentation.tests.test_properties.THRESHOLD",
    "photutils.segmentation.tests.test_properties.XCEN",
    "photutils.segmentation.tests.test_properties.YCEN",
    "photutils.segmentation.tests.test_properties.g",
    "photutils.segmentation.tests.test_properties.skimage"
   ]
  },
  "type": "module"
 },
 "photutils.segmentation.tests.test_properties.BACKGRD_VALS": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.ERR_VALS": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.Gaussian2DKernel": {
  "data": {
   "shadows": "astropy.convolution.Gaussian2DKernel"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.HAS_SCIPY": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.HAS_SKIMAGE": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.IMAGE": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.LooseVersion": {
  "data": {
   "shadows": "distutils.version.LooseVersion"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.MAJOR_SIG": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.MINOR_SIG": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.SEGM": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.SKIMAGE_LT_0P11": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.THETA": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.THRESHOLD": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.TestPropertiesTable": {
  "data": {
   "lineno": 294,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_properties.TestPropertiesTable.test_properties_table": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "astropy.table.Table",
    "isinstance",
    "len",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "properties_table",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestPropertiesTable.test_properties_table_empty_list": {
  "data": {
   "lineno": 331,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "properties_table"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestPropertiesTable.test_properties_table_empty_props": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "properties_table",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestPropertiesTable.test_properties_table_exclude": {
  "data": {
   "lineno": 317,
   "symbols_in_volume": [
    "KeyError",
    "astropy.table.Table",
    "astropy.tests.helper.pytest.raises",
    "isinstance",
    "len",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "properties_table",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestPropertiesTable.test_properties_table_include": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "astropy.table.Table",
    "isinstance",
    "len",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "properties_table",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestPropertiesTable.test_properties_table_include_invalidname": {
  "data": {
   "lineno": 311,
   "symbols_in_volume": [
    "AttributeError",
    "astropy.tests.helper.pytest.raises",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "properties_table",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestPropertiesTable.test_properties_table_wcs": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "astropy.wcs.WCS",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "properties_table",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_label_invalid": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "SourceProperties",
    "ValueError",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.raises",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_label_missing": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "SourceProperties",
    "ValueError",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.raises",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_nowcs": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "SourceProperties",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_segment_shape": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "SourceProperties",
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "numpy.zeros",
    "photutils.segmentation.tests.test_properties.IMAGE"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_to_table": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "SourceProperties",
    "astropy.table.Table",
    "isinstance",
    "len",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "properties_table"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_wcs": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "SourceProperties",
    "astropy.wcs.WCS",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_cutout_shapes": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "getattr",
    "numpy.ones_like",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_data_allzero": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "getattr",
    "numpy.isnan",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_filtering": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "astropy.convolution.Gaussian2DKernel",
    "numpy.log",
    "numpy.sqrt",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_filtering_kernel": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "astropy.convolution.Gaussian2DKernel",
    "numpy.log",
    "numpy.sqrt",
    "numpy.zeros",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_make_cutout": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "numpy.ones",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_mask": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.int",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "numpy.zeros_like",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_properties": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.pix",
    "astropy.units.rad",
    "astropy.utils.misc.isiterable",
    "getattr",
    "len",
    "numpy.testing.assert_allclose",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.MAJOR_SIG",
    "photutils.segmentation.tests.test_properties.MINOR_SIG",
    "photutils.segmentation.tests.test_properties.SEGM",
    "photutils.segmentation.tests.test_properties.THETA",
    "photutils.segmentation.tests.test_properties.THRESHOLD",
    "photutils.segmentation.tests.test_properties.XCEN",
    "photutils.segmentation.tests.test_properties.YCEN",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_properties_background_notNone": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_properties_error_background_None": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_segmentation_inputs": {
  "data": {
   "lineno": 206,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.units.pix",
    "astropy.units.rad",
    "list",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "photutils.segmentation.tests.test_properties.BACKGRD_VALS",
    "photutils.segmentation.tests.test_properties.ERR_VALS",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.MAJOR_SIG",
    "photutils.segmentation.tests.test_properties.MINOR_SIG",
    "photutils.segmentation.tests.test_properties.SEGM",
    "photutils.segmentation.tests.test_properties.THETA",
    "photutils.segmentation.tests.test_properties.THRESHOLD",
    "photutils.segmentation.tests.test_properties.XCEN",
    "photutils.segmentation.tests.test_properties.YCEN",
    "photutils.segmentation.tests.test_properties.itertools",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_single_pixel_segment": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_background_shape": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "numpy.zeros",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_error_shape": {
  "data": {
   "lineno": 105,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "numpy.zeros",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_invalidlabels": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "len",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_labels": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_mask_shape": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "numpy.zeros",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_segment_shape": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "numpy.zeros",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.WCS": {
  "data": {
   "shadows": "astropy.wcs"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.XCEN": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.YCEN": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.assert_quantity_allclose": {
  "data": {
   "shadows": "astropy.tests.helper.assert_quantity_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.g": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.isiterable": {
  "data": {
   "shadows": "astropy.utils.misc.isiterable"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.models": {
  "data": {
   "shadows": "astropy.modeling.models"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.tests.setup_package": {
  "data": {},
  "type": "module"
 },
 "photutils.tests.setup_package.get_package_data": {
  "data": {
   "lineno": 1
  },
  "type": "function"
 },
 "photutils.utils": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.check_random_state": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.check_random_state.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "photutils.utils.check_random_state.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.utils.check_random_state.check_random_state": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.integer",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.random.mtrand._rand",
    "photutils.utils.check_random_state.numbers"
   ]
  },
  "type": "function"
 },
 "photutils.utils.check_random_state.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.utils.check_random_state.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.check_random_state.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "photutils.utils.check_random_state.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.utils.check_random_state.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.utils.colormaps": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.colormaps.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.utils.colormaps.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.utils.colormaps.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "photutils.utils.colormaps.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.utils.colormaps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.colormaps.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.utils.colormaps.random_cmap": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "matplotlib.colors.ListedColormap",
    "matplotlib.colors.cnames",
    "matplotlib.colors.hex2color",
    "matplotlib.colors.hsv_to_rgb",
    "numpy.dstack",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "photutils.utils.colormaps.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.utils.convolution": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.convolution.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.utils.convolution.Kernel2D": {
  "data": {
   "shadows": "astropy.convolution.Kernel2D"
  },
  "type": "import"
 },
 "photutils.utils.convolution.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.utils.convolution.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.utils.convolution.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.utils.convolution.filter_data": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "astropy.convolution.Kernel2D",
    "astropy.utils.exceptions.AstropyUserWarning",
    "isinstance",
    "numpy.allclose",
    "numpy.sum",
    "photutils.utils.convolution.warnings",
    "scipy.ndimage.convolve"
   ]
  },
  "type": "function"
 },
 "photutils.utils.convolution.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "photutils.utils.convolution.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.convolution.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.utils.convolution.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.utils.convolution.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.utils.cutouts": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.cutouts.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.utils.cutouts.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.utils.cutouts.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "photutils.utils.cutouts.cutout_footprint": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.utils.overlap_slices",
    "bool",
    "isinstance",
    "len",
    "numpy.asanyarray",
    "numpy.logical_or",
    "numpy.ones",
    "numpy.zeros_like",
    "photutils.utils.cutouts.collections"
   ]
  },
  "type": "function"
 },
 "photutils.utils.cutouts.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.utils.cutouts.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.cutouts.overlap_slices": {
  "data": {
   "shadows": "astropy.nddata.utils.overlap_slices"
  },
  "type": "import"
 },
 "photutils.utils.cutouts.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.utils.cutouts.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.utils.errors": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.errors.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.utils.errors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.utils.errors.calc_total_error": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "any",
    "astropy.units.UnitsError",
    "astropy.units.electron",
    "astropy.units.photon",
    "astropy.utils.misc.isiterable",
    "hasattr",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.maximum",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.utils.errors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.utils.errors.isiterable": {
  "data": {
   "shadows": "astropy.utils.misc.isiterable"
  },
  "type": "import"
 },
 "photutils.utils.errors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.errors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.utils.errors.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.utils.errors.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.utils.interpolation": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.interpolation.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.utils.interpolation.ShepardIDWInterpolator": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.utils.interpolation.ShepardIDWInterpolator.__call__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.dot",
    "numpy.float",
    "numpy.isfinite",
    "numpy.nan",
    "numpy.reshape",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.utils.interpolation.ShepardIDWInterpolator.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.atleast_2d",
    "numpy.reshape",
    "numpy.transpose",
    "scipy.spatial.cKDTree"
   ]
  },
  "type": "function"
 },
 "photutils.utils.interpolation.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.utils.interpolation.__doctest_requires__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.utils.interpolation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.utils.interpolation.cKDTree": {
  "data": {
   "shadows": "scipy.spatial.cKDTree"
  },
  "type": "import"
 },
 "photutils.utils.interpolation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.utils.interpolation.interpolate_masked_data": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.exceptions.AstropyUserWarning",
    "len",
    "max",
    "min",
    "numpy.any",
    "numpy.array",
    "numpy.copy",
    "numpy.mean",
    "numpy.sqrt",
    "photutils.utils.interpolation.warnings",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.utils.interpolation.mask_to_mirrored_num": {
  "data": {
   "lineno": 372,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "photutils.utils.interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.interpolation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.utils.interpolation.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.utils.interpolation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.utils.stats": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.stats.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "photutils.utils.stats._mesh_values": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "numpy.ma.asanyarray",
    "numpy.ma.count_masked",
    "numpy.ma.swapaxes",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "photutils.utils.stats.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.utils.stats.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.utils.stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.stats.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.utils.stats.std_blocksum": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.atleast_1d",
    "numpy.ma.asanyarray",
    "numpy.ma.nomask",
    "numpy.std",
    "numpy.sum",
    "photutils.utils.stats._mesh_values"
   ]
  },
  "type": "function"
 },
 "photutils.utils.stats.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.utils.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.tests.test_colormaps": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.utils.tests.test_colormaps.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_colormaps.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_colormaps.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_colormaps.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_colormaps.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_colormaps.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_colormaps.test_colormap": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "cmap",
    "random_cmap"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_colormaps.test_colormap_background": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "cmap",
    "random_cmap"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_colormaps.test_invalid_background": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.mark.skipif",
    "astropy.tests.helper.pytest.raises",
    "random_cmap"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_colormaps.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_cutouts": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.pi",
    "numpy.zeros",
    "photutils.utils.tests.test_cutouts.DATA"
   ]
  },
  "type": "module"
 },
 "photutils.utils.tests.test_cutouts.DATA": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_cutouts.THETAS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_cutouts.TestCutoutFootprint": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.utils.tests.test_cutouts.TestCutoutFootprint.test_dataonly": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "cutout_footprint",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_cutouts.TestCutoutFootprint.test_mask_error": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "bool",
    "cutout_footprint",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_cutouts.TestCutoutFootprint.test_nofootprint": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "cutout_footprint",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_cutouts.TestCutoutFootprint.test_position_len": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "cutout_footprint",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_cutouts.TestCutoutFootprint.test_wrongboxsize": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "cutout_footprint",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_cutouts.XCS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_cutouts.XSTDDEVS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_cutouts.YCS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_cutouts.YSTDDEVS": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_cutouts.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_cutouts.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_cutouts.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_cutouts.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_cutouts.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_cutouts.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_cutouts.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "numpy.ones",
    "numpy.zeros_like",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.DATAVAL",
    "photutils.utils.tests.test_errors.MASK",
    "photutils.utils.tests.test_errors.SHAPE"
   ]
  },
  "type": "module"
 },
 "photutils.utils.tests.test_errors.BACKGROUND": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.BKG_ERROR": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.DATA": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.DATAVAL": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.EFFGAIN": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.MASK": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.SHAPE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_effgain_units": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.raises",
    "astropy.units.UnitsError",
    "astropy.units.electron",
    "astropy.units.km",
    "astropy.units.s",
    "calc_total_error",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.EFFGAIN"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_error_shape": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "calc_total_error",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.EFFGAIN",
    "photutils.utils.tests.test_errors.WRONG_SHAPE"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_error_units": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "astropy.units.electron",
    "astropy.units.s",
    "calc_total_error",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.EFFGAIN"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_gain_array": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "calc_total_error",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.EFFGAIN"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_gain_le_zero": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.raises",
    "calc_total_error",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_gain_scalar": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "calc_total_error",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_gain_shape": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "calc_total_error",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.WRONG_SHAPE"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_missing_bkgerror_units": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "astropy.units.electron",
    "astropy.units.s",
    "calc_total_error",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.EFFGAIN"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_missing_effgain_units": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "astropy.units.electron",
    "astropy.units.s",
    "calc_total_error",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.EFFGAIN"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_units": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "astropy.units.electron",
    "astropy.units.s",
    "calc_total_error",
    "numpy.testing.assert_allclose",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.EFFGAIN"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.WRONG_SHAPE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "bool",
    "numpy.ones",
    "numpy.zeros_like",
    "photutils.utils.tests.test_interpolation.DATA",
    "photutils.utils.tests.test_interpolation.MASK",
    "photutils.utils.tests.test_interpolation.SHAPE"
   ]
  },
  "type": "module"
 },
 "photutils.utils.tests.test_interpolation.BACKGROUND": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.DATA": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.ERROR": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.HAS_SCIPY": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.MASK": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.SHAPE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.TestInterpolateMaskedData": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.utils.tests.test_interpolation.TestInterpolateMaskedData.test_background_shape": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "interpolate_masked_data",
    "photutils.utils.tests.test_interpolation.DATA",
    "photutils.utils.tests.test_interpolation.MASK",
    "photutils.utils.tests.test_interpolation.WRONG_SHAPE"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestInterpolateMaskedData.test_error_shape": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "interpolate_masked_data",
    "photutils.utils.tests.test_interpolation.DATA",
    "photutils.utils.tests.test_interpolation.MASK",
    "photutils.utils.tests.test_interpolation.WRONG_SHAPE"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestInterpolateMaskedData.test_interpolation": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "interpolate_masked_data",
    "numpy.testing.assert_allclose",
    "photutils.utils.tests.test_interpolation.BACKGROUND",
    "photutils.utils.tests.test_interpolation.DATA",
    "photutils.utils.tests.test_interpolation.ERROR",
    "photutils.utils.tests.test_interpolation.MASK"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestInterpolateMaskedData.test_interpolation_larger_mask": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "interpolate_masked_data",
    "numpy.testing.assert_allclose",
    "photutils.utils.tests.test_interpolation.BACKGROUND",
    "photutils.utils.tests.test_interpolation.DATA",
    "photutils.utils.tests.test_interpolation.ERROR",
    "photutils.utils.tests.test_interpolation.MASK"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestInterpolateMaskedData.test_mask_shape": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "interpolate_masked_data",
    "photutils.utils.tests.test_interpolation.DATA",
    "photutils.utils.tests.test_interpolation.WRONG_SHAPE"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum.test_mask_to_mirrored_num": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "bool",
    "mask_to_mirrored_num",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum.test_mask_to_mirrored_num_bbox": {
  "data": {
   "lineno": 203,
   "symbols_in_volume": [
    "bool",
    "mask_to_mirrored_num",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum.test_mask_to_mirrored_num_masked": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "bool",
    "mask_to_mirrored_num",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum.test_mask_to_mirrored_num_range": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "bool",
    "mask_to_mirrored_num",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.skipif",
    "object"
   ]
  },
  "type": "class"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.setup_class": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_conf_dist_negative": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_dtype_none": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_idw_1d": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.parametrize",
    "f",
    "numpy.arange",
    "numpy.sin",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_idw_2d": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "f",
    "numpy.random.rand",
    "numpy.sin",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_idw_3d": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "f",
    "numpy.indices",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_idw_weights": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "f",
    "numpy.sin",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_n_neighbors_negative": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_n_neighbors_one": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_no_coordinates": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_positions_0d_nomatch": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "f",
    "numpy.random.rand",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_positions_1d_nomatch": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "f",
    "numpy.random.rand",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_positions_3d": {
  "data": {
   "lineno": 108,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_values_invalid_shape": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_weights_invalid_shape": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_weights_negative": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.WRONG_SHAPE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.idw": {
  "data": {
   "shadows": "ShepardIDWInterpolator"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_random_state": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.tests.test_random_state.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_random_state.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_random_state.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_random_state.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_random_state.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_random_state.test_invalid_seed": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.mark.parametrize",
    "astropy.tests.helper.pytest.raises",
    "check_random_state"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_random_state.test_seed": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "astropy.tests.helper.pytest.mark.parametrize",
    "check_random_state",
    "isinstance",
    "numpy.random",
    "numpy.random.RandomState"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_random_state.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_stats": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.tests.test_stats.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_stats.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_stats.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_stats.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_stats.pytest": {
  "data": {
   "shadows": "astropy.tests.helper.pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_stats.test_std_blocksum": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "make_noise_image",
    "numpy.array",
    "numpy.bool",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "std_blocksum"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_stats.test_std_blocksum_mask_shape": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ValueError",
    "astropy.tests.helper.pytest.raises",
    "numpy.ones",
    "std_blocksum"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_stats.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.utils.wcs_helpers": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.wcs_helpers.UnitSphericalRepresentation": {
  "data": {
   "shadows": "astropy.coordinates.UnitSphericalRepresentation"
  },
  "type": "import"
 },
 "photutils.utils.wcs_helpers.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "photutils.utils.wcs_helpers.assert_angle": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.utils.wcs_helpers.assert_angle_or_pixel": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "astropy.units.pixel",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.utils.wcs_helpers.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "photutils.utils.wcs_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.wcs_helpers.pixel_to_icrs_coords": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "astropy.units.deg",
    "astropy.wcs.utils.pixel_to_skycoord"
   ]
  },
  "type": "function"
 },
 "photutils.utils.wcs_helpers.pixel_to_skycoord": {
  "data": {
   "shadows": "astropy.wcs.utils.pixel_to_skycoord"
  },
  "type": "import"
 },
 "photutils.utils.wcs_helpers.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "photutils.utils.wcs_helpers.skycoord_to_pixel": {
  "data": {
   "shadows": "astropy.wcs.utils.skycoord_to_pixel"
  },
  "type": "import"
 },
 "photutils.utils.wcs_helpers.skycoord_to_pixel_mode": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.utils.wcs_helpers.skycoord_to_pixel_scale_angle": {
  "data": {
   "lineno": 14,
   "symbols_in_volume": [
    "astropy.coordinates.UnitSphericalRepresentation",
    "astropy.units.arcsec",
    "astropy.units.pixel",
    "astropy.units.radian",
    "astropy.wcs.utils.skycoord_to_pixel",
    "numpy.arctan2",
    "numpy.hypot",
    "photutils.utils.wcs_helpers.skycoord_to_pixel_mode"
   ]
  },
  "type": "function"
 },
 "photutils.utils.wcs_helpers.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.utils.wcs_helpers.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.version": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "len",
    "photutils.version._get_repo_path",
    "photutils.version._last_generated_version",
    "photutils.version._last_githash",
    "photutils.version._packagename",
    "photutils.version.datetime",
    "photutils.version.get_git_devstr",
    "photutils.version.update_git_devstr"
   ]
  },
  "type": "module"
 },
 "photutils.version._decode_stdio": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "ValueError",
    "photutils.version.locale"
   ]
  },
  "type": "function"
 },
 "photutils.version._get_repo_path": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "photutils.version.os"
   ]
  },
  "type": "function"
 },
 "photutils.version._last_generated_version": {
  "data": {
   "lineno": 184
  },
  "type": "constant"
 },
 "photutils.version._last_githash": {
  "data": {
   "lineno": 185
  },
  "type": "constant"
 },
 "photutils.version._packagename": {
  "data": {
   "lineno": 183
  },
  "type": "constant"
 },
 "photutils.version.bugfix": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "photutils.version.compiler": {
  "data": {
   "lineno": 212
  },
  "type": "constant"
 },
 "photutils.version.cython_version": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "photutils.version.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "photutils.version.debug": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "photutils.version.get_git_devstr": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "photutils.version._decode_stdio",
    "photutils.version._get_repo_path",
    "photutils.version.os",
    "run_git",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.version.get_git_devstr.run_git": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "OSError",
    "photutils.version._decode_stdio",
    "photutils.version.subprocess",
    "photutils.version.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.version.githash": {
  "data": {
   "lineno": 198
  },
  "type": "constant"
 },
 "photutils.version.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "photutils.version.major": {
  "data": {
   "lineno": 201
  },
  "type": "constant"
 },
 "photutils.version.minor": {
  "data": {
   "lineno": 202
  },
  "type": "constant"
 },
 "photutils.version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "photutils.version.release": {
  "data": {
   "lineno": 205
  },
  "type": "constant"
 },
 "photutils.version.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "photutils.version.timestamp": {
  "data": {
   "lineno": 206
  },
  "type": "constant"
 },
 "photutils.version.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.version.update_git_devstr": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "OSError",
    "photutils.version.get_git_devstr"
   ]
  },
  "type": "function"
 },
 "photutils.version.version": {
  "data": {
   "lineno": 197
  },
  "type": "constant"
 },
 "photutils.version.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}