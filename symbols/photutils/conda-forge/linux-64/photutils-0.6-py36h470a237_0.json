{
 "*": {
  "data": {
   "imports": [
    "astropy.tests.pytest_plugins"
   ]
  },
  "type": "star-import"
 },
 "photutils": {
  "data": {
   "symbols_in_volume": [
    "int",
    "photutils.UnsupportedPythonError",
    "photutils.__minimum_python_version__",
    "photutils.sys",
    "tuple"
   ]
  },
  "type": "module"
 },
 "photutils.UnsupportedPythonError": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "Exception"
   ]
  },
  "type": "class"
 },
 "photutils.__minimum_numpy_version__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.__minimum_python_version__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils._astropy_init": {
  "data": {
   "symbols_in_volume": [
    "Exception",
    "ImportError",
    "NameError",
    "TypeError",
    "__builtin__._ASTROPY_SETUP_",
    "__package__",
    "astropy.config.configuration.ConfigurationDefaultMissingError",
    "astropy.config.configuration.ConfigurationDefaultMissingWarning",
    "astropy.config.configuration.update_default_config",
    "astropy.tests.runner.TestRunner.make_test_runner_in",
    "photutils._astropy_init.__all__",
    "photutils._astropy_init.config_dir",
    "photutils._astropy_init.config_template",
    "photutils._astropy_init.os",
    "photutils._astropy_init.test",
    "photutils._astropy_init.wmsg",
    "sys.version_info",
    "warnings.warn"
   ]
  },
  "type": "module"
 },
 "photutils._astropy_init.ConfigurationDefaultMissingError": {
  "data": {
   "shadows": "astropy.config.configuration.ConfigurationDefaultMissingError"
  },
  "type": "import"
 },
 "photutils._astropy_init.ConfigurationDefaultMissingWarning": {
  "data": {
   "shadows": "astropy.config.configuration.ConfigurationDefaultMissingWarning"
  },
  "type": "import"
 },
 "photutils._astropy_init.TestRunner": {
  "data": {
   "shadows": "astropy.tests.runner.TestRunner"
  },
  "type": "import"
 },
 "photutils._astropy_init.__all__": {
  "data": {
   "lineno": 3
  },
  "type": "constant"
 },
 "photutils._astropy_init.__githash__": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils._astropy_init.__version__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils._astropy_init.builtins": {
  "data": {
   "shadows": "__builtin__"
  },
  "type": "import"
 },
 "photutils._astropy_init.config_dir": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "photutils._astropy_init.config_template": {
  "data": {
   "lineno": 45
  },
  "type": "constant"
 },
 "photutils._astropy_init.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "photutils._astropy_init.test": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "photutils._astropy_init.update_default_config": {
  "data": {
   "shadows": "astropy.config.configuration.update_default_config"
  },
  "type": "import"
 },
 "photutils._astropy_init.version_info": {
  "data": {
   "shadows": "sys.version_info"
  },
  "type": "import"
 },
 "photutils._astropy_init.warn": {
  "data": {
   "shadows": "warnings.warn"
  },
  "type": "import"
 },
 "photutils._astropy_init.wmsg": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "photutils.aperture": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.bounding_box": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.bounding_box.BoundingBox": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "photutils.aperture.bounding_box.BoundingBox.__eq__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "photutils.aperture.bounding_box.BoundingBox"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.__init__": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.io.fits.util._is_int"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.__repr__": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox._from_float": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "classmethod",
    "cls",
    "int",
    "numpy.ceil",
    "numpy.floor"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.as_patch": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "matplotlib.patches.Rectangle"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.extent": {
  "data": {
   "lineno": 159,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.plot": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.shape": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.slices": {
  "data": {
   "lineno": 148,
   "symbols_in_volume": [
    "property",
    "slice"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.BoundingBox.to_aperture": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "RectangularAperture"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.bounding_box.Rectangle": {
  "data": {
   "shadows": "matplotlib.patches.Rectangle"
  },
  "type": "import"
 },
 "photutils.aperture.bounding_box.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "photutils.aperture.bounding_box._is_int": {
  "data": {
   "shadows": "astropy.io.fits.util._is_int"
  },
  "type": "import"
 },
 "photutils.aperture.bounding_box.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.circle": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.circle.CircularAnnulus": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "photutils.aperture.circle.CircularMaskMixin"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.circle.CircularAnnulus.__init__": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAnnulus.area": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "photutils.aperture.circle.math"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAnnulus.bounding_boxes": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAnnulus.plot": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "matplotlib.patches.Circle",
    "matplotlib.patches.PathPatch"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAnnulus.to_sky": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "photutils.aperture.circle.SkyCircularAnnulus"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAperture": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "photutils.aperture.circle.CircularMaskMixin"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.circle.CircularAperture.__init__": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAperture.area": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "photutils.aperture.circle.math"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAperture.bounding_boxes": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAperture.plot": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "matplotlib.patches.Circle"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularAperture.to_sky": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "photutils.aperture.circle.SkyCircularAperture"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.CircularMaskMixin": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "photutils.aperture.circle.CircularMaskMixin.to_mask": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "ApertureMask",
    "ValueError",
    "circular_overlap_grid",
    "hasattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.SkyCircularAnnulus": {
  "data": {
   "lineno": 328
  },
  "type": "class"
 },
 "photutils.aperture.circle.SkyCircularAnnulus.__init__": {
  "data": {
   "lineno": 347,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_angle_or_pixel",
    "astropy.coordinates.SkyCoord",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.SkyCircularAnnulus.to_pixel": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "photutils.aperture.circle.CircularAnnulus"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.SkyCircularAperture": {
  "data": {
   "lineno": 279
  },
  "type": "class"
 },
 "photutils.aperture.circle.SkyCircularAperture.__init__": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "TypeError",
    "assert_angle_or_pixel",
    "astropy.coordinates.SkyCoord",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.SkyCircularAperture.to_pixel": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "photutils.aperture.circle.CircularAperture"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.circle.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.circle.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.aperture.circle.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.aperture.circle.mpatches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "photutils.aperture.core": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.core.Aperture": {
  "data": {
   "lineno": 27
  },
  "type": "class"
 },
 "photutils.aperture.core.Aperture.__len__": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.Aperture.__repr__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.Aperture.__str__": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.Aperture._positions_str": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.array2string",
    "repr"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.aperture.core.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "photutils.aperture.core.PixelAperture": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "photutils.aperture.core.Aperture"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.core.PixelAperture._centered_edges": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._make_annulus_path": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "matplotlib.path.Path",
    "numpy.concatenate",
    "numpy.hstack",
    "numpy.vstack",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._prepare_photometry_output": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "astropy.units.Quantity",
    "astropy.units.Unit",
    "astropy.units.UnrecognizedUnit",
    "astropy.utils.exceptions.AstropyUserWarning",
    "isinstance",
    "len",
    "numpy.array",
    "photutils.aperture.core.warnings",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._prepare_plot": {
  "data": {
   "lineno": 439,
   "symbols_in_volume": [
    "matplotlib.pyplot.gca",
    "numpy.atleast_1d",
    "photutils.aperture.core.copy"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._sanitize_positions": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "astropy.units.UnitsError",
    "astropy.units.pixel",
    "isinstance",
    "list",
    "numpy.atleast_2d",
    "numpy.ndarray",
    "numpy.transpose",
    "staticmethod",
    "tuple",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._to_sky_params": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "astropy.coordinates.SkyCoord",
    "astropy.units.arcsec",
    "astropy.units.pix.to",
    "astropy.units.rad",
    "astropy.wcs.utils.pixel_to_skycoord",
    "astropy.wcs.utils.wcs_to_celestial_frame",
    "getattr",
    "numpy.transpose",
    "pixel_scale_angle_at_skycoord",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture._translate_mask_mode": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.exceptions.AstropyUserWarning",
    "int",
    "isinstance",
    "photutils.aperture.core.warnings",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.area": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.bounding_boxes": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "NotImplementedError",
    "photutils.aperture.core.abc"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.do_photometry": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "numpy.asanyarray",
    "numpy.nan",
    "numpy.sqrt",
    "numpy.sum",
    "photutils.aperture.core.copy"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.mask_area": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.plot": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "NotImplementedError",
    "photutils.aperture.core.abc"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.to_mask": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "NotImplementedError",
    "photutils.aperture.core.abc"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.PixelAperture.to_sky": {
  "data": {
   "lineno": 570,
   "symbols_in_volume": [
    "NotImplementedError",
    "photutils.aperture.core.abc"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.QTable": {
  "data": {
   "shadows": "astropy.table.QTable"
  },
  "type": "import"
 },
 "photutils.aperture.core.SkyAperture": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "photutils.aperture.core.Aperture"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.core.SkyAperture._to_pixel_params": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "astropy.coordinates.SkyCoord",
    "astropy.units.pixel",
    "astropy.units.radian",
    "astropy.wcs.utils.skycoord_to_pixel",
    "astropy.wcs.utils.wcs_to_celestial_frame",
    "getattr",
    "numpy.array",
    "pixel_scale_angle_at_skycoord",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.SkyAperture.to_pixel": {
  "data": {
   "lineno": 649,
   "symbols_in_volume": [
    "NotImplementedError",
    "photutils.aperture.core.abc"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.core.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "photutils.aperture.core.__all__": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.aperture.core._prepare_photometry_input": {
  "data": {
   "lineno": 674,
   "symbols_in_volume": [
    "Exception",
    "ValueError",
    "astropy.io.fits.HDUList",
    "astropy.io.fits.ImageHDU",
    "astropy.io.fits.PrimaryHDU",
    "astropy.units.Quantity",
    "astropy.units.Unit",
    "astropy.units.UnrecognizedUnit",
    "astropy.utils.exceptions.AstropyUserWarning",
    "astropy.wcs.WCS",
    "isinstance",
    "len",
    "numpy.asanyarray",
    "numpy.broadcast_arrays",
    "numpy.isscalar",
    "photutils.aperture.core.warnings",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "photutils.aperture.core.aperture_photometry": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.support_nddata",
    "astropy.table.QTable",
    "astropy.units.pixel",
    "collections.OrderedDict",
    "enumerate",
    "get_version_info",
    "int",
    "isinstance",
    "len",
    "numpy.arange",
    "numpy.array_equal",
    "numpy.atleast_1d",
    "numpy.transpose",
    "photutils.aperture.core.Aperture",
    "photutils.aperture.core.SkyAperture",
    "photutils.aperture.core._prepare_photometry_input"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.core.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "photutils.aperture.core.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.aperture.core.mpath": {
  "data": {
   "shadows": "matplotlib.path"
  },
  "type": "import"
 },
 "photutils.aperture.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.core.pixel_to_skycoord": {
  "data": {
   "shadows": "astropy.wcs.utils.pixel_to_skycoord"
  },
  "type": "import"
 },
 "photutils.aperture.core.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "photutils.aperture.core.skycoord_to_pixel": {
  "data": {
   "shadows": "astropy.wcs.utils.skycoord_to_pixel"
  },
  "type": "import"
 },
 "photutils.aperture.core.support_nddata": {
  "data": {
   "shadows": "astropy.nddata.support_nddata"
  },
  "type": "import"
 },
 "photutils.aperture.core.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.aperture.core.wcs_to_celestial_frame": {
  "data": {
   "shadows": "astropy.wcs.utils.wcs_to_celestial_frame"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus": {
  "data": {
   "lineno": 212,
   "symbols_in_volume": [
    "photutils.aperture.ellipse.EllipticalMaskMixin"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus.__init__": {
  "data": {
   "lineno": 260,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus.area": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "photutils.aperture.ellipse.math"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus.bounding_boxes": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin",
    "numpy.sqrt",
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus.plot": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "matplotlib.patches.Ellipse",
    "matplotlib.patches.PathPatch",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAnnulus.to_sky": {
  "data": {
   "lineno": 318,
   "symbols_in_volume": [
    "photutils.aperture.ellipse.SkyEllipticalAnnulus"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAperture": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "photutils.aperture.ellipse.EllipticalMaskMixin"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.EllipticalAperture.__init__": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAperture.area": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "photutils.aperture.ellipse.math"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAperture.bounding_boxes": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin",
    "numpy.sqrt",
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAperture.plot": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "matplotlib.patches.Ellipse",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalAperture.to_sky": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "photutils.aperture.ellipse.SkyEllipticalAperture"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.EllipticalMaskMixin": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.EllipticalMaskMixin.to_mask": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ApertureMask",
    "ValueError",
    "elliptical_overlap_grid",
    "hasattr",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.SkyEllipticalAnnulus": {
  "data": {
   "lineno": 410
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.SkyEllipticalAnnulus.__init__": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_angle",
    "assert_angle_or_pixel",
    "astropy.coordinates.SkyCoord",
    "astropy.units.deg",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.SkyEllipticalAnnulus.to_pixel": {
  "data": {
   "lineno": 465,
   "symbols_in_volume": [
    "photutils.aperture.ellipse.EllipticalAnnulus"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.SkyEllipticalAperture": {
  "data": {
   "lineno": 343
  },
  "type": "class"
 },
 "photutils.aperture.ellipse.SkyEllipticalAperture.__init__": {
  "data": {
   "lineno": 366,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_angle",
    "assert_angle_or_pixel",
    "astropy.coordinates.SkyCoord",
    "astropy.units.deg",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.SkyEllipticalAperture.to_pixel": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "photutils.aperture.ellipse.EllipticalAperture"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.ellipse.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.aperture.ellipse.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.mpatches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.ellipse.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.mask": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.mask.ApertureMask": {
  "data": {
   "lineno": 10
  },
  "type": "class"
 },
 "photutils.aperture.mask.ApertureMask.__array__": {
  "data": {
   "lineno": 34
  },
  "type": "function"
 },
 "photutils.aperture.mask.ApertureMask.__init__": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.mask.ApertureMask._overlap_slices": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "max",
    "min",
    "slice"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.mask.ApertureMask._to_image_partial_overlap": {
  "data": {
   "lineno": 95
  },
  "type": "function"
 },
 "photutils.aperture.mask.ApertureMask.cutout": {
  "data": {
   "lineno": 143,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.Quantity",
    "isinstance",
    "numpy.asanyarray",
    "numpy.copy",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.mask.ApertureMask.multiply": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "photutils.aperture.mask.ApertureMask.shape": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.mask.ApertureMask.to_image": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.mask.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "photutils.aperture.mask.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.mask.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.rectangle.RectangularAnnulus": {
  "data": {
   "lineno": 225,
   "symbols_in_volume": [
    "photutils.aperture.rectangle.RectangularMaskMixin"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.RectangularAnnulus.__init__": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAnnulus.area": {
  "data": {
   "lineno": 318
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAnnulus.bounding_boxes": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "abs",
    "max",
    "photutils.aperture.rectangle.math",
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAnnulus.plot": {
  "data": {
   "lineno": 321,
   "symbols_in_volume": [
    "enumerate",
    "matplotlib.patches.PathPatch",
    "matplotlib.patches.Rectangle",
    "numpy.array",
    "numpy.pi",
    "photutils.aperture.rectangle.math"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAnnulus.to_sky": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "photutils.aperture.rectangle.SkyRectangularAnnulus"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAperture": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "photutils.aperture.rectangle.RectangularMaskMixin"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.RectangularAperture.__init__": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAperture.area": {
  "data": {
   "lineno": 177
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAperture.bounding_boxes": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "abs",
    "max",
    "photutils.aperture.rectangle.math",
    "property",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAperture.plot": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "matplotlib.patches.Rectangle",
    "numpy.array",
    "numpy.pi",
    "photutils.aperture.rectangle.math"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularAperture.to_sky": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "photutils.aperture.rectangle.SkyRectangularAperture"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.RectangularMaskMixin": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.RectangularMaskMixin.to_mask": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ApertureMask",
    "ValueError",
    "hasattr",
    "rectangular_overlap_grid",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.SkyRectangularAnnulus": {
  "data": {
   "lineno": 450
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.SkyRectangularAnnulus.__init__": {
  "data": {
   "lineno": 486,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_angle",
    "assert_angle_or_pixel",
    "astropy.coordinates.SkyCoord",
    "astropy.units.deg",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.SkyRectangularAnnulus.to_pixel": {
  "data": {
   "lineno": 511,
   "symbols_in_volume": [
    "photutils.aperture.rectangle.RectangularAnnulus"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.SkyRectangularAperture": {
  "data": {
   "lineno": 379
  },
  "type": "class"
 },
 "photutils.aperture.rectangle.SkyRectangularAperture.__init__": {
  "data": {
   "lineno": 406,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "assert_angle",
    "assert_angle_or_pixel",
    "astropy.coordinates.SkyCoord",
    "astropy.units.deg",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.SkyRectangularAperture.to_pixel": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "photutils.aperture.rectangle.RectangularAperture"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.rectangle.__all__": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.aperture.rectangle.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.mpatches": {
  "data": {
   "shadows": "matplotlib.patches"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.rectangle.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.aperture.tests.test_aperture_photometry": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.minversion",
    "list",
    "numpy.pi",
    "photutils.aperture.tests.test_aperture_photometry.APERTURE_CL",
    "zip"
   ]
  },
  "type": "module"
 },
 "photutils.aperture.tests.test_aperture_photometry.APERTURE_CL": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry": {
  "data": {
   "lineno": 104
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry.test_array_error": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "aperture_photometry",
    "hasattr",
    "isinstance",
    "numpy.all",
    "numpy.float",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry.test_scalar_error": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "aperture_photometry",
    "hasattr",
    "isinstance",
    "numpy.all",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.BaseTestDifferentData": {
  "data": {
   "lineno": 296
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.BaseTestDifferentData.test_basic_circular_aperture_photometry": {
  "data": {
   "lineno": 298,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "numpy.all",
    "numpy.testing.assert_allclose",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_aperture_photometry.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.NUMPY_LT_1_14": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_aperture_photometry.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.TEST_APERTURES": {
  "data": {
   "lineno": 46
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_aperture_photometry.TEST_ELLIPSE_EXACT_APERTURES": {
  "data": {
   "lineno": 560
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_aperture_photometry.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircular": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircular.setup_class": {
  "data": {
   "lineno": 181,
   "symbols_in_volume": [
    "CircularAperture",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircularAnnulus": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircularAnnulus.setup_class": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "CircularAnnulus",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircularAnnulusArray": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircularAnnulusArray.setup_class": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "CircularAnnulus",
    "numpy.array",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircularArray": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestCircularArray.setup_class": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "CircularAperture",
    "numpy.array",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestElliptical": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestElliptical.setup_class": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "EllipticalAperture",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestEllipticalAnnulus": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestEllipticalAnnulus.setup_class": {
  "data": {
   "lineno": 242,
   "symbols_in_volume": [
    "EllipticalAnnulus",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputHDUDifferentBUNIT": {
  "data": {
   "lineno": 338,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestDifferentData"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputHDUDifferentBUNIT.setup_class": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "astropy.io.fits.ImageHDU",
    "astropy.units.adu",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputHDUList": {
  "data": {
   "lineno": 324,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestDifferentData"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputHDUList.setup_class": {
  "data": {
   "lineno": 326,
   "symbols_in_volume": [
    "astropy.io.fits.HDUList",
    "astropy.io.fits.ImageHDU",
    "numpy.empty",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputNDData": {
  "data": {
   "lineno": 350,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestDifferentData"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputNDData.setup_class": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "astropy.nddata.NDData",
    "astropy.units.adu",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputPrimaryHDU": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestDifferentData"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestInputPrimaryHDU.setup_class": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "astropy.io.fits.ImageHDU",
    "astropy.units.adu",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestMaskedSkipCircular": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestMaskedSkipCircular.setup_class": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "CircularAperture",
    "bool",
    "numpy.float",
    "numpy.ones",
    "numpy.pi",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestRectangularAnnulus": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestRectangularAnnulus.setup_class": {
  "data": {
   "lineno": 270,
   "symbols_in_volume": [
    "RectangularAnnulus",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestRectangularAperture": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "photutils.aperture.tests.test_aperture_photometry.BaseTestAperturePhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.aperture.tests.test_aperture_photometry.TestRectangularAperture.setup_class": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "RectangularAperture",
    "numpy.float",
    "numpy.ones",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.assert_array_less": {
  "data": {
   "shadows": "numpy.testing.assert_array_less"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.minversion": {
  "data": {
   "shadows": "astropy.utils.minversion"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.pixel_to_skycoord": {
  "data": {
   "shadows": "astropy.wcs.utils.pixel_to_skycoord"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_aperture_partial_overlap": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "astropy.units.MJy",
    "astropy.units.sr",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_less"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_aperture_photometry_inputs_with_mask": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "bool",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_aperture_photometry_with_error_units": {
  "data": {
   "lineno": 520,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "astropy.units.Quantity",
    "astropy.units.adu",
    "numpy.float",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_aperture_pixel_positions": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "CircularAperture",
    "astropy.units.Quantity",
    "astropy.units.pixel",
    "numpy.atleast_2d",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_aperture_plots": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "aperture_class",
    "photutils.aperture.tests.test_aperture_photometry.TEST_APERTURES",
    "photutils.aperture.tests.test_aperture_photometry.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_basic_circular_aperture_photometry_unit": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "astropy.units.Quantity",
    "astropy.units.adu",
    "numpy.float",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_ellipse_exact_grid": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "EllipticalAperture",
    "aperture_photometry",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "photutils.aperture.tests.test_aperture_photometry.TEST_ELLIPSE_EXACT_APERTURES",
    "photutils.aperture.tests.test_aperture_photometry.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_elliptical_bbox": {
  "data": {
   "lineno": 810,
   "symbols_in_volume": [
    "EllipticalAperture",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_inside_array_simple": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "aperture_class",
    "aperture_photometry",
    "isinstance",
    "numpy.float",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.aperture.tests.test_aperture_photometry.TEST_APERTURES",
    "photutils.aperture.tests.test_aperture_photometry.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_nan_inf_mask": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "bool",
    "numpy.inf",
    "numpy.nan",
    "numpy.ones",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "photutils.aperture.tests.test_aperture_photometry.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_outside_array": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "aperture_class",
    "aperture_photometry",
    "numpy.float",
    "numpy.isnan",
    "numpy.ones",
    "photutils.aperture.tests.test_aperture_photometry.TEST_APERTURES",
    "photutils.aperture.tests.test_aperture_photometry.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_pixel_aperture_repr": {
  "data": {
   "lineno": 615,
   "symbols_in_volume": [
    "CircularAnnulus",
    "CircularAperture",
    "EllipticalAnnulus",
    "EllipticalAperture",
    "RectangularAnnulus",
    "RectangularAperture",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_position_units": {
  "data": {
   "lineno": 887,
   "symbols_in_volume": [
    "CircularAperture",
    "astropy.units.pix",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_radius_units": {
  "data": {
   "lineno": 895,
   "symbols_in_volume": [
    "SkyCircularAperture",
    "astropy.coordinates.SkyCoord",
    "astropy.units.pix",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_rectangular_bbox": {
  "data": {
   "lineno": 783,
   "symbols_in_volume": [
    "RectangularAperture",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_scalar_aperture": {
  "data": {
   "lineno": 905,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "numpy.float",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_sky_aperture_repr": {
  "data": {
   "lineno": 662,
   "symbols_in_volume": [
    "SkyCircularAnnulus",
    "SkyCircularAperture",
    "SkyEllipticalAnnulus",
    "SkyEllipticalAperture",
    "SkyRectangularAnnulus",
    "SkyRectangularAperture",
    "astropy.coordinates.SkyCoord",
    "astropy.units.deg",
    "astropy.units.pix",
    "photutils.aperture.tests.test_aperture_photometry.NUMPY_LT_1_14",
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_to_sky_pixel": {
  "data": {
   "lineno": 836,
   "symbols_in_volume": [
    "CircularAnnulus",
    "CircularAperture",
    "EllipticalAnnulus",
    "EllipticalAperture",
    "RectangularAnnulus",
    "RectangularAperture",
    "make_4gaussians_image",
    "make_wcs",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_wcs_based_photometry": {
  "data": {
   "lineno": 399,
   "symbols_in_volume": [
    "SkyCircularAnnulus",
    "SkyCircularAperture",
    "SkyEllipticalAnnulus",
    "SkyEllipticalAperture",
    "SkyRectangularAnnulus",
    "SkyRectangularAperture",
    "aperture_photometry",
    "astropy.units.Quantity",
    "astropy.units.arcsec",
    "astropy.units.pixel",
    "astropy.wcs.utils.pixel_to_skycoord",
    "make_4gaussians_image",
    "make_imagehdu",
    "make_wcs",
    "numpy.all",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.test_wcs_based_photometry_to_catalogue": {
  "data": {
   "lineno": 361,
   "symbols_in_volume": [
    "SkyCircularAperture",
    "aperture_photometry",
    "astropy.coordinates.SkyCoord",
    "astropy.io.fits.open",
    "astropy.table.Table.read",
    "astropy.units.arcsec",
    "astropy.units.mJy",
    "astropy.units.pixel",
    "get_path",
    "numpy.fabs",
    "numpy.mean",
    "numpy.testing.assert_allclose",
    "photutils.aperture.tests.test_aperture_photometry.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_aperture_photometry.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_bounding_box": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.aperture.tests.test_bounding_box.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_bounding_box.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_bounding_box.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_bounding_box.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_as_patch": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "BoundingBox",
    "numpy.testing.assert_allclose",
    "photutils.aperture.tests.test_bounding_box.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_eq": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "BoundingBox"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_extent": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "BoundingBox",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_from_float": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "BoundingBox",
    "BoundingBox._from_float"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_init": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "BoundingBox"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_init_minmax": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "BoundingBox",
    "ValueError",
    "photutils.aperture.tests.test_bounding_box.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_inputs": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "BoundingBox",
    "TypeError",
    "photutils.aperture.tests.test_bounding_box.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_repr": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "BoundingBox",
    "eval",
    "repr"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_shape": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "BoundingBox"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_bounding_box.test_bounding_box_slices": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "BoundingBox",
    "slice"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.aperture.tests.test_mask.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_mask.POSITIONS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.aperture.tests.test_mask.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_mask.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_mask.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_mask.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.aperture.tests.test_mask.test_mask_array": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "ApertureMask",
    "BoundingBox",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask.test_mask_cutout_copy": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "CircularAperture",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask.test_mask_cutout_no_overlap": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "CircularAperture",
    "numpy.ones",
    "photutils.aperture.tests.test_mask.POSITIONS",
    "photutils.aperture.tests.test_mask.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask.test_mask_cutout_partial_overlap": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "CircularAperture",
    "numpy.ones",
    "photutils.aperture.tests.test_mask.POSITIONS",
    "photutils.aperture.tests.test_mask.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask.test_mask_cutout_shape": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "ApertureMask",
    "BoundingBox",
    "ValueError",
    "numpy.arange",
    "numpy.ones",
    "photutils.aperture.tests.test_mask.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.aperture.tests.test_mask.test_mask_input_shapes": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ApertureMask",
    "BoundingBox",
    "ValueError",
    "numpy.ones",
    "photutils.aperture.tests.test_mask.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.background": {
  "data": {},
  "type": "module"
 },
 "photutils.background.background_2d": {
  "data": {
   "symbols_in_volume": [
    "astropy.stats.SigmaClip",
    "astropy.version.version"
   ]
  },
  "type": "module"
 },
 "photutils.background.background_2d.Background2D": {
  "data": {
   "lineno": 171
  },
  "type": "class"
 },
 "photutils.background.background_2d.Background2D.__init__": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "SExtractorBackground",
    "StdBackgroundRMS",
    "ValueError",
    "len",
    "min",
    "numpy.asanyarray",
    "numpy.atleast_1d",
    "numpy.repeat",
    "photutils.background.background_2d.BkgZoomInterpolator",
    "photutils.background.background_2d.SIGMA_CLIP"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._calc_bkg_bkgrms": {
  "data": {
   "lineno": 650,
   "symbols_in_volume": [
    "len",
    "numpy.array_equal",
    "numpy.unravel_index"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._calc_coordinates": {
  "data": {
   "lineno": 705,
   "symbols_in_volume": [
    "itertools.product",
    "list",
    "numpy.array",
    "numpy.column_stack",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._crop_data": {
  "data": {
   "lineno": 389,
   "symbols_in_volume": [
    "numpy.lib.index_tricks.index_exp",
    "numpy.ma.masked_array"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._filter_meshes": {
  "data": {
   "lineno": 619,
   "symbols_in_volume": [
    "AttributeError",
    "numpy.nan",
    "numpy.nanmedian",
    "numpy.nonzero",
    "scipy.ndimage.generic_filter",
    "scipy.stats.nanmedian"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._interpolate_meshes": {
  "data": {
   "lineno": 537,
   "symbols_in_volume": [
    "ShepardIDWInterpolator",
    "f",
    "itertools.product",
    "list",
    "numpy.array",
    "numpy.column_stack",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._make_2d_array": {
  "data": {
   "lineno": 501,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.bool",
    "numpy.ma.is_masked",
    "numpy.ma.masked_array",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._pad_data": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "numpy.logical_or",
    "numpy.ma.masked_array",
    "numpy.pad",
    "numpy.zeros_like",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._prepare_data": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ma.masked_array",
    "numpy.ma.swapaxes"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._select_meshes": {
  "data": {
   "lineno": 412,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.ma.count_masked",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D._selective_filter": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "max",
    "min",
    "numpy.copy",
    "numpy.median",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background": {
  "data": {
   "lineno": 786,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_median": {
  "data": {
   "lineno": 764,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_mesh_ma": {
  "data": {
   "lineno": 738,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_rms": {
  "data": {
   "lineno": 792,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_rms_median": {
  "data": {
   "lineno": 775,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.median"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.background_rms_mesh_ma": {
  "data": {
   "lineno": 751,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.mesh_nmasked": {
  "data": {
   "lineno": 727,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.ma.count_masked"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.Background2D.plot_meshes": {
  "data": {
   "lineno": 798,
   "symbols_in_volume": [
    "RectangularAperture",
    "matplotlib.pyplot.gca",
    "numpy.column_stack"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.BkgIDWInterpolator": {
  "data": {
   "lineno": 106
  },
  "type": "class"
 },
 "photutils.background.background_2d.BkgIDWInterpolator.__call__": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ShepardIDWInterpolator",
    "f",
    "numpy.asanyarray",
    "numpy.min",
    "numpy.ptp",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.BkgIDWInterpolator.__init__": {
  "data": {
   "lineno": 134
  },
  "type": "function"
 },
 "photutils.background.background_2d.BkgZoomInterpolator": {
  "data": {
   "lineno": 30
  },
  "type": "class"
 },
 "photutils.background.background_2d.BkgZoomInterpolator.__call__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "float",
    "int",
    "numpy.asanyarray",
    "numpy.min",
    "numpy.ptp",
    "numpy.zeros_like",
    "scipy.ndimage.zoom"
   ]
  },
  "type": "function"
 },
 "photutils.background.background_2d.BkgZoomInterpolator.__init__": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "photutils.background.background_2d.SIGMA_CLIP": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.background.background_2d.SigmaClip": {
  "data": {
   "shadows": "astropy.stats.SigmaClip"
  },
  "type": "import"
 },
 "photutils.background.background_2d.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.background.background_2d.__doctest_requires__": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.background.background_2d.astropy_version": {
  "data": {
   "shadows": "astropy.version.version"
  },
  "type": "import"
 },
 "photutils.background.background_2d.generic_filter": {
  "data": {
   "shadows": "scipy.ndimage.generic_filter"
  },
  "type": "import"
 },
 "photutils.background.background_2d.index_exp": {
  "data": {
   "shadows": "numpy.lib.index_tricks.index_exp"
  },
  "type": "import"
 },
 "photutils.background.background_2d.lazyproperty": {
  "data": {
   "shadows": "astropy.utils.lazyproperty"
  },
  "type": "import"
 },
 "photutils.background.background_2d.nanmedian": {
  "data": {
   "shadows": "scipy.stats.nanmedian"
  },
  "type": "import"
 },
 "photutils.background.background_2d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.background.background_2d.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "photutils.background.background_2d.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "photutils.background.background_2d.zoom": {
  "data": {
   "shadows": "scipy.ndimage.zoom"
  },
  "type": "import"
 },
 "photutils.background.core": {
  "data": {
   "symbols_in_volume": [
    "astropy.stats.SigmaClip",
    "astropy.version.version"
   ]
  },
  "type": "module"
 },
 "photutils.background.core.BackgroundBase": {
  "data": {
   "lineno": 65
  },
  "type": "class"
 },
 "photutils.background.core.BackgroundBase.__call__": {
  "data": {
   "lineno": 81
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundBase.__init__": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "photutils.background.core.SIGMA_CLIP"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundBase.calc_background": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "NotImplementedError",
    "photutils.background.core.abc"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundRMSBase": {
  "data": {
   "lineno": 108
  },
  "type": "class"
 },
 "photutils.background.core.BackgroundRMSBase.__call__": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundRMSBase.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "photutils.background.core.SIGMA_CLIP"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.BackgroundRMSBase.calc_background_rms": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "NotImplementedError",
    "photutils.background.core.abc"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.BiweightLocationBackground": {
  "data": {
   "lineno": 403,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.BiweightLocationBackground.__init__": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.BiweightLocationBackground.calc_background": {
  "data": {
   "lineno": 450,
   "symbols_in_volume": [
    "astropy.stats.biweight_location"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.BiweightScaleBackgroundRMS": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundRMSBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.BiweightScaleBackgroundRMS.__init__": {
  "data": {
   "lineno": 596,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.BiweightScaleBackgroundRMS.calc_background_rms": {
  "data": {
   "lineno": 601,
   "symbols_in_volume": [
    "astropy.stats.biweight_scale"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.MADStdBackgroundRMS": {
  "data": {
   "lineno": 500,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundRMSBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.MADStdBackgroundRMS.calc_background_rms": {
  "data": {
   "lineno": 547,
   "symbols_in_volume": [
    "astropy.stats.mad_std"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.MMMBackground": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "photutils.background.core.ModeEstimatorBackground"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.MMMBackground.__init__": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.MeanBackground": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.MeanBackground.calc_background": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "numpy.ma.mean"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.MedianBackground": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.MedianBackground.calc_background": {
  "data": {
   "lineno": 230,
   "symbols_in_volume": [
    "photutils.background.core._masked_median"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.ModeEstimatorBackground": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.ModeEstimatorBackground.__init__": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.ModeEstimatorBackground.calc_background": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "numpy.ma.mean",
    "photutils.background.core._masked_median"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.SExtractorBackground": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.SExtractorBackground.calc_background": {
  "data": {
   "lineno": 381,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.atleast_1d",
    "numpy.ma.isMaskedArray",
    "numpy.ma.mean",
    "numpy.ma.std",
    "numpy.ma.where",
    "photutils.background.core._masked_median"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.SIGMA_CLIP": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.background.core.SigmaClip": {
  "data": {
   "shadows": "astropy.stats.SigmaClip"
  },
  "type": "import"
 },
 "photutils.background.core.StdBackgroundRMS": {
  "data": {
   "lineno": 457,
   "symbols_in_volume": [
    "photutils.background.core.BackgroundRMSBase"
   ]
  },
  "type": "class"
 },
 "photutils.background.core.StdBackgroundRMS.calc_background_rms": {
  "data": {
   "lineno": 493,
   "symbols_in_volume": [
    "numpy.ma.std"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.__all__": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.background.core._masked_median": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "numpy.ma.isMaskedArray",
    "numpy.ma.median"
   ]
  },
  "type": "function"
 },
 "photutils.background.core.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "photutils.background.core.astropy_version": {
  "data": {
   "shadows": "astropy.version.version"
  },
  "type": "import"
 },
 "photutils.background.core.biweight_location": {
  "data": {
   "shadows": "astropy.stats.biweight_location"
  },
  "type": "import"
 },
 "photutils.background.core.biweight_scale": {
  "data": {
   "shadows": "astropy.stats.biweight_scale"
  },
  "type": "import"
 },
 "photutils.background.core.mad_std": {
  "data": {
   "shadows": "astropy.stats.mad_std"
  },
  "type": "import"
 },
 "photutils.background.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.background.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.background.tests.test_background_2d": {
  "data": {
   "symbols_in_volume": [
    "BkgIDWInterpolator",
    "BkgZoomInterpolator",
    "ImportError",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "module"
 },
 "photutils.background.tests.test_background_2d.BKG_MESH": {
  "data": {
   "lineno": 28
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.BKG_RMS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.BKG_RMS_MESH": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.DATA": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.FILTER_SIZES": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.HAS_SCIPY": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.INTERPOLATORS": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.PADBKG_MESH": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.PADBKG_RMS_MESH": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "photutils.background.tests.test_background_2d.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_background": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "Background2D",
    "list",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.BKG_MESH",
    "photutils.background.tests.test_background_2d.BKG_RMS",
    "photutils.background.tests.test_background_2d.BKG_RMS_MESH",
    "photutils.background.tests.test_background_2d.DATA",
    "photutils.background.tests.test_background_2d.FILTER_SIZES",
    "photutils.background.tests.test_background_2d.INTERPOLATORS",
    "photutils.background.tests.test_background_2d.itertools",
    "photutils.background.tests.test_background_2d.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_background_mask": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Background2D",
    "MeanBackground",
    "numpy.bool",
    "numpy.copy",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "photutils.background.tests.test_background_2d.BKG_RMS",
    "photutils.background.tests.test_background_2d.DATA",
    "photutils.background.tests.test_background_2d.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_background_nonconstant": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "Background2D",
    "numpy.copy",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.BKG_MESH",
    "photutils.background.tests.test_background_2d.DATA",
    "photutils.background.tests.test_background_2d.INTERPOLATORS",
    "photutils.background.tests.test_background_2d.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_completely_masked": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "Background2D",
    "ValueError",
    "numpy.bool",
    "numpy.ones_like",
    "photutils.background.tests.test_background_2d.DATA",
    "photutils.background.tests.test_background_2d.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_exclude_percentile": {
  "data": {
   "lineno": 180,
   "symbols_in_volume": [
    "Background2D",
    "ValueError",
    "photutils.background.tests.test_background_2d.DATA",
    "photutils.background.tests.test_background_2d.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_filter_threshold": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "Background2D",
    "numpy.copy",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.BKG_MESH",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_filter_threshold_high": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "Background2D",
    "numpy.copy",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.BKG_MESH",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_filter_threshold_nofilter": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "Background2D",
    "numpy.copy",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.BKG_MESH",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_invalid_edge_method": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "Background2D",
    "ValueError",
    "photutils.background.tests.test_background_2d.DATA",
    "photutils.background.tests.test_background_2d.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_invalid_mesh_idx_len": {
  "data": {
   "lineno": 197,
   "symbols_in_volume": [
    "Background2D",
    "ValueError",
    "numpy.arange",
    "photutils.background.tests.test_background_2d.DATA",
    "photutils.background.tests.test_background_2d.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_mask": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "Background2D",
    "MeanBackground",
    "numpy.bool",
    "numpy.copy",
    "numpy.ma.count",
    "numpy.ma.is_masked",
    "numpy.testing.assert_equal",
    "numpy.zeros_like",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_mask_badshape": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "Background2D",
    "ValueError",
    "numpy.zeros",
    "photutils.background.tests.test_background_2d.DATA",
    "photutils.background.tests.test_background_2d.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_no_sigma_clipping": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "Background2D",
    "MeanBackground",
    "numpy.copy",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_plot_meshes": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "Background2D",
    "photutils.background.tests.test_background_2d.DATA",
    "photutils.background.tests.test_background_2d.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_resizing": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Background2D",
    "MeanBackground",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.DATA",
    "photutils.background.tests.test_background_2d.FILTER_SIZES",
    "photutils.background.tests.test_background_2d.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_scalar_sizes": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "Background2D",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.TestBackground2D.test_zero_padding": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "Background2D",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_background_2d.BKG_RMS",
    "photutils.background.tests.test_background_2d.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_background_2d.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.background.tests.test_background_2d.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core": {
  "data": {
   "symbols_in_volume": [
    "astropy.stats.SigmaClip",
    "make_noise_image",
    "photutils.background.tests.test_core.BKG",
    "photutils.background.tests.test_core.BKG_CLASS0",
    "photutils.background.tests.test_core.STD"
   ]
  },
  "type": "module"
 },
 "photutils.background.tests.test_core.BKG": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.BKG_CLASS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.BKG_CLASS0": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.DATA": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.RMS_CLASS": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.SIGMA_CLIP": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.STD": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.background.tests.test_core.SigmaClip": {
  "data": {
   "shadows": "astropy.stats.SigmaClip"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.background.tests.test_core.test_background": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "bkg",
    "bkg.calc_background",
    "bkg_class",
    "numpy.ma.isMaskedArray",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_core.BKG",
    "photutils.background.tests.test_core.BKG_CLASS",
    "photutils.background.tests.test_core.DATA",
    "photutils.background.tests.test_core.SIGMA_CLIP",
    "photutils.background.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_background_axis": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "bkg",
    "bkg.calc_background",
    "bkg_class",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_core.BKG_CLASS",
    "photutils.background.tests.test_core.DATA",
    "photutils.background.tests.test_core.SIGMA_CLIP",
    "photutils.background.tests.test_core.pytest",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_background_rms": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "bkgrms",
    "bkgrms.calc_background_rms",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_core.DATA",
    "photutils.background.tests.test_core.RMS_CLASS",
    "photutils.background.tests.test_core.SIGMA_CLIP",
    "photutils.background.tests.test_core.STD",
    "photutils.background.tests.test_core.pytest",
    "rms_class"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_constant_background": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "bkg",
    "bkg.calc_background",
    "bkg_class",
    "numpy.ma.isMaskedArray",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.background.tests.test_core.BKG_CLASS0",
    "photutils.background.tests.test_core.SIGMA_CLIP",
    "photutils.background.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_sextrator_background_skew": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "SExtractorBackground",
    "bkg",
    "bkg.calc_background",
    "numpy.arange",
    "numpy.median",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.background.tests.test_core.test_sextrator_background_zero_std": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "SExtractorBackground",
    "bkg",
    "bkg.calc_background",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.centroids": {
  "data": {},
  "type": "module"
 },
 "photutils.centroids.core": {
  "data": {
   "symbols_in_volume": [
    "astropy.modeling.models.CONSTRAINTS_DOC",
    "photutils.centroids.core.GaussianConst2D"
   ]
  },
  "type": "module"
 },
 "photutils.centroids.core.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.centroids.core.CONSTRAINTS_DOC": {
  "data": {
   "shadows": "astropy.modeling.models.CONSTRAINTS_DOC"
  },
  "type": "import"
 },
 "photutils.centroids.core.Const1D": {
  "data": {
   "shadows": "astropy.modeling.models.Const1D"
  },
  "type": "import"
 },
 "photutils.centroids.core.Const2D": {
  "data": {
   "shadows": "astropy.modeling.models.Const2D"
  },
  "type": "import"
 },
 "photutils.centroids.core.Fittable2DModel": {
  "data": {
   "shadows": "astropy.modeling.Fittable2DModel"
  },
  "type": "import"
 },
 "photutils.centroids.core.Gaussian1D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian1D"
  },
  "type": "import"
 },
 "photutils.centroids.core.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.centroids.core.GaussianConst2D": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "astropy.modeling.Fittable2DModel",
    "astropy.modeling.Parameter"
   ]
  },
  "type": "class"
 },
 "photutils.centroids.core.GaussianConst2D.evaluate": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "astropy.modeling.models.Const2D",
    "astropy.modeling.models.Gaussian2D",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.core.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.centroids.core.Parameter": {
  "data": {
   "shadows": "astropy.modeling.Parameter"
  },
  "type": "import"
 },
 "photutils.centroids.core._GaussianConst1D": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.modeling.models.Const1D",
    "astropy.modeling.models.Gaussian1D"
   ]
  },
  "type": "class"
 },
 "photutils.centroids.core.__all__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.centroids.core.centroid_1dg": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.fitting.LevMarLSQFitter",
    "astropy.utils.exceptions.AstropyUserWarning",
    "fitter",
    "numpy.all",
    "numpy.any",
    "numpy.arange",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.isfinite",
    "numpy.ma.asanyarray",
    "numpy.ma.masked_invalid",
    "numpy.ma.min",
    "numpy.ma.nomask",
    "numpy.ma.sum",
    "numpy.ones",
    "numpy.sqrt",
    "photutils.centroids.core._GaussianConst1D",
    "photutils.centroids.core.gaussian1d_moments",
    "photutils.centroids.core.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.core.centroid_2dg": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "numpy.array",
    "photutils.centroids.core.fit_2dgaussian"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.core.centroid_com": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.exceptions.AstropyUserWarning",
    "bool",
    "numpy.any",
    "numpy.array",
    "numpy.asarray",
    "numpy.float",
    "numpy.isfinite",
    "numpy.ma.nomask",
    "numpy.ogrid",
    "numpy.sum",
    "photutils.centroids.core.warnings",
    "range",
    "slice"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.core.centroid_sources": {
  "data": {
   "lineno": 362,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.utils.overlap_slices",
    "bool",
    "centroid_func",
    "len",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.atleast_1d",
    "numpy.logical_or",
    "numpy.ones",
    "numpy.repeat",
    "photutils.centroids.core.centroid_com",
    "photutils.centroids.core.inspect",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.core.fit_2dgaussian": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "ValueError",
    "astropy.modeling.fitting.LevMarLSQFitter",
    "astropy.utils.exceptions.AstropyUserWarning",
    "data_properties",
    "fitter",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.indices",
    "numpy.isfinite",
    "numpy.ma.asanyarray",
    "numpy.ma.count",
    "numpy.ma.masked_invalid",
    "numpy.ma.nomask",
    "numpy.min",
    "numpy.ones",
    "numpy.ptp",
    "photutils.centroids.core.GaussianConst2D",
    "photutils.centroids.core.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.core.gaussian1d_moments": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "abs",
    "astropy.utils.exceptions.AstropyUserWarning",
    "numpy.any",
    "numpy.arange",
    "numpy.asanyarray",
    "numpy.isfinite",
    "numpy.ma.array",
    "numpy.ma.masked_invalid",
    "numpy.ma.nomask",
    "numpy.ptp",
    "numpy.sqrt",
    "numpy.sum",
    "photutils.centroids.core.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.core.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "photutils.centroids.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.centroids.core.overlap_slices": {
  "data": {
   "shadows": "astropy.nddata.utils.overlap_slices"
  },
  "type": "import"
 },
 "photutils.centroids.core.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "photutils.centroids.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.centroids.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.centroids.tests.test_core": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.array",
    "numpy.pi",
    "numpy.zeros",
    "photutils.centroids.tests.test_core.DATA"
   ]
  },
  "type": "module"
 },
 "photutils.centroids.tests.test_core.DATA": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.Gaussian1D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian1D"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.HAS_SCIPY": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.THETAS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.XCS": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.XSTDDEVS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.YCS": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.YSTDDEVS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.centroids.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.centroids.tests.test_core.test_centroid_com_mask": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "centroid_com",
    "numpy.float",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroids": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D",
    "centroid_1dg",
    "centroid_2dg",
    "centroid_com",
    "list",
    "model",
    "numpy.mgrid",
    "numpy.testing.assert_allclose",
    "photutils.centroids.tests.test_core.THETAS",
    "photutils.centroids.tests.test_core.XCS",
    "photutils.centroids.tests.test_core.XSTDDEVS",
    "photutils.centroids.tests.test_core.YCS",
    "photutils.centroids.tests.test_core.YSTDDEVS",
    "photutils.centroids.tests.test_core.itertools",
    "photutils.centroids.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroids_nan_withmask": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D",
    "bool",
    "centroid_1dg",
    "centroid_2dg",
    "centroid_com",
    "model",
    "numpy.mgrid",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "photutils.centroids.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroids_witherror": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D",
    "centroid_1dg",
    "centroid_2dg",
    "list",
    "model",
    "numpy.mgrid",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "photutils.centroids.tests.test_core.THETAS",
    "photutils.centroids.tests.test_core.XCS",
    "photutils.centroids.tests.test_core.XSTDDEVS",
    "photutils.centroids.tests.test_core.YCS",
    "photutils.centroids.tests.test_core.YSTDDEVS",
    "photutils.centroids.tests.test_core.itertools",
    "photutils.centroids.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroids_withmask": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D",
    "bool",
    "centroid_1dg",
    "centroid_2dg",
    "centroid_com",
    "model",
    "numpy.mgrid",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "photutils.centroids.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_centroids_withmask_nonbool": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "bool",
    "centroid_com",
    "numpy.arange",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "photutils.centroids.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_fit2dgaussian_dof": {
  "data": {
   "lineno": 198,
   "symbols_in_volume": [
    "ValueError",
    "fit_2dgaussian",
    "numpy.ones",
    "photutils.centroids.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_gaussian1d_moments": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian1D",
    "bool",
    "g",
    "gaussian1d_moments",
    "numpy.arange",
    "numpy.nan",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_invalid_error_shape": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "centroid_1dg",
    "centroid_2dg",
    "numpy.zeros",
    "photutils.centroids.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.centroids.tests.test_core.test_invalid_mask_shape": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "ValueError",
    "bool",
    "centroid_1dg",
    "centroid_2dg",
    "centroid_com",
    "gaussian1d_moments",
    "numpy.zeros",
    "photutils.centroids.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.conftest": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "KeyError",
    "NameError",
    "astropy.tests.plugins.display.PYTEST_HEADER_MODULES",
    "astropy.tests.plugins.display.TESTED_VERSIONS",
    "astropy.version.version",
    "photutils.conftest.os",
    "photutils.conftest.packagename"
   ]
  },
  "type": "module"
 },
 "photutils.conftest.PYTEST_HEADER_MODULES": {
  "data": {
   "shadows": "astropy.tests.plugins.display.PYTEST_HEADER_MODULES"
  },
  "type": "import"
 },
 "photutils.conftest.TESTED_VERSIONS": {
  "data": {
   "shadows": "astropy.tests.plugins.display.TESTED_VERSIONS"
  },
  "type": "import"
 },
 "photutils.conftest.astropy_version": {
  "data": {
   "shadows": "astropy.version.version"
  },
  "type": "import"
 },
 "photutils.conftest.enable_deprecations_as_exceptions": {
  "data": {
   "shadows": "astropy.tests.helper.enable_deprecations_as_exceptions"
  },
  "type": "import"
 },
 "photutils.conftest.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "photutils.conftest.packagename": {
  "data": {
   "lineno": 57
  },
  "type": "constant"
 },
 "photutils.conftest.version": {
  "data": {
   "lineno": 54
  },
  "type": "constant"
 },
 "photutils.cython_version": {
  "data": {},
  "type": "module"
 },
 "photutils.cython_version.cython_version": {
  "data": {
   "lineno": 2
  },
  "type": "constant"
 },
 "photutils.datasets": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.load": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.load.HTTPError": {
  "data": {
   "shadows": "urllib.error.HTTPError"
  },
  "type": "import"
 },
 "photutils.datasets.load.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.datasets.load.URLError": {
  "data": {
   "shadows": "urllib.error.URLError"
  },
  "type": "import"
 },
 "photutils.datasets.load.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.datasets.load.download_file": {
  "data": {
   "shadows": "astropy.utils.data.download_file"
  },
  "type": "import"
 },
 "photutils.datasets.load.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.datasets.load.get_path": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.data.download_file",
    "astropy.utils.data.get_pkg_data_filename",
    "urllib.error.HTTPError",
    "urllib.error.URLError"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.load.get_pkg_data_filename": {
  "data": {
   "shadows": "astropy.utils.data.get_pkg_data_filename"
  },
  "type": "import"
 },
 "photutils.datasets.load.load_fermi_image": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "photutils.datasets.load.get_path"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.load.load_irac_psf": {
  "data": {
   "lineno": 155,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.open",
    "int",
    "photutils.datasets.load.get_path"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.load.load_simulated_hst_star_image": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "photutils.datasets.load.get_path"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.load.load_spitzer_catalog": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "astropy.table.Table.read",
    "photutils.datasets.load.get_path"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.load.load_spitzer_image": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "photutils.datasets.load.get_path"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.load.load_star_image": {
  "data": {
   "lineno": 252,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "photutils.datasets.load.get_path"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.make.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.datasets.make.OrderedDict": {
  "data": {
   "shadows": "collections.OrderedDict"
  },
  "type": "import"
 },
 "photutils.datasets.make.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.datasets.make.WCS": {
  "data": {
   "shadows": "astropy.wcs.WCS"
  },
  "type": "import"
 },
 "photutils.datasets.make.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.datasets.make.apply_poisson_noise": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "numpy.any",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.astropy_version": {
  "data": {
   "shadows": "astropy.version.version"
  },
  "type": "import"
 },
 "photutils.datasets.make.discretize_model": {
  "data": {
   "shadows": "astropy.convolution.discretize_model"
  },
  "type": "import"
 },
 "photutils.datasets.make.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.datasets.make.make_100gaussians_image": {
  "data": {
   "lineno": 610,
   "symbols_in_volume": [
    "collections.OrderedDict",
    "numpy.pi",
    "photutils.datasets.make.make_gaussian_sources_image",
    "photutils.datasets.make.make_noise_image",
    "photutils.datasets.make.make_random_gaussians_table"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.make_4gaussians_image": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "astropy.table.Table",
    "numpy.array",
    "numpy.pi",
    "photutils.datasets.make.make_gaussian_sources_image",
    "photutils.datasets.make.make_noise_image"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.make_gaussian_sources_image": {
  "data": {
   "lineno": 462,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D",
    "model",
    "model.x_stddev.value",
    "model.y_stddev.value",
    "numpy.pi",
    "photutils.datasets.make.make_model_sources_image"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.make_imagehdu": {
  "data": {
   "lineno": 731,
   "symbols_in_volume": [
    "ValueError",
    "astropy.io.fits.ImageHDU",
    "numpy.asanyarray"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.make_model_sources_image": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "astropy.convolution.discretize_model",
    "enumerate",
    "getattr",
    "model",
    "numpy.float64",
    "numpy.indices",
    "numpy.zeros",
    "setattr"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.make_noise_image": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "type"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.make_random_gaussians_table": {
  "data": {
   "lineno": 239,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D",
    "numpy.pi",
    "photutils.datasets.make.make_random_models_table"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.make_random_models_table": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "astropy.table.Table",
    "check_random_state"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.make_wcs": {
  "data": {
   "lineno": 671,
   "symbols_in_volume": [
    "astropy.version.version",
    "astropy.wcs.WCS",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.make.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.datasets.setup_package": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.setup_package.get_package_data": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "photutils.datasets.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.tests.test_load": {
  "data": {},
  "type": "module"
 },
 "photutils.datasets.tests.test_load.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_load.test_get_path": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "ValueError",
    "get_path",
    "photutils.datasets.tests.test_load.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_load.test_load_fermi_image": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_load.test_load_star_image": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "len",
    "photutils.datasets.tests.test_load.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make": {
  "data": {
   "symbols_in_volume": [
    "astropy.table.Table",
    "numpy.array",
    "numpy.pi",
    "photutils.datasets.tests.test_make.TABLE"
   ]
  },
  "type": "module"
 },
 "photutils.datasets.tests.test_make.Moffat2D": {
  "data": {
   "shadows": "astropy.modeling.models.Moffat2D"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.TABLE": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.datasets.tests.test_make.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.astropy_version": {
  "data": {
   "shadows": "astropy.version.version"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.datasets.tests.test_make.test_apply_poisson_noise": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "apply_poisson_noise",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_apply_poisson_noise_negative": {
  "data": {
   "lineno": 67,
   "symbols_in_volume": [
    "ValueError",
    "apply_poisson_noise",
    "numpy.zeros",
    "photutils.datasets.tests.test_make.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_100gaussians_image": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "make_100gaussians_image",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_4gaussians_image": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "make_4gaussians_image",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_gaussian_sources_image": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "make_gaussian_sources_image",
    "numpy.testing.assert_allclose",
    "photutils.datasets.tests.test_make.TABLE"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_gaussian_sources_image_amplitude": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "make_gaussian_sources_image",
    "photutils.datasets.tests.test_make.TABLE"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_gaussian_sources_image_oversample": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "make_gaussian_sources_image",
    "numpy.testing.assert_allclose",
    "photutils.datasets.tests.test_make.TABLE"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_noise_image": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "make_noise_image",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_noise_image_nomean": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "ValueError",
    "make_noise_image",
    "photutils.datasets.tests.test_make.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_noise_image_nostddev": {
  "data": {
   "lineno": 49,
   "symbols_in_volume": [
    "ValueError",
    "make_noise_image",
    "photutils.datasets.tests.test_make.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_noise_image_poisson": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "make_noise_image",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_random_gaussians_table": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "dict",
    "len",
    "make_random_gaussians_table",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_random_gaussians_table_flux": {
  "data": {
   "lineno": 110,
   "symbols_in_volume": [
    "dict",
    "len",
    "make_random_gaussians_table",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_random_models_table": {
  "data": {
   "lineno": 137,
   "symbols_in_volume": [
    "astropy.modeling.models.Moffat2D",
    "make_model_sources_image",
    "make_random_models_table"
   ]
  },
  "type": "function"
 },
 "photutils.datasets.tests.test_make.test_make_wcs": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "astropy.version.version",
    "make_wcs"
   ]
  },
  "type": "function"
 },
 "photutils.detection": {
  "data": {},
  "type": "module"
 },
 "photutils.detection.core": {
  "data": {},
  "type": "module"
 },
 "photutils.detection.core.AstropyDeprecationWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyDeprecationWarning"
  },
  "type": "import"
 },
 "photutils.detection.core.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.detection.core.SkyCoord": {
  "data": {
   "shadows": "astropy.coordinates.SkyCoord"
  },
  "type": "import"
 },
 "photutils.detection.core.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.detection.core.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.detection.core.astropy_version": {
  "data": {
   "shadows": "astropy.version.version"
  },
  "type": "import"
 },
 "photutils.detection.core.detect_threshold": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.sigma_clipped_stats",
    "astropy.version.version",
    "numpy.isscalar",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.detection.core.find_peaks": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "astropy.coordinates.SkyCoord",
    "astropy.table.Table",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "astropy.utils.exceptions.AstropyUserWarning",
    "astropy.wcs.utils.pixel_to_skycoord",
    "callable",
    "centroid_sources",
    "cutout_footprint",
    "fit_2dgaussian",
    "len",
    "numpy.all",
    "numpy.any",
    "numpy.argsort",
    "numpy.asanyarray",
    "numpy.copy",
    "numpy.float_",
    "numpy.inf",
    "numpy.isnan",
    "numpy.isscalar",
    "numpy.logical_and",
    "numpy.nan",
    "numpy.nanmin",
    "photutils.detection.core.warnings",
    "range",
    "scipy.ndimage.maximum_filter",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.detection.core.maximum_filter": {
  "data": {
   "shadows": "scipy.ndimage.maximum_filter"
  },
  "type": "import"
 },
 "photutils.detection.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.detection.core.pixel_to_skycoord": {
  "data": {
   "shadows": "astropy.wcs.utils.pixel_to_skycoord"
  },
  "type": "import"
 },
 "photutils.detection.core.sigma_clipped_stats": {
  "data": {
   "shadows": "astropy.stats.sigma_clipped_stats"
  },
  "type": "import"
 },
 "photutils.detection.core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.detection.findstars": {
  "data": {},
  "type": "module"
 },
 "photutils.detection.findstars.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.detection.findstars.DAOStarFinder": {
  "data": {
   "lineno": 737,
   "symbols_in_volume": [
    "photutils.detection.findstars.StarFinderBase"
   ]
  },
  "type": "class"
 },
 "photutils.detection.findstars.DAOStarFinder.__init__": {
  "data": {
   "lineno": 864,
   "symbols_in_volume": [
    "TypeError",
    "numpy.isscalar",
    "photutils.detection.findstars._StarFinderKernel"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars.DAOStarFinder.find_stars": {
  "data": {
   "lineno": 893,
   "symbols_in_volume": [
    "astropy.table.Table",
    "astropy.utils.exceptions.AstropyUserWarning",
    "getattr",
    "len",
    "numpy.arange",
    "numpy.argsort",
    "numpy.float_",
    "numpy.int_",
    "numpy.isnan",
    "photutils.detection.findstars._DAOFind_Properties",
    "photutils.detection.findstars._find_stars",
    "photutils.detection.findstars.warnings",
    "sorted"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars.IRAFStarFinder": {
  "data": {
   "lineno": 994,
   "symbols_in_volume": [
    "photutils.detection.findstars.StarFinderBase"
   ]
  },
  "type": "class"
 },
 "photutils.detection.findstars.IRAFStarFinder.__init__": {
  "data": {
   "lineno": 1097,
   "symbols_in_volume": [
    "TypeError",
    "int",
    "max",
    "numpy.isscalar",
    "photutils.detection.findstars._StarFinderKernel"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars.IRAFStarFinder.find_stars": {
  "data": {
   "lineno": 1125,
   "symbols_in_volume": [
    "astropy.table.Table",
    "astropy.utils.exceptions.AstropyUserWarning",
    "getattr",
    "len",
    "numpy.arange",
    "numpy.argsort",
    "numpy.count_nonzero",
    "numpy.float_",
    "numpy.int_",
    "photutils.detection.findstars._IRAFStarFind_Properties",
    "photutils.detection.findstars._find_stars",
    "photutils.detection.findstars.warnings",
    "sorted"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars.StarFinderBase": {
  "data": {
   "lineno": 703
  },
  "type": "class"
 },
 "photutils.detection.findstars.StarFinderBase.__call__": {
  "data": {
   "lineno": 708
  },
  "type": "function"
 },
 "photutils.detection.findstars.StarFinderBase.find_stars": {
  "data": {
   "lineno": 711,
   "symbols_in_volume": [
    "NotImplementedError",
    "photutils.detection.findstars.abc"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.detection.findstars._DAOFind_Properties": {
  "data": {
   "lineno": 213
  },
  "type": "class"
 },
 "photutils.detection.findstars._DAOFind_Properties.__init__": {
  "data": {
   "lineno": 235,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "photutils.detection.findstars._StarCutout"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.conv_peak": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.daofind_marginal_fit": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "abs",
    "numpy.abs",
    "numpy.arange",
    "numpy.meshgrid",
    "numpy.nan",
    "numpy.sum",
    "numpy.transpose"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.data_peak": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.dx": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.dx_hx": {
  "data": {
   "lineno": 393,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.dy": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.dy_hy": {
  "data": {
   "lineno": 397,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.flux": {
  "data": {
   "lineno": 455,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.hx": {
  "data": {
   "lineno": 417,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.hy": {
  "data": {
   "lineno": 421,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.mag": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.log10",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.npix": {
  "data": {
   "lineno": 447,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.peak": {
  "data": {
   "lineno": 443,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.roundness1": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.abs"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.roundness2": {
  "data": {
   "lineno": 425,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.isnan",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.sharpness": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.xcentroid": {
  "data": {
   "lineno": 409,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._DAOFind_Properties.ycentroid": {
  "data": {
   "lineno": 413,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties": {
  "data": {
   "lineno": 468
  },
  "type": "class"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.__init__": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.bool",
    "numpy.count_nonzero",
    "numpy.max",
    "numpy.sum",
    "photutils.detection.findstars._StarCutout"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.cutout_xcentroid": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.cutout_ycentroid": {
  "data": {
   "lineno": 526,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.data": {
  "data": {
   "lineno": 510,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.array",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.flux": {
  "data": {
   "lineno": 550,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.fwhm": {
  "data": {
   "lineno": 572,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.mag": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.log10"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.moments": {
  "data": {
   "lineno": 518,
   "symbols_in_volume": [
    "_moments",
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.moments_central": {
  "data": {
   "lineno": 558,
   "symbols_in_volume": [
    "_moments_central",
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.mu_diff": {
  "data": {
   "lineno": 568,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.mu_sum": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.npix": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.count_nonzero"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.pa": {
  "data": {
   "lineno": 585,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.arctan2",
    "numpy.rad2deg"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.peak": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.roundness": {
  "data": {
   "lineno": 580,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.sharpness": {
  "data": {
   "lineno": 576,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.sky": {
  "data": {
   "lineno": 542,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.xcentroid": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._IRAFStarFind_Properties.ycentroid": {
  "data": {
   "lineno": 534,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._StarCutout": {
  "data": {
   "lineno": 158
  },
  "type": "class"
 },
 "photutils.detection.findstars._StarCutout.__init__": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars._StarFinderKernel": {
  "data": {
   "lineno": 29
  },
  "type": "class"
 },
 "photutils.detection.findstars._StarFinderKernel.__init__": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "ValueError",
    "astropy.stats.gaussian_fwhm_to_sigma",
    "int",
    "max",
    "numpy.cos",
    "numpy.deg2rad",
    "numpy.exp",
    "numpy.int",
    "numpy.mgrid",
    "numpy.sin",
    "numpy.sqrt",
    "numpy.where",
    "photutils.detection.findstars.math"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.detection.findstars._find_stars": {
  "data": {
   "lineno": 595,
   "symbols_in_volume": [
    "filter_data",
    "find_peaks",
    "int",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.bool",
    "numpy.meshgrid",
    "numpy.pad",
    "numpy.transpose",
    "photutils.detection.findstars._StarCutout",
    "slice",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.detection.findstars.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "photutils.detection.findstars.gaussian_fwhm_to_sigma": {
  "data": {
   "shadows": "astropy.stats.gaussian_fwhm_to_sigma"
  },
  "type": "import"
 },
 "photutils.detection.findstars.lazyproperty": {
  "data": {
   "shadows": "astropy.utils.lazyproperty"
  },
  "type": "import"
 },
 "photutils.detection.findstars.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.detection.findstars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.detection.findstars.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.detection.setup_package": {
  "data": {},
  "type": "module"
 },
 "photutils.detection.setup_package.get_package_data": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "photutils.detection.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.detection.tests.test_core": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.array",
    "numpy.float"
   ]
  },
  "type": "module"
 },
 "photutils.detection.tests.test_core.DATA": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.HAS_SCIPY": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.PEAKDATA": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.PEAKREF1": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.REF1": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "photutils.detection.tests.test_core.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background_badshape": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "detect_threshold",
    "numpy.zeros",
    "photutils.detection.tests.test_core.DATA",
    "photutils.detection.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background_error": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background_error_images": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_background_image": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_error": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_error_badshape": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "detect_threshold",
    "numpy.zeros",
    "photutils.detection.tests.test_core.DATA",
    "photutils.detection.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_error_image": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_image_mask": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.bool",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.DATA",
    "photutils.detection.tests.test_core.REF1"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_image_mask_override": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.bool",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.DATA",
    "photutils.detection.tests.test_core.REF1"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_mask_value": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_snr": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestDetectThreshold.test_snr_zero": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "detect_threshold",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.detection.tests.test_core.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "photutils.detection.tests.test_core.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_border_width": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "find_peaks",
    "len",
    "photutils.detection.tests.test_core.PEAKDATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_box_size": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "find_peaks",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.PEAKDATA",
    "photutils.detection.tests.test_core.PEAKREF1"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_box_size_int": {
  "data": {
   "lineno": 182,
   "symbols_in_volume": [
    "find_peaks",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.PEAKDATA"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_centroid_func_and_subpixel": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "ValueError",
    "find_peaks",
    "photutils.detection.tests.test_core.PEAKDATA",
    "photutils.detection.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_centroid_func_callable": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "ValueError",
    "find_peaks",
    "photutils.detection.tests.test_core.PEAKDATA",
    "photutils.detection.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_constant_array": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "find_peaks",
    "len",
    "numpy.ones",
    "set"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_data_nans": {
  "data": {
   "lineno": 251,
   "symbols_in_volume": [
    "find_peaks",
    "numpy.copy",
    "numpy.nan",
    "photutils.detection.tests.test_core.PEAKDATA",
    "photutils.detection.tests.test_core.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_footprint": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "find_peaks",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.PEAKDATA",
    "photutils.detection.tests.test_core.PEAKREF1"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_mask": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "bool",
    "find_peaks",
    "len",
    "numpy.testing.assert_array_equal",
    "numpy.zeros_like",
    "photutils.detection.tests.test_core.PEAKDATA",
    "photutils.detection.tests.test_core.PEAKREF1"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_maskshape": {
  "data": {
   "lineno": 157,
   "symbols_in_volume": [
    "ValueError",
    "find_peaks",
    "numpy.ones",
    "photutils.detection.tests.test_core.PEAKDATA",
    "photutils.detection.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_no_peaks": {
  "data": {
   "lineno": 218,
   "symbols_in_volume": [
    "find_peaks",
    "make_4gaussians_image",
    "make_wcs",
    "set"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_npeaks": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "find_peaks",
    "numpy.testing.assert_array_equal",
    "photutils.detection.tests.test_core.PEAKDATA",
    "photutils.detection.tests.test_core.PEAKREF1"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_subpixel_regionsize": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "ValueError",
    "find_peaks",
    "photutils.detection.tests.test_core.PEAKDATA",
    "photutils.detection.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_thresholdshape": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "find_peaks",
    "numpy.ones",
    "photutils.detection.tests.test_core.PEAKDATA",
    "photutils.detection.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.TestFindPeaks.test_wcs": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "find_peaks",
    "make_4gaussians_image",
    "make_wcs"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_core.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.utils.exceptions.AstropyUserWarning",
    "make_100gaussians_image",
    "photutils.detection.tests.test_findstars.warnings"
   ]
  },
  "type": "module"
 },
 "photutils.detection.tests.test_findstars.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.DATA": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_findstars.FWHMS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_findstars.HAS_SCIPY": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_findstars.THRESHOLDS": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.detection.tests.test_findstars.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "photutils.detection.tests.test_findstars.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "DAOStarFinder",
    "astropy.table.Table.read",
    "list",
    "numpy.testing.assert_allclose",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "photutils.detection.tests.test_findstars.DATA",
    "photutils.detection.tests.test_findstars.FWHMS",
    "photutils.detection.tests.test_findstars.THRESHOLDS",
    "photutils.detection.tests.test_findstars.itertools",
    "photutils.detection.tests.test_findstars.pytest",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_brightest_filtering": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "DAOStarFinder",
    "len",
    "numpy.inf",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_exclude_border": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "DAOStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_flux_negative": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "DAOStarFinder",
    "numpy.isfinite",
    "numpy.ones",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_include_border": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "DAOStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_mask": {
  "data": {
   "lineno": 138,
   "symbols_in_volume": [
    "DAOStarFinder",
    "bool",
    "len",
    "numpy.zeros_like",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_negative_fit_peak": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "DAOStarFinder",
    "len",
    "numpy.inf",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_nosources": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "DAOStarFinder",
    "len",
    "numpy.ones",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_peakmax_filtering": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "DAOStarFinder",
    "all",
    "len",
    "numpy.inf",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_roundness": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "DAOStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_sharpness": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "DAOStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestDAOStarFinder.test_daofind_threshold_fwhm_inputs": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "DAOStarFinder",
    "TypeError",
    "numpy.ones",
    "photutils.detection.tests.test_findstars.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "photutils.detection.tests.test_findstars.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "astropy.table.Table.read",
    "list",
    "numpy.testing.assert_allclose",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "photutils.detection.tests.test_findstars.DATA",
    "photutils.detection.tests.test_findstars.FWHMS",
    "photutils.detection.tests.test_findstars.THRESHOLDS",
    "photutils.detection.tests.test_findstars.itertools",
    "photutils.detection.tests.test_findstars.pytest",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_brightest_filtering": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "len",
    "numpy.inf",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_largesky": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_mask": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "bool",
    "len",
    "numpy.zeros_like",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_nosources": {
  "data": {
   "lineno": 172,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "len",
    "numpy.ones",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_peakmax_filtering": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "all",
    "len",
    "numpy.inf",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_roundness": {
  "data": {
   "lineno": 184,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_sharpness": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_sky": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "len",
    "photutils.detection.tests.test_findstars.DATA",
    "starfinder"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.TestIRAFStarFinder.test_irafstarfind_threshold_fwhm_inputs": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "IRAFStarFinder",
    "TypeError",
    "numpy.ones",
    "photutils.detection.tests.test_findstars.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.detection.tests.test_findstars.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.detection.tests.test_findstars.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.extern": {
  "data": {},
  "type": "module"
 },
 "photutils.extern.sigma_clipping": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.extern.sigma_clipping.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.extern.sigma_clipping.HAS_BOTTLENECK": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.extern.sigma_clipping.SigmaClip": {
  "data": {
   "lineno": 78
  },
  "type": "class"
 },
 "photutils.extern.sigma_clipping.SigmaClip.__call__": {
  "data": {
   "lineno": 387,
   "symbols_in_volume": [
    "isinstance",
    "numpy.asanyarray",
    "numpy.ma.MaskedArray"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.SigmaClip.__init__": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "astropy.utils.decorators.deprecated_renamed_argument",
    "numpy.inf"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.SigmaClip.__repr__": {
  "data": {
   "lineno": 210
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.SigmaClip.__str__": {
  "data": {
   "lineno": 216,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.SigmaClip._compute_bounds": {
  "data": {
   "lineno": 255,
   "symbols_in_volume": [
    "RuntimeWarning",
    "photutils.extern.sigma_clipping.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.SigmaClip._parse_cenfunc": {
  "data": {
   "lineno": 224,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.nanmean",
    "numpy.nanmedian",
    "photutils.extern.sigma_clipping.HAS_BOTTLENECK",
    "photutils.extern.sigma_clipping._nanmean",
    "photutils.extern.sigma_clipping._nanmedian",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.SigmaClip._parse_stdfunc": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.nanstd",
    "photutils.extern.sigma_clipping.HAS_BOTTLENECK",
    "photutils.extern.sigma_clipping._nanstd",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.SigmaClip._sigmaclip_noaxis": {
  "data": {
   "lineno": 265,
   "symbols_in_volume": [
    "astropy.utils.exceptions.AstropyUserWarning",
    "isinstance",
    "numpy.any",
    "numpy.errstate",
    "numpy.isfinite",
    "numpy.logical_or",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked_invalid",
    "photutils.extern.sigma_clipping.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.SigmaClip._sigmaclip_withaxis": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "astropy.utils.exceptions.AstropyUserWarning",
    "astropy.utils.isiterable",
    "enumerate",
    "float",
    "isinstance",
    "numpy.any",
    "numpy.count_nonzero",
    "numpy.errstate",
    "numpy.isfinite",
    "numpy.isnan",
    "numpy.isscalar",
    "numpy.logical_or",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked_invalid",
    "numpy.ma.masked_where",
    "numpy.nan",
    "photutils.extern.sigma_clipping.warnings",
    "tuple"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.__all__": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.extern.sigma_clipping._move_tuple_axes_first": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "len",
    "numpy.moveaxis",
    "numpy.prod",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping._nanmean": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "isinstance",
    "photutils.extern.sigma_clipping._move_tuple_axes_first",
    "photutils.extern.sigma_clipping.bottleneck",
    "tuple"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping._nanmedian": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "isinstance",
    "photutils.extern.sigma_clipping._move_tuple_axes_first",
    "photutils.extern.sigma_clipping.bottleneck",
    "tuple"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping._nanstd": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "isinstance",
    "photutils.extern.sigma_clipping._move_tuple_axes_first",
    "photutils.extern.sigma_clipping.bottleneck",
    "tuple"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.bottleneck": {
  "data": {
   "shadows": "bottleneck"
  },
  "type": "import"
 },
 "photutils.extern.sigma_clipping.deprecated_renamed_argument": {
  "data": {
   "shadows": "astropy.utils.decorators.deprecated_renamed_argument"
  },
  "type": "import"
 },
 "photutils.extern.sigma_clipping.isiterable": {
  "data": {
   "shadows": "astropy.utils.isiterable"
  },
  "type": "import"
 },
 "photutils.extern.sigma_clipping.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.extern.sigma_clipping.sigma_clip": {
  "data": {
   "lineno": 466,
   "symbols_in_volume": [
    "astropy.utils.decorators.deprecated_renamed_argument",
    "photutils.extern.sigma_clipping.SigmaClip",
    "sigclip"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.sigma_clipped_stats": {
  "data": {
   "lineno": 643,
   "symbols_in_volume": [
    "astropy.utils.decorators.deprecated_renamed_argument",
    "numpy.ma.MaskedArray",
    "numpy.ma.masked_values",
    "numpy.nanmean",
    "numpy.nanmedian",
    "numpy.nanstd",
    "photutils.extern.sigma_clipping.HAS_BOTTLENECK",
    "photutils.extern.sigma_clipping.SigmaClip",
    "photutils.extern.sigma_clipping._nanmean",
    "photutils.extern.sigma_clipping._nanmedian",
    "photutils.extern.sigma_clipping._nanstd",
    "sigclip"
   ]
  },
  "type": "function"
 },
 "photutils.extern.sigma_clipping.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.geometry": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.geometry.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.tests.test_circular_overlap_grid": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.arg_list": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.circ_sizes": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.grid_sizes": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.subsamples": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.test_circular_overlap_grid": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "circular_overlap_grid",
    "list",
    "numpy.testing.assert_allclose",
    "photutils.geometry.tests.test_circular_overlap_grid.circ_sizes",
    "photutils.geometry.tests.test_circular_overlap_grid.grid_sizes",
    "photutils.geometry.tests.test_circular_overlap_grid.itertools",
    "photutils.geometry.tests.test_circular_overlap_grid.pytest",
    "photutils.geometry.tests.test_circular_overlap_grid.subsamples",
    "photutils.geometry.tests.test_circular_overlap_grid.use_exact"
   ]
  },
  "type": "function"
 },
 "photutils.geometry.tests.test_circular_overlap_grid.use_exact": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.angles": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.arg_list": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.grid_sizes": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.maj_sizes": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.min_sizes": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.subsamples": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.test_elliptical_overlap_grid": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "elliptical_overlap_grid",
    "list",
    "numpy.testing.assert_allclose",
    "photutils.geometry.tests.test_elliptical_overlap_grid.angles",
    "photutils.geometry.tests.test_elliptical_overlap_grid.grid_sizes",
    "photutils.geometry.tests.test_elliptical_overlap_grid.itertools",
    "photutils.geometry.tests.test_elliptical_overlap_grid.maj_sizes",
    "photutils.geometry.tests.test_elliptical_overlap_grid.min_sizes",
    "photutils.geometry.tests.test_elliptical_overlap_grid.pytest",
    "photutils.geometry.tests.test_elliptical_overlap_grid.subsamples",
    "photutils.geometry.tests.test_elliptical_overlap_grid.use_exact"
   ]
  },
  "type": "function"
 },
 "photutils.geometry.tests.test_elliptical_overlap_grid.use_exact": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid": {
  "data": {},
  "type": "module"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.angles": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.arg_list": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.grid_sizes": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.rect_sizes": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.subsamples": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.geometry.tests.test_rectangular_overlap_grid.test_rectangular_overlap_grid": {
  "data": {
   "lineno": 18,
   "symbols_in_volume": [
    "list",
    "numpy.testing.assert_allclose",
    "photutils.geometry.tests.test_rectangular_overlap_grid.angles",
    "photutils.geometry.tests.test_rectangular_overlap_grid.grid_sizes",
    "photutils.geometry.tests.test_rectangular_overlap_grid.itertools",
    "photutils.geometry.tests.test_rectangular_overlap_grid.pytest",
    "photutils.geometry.tests.test_rectangular_overlap_grid.rect_sizes",
    "photutils.geometry.tests.test_rectangular_overlap_grid.subsamples",
    "rectangular_overlap_grid"
   ]
  },
  "type": "function"
 },
 "photutils.isophote": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.ellipse": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.ellipse.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.isophote.ellipse.Ellipse": {
  "data": {
   "lineno": 20
  },
  "type": "class"
 },
 "photutils.isophote.ellipse.Ellipse.__init__": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "EllipseGeometry",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.ellipse.Ellipse._fix_last_isophote": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "Isophote",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.ellipse.Ellipse._iterative": {
  "data": {
   "lineno": 581,
   "symbols_in_volume": [
    "CentralEllipseFitter",
    "CentralEllipseSample",
    "EllipseFitter",
    "EllipseSample"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.ellipse.Ellipse._non_iterative": {
  "data": {
   "lineno": 600,
   "symbols_in_volume": [
    "EllipseSample",
    "Isophote"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.ellipse.Ellipse.fit_image": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "IsophoteList",
    "astropy.utils.exceptions.AstropyUserWarning",
    "len",
    "max",
    "photutils.isophote.ellipse.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.ellipse.Ellipse.fit_isophote": {
  "data": {
   "lineno": 451,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.ellipse.Ellipse.set_threshold": {
  "data": {
   "lineno": 187
  },
  "type": "function"
 },
 "photutils.isophote.ellipse.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.isophote.ellipse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.ellipse.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.isophote.fitter": {
  "data": {
   "symbols_in_volume": [
    "numpy.pi",
    "photutils.isophote.fitter._AngleCorrector",
    "photutils.isophote.fitter._EllipticityCorrector",
    "photutils.isophote.fitter._PositionCorrector_0",
    "photutils.isophote.fitter._PositionCorrector_1"
   ]
  },
  "type": "module"
 },
 "photutils.isophote.fitter.CentralEllipseFitter": {
  "data": {
   "lineno": 359,
   "symbols_in_volume": [
    "photutils.isophote.fitter.EllipseFitter"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.fitter.CentralEllipseFitter.fit": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "CentralPixel",
    "photutils.isophote.fitter.DEFAULT_CONVERGENCE",
    "photutils.isophote.fitter.DEFAULT_FFLAG",
    "photutils.isophote.fitter.DEFAULT_MAXGERR",
    "photutils.isophote.fitter.DEFAULT_MAXIT",
    "photutils.isophote.fitter.DEFAULT_MINIT"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.fitter.DEFAULT_CONVERGENCE": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.DEFAULT_FFLAG": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.DEFAULT_MAXGERR": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.DEFAULT_MAXIT": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.DEFAULT_MINIT": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.EllipseFitter": {
  "data": {
   "lineno": 28
  },
  "type": "class"
 },
 "photutils.isophote.fitter.EllipseFitter.__init__": {
  "data": {
   "lineno": 38
  },
  "type": "function"
 },
 "photutils.isophote.fitter.EllipseFitter._check_conditions": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "abs",
    "min",
    "photutils.isophote.fitter.MAX_EPS",
    "photutils.isophote.fitter.MIN_EPS",
    "photutils.isophote.fitter.PI2"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.fitter.EllipseFitter.fit": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "Exception",
    "Isophote",
    "abs",
    "astropy.log.info",
    "first_and_second_harmonic_function",
    "fit_first_and_second_harmonics",
    "iter",
    "numpy.Inf",
    "numpy.abs",
    "numpy.argmax",
    "numpy.std",
    "photutils.isophote.fitter.DEFAULT_CONVERGENCE",
    "photutils.isophote.fitter.DEFAULT_FFLAG",
    "photutils.isophote.fitter.DEFAULT_MAXGERR",
    "photutils.isophote.fitter.DEFAULT_MAXIT",
    "photutils.isophote.fitter.DEFAULT_MINIT",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.fitter.MAX_EPS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.MIN_EPS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.PI2": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.isophote.fitter._AngleCorrector": {
  "data": {
   "lineno": 312,
   "symbols_in_volume": [
    "photutils.isophote.fitter._ParameterCorrector"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.fitter._AngleCorrector.correct": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "EllipseSample",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.fitter._EllipticityCorrector": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "photutils.isophote.fitter._ParameterCorrector"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.fitter._EllipticityCorrector.correct": {
  "data": {
   "lineno": 336,
   "symbols_in_volume": [
    "EllipseSample",
    "min",
    "photutils.isophote.fitter.MAX_EPS"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.fitter._ParameterCorrector": {
  "data": {
   "lineno": 269
  },
  "type": "class"
 },
 "photutils.isophote.fitter._ParameterCorrector.correct": {
  "data": {
   "lineno": 271,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.fitter._PositionCorrector": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "photutils.isophote.fitter._ParameterCorrector"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.fitter._PositionCorrector.finalize_correction": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "EllipseSample"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.fitter._PositionCorrector_0": {
  "data": {
   "lineno": 290,
   "symbols_in_volume": [
    "photutils.isophote.fitter._PositionCorrector"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.fitter._PositionCorrector_0.correct": {
  "data": {
   "lineno": 292,
   "symbols_in_volume": [
    "photutils.isophote.fitter.math"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.fitter._PositionCorrector_1": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "photutils.isophote.fitter._PositionCorrector"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.fitter._PositionCorrector_1.correct": {
  "data": {
   "lineno": 303,
   "symbols_in_volume": [
    "photutils.isophote.fitter.math"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.fitter.__all__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.__doctest_skip__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.isophote.fitter._correctors": {
  "data": {
   "lineno": 355
  },
  "type": "constant"
 },
 "photutils.isophote.fitter.log": {
  "data": {
   "shadows": "astropy.log"
  },
  "type": "import"
 },
 "photutils.isophote.fitter.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.isophote.fitter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.geometry": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.geometry.EllipseGeometry": {
  "data": {
   "lineno": 62
  },
  "type": "class"
 },
 "photutils.isophote.geometry.EllipseGeometry.__init__": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "max",
    "min"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.bounding_ellipses": {
  "data": {
   "lineno": 346
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.find_center": {
  "data": {
   "lineno": 133,
   "symbols_in_volume": [
    "astropy.log.info",
    "float",
    "int",
    "len",
    "max",
    "min",
    "numpy.ma.masked_array",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.std",
    "numpy.sum",
    "photutils.isophote.geometry.IN_MASK",
    "photutils.isophote.geometry.OUT_MASK",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.initialize_sector_geometry": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "abs",
    "float",
    "max",
    "min",
    "numpy.array",
    "numpy.zeros",
    "photutils.isophote.geometry._area",
    "photutils.isophote.geometry.math"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.polar_angle_sector_limits": {
  "data": {
   "lineno": 367
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.radius": {
  "data": {
   "lineno": 256,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.reset_sma": {
  "data": {
   "lineno": 465
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.to_polar": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arcsin",
    "numpy.atleast_2d",
    "numpy.ones",
    "numpy.pi",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.geometry.EllipseGeometry.update_sma": {
  "data": {
   "lineno": 440
  },
  "type": "function"
 },
 "photutils.isophote.geometry.IN_MASK": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.isophote.geometry.OUT_MASK": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.isophote.geometry.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "photutils.isophote.geometry._area": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "abs",
    "photutils.isophote.geometry.math"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.geometry.log": {
  "data": {
   "shadows": "astropy.log"
  },
  "type": "import"
 },
 "photutils.isophote.geometry.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.isophote.geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.harmonics": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.harmonics.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "photutils.isophote.harmonics._least_squares_fit": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "RuntimeError",
    "scipy.optimize.leastsq"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.harmonics.first_and_second_harmonic_function": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.harmonics.fit_first_and_second_harmonics": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "numpy.mean",
    "photutils.isophote.harmonics._least_squares_fit"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.harmonics.fit_first_and_second_harmonics.optimize_func": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "numpy.array",
    "photutils.isophote.harmonics.first_and_second_harmonic_function"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.harmonics.fit_upper_harmonic": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "numpy.mean",
    "photutils.isophote.harmonics._least_squares_fit"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.harmonics.fit_upper_harmonic.optimize_func": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "numpy.cos",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.harmonics.leastsq": {
  "data": {
   "shadows": "scipy.optimize.leastsq"
  },
  "type": "import"
 },
 "photutils.isophote.harmonics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.integrator": {
  "data": {
   "symbols_in_volume": [
    "photutils.isophote.integrator.BILINEAR",
    "photutils.isophote.integrator.MEAN",
    "photutils.isophote.integrator.MEDIAN",
    "photutils.isophote.integrator.NEAREST_NEIGHBOR",
    "photutils.isophote.integrator._BiLinearIntegrator",
    "photutils.isophote.integrator._MeanIntegrator",
    "photutils.isophote.integrator._MedianIntegrator",
    "photutils.isophote.integrator._NearestNeighborIntegrator"
   ]
  },
  "type": "module"
 },
 "photutils.isophote.integrator.BILINEAR": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.isophote.integrator.MEAN": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.isophote.integrator.MEDIAN": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.isophote.integrator.NEAREST_NEIGHBOR": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.isophote.integrator._AreaIntegrator": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "photutils.isophote.integrator._Integrator"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.integrator._AreaIntegrator.__init__": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "photutils.isophote.integrator.BILINEAR",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.integrator._AreaIntegrator.accumulate": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.integrator._AreaIntegrator.compute_sample_value": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.integrator._AreaIntegrator.get_polar_angle_step": {
  "data": {
   "lineno": 293
  },
  "type": "function"
 },
 "photutils.isophote.integrator._AreaIntegrator.get_sector_area": {
  "data": {
   "lineno": 298
  },
  "type": "function"
 },
 "photutils.isophote.integrator._AreaIntegrator.initialize_accumulator": {
  "data": {
   "lineno": 304,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.integrator._AreaIntegrator.integrate": {
  "data": {
   "lineno": 219,
   "symbols_in_volume": [
    "int",
    "len",
    "max",
    "min",
    "numpy.ma.masked",
    "photutils.isophote.integrator.math",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.integrator._AreaIntegrator.is_area": {
  "data": {
   "lineno": 301
  },
  "type": "function"
 },
 "photutils.isophote.integrator._BiLinearIntegrator": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "photutils.isophote.integrator._Integrator"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.integrator._BiLinearIntegrator.get_polar_angle_step": {
  "data": {
   "lineno": 198
  },
  "type": "function"
 },
 "photutils.isophote.integrator._BiLinearIntegrator.get_sector_area": {
  "data": {
   "lineno": 201
  },
  "type": "function"
 },
 "photutils.isophote.integrator._BiLinearIntegrator.integrate": {
  "data": {
   "lineno": 169,
   "symbols_in_volume": [
    "int",
    "numpy.ma.masked",
    "photutils.isophote.integrator.math"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.integrator._BiLinearIntegrator.is_area": {
  "data": {
   "lineno": 204
  },
  "type": "function"
 },
 "photutils.isophote.integrator._Integrator": {
  "data": {
   "lineno": 17
  },
  "type": "class"
 },
 "photutils.isophote.integrator._Integrator.__init__": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.integrator._Integrator._reset": {
  "data": {
   "lineno": 66
  },
  "type": "function"
 },
 "photutils.isophote.integrator._Integrator._store_results": {
  "data": {
   "lineno": 78
  },
  "type": "function"
 },
 "photutils.isophote.integrator._Integrator.get_polar_angle_step": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.integrator._Integrator.get_sector_area": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.integrator._Integrator.integrate": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.integrator._Integrator.is_area": {
  "data": {
   "lineno": 117,
   "symbols_in_volume": [
    "NotImplementedError"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.integrator._MeanIntegrator": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "photutils.isophote.integrator._AreaIntegrator"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.integrator._MeanIntegrator.accumulate": {
  "data": {
   "lineno": 321
  },
  "type": "function"
 },
 "photutils.isophote.integrator._MeanIntegrator.compute_sample_value": {
  "data": {
   "lineno": 326
  },
  "type": "function"
 },
 "photutils.isophote.integrator._MeanIntegrator.initialize_accumulator": {
  "data": {
   "lineno": 316
  },
  "type": "function"
 },
 "photutils.isophote.integrator._MedianIntegrator": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "photutils.isophote.integrator._AreaIntegrator"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.integrator._MedianIntegrator.accumulate": {
  "data": {
   "lineno": 337
  },
  "type": "function"
 },
 "photutils.isophote.integrator._MedianIntegrator.compute_sample_value": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "int"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.integrator._MedianIntegrator.initialize_accumulator": {
  "data": {
   "lineno": 332
  },
  "type": "function"
 },
 "photutils.isophote.integrator._NearestNeighborIntegrator": {
  "data": {
   "lineno": 139,
   "symbols_in_volume": [
    "photutils.isophote.integrator._Integrator"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.integrator._NearestNeighborIntegrator.get_polar_angle_step": {
  "data": {
   "lineno": 157
  },
  "type": "function"
 },
 "photutils.isophote.integrator._NearestNeighborIntegrator.get_sector_area": {
  "data": {
   "lineno": 160
  },
  "type": "function"
 },
 "photutils.isophote.integrator._NearestNeighborIntegrator.integrate": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "int",
    "numpy.ma.masked",
    "photutils.isophote.integrator.math"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.integrator._NearestNeighborIntegrator.is_area": {
  "data": {
   "lineno": 163
  },
  "type": "function"
 },
 "photutils.isophote.integrator.__all__": {
  "data": {
   "lineno": 7
  },
  "type": "constant"
 },
 "photutils.isophote.integrator.integrators": {
  "data": {
   "lineno": 348
  },
  "type": "constant"
 },
 "photutils.isophote.integrator.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "photutils.isophote.integrator.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.isophote.model": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.model.LSQUnivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.LSQUnivariateSpline"
  },
  "type": "import"
 },
 "photutils.isophote.model.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "photutils.isophote.model.build_ellipse_model": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "EllipseGeometry",
    "float",
    "int",
    "len",
    "max",
    "numpy.arange",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "numpy.where",
    "numpy.zeros",
    "range",
    "scipy.interpolate.LSQUnivariateSpline"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.sample": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.sample.CentralEllipseSample": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "photutils.isophote.sample.EllipseSample"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.sample.CentralEllipseSample._extract": {
  "data": {
   "lineno": 400,
   "symbols_in_volume": [
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.sample.CentralEllipseSample.update": {
  "data": {
   "lineno": 386
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample": {
  "data": {
   "lineno": 14
  },
  "type": "class"
 },
 "photutils.isophote.sample.EllipseSample.__init__": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "EllipseGeometry",
    "photutils.isophote.sample.copy"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample._extract": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "len",
    "min",
    "numpy.array",
    "numpy.mean",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample._get_gradient": {
  "data": {
   "lineno": 329,
   "symbols_in_volume": [
    "len",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.std",
    "photutils.isophote.sample.EllipseSample"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample._iter_sigma_clip": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "len",
    "numpy.array",
    "numpy.mean",
    "numpy.std",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample._sigma_clip": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "iter",
    "numpy.array",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample.coordinates": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "len",
    "numpy.cos",
    "numpy.sin",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample.extract": {
  "data": {
   "lineno": 133
  },
  "type": "function"
 },
 "photutils.isophote.sample.EllipseSample.update": {
  "data": {
   "lineno": 279,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.mean"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.sample.__all__": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.isophote.sample.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "photutils.isophote.sample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.setup_package": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.setup_package.get_package_data": {
  "data": {
   "lineno": 4
  },
  "type": "function"
 },
 "photutils.isophote.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.tests.make_test_data": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.tests.make_test_data.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.isophote.tests.make_test_data.make_fits_test_image": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "astropy.io.fits.HDUList",
    "astropy.io.fits.PrimaryHDU",
    "photutils.isophote.tests.make_test_data.make_test_image"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.make_test_data.make_test_image": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "EllipseGeometry",
    "int",
    "make_noise_image",
    "numpy.exp",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.make_test_data.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_angles": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.tests.test_angles.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_angles.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_angles.sector_area": {
  "data": {
   "lineno": 7,
   "symbols_in_volume": [
    "abs",
    "numpy.cos",
    "photutils.isophote.tests.test_angles.math"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_angles.test_angles": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "abs",
    "max",
    "min",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "numpy.sqrt",
    "photutils.isophote.tests.test_angles.sector_area"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "make_test_image",
    "numpy.pi",
    "photutils.isophote.tests.test_ellipse.PA",
    "photutils.isophote.tests.test_ellipse.POS"
   ]
  },
  "type": "module"
 },
 "photutils.isophote.tests.test_ellipse.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_ellipse.HAS_SCIPY": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_ellipse.OFFSET_GALAXY": {
  "data": {
   "lineno": 31
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_ellipse.PA": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_ellipse.POS": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "photutils.isophote.tests.test_ellipse.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.setup_class": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "make_test_image",
    "photutils.isophote.tests.test_ellipse.PA"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_basic": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "Ellipse",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_ellipse_shape": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "Ellipse",
    "astropy.modeling.models.Gaussian2D",
    "g",
    "len",
    "make_noise_image",
    "numpy.mgrid",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_find_center": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "EllipseGeometry",
    "astropy.io.fits.open",
    "get_path",
    "numpy.pi",
    "photutils.isophote.tests.test_ellipse.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_fit_one_ellipse": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "Ellipse",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_offcenter_fail": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "Ellipse",
    "len",
    "photutils.isophote.tests.test_ellipse.OFFSET_GALAXY"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_offcenter_fit": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "Ellipse",
    "EllipseGeometry",
    "len",
    "photutils.isophote.tests.test_ellipse.OFFSET_GALAXY",
    "photutils.isophote.tests.test_ellipse.PA",
    "photutils.isophote.tests.test_ellipse.POS"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipse.test_offcenter_go_beyond_frame": {
  "data": {
   "lineno": 97,
   "symbols_in_volume": [
    "Ellipse",
    "EllipseGeometry",
    "len",
    "numpy.any",
    "photutils.isophote.tests.test_ellipse.OFFSET_GALAXY",
    "photutils.isophote.tests.test_ellipse.PA",
    "photutils.isophote.tests.test_ellipse.POS"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipseOnRealData": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "photutils.isophote.tests.test_ellipse.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_ellipse.TestEllipseOnRealData.test_basic": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "Ellipse",
    "EllipseGeometry",
    "astropy.io.fits.open",
    "g",
    "get_path",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_ellipse.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_ellipse.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_ellipse.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_ellipse.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_fitter": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "make_test_image"
   ]
  },
  "type": "module"
 },
 "photutils.isophote.tests.test_fitter.DATA": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_fitter.DEFAULT_POS": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_fitter.HAS_SCIPY": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_fitter.TestM51": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "photutils.isophote.tests.test_fitter.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_fitter.TestM51.setup_class": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "get_path"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.TestM51.test_m51": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "EllipseFitter",
    "EllipseSample",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.TestM51.test_m51_central": {
  "data": {
   "lineno": 214,
   "symbols_in_volume": [
    "CentralEllipseFitter",
    "CentralEllipseSample",
    "EllipseGeometry"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.TestM51.test_m51_outer": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "EllipseFitter",
    "EllipseSample",
    "numpy.any",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_fitter.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_fitter.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_fitter.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_fitter.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_fitter.test_fitting_all": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "EllipseFitter",
    "EllipseSample",
    "make_test_image",
    "numpy.pi",
    "photutils.isophote.tests.test_fitter.DEFAULT_POS",
    "photutils.isophote.tests.test_fitter.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.test_fitting_eps": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "EllipseFitter",
    "EllipseSample",
    "isinstance",
    "photutils.isophote.tests.test_fitter.DATA",
    "photutils.isophote.tests.test_fitter.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.test_fitting_pa": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "EllipseFitter",
    "EllipseSample",
    "make_test_image",
    "numpy.pi",
    "photutils.isophote.tests.test_fitter.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.test_fitting_raw": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "EllipseSample",
    "abs",
    "fit_first_and_second_harmonics",
    "numpy.testing.assert_allclose",
    "photutils.isophote.tests.test_fitter.DATA",
    "photutils.isophote.tests.test_fitter.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.test_fitting_small_radii": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "EllipseFitter",
    "EllipseSample",
    "isinstance",
    "photutils.isophote.tests.test_fitter.DATA",
    "photutils.isophote.tests.test_fitter.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.test_fitting_xy": {
  "data": {
   "lineno": 106,
   "symbols_in_volume": [
    "EllipseFitter",
    "EllipseSample",
    "make_test_image",
    "photutils.isophote.tests.test_fitter.DEFAULT_POS",
    "photutils.isophote.tests.test_fitter.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_fitter.test_gradient": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "EllipseSample",
    "numpy.testing.assert_allclose",
    "photutils.isophote.tests.test_fitter.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.tests.test_geometry.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_geometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_geometry.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_geometry.test_area": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "EllipseGeometry",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_area2": {
  "data": {
   "lineno": 76,
   "symbols_in_volume": [
    "EllipseGeometry",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_bounding_ellipses": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "EllipseGeometry",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_geometry": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "EllipseGeometry",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "photutils.isophote.tests.test_geometry.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_polar_angle_sector_limits": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "EllipseGeometry",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_radius": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "EllipseGeometry",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_reset_sma": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "EllipseGeometry",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_to_polar": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "EllipseGeometry",
    "numpy.pi",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_geometry.test_update_sma": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "EllipseGeometry",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.isophote.tests.test_harmonics.HAS_SCIPY": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_harmonics.TestFitEllipseSamples": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "photutils.isophote.tests.test_harmonics.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_harmonics.TestFitEllipseSamples.setup_class": {
  "data": {
   "lineno": 100,
   "symbols_in_volume": [
    "make_test_image",
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.TestFitEllipseSamples.test_fit_ellipsesample_1": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "EllipseSample",
    "first_and_second_harmonic_function",
    "fit_first_and_second_harmonics",
    "numpy.array",
    "numpy.mean",
    "numpy.std",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.TestFitEllipseSamples.test_fit_ellipsesample_2": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "EllipseSample",
    "fit_first_and_second_harmonics",
    "numpy.mean",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.TestFitEllipseSamples.test_fit_ellipsesample_3": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "EllipseSample",
    "fit_first_and_second_harmonics",
    "numpy.mean",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.TestFitEllipseSamples.test_fit_ellipsesample_4": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "EllipseSample",
    "fit_first_and_second_harmonics",
    "numpy.mean",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_harmonics.leastsq": {
  "data": {
   "shadows": "scipy.optimize.leastsq"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_harmonics.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_harmonics.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_harmonics.test_harmonics_1": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.linspace",
    "numpy.mean",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.sin",
    "numpy.std",
    "numpy.testing.assert_allclose",
    "photutils.isophote.tests.test_harmonics.pytest",
    "scipy.optimize.leastsq"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.test_harmonics_1.optimize_func": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.test_harmonics_2": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "fit_first_and_second_harmonics",
    "numpy.cos",
    "numpy.linspace",
    "numpy.mean",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.sin",
    "numpy.std",
    "numpy.testing.assert_allclose",
    "photutils.isophote.tests.test_harmonics.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_harmonics.test_harmonics_3": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "fit_upper_harmonic",
    "numpy.cos",
    "numpy.linspace",
    "numpy.mean",
    "numpy.pi",
    "numpy.random.randn",
    "numpy.sin",
    "numpy.std",
    "numpy.testing.assert_allclose",
    "photutils.isophote.tests.test_harmonics.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator": {
  "data": {},
  "type": "module"
 },
 "photutils.isophote.tests.test_integrator.TestData": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "photutils.isophote.tests.test_integrator.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_integrator.TestData.make_sample": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "EllipseSample",
    "len",
    "numpy.ma.masked_values"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestData.setup_class": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "get_path"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestMasked": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "photutils.isophote.tests.test_integrator.TestData",
    "photutils.isophote.tests.test_integrator.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_integrator.TestMasked.test_bilinear": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.std",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestMasked.test_mean": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.std",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestUnmasked": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "photutils.isophote.tests.test_integrator.TestData",
    "photutils.isophote.tests.test_integrator.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_integrator.TestUnmasked.test_bilinear": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.std",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestUnmasked.test_bilinear_small": {
  "data": {
   "lineno": 55,
   "symbols_in_volume": [
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.std",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestUnmasked.test_mean": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.std",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestUnmasked.test_mean_small": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.std",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestUnmasked.test_median": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.std",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.TestUnmasked.test_nearest_neighbor": {
  "data": {
   "lineno": 69,
   "symbols_in_volume": [
    "len",
    "numpy.max",
    "numpy.mean",
    "numpy.min",
    "numpy.std",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_integrator.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_integrator.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_integrator.ma": {
  "data": {
   "shadows": "numpy.ma"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_integrator.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_integrator.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_isophote": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.isophote.tests.test_isophote.HAS_SCIPY": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_isophote.TestIsophote": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "photutils.isophote.tests.test_isophote.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_isophote.TestIsophote.setup_class": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.io.fits.open",
    "get_path"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophote.test_fit": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "EllipseFitter",
    "EllipseSample",
    "abs",
    "make_test_image"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophote.test_m51": {
  "data": {
   "lineno": 64,
   "symbols_in_volume": [
    "EllipseFitter",
    "EllipseSample",
    "abs",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophote.test_m51_niter": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "EllipseFitter",
    "EllipseSample"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList": {
  "data": {
   "lineno": 114
  },
  "type": "class"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList.build_list": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "EllipseSample",
    "Isophote",
    "IsophoteList",
    "float",
    "range",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList.setup_class": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "make_test_image"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList.test_basic_list": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "EllipseSample",
    "Isophote",
    "float",
    "isinstance",
    "list",
    "numpy.ndarray",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList.test_combined": {
  "data": {
   "lineno": 208,
   "symbols_in_volume": [
    "IsophoteList",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList.test_extend": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "IsophoteList",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList.test_slicing": {
  "data": {
   "lineno": 202,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.TestIsophoteList.test_sort": {
  "data": {
   "lineno": 233
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_isophote.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_isophote.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_isophote.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_isophote.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_isophote.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_model": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.isophote.tests.test_model.HAS_SCIPY": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_model.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_model.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_model.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_model.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_model.test_model": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "Ellipse",
    "EllipseGeometry",
    "astropy.io.fits.open",
    "build_ellipse_model",
    "get_path",
    "numpy.mean",
    "numpy.pi",
    "photutils.isophote.tests.test_model.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_model.test_model_simulated_data": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "Ellipse",
    "EllipseGeometry",
    "build_ellipse_model",
    "make_test_image",
    "numpy.mean",
    "numpy.pi",
    "photutils.isophote.tests.test_model.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_regression": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.isophote.tests.test_regression.HAS_SCIPY": {
  "data": {
   "lineno": 65
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_regression.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_regression.fits": {
  "data": {
   "shadows": "astropy.io.fits"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_regression.math": {
  "data": {
   "shadows": "math"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_regression.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_regression.op": {
  "data": {
   "shadows": "os.path"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_regression.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_regression.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_regression.test_regression": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Ellipse",
    "IndexError",
    "abs",
    "astropy.io.fits.open",
    "astropy.table.Table.read",
    "get_path",
    "len",
    "numpy.pi",
    "os.path.abspath",
    "os.path.dirname",
    "os.path.join",
    "photutils.isophote.tests.test_regression.math",
    "photutils.isophote.tests.test_regression.pytest",
    "print",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_sample": {
  "data": {
   "symbols_in_volume": [
    "make_test_image"
   ]
  },
  "type": "module"
 },
 "photutils.isophote.tests.test_sample.DATA": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.isophote.tests.test_sample.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_sample.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.isophote.tests.test_sample.test_coordinates": {
  "data": {
   "lineno": 39,
   "symbols_in_volume": [
    "EllipseSample",
    "isinstance",
    "numpy.ndarray",
    "photutils.isophote.tests.test_sample.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_sample.test_scatter": {
  "data": {
   "lineno": 16,
   "symbols_in_volume": [
    "EllipseSample",
    "Isophote",
    "photutils.isophote.tests.test_sample.DATA",
    "photutils.isophote.tests.test_sample.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.isophote.tests.test_sample.test_sclip": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "EllipseSample",
    "isinstance",
    "numpy.ndarray",
    "photutils.isophote.tests.test_sample.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.morphology": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.core": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.core.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.morphology.core.data_properties": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "SourceProperties",
    "numpy.int",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "photutils.morphology.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.morphology.non_parametric": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.non_parametric.gini": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.abs",
    "numpy.arange",
    "numpy.mean",
    "numpy.ravel",
    "numpy.size",
    "numpy.sort",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "photutils.morphology.non_parametric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.morphology.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.tests.test_core": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "numpy.array",
    "numpy.pi",
    "numpy.zeros",
    "photutils.morphology.tests.test_core.DATA"
   ]
  },
  "type": "module"
 },
 "photutils.morphology.tests.test_core.DATA": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.HAS_SKIMAGE": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.THETAS": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.XCS": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.XSTDDEVS": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.YCS": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.YSTDDEVS": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.morphology.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_core.test_data_properties": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "data_properties",
    "numpy.array",
    "numpy.float",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.morphology.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.morphology.tests.test_non_parametric": {
  "data": {},
  "type": "module"
 },
 "photutils.morphology.tests.test_non_parametric.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.morphology.tests.test_non_parametric.test_gini": {
  "data": {
   "lineno": 8,
   "symbols_in_volume": [
    "gini",
    "numpy.ones",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.psf": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.epsf": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.psf.epsf.AstropyDeprecationWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyDeprecationWarning"
  },
  "type": "import"
 },
 "photutils.psf.epsf.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.psf.epsf.EPSFBuilder": {
  "data": {
   "lineno": 248
  },
  "type": "class"
 },
 "photutils.psf.epsf.EPSFBuilder.__call__": {
  "data": {
   "lineno": 402
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder.__init__": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "SigmaClip",
    "TypeError",
    "ValueError",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "fitter",
    "int",
    "isinstance",
    "photutils.psf.epsf.EPSFFitter",
    "photutils.psf.epsf.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder._build_epsf_step": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "EPSFModel",
    "RuntimeWarning",
    "ValueError",
    "astropy.utils.exceptions.AstropyUserWarning",
    "len",
    "numpy.any",
    "numpy.float64",
    "numpy.isfinite",
    "numpy.nanmedian",
    "numpy.sum",
    "photutils.psf.epsf.HAS_BOTTLENECK",
    "photutils.psf.epsf._interpolate_missing_data",
    "photutils.psf.epsf.bottleneck",
    "photutils.psf.epsf.copy",
    "photutils.psf.epsf.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder._create_initial_epsf": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "EPSFModel",
    "ValueError",
    "float",
    "int",
    "len",
    "numpy.array",
    "numpy.atleast_1d",
    "numpy.ceil",
    "numpy.float",
    "numpy.int",
    "numpy.mean",
    "numpy.repeat",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder._init_img_params": {
  "data": {
   "lineno": 405,
   "symbols_in_volume": [
    "len",
    "numpy.atleast_1d",
    "numpy.repeat",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder._recenter_epsf": {
  "data": {
   "lineno": 640,
   "symbols_in_volume": [
    "EPSFModel",
    "astropy.nddata.utils.overlap_slices",
    "centroid_func",
    "numpy.float",
    "numpy.indices",
    "numpy.isfinite"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder._resample_residual": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "numpy.full",
    "numpy.logical_and",
    "numpy.nan",
    "photutils.psf.epsf._py2intround"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder._resample_residuals": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "enumerate",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder._smooth_epsf": {
  "data": {
   "lineno": 578,
   "symbols_in_volume": [
    "TypeError",
    "isinstance",
    "numpy.array",
    "numpy.ndarray",
    "scipy.ndimage.convolve"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFBuilder.build_epsf": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.exceptions.AstropyUserWarning",
    "bool",
    "numpy.all",
    "numpy.any",
    "numpy.array",
    "numpy.count_nonzero",
    "numpy.float",
    "numpy.float64",
    "numpy.logical_not",
    "numpy.max",
    "numpy.sum",
    "numpy.zeros",
    "photutils.psf.epsf.time",
    "photutils.psf.epsf.warnings",
    "print"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFFitter": {
  "data": {
   "lineno": 33
  },
  "type": "class"
 },
 "photutils.psf.epsf.EPSFFitter.__call__": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "EPSFStars",
    "LinkedEPSFStar",
    "TypeError",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFFitter.__init__": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "astropy.modeling.fitting.LevMarLSQFitter",
    "hasattr",
    "int",
    "len",
    "numpy.atleast_1d",
    "numpy.repeat",
    "photutils.psf.epsf.copy"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf.EPSFFitter._fit_star": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "TypeError",
    "astropy.nddata.utils.NoOverlapError",
    "astropy.nddata.utils.PartialOverlapError",
    "astropy.nddata.utils.overlap_slices",
    "astropy.utils.exceptions.AstropyUserWarning",
    "fitter",
    "fitter.fit_info",
    "numpy.float",
    "numpy.indices",
    "photutils.psf.epsf.copy",
    "photutils.psf.epsf.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf.HAS_BOTTLENECK": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.psf.epsf.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.epsf.NoOverlapError": {
  "data": {
   "shadows": "astropy.nddata.utils.NoOverlapError"
  },
  "type": "import"
 },
 "photutils.psf.epsf.PartialOverlapError": {
  "data": {
   "shadows": "astropy.nddata.utils.PartialOverlapError"
  },
  "type": "import"
 },
 "photutils.psf.epsf.__all__": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.psf.epsf._interpolate_missing_data": {
  "data": {
   "lineno": 932,
   "symbols_in_volume": [
    "ValueError",
    "interpol",
    "len",
    "numpy.array",
    "numpy.dstack",
    "numpy.indices",
    "scipy.interpolate.CloughTocher2DInterpolator",
    "scipy.interpolate.NearestNDInterpolator"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf._py2intround": {
  "data": {
   "lineno": 915,
   "symbols_in_volume": [
    "hasattr",
    "int",
    "numpy.asanyarray",
    "numpy.asscalar",
    "numpy.ceil",
    "numpy.floor",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf.bottleneck": {
  "data": {
   "shadows": "bottleneck"
  },
  "type": "import"
 },
 "photutils.psf.epsf.convolve": {
  "data": {
   "shadows": "scipy.ndimage.convolve"
  },
  "type": "import"
 },
 "photutils.psf.epsf.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "photutils.psf.epsf.interpolate": {
  "data": {
   "shadows": "scipy.interpolate"
  },
  "type": "import"
 },
 "photutils.psf.epsf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.epsf.overlap_slices": {
  "data": {
   "shadows": "astropy.nddata.utils.overlap_slices"
  },
  "type": "import"
 },
 "photutils.psf.epsf.time": {
  "data": {
   "shadows": "time"
  },
  "type": "import"
 },
 "photutils.psf.epsf.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.epsf_stars.AstropyDeprecationWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyDeprecationWarning"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.EPSFStar": {
  "data": {
   "lineno": 26
  },
  "type": "class"
 },
 "photutils.psf.epsf_stars.EPSFStar.__array__": {
  "data": {
   "lineno": 124
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.__init__": {
  "data": {
   "lineno": 82,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "len",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.asarray",
    "numpy.atleast_1d",
    "numpy.float",
    "numpy.isfinite",
    "numpy.logical_not",
    "numpy.ones_like",
    "numpy.repeat",
    "photutils.psf.epsf_stars.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._data_values": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._data_values_normalized": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._weight_values": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._xidx": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._xidx_centered": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._xy_idx": {
  "data": {
   "lineno": 254,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.indices"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._yidx": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar._yidx_centered": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.bbox": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "BoundingBox",
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.center": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.compute_residual_image": {
  "data": {
   "lineno": 236
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.cutout_center": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.data": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.estimate_flux": {
  "data": {
   "lineno": 187,
   "symbols_in_volume": [
    "_interpolate_missing_data",
    "numpy.any",
    "numpy.float64",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.register_epsf": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "numpy.float",
    "numpy.indices"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStar.slices": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "slice"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars": {
  "data": {
   "lineno": 324
  },
  "type": "class"
 },
 "photutils.psf.epsf_stars.EPSFStars.__delitem__": {
  "data": {
   "lineno": 350
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.__getattr__": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "getattr",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.__getitem__": {
  "data": {
   "lineno": 347
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.__init__": {
  "data": {
   "lineno": 334,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "list",
    "photutils.psf.epsf_stars.EPSFStar"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.__iter__": {
  "data": {
   "lineno": 353
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.__len__": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars._getattr_flat": {
  "data": {
   "lineno": 364,
   "symbols_in_volume": [
    "getattr",
    "isinstance",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars._max_shape": {
  "data": {
   "lineno": 478,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars._min_pixel_scale": {
  "data": {
   "lineno": 468,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.all_good_stars": {
  "data": {
   "lineno": 419,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.all_stars": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.center_flat": {
  "data": {
   "lineno": 388,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.cutout_center_flat": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.n_all_stars": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.n_good_stars": {
  "data": {
   "lineno": 456,
   "symbols_in_volume": [
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.EPSFStars.n_stars": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.LinkedEPSFStar": {
  "data": {
   "lineno": 489,
   "symbols_in_volume": [
    "photutils.psf.epsf_stars.EPSFStars"
   ]
  },
  "type": "class"
 },
 "photutils.psf.epsf_stars.LinkedEPSFStar.__init__": {
  "data": {
   "lineno": 505,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "photutils.psf.epsf_stars.EPSFStar",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.LinkedEPSFStar.constrain_centers": {
  "data": {
   "lineno": 516,
   "symbols_in_volume": [
    "astropy.utils.exceptions.AstropyUserWarning",
    "len",
    "numpy.arctan2",
    "numpy.array",
    "numpy.cos",
    "numpy.hypot",
    "numpy.logical_not",
    "numpy.mean",
    "numpy.pi",
    "numpy.sin",
    "numpy.transpose",
    "photutils.psf.epsf_stars.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.LinkedStar": {
  "data": {
   "lineno": 832,
   "symbols_in_volume": [
    "astropy.utils.deprecated",
    "photutils.psf.epsf_stars.LinkedEPSFStar"
   ]
  },
  "type": "class"
 },
 "photutils.psf.epsf_stars.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.NoOverlapError": {
  "data": {
   "shadows": "astropy.nddata.utils.NoOverlapError"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.PartialOverlapError": {
  "data": {
   "shadows": "astropy.nddata.utils.PartialOverlapError"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.Star": {
  "data": {
   "lineno": 822,
   "symbols_in_volume": [
    "astropy.utils.deprecated",
    "photutils.psf.epsf_stars.EPSFStar"
   ]
  },
  "type": "class"
 },
 "photutils.psf.epsf_stars.Stars": {
  "data": {
   "lineno": 827,
   "symbols_in_volume": [
    "astropy.utils.deprecated",
    "photutils.psf.epsf_stars.EPSFStars"
   ]
  },
  "type": "class"
 },
 "photutils.psf.epsf_stars.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.__all__": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.psf.epsf_stars._extract_stars": {
  "data": {
   "lineno": 729,
   "symbols_in_volume": [
    "astropy.nddata.utils.NoOverlapError",
    "astropy.nddata.utils.PartialOverlapError",
    "astropy.nddata.utils.overlap_slices",
    "astropy.utils.exceptions.AstropyUserWarning",
    "astropy.wcs.utils.skycoord_to_pixel",
    "len",
    "numpy.arange",
    "numpy.asanyarray",
    "numpy.float",
    "numpy.int",
    "numpy.ones_like",
    "photutils.psf.epsf_stars.EPSFStar",
    "photutils.psf.epsf_stars.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.deprecated": {
  "data": {
   "shadows": "astropy.utils.deprecated"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.extract_stars": {
  "data": {
   "lineno": 567,
   "symbols_in_volume": [
    "ValueError",
    "any",
    "astropy.nddata.NDData",
    "astropy.table.Table",
    "astropy.utils.exceptions.AstropyUserWarning",
    "isinstance",
    "len",
    "list",
    "map",
    "numpy.atleast_1d",
    "numpy.repeat",
    "photutils.psf.epsf_stars.EPSFStars",
    "photutils.psf.epsf_stars.LinkedEPSFStar",
    "photutils.psf.epsf_stars._extract_stars",
    "photutils.psf.epsf_stars.warnings",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.psf.epsf_stars.lazyproperty": {
  "data": {
   "shadows": "astropy.utils.lazyproperty"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.overlap_slices": {
  "data": {
   "shadows": "astropy.nddata.utils.overlap_slices"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.skycoord_to_pixel": {
  "data": {
   "shadows": "astropy.wcs.utils.skycoord_to_pixel"
  },
  "type": "import"
 },
 "photutils.psf.epsf_stars.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.psf.groupstars": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.groupstars.Column": {
  "data": {
   "shadows": "astropy.table.Column"
  },
  "type": "import"
 },
 "photutils.psf.groupstars.DAOGroup": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "photutils.psf.groupstars.GroupStarsBase"
   ]
  },
  "type": "class"
 },
 "photutils.psf.groupstars.DAOGroup.__init__": {
  "data": {
   "lineno": 97
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DAOGroup.crit_separation": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance",
    "type"
   ]
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DAOGroup.find_group": {
  "data": {
   "lineno": 152,
   "symbols_in_volume": [
    "numpy.asarray",
    "numpy.hypot"
   ]
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DAOGroup.group_stars": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.Column",
    "len",
    "numpy.append",
    "numpy.arange",
    "numpy.array_equal",
    "numpy.int",
    "numpy.where",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DBSCAN": {
  "data": {
   "shadows": "sklearn.cluster.DBSCAN"
  },
  "type": "import"
 },
 "photutils.psf.groupstars.DBSCANGroup": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "photutils.psf.groupstars.GroupStarsBase"
   ]
  },
  "type": "class"
 },
 "photutils.psf.groupstars.DBSCANGroup.__init__": {
  "data": {
   "lineno": 218
  },
  "type": "function"
 },
 "photutils.psf.groupstars.DBSCANGroup.group_stars": {
  "data": {
   "lineno": 226,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.Column",
    "len",
    "numpy.arange",
    "numpy.array_equal",
    "numpy.int",
    "numpy.ones",
    "numpy.transpose",
    "sklearn.cluster.DBSCAN"
   ]
  },
  "type": "function"
 },
 "photutils.psf.groupstars.GroupStarsBase": {
  "data": {
   "lineno": 15
  },
  "type": "class"
 },
 "photutils.psf.groupstars.GroupStarsBase.__call__": {
  "data": {
   "lineno": 21
  },
  "type": "function"
 },
 "photutils.psf.groupstars.GroupStarsBase.group_stars": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "NotImplementedError",
    "photutils.psf.groupstars.abc"
   ]
  },
  "type": "function"
 },
 "photutils.psf.groupstars.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.psf.groupstars.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "photutils.psf.groupstars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.matching": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.matching.fourier": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.matching.fourier.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.psf.matching.fourier.create_matching_kernel": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asanyarray",
    "numpy.copy",
    "numpy.fft.fft2",
    "numpy.fft.fftshift",
    "numpy.fft.ifft2",
    "numpy.fft.ifftshift",
    "numpy.real",
    "window"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.fourier.fft2": {
  "data": {
   "shadows": "numpy.fft.fft2"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.fftshift": {
  "data": {
   "shadows": "numpy.fft.fftshift"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.ifft2": {
  "data": {
   "shadows": "numpy.fft.ifft2"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.ifftshift": {
  "data": {
   "shadows": "numpy.fft.ifftshift"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.matching.fourier.resize_psf": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "scipy.ndimage.zoom"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.fourier.zoom": {
  "data": {
   "shadows": "scipy.ndimage.zoom"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.matching.tests.test_fourier": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.psf.matching.tests.test_fourier.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.HAS_SCIPY": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.psf.matching.tests.test_fourier.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_fourier.test_create_matching_kernel": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "SplitCosineBellWindow",
    "astropy.modeling.fitting.LevMarLSQFitter",
    "astropy.modeling.models.Gaussian2D",
    "create_matching_kernel",
    "fitter",
    "gm1",
    "gm2",
    "numpy.mgrid",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "photutils.psf.matching.tests.test_fourier.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_fourier.test_create_matching_kernel_shapes": {
  "data": {
   "lineno": 51,
   "symbols_in_volume": [
    "ValueError",
    "create_matching_kernel",
    "numpy.ones",
    "photutils.psf.matching.tests.test_fourier.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_fourier.test_resize_psf": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "numpy.ones",
    "photutils.psf.matching.tests.test_fourier.pytest",
    "resize_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.psf.matching.tests.test_windows.HAS_SCIPY": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.psf.matching.tests.test_windows.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.matching.tests.test_windows.test_cosine_bell": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "CosineBellWindow",
    "numpy.testing.assert_allclose",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_hanning": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "HanningWindow",
    "numpy.testing.assert_allclose",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_hanning_numpy": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "HanningWindow",
    "numpy.hanning",
    "numpy.testing.assert_allclose",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_invalid_shape": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "HanningWindow",
    "ValueError",
    "photutils.psf.matching.tests.test_windows.pytest",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_split_cosine_bell": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "SplitCosineBellWindow",
    "numpy.testing.assert_allclose",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_tophat": {
  "data": {
   "lineno": 73,
   "symbols_in_volume": [
    "TopHatWindow",
    "numpy.testing.assert_allclose",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_tukey": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "TukeyWindow",
    "numpy.testing.assert_allclose",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.test_tukey_scipy": {
  "data": {
   "lineno": 43,
   "symbols_in_volume": [
    "TukeyWindow",
    "numpy.testing.assert_allclose",
    "photutils.psf.matching.tests.test_windows.pytest",
    "scipy.signal.tukey",
    "win"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.tests.test_windows.tukey": {
  "data": {
   "shadows": "scipy.signal.tukey"
  },
  "type": "import"
 },
 "photutils.psf.matching.windows": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.matching.windows.CosineBellWindow": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "photutils.psf.matching.windows.SplitCosineBellWindow"
   ]
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.CosineBellWindow.__init__": {
  "data": {
   "lineno": 227
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.HanningWindow": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "photutils.psf.matching.windows.SplitCosineBellWindow"
   ]
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.HanningWindow.__init__": {
  "data": {
   "lineno": 145
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.SplitCosineBellWindow": {
  "data": {
   "lineno": 39
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.SplitCosineBellWindow.__call__": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "int",
    "numpy.array",
    "numpy.cos",
    "numpy.floor",
    "numpy.ones",
    "numpy.pi",
    "photutils.psf.matching.windows._radial_distance"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.SplitCosineBellWindow.__init__": {
  "data": {
   "lineno": 76
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.TopHatWindow": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "photutils.psf.matching.windows.SplitCosineBellWindow"
   ]
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.TopHatWindow.__init__": {
  "data": {
   "lineno": 267
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.TukeyWindow": {
  "data": {
   "lineno": 150,
   "symbols_in_volume": [
    "photutils.psf.matching.windows.SplitCosineBellWindow"
   ]
  },
  "type": "class"
 },
 "photutils.psf.matching.windows.TukeyWindow.__init__": {
  "data": {
   "lineno": 189
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.__all__": {
  "data": {
   "lineno": 9
  },
  "type": "constant"
 },
 "photutils.psf.matching.windows._radial_distance": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.arange",
    "numpy.asarray",
    "numpy.meshgrid",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.psf.matching.windows.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.models": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.models.AstropyDeprecationWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyDeprecationWarning"
  },
  "type": "import"
 },
 "photutils.psf.models.AstropyWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyWarning"
  },
  "type": "import"
 },
 "photutils.psf.models.EPSFModel": {
  "data": {
   "lineno": 481,
   "symbols_in_volume": [
    "photutils.psf.models.FittableImageModel"
   ]
  },
  "type": "class"
 },
 "photutils.psf.models.EPSFModel.__init__": {
  "data": {
   "lineno": 515,
   "symbols_in_volume": [
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "photutils.psf.models.warnings",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.EPSFModel.pixel_scale": {
  "data": {
   "lineno": 541,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "len",
    "numpy.atleast_1d",
    "numpy.repeat"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.Fittable2DModel": {
  "data": {
   "shadows": "astropy.modeling.Fittable2DModel"
  },
  "type": "import"
 },
 "photutils.psf.models.FittableImageModel": {
  "data": {
   "lineno": 30,
   "symbols_in_volume": [
    "astropy.modeling.Fittable2DModel",
    "astropy.modeling.Parameter"
   ]
  },
  "type": "class"
 },
 "photutils.psf.models.FittableImageModel.__init__": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.array",
    "numpy.float64",
    "numpy.isfinite",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel._compute_normalization": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "numpy.isfinite",
    "photutils.psf.models.NonNormalizable",
    "photutils.psf.models.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel._compute_raw_image_norm": {
  "data": {
   "lineno": 160,
   "symbols_in_volume": [
    "numpy.float64",
    "numpy.sum"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel._set_oversampling": {
  "data": {
   "lineno": 229,
   "symbols_in_volume": [
    "ValueError",
    "float"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel._store_interpolator_kwargs": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "photutils.psf.models.copy"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.compute_interpolator": {
  "data": {
   "lineno": 378,
   "symbols_in_volume": [
    "ValueError",
    "hasattr",
    "int",
    "len",
    "numpy.arange",
    "numpy.float",
    "scipy.interpolate.RectBivariateSpline"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.data": {
  "data": {
   "lineno": 243,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.evaluate": {
  "data": {
   "lineno": 445,
   "symbols_in_volume": [
    "numpy.asarray"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.fill_value": {
  "data": {
   "lineno": 359
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.interpolator_kwargs": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.normalization_constant": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.normalization_correction": {
  "data": {
   "lineno": 285
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.normalization_status": {
  "data": {
   "lineno": 258,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.normalized_data": {
  "data": {
   "lineno": 248,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.nx": {
  "data": {
   "lineno": 301,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.ny": {
  "data": {
   "lineno": 306,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.origin": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "TypeError",
    "hasattr",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.oversampling": {
  "data": {
   "lineno": 220,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.shape": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.x_origin": {
  "data": {
   "lineno": 339,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.FittableImageModel.y_origin": {
  "data": {
   "lineno": 344,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.GriddedPSFModel": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "astropy.modeling.Fittable2DModel",
    "astropy.modeling.Parameter"
   ]
  },
  "type": "class"
 },
 "photutils.psf.models.GriddedPSFModel.__init__": {
  "data": {
   "lineno": 588,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.nddata.NDData",
    "isinstance",
    "len",
    "list",
    "numpy.array",
    "numpy.float",
    "numpy.isscalar",
    "numpy.transpose",
    "numpy.unique",
    "photutils.psf.models.itertools",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.GriddedPSFModel._bilinear_interp": {
  "data": {
   "lineno": 700,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.array",
    "numpy.asarray",
    "numpy.isscalar",
    "numpy.sum",
    "range",
    "sorted",
    "staticmethod",
    "tuple"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.GriddedPSFModel._find_bounding_points": {
  "data": {
   "lineno": 664,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "list",
    "numpy.argsort",
    "numpy.hypot",
    "numpy.isscalar",
    "photutils.psf.models.itertools"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.GriddedPSFModel._find_bounds_1d": {
  "data": {
   "lineno": 631,
   "symbols_in_volume": [
    "len",
    "numpy.searchsorted",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.GriddedPSFModel.evaluate": {
  "data": {
   "lineno": 758,
   "symbols_in_volume": [
    "numpy.argsort",
    "numpy.array",
    "numpy.hypot",
    "numpy.isscalar",
    "photutils.psf.models.FittableImageModel"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.IntegratedGaussianPRF": {
  "data": {
   "lineno": 795,
   "symbols_in_volume": [
    "astropy.modeling.Fittable2DModel",
    "astropy.modeling.Parameter"
   ]
  },
  "type": "class"
 },
 "photutils.psf.models.IntegratedGaussianPRF.__init__": {
  "data": {
   "lineno": 859,
   "symbols_in_volume": [
    "scipy.special.erf",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.IntegratedGaussianPRF.bounding_box": {
  "data": {
   "lineno": 853,
   "symbols_in_volume": [
    "int",
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.IntegratedGaussianPRF.evaluate": {
  "data": {
   "lineno": 869,
   "symbols_in_volume": [
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "photutils.psf.models.NonNormalizable": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy.utils.exceptions.AstropyWarning"
   ]
  },
  "type": "class"
 },
 "photutils.psf.models.PRFAdapter": {
  "data": {
   "lineno": 879,
   "symbols_in_volume": [
    "astropy.modeling.Fittable2DModel",
    "astropy.modeling.Parameter"
   ]
  },
  "type": "class"
 },
 "photutils.psf.models.PRFAdapter.__init__": {
  "data": {
   "lineno": 920,
   "symbols_in_volume": [
    "numpy.inf",
    "scipy.integrate.dblquad",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.PRFAdapter._integrated_psfmodel": {
  "data": {
   "lineno": 967,
   "symbols_in_volume": [
    "enumerate",
    "numpy.empty_like",
    "scipy.integrate.dblquad",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.PRFAdapter.evaluate": {
  "data": {
   "lineno": 945,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "photutils.psf.models.Parameter": {
  "data": {
   "shadows": "astropy.modeling.Parameter"
  },
  "type": "import"
 },
 "photutils.psf.models.RectBivariateSpline": {
  "data": {
   "shadows": "scipy.interpolate.RectBivariateSpline"
  },
  "type": "import"
 },
 "photutils.psf.models.__all__": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.psf.models.copy": {
  "data": {
   "shadows": "copy"
  },
  "type": "import"
 },
 "photutils.psf.models.dblquad": {
  "data": {
   "shadows": "scipy.integrate.dblquad"
  },
  "type": "import"
 },
 "photutils.psf.models.erf": {
  "data": {
   "shadows": "scipy.special.erf"
  },
  "type": "import"
 },
 "photutils.psf.models.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.psf.models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.models.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.psf.photometry": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.photometry.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.psf.photometry.BasicPSFPhotometry": {
  "data": {
   "lineno": 25
  },
  "type": "class"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.__call__": {
  "data": {
   "lineno": 181
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.__init__": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "astropy.modeling.fitting.LevMarLSQFitter"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry._define_fit_param_names": {
  "data": {
   "lineno": 376,
   "symbols_in_volume": [
    "_extract_psf_fitting_names"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry._get_uncertainties": {
  "data": {
   "lineno": 402,
   "symbols_in_volume": [
    "astropy.table.Column",
    "astropy.table.Table",
    "len",
    "numpy.diag",
    "numpy.empty",
    "numpy.sqrt",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry._model_params2table": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "astropy.table.Column",
    "astropy.table.Table",
    "getattr",
    "numpy.empty",
    "range",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.aperture_radius": {
  "data": {
   "lineno": 158,
   "symbols_in_volume": [
    "ValueError",
    "float",
    "int",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.do_photometry": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "CircularAperture",
    "ValueError",
    "aperture_photometry",
    "astropy.stats.gaussian_sigma_to_fwhm",
    "astropy.table.Table",
    "astropy.table.hstack",
    "astropy.utils.exceptions.AstropyUserWarning",
    "getattr",
    "hasattr",
    "len",
    "photutils.psf.photometry.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.fitshape": {
  "data": {
   "lineno": 132,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "numpy.array",
    "numpy.asarray",
    "tuple"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.get_residual_image": {
  "data": {
   "lineno": 169
  },
  "type": "function"
 },
 "photutils.psf.photometry.BasicPSFPhotometry.nstar": {
  "data": {
   "lineno": 297,
   "symbols_in_volume": [
    "ImportError",
    "astropy.nddata.utils.NoOverlapError",
    "astropy.nddata.utils.overlap_slices",
    "astropy.table.Column",
    "astropy.table.Table",
    "astropy.table.hstack",
    "astropy.table.vstack",
    "get_grouped_psf_model",
    "len",
    "numpy.bool",
    "numpy.indices",
    "numpy.zeros_like",
    "range",
    "subtract_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.Column": {
  "data": {
   "shadows": "astropy.table.Column"
  },
  "type": "import"
 },
 "photutils.psf.photometry.DAOPhotPSFPhotometry": {
  "data": {
   "lineno": 742,
   "symbols_in_volume": [
    "photutils.psf.photometry.IterativelySubtractedPSFPhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.psf.photometry.DAOPhotPSFPhotometry.__init__": {
  "data": {
   "lineno": 848,
   "symbols_in_volume": [
    "DAOGroup",
    "DAOStarFinder",
    "MMMBackground",
    "astropy.modeling.fitting.LevMarLSQFitter",
    "astropy.stats.SigmaClip",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry": {
  "data": {
   "lineno": 475,
   "symbols_in_volume": [
    "photutils.psf.photometry.BasicPSFPhotometry"
   ]
  },
  "type": "class"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry.__init__": {
  "data": {
   "lineno": 559,
   "symbols_in_volume": [
    "astropy.modeling.fitting.LevMarLSQFitter",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry._do_photometry": {
  "data": {
   "lineno": 665,
   "symbols_in_volume": [
    "CircularAperture",
    "aperture_photometry",
    "astropy.table.Column",
    "astropy.table.Table",
    "astropy.table.hstack",
    "astropy.table.vstack",
    "astropy.utils.exceptions.AstropyUserWarning",
    "getattr",
    "len",
    "numpy.int32",
    "numpy.ones",
    "photutils.psf.photometry.warnings",
    "super",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry.do_photometry": {
  "data": {
   "lineno": 599,
   "symbols_in_volume": [
    "astropy.stats.gaussian_sigma_to_fwhm",
    "astropy.table.vstack",
    "hasattr",
    "numpy.int32",
    "numpy.ones",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry.finder": {
  "data": {
   "lineno": 589,
   "symbols_in_volume": [
    "ValueError"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.IterativelySubtractedPSFPhotometry.niters": {
  "data": {
   "lineno": 571,
   "symbols_in_volume": [
    "ValueError",
    "int"
   ]
  },
  "type": "function"
 },
 "photutils.psf.photometry.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.photometry.NoOverlapError": {
  "data": {
   "shadows": "astropy.nddata.utils.NoOverlapError"
  },
  "type": "import"
 },
 "photutils.psf.photometry.SigmaClip": {
  "data": {
   "shadows": "astropy.stats.SigmaClip"
  },
  "type": "import"
 },
 "photutils.psf.photometry.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.photometry.__all__": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.psf.photometry.gaussian_sigma_to_fwhm": {
  "data": {
   "shadows": "astropy.stats.gaussian_sigma_to_fwhm"
  },
  "type": "import"
 },
 "photutils.psf.photometry.hstack": {
  "data": {
   "shadows": "astropy.table.hstack"
  },
  "type": "import"
 },
 "photutils.psf.photometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.photometry.overlap_slices": {
  "data": {
   "shadows": "astropy.nddata.utils.overlap_slices"
  },
  "type": "import"
 },
 "photutils.psf.photometry.vstack": {
  "data": {
   "shadows": "astropy.table.vstack"
  },
  "type": "import"
 },
 "photutils.psf.photometry.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.psf.sandbox": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.sandbox.DiscretePRF": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "astropy.modeling.Fittable2DModel",
    "astropy.modeling.Parameter"
   ]
  },
  "type": "class"
 },
 "photutils.psf.sandbox.DiscretePRF.__init__": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "astropy.modeling.fitting.LevMarLSQFitter",
    "numpy.array",
    "numpy.isnan",
    "range",
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.sandbox.DiscretePRF.create_from_image": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "Exception",
    "TypeError",
    "ValueError",
    "astropy.nddata.utils.extract_array",
    "astropy.nddata.utils.subpixel_indices",
    "astropy.table.Table",
    "classmethod",
    "cls",
    "combine",
    "enumerate",
    "isinstance",
    "len",
    "list",
    "mask_to_mirrored_num",
    "numpy.all",
    "numpy.array",
    "numpy.empty",
    "numpy.int",
    "numpy.iscomplexobj",
    "numpy.isnan",
    "numpy.ma.array",
    "numpy.ma.copy",
    "numpy.ma.dstack",
    "numpy.ma.getdata",
    "numpy.ma.mean",
    "numpy.ma.median",
    "numpy.ma.sum",
    "numpy.ndarray",
    "range",
    "tuple"
   ]
  },
  "type": "function"
 },
 "photutils.psf.sandbox.DiscretePRF.evaluate": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "astropy.nddata.utils.subpixel_indices",
    "int",
    "numpy.logical_or"
   ]
  },
  "type": "function"
 },
 "photutils.psf.sandbox.DiscretePRF.prf_shape": {
  "data": {
   "lineno": 98,
   "symbols_in_volume": [
    "property"
   ]
  },
  "type": "function"
 },
 "photutils.psf.sandbox.Fittable2DModel": {
  "data": {
   "shadows": "astropy.modeling.Fittable2DModel"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.Parameter": {
  "data": {
   "shadows": "astropy.modeling.Parameter"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.Reproject": {
  "data": {
   "lineno": 296
  },
  "type": "class"
 },
 "photutils.psf.sandbox.Reproject.__init__": {
  "data": {
   "lineno": 311
  },
  "type": "function"
 },
 "photutils.psf.sandbox.Reproject._reproject": {
  "data": {
   "lineno": 315,
   "symbols_in_volume": [
    "ValueError",
    "astropy.wcs.WCS",
    "isinstance",
    "photutils.psf.sandbox.gwcs",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "photutils.psf.sandbox.Reproject._reproject._reproject_func": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "forward",
    "inverse"
   ]
  },
  "type": "function"
 },
 "photutils.psf.sandbox.Reproject.to_original": {
  "data": {
   "lineno": 385
  },
  "type": "function"
 },
 "photutils.psf.sandbox.Reproject.to_rectified": {
  "data": {
   "lineno": 365
  },
  "type": "function"
 },
 "photutils.psf.sandbox.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.__all__": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.psf.sandbox.__doctest_requires__": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.psf.sandbox.extract_array": {
  "data": {
   "shadows": "astropy.nddata.utils.extract_array"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.fitswcs": {
  "data": {
   "shadows": "astropy.wcs"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.gwcs": {
  "data": {
   "shadows": "gwcs"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.sandbox.subpixel_indices": {
  "data": {
   "shadows": "astropy.nddata.utils.subpixel_indices"
  },
  "type": "import"
 },
 "photutils.psf.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.tests.test_epsf": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.psf.tests.test_epsf.HAS_SCIPY": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_epsf.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.NumpyRNGContext": {
  "data": {
   "shadows": "astropy.utils.misc.NumpyRNGContext"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.TestEPSFBuild": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "photutils.psf.tests.test_epsf.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.psf.tests.test_epsf.TestEPSFBuild.setup_class": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "astropy.nddata.NDData",
    "astropy.table.Table",
    "astropy.utils.misc.NumpyRNGContext",
    "int",
    "len",
    "make_gaussian_sources_image",
    "numpy.min",
    "numpy.random.uniform",
    "numpy.transpose",
    "numpy.zeros",
    "scipy.spatial.cKDTree",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf.TestEPSFBuild.test_epsf_build": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "EPSFBuilder",
    "epsf_builder",
    "extract_stars",
    "gaussian1d_moments",
    "int",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf.TestEPSFBuild.test_epsf_build_invalid_fitter": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "EPSFBuilder",
    "TypeError",
    "astropy.modeling.fitting.LevMarLSQFitter",
    "photutils.psf.tests.test_epsf.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf.TestEPSFBuild.test_extract_stars": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "extract_stars",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.cKDTree": {
  "data": {
   "shadows": "scipy.spatial.cKDTree"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf_stars": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.psf.tests.test_epsf_stars.HAS_SCIPY": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_epsf_stars.Moffat2D": {
  "data": {
   "shadows": "astropy.modeling.models.Moffat2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf_stars.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf_stars.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf_stars.TestExtractStars": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "photutils.psf.tests.test_epsf_stars.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.psf.tests.test_epsf_stars.TestExtractStars.setup_class": {
  "data": {
   "lineno": 21,
   "symbols_in_volume": [
    "astropy.modeling.models.Moffat2D",
    "astropy.nddata.NDData",
    "astropy.table.Table",
    "m",
    "numpy.mgrid",
    "numpy.zeros",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf_stars.TestExtractStars.test_extract_stars": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "extract_stars",
    "isinstance",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf_stars.TestExtractStars.test_extract_stars_inputs": {
  "data": {
   "lineno": 46,
   "symbols_in_volume": [
    "ValueError",
    "extract_stars",
    "numpy.ones",
    "photutils.psf.tests.test_epsf_stars.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_epsf_stars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf_stars.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_epsf_stars.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.psf.tests.test_groupstars.HAS_SKLEARN": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_groupstars.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_five": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "astropy.table.vstack",
    "daogroup",
    "numpy.arange",
    "numpy.int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_four": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "daogroup",
    "numpy.arange",
    "numpy.hstack",
    "numpy.int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_one": {
  "data": {
   "lineno": 19,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "astropy.table.vstack",
    "daogroup",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.int",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_six": {
  "data": {
   "lineno": 192,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "astropy.table.vstack",
    "daogroup",
    "numpy.arange",
    "numpy.array",
    "numpy.int",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_three": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "astropy.table.vstack",
    "daogroup",
    "numpy.arange",
    "numpy.int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_daogroup_two": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "astropy.table.vstack",
    "daogroup",
    "numpy.arange",
    "numpy.int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_array_equal",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_id_column": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "daogroup",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_id_column_raise_error": {
  "data": {
   "lineno": 259,
   "symbols_in_volume": [
    "DAOGroup",
    "ValueError",
    "astropy.table.Table",
    "daogroup",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt",
    "photutils.psf.tests.test_groupstars.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDAOGROUP.test_isolated_sources": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "DAOGroup",
    "astropy.table.Table",
    "daogroup",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup": {
  "data": {
   "lineno": 272,
   "symbols_in_volume": [
    "photutils.psf.tests.test_groupstars.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_group_stars_one": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "DBSCANGroup",
    "astropy.table.Table",
    "astropy.table.vstack",
    "dbscan",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.int",
    "numpy.ones",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_group_stars_two": {
  "data": {
   "lineno": 291,
   "symbols_in_volume": [
    "DBSCANGroup",
    "astropy.table.Table",
    "astropy.table.vstack",
    "dbscan",
    "numpy.arange",
    "numpy.int",
    "numpy.linspace",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_id_column": {
  "data": {
   "lineno": 325,
   "symbols_in_volume": [
    "DBSCANGroup",
    "astropy.table.Table",
    "dbscan",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_id_column_raise_error": {
  "data": {
   "lineno": 337,
   "symbols_in_volume": [
    "DBSCANGroup",
    "ValueError",
    "astropy.table.Table",
    "dbscan",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt",
    "photutils.psf.tests.test_groupstars.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.TestDBSCANGroup.test_isolated_sources": {
  "data": {
   "lineno": 310,
   "symbols_in_volume": [
    "DBSCANGroup",
    "astropy.table.Table",
    "dbscan",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.sqrt",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_groupstars.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.sklearn.cluster": {
  "data": {
   "shadows": "sklearn.cluster"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_groupstars.vstack": {
  "data": {
   "shadows": "astropy.table.vstack"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.psf.tests.test_models.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.HAS_SCIPY": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_models.Moffat2D": {
  "data": {
   "shadows": "astropy.modeling.models.Moffat2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.NDData": {
  "data": {
   "shadows": "astropy.nddata.NDData"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.TestFittableImageModel": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "photutils.psf.tests.test_models.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.psf.tests.test_models.TestFittableImageModel.setup_class": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestFittableImageModel.test_centering_oversampled": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "FittableImageModel",
    "astropy.modeling.models.Gaussian2D",
    "gm",
    "model_oversampled",
    "model_oversampled.x_0",
    "model_oversampled.y_0",
    "numpy.mgrid",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestFittableImageModel.test_fittable_image_model": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "FittableImageModel",
    "model_nonorm",
    "model_norm",
    "model_norm2",
    "numpy.allclose",
    "numpy.mgrid",
    "numpy.sum",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestFittableImageModel.test_fittable_image_model_oversampling": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "FittableImageModel",
    "model_oversampled",
    "model_wrongsampled",
    "numpy.allclose",
    "numpy.mgrid",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel": {
  "data": {
   "lineno": 103
  },
  "type": "class"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel.setup_class": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "GriddedPSFModel",
    "astropy.modeling.models.Gaussian2D",
    "astropy.nddata.NDData",
    "g",
    "itertools.product",
    "list",
    "numpy.mgrid",
    "numpy.pi",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel.test_gridded_psf_model": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel.test_gridded_psf_model_basic_eval": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "numpy.mgrid",
    "photutils.psf.tests.test_models.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel.test_gridded_psf_model_eval": {
  "data": {
   "lineno": 232,
   "symbols_in_volume": [
    "astropy.units.deg",
    "detect_sources",
    "numpy.ceil",
    "numpy.floor",
    "numpy.int",
    "numpy.mgrid",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "photutils.psf.tests.test_models.pytest",
    "source_properties",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel.test_gridded_psf_model_eval_outside_grid": {
  "data": {
   "lineno": 140,
   "symbols_in_volume": [
    "numpy.mgrid",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_models.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel.test_gridded_psf_model_interp": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_models.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestGriddedPSFModel.test_gridded_psf_model_invalid_inputs": {
  "data": {
   "lineno": 188,
   "symbols_in_volume": [
    "GriddedPSFModel",
    "TypeError",
    "ValueError",
    "astropy.nddata.NDData",
    "numpy.ones",
    "photutils.psf.tests.test_models.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestIntegratedGaussianPRF": {
  "data": {
   "lineno": 277,
   "symbols_in_volume": [
    "photutils.psf.tests.test_models.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.psf.tests.test_models.TestIntegratedGaussianPRF.test_gaussian_psf_integral": {
  "data": {
   "lineno": 293,
   "symbols_in_volume": [
    "IntegratedGaussianPRF",
    "numpy.mgrid",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_models.pytest",
    "psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestIntegratedGaussianPRF.test_subpixel_gauss_psf": {
  "data": {
   "lineno": 282,
   "symbols_in_volume": [
    "IntegratedGaussianPRF",
    "gauss_psf",
    "numpy.mgrid",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_models.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestPRFAdapter": {
  "data": {
   "lineno": 305,
   "symbols_in_volume": [
    "photutils.psf.tests.test_models.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.psf.tests.test_models.TestPRFAdapter.normalize_moffat": {
  "data": {
   "lineno": 307,
   "symbols_in_volume": [
    "numpy.pi"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestPRFAdapter.test_create_eval_prfadapter": {
  "data": {
   "lineno": 313,
   "symbols_in_volume": [
    "PRFAdapter",
    "astropy.modeling.models.Moffat2D",
    "dict",
    "photutils.psf.tests.test_models.pytest",
    "prf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestPRFAdapter.test_prfadapter_integrates": {
  "data": {
   "lineno": 328,
   "symbols_in_volume": [
    "PRFAdapter",
    "astropy.modeling.models.Moffat2D",
    "dict",
    "numpy.meshgrid",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_models.pytest",
    "prf1",
    "scipy.integrate.dblquad"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.TestPRFAdapter.test_prfadapter_sizematch": {
  "data": {
   "lineno": 353,
   "symbols_in_volume": [
    "PRFAdapter",
    "astropy.modeling.models.Moffat2D",
    "dict",
    "numpy.meshgrid",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_models.pytest",
    "prf1",
    "prf2",
    "scipy.integrate.dblquad"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_models.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.dblquad": {
  "data": {
   "shadows": "scipy.integrate.dblquad"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.product": {
  "data": {
   "shadows": "itertools.product"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_models.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.convolution.utils.discretize_model",
    "astropy.modeling.models.Gaussian2D",
    "astropy.table.Table",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros",
    "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_photometry.IMAGE_SIZE",
    "photutils.psf.tests.test_photometry.INTAB",
    "photutils.psf.tests.test_photometry.PARS_TO_OUTPUT_0",
    "photutils.psf.tests.test_photometry.PARS_TO_OUTPUT_1",
    "photutils.psf.tests.test_photometry.PARS_TO_SET_0",
    "photutils.psf.tests.test_photometry.PARS_TO_SET_1",
    "photutils.psf.tests.test_photometry.PSF_SIZE",
    "photutils.psf.tests.test_photometry.WIDE_GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_photometry.WIDE_INTAB",
    "photutils.psf.tests.test_photometry.image",
    "photutils.psf.tests.test_photometry.model",
    "photutils.psf.tests.test_photometry.psf_model",
    "photutils.psf.tests.test_photometry.sigma_psfs",
    "photutils.psf.tests.test_photometry.sources1",
    "photutils.psf.tests.test_photometry.sources2",
    "photutils.psf.tests.test_photometry.sources3",
    "photutils.psf.tests.test_photometry.wide_image"
   ]
  },
  "type": "module"
 },
 "photutils.psf.tests.test_photometry.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.Fittable2DModel": {
  "data": {
   "shadows": "astropy.modeling.Fittable2DModel"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 396
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.HAS_SCIPY": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.IMAGE_SIZE": {
  "data": {
   "lineno": 397
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.INTAB": {
  "data": {
   "lineno": 400
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.Moffat2D": {
  "data": {
   "shadows": "astropy.modeling.models.Moffat2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.PARS_TO_OUTPUT_0": {
  "data": {
   "lineno": 367
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.PARS_TO_OUTPUT_1": {
  "data": {
   "lineno": 370
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.PARS_TO_SET_0": {
  "data": {
   "lineno": 366
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.PARS_TO_SET_1": {
  "data": {
   "lineno": 368
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.PSF_SIZE": {
  "data": {
   "lineno": 395
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.Parameter": {
  "data": {
   "shadows": "astropy.modeling.Parameter"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.SigmaClip": {
  "data": {
   "shadows": "astropy.stats.SigmaClip"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.WIDE_GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 421
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.WIDE_INTAB": {
  "data": {
   "lineno": 422
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.catch_warnings": {
  "data": {
   "shadows": "astropy.tests.helper.catch_warnings"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.discretize_model": {
  "data": {
   "shadows": "astropy.convolution.utils.discretize_model"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.gaussian_sigma_to_fwhm": {
  "data": {
   "shadows": "astropy.stats.gaussian_sigma_to_fwhm"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.image": {
  "data": {
   "lineno": 411
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.make_psf_photometry_objs": {
  "data": {
   "lineno": 33,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "DAOPhotPSFPhotometry",
    "DAOStarFinder",
    "IntegratedGaussianPRF",
    "IterativelySubtractedPSFPhotometry",
    "MMMBackground",
    "astropy.modeling.fitting.LevMarLSQFitter",
    "astropy.stats.gaussian_sigma_to_fwhm"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.model": {
  "data": {
   "lineno": 428
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.psf_model": {
  "data": {
   "lineno": 405
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_photometry.sigma_psfs": {
  "data": {
   "lineno": 74
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.sources1": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.sources2": {
  "data": {
   "lineno": 91
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.sources3": {
  "data": {
   "lineno": 106
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius": {
  "data": {
   "lineno": 332,
   "symbols_in_volume": [
    "PSFModelWithFWHM",
    "basic_phot_obj",
    "basic_phot_obj.aperture_radius",
    "basic_phot_obj.psf_model",
    "make_gaussian_sources_image",
    "make_noise_image",
    "numpy.testing.assert_equal",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs",
    "photutils.psf.tests.test_photometry.pytest",
    "photutils.psf.tests.test_photometry.sources1"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius.PSFModelWithFWHM": {
  "data": {
   "lineno": 348,
   "symbols_in_volume": [
    "astropy.modeling.Fittable2DModel",
    "astropy.modeling.Parameter"
   ]
  },
  "type": "class"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius.PSFModelWithFWHM.__init__": {
  "data": {
   "lineno": 354,
   "symbols_in_volume": [
    "super"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius.PSFModelWithFWHM.evaluate": {
  "data": {
   "lineno": 357
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius_errors": {
  "data": {
   "lineno": 283,
   "symbols_in_volume": [
    "ValueError",
    "numpy.testing.assert_equal",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs",
    "photutils.psf.tests.test_photometry.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_aperture_radius_value_error": {
  "data": {
   "lineno": 488,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "DiscretePRF",
    "ValueError",
    "astropy.table.Table",
    "basic_phot",
    "photutils.psf.tests.test_photometry.image",
    "photutils.psf.tests.test_photometry.pytest",
    "photutils.psf.tests.test_photometry.test_psf",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_define_fit_param_names": {
  "data": {
   "lineno": 374,
   "symbols_in_volume": [
    "IntegratedGaussianPRF",
    "basic_phot_obj",
    "basic_phot_obj._define_fit_param_names",
    "basic_phot_obj._pars_to_output",
    "basic_phot_obj._pars_to_set",
    "basic_phot_obj.psf_model",
    "numpy.testing.assert_equal",
    "photutils.psf.tests.test_photometry.PARS_TO_OUTPUT_0",
    "photutils.psf.tests.test_photometry.PARS_TO_OUTPUT_1",
    "photutils.psf.tests.test_photometry.PARS_TO_SET_0",
    "photutils.psf.tests.test_photometry.PARS_TO_SET_1",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs",
    "photutils.psf.tests.test_photometry.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_finder_errors": {
  "data": {
   "lineno": 295,
   "symbols_in_volume": [
    "DAOGroup",
    "IntegratedGaussianPRF",
    "IterativelySubtractedPSFPhotometry",
    "MMMBackground",
    "ValueError",
    "iter_phot_obj",
    "iter_phot_obj.finder",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs",
    "photutils.psf.tests.test_photometry.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_finder_positions_warning": {
  "data": {
   "lineno": 309,
   "symbols_in_volume": [
    "ValueError",
    "astropy.table.Table",
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyUserWarning",
    "basic_phot_obj",
    "basic_phot_obj.finder",
    "make_gaussian_sources_image",
    "make_noise_image",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs",
    "photutils.psf.tests.test_photometry.pytest",
    "photutils.psf.tests.test_photometry.sources1"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_fitshape_errors": {
  "data": {
   "lineno": 257,
   "symbols_in_volume": [
    "ValueError",
    "numpy.all",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs",
    "photutils.psf.tests.test_photometry.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_niters_errors": {
  "data": {
   "lineno": 240,
   "symbols_in_volume": [
    "ValueError",
    "iter_phot_obj",
    "iter_phot_obj.niters",
    "numpy.testing.assert_equal",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs",
    "photutils.psf.tests.test_photometry.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf": {
  "data": {
   "lineno": 407
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_photometry.test_psf_boundary": {
  "data": {
   "lineno": 471,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "DiscretePRF",
    "astropy.table.Table",
    "basic_phot",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_photometry.image",
    "photutils.psf.tests.test_photometry.pytest",
    "photutils.psf.tests.test_photometry.test_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_boundary_gaussian": {
  "data": {
   "lineno": 507,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "IntegratedGaussianPRF",
    "astropy.table.Table",
    "basic_phot",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_photometry.image",
    "photutils.psf.tests.test_photometry.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_fitting_data_on_edge": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "IntegratedGaussianPRF",
    "basic_phot",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_photometry.WIDE_GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_photometry.WIDE_INTAB",
    "photutils.psf.tests.test_photometry.pytest",
    "photutils.psf.tests.test_photometry.wide_image"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_discrete": {
  "data": {
   "lineno": 434,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "DiscretePRF",
    "basic_phot",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_photometry.INTAB",
    "photutils.psf.tests.test_photometry.image",
    "photutils.psf.tests.test_photometry.pytest",
    "photutils.psf.tests.test_photometry.test_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_gaussian": {
  "data": {
   "lineno": 524,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "IntegratedGaussianPRF",
    "basic_phot",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_photometry.INTAB",
    "photutils.psf.tests.test_photometry.image",
    "photutils.psf.tests.test_photometry.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_gaussian2": {
  "data": {
   "lineno": 540,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "astropy.modeling.models.Gaussian2D",
    "basic_phot",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_photometry.INTAB",
    "photutils.psf.tests.test_photometry.PSF_SIZE",
    "photutils.psf.tests.test_photometry.image",
    "photutils.psf.tests.test_photometry.pytest",
    "prepare_psf_model"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_moffat": {
  "data": {
   "lineno": 563,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "astropy.modeling.models.Moffat2D",
    "basic_phot",
    "numpy.pi",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_photometry.GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_photometry.INTAB",
    "photutils.psf.tests.test_photometry.PSF_SIZE",
    "photutils.psf.tests.test_photometry.image",
    "photutils.psf.tests.test_photometry.pytest",
    "prepare_psf_model"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_niters": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "StdBackgroundRMS",
    "astropy.stats.SigmaClip",
    "bkgrms",
    "iter_phot_obj",
    "iter_phot_obj.get_residual_image",
    "make_gaussian_sources_image",
    "make_noise_image",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs",
    "photutils.psf.tests.test_photometry.pytest",
    "photutils.psf.tests.test_photometry.sigma_psfs",
    "photutils.psf.tests.test_photometry.sources3"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_psf_photometry_oneiter": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "StdBackgroundRMS",
    "astropy.stats.SigmaClip",
    "astropy.table.Table",
    "bkgrms",
    "make_gaussian_sources_image",
    "make_noise_image",
    "numpy.mean",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_array_equal",
    "phot_proc",
    "phot_proc.get_residual_image",
    "phot_proc.psf_model.x_0.fixed",
    "phot_proc.psf_model.y_0.fixed",
    "photutils.psf.tests.test_photometry.make_psf_photometry_objs",
    "photutils.psf.tests.test_photometry.pytest",
    "photutils.psf.tests.test_photometry.sigma_psfs",
    "photutils.psf.tests.test_photometry.sources1",
    "photutils.psf.tests.test_photometry.sources2"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.test_tune_coordinates": {
  "data": {
   "lineno": 448,
   "symbols_in_volume": [
    "BasicPSFPhotometry",
    "DAOGroup",
    "DiscretePRF",
    "basic_phot",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_photometry.INTAB",
    "photutils.psf.tests.test_photometry.image",
    "photutils.psf.tests.test_photometry.pytest",
    "photutils.psf.tests.test_photometry.test_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_photometry.wide_image": {
  "data": {
   "lineno": 424
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox": {
  "data": {
   "symbols_in_volume": [
    "astropy.convolution.utils.discretize_model",
    "astropy.modeling.models.Gaussian2D",
    "astropy.table.Table",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros",
    "photutils.psf.tests.test_sandbox.GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_sandbox.IMAGE_SIZE",
    "photutils.psf.tests.test_sandbox.INTAB",
    "photutils.psf.tests.test_sandbox.PSF_SIZE",
    "photutils.psf.tests.test_sandbox.WIDE_GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_sandbox.WIDE_INTAB",
    "photutils.psf.tests.test_sandbox.image",
    "photutils.psf.tests.test_sandbox.model",
    "photutils.psf.tests.test_sandbox.psf_model",
    "photutils.psf.tests.test_sandbox.wide_image"
   ]
  },
  "type": "module"
 },
 "photutils.psf.tests.test_sandbox.GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.IMAGE_SIZE": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.INTAB": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.PSF_SIZE": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.WIDE_GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.WIDE_INTAB": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.discretize_model": {
  "data": {
   "shadows": "astropy.convolution.utils.discretize_model"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.image": {
  "data": {
   "lineno": 30
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.model": {
  "data": {
   "lineno": 47
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.psf_model": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_sandbox.test_create_prf_excessive_subsampling": {
  "data": {
   "lineno": 102,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "photutils.psf.tests.test_sandbox.INTAB",
    "photutils.psf.tests.test_sandbox.PSF_SIZE",
    "photutils.psf.tests.test_sandbox.image",
    "photutils.psf.tests.test_sandbox.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox.test_create_prf_flux": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_sandbox.INTAB",
    "photutils.psf.tests.test_sandbox.PSF_SIZE",
    "photutils.psf.tests.test_sandbox.image",
    "photutils.psf.tests.test_sandbox.test_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox.test_create_prf_mean": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "list",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_sandbox.INTAB",
    "photutils.psf.tests.test_sandbox.PSF_SIZE",
    "photutils.psf.tests.test_sandbox.image",
    "photutils.psf.tests.test_sandbox.test_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox.test_create_prf_median": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_sandbox.INTAB",
    "photutils.psf.tests.test_sandbox.PSF_SIZE",
    "photutils.psf.tests.test_sandbox.image",
    "photutils.psf.tests.test_sandbox.test_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox.test_create_prf_nan": {
  "data": {
   "lineno": 77,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.isnan",
    "numpy.nan",
    "photutils.psf.tests.test_sandbox.INTAB",
    "photutils.psf.tests.test_sandbox.PSF_SIZE",
    "photutils.psf.tests.test_sandbox.image"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_sandbox.test_psf": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_sandbox.wide_image": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.convolution.utils.discretize_model",
    "astropy.modeling.models.Gaussian2D",
    "astropy.table.Table",
    "numpy.pi",
    "numpy.sqrt",
    "numpy.zeros",
    "photutils.psf.tests.test_utils.GAUSSIAN_WIDTH",
    "photutils.psf.tests.test_utils.IMAGE_SIZE",
    "photutils.psf.tests.test_utils.INTAB",
    "photutils.psf.tests.test_utils.PSF_SIZE",
    "photutils.psf.tests.test_utils.image",
    "photutils.psf.tests.test_utils.model",
    "photutils.psf.tests.test_utils.psf_model"
   ]
  },
  "type": "module"
 },
 "photutils.psf.tests.test_utils.GAUSSIAN_WIDTH": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.Gaussian2D": {
  "data": {
   "shadows": "astropy.modeling.models.Gaussian2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.HAS_SCIPY": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.IMAGE_SIZE": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.INTAB": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.LevMarLSQFitter": {
  "data": {
   "shadows": "astropy.modeling.fitting.LevMarLSQFitter"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.Moffat2D": {
  "data": {
   "shadows": "astropy.modeling.models.Moffat2D"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.PSF_SIZE": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.discretize_model": {
  "data": {
   "shadows": "astropy.convolution.utils.discretize_model"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.image": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.model": {
  "data": {
   "lineno": 42
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.moffimg": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "astropy.modeling.models.Moffat2D",
    "mof",
    "numpy.linspace",
    "numpy.meshgrid",
    "numpy.pi",
    "photutils.psf.tests.test_utils.pytest",
    "scipy.integrate.dblquad"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.psf_model": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.psf.tests.test_utils.test_get_grouped_psf_model": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "IntegratedGaussianPRF",
    "astropy.table.Table",
    "get_grouped_psf_model",
    "photutils.psf.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_utils.test_moffat_fitting": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "astropy.modeling.fitting.LevMarLSQFitter",
    "astropy.modeling.models.Moffat2D",
    "f",
    "mof",
    "mof.amplitude",
    "mof.parameters",
    "numpy.testing.assert_allclose",
    "photutils.psf.tests.test_utils.moffimg",
    "photutils.psf.tests.test_utils.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_utils.test_prepare_psf_model": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "astropy.modeling.fitting.LevMarLSQFitter",
    "astropy.modeling.models.Moffat2D",
    "dict",
    "f",
    "getattr",
    "mof",
    "mof.amplitude",
    "numpy.abs",
    "photutils.psf.tests.test_utils.moffimg",
    "photutils.psf.tests.test_utils.pytest",
    "prepare_psf_model"
   ]
  },
  "type": "function"
 },
 "photutils.psf.tests.test_utils.test_psf": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "photutils.psf.tests.test_utils.test_subtract_psf": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "DiscretePRF",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "photutils.psf.tests.test_utils.INTAB",
    "photutils.psf.tests.test_utils.image",
    "photutils.psf.tests.test_utils.pytest",
    "photutils.psf.tests.test_utils.test_psf",
    "subtract_psf"
   ]
  },
  "type": "function"
 },
 "photutils.psf.utils": {
  "data": {},
  "type": "module"
 },
 "photutils.psf.utils.Table": {
  "data": {
   "shadows": "astropy.table.Table"
  },
  "type": "import"
 },
 "photutils.psf.utils.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.psf.utils._call_fitter": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "fitter",
    "numpy.all"
   ]
  },
  "type": "function"
 },
 "photutils.psf.utils._extract_psf_fitting_names": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "ValueError",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "photutils.psf.utils.add_array": {
  "data": {
   "shadows": "astropy.nddata.utils.add_array"
  },
  "type": "import"
 },
 "photutils.psf.utils.extract_array": {
  "data": {
   "shadows": "astropy.nddata.utils.extract_array"
  },
  "type": "import"
 },
 "photutils.psf.utils.get_grouped_psf_model": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "setattr"
   ]
  },
  "type": "function"
 },
 "photutils.psf.utils.integrate": {
  "data": {
   "shadows": "scipy.integrate"
  },
  "type": "import"
 },
 "photutils.psf.utils.models": {
  "data": {
   "shadows": "astropy.modeling.models"
  },
  "type": "import"
 },
 "photutils.psf.utils.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.psf.utils.prepare_psf_model": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "astropy.modeling.models.Const2D",
    "astropy.modeling.models.Identity",
    "astropy.modeling.models.Shift",
    "getattr",
    "numpy.inf",
    "scipy.integrate.dblquad"
   ]
  },
  "type": "function"
 },
 "photutils.psf.utils.subtract_psf": {
  "data": {
   "lineno": 190,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.utils.add_array",
    "astropy.nddata.utils.extract_array",
    "astropy.table.Table",
    "getattr",
    "hasattr",
    "numpy.indices",
    "photutils.psf.utils._extract_psf_fitting_names",
    "psf"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.core": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.core.Segment": {
  "data": {
   "lineno": 18
  },
  "type": "class"
 },
 "photutils.segmentation.core.Segment.__array__": {
  "data": {
   "lineno": 75
  },
  "type": "function"
 },
 "photutils.segmentation.core.Segment.__init__": {
  "data": {
   "lineno": 41
  },
  "type": "function"
 },
 "photutils.segmentation.core.Segment.__repr__": {
  "data": {
   "lineno": 59
  },
  "type": "function"
 },
 "photutils.segmentation.core.Segment.__str__": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "getattr"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.Segment.bbox": {
  "data": {
   "lineno": 83,
   "symbols_in_volume": [
    "BoundingBox",
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.Segment.data": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.copy"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.Segment.make_cutout": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "ValueError",
    "numpy.asanyarray",
    "numpy.ma.masked_array"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage": {
  "data": {
   "lineno": 123
  },
  "type": "class"
 },
 "photutils.segmentation.core.SegmentationImage.__array__": {
  "data": {
   "lineno": 191
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.__getitem__": {
  "data": {
   "lineno": 138
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.__init__": {
  "data": {
   "lineno": 135,
   "symbols_in_volume": [
    "numpy.asanyarray",
    "numpy.int"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.__iter__": {
  "data": {
   "lineno": 141
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage._labels": {
  "data": {
   "lineno": 213,
   "symbols_in_volume": [
    "numpy.unique",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage._reset_lazy_properties": {
  "data": {
   "lineno": 185,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.area": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "astropy.utils.deprecated",
    "numpy.atleast_1d"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.areas": {
  "data": {
   "lineno": 300,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.bincount"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.check_label": {
  "data": {
   "lineno": 401,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.check_labels": {
  "data": {
   "lineno": 370,
   "symbols_in_volume": [
    "ValueError",
    "len",
    "numpy.atleast_1d",
    "numpy.setdiff1d",
    "numpy.where",
    "set",
    "tuple"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.cmap": {
  "data": {
   "lineno": 435,
   "symbols_in_volume": [
    "matplotlib.colors.hex2color",
    "random_cmap"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.copy": {
  "data": {
   "lineno": 363,
   "symbols_in_volume": [
    "copy.deepcopy"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.data": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "ValueError",
    "numpy.min"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.data_ma": {
  "data": {
   "lineno": 204,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.ma.masked_where"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.data_masked": {
  "data": {
   "lineno": 199,
   "symbols_in_volume": [
    "astropy.utils.deprecated",
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.is_consecutive": {
  "data": {
   "lineno": 340,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.is_sequential": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "astropy.utils.deprecated",
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.keep_labels": {
  "data": {
   "lineno": 597,
   "symbols_in_volume": [
    "list",
    "numpy.atleast_1d",
    "set"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.labels": {
  "data": {
   "lineno": 261,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.max": {
  "data": {
   "lineno": 273,
   "symbols_in_volume": [
    "astropy.utils.deprecated",
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.max_label": {
  "data": {
   "lineno": 278,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.max"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.missing_labels": {
  "data": {
   "lineno": 352,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "numpy.array",
    "numpy.insert",
    "range",
    "set",
    "sorted"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.nlabels": {
  "data": {
   "lineno": 267,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.outline_segments": {
  "data": {
   "lineno": 464,
   "symbols_in_volume": [
    "numpy.ma.masked_where",
    "skimage.segmentation.find_boundaries"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.relabel": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "numpy.atleast_1d",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.relabel_consecutive": {
  "data": {
   "lineno": 557,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "numpy.int",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.relabel_sequential": {
  "data": {
   "lineno": 553,
   "symbols_in_volume": [
    "astropy.utils.deprecated"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.remove_border_labels": {
  "data": {
   "lineno": 703,
   "symbols_in_volume": [
    "ValueError",
    "min",
    "numpy.bool",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.remove_labels": {
  "data": {
   "lineno": 650
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.remove_masked_labels": {
  "data": {
   "lineno": 772,
   "symbols_in_volume": [
    "ValueError",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.segments": {
  "data": {
   "lineno": 145,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "enumerate",
    "photutils.segmentation.core.Segment"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.shape": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.SegmentationImage.slices": {
  "data": {
   "lineno": 284,
   "symbols_in_volume": [
    "astropy.utils.lazyproperty",
    "scipy.ndimage.find_objects"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.core.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.segmentation.core.__doctest_requires__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.segmentation.core.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "photutils.segmentation.core.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "photutils.segmentation.core.deprecated": {
  "data": {
   "shadows": "astropy.utils.deprecated"
  },
  "type": "import"
 },
 "photutils.segmentation.core.find_boundaries": {
  "data": {
   "shadows": "skimage.segmentation.find_boundaries"
  },
  "type": "import"
 },
 "photutils.segmentation.core.find_objects": {
  "data": {
   "shadows": "scipy.ndimage.find_objects"
  },
  "type": "import"
 },
 "photutils.segmentation.core.lazyproperty": {
  "data": {
   "shadows": "astropy.utils.lazyproperty"
  },
  "type": "import"
 },
 "photutils.segmentation.core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.deblend.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.__all__": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.segmentation.deblend._deblend_source": {
  "data": {
   "lineno": 149,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "astropy.utils.exceptions.AstropyUserWarning",
    "bool",
    "detect_sources",
    "float",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.nanmax",
    "numpy.nanmin",
    "numpy.nansum",
    "numpy.unique",
    "numpy.where",
    "photutils.segmentation.deblend.warnings",
    "scipy.ndimage.generate_binary_structure",
    "scipy.ndimage.label",
    "skimage.morphology.watershed"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.deblend.deblend_sources": {
  "data": {
   "lineno": 17,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "bool",
    "copy.deepcopy",
    "filter_data",
    "isinstance",
    "numpy.array_equal",
    "numpy.atleast_1d",
    "numpy.copy",
    "photutils.segmentation.deblend._deblend_source"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.deblend.deepcopy": {
  "data": {
   "shadows": "copy.deepcopy"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.segmentation.deblend.watershed": {
  "data": {
   "shadows": "skimage.morphology.watershed"
  },
  "type": "import"
 },
 "photutils.segmentation.detect": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.detect.Gaussian2DKernel": {
  "data": {
   "shadows": "astropy.convolution.Gaussian2DKernel"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.__all__": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.segmentation.detect.detect_sources": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "enumerate",
    "filter_data",
    "int",
    "numpy.count_nonzero",
    "scipy.ndimage.find_objects",
    "scipy.ndimage.generate_binary_structure",
    "scipy.ndimage.label"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.detect.gaussian_fwhm_to_sigma": {
  "data": {
   "shadows": "astropy.stats.gaussian_fwhm_to_sigma"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.make_source_mask": {
  "data": {
   "lineno": 162,
   "symbols_in_volume": [
    "astropy.convolution.Gaussian2DKernel",
    "astropy.stats.gaussian_fwhm_to_sigma",
    "detect_threshold",
    "numpy.bool",
    "numpy.ones",
    "photutils.segmentation.detect.detect_sources",
    "scipy.ndimage.binary_dilation"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.detect.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "photutils.segmentation.detect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.segmentation.tests.test_core": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.segmentation.tests.test_core.HAS_SCIPY": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_core.HAS_SKIMAGE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "photutils.segmentation.tests.test_core.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.setup_class": {
  "data": {
   "lineno": 25,
   "symbols_in_volume": [
    "SegmentationImage"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_areas": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_array": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_check_labels": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "photutils.segmentation.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_cmap": {
  "data": {
   "lineno": 129,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_copy": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "SegmentationImage"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_data_ma": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "isinstance",
    "numpy.ma.MaskedArray",
    "numpy.ma.count",
    "numpy.ma.count_masked"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_invalid_label": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "photutils.segmentation.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_invalid_label_array": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "ValueError",
    "photutils.segmentation.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_is_consecutive": {
  "data": {
   "lineno": 116
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_keep_labels": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "SegmentationImage",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_keep_labels_relabel": {
  "data": {
   "lineno": 200,
   "symbols_in_volume": [
    "SegmentationImage",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_labels": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_max_label": {
  "data": {
   "lineno": 109
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_missing_labels": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_negative_data": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "numpy.arange",
    "photutils.segmentation.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_nlabels": {
  "data": {
   "lineno": 106
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_outline_segments": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "SegmentationImage",
    "int",
    "numpy.copy",
    "numpy.testing.assert_allclose",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_outline_segments_masked_background": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "SegmentationImage",
    "int",
    "isinstance",
    "numpy.copy",
    "numpy.ma.MaskedArray",
    "numpy.ma.count",
    "numpy.ma.count_masked",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_relabel": {
  "data": {
   "lineno": 153,
   "symbols_in_volume": [
    "SegmentationImage",
    "len",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_relabel_consecutive": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "SegmentationImage",
    "len",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "photutils.segmentation.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_relabel_consecutive_start_invalid": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "photutils.segmentation.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_border_labels": {
  "data": {
   "lineno": 233,
   "symbols_in_volume": [
    "SegmentationImage",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_border_labels_border_width": {
  "data": {
   "lineno": 244,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "photutils.segmentation.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_labels": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "SegmentationImage",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_labels_relabel": {
  "data": {
   "lineno": 222,
   "symbols_in_volume": [
    "SegmentationImage",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_masked_labels": {
  "data": {
   "lineno": 249,
   "symbols_in_volume": [
    "SegmentationImage",
    "numpy.array",
    "numpy.bool",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_masked_labels_without_partial_overlap": {
  "data": {
   "lineno": 262,
   "symbols_in_volume": [
    "SegmentationImage",
    "numpy.array",
    "numpy.bool",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_remove_masked_segments_mask_shape": {
  "data": {
   "lineno": 275,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "numpy.bool",
    "numpy.ones",
    "numpy.zeros",
    "photutils.segmentation.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_segment_data": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_segment_make_cutout": {
  "data": {
   "lineno": 90,
   "symbols_in_volume": [
    "numpy.ma.is_masked",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_segment_make_cutout_input": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "numpy.arange",
    "photutils.segmentation.tests.test_core.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_segment_repr_str": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "repr",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.TestSegmentationImage.test_segments": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "enumerate",
    "isinstance",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_core.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_core.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.segmentation.tests.test_deblend.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.HAS_SCIPY": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_deblend.HAS_SKIMAGE": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources": {
  "data": {
   "lineno": 28,
   "symbols_in_volume": [
    "photutils.segmentation.tests.test_deblend.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.setup_class": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D",
    "detect_sources",
    "g1",
    "g2",
    "g3",
    "numpy.mgrid"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_connectivity": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "SegmentationImage",
    "ValueError",
    "deblend_sources",
    "numpy.zeros",
    "numpy.zeros_like",
    "photutils.segmentation.tests.test_deblend.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_constant_source": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "deblend_sources",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_data_nan": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "deblend_sources",
    "numpy.nan"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_multiple_sources": {
  "data": {
   "lineno": 57,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D",
    "deblend_sources",
    "detect_sources",
    "g4",
    "g5",
    "g6",
    "g7",
    "len"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_multiple_sources_with_neighbor": {
  "data": {
   "lineno": 75,
   "symbols_in_volume": [
    "astropy.modeling.models.Gaussian2D",
    "deblend_sources",
    "detect_sources",
    "g1",
    "g2",
    "g3"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_sources": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "deblend_sources",
    "len",
    "numpy.nonzero",
    "numpy.sum",
    "numpy.testing.assert_allclose",
    "photutils.segmentation.tests.test_deblend.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_sources_norelabel": {
  "data": {
   "lineno": 87,
   "symbols_in_volume": [
    "deblend_sources",
    "len",
    "numpy.nonzero",
    "numpy.testing.assert_allclose",
    "photutils.segmentation.tests.test_deblend.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_sources_segm_array": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "deblend_sources"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_deblend_three_sources": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "deblend_sources",
    "numpy.nonzero",
    "numpy.testing.assert_allclose",
    "photutils.segmentation.tests.test_deblend.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_invalid_connectivity": {
  "data": {
   "lineno": 125,
   "symbols_in_volume": [
    "ValueError",
    "deblend_sources",
    "photutils.segmentation.tests.test_deblend.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_invalid_contrast": {
  "data": {
   "lineno": 116,
   "symbols_in_volume": [
    "ValueError",
    "deblend_sources",
    "photutils.segmentation.tests.test_deblend.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_invalid_mode": {
  "data": {
   "lineno": 120,
   "symbols_in_volume": [
    "ValueError",
    "deblend_sources",
    "photutils.segmentation.tests.test_deblend.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_invalid_nlevels": {
  "data": {
   "lineno": 112,
   "symbols_in_volume": [
    "ValueError",
    "deblend_sources",
    "photutils.segmentation.tests.test_deblend.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_segment_img_badshape": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "ValueError",
    "deblend_sources",
    "numpy.zeros",
    "photutils.segmentation.tests.test_deblend.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_source_with_negval": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyUserWarning",
    "deblend_sources",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.TestDeblendSources.test_source_zero_min": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "deblend_sources",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_deblend.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.catch_warnings": {
  "data": {
   "shadows": "astropy.tests.helper.catch_warnings"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.models": {
  "data": {
   "shadows": "astropy.modeling.models"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_deblend.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.segmentation.tests.test_detect.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.Gaussian2DKernel": {
  "data": {
   "shadows": "astropy.convolution.Gaussian2DKernel"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.HAS_SCIPY": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "photutils.segmentation.tests.test_detect.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.setup_class": {
  "data": {
   "lineno": 24,
   "symbols_in_volume": [
    "astropy.convolution.Gaussian2DKernel",
    "numpy.array",
    "numpy.float",
    "numpy.log",
    "numpy.sqrt"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_4connectivity": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.diag",
    "numpy.eye",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_8connectivity": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.eye",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_basic_filter_kernel": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_connectivity_invalid": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "detect_sources",
    "photutils.segmentation.tests.test_detect.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_detection": {
  "data": {
   "lineno": 35,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_filter_kernel": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_filter_kernel_array": {
  "data": {
   "lineno": 136,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.ones",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_mask": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "bool",
    "detect_sources",
    "numpy.zeros",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_mask_shape": {
  "data": {
   "lineno": 163,
   "symbols_in_volume": [
    "ValueError",
    "detect_sources",
    "numpy.ones",
    "photutils.segmentation.tests.test_detect.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_npixels": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.arange",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_npixels_negative": {
  "data": {
   "lineno": 124,
   "symbols_in_volume": [
    "ValueError",
    "detect_sources",
    "photutils.segmentation.tests.test_detect.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_npixels_nonint": {
  "data": {
   "lineno": 118,
   "symbols_in_volume": [
    "ValueError",
    "detect_sources",
    "photutils.segmentation.tests.test_detect.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_small_sources": {
  "data": {
   "lineno": 41,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_unnormalized_filter_kernel": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "astropy.tests.helper.catch_warnings",
    "astropy.utils.exceptions.AstropyUserWarning",
    "detect_sources",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_zerodet": {
  "data": {
   "lineno": 86,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestDetectSources.test_zerothresh": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "detect_sources",
    "numpy.testing.assert_array_equal"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestMakeSourceMask": {
  "data": {
   "lineno": 168,
   "symbols_in_volume": [
    "photutils.segmentation.tests.test_detect.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_detect.TestMakeSourceMask.setup_class": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "make_4gaussians_image"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestMakeSourceMask.test_dilate_size": {
  "data": {
   "lineno": 173,
   "symbols_in_volume": [
    "make_source_mask",
    "numpy.count_nonzero"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.TestMakeSourceMask.test_kernel": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "astropy.convolution.Gaussian2DKernel",
    "astropy.stats.gaussian_fwhm_to_sigma",
    "make_source_mask",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_detect.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.assert_array_equal": {
  "data": {
   "shadows": "numpy.testing.assert_array_equal"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.catch_warnings": {
  "data": {
   "shadows": "astropy.tests.helper.catch_warnings"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.gaussian_fwhm_to_sigma": {
  "data": {
   "shadows": "astropy.stats.gaussian_fwhm_to_sigma"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_detect.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "astropy.modeling.models.Gaussian2D",
    "numpy.int",
    "numpy.mgrid",
    "numpy.pi",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.MAJOR_SIG",
    "photutils.segmentation.tests.test_properties.MINOR_SIG",
    "photutils.segmentation.tests.test_properties.THETA",
    "photutils.segmentation.tests.test_properties.THRESHOLD",
    "photutils.segmentation.tests.test_properties.XCEN",
    "photutils.segmentation.tests.test_properties.YCEN",
    "photutils.segmentation.tests.test_properties.g"
   ]
  },
  "type": "module"
 },
 "photutils.segmentation.tests.test_properties.BACKGRD_VALS": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.ERR_VALS": {
  "data": {
   "lineno": 43
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.Gaussian2DKernel": {
  "data": {
   "shadows": "astropy.convolution.Gaussian2DKernel"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.HAS_SCIPY": {
  "data": {
   "lineno": 23
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.HAS_SKIMAGE": {
  "data": {
   "lineno": 29
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.IMAGE": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.MAJOR_SIG": {
  "data": {
   "lineno": 34
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.MINOR_SIG": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.QTable": {
  "data": {
   "shadows": "astropy.table.QTable"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.SEGM": {
  "data": {
   "lineno": 41
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.THETA": {
  "data": {
   "lineno": 36
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.THRESHOLD": {
  "data": {
   "lineno": 40
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog": {
  "data": {
   "lineno": 327,
   "symbols_in_volume": [
    "photutils.segmentation.tests.test_properties.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_basic": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "SourceCatalog",
    "len",
    "numpy.arange",
    "numpy.zeros",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_inputs": {
  "data": {
   "lineno": 342,
   "symbols_in_volume": [
    "SourceCatalog",
    "ValueError",
    "len",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "photutils.segmentation.tests.test_properties.pytest",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_table": {
  "data": {
   "lineno": 351,
   "symbols_in_volume": [
    "astropy.table.QTable",
    "isinstance",
    "len",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_table_empty_props": {
  "data": {
   "lineno": 380,
   "symbols_in_volume": [
    "ValueError",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "photutils.segmentation.tests.test_properties.pytest",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_table_exclude": {
  "data": {
   "lineno": 371,
   "symbols_in_volume": [
    "KeyError",
    "astropy.table.QTable",
    "isinstance",
    "len",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "photutils.segmentation.tests.test_properties.pytest",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_table_include": {
  "data": {
   "lineno": 357,
   "symbols_in_volume": [
    "astropy.table.QTable",
    "isinstance",
    "len",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_table_include_invalidname": {
  "data": {
   "lineno": 365,
   "symbols_in_volume": [
    "AttributeError",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "photutils.segmentation.tests.test_properties.pytest",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_table_no_wcs": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceCatalog.test_table_wcs": {
  "data": {
   "lineno": 385,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.wcs.WCS",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "photutils.segmentation.tests.test_properties.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_label_invalid": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "SourceProperties",
    "ValueError",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "photutils.segmentation.tests.test_properties.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_label_missing": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "SourceProperties",
    "ValueError",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "photutils.segmentation.tests.test_properties.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_nowcs": {
  "data": {
   "lineno": 80,
   "symbols_in_volume": [
    "SourceProperties",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_segment_shape": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "SourceProperties",
    "ValueError",
    "numpy.zeros",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_to_table": {
  "data": {
   "lineno": 88,
   "symbols_in_volume": [
    "SourceProperties",
    "astropy.table.QTable",
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.pix",
    "isinstance",
    "len",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourceProperties.test_wcs": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "SourceProperties",
    "astropy.wcs.WCS",
    "numpy.cos",
    "numpy.pi",
    "numpy.sin",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction": {
  "data": {
   "lineno": 128,
   "symbols_in_volume": [
    "photutils.segmentation.tests.test_properties.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_cutout_shapes": {
  "data": {
   "lineno": 194,
   "symbols_in_volume": [
    "getattr",
    "numpy.ones_like",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_data_allzero": {
  "data": {
   "lineno": 237,
   "symbols_in_volume": [
    "getattr",
    "numpy.isnan",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_data_nan": {
  "data": {
   "lineno": 314,
   "symbols_in_volume": [
    "SegmentationImage",
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.pix",
    "int",
    "numpy.nan",
    "numpy.ones",
    "numpy.zeros",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_filtering": {
  "data": {
   "lineno": 280,
   "symbols_in_volume": [
    "astropy.convolution.Gaussian2DKernel",
    "numpy.log",
    "numpy.sqrt",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_filtering_kernel": {
  "data": {
   "lineno": 296,
   "symbols_in_volume": [
    "astropy.convolution.Gaussian2DKernel",
    "numpy.log",
    "numpy.sqrt",
    "numpy.zeros",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_make_cutout": {
  "data": {
   "lineno": 205,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "photutils.segmentation.tests.test_properties.pytest",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_mask": {
  "data": {
   "lineno": 253,
   "symbols_in_volume": [
    "numpy.bool",
    "numpy.int",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "numpy.zeros_like",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_mask_nomask": {
  "data": {
   "lineno": 266,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "bool",
    "numpy.ma.nomask",
    "numpy.testing.assert_allclose",
    "numpy.zeros",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_properties": {
  "data": {
   "lineno": 131,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.pix",
    "astropy.units.rad",
    "astropy.utils.misc.isiterable",
    "getattr",
    "len",
    "numpy.testing.assert_allclose",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.MAJOR_SIG",
    "photutils.segmentation.tests.test_properties.MINOR_SIG",
    "photutils.segmentation.tests.test_properties.SEGM",
    "photutils.segmentation.tests.test_properties.THETA",
    "photutils.segmentation.tests.test_properties.THRESHOLD",
    "photutils.segmentation.tests.test_properties.XCEN",
    "photutils.segmentation.tests.test_properties.YCEN",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_properties_background_notnone": {
  "data": {
   "lineno": 177,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_properties_background_units": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "astropy.units.uJy",
    "numpy.testing.assert_allclose",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_properties_error_background_none": {
  "data": {
   "lineno": 189,
   "symbols_in_volume": [
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_scalar_error": {
  "data": {
   "lineno": 245,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "numpy.ones_like",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_segmentation_inputs": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "astropy.tests.helper.assert_quantity_allclose",
    "astropy.units.pix",
    "astropy.units.rad",
    "list",
    "numpy.ones_like",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "photutils.segmentation.tests.test_properties.BACKGRD_VALS",
    "photutils.segmentation.tests.test_properties.ERR_VALS",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.MAJOR_SIG",
    "photutils.segmentation.tests.test_properties.MINOR_SIG",
    "photutils.segmentation.tests.test_properties.SEGM",
    "photutils.segmentation.tests.test_properties.THETA",
    "photutils.segmentation.tests.test_properties.THRESHOLD",
    "photutils.segmentation.tests.test_properties.XCEN",
    "photutils.segmentation.tests.test_properties.YCEN",
    "photutils.segmentation.tests.test_properties.itertools",
    "photutils.segmentation.tests.test_properties.pytest",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunction.test_single_pixel_segment": {
  "data": {
   "lineno": 274,
   "symbols_in_volume": [
    "numpy.zeros_like",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "photutils.segmentation.tests.test_properties.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_background_shape": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "photutils.segmentation.tests.test_properties.pytest",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_error_shape": {
  "data": {
   "lineno": 104,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "photutils.segmentation.tests.test_properties.pytest",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_invalidlabels": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "len",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_labels": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_mask_shape": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.SEGM",
    "photutils.segmentation.tests.test_properties.pytest",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.TestSourcePropertiesFunctionInputs.test_segment_shape": {
  "data": {
   "lineno": 99,
   "symbols_in_volume": [
    "ValueError",
    "numpy.zeros",
    "photutils.segmentation.tests.test_properties.IMAGE",
    "photutils.segmentation.tests.test_properties.pytest",
    "source_properties"
   ]
  },
  "type": "function"
 },
 "photutils.segmentation.tests.test_properties.WCS": {
  "data": {
   "shadows": "astropy.wcs"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.XCEN": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.YCEN": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.assert_quantity_allclose": {
  "data": {
   "shadows": "astropy.tests.helper.assert_quantity_allclose"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.g": {
  "data": {
   "lineno": 37
  },
  "type": "constant"
 },
 "photutils.segmentation.tests.test_properties.isiterable": {
  "data": {
   "shadows": "astropy.utils.misc.isiterable"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.itertools": {
  "data": {
   "shadows": "itertools"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.models": {
  "data": {
   "shadows": "astropy.modeling.models"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.skimage": {
  "data": {
   "shadows": "skimage"
  },
  "type": "import"
 },
 "photutils.segmentation.tests.test_properties.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "photutils.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.tests.setup_package": {
  "data": {},
  "type": "module"
 },
 "photutils.tests.setup_package.get_package_data": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "photutils.tests.setup_package.paths"
   ]
  },
  "type": "function"
 },
 "photutils.tests.setup_package.paths": {
  "data": {
   "lineno": 5
  },
  "type": "constant"
 },
 "photutils.utils": {
  "data": {},
  "type": "module"
 },
 "photutils.utils._moments": {
  "data": {},
  "type": "module"
 },
 "photutils.utils._moments.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "photutils.utils._moments._moments": {
  "data": {
   "lineno": 47,
   "symbols_in_volume": [
    "photutils.utils._moments._moments_central"
   ]
  },
  "type": "function"
 },
 "photutils.utils._moments._moments_central": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "ValueError",
    "centroid_com",
    "float",
    "numpy.arange",
    "numpy.asarray",
    "numpy.dot",
    "numpy.ogrid",
    "numpy.transpose",
    "slice"
   ]
  },
  "type": "function"
 },
 "photutils.utils._moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.check_random_state": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.check_random_state.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "photutils.utils.check_random_state.check_random_state": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "isinstance",
    "numpy.integer",
    "numpy.random",
    "numpy.random.RandomState",
    "numpy.random.mtrand._rand",
    "photutils.utils.check_random_state.numbers"
   ]
  },
  "type": "function"
 },
 "photutils.utils.check_random_state.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.check_random_state.numbers": {
  "data": {
   "shadows": "numbers"
  },
  "type": "import"
 },
 "photutils.utils.colormaps": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.colormaps.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "photutils.utils.colormaps.colors": {
  "data": {
   "shadows": "matplotlib.colors"
  },
  "type": "import"
 },
 "photutils.utils.colormaps.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.colormaps.random_cmap": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "check_random_state",
    "matplotlib.colors.ListedColormap",
    "matplotlib.colors.hsv_to_rgb",
    "numpy.dstack",
    "numpy.squeeze"
   ]
  },
  "type": "function"
 },
 "photutils.utils.convolution": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.convolution.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.utils.convolution.Kernel2D": {
  "data": {
   "shadows": "astropy.convolution.Kernel2D"
  },
  "type": "import"
 },
 "photutils.utils.convolution.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.utils.convolution.filter_data": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "astropy.convolution.Kernel2D",
    "astropy.utils.exceptions.AstropyUserWarning",
    "isinstance",
    "numpy.allclose",
    "numpy.sum",
    "photutils.utils.convolution.warnings",
    "scipy.ndimage.convolve"
   ]
  },
  "type": "function"
 },
 "photutils.utils.convolution.ndimage": {
  "data": {
   "shadows": "scipy.ndimage"
  },
  "type": "import"
 },
 "photutils.utils.convolution.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.convolution.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.utils.cutouts": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.cutouts.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.utils.cutouts.collections": {
  "data": {
   "shadows": "collections"
  },
  "type": "import"
 },
 "photutils.utils.cutouts.cutout_footprint": {
  "data": {
   "lineno": 13,
   "symbols_in_volume": [
    "ValueError",
    "astropy.nddata.utils.overlap_slices",
    "astropy.utils.deprecated",
    "bool",
    "isinstance",
    "len",
    "numpy.asanyarray",
    "numpy.logical_or",
    "numpy.ones",
    "numpy.zeros_like",
    "photutils.utils.cutouts.collections"
   ]
  },
  "type": "function"
 },
 "photutils.utils.cutouts.deprecated": {
  "data": {
   "shadows": "astropy.utils.deprecated"
  },
  "type": "import"
 },
 "photutils.utils.cutouts.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.cutouts.overlap_slices": {
  "data": {
   "shadows": "astropy.nddata.utils.overlap_slices"
  },
  "type": "import"
 },
 "photutils.utils.errors": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.errors.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "photutils.utils.errors.calc_total_error": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "ValueError",
    "all",
    "any",
    "astropy.units.UnitsError",
    "astropy.units.electron",
    "astropy.units.photon",
    "astropy.utils.misc.isiterable",
    "hasattr",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.maximum",
    "numpy.sqrt",
    "numpy.zeros"
   ]
  },
  "type": "function"
 },
 "photutils.utils.errors.isiterable": {
  "data": {
   "shadows": "astropy.utils.misc.isiterable"
  },
  "type": "import"
 },
 "photutils.utils.errors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.errors.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.utils.interpolation": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.interpolation.AstropyUserWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyUserWarning"
  },
  "type": "import"
 },
 "photutils.utils.interpolation.ShepardIDWInterpolator": {
  "data": {
   "lineno": 16
  },
  "type": "class"
 },
 "photutils.utils.interpolation.ShepardIDWInterpolator.__call__": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "ValueError",
    "int",
    "len",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.dot",
    "numpy.float",
    "numpy.isfinite",
    "numpy.nan",
    "numpy.reshape",
    "numpy.sum",
    "numpy.zeros",
    "range"
   ]
  },
  "type": "function"
 },
 "photutils.utils.interpolation.ShepardIDWInterpolator.__init__": {
  "data": {
   "lineno": 121,
   "symbols_in_volume": [
    "ValueError",
    "numpy.any",
    "numpy.asanyarray",
    "numpy.atleast_2d",
    "numpy.reshape",
    "numpy.transpose",
    "scipy.spatial.cKDTree"
   ]
  },
  "type": "function"
 },
 "photutils.utils.interpolation.__all__": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.utils.interpolation.__doctest_requires__": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.utils.interpolation.cKDTree": {
  "data": {
   "shadows": "scipy.spatial.cKDTree"
  },
  "type": "import"
 },
 "photutils.utils.interpolation.deprecated": {
  "data": {
   "shadows": "astropy.utils.deprecated"
  },
  "type": "import"
 },
 "photutils.utils.interpolation.interpolate_masked_data": {
  "data": {
   "lineno": 288,
   "symbols_in_volume": [
    "ValueError",
    "astropy.utils.deprecated",
    "astropy.utils.exceptions.AstropyUserWarning",
    "len",
    "max",
    "min",
    "numpy.any",
    "numpy.array",
    "numpy.copy",
    "numpy.mean",
    "numpy.sqrt",
    "photutils.utils.interpolation.warnings",
    "range",
    "zip"
   ]
  },
  "type": "function"
 },
 "photutils.utils.interpolation.mask_to_mirrored_num": {
  "data": {
   "lineno": 373,
   "symbols_in_volume": [
    "numpy.copy",
    "numpy.nonzero"
   ]
  },
  "type": "function"
 },
 "photutils.utils.interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.interpolation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.utils.misc": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.misc.InheritDocstrings": {
  "data": {
   "shadows": "astropy.utils.misc.InheritDocstrings"
  },
  "type": "import"
 },
 "photutils.utils.misc._ABCMetaAndInheritDocstrings": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "astropy.utils.misc.InheritDocstrings",
    "photutils.utils.misc.abc"
   ]
  },
  "type": "class"
 },
 "photutils.utils.misc.__all__": {
  "data": {
   "lineno": 8
  },
  "type": "constant"
 },
 "photutils.utils.misc.__version__": {
  "data": {
   "shadows": "photutils.__version__"
  },
  "type": "import"
 },
 "photutils.utils.misc.abc": {
  "data": {
   "shadows": "abc"
  },
  "type": "import"
 },
 "photutils.utils.misc.get_version_info": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "astropy.__version__",
    "photutils.__version__"
   ]
  },
  "type": "function"
 },
 "photutils.utils.stats": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.stats.__all__": {
  "data": {
   "lineno": 6
  },
  "type": "constant"
 },
 "photutils.utils.stats._mesh_values": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "numpy.ma.asanyarray",
    "numpy.ma.count_masked",
    "numpy.ma.swapaxes",
    "numpy.where"
   ]
  },
  "type": "function"
 },
 "photutils.utils.stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.stats.std_blocksum": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "ValueError",
    "numpy.array",
    "numpy.asanyarray",
    "numpy.atleast_1d",
    "numpy.ma.asanyarray",
    "numpy.ma.nomask",
    "numpy.std",
    "numpy.sum",
    "photutils.utils.stats._mesh_values"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.tests.test_colormaps": {
  "data": {
   "symbols_in_volume": [
    "ImportError"
   ]
  },
  "type": "module"
 },
 "photutils.utils.tests.test_colormaps.HAS_MATPLOTLIB": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_colormaps.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_colormaps.matplotlib": {
  "data": {
   "shadows": "matplotlib"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_colormaps.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_colormaps.test_colormap": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "len",
    "numpy.testing.assert_allclose",
    "photutils.utils.tests.test_colormaps.pytest",
    "random_cmap"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_cutouts": {
  "data": {
   "symbols_in_volume": [
    "numpy.array",
    "numpy.pi",
    "numpy.zeros",
    "photutils.utils.tests.test_cutouts.DATA"
   ]
  },
  "type": "module"
 },
 "photutils.utils.tests.test_cutouts.DATA": {
  "data": {
   "lineno": 15
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_cutouts.THETAS": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_cutouts.TestCutoutFootprint": {
  "data": {
   "lineno": 21
  },
  "type": "class"
 },
 "photutils.utils.tests.test_cutouts.TestCutoutFootprint.test_dataonly": {
  "data": {
   "lineno": 22,
   "symbols_in_volume": [
    "cutout_footprint",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_cutouts.TestCutoutFootprint.test_mask_error": {
  "data": {
   "lineno": 32,
   "symbols_in_volume": [
    "bool",
    "cutout_footprint",
    "numpy.ones",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_cutouts.TestCutoutFootprint.test_nofootprint": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "ValueError",
    "cutout_footprint",
    "numpy.ones",
    "photutils.utils.tests.test_cutouts.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_cutouts.TestCutoutFootprint.test_position_len": {
  "data": {
   "lineno": 50,
   "symbols_in_volume": [
    "ValueError",
    "cutout_footprint",
    "numpy.ones",
    "photutils.utils.tests.test_cutouts.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_cutouts.TestCutoutFootprint.test_wrongboxsize": {
  "data": {
   "lineno": 59,
   "symbols_in_volume": [
    "ValueError",
    "cutout_footprint",
    "numpy.ones",
    "photutils.utils.tests.test_cutouts.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_cutouts.XCS": {
  "data": {
   "lineno": 10
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_cutouts.XSTDDEVS": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_cutouts.YCS": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_cutouts.YSTDDEVS": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_cutouts.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_cutouts.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_cutouts.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors": {
  "data": {
   "symbols_in_volume": [
    "bool",
    "numpy.ones",
    "numpy.zeros_like",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.DATAVAL",
    "photutils.utils.tests.test_errors.MASK",
    "photutils.utils.tests.test_errors.SHAPE"
   ]
  },
  "type": "module"
 },
 "photutils.utils.tests.test_errors.BACKGROUND": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.BKG_ERROR": {
  "data": {
   "lineno": 16
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.DATA": {
  "data": {
   "lineno": 13
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.DATAVAL": {
  "data": {
   "lineno": 12
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.EFFGAIN": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.MASK": {
  "data": {
   "lineno": 14
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.SHAPE": {
  "data": {
   "lineno": 11
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError": {
  "data": {
   "lineno": 22
  },
  "type": "class"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_effgain_units": {
  "data": {
   "lineno": 58,
   "symbols_in_volume": [
    "astropy.units.UnitsError",
    "astropy.units.electron",
    "astropy.units.km",
    "astropy.units.s",
    "calc_total_error",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.EFFGAIN",
    "photutils.utils.tests.test_errors.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_error_shape": {
  "data": {
   "lineno": 23,
   "symbols_in_volume": [
    "ValueError",
    "calc_total_error",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.EFFGAIN",
    "photutils.utils.tests.test_errors.WRONG_SHAPE",
    "photutils.utils.tests.test_errors.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_error_units": {
  "data": {
   "lineno": 52,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.electron",
    "astropy.units.s",
    "calc_total_error",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.EFFGAIN",
    "photutils.utils.tests.test_errors.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_gain_array": {
  "data": {
   "lineno": 40,
   "symbols_in_volume": [
    "calc_total_error",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.EFFGAIN"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_gain_le_zero": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "ValueError",
    "calc_total_error",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_gain_scalar": {
  "data": {
   "lineno": 36,
   "symbols_in_volume": [
    "calc_total_error",
    "numpy.sqrt",
    "numpy.testing.assert_allclose",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_gain_shape": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "ValueError",
    "calc_total_error",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.WRONG_SHAPE",
    "photutils.utils.tests.test_errors.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_missing_bkgerror_units": {
  "data": {
   "lineno": 63,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.electron",
    "astropy.units.s",
    "calc_total_error",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.EFFGAIN",
    "photutils.utils.tests.test_errors.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_missing_effgain_units": {
  "data": {
   "lineno": 68,
   "symbols_in_volume": [
    "ValueError",
    "astropy.units.electron",
    "astropy.units.s",
    "calc_total_error",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.EFFGAIN",
    "photutils.utils.tests.test_errors.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.TestCalculateTotalError.test_units": {
  "data": {
   "lineno": 44,
   "symbols_in_volume": [
    "astropy.units.electron",
    "astropy.units.s",
    "calc_total_error",
    "numpy.testing.assert_allclose",
    "photutils.utils.tests.test_errors.BKG_ERROR",
    "photutils.utils.tests.test_errors.DATA",
    "photutils.utils.tests.test_errors.EFFGAIN"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_errors.WRONG_SHAPE": {
  "data": {
   "lineno": 19
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_errors.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_errors.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "bool",
    "numpy.ones",
    "numpy.zeros_like",
    "photutils.utils.tests.test_interpolation.DATA",
    "photutils.utils.tests.test_interpolation.MASK",
    "photutils.utils.tests.test_interpolation.SHAPE"
   ]
  },
  "type": "module"
 },
 "photutils.utils.tests.test_interpolation.AstropyDeprecationWarning": {
  "data": {
   "shadows": "astropy.utils.exceptions.AstropyDeprecationWarning"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.BACKGROUND": {
  "data": {
   "lineno": 25
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.DATA": {
  "data": {
   "lineno": 21
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.ERROR": {
  "data": {
   "lineno": 24
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.HAS_SCIPY": {
  "data": {
   "lineno": 17
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.MASK": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.SHAPE": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.TestInterpolateMaskedData": {
  "data": {
   "lineno": 114
  },
  "type": "class"
 },
 "photutils.utils.tests.test_interpolation.TestInterpolateMaskedData.setup_class": {
  "data": {
   "lineno": 115,
   "symbols_in_volume": [
    "astropy.utils.exceptions.AstropyDeprecationWarning",
    "photutils.utils.tests.test_interpolation.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestInterpolateMaskedData.teardown_class": {
  "data": {
   "lineno": 119,
   "symbols_in_volume": [
    "photutils.utils.tests.test_interpolation.warnings"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestInterpolateMaskedData.test_background_shape": {
  "data": {
   "lineno": 130,
   "symbols_in_volume": [
    "ValueError",
    "interpolate_masked_data",
    "photutils.utils.tests.test_interpolation.DATA",
    "photutils.utils.tests.test_interpolation.MASK",
    "photutils.utils.tests.test_interpolation.WRONG_SHAPE",
    "photutils.utils.tests.test_interpolation.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestInterpolateMaskedData.test_error_shape": {
  "data": {
   "lineno": 126,
   "symbols_in_volume": [
    "ValueError",
    "interpolate_masked_data",
    "photutils.utils.tests.test_interpolation.DATA",
    "photutils.utils.tests.test_interpolation.MASK",
    "photutils.utils.tests.test_interpolation.WRONG_SHAPE",
    "photutils.utils.tests.test_interpolation.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestInterpolateMaskedData.test_interpolation": {
  "data": {
   "lineno": 134,
   "symbols_in_volume": [
    "interpolate_masked_data",
    "numpy.testing.assert_allclose",
    "photutils.utils.tests.test_interpolation.BACKGROUND",
    "photutils.utils.tests.test_interpolation.DATA",
    "photutils.utils.tests.test_interpolation.ERROR",
    "photutils.utils.tests.test_interpolation.MASK"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestInterpolateMaskedData.test_interpolation_larger_mask": {
  "data": {
   "lineno": 147,
   "symbols_in_volume": [
    "interpolate_masked_data",
    "numpy.testing.assert_allclose",
    "photutils.utils.tests.test_interpolation.BACKGROUND",
    "photutils.utils.tests.test_interpolation.DATA",
    "photutils.utils.tests.test_interpolation.ERROR",
    "photutils.utils.tests.test_interpolation.MASK"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestInterpolateMaskedData.test_mask_shape": {
  "data": {
   "lineno": 122,
   "symbols_in_volume": [
    "ValueError",
    "interpolate_masked_data",
    "photutils.utils.tests.test_interpolation.DATA",
    "photutils.utils.tests.test_interpolation.WRONG_SHAPE",
    "photutils.utils.tests.test_interpolation.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum": {
  "data": {
   "lineno": 163
  },
  "type": "class"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum.test_mask_to_mirrored_num": {
  "data": {
   "lineno": 164,
   "symbols_in_volume": [
    "bool",
    "mask_to_mirrored_num",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum.test_mask_to_mirrored_num_bbox": {
  "data": {
   "lineno": 211,
   "symbols_in_volume": [
    "bool",
    "mask_to_mirrored_num",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum.test_mask_to_mirrored_num_masked": {
  "data": {
   "lineno": 195,
   "symbols_in_volume": [
    "bool",
    "mask_to_mirrored_num",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestMaskToMirroredNum.test_mask_to_mirrored_num_range": {
  "data": {
   "lineno": 179,
   "symbols_in_volume": [
    "bool",
    "mask_to_mirrored_num",
    "numpy.arange",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator": {
  "data": {
   "lineno": 29,
   "symbols_in_volume": [
    "photutils.utils.tests.test_interpolation.pytest"
   ]
  },
  "type": "class"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.setup_class": {
  "data": {
   "lineno": 31,
   "symbols_in_volume": [
    "numpy.random.random",
    "numpy.random.seed",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_conf_dist_negative": {
  "data": {
   "lineno": 85,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_dtype_none": {
  "data": {
   "lineno": 89,
   "symbols_in_volume": [
    "numpy.float64"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_idw_1d": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "f",
    "numpy.arange",
    "numpy.sin",
    "numpy.testing.assert_allclose",
    "photutils.utils.tests.test_interpolation.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_idw_2d": {
  "data": {
   "lineno": 48,
   "symbols_in_volume": [
    "f",
    "numpy.random.rand",
    "numpy.sin",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_idw_3d": {
  "data": {
   "lineno": 56,
   "symbols_in_volume": [
    "f",
    "numpy.indices",
    "numpy.ones",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_idw_weights": {
  "data": {
   "lineno": 42,
   "symbols_in_volume": [
    "f",
    "numpy.sin",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_n_neighbors_negative": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "ValueError",
    "photutils.utils.tests.test_interpolation.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_n_neighbors_one": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_no_coordinates": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "ValueError",
    "photutils.utils.tests.test_interpolation.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_positions_0d_nomatch": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "numpy.random.rand",
    "numpy.sin",
    "photutils.utils.tests.test_interpolation.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_positions_1d_nomatch": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "ValueError",
    "f",
    "numpy.random.rand",
    "numpy.sin",
    "photutils.utils.tests.test_interpolation.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_positions_3d": {
  "data": {
   "lineno": 109,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "photutils.utils.tests.test_interpolation.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_values_invalid_shape": {
  "data": {
   "lineno": 66,
   "symbols_in_volume": [
    "ValueError",
    "photutils.utils.tests.test_interpolation.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_weights_invalid_shape": {
  "data": {
   "lineno": 70,
   "symbols_in_volume": [
    "ValueError",
    "photutils.utils.tests.test_interpolation.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.TestShepardIDWInterpolator.test_weights_negative": {
  "data": {
   "lineno": 74,
   "symbols_in_volume": [
    "ValueError",
    "photutils.utils.tests.test_interpolation.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_interpolation.WRONG_SHAPE": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "photutils.utils.tests.test_interpolation.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.idw": {
  "data": {
   "shadows": "ShepardIDWInterpolator"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.scipy": {
  "data": {
   "shadows": "scipy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_interpolation.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_moments": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.tests.test_moments.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_moments.assert_equal": {
  "data": {
   "shadows": "numpy.testing.assert_equal"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_moments.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_moments.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_moments.test_moments": {
  "data": {
   "lineno": 10,
   "symbols_in_volume": [
    "_moments",
    "numpy.array",
    "numpy.testing.assert_allclose",
    "numpy.testing.assert_equal"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_moments.test_moments_central": {
  "data": {
   "lineno": 20,
   "symbols_in_volume": [
    "_moments_central",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_moments.test_moments_central_invalid_dim": {
  "data": {
   "lineno": 34,
   "symbols_in_volume": [
    "ValueError",
    "_moments_central",
    "numpy.arange",
    "photutils.utils.tests.test_moments.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_moments.test_moments_central_nonsquare": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "_moments_central",
    "numpy.array",
    "numpy.testing.assert_allclose"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_random_state": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.tests.test_random_state.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_random_state.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_random_state.test_invalid_seed": {
  "data": {
   "lineno": 15,
   "symbols_in_volume": [
    "ValueError",
    "check_random_state",
    "photutils.utils.tests.test_random_state.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_random_state.test_seed": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "check_random_state",
    "isinstance",
    "numpy.random",
    "numpy.random.RandomState",
    "photutils.utils.tests.test_random_state.pytest"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_stats": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.tests.test_stats.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.assert_allclose"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_stats.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_stats.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "photutils.utils.tests.test_stats.test_std_blocksum": {
  "data": {
   "lineno": 11,
   "symbols_in_volume": [
    "make_noise_image",
    "numpy.array",
    "numpy.bool",
    "numpy.testing.assert_allclose",
    "numpy.zeros_like",
    "std_blocksum"
   ]
  },
  "type": "function"
 },
 "photutils.utils.tests.test_stats.test_std_blocksum_mask_shape": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "ValueError",
    "numpy.ones",
    "photutils.utils.tests.test_stats.pytest",
    "std_blocksum"
   ]
  },
  "type": "function"
 },
 "photutils.utils.wcs_helpers": {
  "data": {},
  "type": "module"
 },
 "photutils.utils.wcs_helpers.UnitSphericalRepresentation": {
  "data": {
   "shadows": "astropy.coordinates.UnitSphericalRepresentation"
  },
  "type": "import"
 },
 "photutils.utils.wcs_helpers.assert_angle": {
  "data": {
   "lineno": 81,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.utils.wcs_helpers.assert_angle_or_pixel": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "TypeError",
    "ValueError",
    "astropy.units.Quantity",
    "astropy.units.pixel",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "photutils.utils.wcs_helpers.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "photutils.utils.wcs_helpers.pixel_scale_angle_at_skycoord": {
  "data": {
   "lineno": 9,
   "symbols_in_volume": [
    "astropy.coordinates.UnitSphericalRepresentation",
    "astropy.units.arcsec",
    "astropy.units.deg",
    "astropy.units.pixel",
    "astropy.units.radian.to",
    "astropy.wcs.utils.skycoord_to_pixel",
    "numpy.arctan2",
    "numpy.hypot"
   ]
  },
  "type": "function"
 },
 "photutils.utils.wcs_helpers.pixel_to_icrs_coords": {
  "data": {
   "lineno": 95,
   "symbols_in_volume": [
    "astropy.units.deg",
    "astropy.wcs.utils.pixel_to_skycoord"
   ]
  },
  "type": "function"
 },
 "photutils.utils.wcs_helpers.pixel_to_skycoord": {
  "data": {
   "shadows": "astropy.wcs.utils.pixel_to_skycoord"
  },
  "type": "import"
 },
 "photutils.utils.wcs_helpers.skycoord_to_pixel": {
  "data": {
   "shadows": "astropy.wcs.utils.skycoord_to_pixel"
  },
  "type": "import"
 },
 "photutils.utils.wcs_helpers.u": {
  "data": {
   "shadows": "astropy.units"
  },
  "type": "import"
 },
 "photutils.version": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "len",
    "photutils.version._get_repo_path",
    "photutils.version._last_generated_version",
    "photutils.version._last_githash",
    "photutils.version._packagename",
    "photutils.version.bugfix",
    "photutils.version.datetime",
    "photutils.version.get_git_devstr",
    "photutils.version.major",
    "photutils.version.minor",
    "photutils.version.update_git_devstr"
   ]
  },
  "type": "module"
 },
 "photutils.version._decode_stdio": {
  "data": {
   "lineno": 12,
   "symbols_in_volume": [
    "UnicodeDecodeError",
    "ValueError",
    "photutils.version.locale"
   ]
  },
  "type": "function"
 },
 "photutils.version._get_repo_path": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "photutils.version.os"
   ]
  },
  "type": "function"
 },
 "photutils.version._last_generated_version": {
  "data": {
   "lineno": 190
  },
  "type": "constant"
 },
 "photutils.version._last_githash": {
  "data": {
   "lineno": 191
  },
  "type": "constant"
 },
 "photutils.version._packagename": {
  "data": {
   "lineno": 189
  },
  "type": "constant"
 },
 "photutils.version.astropy_helpers_version": {
  "data": {
   "lineno": 217
  },
  "type": "constant"
 },
 "photutils.version.bugfix": {
  "data": {
   "lineno": 209
  },
  "type": "constant"
 },
 "photutils.version.compiler": {
  "data": {
   "lineno": 222
  },
  "type": "constant"
 },
 "photutils.version.cython_version": {
  "data": {
   "lineno": 227
  },
  "type": "constant"
 },
 "photutils.version.datetime": {
  "data": {
   "shadows": "datetime"
  },
  "type": "import"
 },
 "photutils.version.debug": {
  "data": {
   "lineno": 215
  },
  "type": "constant"
 },
 "photutils.version.get_git_devstr": {
  "data": {
   "lineno": 54,
   "symbols_in_volume": [
    "photutils.version._decode_stdio",
    "photutils.version.os",
    "run_git",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.version.get_git_devstr.run_git": {
  "data": {
   "lineno": 96,
   "symbols_in_volume": [
    "OSError",
    "photutils.version._decode_stdio",
    "photutils.version.subprocess",
    "photutils.version.warnings",
    "str"
   ]
  },
  "type": "function"
 },
 "photutils.version.githash": {
  "data": {
   "lineno": 204
  },
  "type": "constant"
 },
 "photutils.version.locale": {
  "data": {
   "shadows": "locale"
  },
  "type": "import"
 },
 "photutils.version.major": {
  "data": {
   "lineno": 207
  },
  "type": "constant"
 },
 "photutils.version.minor": {
  "data": {
   "lineno": 208
  },
  "type": "constant"
 },
 "photutils.version.os": {
  "data": {
   "shadows": "os"
  },
  "type": "import"
 },
 "photutils.version.release": {
  "data": {
   "lineno": 213
  },
  "type": "constant"
 },
 "photutils.version.subprocess": {
  "data": {
   "shadows": "subprocess"
  },
  "type": "import"
 },
 "photutils.version.timestamp": {
  "data": {
   "lineno": 214
  },
  "type": "constant"
 },
 "photutils.version.unicode_literals": {
  "data": {
   "shadows": "__future__.unicode_literals"
  },
  "type": "import"
 },
 "photutils.version.update_git_devstr": {
  "data": {
   "lineno": 27,
   "symbols_in_volume": [
    "OSError",
    "photutils.version.get_git_devstr"
   ]
  },
  "type": "function"
 },
 "photutils.version.version": {
  "data": {
   "lineno": 203
  },
  "type": "constant"
 },
 "photutils.version.version_info": {
  "data": {
   "lineno": 211
  },
  "type": "constant"
 },
 "photutils.version.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 }
}