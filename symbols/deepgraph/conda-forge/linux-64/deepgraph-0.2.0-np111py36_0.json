{
 "deepgraph": {
  "data": {},
  "type": "module"
 },
 "deepgraph.DeepGraph": {
  "data": {
   "shadows": "deepgraph.deepgraph.DeepGraph"
  },
  "type": "import"
 },
 "deepgraph.__URL__": {
  "data": {
   "lineno": 83
  },
  "type": "constant"
 },
 "deepgraph.__all__": {
  "data": {
   "lineno": 78
  },
  "type": "constant"
 },
 "deepgraph.__author__": {
  "data": {
   "lineno": 80
  },
  "type": "constant"
 },
 "deepgraph.__bibtex__": {
  "data": {
   "lineno": 84
  },
  "type": "constant"
 },
 "deepgraph.__copyright__": {
  "data": {
   "lineno": 81
  },
  "type": "constant"
 },
 "deepgraph.__license__": {
  "data": {
   "lineno": 82
  },
  "type": "constant"
 },
 "deepgraph.__version__": {
  "data": {
   "lineno": 79
  },
  "type": "constant"
 },
 "deepgraph.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "deepgraph.deepgraph": {
  "data": {
   "symbols_in_volume": [
    "ImportError",
    "deepgraph.deepgraph.PY2",
    "deepgraph.deepgraph.sys",
    "itertools.izip",
    "pandas.options.mode.chained_assignment",
    "str"
   ]
  },
  "type": "module"
 },
 "deepgraph.deepgraph.Axes3D": {
  "data": {
   "shadows": "mpl_toolkits.mplot3d.axes3d.Axes3D"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.Basemap": {
  "data": {
   "shadows": "mpl_toolkits.basemap.Basemap"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.Connector": {
  "data": {
   "lineno": 4541,
   "symbols_in_volume": [
    "deepgraph.deepgraph.CreatorFunction"
   ]
  },
  "type": "class"
 },
 "deepgraph.deepgraph.Connector.__init__": {
  "data": {
   "lineno": 4543,
   "symbols_in_volume": [
    "deepgraph.deepgraph.Connector",
    "super"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.Connector.map": {
  "data": {
   "lineno": 4553,
   "symbols_in_volume": [
    "KeyError",
    "deepgraph.deepgraph.CreatorFunction",
    "enumerate",
    "isinstance",
    "numpy.timedelta64",
    "tuple"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.Counter": {
  "data": {
   "shadows": "collections.Counter"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.CreatorFunction": {
  "data": {
   "lineno": 4444,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "deepgraph.deepgraph.CreatorFunction.__init__": {
  "data": {
   "lineno": 4461,
   "symbols_in_volume": [
    "callable",
    "deepgraph.deepgraph.inspect",
    "len"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.CreatorFunction.assertions": {
  "data": {
   "lineno": 4491,
   "symbols_in_volume": [
    "UserWarning",
    "classmethod",
    "collections.Counter",
    "deepgraph.deepgraph.warnings",
    "len",
    "list",
    "set"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.CreatorFunction.flatten_variables": {
  "data": {
   "lineno": 4530,
   "symbols_in_volume": [
    "_flatten",
    "callable",
    "classmethod",
    "dir",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.CreatorFunction.reset": {
  "data": {
   "lineno": 4516,
   "symbols_in_volume": [
    "callable",
    "classmethod",
    "dir",
    "getattr",
    "setattr"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph": {
  "data": {
   "lineno": 61,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "deepgraph.deepgraph.DeepGraph.__init__": {
  "data": {
   "lineno": 144,
   "symbols_in_volume": [
    "isinstance",
    "pandas.DataFrame",
    "pandas.HDFStore",
    "type"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.__repr__": {
  "data": {
   "lineno": 170,
   "symbols_in_volume": [
    "id",
    "type"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.__str__": {
  "data": {
   "lineno": 174,
   "symbols_in_volume": [
    "id",
    "type"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph._plot_2d": {
  "data": {
   "lineno": 4033,
   "symbols_in_volume": [
    "KeyError",
    "float",
    "m",
    "matplotlib.pyplot.subplots",
    "mpl_toolkits.basemap.Basemap",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph._plot_2d_generator": {
  "data": {
   "lineno": 4176,
   "symbols_in_volume": [
    "AttributeError",
    "KeyError",
    "_flatten",
    "obj",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph._plot_2d_generator.obj": {
  "data": {
   "lineno": 4310,
   "symbols_in_volume": [
    "deepgraph.deepgraph.DeepGraph",
    "float",
    "m",
    "matplotlib.pyplot.subplots",
    "mpl_toolkits.basemap.Basemap",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.append_binning_labels_v": {
  "data": {
   "lineno": 2646,
   "symbols_in_volume": [
    "_create_bin_edges",
    "_is_array_like",
    "numpy.digitize"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.append_cp": {
  "data": {
   "lineno": 2568,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "numpy.searchsorted",
    "scipy.sparse.csgraph.connected_components"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.append_datetime_categories_v": {
  "data": {
   "lineno": 2789,
   "symbols_in_volume": [
    "_met_season",
    "_timeofday"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.append_datetime_categories_v._met_season": {
  "data": {
   "lineno": 2845
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.append_datetime_categories_v._met_season.season": {
  "data": {
   "lineno": 2846
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.append_datetime_categories_v._timeofday": {
  "data": {
   "lineno": 2831
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.append_datetime_categories_v._timeofday.categorize": {
  "data": {
   "lineno": 2832
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.create_edges": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "_initiate_create_edges",
    "_is_array_like",
    "_matrix_iterator",
    "datetime.datetime.now",
    "deepgraph.deepgraph.inspect",
    "int",
    "isinstance",
    "len",
    "open",
    "pandas.HDFStore",
    "print",
    "str",
    "verboseprint"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.create_edges_ft": {
  "data": {
   "lineno": 612,
   "symbols_in_volume": [
    "_ft_iterator",
    "_initiate_create_edges",
    "_is_array_like",
    "datetime.datetime.now",
    "deepgraph.deepgraph.inspect",
    "int",
    "isinstance",
    "len",
    "open",
    "pandas.DataFrame",
    "pandas.DatetimeIndex",
    "pandas.HDFStore",
    "pandas.Index",
    "print",
    "str",
    "verboseprint"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.f": {
  "data": {
   "lineno": 4012,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "pandas.HDFStore",
    "property"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.filter_by_interval_e": {
  "data": {
   "lineno": 2930
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.filter_by_interval_v": {
  "data": {
   "lineno": 2887,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.filter_by_values_e": {
  "data": {
   "lineno": 3002,
   "symbols_in_volume": [
    "_is_array_like"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.filter_by_values_v": {
  "data": {
   "lineno": 2966,
   "symbols_in_volume": [
    "_is_array_like",
    "hasattr"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.m": {
  "data": {
   "lineno": 4003,
   "symbols_in_volume": [
    "hasattr",
    "len",
    "property"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.n": {
  "data": {
   "lineno": 3988,
   "symbols_in_volume": [
    "hasattr",
    "isinstance",
    "len",
    "pandas.HDFStore",
    "property"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.partition_edges": {
  "data": {
   "lineno": 1211,
   "symbols_in_volume": [
    "_aggregate_super_table",
    "_is_array_like"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.partition_graph": {
  "data": {
   "lineno": 1488,
   "symbols_in_volume": [
    "_aggregate_super_table",
    "_is_array_like"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.partition_nodes": {
  "data": {
   "lineno": 1074,
   "symbols_in_volume": [
    "_aggregate_super_table"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.plot_2d": {
  "data": {
   "lineno": 3030
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.plot_2d_generator": {
  "data": {
   "lineno": 3134
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.plot_3d": {
  "data": {
   "lineno": 3514,
   "symbols_in_volume": [
    "float",
    "matplotlib.pyplot.figure",
    "matplotlib.pyplot.scatter",
    "numpy.array"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.plot_hist": {
  "data": {
   "lineno": 3814,
   "symbols_in_volume": [
    "_create_bin_edges",
    "_is_array_like",
    "float",
    "matplotlib.pyplot.subplots",
    "numpy.histogram",
    "numpy.nan",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.plot_logfile": {
  "data": {
   "lineno": 3891,
   "symbols_in_volume": [
    "int",
    "len",
    "matplotlib.pyplot.subplots",
    "numpy.loadtxt",
    "numpy.log10",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.plot_map": {
  "data": {
   "lineno": 3263
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.plot_map_generator": {
  "data": {
   "lineno": 3378
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.plot_raster": {
  "data": {
   "lineno": 3748,
   "symbols_in_volume": [
    "enumerate",
    "len",
    "matplotlib.pyplot.subplots",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.plot_rects_label_numeric": {
  "data": {
   "lineno": 3586,
   "symbols_in_volume": [
    "deepgraph.deepgraph.zip",
    "len",
    "matplotlib.collections.PolyCollection",
    "matplotlib.pyplot.subplots",
    "numpy.arange",
    "numpy.ones"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.plot_rects_numeric_numeric": {
  "data": {
   "lineno": 3670,
   "symbols_in_volume": [
    "deepgraph.deepgraph.zip",
    "matplotlib.collections.PolyCollection",
    "matplotlib.pyplot.subplots"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.r": {
  "data": {
   "lineno": 4024,
   "symbols_in_volume": [
    "hasattr",
    "property"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.return_cs_graph": {
  "data": {
   "lineno": 1728,
   "symbols_in_volume": [
    "_dic_translator",
    "_is_array_like",
    "bool",
    "deepgraph.deepgraph.zip",
    "enumerate",
    "len",
    "numpy.ones",
    "pandas.RangeIndex",
    "scipy.sparse.coo_matrix",
    "type"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.return_gt_graph": {
  "data": {
   "lineno": 2060,
   "symbols_in_volume": [
    "KeyError",
    "_dic_translator",
    "_is_array_like",
    "enumerate",
    "graph_tool.Graph",
    "hasattr",
    "int",
    "len",
    "numpy.column_stack",
    "pandas.DataFrame",
    "pandas.RangeIndex",
    "str",
    "type"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.return_motif_graph": {
  "data": {
   "lineno": 2263,
   "symbols_in_volume": [
    "IndexError",
    "datetime.datetime.now",
    "deepgraph.deepgraph.DeepGraph",
    "deepgraph.deepgraph.range",
    "enumerate",
    "graph_tool.stats.label_self_loops",
    "int",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.concatenate",
    "numpy.unique",
    "pandas.DataFrame",
    "pandas.concat",
    "print",
    "verboseprint"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.return_nx_graph": {
  "data": {
   "lineno": 1844,
   "symbols_in_volume": [
    "_is_array_like",
    "deepgraph.deepgraph.PY2",
    "hasattr",
    "networkx.DiGraph",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.return_nx_multigraph": {
  "data": {
   "lineno": 1952,
   "symbols_in_volume": [
    "_is_array_like",
    "_iter_edges",
    "deepgraph.deepgraph.PY2",
    "hasattr",
    "itertools.chain",
    "len",
    "networkx.MultiDiGraph",
    "pandas.DataFrame"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.return_sparse_tensor": {
  "data": {
   "lineno": 2251
  },
  "type": "function"
 },
 "deepgraph.deepgraph.DeepGraph.update_edges": {
  "data": {
   "lineno": 2867,
   "symbols_in_volume": [
    "hasattr"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.Iterable": {
  "data": {
   "shadows": "collections.Iterable"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.PY2": {
  "data": {
   "lineno": 27
  },
  "type": "constant"
 },
 "deepgraph.deepgraph.PolyCollection": {
  "data": {
   "shadows": "matplotlib.collections.PolyCollection"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.Selector": {
  "data": {
   "lineno": 4594,
   "symbols_in_volume": [
    "deepgraph.deepgraph.CreatorFunction"
   ]
  },
  "type": "class"
 },
 "deepgraph.deepgraph.Selector.__init__": {
  "data": {
   "lineno": 4596,
   "symbols_in_volume": [
    "deepgraph.deepgraph.Selector",
    "super"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.Selector.request_r": {
  "data": {
   "lineno": 4680,
   "symbols_in_volume": [
    "deepgraph.deepgraph.CreatorFunction",
    "staticmethod"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph.Selector.select_and_store": {
  "data": {
   "lineno": 4609,
   "symbols_in_volume": [
    "KeyError",
    "deepgraph._find_selected_indices._find_selected_indices",
    "deepgraph.deepgraph.CreatorFunction",
    "enumerate",
    "len",
    "numpy.arange"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._aggregate_super_table": {
  "data": {
   "lineno": 5376,
   "symbols_in_volume": [
    "graph_tool.agg",
    "graph_tool.size",
    "isinstance",
    "pandas.concat",
    "tuple"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._copied_rs": {
  "data": {
   "lineno": 5369,
   "symbols_in_volume": [
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._count_edges": {
  "data": {
   "lineno": 5359,
   "symbols_in_volume": [
    "list",
    "type"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._create_bin_edges": {
  "data": {
   "lineno": 5404,
   "symbols_in_volume": [
    "numpy.ceil",
    "numpy.floor",
    "numpy.linspace",
    "numpy.log10",
    "numpy.logspace",
    "numpy.unique"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._dic_translator": {
  "data": {
   "lineno": 5439,
   "symbols_in_volume": [
    "deepgraph.deepgraph.range",
    "len"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._find_selected_indices": {
  "data": {
   "shadows": "deepgraph._find_selected_indices._find_selected_indices"
  },
  "type": "import"
 },
 "deepgraph.deepgraph._flatten": {
  "data": {
   "lineno": 5450,
   "symbols_in_volume": [
    "deepgraph.deepgraph._is_array_like"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._ft_connector": {
  "data": {
   "lineno": 5334
  },
  "type": "function"
 },
 "deepgraph.deepgraph._ft_create_ei": {
  "data": {
   "lineno": 5169,
   "symbols_in_volume": [
    "_select_and_return",
    "deepgraph._triu_indices._triu_indices",
    "deepgraph.deepgraph._ft_subiterator",
    "len",
    "numpy.timedelta64",
    "numpy.triu_indices",
    "numpy.uint64",
    "open",
    "pandas.DataFrame",
    "pandas.Series",
    "print",
    "verboseprint"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._ft_iterator": {
  "data": {
   "lineno": 4890,
   "symbols_in_volume": [
    "_copied_rs",
    "_count_edges",
    "_flatten",
    "_ft_create_ei",
    "datetime.datetime.now",
    "deepgraph.deepgraph.CreatorFunction",
    "int",
    "isinstance",
    "len",
    "numpy.searchsorted",
    "numpy.timedelta64",
    "open",
    "pandas.HDFStore",
    "pandas.Timestamp",
    "pandas.concat",
    "print",
    "set",
    "str",
    "verboseprint"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._ft_selector": {
  "data": {
   "lineno": 5339
  },
  "type": "function"
 },
 "deepgraph.deepgraph._ft_subiterator": {
  "data": {
   "lineno": 5134,
   "symbols_in_volume": [
    "_pos_array",
    "_select_and_return",
    "deepgraph._triu_indices._reduce_triu_indices",
    "deepgraph._triu_indices._triu_indices",
    "deepgraph._triu_indices._union_of_indices",
    "verboseprint"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._initiate_create_edges": {
  "data": {
   "lineno": 4689,
   "symbols_in_volume": [
    "KeyError",
    "_flatten",
    "_is_array_like",
    "_merge_dicts",
    "deepgraph.deepgraph.Connector",
    "deepgraph.deepgraph.CreatorFunction",
    "deepgraph.deepgraph.Selector",
    "hasattr",
    "isinstance",
    "pandas.HDFStore",
    "print",
    "verboseprint"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._is_array_like": {
  "data": {
   "lineno": 5446,
   "symbols_in_volume": [
    "collections.Iterable",
    "deepgraph.deepgraph.basestring",
    "isinstance"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._iter_edges": {
  "data": {
   "lineno": 5429
  },
  "type": "function"
 },
 "deepgraph.deepgraph._matrix_iterator": {
  "data": {
   "lineno": 4783,
   "symbols_in_volume": [
    "_count_edges",
    "_flatten",
    "_pos_array",
    "_select_and_return",
    "datetime.datetime.now",
    "deepgraph._triu_indices._reduce_triu_indices",
    "deepgraph._triu_indices._triu_indices",
    "deepgraph._triu_indices._union_of_indices",
    "deepgraph.deepgraph.CreatorFunction",
    "float",
    "int",
    "isinstance",
    "len",
    "open",
    "pandas.HDFStore",
    "pandas.concat",
    "print",
    "set",
    "str",
    "verboseprint"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._merge_dicts": {
  "data": {
   "lineno": 5460
  },
  "type": "function"
 },
 "deepgraph.deepgraph._pos_array": {
  "data": {
   "lineno": 5345,
   "symbols_in_volume": [
    "deepgraph.deepgraph.range",
    "deepgraph.deepgraph.zip",
    "int",
    "itertools.chain",
    "len"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._reduce_triu_indices": {
  "data": {
   "shadows": "deepgraph._triu_indices._reduce_triu_indices"
  },
  "type": "import"
 },
 "deepgraph.deepgraph._select_and_return": {
  "data": {
   "lineno": 5289,
   "symbols_in_volume": [
    "deepgraph.deepgraph.CreatorFunction",
    "deepgraph.deepgraph.PY2",
    "deepgraph.deepgraph.Selector",
    "pandas.DataFrame",
    "pandas.Series"
   ]
  },
  "type": "function"
 },
 "deepgraph.deepgraph._triu_indices": {
  "data": {
   "shadows": "deepgraph._triu_indices._triu_indices"
  },
  "type": "import"
 },
 "deepgraph.deepgraph._union_of_indices": {
  "data": {
   "shadows": "deepgraph._triu_indices._union_of_indices"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.basestring": {
  "data": {
   "lineno": 35
  },
  "type": "constant"
 },
 "deepgraph.deepgraph.chain": {
  "data": {
   "shadows": "itertools.chain"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.connected_components": {
  "data": {
   "shadows": "scipy.sparse.csgraph.connected_components"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.coo_matrix": {
  "data": {
   "shadows": "scipy.sparse.coo_matrix"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.datetime": {
  "data": {
   "shadows": "datetime.datetime"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.gt": {
  "data": {
   "shadows": "graph_tool"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.inspect": {
  "data": {
   "shadows": "inspect"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.izip": {
  "data": {
   "shadows": "itertools.izip"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.label_self_loops": {
  "data": {
   "shadows": "graph_tool.stats.label_self_loops"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.nx": {
  "data": {
   "shadows": "networkx"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.plt": {
  "data": {
   "shadows": "matplotlib.pyplot"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.range": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "deepgraph.deepgraph.sys": {
  "data": {
   "shadows": "sys"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.warnings": {
  "data": {
   "shadows": "warnings"
  },
  "type": "import"
 },
 "deepgraph.deepgraph.zip": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "deepgraph.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "deepgraph.functions": {
  "data": {
   "shadows": "deepgraph.functions"
  },
  "type": "import"
 },
 "deepgraph.functions.__all__": {
  "data": {
   "lineno": 26
  },
  "type": "constant"
 },
 "deepgraph.functions.absolute_import": {
  "data": {
   "shadows": "__future__.absolute_import"
  },
  "type": "import"
 },
 "deepgraph.functions.cp_intersection_strength": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.float64",
    "numpy.vstack"
   ]
  },
  "type": "function"
 },
 "deepgraph.functions.cp_node_intersection": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "deepgraph.functions.range",
    "len",
    "numpy.int",
    "numpy.zeros",
    "object"
   ]
  },
  "type": "function"
 },
 "deepgraph.functions.division": {
  "data": {
   "shadows": "__future__.division"
  },
  "type": "import"
 },
 "deepgraph.functions.great_circle_dist": {
  "data": {
   "lineno": 37,
   "symbols_in_volume": [
    "float",
    "numpy.arccos",
    "numpy.array",
    "numpy.cos",
    "numpy.nan_to_num",
    "numpy.radians",
    "numpy.sin"
   ]
  },
  "type": "function"
 },
 "deepgraph.functions.hypergeom": {
  "data": {
   "shadows": "scipy.stats.hypergeom"
  },
  "type": "import"
 },
 "deepgraph.functions.hypergeometric_p_value": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "deepgraph.functions.range",
    "len",
    "numpy.vstack",
    "numpy.zeros",
    "scipy.stats.hypergeom.sf"
   ]
  },
  "type": "function"
 },
 "deepgraph.functions.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "deepgraph.functions.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "deepgraph.functions.range": {
  "data": {
   "lineno": 20
  },
  "type": "constant"
 },
 "deepgraph.print_function": {
  "data": {
   "shadows": "__future__.print_function"
  },
  "type": "import"
 },
 "tests.test_CreateEdges": {
  "data": {
   "symbols_in_volume": [
    "enumerate",
    "float",
    "len",
    "numpy.arange",
    "numpy.array",
    "numpy.repeat",
    "numpy.triu_indices",
    "pandas.DataFrame",
    "pandas.date_range",
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.dts",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.s",
    "tests.test_CreateEdges.t",
    "tests.test_CreateEdges.tdtdic",
    "tests.test_CreateEdges.v",
    "tests.test_CreateEdges.velo"
   ]
  },
  "type": "module"
 },
 "tests.test_CreateEdges.DeepGraph": {
  "data": {
   "shadows": "deepgraph.DeepGraph"
  },
  "type": "import"
 },
 "tests.test_CreateEdges.TestCreateEdges": {
  "data": {
   "lineno": 176,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_connector": {
  "data": {
   "lineno": 193,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_connector_selector": {
  "data": {
   "lineno": 227,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.dsi_t",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v",
    "tests.test_CreateEdges.velo"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_connector_selectors": {
  "data": {
   "lineno": 247,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsf_t",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.dsi_t",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v",
    "tests.test_CreateEdges.velo"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_connectors": {
  "data": {
   "lineno": 209,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_fail_common_output_rs": {
  "data": {
   "lineno": 530,
   "symbols_in_volume": [
    "AssertionError",
    "deepgraph.DeepGraph",
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsf_velo_t",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.pytest",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_fail_connector_selector_order": {
  "data": {
   "lineno": 554,
   "symbols_in_volume": [
    "KeyError",
    "deepgraph.DeepGraph",
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.fail_connector_selector_order",
    "tests.test_CreateEdges.pytest",
    "tests.test_CreateEdges.v",
    "tests.test_CreateEdges.velo"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_fail_connectors_order": {
  "data": {
   "lineno": 538,
   "symbols_in_volume": [
    "KeyError",
    "deepgraph.DeepGraph",
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.pytest",
    "tests.test_CreateEdges.v",
    "tests.test_CreateEdges.velo"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_fail_selector_ind_shape": {
  "data": {
   "lineno": 522,
   "symbols_in_volume": [
    "AssertionError",
    "deepgraph.DeepGraph",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.fail_ind_shape",
    "tests.test_CreateEdges.pytest",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_fail_selector_r_shape": {
  "data": {
   "lineno": 514,
   "symbols_in_volume": [
    "AssertionError",
    "deepgraph.DeepGraph",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.fail_r_shape",
    "tests.test_CreateEdges.pytest",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_fail_selectors_order": {
  "data": {
   "lineno": 546,
   "symbols_in_volume": [
    "KeyError",
    "deepgraph.DeepGraph",
    "tests.test_CreateEdges.dsi_dsf_t",
    "tests.test_CreateEdges.fail_selector_order",
    "tests.test_CreateEdges.pytest",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_from_pos": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.from_pos",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_ft_dt_min_chunk_size_hdf": {
  "data": {
   "lineno": 669,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "int",
    "pandas.HDFStore",
    "pandas.util.testing.assert_frame_equal",
    "str",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.min_chunk_size",
    "tests.test_CreateEdges.pytest",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_ft_fail_sorted": {
  "data": {
   "lineno": 730,
   "symbols_in_volume": [
    "AssertionError",
    "deepgraph.DeepGraph",
    "tests.test_CreateEdges.pytest",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_ft_from_pos": {
  "data": {
   "lineno": 693,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.ft_from_pos",
    "tests.test_CreateEdges.s",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_ft_ftt_order": {
  "data": {
   "lineno": 633,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.dsf_velo_t",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_ft_max_pairs": {
  "data": {
   "lineno": 719,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.max_pairs",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_ft_min_chunk_size": {
  "data": {
   "lineno": 645,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "int",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.min_chunk_size",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_ft_r_dep_connector": {
  "data": {
   "lineno": 620,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "int",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.ft_r_dep",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_ft_sdt": {
  "data": {
   "lineno": 586,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "int",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_ft_sdt_hdf": {
  "data": {
   "lineno": 598,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.HDFStore",
    "pandas.util.testing.assert_frame_equal",
    "str",
    "tests.test_CreateEdges.dsi_dsf_t",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.pytest",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_ft_sf": {
  "data": {
   "lineno": 575,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_ft_si": {
  "data": {
   "lineno": 564,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_ft_to_pos": {
  "data": {
   "lineno": 706,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.ft_to_pos",
    "tests.test_CreateEdges.s",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_hdf_key": {
  "data": {
   "lineno": 446,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.HDFStore",
    "pandas.util.testing.assert_frame_equal",
    "str",
    "tests.test_CreateEdges.dsi_dsf_t",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.pytest",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_hdf_step_size": {
  "data": {
   "lineno": 474,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.HDFStore",
    "pandas.util.testing.assert_frame_equal",
    "str",
    "tests.test_CreateEdges.dsi_dsf_t",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.pytest",
    "tests.test_CreateEdges.step_size",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_logging": {
  "data": {
   "lineno": 496,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "str",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_no_arguments": {
  "data": {
   "lineno": 178,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_no_transfer_r": {
  "data": {
   "lineno": 377,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v",
    "tests.test_CreateEdges.velo"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_no_transfer_rs": {
  "data": {
   "lineno": 396,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v",
    "tests.test_CreateEdges.velo"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_r_dep_selector": {
  "data": {
   "lineno": 268,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.dsf_velo_t",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.dsi_t",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_r_dtype_dic": {
  "data": {
   "lineno": 356,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "numpy.float32",
    "numpy.uint8",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_selector": {
  "data": {
   "lineno": 289,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.dsi_dsf_t",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_step_size": {
  "data": {
   "lineno": 416,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.step_size",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_to_pos": {
  "data": {
   "lineno": 436,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.to_pos",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_transfer_feature": {
  "data": {
   "lineno": 308,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.s",
    "tests.test_CreateEdges.t",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.TestCreateEdges.test_transfer_features": {
  "data": {
   "lineno": 330,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_CreateEdges.e_full_true",
    "tests.test_CreateEdges.s",
    "tests.test_CreateEdges.t",
    "tests.test_CreateEdges.v"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.dsf": {
  "data": {
   "lineno": 55
  },
  "type": "function"
 },
 "tests.test_CreateEdges.dsf_t": {
  "data": {
   "lineno": 78,
   "symbols_in_volume": [
    "tests.test_CreateEdges.dsf"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.dsf_velo_t": {
  "data": {
   "lineno": 84,
   "symbols_in_volume": [
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.velo"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.dsi": {
  "data": {
   "lineno": 50
  },
  "type": "function"
 },
 "tests.test_CreateEdges.dsi_dsf_t": {
  "data": {
   "lineno": 92,
   "symbols_in_volume": [
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.velo"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.dsi_t": {
  "data": {
   "lineno": 72,
   "symbols_in_volume": [
    "tests.test_CreateEdges.dsi"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.dts": {
  "data": {
   "lineno": 32
  },
  "type": "constant"
 },
 "tests.test_CreateEdges.e_full_true": {
  "data": {
   "lineno": 44
  },
  "type": "constant"
 },
 "tests.test_CreateEdges.fail_connector_selector_order": {
  "data": {
   "lineno": 107,
   "symbols_in_volume": [
    "tests.test_CreateEdges.dsi"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.fail_ind_shape": {
  "data": {
   "lineno": 123,
   "symbols_in_volume": [
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.velo"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.fail_r_shape": {
  "data": {
   "lineno": 113,
   "symbols_in_volume": [
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsi",
    "tests.test_CreateEdges.velo"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.fail_selector_order": {
  "data": {
   "lineno": 101,
   "symbols_in_volume": [
    "tests.test_CreateEdges.dsi"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.from_pos": {
  "data": {
   "lineno": 146,
   "symbols_in_volume": [
    "tests.test_CreateEdges.p_from_pos",
    "tests.test_CreateEdges.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.ft_from_pos": {
  "data": {
   "lineno": 161,
   "symbols_in_volume": [
    "tests.test_CreateEdges.p_ft_from_pos",
    "tests.test_CreateEdges.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.ft_r_dep": {
  "data": {
   "lineno": 65,
   "symbols_in_volume": [
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.velo"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.ft_to_pos": {
  "data": {
   "lineno": 166,
   "symbols_in_volume": [
    "tests.test_CreateEdges.p_ft_to_pos",
    "tests.test_CreateEdges.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.max_pairs": {
  "data": {
   "lineno": 171,
   "symbols_in_volume": [
    "tests.test_CreateEdges.p_max_pairs",
    "tests.test_CreateEdges.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.min_chunk_size": {
  "data": {
   "lineno": 156,
   "symbols_in_volume": [
    "tests.test_CreateEdges.p_min_chunk_size",
    "tests.test_CreateEdges.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_CreateEdges.p_from_pos": {
  "data": {
   "lineno": 133
  },
  "type": "constant"
 },
 "tests.test_CreateEdges.p_ft_from_pos": {
  "data": {
   "lineno": 136
  },
  "type": "constant"
 },
 "tests.test_CreateEdges.p_ft_to_pos": {
  "data": {
   "lineno": 137
  },
  "type": "constant"
 },
 "tests.test_CreateEdges.p_max_pairs": {
  "data": {
   "lineno": 138
  },
  "type": "constant"
 },
 "tests.test_CreateEdges.p_min_chunk_size": {
  "data": {
   "lineno": 135
  },
  "type": "constant"
 },
 "tests.test_CreateEdges.p_step_size": {
  "data": {
   "lineno": 132
  },
  "type": "constant"
 },
 "tests.test_CreateEdges.p_to_pos": {
  "data": {
   "lineno": 134
  },
  "type": "constant"
 },
 "tests.test_CreateEdges.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_CreateEdges.pdt": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "tests.test_CreateEdges.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_CreateEdges.s": {
  "data": {
   "lineno": 38
  },
  "type": "constant"
 },
 "tests.test_CreateEdges.step_size": {
  "data": {
   "lineno": 141,
   "symbols_in_volume": [
    "tests.test_CreateEdges.p_step_size",
    "tests.test_CreateEdges.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.t": {
  "data": {
   "lineno": 39
  },
  "type": "constant"
 },
 "tests.test_CreateEdges.tdtdic": {
  "data": {
   "lineno": 33
  },
  "type": "constant"
 },
 "tests.test_CreateEdges.to_pos": {
  "data": {
   "lineno": 151,
   "symbols_in_volume": [
    "tests.test_CreateEdges.p_to_pos",
    "tests.test_CreateEdges.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_CreateEdges.v": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 },
 "tests.test_CreateEdges.velo": {
  "data": {
   "lineno": 60,
   "symbols_in_volume": [
    "tests.test_CreateEdges.dsf",
    "tests.test_CreateEdges.dsi"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph": {
  "data": {
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "pandas.DataFrame",
    "tests.test_DeepGraph.g",
    "tests.test_DeepGraph.some_relations",
    "tests.test_DeepGraph.v"
   ]
  },
  "type": "module"
 },
 "tests.test_DeepGraph.DeepGraph": {
  "data": {
   "shadows": "deepgraph.DeepGraph"
  },
  "type": "import"
 },
 "tests.test_DeepGraph.TestAppendCP": {
  "data": {
   "lineno": 410,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "object",
    "tests.test_DeepGraph.g",
    "tests.test_DeepGraph.v"
   ]
  },
  "type": "class"
 },
 "tests.test_DeepGraph.TestAppendCP.test_consolidate_singles": {
  "data": {
   "lineno": 426,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.utils.assert_allclose",
    "tests.test_DeepGraph.g",
    "tests.test_DeepGraph.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestAppendCP.test_defaults": {
  "data": {
   "lineno": 415,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.testing.utils.assert_allclose",
    "tests.test_DeepGraph.g",
    "tests.test_DeepGraph.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestInterfaces": {
  "data": {
   "lineno": 264,
   "symbols_in_volume": [
    "deepgraph.DeepGraph",
    "numpy.nan",
    "object",
    "tests.test_DeepGraph.g",
    "tests.test_DeepGraph.v"
   ]
  },
  "type": "class"
 },
 "tests.test_DeepGraph.TestInterfaces.test_return_cs_graph": {
  "data": {
   "lineno": 285,
   "symbols_in_volume": [
    "numpy.array",
    "numpy.nan",
    "numpy.testing.utils.assert_allclose",
    "tests.test_DeepGraph.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestInterfaces.test_return_gt_graph": {
  "data": {
   "lineno": 384,
   "symbols_in_volume": [
    "tests.test_DeepGraph.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestInterfaces.test_return_nx_graph": {
  "data": {
   "lineno": 335,
   "symbols_in_volume": [
    "tests.test_DeepGraph.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestInterfaces.test_return_nx_multigraph": {
  "data": {
   "lineno": 360,
   "symbols_in_volume": [
    "tests.test_DeepGraph.pytest"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionEdges": {
  "data": {
   "lineno": 91,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tests.test_DeepGraph.TestPartitionEdges.test_combine_groups": {
  "data": {
   "lineno": 127,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionEdges.test_n_edges": {
  "data": {
   "lineno": 142,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionEdges.test_relation": {
  "data": {
   "lineno": 93,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionEdges.test_relation_func": {
  "data": {
   "lineno": 114,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionEdges.test_relations": {
  "data": {
   "lineno": 103,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionEdges.test_return_ge": {
  "data": {
   "lineno": 154,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionGraph": {
  "data": {
   "lineno": 165,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tests.test_DeepGraph.TestPartitionGraph.test_feature": {
  "data": {
   "lineno": 167,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionGraph.test_features_agg": {
  "data": {
   "lineno": 183,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionGraph.test_n_nodes_n_edges": {
  "data": {
   "lineno": 210,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionGraph.test_return_gve": {
  "data": {
   "lineno": 236,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionNodes": {
  "data": {
   "lineno": 38,
   "symbols_in_volume": [
    "object",
    "pandas.DataFrame"
   ]
  },
  "type": "class"
 },
 "tests.test_DeepGraph.TestPartitionNodes.test_feature": {
  "data": {
   "lineno": 45,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionNodes.test_feature_funcs": {
  "data": {
   "lineno": 53,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionNodes.test_features": {
  "data": {
   "lineno": 79,
   "symbols_in_volume": [
    "pandas.DataFrame",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionNodes.test_n_nodes": {
  "data": {
   "lineno": 62,
   "symbols_in_volume": [
    "list",
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestPartitionNodes.test_return_gv": {
  "data": {
   "lineno": 71,
   "symbols_in_volume": [
    "pandas.util.testing.assert_frame_equal",
    "tests.test_DeepGraph.g"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestTriuIndices": {
  "data": {
   "lineno": 438,
   "symbols_in_volume": [
    "object"
   ]
  },
  "type": "class"
 },
 "tests.test_DeepGraph.TestTriuIndices.test_border_cases": {
  "data": {
   "lineno": 460,
   "symbols_in_volume": [
    "deepgraph._triu_indices._triu_indices",
    "numpy.triu_indices",
    "zip"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.TestTriuIndices.test_random": {
  "data": {
   "lineno": 440,
   "symbols_in_volume": [
    "deepgraph._triu_indices._triu_indices",
    "numpy.random.randint",
    "numpy.triu_indices"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph._triu_indices": {
  "data": {
   "shadows": "deepgraph._triu_indices._triu_indices"
  },
  "type": "import"
 },
 "tests.test_DeepGraph.assert_allclose": {
  "data": {
   "shadows": "numpy.testing.utils.assert_allclose"
  },
  "type": "import"
 },
 "tests.test_DeepGraph.g": {
  "data": {
   "lineno": 22
  },
  "type": "constant"
 },
 "tests.test_DeepGraph.np": {
  "data": {
   "shadows": "numpy"
  },
  "type": "import"
 },
 "tests.test_DeepGraph.pd": {
  "data": {
   "shadows": "pandas"
  },
  "type": "import"
 },
 "tests.test_DeepGraph.pdt": {
  "data": {
   "shadows": "pandas.util.testing"
  },
  "type": "import"
 },
 "tests.test_DeepGraph.pytest": {
  "data": {
   "shadows": "pytest"
  },
  "type": "import"
 },
 "tests.test_DeepGraph.some_relations": {
  "data": {
   "lineno": 26,
   "symbols_in_volume": [
    "tests.test_DeepGraph.v"
   ]
  },
  "type": "function"
 },
 "tests.test_DeepGraph.v": {
  "data": {
   "lineno": 18
  },
  "type": "constant"
 }
}